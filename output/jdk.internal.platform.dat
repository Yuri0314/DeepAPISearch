jdk.internal.platform.Container#metrics()->Metrics:::Returns the platform specific Container Metrics class or null if not supported on this platform.
jdk.internal.platform.Metrics#systemMetrics()->Metrics:::Returns an instance of the Metrics class.
jdk.internal.platform.Metrics#getProvider()->String:::Returns the interface responsible for providing the platform metrics.
jdk.internal.platform.Metrics#getCpuUsage()->long:::Returns the aggregate time, in nanoseconds, consumed by all tasks in the Isolation Group.
jdk.internal.platform.Metrics#getPerCpuUsage()->long[]:::Returns the aggregate time, in nanoseconds, consumed by all tasks in the Isolation Group, separated by CPU
jdk.internal.platform.Metrics#getCpuUserUsage()->long:::Returns the aggregate user time, in nanoseconds, consumed by all tasks in the Isolation Group.
jdk.internal.platform.Metrics#getCpuSystemUsage()->long:::Returns the aggregate system time, in nanoseconds, consumed by all tasks in the Isolation Group.
jdk.internal.platform.Metrics#getCpuPeriod()->long:::Returns the length of the scheduling period, in microseconds, for processes within the Isolation Group.
jdk.internal.platform.Metrics#getCpuQuota()->long:::Returns the total available run-time allowed, in microseconds, during each scheduling period for all tasks in the Isolation Group.
jdk.internal.platform.Metrics#getCpuShares()->long:::Returns the relative weighting of processes with the Isolation Group used for prioritizing the scheduling of processes across all Isolation Groups running on a host.
jdk.internal.platform.Metrics#getCpuNumPeriods()->long:::Returns the number of time-slice periods that have elapsed if a CPU quota has been setup for the Isolation Group; otherwise returns 0.
jdk.internal.platform.Metrics#getCpuNumThrottled()->long:::Returns the number of time-slice periods that the group has been throttled or limited due to the group exceeding its quota if a CPU quota has been setup for the Isolation Group.
jdk.internal.platform.Metrics#getCpuThrottledTime()->long:::Returns the total time duration, in nanoseconds, that the group has been throttled or limited due to the group exceeding its quota if a CPU quota has been setup for the Isolation Group.
jdk.internal.platform.Metrics#getEffectiveCpuCount()->long:::Returns the number of effective processors that this Isolation group has available to it
jdk.internal.platform.Metrics#getCpuSetCpus()->int[]:::Returns the CPUS that are available for execution of processes in the current Isolation Group
jdk.internal.platform.Metrics#getEffectiveCpuSetCpus()->int[]:::Returns the CPUS that are available and online for execution of processes within the current Isolation Group
jdk.internal.platform.Metrics#getCpuSetMems()->int[]:::Returns the memory nodes that are available for use by processes in the current Isolation Group
jdk.internal.platform.Metrics#getEffectiveCpuSetMems()->int[]:::Returns the memory nodes that are available and online for use by processes within the current Isolation Group
jdk.internal.platform.Metrics#getCpuSetMemoryPressure()->double:::Returns the (attempts per second * 1000), if enabled, that the operating system tries to satisfy a memory request for any process in the current Isolation Group when no free memory is readily available
jdk.internal.platform.Metrics#isCpuSetMemoryPressureEnabled()->boolean:::Returns the state of the memory pressure detection support.
jdk.internal.platform.Metrics#getMemoryFailCount()->long:::Returns the number of times that user memory requests in the Isolation Group have exceeded the memory limit.
jdk.internal.platform.Metrics#getMemoryLimit()->long:::Returns the maximum amount of physical memory, in bytes, that can be allocated in the Isolation Group.
jdk.internal.platform.Metrics#getMemoryMaxUsage()->long:::Returns the largest amount of physical memory, in bytes, that have been allocated in the Isolation Group.
jdk.internal.platform.Metrics#getMemoryUsage()->long:::Returns the amount of physical memory, in bytes, that is currently allocated in the current Isolation Group.
jdk.internal.platform.Metrics#getKernelMemoryFailCount()->long:::Returns the number of times that kernel memory requests in the Isolation Group have exceeded the kernel memory limit.
jdk.internal.platform.Metrics#getKernelMemoryLimit()->long:::Returns the maximum amount of kernel physical memory, in bytes, that can be allocated in the Isolation Group.
jdk.internal.platform.Metrics#getKernelMemoryMaxUsage()->long:::Returns the largest amount of kernel physical memory, in bytes, that have been allocated in the Isolation Group.
jdk.internal.platform.Metrics#getKernelMemoryUsage()->long:::Returns the amount of kernel physical memory, in bytes, that is currently allocated in the current Isolation Group.
jdk.internal.platform.Metrics#getTcpMemoryFailCount()->long:::Returns the number of times that networking memory requests in the Isolation Group have exceeded the kernel memory limit.
jdk.internal.platform.Metrics#getTcpMemoryLimit()->long:::Returns the maximum amount of networking physical memory, in bytes, that can be allocated in the Isolation Group.
jdk.internal.platform.Metrics#getTcpMemoryMaxUsage()->long:::Returns the largest amount of networking physical memory, in bytes, that have been allocated in the Isolation Group.
jdk.internal.platform.Metrics#getTcpMemoryUsage()->long:::Returns the amount of networking physical memory, in bytes, that is currently allocated in the current Isolation Group.
jdk.internal.platform.Metrics#getMemoryAndSwapFailCount()->long:::Returns the number of times that user memory requests in the Isolation Group have exceeded the memory + swap limit.
jdk.internal.platform.Metrics#getMemoryAndSwapLimit()->long:::Returns the maximum amount of physical memory and swap space, in bytes, that can be allocated in the Isolation Group.
jdk.internal.platform.Metrics#getMemoryAndSwapMaxUsage()->long:::Returns the largest amount of physical memory and swap space, in bytes, that have been allocated in the Isolation Group.
jdk.internal.platform.Metrics#getMemoryAndSwapUsage()->long:::Returns the amount of physical memory and swap space, in bytes, that is currently allocated in the current Isolation Group.
jdk.internal.platform.Metrics#isMemoryOOMKillEnabled()->boolean:::Returns the state of the Operating System Out of Memory termination policy.
jdk.internal.platform.Metrics#getMemorySoftLimit()->long:::Returns the hint to the operating system that allows groups to specify the minimum amount of physical memory that they need to achieve reasonable performance in low memory systems
jdk.internal.platform.Metrics#getBlkIOServiceCount()->long:::Returns the number of block I/O requests to the disk that have been issued by the Isolation Group.
jdk.internal.platform.Metrics#getBlkIOServiced()->long:::Returns the number of block I/O bytes that have been transferred to/from the disk by the Isolation Group.
