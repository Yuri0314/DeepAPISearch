Main#main(String...):::Compiles a source file, and executes the main method it contains:::try->new->Main->VM->getRuntimeArguments->run->catch->f->getMessage->println->System->exit->throw->e->getTargetException->finally
Main#run(String[], String[]):::Compiles a source file, and executes the main method it contains:::file->getFile->context->new->Context->mainClassName->getJavacOpts->compile->appArgs->Arrays->copyOfRange->execute
Main#getFile(String[]):::Returns the path for the filename found in the first of an array of arguments.:::if->throw->new->Fault->file->try->Paths->get->catch->throw->Errors->InvalidFilename->new->Fault->finally->if->Files->exists->throw->Errors->FileNotFound->new->Fault->return
Main#readFile(Path):::Reads a source file, ignoring the first line if it is not a Java source file and it begins with #!:::try->in->Files->newInputStream->new->BufferedInputStream->ignoreFirstLine->if->file->getFileName->toString->endsWith->else->in->mark->in->read->in->read->if->in->reset->try->r->Charset->defaultCharset->new->InputStreamReader->new->BufferedReader->sb->new->StringBuilder->if->r->readLine->sb->append->buf->new->charArr->n->while->r->read->sb->append->return->file->toUri->new->SimpleJavaFileObject->catch->finally->catch->throw->Errors->CantReadFile->new->Fault->finally
Main#getJavacOpts(String...):::Returns the subset of the runtime arguments that are relevant to javac:::javacOpts->new->ArrayList<>->sourceOpt->System->getProperty->if->source->Source->lookup->if->throw->Errors->InvalidValueForSource->new->Fault->javacOpts->List->of->addAll->for->i->javacOpts->add->return
Main#compile(Path, List, Context):::Compiles a source file, placing the class files in a map in memory:::fo->readFile->javaCompiler->JavacTool->create->stdFileMgr->javaCompiler->getStandardFileManager->try->stdFileMgr->Collections->emptyList->setLocation->catch->throw->new->java.lang.Error->finally->fm->context->getFileManager->t->javaCompiler->List->of->getTask->l->new->MainClassListener->ok->t->call->if->throw->new->Fault->if->throw->new->Fault->mainClassName->getQualifiedName->toString->return
Main#execute(String, String[], Context):::Invokes the main method of a specified class, using a class loader that will load recently compiled classes from memory.:::cl->context->ClassLoader->getSystemClassLoader->getClassLoader->try->appClass->Class->forName->if->appClass->getClassLoader->throw->Errors->UnexpectedClass->new->Fault->main->appClass->getDeclaredMethod->PUBLIC_STATIC->if->main->getModifiers->throw->new->Fault->if->main->getReturnType->equals->throw->new->Fault->main->setAccessible->main->invoke->catch->throw->Errors->CantFindClass->new->Fault->throw->Errors->CantFindMainMethod->new->Fault->throw->Errors->CantAccessMainMethod->new->Fault->invocationFrames->e->getStackTrace->target->e->getTargetException->targetTrace->target->getStackTrace->target->Arrays->copyOfRange->setStackTrace->throw->finally
Main#getMessage(Error):::Returns a localized string from a resource bundle.:::key->error->key->args->error->getArgs->try->if->ResourceBundle->getBundle->resourceBundle->getString->resource->resourceBundle->getString->message->MessageFormat->format->return->catch->return->Arrays->toString->finally
Main.MainClassListener#started(TaskEvent)::: main class listener started:::if->ev->getKind->te->ev->getTypeElement->if->te->getNestingKind
Main.Context#getFileManager(StandardJavaFileManager)::: context get file manager:::return->new->MemoryFileManager
Main.Context#getClassLoader(ClassLoader)::: context get class loader:::return->new->MemoryClassLoader
Main.MemoryFileManager#getJavaFileForOutput(Location, String, JavaFileObject.Kind, FileObject)::: memory file manager get java file for output:::if->return->createInMemoryClassFile->else->return->super->getJavaFileForOutput
Main.MemoryFileManager#createInMemoryClassFile(String)::: memory file manager create in memory class file:::uri->URI->className->replace->create->return->new->SimpleJavaFileObject
Main.MemoryClassLoader#findClass(String)::: memory class loader find class:::bytes->map->get->if->throw->new->ClassNotFoundException->return->defineClass
