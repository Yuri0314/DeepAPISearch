JVMCIServiceLocator#checkPermission()::: service locator check permission:::sm->System->getSecurityManager->if->sm->new->JVMCIPermission->checkPermission->return
JVMCIServiceLocator#getProvider(Class):::Gets the provider of the service defined by service or null if this object does not have a provider for service.:::
JVMCIServiceLocator#getJVMCIServiceLocators()::: service locator get service locators:::result->if->return->ServiceLoader->ClassLoader->getSystemClassLoader->load->if->l->new->ArrayList<>->foreach->l->add->l->trimToSize->return->return
JVMCIServiceLocator#getProviders(Class):::Gets the providers of the service defined by service by querying the available JVMCIServiceLocator providers.:::Services->checkJVMCIEnabled->sm->System->getSecurityManager->if->sm->new->JVMCIPermission->checkPermission->providers->new->ArrayList<>->foreach->getJVMCIServiceLocators->provider->access->getProvider->if->providers->add->return
Services#checkJVMCIEnabled():::Checks that JVMCI is enabled in the VM and throws an error if it isn't.:::if->throw->new->Error
Services#getSavedProperties():::Gets an unmodifiable copy of the system properties saved when System is initialized.:::checkJVMCIEnabled->if->if->throw->new->InternalError->else->if->synchronized->if->sm->System->getSecurityManager->if->sm->new->JVMCIPermission->checkPermission->VM->getSavedProperties->return
Services#getSavedProperty(String, String):::Helper method equivalent to #getSavedProperties().getOrDefault(name, def).:::return->Services->getSavedProperties->getOrDefault
Services#getSavedProperty(String):::Helper method equivalent to #getSavedProperties().get(name).:::return->Services->getSavedProperties->get
Services#initializeJVMCI():::Causes the JVMCI subsystem to be initialized if it isn't already initialized.:::checkJVMCIEnabled->try->Class->forName->catch->throw->new->InternalError->finally
Services#load0(Class)::: services load0:::if->list->servicesCache->get->if->return->if->throw->String->service->getName->format->new->InternalError->providers->ServiceLoader->ClassLoader->getSystemClassLoader->load->if->synchronized->providersList->new->ArrayList<>->foreach->providersList->add->servicesCache->put->return
Services#openJVMCITo(Module):::Opens all JVMCI packages to otherModule.:::jvmci->getModule->if->packages->jvmci->getPackages->foreach->opened->jvmci->isOpen->if->jvmci->addOpens
Services#load(Class):::Gets an Iterable of the JVMCI providers available for a given service.:::sm->System->getSecurityManager->if->sm->new->JVMCIPermission->checkPermission->return->load0
Services#loadSingle(Class, boolean):::Gets the JVMCI provider for a given service for which at most one provider must be available.:::sm->System->getSecurityManager->if->sm->new->JVMCIPermission->checkPermission->providers->load0->singleProvider->foreach->if->throw->String->service->getName->singleProvider->getClass->getName->provider->getClass->getName->format->new->InternalError->if->javaHome->Services->getSavedProperty->vmName->Services->getSavedProperty->errorMessage->new->Formatter->errorMessage->service->getName->format->errorMessage->format->errorMessage->format->throw->errorMessage->toString->new->UnsupportedOperationException->return
Services#serializeSavedProperties():::Serializes the #getSavedProperties() saved system properties to a byte array for the purpose of #initializeSavedProperties(byte[]) initializing the initial properties in the JVMCI shared library.:::if->throw->new->InternalError->return->Services->getSavedProperties->serializeProperties
Services#serializeProperties(Map)::: services serialize properties:::estimate->nonUtf8Props->foreach->props->entrySet->name->e->getKey->value->e->getValue->name->length->value->length->if->name->length->value->length->baos->new->ByteArrayOutputStream->out->new->DataOutputStream->out->props->size->writeInt->out->writeInt->foreach->props->entrySet->name->e->getKey->value->e->getValue->if->name->length->value->length->out->writeUTF->out->writeUTF->if->foreach->props->entrySet->name->e->getKey->value->e->getValue->if->name->length->value->length->utf8Name->name->getBytes->utf8Value->value->getBytes->out->writeInt->out->write->out->writeInt->out->write->return->baos->toByteArray
Services#initializeSavedProperties(byte[]):::Initialized the #getSavedProperties() saved system properties in the JVMCI shared library from the #serializeSavedProperties() serialized saved properties in the HotSpot runtime.:::if->throw->new->InternalError->Collections->deserializeProperties->unmodifiableMap
Services#deserializeProperties(byte[])::: services deserialize properties:::in->new->ByteArrayInputStream->new->DataInputStream->utf8Props->in->readInt->nonUtf8Props->in->readInt->props->new->HashMap<>->index->while->in->available->if->name->in->readUTF->value->in->readUTF->props->put->else->nameLen->in->readInt->nameBytes->new->byteArr->in->read->valueLen->in->readInt->valueBytes->new->byteArr->in->read->name->new->String->value->new->String->props->put->return
