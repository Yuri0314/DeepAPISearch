Arguments#isListProcesses()::: arguments is list processes:::return
Arguments#isListCounters()::: arguments is list counters:::return
Arguments#isShowUsage()::: arguments is show usage:::return
Arguments#getCommand()::: arguments get command:::return
Arguments#getProcessString()::: arguments get process string:::return
Arguments#readCommandFile(String)::: arguments read command file:::try->bf->new->FileReader->new->BufferedReader->sb->new->StringBuilder->s->while->bf->readLine->sb->append->append->sb->toString->catch->finally
Arguments#usage()::: arguments usage:::println->println->println->println->println->println->println->println->println->println->println->println->println->println->println
JCmd#main(String[])::: cmd main:::arg->try->new->Arguments->catch->ex->getMessage->println->Arguments->usage->System->exit->finally->if->arg->isShowUsage->Arguments->usage->System->exit->ap->try->arg->getProcessString->new->ProcessArgumentMatcher->catch->arg->getProcessString->println->System->exit->finally->if->arg->isListProcesses->foreach->ap->getVirtualMachineDescriptors->vmd->id->vmd->displayName->println->System->exit->pids->ap->getVirtualMachinePids->if->pids->isEmpty->arg->getProcessString->println->System->exit->success->foreach->println->if->arg->isListCounters->listCounters->else->try->arg->getCommand->executeCommandForPid->catch->ex->getMessage->println->ex->printStackTrace->finally->System->exit
JCmd#executeCommandForPid(String, String)::: cmd execute command for pid:::vm->VirtualMachine->attach->hvm->lines->command->split->foreach->if->line->trim->equals->break->try->in->hvm->executeJCmd->b->new->byteArr->n->messagePrinted->do->in->read->if->s->new->String->print->while->if->println->catch->finally->vm->detach
JCmd#listCounters(String)::: cmd list counters:::vmId->try->new->VmIdentifier->catch->println->return->finally->try->monitoredHost->MonitoredHost->getMonitoredHost->monitoredVm->monitoredHost->getMonitoredVm->logger->new->JStatLogger->logger->new->AscendingMonitorComparator->printSnapShot->monitoredHost->detach->catch->ex->printStackTrace->finally
JCmd.AscendingMonitorComparator#compare(Monitor, Monitor)::: ascending monitor comparator compare:::name1->m1->getName->name2->m2->getName->return->name1->compareTo
