com.sun.tools.javadoc.main.AbstractTypeImpl#typeName()->String::: abstract type impl type name
com.sun.tools.javadoc.main.AbstractTypeImpl#qualifiedTypeName()->String::: abstract type impl qualified type name
com.sun.tools.javadoc.main.AbstractTypeImpl#getElementType()->com.sun.javadoc.Type::: abstract type impl get element type
com.sun.tools.javadoc.main.AbstractTypeImpl#simpleTypeName()->String::: abstract type impl simple type name
com.sun.tools.javadoc.main.AbstractTypeImpl#name()->String::: abstract type impl name
com.sun.tools.javadoc.main.AbstractTypeImpl#qualifiedName()->String::: abstract type impl qualified name
com.sun.tools.javadoc.main.AbstractTypeImpl#toString()->String::: abstract type impl to string
com.sun.tools.javadoc.main.AbstractTypeImpl#dimension()->String::: abstract type impl dimension
com.sun.tools.javadoc.main.AbstractTypeImpl#isPrimitive()->boolean::: abstract type impl is primitive
com.sun.tools.javadoc.main.AbstractTypeImpl#asClassDoc()->ClassDoc::: abstract type impl as class doc
com.sun.tools.javadoc.main.AbstractTypeImpl#asTypeVariable()->TypeVariable::: abstract type impl as type variable
com.sun.tools.javadoc.main.AbstractTypeImpl#asWildcardType()->WildcardType::: abstract type impl as wildcard type
com.sun.tools.javadoc.main.AbstractTypeImpl#asParameterizedType()->ParameterizedType::: abstract type impl as parameterized type
com.sun.tools.javadoc.main.AbstractTypeImpl#asAnnotationTypeDoc()->AnnotationTypeDoc::: abstract type impl as annotation type doc
com.sun.tools.javadoc.main.AbstractTypeImpl#asAnnotatedType()->AnnotatedType::: abstract type impl as annotated type
com.sun.tools.javadoc.main.AnnotatedTypeImpl#annotations()->AnnotationDesc[]:::Get the annotations of this program element
com.sun.tools.javadoc.main.AnnotatedTypeImpl#underlyingType()->com.sun.javadoc.Type::: annotated type impl underlying type
com.sun.tools.javadoc.main.AnnotatedTypeImpl#asAnnotatedType()->AnnotatedType::: annotated type impl as annotated type
com.sun.tools.javadoc.main.AnnotatedTypeImpl#toString()->String::: annotated type impl to string
com.sun.tools.javadoc.main.AnnotatedTypeImpl#typeName()->String::: annotated type impl type name
com.sun.tools.javadoc.main.AnnotatedTypeImpl#qualifiedTypeName()->String::: annotated type impl qualified type name
com.sun.tools.javadoc.main.AnnotatedTypeImpl#simpleTypeName()->String::: annotated type impl simple type name
com.sun.tools.javadoc.main.AnnotatedTypeImpl#dimension()->String::: annotated type impl dimension
com.sun.tools.javadoc.main.AnnotatedTypeImpl#isPrimitive()->boolean::: annotated type impl is primitive
com.sun.tools.javadoc.main.AnnotatedTypeImpl#asClassDoc()->ClassDoc::: annotated type impl as class doc
com.sun.tools.javadoc.main.AnnotatedTypeImpl#asTypeVariable()->TypeVariable::: annotated type impl as type variable
com.sun.tools.javadoc.main.AnnotatedTypeImpl#asWildcardType()->WildcardType::: annotated type impl as wildcard type
com.sun.tools.javadoc.main.AnnotatedTypeImpl#asParameterizedType()->ParameterizedType::: annotated type impl as parameterized type
com.sun.tools.javadoc.main.AnnotationDescImpl#annotationType()->AnnotationTypeDoc:::Returns the annotation type of this annotation.
com.sun.tools.javadoc.main.AnnotationDescImpl#elementValues()->ElementValuePair[]:::Returns this annotation's elements and their values
com.sun.tools.javadoc.main.AnnotationDescImpl#isSynthesized()->boolean:::Check for the synthesized bit on the annotation.
com.sun.tools.javadoc.main.AnnotationDescImpl#toString()->String:::Returns a string representation of this annotation
com.sun.tools.javadoc.main.AnnotationDescImpl.ElementValuePairImpl#element()->AnnotationTypeElementDoc:::Returns the annotation type element.
com.sun.tools.javadoc.main.AnnotationDescImpl.ElementValuePairImpl#value()->AnnotationValue:::Returns the value associated with the annotation type element.
com.sun.tools.javadoc.main.AnnotationDescImpl.ElementValuePairImpl#toString()->String:::Returns a string representation of this pair of the form "name=value".
com.sun.tools.javadoc.main.AnnotationTypeDocImpl#isAnnotationType()->boolean:::Returns true, as this is an annotation type
com.sun.tools.javadoc.main.AnnotationTypeDocImpl#isInterface()->boolean:::Returns false
com.sun.tools.javadoc.main.AnnotationTypeDocImpl#methods(boolean)->MethodDoc[]:::Returns an empty array, as all methods are annotation type elements
com.sun.tools.javadoc.main.AnnotationTypeDocImpl#elements()->AnnotationTypeElementDoc[]:::Returns the elements of this annotation type
com.sun.tools.javadoc.main.AnnotationTypeElementDocImpl#isAnnotationTypeElement()->boolean:::Returns true, as this is an annotation type element
com.sun.tools.javadoc.main.AnnotationTypeElementDocImpl#isMethod()->boolean:::Returns false
com.sun.tools.javadoc.main.AnnotationTypeElementDocImpl#isAbstract()->boolean:::Returns false, even though this is indeed abstract
com.sun.tools.javadoc.main.AnnotationTypeElementDocImpl#defaultValue()->AnnotationValue:::Returns the default value of this element
com.sun.tools.javadoc.main.AnnotationValueImpl#value()->Object:::Returns the value
com.sun.tools.javadoc.main.AnnotationValueImpl#toString()->String:::Returns a string representation of the value.
com.sun.tools.javadoc.main.ClassDocImpl#getElementType()->com.sun.javadoc.Type::: class doc impl get element type
com.sun.tools.javadoc.main.ClassDocImpl#getFlags()->long:::Returns the flags in terms of javac's flags
com.sun.tools.javadoc.main.ClassDocImpl#getFlags(ClassSymbol)->long:::Returns the flags of a ClassSymbol in terms of javac's flags
com.sun.tools.javadoc.main.ClassDocImpl#isAnnotationType(ClassSymbol)->boolean:::Is a ClassSymbol an annotation type?
com.sun.tools.javadoc.main.ClassDocImpl#getContainingClass()->ClassSymbol:::Identify the containing class
com.sun.tools.javadoc.main.ClassDocImpl#isClass()->boolean:::Return true if this is a class, not an interface.
com.sun.tools.javadoc.main.ClassDocImpl#isOrdinaryClass()->boolean:::Return true if this is a ordinary class, not an enumeration, exception, an error, or an interface.
com.sun.tools.javadoc.main.ClassDocImpl#isEnum()->boolean:::Return true if this is an enumeration
com.sun.tools.javadoc.main.ClassDocImpl#isInterface()->boolean:::Return true if this is an interface, but not an annotation type
com.sun.tools.javadoc.main.ClassDocImpl#isException()->boolean:::Return true if this is an exception class
com.sun.tools.javadoc.main.ClassDocImpl#isError()->boolean:::Return true if this is an error class
com.sun.tools.javadoc.main.ClassDocImpl#isThrowable()->boolean:::Return true if this is a throwable class
com.sun.tools.javadoc.main.ClassDocImpl#isAbstract()->boolean:::Return true if this class is abstract
com.sun.tools.javadoc.main.ClassDocImpl#isSynthetic()->boolean:::Returns true if this class was synthesized by the compiler.
com.sun.tools.javadoc.main.ClassDocImpl#isIncluded()->boolean::: class doc impl is included
com.sun.tools.javadoc.main.ClassDocImpl#containingPackage()->PackageDoc:::Return the package that this class is contained in.
com.sun.tools.javadoc.main.ClassDocImpl#name()->String:::Return the class name without package qualifier - but with enclosing class qualifier - as a String
com.sun.tools.javadoc.main.ClassDocImpl#qualifiedName()->String:::Return the qualified class name as a String
com.sun.tools.javadoc.main.ClassDocImpl#typeName()->String:::Return unqualified name of type excluding any dimension information
com.sun.tools.javadoc.main.ClassDocImpl#qualifiedTypeName()->String:::Return qualified name of type excluding any dimension information
com.sun.tools.javadoc.main.ClassDocImpl#simpleTypeName()->String:::Return the simple name of this type.
com.sun.tools.javadoc.main.ClassDocImpl#toString()->String:::Return the qualified name and any type parameters
com.sun.tools.javadoc.main.ClassDocImpl#getClassName(ClassSymbol, boolean)->String:::Return the class name as a string
com.sun.tools.javadoc.main.ClassDocImpl#classToString(DocEnv, ClassSymbol, boolean)->String:::Return the class name with any type parameters as a string
com.sun.tools.javadoc.main.ClassDocImpl#isGeneric(ClassSymbol)->boolean:::Is this class (or any enclosing class) generic?  That is, does it have type parameters?
com.sun.tools.javadoc.main.ClassDocImpl#typeParameters()->TypeVariable[]:::Return the formal type parameters of this class or interface
com.sun.tools.javadoc.main.ClassDocImpl#typeParamTags()->ParamTag[]:::Return the type parameter tags of this class or interface.
com.sun.tools.javadoc.main.ClassDocImpl#modifiers()->String:::Return the modifier string for this class
com.sun.tools.javadoc.main.ClassDocImpl#modifierSpecifier()->int::: class doc impl modifier specifier
com.sun.tools.javadoc.main.ClassDocImpl#superclass()->ClassDoc:::Return the superclass of this class
com.sun.tools.javadoc.main.ClassDocImpl#superclassType()->com.sun.javadoc.Type:::Return the superclass of this class
com.sun.tools.javadoc.main.ClassDocImpl#subclassOf(ClassDoc)->boolean:::Test whether this class is a subclass of the specified class.
com.sun.tools.javadoc.main.ClassDocImpl#interfaces()->ClassDoc[]:::Return interfaces implemented by this class or interfaces extended by this interface.
com.sun.tools.javadoc.main.ClassDocImpl#interfaceTypes()->com.sun.javadoc.Type[]:::Return interfaces implemented by this class or interfaces extended by this interface
com.sun.tools.javadoc.main.ClassDocImpl#fields(boolean)->FieldDoc[]:::Return fields in class.
com.sun.tools.javadoc.main.ClassDocImpl#fields()->FieldDoc[]:::Return included fields in class.
com.sun.tools.javadoc.main.ClassDocImpl#enumConstants()->FieldDoc[]:::Return the enum constants if this is an enum type.
com.sun.tools.javadoc.main.ClassDocImpl#methods(boolean)->MethodDoc[]:::Return methods in class
com.sun.tools.javadoc.main.ClassDocImpl#methods()->MethodDoc[]:::Return included methods in class.
com.sun.tools.javadoc.main.ClassDocImpl#constructors(boolean)->ConstructorDoc[]:::Return constructors in class.
com.sun.tools.javadoc.main.ClassDocImpl#constructors()->ConstructorDoc[]:::Return included constructors in class.
com.sun.tools.javadoc.main.ClassDocImpl#addAllClasses(ListBuffer, boolean)->void:::Adds all inner classes of this class, and their inner classes recursively, to the list l.
com.sun.tools.javadoc.main.ClassDocImpl#innerClasses(boolean)->ClassDoc[]:::Return inner classes within this class.
com.sun.tools.javadoc.main.ClassDocImpl#innerClasses()->ClassDoc[]:::Return included inner classes within this class.
com.sun.tools.javadoc.main.ClassDocImpl#findClass(String)->ClassDoc::: class doc impl find class
com.sun.tools.javadoc.main.ClassDocImpl#findMethod(String, String[])->MethodDocImpl:::Find a method in this class scope
com.sun.tools.javadoc.main.ClassDocImpl#findConstructor(String, String[])->ConstructorDoc:::Find constructor in this class.
com.sun.tools.javadoc.main.ClassDocImpl#findField(String)->FieldDoc:::Find a field in this class scope
com.sun.tools.javadoc.main.ClassDocImpl#importedClasses()->ClassDoc[]:::Get the list of classes declared as imported
com.sun.tools.javadoc.main.ClassDocImpl#importedPackages()->PackageDoc[]:::Get the list of packages declared as imported
com.sun.tools.javadoc.main.ClassDocImpl#dimension()->String:::Return the type's dimension information
com.sun.tools.javadoc.main.ClassDocImpl#asClassDoc()->ClassDoc:::Return this type as a class, which it already is.
com.sun.tools.javadoc.main.ClassDocImpl#asAnnotationTypeDoc()->AnnotationTypeDoc:::Return null (unless overridden), as this is not an annotation type.
com.sun.tools.javadoc.main.ClassDocImpl#asParameterizedType()->ParameterizedType:::Return null, as this is not a class instantiation.
com.sun.tools.javadoc.main.ClassDocImpl#asTypeVariable()->TypeVariable:::Return null, as this is not a type variable.
com.sun.tools.javadoc.main.ClassDocImpl#asWildcardType()->WildcardType:::Return null, as this is not a wildcard type.
com.sun.tools.javadoc.main.ClassDocImpl#asAnnotatedType()->AnnotatedType:::Returns null, as this is not an annotated type.
com.sun.tools.javadoc.main.ClassDocImpl#isPrimitive()->boolean:::Return false, as this is not a primitive type.
com.sun.tools.javadoc.main.ClassDocImpl#isSerializable()->boolean:::Return true if this class implements java.io.Serializable
com.sun.tools.javadoc.main.ClassDocImpl#isExternalizable()->boolean:::Return true if this class implements java.io.Externalizable.
com.sun.tools.javadoc.main.ClassDocImpl#serializationMethods()->MethodDoc[]:::Return the serialization methods for this class.
com.sun.tools.javadoc.main.ClassDocImpl#serializableFields()->FieldDoc[]:::Return the Serializable fields of class.  Return either a list of default fields documented by serial tag<br> or return a single FieldDoc for serialPersistentField member
com.sun.tools.javadoc.main.ClassDocImpl#definesSerializableFields()->boolean:::Return true if Serializable fields are explicitly defined with the special class member serialPersistentFields.
com.sun.tools.javadoc.main.ClassDocImpl#isRuntimeException()->boolean:::Determine if a class is a RuntimeException
com.sun.tools.javadoc.main.ClassDocImpl#position()->SourcePosition:::Return the source position of the entity, or null if no position is available.
com.sun.tools.javadoc.main.Comment#commentText()->String:::Return the text of the comment.
com.sun.tools.javadoc.main.Comment#tags()->Tag[]:::Return all tags in this comment.
com.sun.tools.javadoc.main.Comment#tags(String)->Tag[]:::Return tags of the specified kind in this comment.
com.sun.tools.javadoc.main.Comment#throwsTags()->ThrowsTag[]:::Return throws tags in this comment.
com.sun.tools.javadoc.main.Comment#paramTags()->ParamTag[]:::Return param tags (excluding type param tags) in this comment.
com.sun.tools.javadoc.main.Comment#typeParamTags()->ParamTag[]:::Return type param tags in this comment.
com.sun.tools.javadoc.main.Comment#seeTags()->SeeTag[]:::Return see also tags in this comment.
com.sun.tools.javadoc.main.Comment#serialFieldTags()->SerialFieldTag[]:::Return serialField tags in this comment.
com.sun.tools.javadoc.main.Comment#getInlineTags(DocImpl, String)->Tag[]:::Return array of tags with text and inline See Tags for a Doc comment.
com.sun.tools.javadoc.main.Comment#firstSentenceTags(DocImpl, String)->Tag[]:::Return array of tags for the locale specific first sentence in the text.
com.sun.tools.javadoc.main.Comment#toString()->String:::Return text for this Doc comment.
com.sun.tools.javadoc.main.ConstructorDocImpl#isConstructor()->boolean:::Return true if it is a constructor, which it is.
com.sun.tools.javadoc.main.ConstructorDocImpl#name()->String:::Get the name.
com.sun.tools.javadoc.main.ConstructorDocImpl#qualifiedName()->String:::Get the name.
com.sun.tools.javadoc.main.ConstructorDocImpl#toString()->String:::Returns a string representation of this constructor
com.sun.tools.javadoc.main.DocEnv#instance(Context)->DocEnv::: doc env instance
com.sun.tools.javadoc.main.DocEnv#setSilent(boolean)->void::: doc env set silent
com.sun.tools.javadoc.main.DocEnv#lookupClass(String)->ClassDocImpl:::Look up ClassDoc by qualified name.
com.sun.tools.javadoc.main.DocEnv#loadClass(String)->ClassDocImpl:::Load ClassDoc by qualified name.
com.sun.tools.javadoc.main.DocEnv#lookupPackage(String)->PackageDocImpl:::Look up PackageDoc by qualified name.
com.sun.tools.javadoc.main.DocEnv#getClassSymbol(String)->ClassSymbol:::Retrieve class symbol by fully-qualified name.
com.sun.tools.javadoc.main.DocEnv#setLocale(String)->void:::Set the locale.
com.sun.tools.javadoc.main.DocEnv#shouldDocument(VarSymbol)->boolean:::Check whether this member should be documented.
com.sun.tools.javadoc.main.DocEnv#shouldDocument(MethodSymbol)->boolean:::Check whether this member should be documented.
com.sun.tools.javadoc.main.DocEnv#shouldDocument(ClassSymbol)->boolean:::check whether this class should be documented.
com.sun.tools.javadoc.main.DocEnv#isVisible(ClassSymbol)->boolean:::Check the visibility if this is an nested class
com.sun.tools.javadoc.main.DocEnv#printError(String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.DocEnv#error(DocImpl, String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.DocEnv#error(SourcePosition, String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.DocEnv#printError(SourcePosition, String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.DocEnv#error(DocImpl, String, String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.DocEnv#error(DocImpl, String, String, String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.DocEnv#error(DocImpl, String, String, String, String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.DocEnv#printWarning(String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.DocEnv#warning(DocImpl, String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.DocEnv#printWarning(SourcePosition, String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.DocEnv#warning(DocImpl, String, String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.DocEnv#warning(DocImpl, String, String, String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.DocEnv#warning(DocImpl, String, String, String, String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.DocEnv#warning(DocImpl, String, String, String, String, String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.DocEnv#printNotice(String)->void:::Print a message.
com.sun.tools.javadoc.main.DocEnv#notice(String)->void:::Print a message.
com.sun.tools.javadoc.main.DocEnv#printNotice(SourcePosition, String)->void:::Print a message.
com.sun.tools.javadoc.main.DocEnv#notice(String, String)->void:::Print a message.
com.sun.tools.javadoc.main.DocEnv#notice(String, String, String)->void:::Print a message.
com.sun.tools.javadoc.main.DocEnv#notice(String, String, String, String)->void:::Print a message.
com.sun.tools.javadoc.main.DocEnv#exit()->void:::Exit, reporting errors and warnings.
com.sun.tools.javadoc.main.DocEnv#getPackageDoc(PackageSymbol)->PackageDocImpl:::Return the PackageDoc of this package symbol.
com.sun.tools.javadoc.main.DocEnv#makePackageDoc(PackageSymbol, TreePath)->void:::Create the PackageDoc (or a subtype) for a package symbol.
com.sun.tools.javadoc.main.DocEnv#getClassDoc(ClassSymbol)->ClassDocImpl:::Return the ClassDoc (or a subtype) of this class symbol.
com.sun.tools.javadoc.main.DocEnv#makeClassDoc(ClassSymbol, TreePath)->void:::Create the ClassDoc (or a subtype) for a class symbol.
com.sun.tools.javadoc.main.DocEnv#isAnnotationType(ClassSymbol)->boolean::: doc env is annotation type
com.sun.tools.javadoc.main.DocEnv#isAnnotationType(JCClassDecl)->boolean::: doc env is annotation type
com.sun.tools.javadoc.main.DocEnv#getFieldDoc(VarSymbol)->FieldDocImpl:::Return the FieldDoc of this var symbol.
com.sun.tools.javadoc.main.DocEnv#makeFieldDoc(VarSymbol, TreePath)->void:::Create a FieldDoc for a var symbol.
com.sun.tools.javadoc.main.DocEnv#makeMethodDoc(MethodSymbol, TreePath)->void:::Create a MethodDoc for this MethodSymbol
com.sun.tools.javadoc.main.DocEnv#getMethodDoc(MethodSymbol)->MethodDocImpl:::Return the MethodDoc for a MethodSymbol
com.sun.tools.javadoc.main.DocEnv#makeConstructorDoc(MethodSymbol, TreePath)->void:::Create the ConstructorDoc for a MethodSymbol
com.sun.tools.javadoc.main.DocEnv#getConstructorDoc(MethodSymbol)->ConstructorDocImpl:::Return the ConstructorDoc for a MethodSymbol
com.sun.tools.javadoc.main.DocEnv#makeAnnotationTypeElementDoc(MethodSymbol, TreePath)->void:::Create the AnnotationTypeElementDoc for a MethodSymbol
com.sun.tools.javadoc.main.DocEnv#getAnnotationTypeElementDoc(MethodSymbol)->AnnotationTypeElementDocImpl:::Return the AnnotationTypeElementDoc for a MethodSymbol
com.sun.tools.javadoc.main.DocEnv#getParameterizedType(ClassType)->ParameterizedTypeImpl:::Return the ParameterizedType of this instantiation
com.sun.tools.javadoc.main.DocEnv#getTreePath(JCCompilationUnit)->TreePath::: doc env get tree path
com.sun.tools.javadoc.main.DocEnv#getTreePath(JCCompilationUnit, JCPackageDecl)->TreePath::: doc env get tree path
com.sun.tools.javadoc.main.DocEnv#getTreePath(JCCompilationUnit, JCClassDecl)->TreePath::: doc env get tree path
com.sun.tools.javadoc.main.DocEnv#getTreePath(JCCompilationUnit, JCClassDecl, JCTree)->TreePath::: doc env get tree path
com.sun.tools.javadoc.main.DocEnv#setEncoding(String)->void:::Set the encoding.
com.sun.tools.javadoc.main.DocEnv#getEncoding()->String:::Get the encoding.
com.sun.tools.javadoc.main.DocEnv#translateModifiers(long)->int:::Convert modifier bits from private coding used by the compiler to that of java.lang.reflect.Modifier.
com.sun.tools.javadoc.main.DocEnv#initDoclint(Collection, Collection, String)->void::: doc env init doclint
com.sun.tools.javadoc.main.DocEnv#initJavaScriptScanner(boolean)->JavaScriptScanner::: doc env init java script scanner
com.sun.tools.javadoc.main.DocEnv#showTagMessages()->boolean::: doc env show tag messages
com.sun.tools.javadoc.main.DocEnv#shouldCheck(CompilationUnitTree)->boolean::: doc env should check
com.sun.tools.javadoc.main.DocImpl#documentation()->String:::So subclasses have the option to do lazy initialization of "documentation" string.
com.sun.tools.javadoc.main.DocImpl#comment()->Comment:::For lazy initialization of comment.
com.sun.tools.javadoc.main.DocImpl#commentText()->String:::Return the text of the comment for this doc item
com.sun.tools.javadoc.main.DocImpl#tags()->Tag[]:::Return all tags in this Doc item.
com.sun.tools.javadoc.main.DocImpl#tags(String)->Tag[]:::Return tags of the specified kind in this Doc item.
com.sun.tools.javadoc.main.DocImpl#seeTags()->SeeTag[]:::Return the see also tags in this Doc item.
com.sun.tools.javadoc.main.DocImpl#inlineTags()->Tag[]::: doc impl inline tags
com.sun.tools.javadoc.main.DocImpl#firstSentenceTags()->Tag[]::: doc impl first sentence tags
com.sun.tools.javadoc.main.DocImpl#readHTMLDocumentation(InputStream, FileObject)->String:::Utility for subclasses which read HTML documentation files.
com.sun.tools.javadoc.main.DocImpl#getRawCommentText()->String:::Return the full unprocessed text of the comment
com.sun.tools.javadoc.main.DocImpl#setRawCommentText(String)->void:::Set the full unprocessed text of the comment
com.sun.tools.javadoc.main.DocImpl#setTreePath(TreePath)->void:::Set the full unprocessed text of the comment and tree path.
com.sun.tools.javadoc.main.DocImpl#key()->CollationKey:::return a key for sorting.
com.sun.tools.javadoc.main.DocImpl#generateKey()->CollationKey:::Generate a key for sorting
com.sun.tools.javadoc.main.DocImpl#toString()->String:::Returns a string representation of this Doc item.
com.sun.tools.javadoc.main.DocImpl#name()->String:::Returns the name of this Doc item.
com.sun.tools.javadoc.main.DocImpl#qualifiedName()->String:::Returns the qualified name of this Doc item.
com.sun.tools.javadoc.main.DocImpl#compareTo(Object)->int:::Compares this Object with the specified Object for order
com.sun.tools.javadoc.main.DocImpl#isField()->boolean:::Is this Doc item a field?  False until overridden.
com.sun.tools.javadoc.main.DocImpl#isEnumConstant()->boolean:::Is this Doc item an enum constant?  False until overridden.
com.sun.tools.javadoc.main.DocImpl#isConstructor()->boolean:::Is this Doc item a constructor?  False until overridden.
com.sun.tools.javadoc.main.DocImpl#isMethod()->boolean:::Is this Doc item a method (but not a constructor or annotation type element)? False until overridden.
com.sun.tools.javadoc.main.DocImpl#isAnnotationTypeElement()->boolean:::Is this Doc item an annotation type element? False until overridden.
com.sun.tools.javadoc.main.DocImpl#isInterface()->boolean:::Is this Doc item a interface (but not an annotation type)? False until overridden.
com.sun.tools.javadoc.main.DocImpl#isException()->boolean:::Is this Doc item a exception class?  False until overridden.
com.sun.tools.javadoc.main.DocImpl#isError()->boolean:::Is this Doc item a error class?  False until overridden.
com.sun.tools.javadoc.main.DocImpl#isEnum()->boolean:::Is this Doc item an enum type?  False until overridden.
com.sun.tools.javadoc.main.DocImpl#isAnnotationType()->boolean:::Is this Doc item an annotation type?  False until overridden.
com.sun.tools.javadoc.main.DocImpl#isOrdinaryClass()->boolean:::Is this Doc item an ordinary class (i.e
com.sun.tools.javadoc.main.DocImpl#isClass()->boolean:::Is this Doc item a class (and not an interface or annotation type)? This includes ordinary classes, enums, errors and exceptions
com.sun.tools.javadoc.main.DocImpl#isIncluded()->boolean:::return true if this Doc is include in the active set.
com.sun.tools.javadoc.main.DocImpl#position()->SourcePosition:::Return the source position of the entity, or null if no position is available.
com.sun.tools.javadoc.main.DocletInvoker#start(RootDoc)->boolean:::Generate documentation here
com.sun.tools.javadoc.main.DocletInvoker#optionLength(String)->int:::Check for doclet added options here
com.sun.tools.javadoc.main.DocletInvoker#validOptions(List)->boolean:::Let doclet check that all options are OK
com.sun.tools.javadoc.main.DocletInvoker#languageVersion()->LanguageVersion:::Return the language version supported by this doclet
com.sun.tools.javadoc.main.DocLocale#localeSpecificFirstSentence(DocImpl, String)->String::: doc locale locale specific first sentence
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#getFlags()->long:::Returns the flags in terms of javac's flags
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#getContainingClass()->ClassSymbol:::Identify the containing class
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#isNative()->boolean:::Return true if this method is native
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#isSynchronized()->boolean:::Return true if this method is synchronized
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#isVarArgs()->boolean:::Return true if this method was declared to take a variable number of arguments.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#isSynthetic()->boolean:::Returns true if this field was synthesized by the compiler.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#isIncluded()->boolean::: executable member doc impl is included
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#throwsTags()->ThrowsTag[]:::Return the throws tags in this method.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#paramTags()->ParamTag[]:::Return the param tags in this method, excluding the type parameter tags.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#typeParamTags()->ParamTag[]:::Return the type parameter tags in this method.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#thrownExceptions()->ClassDoc[]:::Return exceptions this method or constructor throws.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#thrownExceptionTypes()->com.sun.javadoc.Type[]:::Return exceptions this method or constructor throws
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#parameters()->Parameter[]:::Get argument information.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#receiverType()->com.sun.javadoc.Type:::Get the receiver type of this executable element.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#typeParameters()->TypeVariable[]:::Return the formal type parameters of this method or constructor
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#signature()->String:::Get the signature
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#flatSignature()->String:::Get flat signature
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#typeParametersString()->String::: executable member doc impl type parameters string
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#generateKey()->CollationKey:::Generate a key for sorting.
com.sun.tools.javadoc.main.ExecutableMemberDocImpl#position()->SourcePosition:::Return the source position of the entity, or null if no position is available.
com.sun.tools.javadoc.main.FieldDocImpl#getFlags()->long:::Returns the flags in terms of javac's flags
com.sun.tools.javadoc.main.FieldDocImpl#getContainingClass()->ClassSymbol:::Identify the containing class
com.sun.tools.javadoc.main.FieldDocImpl#type()->com.sun.javadoc.Type:::Get type of this field.
com.sun.tools.javadoc.main.FieldDocImpl#constantValue()->Object:::Get the value of a constant field.
com.sun.tools.javadoc.main.FieldDocImpl#constantValueExpression()->String:::Get the value of a constant field.
com.sun.tools.javadoc.main.FieldDocImpl#constantValueExpression(Object)->String:::A static version of the above.
com.sun.tools.javadoc.main.FieldDocImpl#isIncluded()->boolean:::Return true if this field is included in the active set.
com.sun.tools.javadoc.main.FieldDocImpl#isField()->boolean:::Is this Doc item a field (but not an enum constant?
com.sun.tools.javadoc.main.FieldDocImpl#isEnumConstant()->boolean:::Is this Doc item an enum constant? (For legacy doclets, return false.)
com.sun.tools.javadoc.main.FieldDocImpl#isTransient()->boolean:::Return true if this field is transient
com.sun.tools.javadoc.main.FieldDocImpl#isVolatile()->boolean:::Return true if this field is volatile
com.sun.tools.javadoc.main.FieldDocImpl#isSynthetic()->boolean:::Returns true if this field was synthesized by the compiler.
com.sun.tools.javadoc.main.FieldDocImpl#serialFieldTags()->SerialFieldTag[]:::Return the serialField tags in this FieldDocImpl item.
com.sun.tools.javadoc.main.FieldDocImpl#name()->String::: field doc impl name
com.sun.tools.javadoc.main.FieldDocImpl#qualifiedName()->String::: field doc impl qualified name
com.sun.tools.javadoc.main.FieldDocImpl#position()->SourcePosition:::Return the source position of the entity, or null if no position is available.
com.sun.tools.javadoc.main.JavadocClassFinder#instance(Context)->JavadocClassFinder::: javadoc class finder instance
com.sun.tools.javadoc.main.JavadocClassFinder#preRegister(Context)->void::: javadoc class finder pre register
com.sun.tools.javadoc.main.JavadocClassFinder#getPackageFileKinds()->EnumSet:::Override getPackageFileKinds to include search for package.html
com.sun.tools.javadoc.main.JavadocClassFinder#extraFileActions(PackageSymbol, JavaFileObject)->void:::Override extraFileActions to check for package documentation
com.sun.tools.javadoc.main.JavadocEnter#instance(Context)->JavadocEnter::: javadoc enter instance
com.sun.tools.javadoc.main.JavadocEnter#preRegister(Context)->void::: javadoc enter pre register
com.sun.tools.javadoc.main.JavadocEnter#main(List)->void::: javadoc enter main
com.sun.tools.javadoc.main.JavadocEnter#visitTopLevel(JCCompilationUnit)->void::: javadoc enter visit top level
com.sun.tools.javadoc.main.JavadocEnter#visitClassDef(JCClassDecl)->void::: javadoc enter visit class def
com.sun.tools.javadoc.main.JavadocEnter#duplicateClass(DiagnosticPosition, ClassSymbol)->void:::Don't complain about a duplicate class.
com.sun.tools.javadoc.main.JavadocMemberEnter#instance0(Context)->JavadocMemberEnter::: javadoc member enter instance0
com.sun.tools.javadoc.main.JavadocMemberEnter#preRegister(Context)->void::: javadoc member enter pre register
com.sun.tools.javadoc.main.JavadocMemberEnter#visitMethodDef(JCMethodDecl)->void::: javadoc member enter visit method def
com.sun.tools.javadoc.main.JavadocMemberEnter#visitVarDef(JCVariableDecl)->void::: javadoc member enter visit var def
com.sun.tools.javadoc.main.JavadocTodo#preRegister(Context)->void::: javadoc todo pre register
com.sun.tools.javadoc.main.JavadocTodo#append(Env)->void::: javadoc todo append
com.sun.tools.javadoc.main.JavadocTodo#offer(Env)->boolean::: javadoc todo offer
com.sun.tools.javadoc.main.JavadocTool#keepComments()->boolean:::For javadoc, the parser needs to keep comments
com.sun.tools.javadoc.main.JavadocTool#make0(Context)->JavadocTool::: Construct a new javadoc tool.
com.sun.tools.javadoc.main.JavadocTool#getRootDocImpl(String, String, ModifierFilter, List, List, Iterable, boolean, List, List, boolean, boolean, boolean)->RootDocImpl::: javadoc tool get root doc impl
com.sun.tools.javadoc.main.JavadocTool#isValidPackageName(String)->boolean:::Is the given string a valid package name?
com.sun.tools.javadoc.main.JavadocTool#isValidClassName(String)->boolean:::Return true if given file name is a valid class name (including "package-info").
com.sun.tools.javadoc.main.JavadocTool#listClasses(List)->List:::From a list of top level trees, return the list of contained class definitions
com.sun.tools.javadoc.main.JavadocTool.PackageTable#packages(Collection)->PackageTable::: package table packages
com.sun.tools.javadoc.main.JavadocTool.PackageTable#subpackages(Collection, Collection)->PackageTable::: package table subpackages
com.sun.tools.javadoc.main.JavadocTool.PackageTable#getIncludedPackages()->Set:::Returns the aggregate set of included packages.
com.sun.tools.javadoc.main.JavadocTool.PackageTable#getFiles(String)->List:::Returns the set of source files for a package.
com.sun.tools.javadoc.main.JavadocTool.PackageTable.Entry#isExcluded()->boolean::: entry is excluded
com.sun.tools.javadoc.main.JavaScriptScanner.Reporter#report()->void::: reporter report
com.sun.tools.javadoc.main.JavaScriptScanner#parse(String, Reporter)->void::: java script scanner parse
com.sun.tools.javadoc.main.JavaScriptScanner#nextChar()->void::: java script scanner next char
com.sun.tools.javadoc.main.JavaScriptScanner#blockContent()->void:::Read block content, consisting of text, html and inline tags
com.sun.tools.javadoc.main.JavaScriptScanner#blockTags()->void:::Read a series of block tags, including their content
com.sun.tools.javadoc.main.JavaScriptScanner#blockTag()->void:::Read a single block tag, including its content
com.sun.tools.javadoc.main.JavaScriptScanner#inlineTag(Void)->void::: java script scanner inline tag
com.sun.tools.javadoc.main.JavaScriptScanner#inlineTag()->void:::Read a single inline tag, including its content
com.sun.tools.javadoc.main.JavaScriptScanner#reference(boolean)->void::: java script scanner reference
com.sun.tools.javadoc.main.JavaScriptScanner#identifier()->void:::Read Java identifier Matching pairs of { } are skipped; the text is terminated by the first unmatched }
com.sun.tools.javadoc.main.JavaScriptScanner#quotedString()->void:::Read a quoted string
com.sun.tools.javadoc.main.JavaScriptScanner#inlineWord()->void:::Read a term ie
com.sun.tools.javadoc.main.JavaScriptScanner#entity(Void)->void::: java script scanner entity
com.sun.tools.javadoc.main.JavaScriptScanner#entity()->void:::Read an HTML entity
com.sun.tools.javadoc.main.JavaScriptScanner#html()->void:::Read the start or end of an HTML tag, or an HTML comment <identifier attrs>  or </identifier> 
com.sun.tools.javadoc.main.JavaScriptScanner#htmlAttrs()->void:::Read a series of HTML attributes, terminated by > 
com.sun.tools.javadoc.main.JavaScriptScanner#attrValueChar(Void)->void::: java script scanner attr value char
com.sun.tools.javadoc.main.JavaScriptScanner#isIdentifierStart(char)->boolean::: java script scanner is identifier start
com.sun.tools.javadoc.main.JavaScriptScanner#readIdentifier()->String::: java script scanner read identifier
com.sun.tools.javadoc.main.JavaScriptScanner#readAttributeName()->String::: java script scanner read attribute name
com.sun.tools.javadoc.main.JavaScriptScanner#readTagName()->String::: java script scanner read tag name
com.sun.tools.javadoc.main.JavaScriptScanner#isJavaIdentifierStart(char)->boolean::: java script scanner is java identifier start
com.sun.tools.javadoc.main.JavaScriptScanner#readJavaIdentifier()->String::: java script scanner read java identifier
com.sun.tools.javadoc.main.JavaScriptScanner#isDecimalDigit(char)->boolean::: java script scanner is decimal digit
com.sun.tools.javadoc.main.JavaScriptScanner#isHexDigit(char)->boolean::: java script scanner is hex digit
com.sun.tools.javadoc.main.JavaScriptScanner#isUnquotedAttrValueTerminator(char)->boolean::: java script scanner is unquoted attr value terminator
com.sun.tools.javadoc.main.JavaScriptScanner#isWhitespace(char)->boolean::: java script scanner is whitespace
com.sun.tools.javadoc.main.JavaScriptScanner#skipWhitespace()->void::: java script scanner skip whitespace
com.sun.tools.javadoc.main.JavaScriptScanner#newString(int, int)->String::: java script scanner new string
com.sun.tools.javadoc.main.JavaScriptScanner.TagParser#getKind()->Kind::: tag parser get kind
com.sun.tools.javadoc.main.JavaScriptScanner.TagParser#getName()->String::: tag parser get name
com.sun.tools.javadoc.main.JavaScriptScanner.TagParser#parse(int)->void::: tag parser parse
com.sun.tools.javadoc.main.MemberDocImpl#isSynthetic()->boolean:::Returns true if this field was synthesized by the compiler.
com.sun.tools.javadoc.main.Messager#instance0(Context)->Messager:::Get the current messager, which is also the compiler log.
com.sun.tools.javadoc.main.Messager#preRegister(Context, String)->void::: messager pre register
com.sun.tools.javadoc.main.Messager#preRegister(Context, String, PrintWriter, PrintWriter, PrintWriter)->void::: messager pre register
com.sun.tools.javadoc.main.Messager#setLocale(Locale)->void::: messager set locale
com.sun.tools.javadoc.main.Messager#getText(String, Object...)->String:::get and format message string from resource
com.sun.tools.javadoc.main.Messager#printError(String)->void:::Print error message, increment error count
com.sun.tools.javadoc.main.Messager#printError(SourcePosition, String)->void:::Print error message, increment error count
com.sun.tools.javadoc.main.Messager#printWarning(String)->void:::Print warning message, increment warning count
com.sun.tools.javadoc.main.Messager#printWarning(SourcePosition, String)->void:::Print warning message, increment warning count
com.sun.tools.javadoc.main.Messager#printNotice(String)->void:::Print a message
com.sun.tools.javadoc.main.Messager#printNotice(SourcePosition, String)->void:::Print a message
com.sun.tools.javadoc.main.Messager#error(SourcePosition, String, Object...)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.Messager#warning(SourcePosition, String, Object...)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.Messager#notice(String, Object...)->void:::Print a message.
com.sun.tools.javadoc.main.Messager#nerrors()->int:::Return total number of errors, including those recorded in the compilation log.
com.sun.tools.javadoc.main.Messager#nwarnings()->int:::Return total number of warnings, including those recorded in the compilation log.
com.sun.tools.javadoc.main.Messager#exitNotice()->void:::Print exit message.
com.sun.tools.javadoc.main.Messager#exit()->void:::Force program exit, e.g., from a fatal error
com.sun.tools.javadoc.main.MethodDocImpl#isMethod()->boolean:::Return true if it is a method, which it is
com.sun.tools.javadoc.main.MethodDocImpl#isDefault()->boolean:::Return true if this method is default
com.sun.tools.javadoc.main.MethodDocImpl#isAbstract()->boolean:::Return true if this method is abstract
com.sun.tools.javadoc.main.MethodDocImpl#returnType()->com.sun.javadoc.Type:::Get return type.
com.sun.tools.javadoc.main.MethodDocImpl#overriddenClass()->ClassDoc:::Return the class that originally defined the method that is overridden by the current definition, or null if no such class exists.
com.sun.tools.javadoc.main.MethodDocImpl#overriddenType()->com.sun.javadoc.Type:::Return the type containing the method that this method overrides
com.sun.tools.javadoc.main.MethodDocImpl#overriddenMethod()->MethodDoc:::Return the method that this method overrides.
com.sun.tools.javadoc.main.MethodDocImpl#overrides(MethodDoc)->boolean:::Tests whether this method overrides another
com.sun.tools.javadoc.main.MethodDocImpl#name()->String::: method doc impl name
com.sun.tools.javadoc.main.MethodDocImpl#qualifiedName()->String::: method doc impl qualified name
com.sun.tools.javadoc.main.MethodDocImpl#toString()->String:::Returns a string representation of this method
com.sun.tools.javadoc.main.ModifierFilter#checkModifier(int)->boolean:::Filter on modifier bits.
com.sun.tools.javadoc.main.PackageDocImpl#setTree(JCTree)->void::: package doc impl set tree
com.sun.tools.javadoc.main.PackageDocImpl#setTreePath(TreePath)->void::: package doc impl set tree path
com.sun.tools.javadoc.main.PackageDocImpl#documentation()->String:::Do lazy initialization of "documentation" string.
com.sun.tools.javadoc.main.PackageDocImpl#addAllClassesTo(ListBuffer)->void:::Add all included classes (including Exceptions and Errors) and interfaces.
com.sun.tools.javadoc.main.PackageDocImpl#allClasses(boolean)->ClassDoc[]:::Get all classes (including Exceptions and Errors) and interfaces.
com.sun.tools.javadoc.main.PackageDocImpl#allClasses()->ClassDoc[]:::Get all included classes (including Exceptions and Errors) and interfaces
com.sun.tools.javadoc.main.PackageDocImpl#ordinaryClasses()->ClassDoc[]:::Get ordinary classes (that is, exclude exceptions, errors, enums, interfaces, and annotation types) in this package.
com.sun.tools.javadoc.main.PackageDocImpl#exceptions()->ClassDoc[]:::Get Exception classes in this package.
com.sun.tools.javadoc.main.PackageDocImpl#errors()->ClassDoc[]:::Get Error classes in this package.
com.sun.tools.javadoc.main.PackageDocImpl#enums()->ClassDoc[]:::Get included enum types in this package.
com.sun.tools.javadoc.main.PackageDocImpl#interfaces()->ClassDoc[]:::Get included interfaces in this package, omitting annotation types.
com.sun.tools.javadoc.main.PackageDocImpl#annotationTypes()->AnnotationTypeDoc[]:::Get included annotation types in this package.
com.sun.tools.javadoc.main.PackageDocImpl#annotations()->AnnotationDesc[]:::Get the annotations of this package
com.sun.tools.javadoc.main.PackageDocImpl#findClass(String)->ClassDoc:::Lookup for a class within this package.
com.sun.tools.javadoc.main.PackageDocImpl#isIncluded()->boolean:::Return true if this package is included in the active set.
com.sun.tools.javadoc.main.PackageDocImpl#name()->String:::Get package name
com.sun.tools.javadoc.main.PackageDocImpl#qualifiedName()->String:::Get package name.
com.sun.tools.javadoc.main.PackageDocImpl#setDocPath(FileObject)->void:::set doc path for an unzipped directory
com.sun.tools.javadoc.main.PackageDocImpl#position()->SourcePosition:::Return the source position of the entity, or null if no position is available.
com.sun.tools.javadoc.main.ParameterImpl#type()->com.sun.javadoc.Type:::Get the type of this parameter.
com.sun.tools.javadoc.main.ParameterImpl#name()->String:::Get local name of this parameter
com.sun.tools.javadoc.main.ParameterImpl#typeName()->String:::Get type name of this parameter
com.sun.tools.javadoc.main.ParameterImpl#toString()->String:::Returns a string representation of the parameter
com.sun.tools.javadoc.main.ParameterImpl#annotations()->AnnotationDesc[]:::Get the annotations of this parameter
com.sun.tools.javadoc.main.ParameterizedTypeImpl#asClassDoc()->ClassDoc:::Return the generic class or interface that declared this type.
com.sun.tools.javadoc.main.ParameterizedTypeImpl#typeArguments()->com.sun.javadoc.Type[]:::Return the actual type arguments of this type.
com.sun.tools.javadoc.main.ParameterizedTypeImpl#superclassType()->com.sun.javadoc.Type:::Return the class type that is a direct supertype of this one
com.sun.tools.javadoc.main.ParameterizedTypeImpl#interfaceTypes()->com.sun.javadoc.Type[]:::Return the interface types directly implemented by or extended by this parameterized type
com.sun.tools.javadoc.main.ParameterizedTypeImpl#containingType()->com.sun.javadoc.Type:::Return the type that contains this type as a member
com.sun.tools.javadoc.main.ParameterizedTypeImpl#typeName()->String::: parameterized type impl type name
com.sun.tools.javadoc.main.ParameterizedTypeImpl#asParameterizedType()->ParameterizedType::: parameterized type impl as parameterized type
com.sun.tools.javadoc.main.ParameterizedTypeImpl#toString()->String::: parameterized type impl to string
com.sun.tools.javadoc.main.ParameterizedTypeImpl#parameterizedTypeToString(DocEnv, ClassType, boolean)->String::: parameterized type impl parameterized type to string
com.sun.tools.javadoc.main.ParamTagImpl#parameterName()->String:::Return the parameter name.
com.sun.tools.javadoc.main.ParamTagImpl#parameterComment()->String:::Return the parameter comment.
com.sun.tools.javadoc.main.ParamTagImpl#kind()->String:::Return the kind of this tag.
com.sun.tools.javadoc.main.ParamTagImpl#isTypeParameter()->boolean:::Return true if this ParamTag corresponds to a type parameter.
com.sun.tools.javadoc.main.ParamTagImpl#toString()->String:::convert this object to a string.
com.sun.tools.javadoc.main.ParamTagImpl#inlineTags()->Tag[]:::For the parameter comment with embedded @link tags return the array of TagImpls consisting of SeeTagImpl(s) and text containing TagImpl(s).
com.sun.tools.javadoc.main.PrimitiveType#typeName()->String:::Return unqualified name of type excluding any dimension information
com.sun.tools.javadoc.main.PrimitiveType#getElementType()->com.sun.javadoc.Type::: primitive type get element type
com.sun.tools.javadoc.main.PrimitiveType#qualifiedTypeName()->String:::Return qualified name of type excluding any dimension information
com.sun.tools.javadoc.main.PrimitiveType#simpleTypeName()->String:::Return the simple name of this type.
com.sun.tools.javadoc.main.PrimitiveType#dimension()->String:::Return the type's dimension information, as a string
com.sun.tools.javadoc.main.PrimitiveType#asClassDoc()->ClassDoc:::Return this type as a class
com.sun.tools.javadoc.main.PrimitiveType#asAnnotationTypeDoc()->AnnotationTypeDoc:::Return null, as this is not an annotation type.
com.sun.tools.javadoc.main.PrimitiveType#asParameterizedType()->ParameterizedType:::Return null, as this is not an instantiation.
com.sun.tools.javadoc.main.PrimitiveType#asTypeVariable()->TypeVariable:::Return null, as this is not a type variable.
com.sun.tools.javadoc.main.PrimitiveType#asWildcardType()->WildcardType:::Return null, as this is not a wildcard type.
com.sun.tools.javadoc.main.PrimitiveType#asAnnotatedType()->AnnotatedType:::Return null, as this is not an annotated type.
com.sun.tools.javadoc.main.PrimitiveType#toString()->String:::Returns a string representation of the type
com.sun.tools.javadoc.main.PrimitiveType#isPrimitive()->boolean:::Return true if this is a primitive type.
com.sun.tools.javadoc.main.ProgramElementDocImpl#setTreePath(TreePath)->void::: program element doc impl set tree path
com.sun.tools.javadoc.main.ProgramElementDocImpl#getContainingClass()->ClassSymbol:::Subclasses override to identify the containing class
com.sun.tools.javadoc.main.ProgramElementDocImpl#getFlags()->long:::Returns the flags in terms of javac's flags
com.sun.tools.javadoc.main.ProgramElementDocImpl#getModifiers()->int:::Returns the modifier flags in terms of java.lang.reflect.Modifier.
com.sun.tools.javadoc.main.ProgramElementDocImpl#containingClass()->ClassDoc:::Get the containing class of this program element.
com.sun.tools.javadoc.main.ProgramElementDocImpl#containingPackage()->PackageDoc:::Return the package that this member is contained in
com.sun.tools.javadoc.main.ProgramElementDocImpl#modifierSpecifier()->int:::Get the modifier specifier integer.
com.sun.tools.javadoc.main.ProgramElementDocImpl#modifiers()->String:::Get modifiers string
com.sun.tools.javadoc.main.ProgramElementDocImpl#annotations()->AnnotationDesc[]:::Get the annotations of this program element
com.sun.tools.javadoc.main.ProgramElementDocImpl#isPublic()->boolean:::Return true if this program element is public
com.sun.tools.javadoc.main.ProgramElementDocImpl#isProtected()->boolean:::Return true if this program element is protected
com.sun.tools.javadoc.main.ProgramElementDocImpl#isPrivate()->boolean:::Return true if this program element is private
com.sun.tools.javadoc.main.ProgramElementDocImpl#isPackagePrivate()->boolean:::Return true if this program element is package private
com.sun.tools.javadoc.main.ProgramElementDocImpl#isStatic()->boolean:::Return true if this program element is static
com.sun.tools.javadoc.main.ProgramElementDocImpl#isFinal()->boolean:::Return true if this program element is final
com.sun.tools.javadoc.main.ProgramElementDocImpl#generateKey()->CollationKey:::Generate a key for sorting.
com.sun.tools.javadoc.main.RootDocImpl#options()->String[][]:::Command line options
com.sun.tools.javadoc.main.RootDocImpl#specifiedPackages()->PackageDoc[]:::Packages specified on the command line.
com.sun.tools.javadoc.main.RootDocImpl#specifiedClasses()->ClassDoc[]:::Classes and interfaces specified on the command line.
com.sun.tools.javadoc.main.RootDocImpl#classes()->ClassDoc[]:::Return all classes and interfaces (including those inside packages) to be documented.
com.sun.tools.javadoc.main.RootDocImpl#classNamed(String)->ClassDoc:::Return a ClassDoc for the specified class/interface name
com.sun.tools.javadoc.main.RootDocImpl#packageNamed(String)->PackageDoc:::Return a PackageDoc for the specified package name
com.sun.tools.javadoc.main.RootDocImpl#name()->String:::Return the name of this Doc item.
com.sun.tools.javadoc.main.RootDocImpl#qualifiedName()->String:::Return the name of this Doc item.
com.sun.tools.javadoc.main.RootDocImpl#isIncluded()->boolean:::Return true if this Doc is include in the active set
com.sun.tools.javadoc.main.RootDocImpl#printError(String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.RootDocImpl#printError(SourcePosition, String)->void:::Print error message, increment error count.
com.sun.tools.javadoc.main.RootDocImpl#printWarning(String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.RootDocImpl#printWarning(SourcePosition, String)->void:::Print warning message, increment warning count.
com.sun.tools.javadoc.main.RootDocImpl#printNotice(String)->void:::Print a message.
com.sun.tools.javadoc.main.RootDocImpl#printNotice(SourcePosition, String)->void:::Print a message.
com.sun.tools.javadoc.main.RootDocImpl#documentation()->String:::Do lazy initialization of "documentation" string.
com.sun.tools.javadoc.main.RootDocImpl#position()->SourcePosition:::Return the source position of the entity, or null if no position is available.
com.sun.tools.javadoc.main.RootDocImpl#getLocale()->Locale:::Return the locale provided by the user or the default locale value.
com.sun.tools.javadoc.main.RootDocImpl#getFileManager()->JavaFileManager:::Return the current file manager.
com.sun.tools.javadoc.main.RootDocImpl#initDocLint(Collection, Collection, String)->void::: root doc impl init doc lint
com.sun.tools.javadoc.main.RootDocImpl#initJavaScriptScanner(boolean)->JavaScriptScanner::: root doc impl init java script scanner
com.sun.tools.javadoc.main.RootDocImpl#isFunctionalInterface(AnnotationDesc)->boolean::: root doc impl is functional interface
com.sun.tools.javadoc.main.RootDocImpl#showTagMessages()->boolean::: root doc impl show tag messages
com.sun.tools.javadoc.main.SeeTagImpl#referencedClassName()->String:::get the class name part of @see, For instance, if the comment is @see String#startsWith(java.lang.String) 
com.sun.tools.javadoc.main.SeeTagImpl#referencedPackage()->PackageDoc:::get the package referenced by  @see
com.sun.tools.javadoc.main.SeeTagImpl#referencedClass()->ClassDoc:::get the class referenced by the class name part of @see, For instance, if the comment is @see String#startsWith(java.lang.String) 
com.sun.tools.javadoc.main.SeeTagImpl#referencedMemberName()->String:::get the name of the member referenced by the prototype part of @see, For instance, if the comment is @see String#startsWith(java.lang.String) 
com.sun.tools.javadoc.main.SeeTagImpl#referencedMember()->MemberDoc:::get the member referenced by the prototype part of @see, For instance, if the comment is @see String#startsWith(java.lang.String) 
com.sun.tools.javadoc.main.SeeTagImpl.ParameterParseMachine#parseParameters()->String[]::: parameter parse machine parse parameters
com.sun.tools.javadoc.main.SeeTagImpl.ParameterParseMachine#addTypeToParamList()->void::: parameter parse machine add type to param list
com.sun.tools.javadoc.main.SeeTagImpl#kind()->String:::Return the kind of this tag.
com.sun.tools.javadoc.main.SeeTagImpl#label()->String:::Return the label of the see tag.
com.sun.tools.javadoc.main.SerialFieldTagImpl#key()->String:::return a key for sorting.
com.sun.tools.javadoc.main.SerialFieldTagImpl#mapToFieldDocImpl(FieldDocImpl)->void::: serial field tag impl map to field doc impl
com.sun.tools.javadoc.main.SerialFieldTagImpl#fieldName()->String:::Return the serialziable field name.
com.sun.tools.javadoc.main.SerialFieldTagImpl#fieldType()->String:::Return the field type string.
com.sun.tools.javadoc.main.SerialFieldTagImpl#fieldTypeDoc()->ClassDoc:::Return the ClassDocImpl for field type.
com.sun.tools.javadoc.main.SerialFieldTagImpl#getMatchingField()->FieldDocImpl:::Return the corresponding FieldDocImpl for this SerialFieldTagImpl.
com.sun.tools.javadoc.main.SerialFieldTagImpl#description()->String:::Return the field comment
com.sun.tools.javadoc.main.SerialFieldTagImpl#kind()->String:::Return the kind of this tag.
com.sun.tools.javadoc.main.SerialFieldTagImpl#toString()->String:::Convert this object to a string.
com.sun.tools.javadoc.main.SerialFieldTagImpl#compareTo(Object)->int:::Compares this Object with the specified Object for order
com.sun.tools.javadoc.main.SerializedForm#fields()->FieldDoc[]:::Return serializable fields in class
com.sun.tools.javadoc.main.SerializedForm#methods()->MethodDoc[]:::Return serialization methods in class.
com.sun.tools.javadoc.main.SerializedForm#definesSerializableFields()->boolean:::Returns true if Serializable fields are defined explicitly using member, serialPersistentFields.
com.sun.tools.javadoc.main.SourcePositionImpl#file()->File:::The source file
com.sun.tools.javadoc.main.SourcePositionImpl#fileObject()->FileObject:::The source file
com.sun.tools.javadoc.main.SourcePositionImpl#line()->int:::The line in the source file
com.sun.tools.javadoc.main.SourcePositionImpl#column()->int:::The column in the source file
com.sun.tools.javadoc.main.SourcePositionImpl#make(FileObject, int, Position.LineMap)->SourcePosition::: source position impl make
com.sun.tools.javadoc.main.SourcePositionImpl#toString()->String::: source position impl to string
com.sun.tools.javadoc.main.Start#usage()->void:::Usage
com.sun.tools.javadoc.main.Start#usage(boolean)->void::: start usage
com.sun.tools.javadoc.main.Start#Xusage()->void::: start  xusage
com.sun.tools.javadoc.main.Start#Xusage(boolean)->void::: start  xusage
com.sun.tools.javadoc.main.Start#begin(String...)->int:::Main program - external wrapper
com.sun.tools.javadoc.main.Start#begin(Class, Iterable, Iterable)->boolean::: start begin
com.sun.tools.javadoc.main.Start#usageError(String, Object...)->void::: start usage error
com.sun.tools.javadoc.main.Start#getOptionHelper()->OptionHelper::: start get option helper
com.sun.tools.javadoc.main.TagImpl#name()->String:::Return the name of this tag.
com.sun.tools.javadoc.main.TagImpl#holder()->Doc:::Return the containing Doc of this Tag element.
com.sun.tools.javadoc.main.TagImpl#kind()->String:::Return the kind of this tag.
com.sun.tools.javadoc.main.TagImpl#text()->String:::Return the text of this tag, that is, portion beyond tag name.
com.sun.tools.javadoc.main.TagImpl#docenv()->DocEnv::: tag impl docenv
com.sun.tools.javadoc.main.TagImpl#divideAtWhite()->String[]:::for use by subclasses which have two part tag text.
com.sun.tools.javadoc.main.TagImpl#toString()->String:::convert this object to a string.
com.sun.tools.javadoc.main.TagImpl#inlineTags()->Tag[]:::For documentation comment with embedded @link tags, return the array of TagImpls consisting of SeeTagImpl(s) and text containing TagImpl(s)
com.sun.tools.javadoc.main.TagImpl#firstSentenceTags()->Tag[]:::Return array of tags for the first sentence in the doc comment text.
com.sun.tools.javadoc.main.TagImpl#position()->SourcePosition:::Return the doc item to which this tag is attached.
com.sun.tools.javadoc.main.ThrowsTagImpl#exceptionName()->String:::Return the exception name.
com.sun.tools.javadoc.main.ThrowsTagImpl#exceptionComment()->String:::Return the exception comment.
com.sun.tools.javadoc.main.ThrowsTagImpl#exception()->ClassDoc:::Return the exception as a ClassDocImpl.
com.sun.tools.javadoc.main.ThrowsTagImpl#exceptionType()->Type:::Return the type that represents the exception
com.sun.tools.javadoc.main.ThrowsTagImpl#kind()->String:::Return the kind of this tag
com.sun.tools.javadoc.main.ThrowsTagImpl#inlineTags()->Tag[]:::For the exception comment with embedded @link tags return the array of TagImpls consisting of SeeTagImpl(s) and text containing TagImpl(s).
com.sun.tools.javadoc.main.TypeMaker#getType(DocEnv, Type)->com.sun.javadoc.Type::: type maker get type
com.sun.tools.javadoc.main.TypeMaker#getType(DocEnv, Type, boolean)->com.sun.javadoc.Type::: type maker get type
com.sun.tools.javadoc.main.TypeMaker#getType(DocEnv, Type, boolean, boolean)->com.sun.javadoc.Type::: type maker get type
com.sun.tools.javadoc.main.TypeMaker#getTypes(DocEnv, List)->com.sun.javadoc.Type[]:::Convert a list of javac types into an array of javadoc types.
com.sun.tools.javadoc.main.TypeMaker#getTypes(DocEnv, List, com.sun.javadoc.Type[])->com.sun.javadoc.Type[]:::Like the above version, but use and return the array given.
com.sun.tools.javadoc.main.TypeMaker#getTypeName(Type, boolean)->String::: type maker get type name
com.sun.tools.javadoc.main.TypeMaker#getTypeString(DocEnv, Type, boolean)->String:::Return the string representation of a type use
com.sun.tools.javadoc.main.TypeMaker#typeParametersString(DocEnv, Symbol, boolean)->String:::Return the formal type parameters of a class or method as an angle-bracketed string
com.sun.tools.javadoc.main.TypeMaker#typeArgumentsString(DocEnv, ClassType, boolean)->String:::Return the actual type arguments of a parameterized type as an angle-bracketed string
com.sun.tools.javadoc.main.TypeVariableImpl#bounds()->com.sun.javadoc.Type[]:::Return the bounds of this type variable.
com.sun.tools.javadoc.main.TypeVariableImpl#owner()->ProgramElementDoc:::Return the class, interface, method, or constructor within which this type variable is declared.
com.sun.tools.javadoc.main.TypeVariableImpl#asClassDoc()->ClassDoc:::Return the ClassDoc of the erasure of this type variable.
com.sun.tools.javadoc.main.TypeVariableImpl#asTypeVariable()->TypeVariable::: type variable impl as type variable
com.sun.tools.javadoc.main.TypeVariableImpl#toString()->String::: type variable impl to string
com.sun.tools.javadoc.main.TypeVariableImpl#typeVarToString(DocEnv, TypeVar, boolean)->String:::Return the string form of a type variable along with any "extends" clause
com.sun.tools.javadoc.main.TypeVariableImpl#annotations()->AnnotationDesc[]:::Get the annotations of this program element
com.sun.tools.javadoc.main.WildcardTypeImpl#extendsBounds()->com.sun.javadoc.Type[]:::Return the upper bounds of this wildcard type argument as given by the extends clause
com.sun.tools.javadoc.main.WildcardTypeImpl#superBounds()->com.sun.javadoc.Type[]:::Return the lower bounds of this wildcard type argument as given by the super clause
com.sun.tools.javadoc.main.WildcardTypeImpl#asClassDoc()->ClassDoc:::Return the ClassDoc of the erasure of this wildcard type.
com.sun.tools.javadoc.main.WildcardTypeImpl#asWildcardType()->WildcardType::: wildcard type impl as wildcard type
com.sun.tools.javadoc.main.WildcardTypeImpl#typeName()->String::: wildcard type impl type name
com.sun.tools.javadoc.main.WildcardTypeImpl#qualifiedTypeName()->String::: wildcard type impl qualified type name
com.sun.tools.javadoc.main.WildcardTypeImpl#simpleTypeName()->String::: wildcard type impl simple type name
com.sun.tools.javadoc.main.WildcardTypeImpl#toString()->String::: wildcard type impl to string
com.sun.tools.javadoc.main.WildcardTypeImpl#wildcardTypeToString(DocEnv, Type.WildcardType, boolean)->String:::Return the string form of a wildcard type ("?") along with any "extends" or "super" clause
