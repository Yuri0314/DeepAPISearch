jdk.internal.jshell.tool.ArgTokenizer#next()->String:::Return the next non-option argument
jdk.internal.jshell.tool.ArgTokenizer#allowedOptions(String...)->void:::Set the allowed options
jdk.internal.jshell.tool.ArgTokenizer#isAllowedOption(String)->boolean:::Is the specified option allowed.
jdk.internal.jshell.tool.ArgTokenizer#hasOption(String)->boolean:::Has the specified option been encountered.
jdk.internal.jshell.tool.ArgTokenizer#optionCount()->int:::Return the number of encountered options
jdk.internal.jshell.tool.ArgTokenizer#badOptions()->String:::Return the bad options encountered
jdk.internal.jshell.tool.ArgTokenizer#remainder()->String:::Consume the remainder of the input
jdk.internal.jshell.tool.ArgTokenizer#val()->String::: arg tokenizer val
jdk.internal.jshell.tool.ArgTokenizer#isQuoted()->boolean::: arg tokenizer is quoted
jdk.internal.jshell.tool.ArgTokenizer#whole()->String::: arg tokenizer whole
jdk.internal.jshell.tool.ArgTokenizer#mark()->void::: arg tokenizer mark
jdk.internal.jshell.tool.ArgTokenizer#rewind()->void::: arg tokenizer rewind
jdk.internal.jshell.tool.ArgTokenizer#nextToken()->void:::Parses the next token of this tokenizer.
jdk.internal.jshell.tool.ConsoleIOContext#readLine(String, String)->String::: console context read line
jdk.internal.jshell.tool.ConsoleIOContext#interactiveOutput()->boolean::: console context interactive output
jdk.internal.jshell.tool.ConsoleIOContext#history(boolean)->Iterable::: console context history
jdk.internal.jshell.tool.ConsoleIOContext#close()->void::: console context close
jdk.internal.jshell.tool.ConsoleIOContext#terminalEditorRunning()->boolean::: console context terminal editor running
jdk.internal.jshell.tool.ConsoleIOContext#suspend()->void::: console context suspend
jdk.internal.jshell.tool.ConsoleIOContext#resume()->void::: console context resume
jdk.internal.jshell.tool.ConsoleIOContext#beforeUserCode()->void::: console context before user code
jdk.internal.jshell.tool.ConsoleIOContext#afterUserCode()->void::: console context after user code
jdk.internal.jshell.tool.ConsoleIOContext#replaceLastHistoryEntry(String)->void::: console context replace last history entry
jdk.internal.jshell.tool.ConsoleIOContext#readUserInput()->int::: console context read user input
jdk.internal.jshell.tool.ConsoleIOContext.Fix#displayName()->String:::A name that should be shown to the user.
jdk.internal.jshell.tool.ConsoleIOContext.Fix#perform(ConsoleReader)->void:::Perform the given action.
jdk.internal.jshell.tool.ConsoleIOContext.FixComputer#compute(JShellTool, String, int)->FixResult:::Compute possible actions for the given code.
jdk.internal.jshell.tool.ConsoleIOContextTestSupport#willComputeCompletion()->void::: console context test support will compute completion
jdk.internal.jshell.tool.ConsoleIOContextTestSupport#willComputeCompletionCallback()->void::: console context test support will compute completion callback
jdk.internal.jshell.tool.ContinuousCompletionProvider#completionSuggestions(String, int, int[])->List::: continuous completion provider completion suggestions
jdk.internal.jshell.tool.Feedback#shouldDisplayCommandFluff()->boolean::: feedback should display command fluff
jdk.internal.jshell.tool.Feedback#getPre()->String::: feedback get pre
jdk.internal.jshell.tool.Feedback#getPost()->String::: feedback get post
jdk.internal.jshell.tool.Feedback#getErrorPre()->String::: feedback get error pre
jdk.internal.jshell.tool.Feedback#getErrorPost()->String::: feedback get error post
jdk.internal.jshell.tool.Feedback#format(FormatCase, FormatAction, FormatWhen, FormatResolve, FormatUnresolved, FormatErrors, String, String, String, String, List)->String::: feedback format
jdk.internal.jshell.tool.Feedback#format(String, FormatCase, FormatAction, FormatWhen, FormatResolve, FormatUnresolved, FormatErrors, String, String, String, String, List)->String::: feedback format
jdk.internal.jshell.tool.Feedback#truncateVarValue(String)->String::: feedback truncate var value
jdk.internal.jshell.tool.Feedback#getPrompt(String)->String::: feedback get prompt
jdk.internal.jshell.tool.Feedback#getContinuationPrompt(String)->String::: feedback get continuation prompt
jdk.internal.jshell.tool.Feedback#setFeedback(MessageHandler, ArgTokenizer, Consumer)->boolean::: feedback set feedback
jdk.internal.jshell.tool.Feedback#setFormat(MessageHandler, ArgTokenizer)->boolean::: feedback set format
jdk.internal.jshell.tool.Feedback#setTruncation(MessageHandler, ArgTokenizer)->boolean::: feedback set truncation
jdk.internal.jshell.tool.Feedback#setMode(MessageHandler, ArgTokenizer, Consumer)->boolean::: feedback set mode
jdk.internal.jshell.tool.Feedback#setPrompt(MessageHandler, ArgTokenizer)->boolean::: feedback set prompt
jdk.internal.jshell.tool.Feedback#restoreEncodedModes(MessageHandler, String)->boolean::: feedback restore encoded modes
jdk.internal.jshell.tool.Feedback#markModesReadOnly()->void::: feedback mark modes read only
jdk.internal.jshell.tool.Feedback#modeCompletions()->JShellTool.CompletionProvider::: feedback mode completions
jdk.internal.jshell.tool.Feedback#modeCompletions(CompletionProvider)->JShellTool.CompletionProvider::: feedback mode completions
jdk.internal.jshell.tool.Feedback.Selector#collector(Setter.SelectorList)->SelectorCollector::: selector collector
jdk.internal.jshell.tool.Feedback.Selector#doc()->String::: selector doc
jdk.internal.jshell.tool.Feedback.SelectorCollector#add(Object)->void::: selector collector add
jdk.internal.jshell.tool.Feedback.SelectorCollector#isEmpty()->boolean::: selector collector is empty
jdk.internal.jshell.tool.Feedback.SelectorCollector#getSet()->EnumSet::: selector collector get set
jdk.internal.jshell.tool.IOContext#close()->void::: context close
jdk.internal.jshell.tool.IOContext#readLine(String, String)->String::: context read line
jdk.internal.jshell.tool.IOContext#interactiveOutput()->boolean::: context interactive output
jdk.internal.jshell.tool.IOContext#history(boolean)->Iterable::: context history
jdk.internal.jshell.tool.IOContext#terminalEditorRunning()->boolean::: context terminal editor running
jdk.internal.jshell.tool.IOContext#suspend()->void::: context suspend
jdk.internal.jshell.tool.IOContext#resume()->void::: context resume
jdk.internal.jshell.tool.IOContext#beforeUserCode()->void::: context before user code
jdk.internal.jshell.tool.IOContext#afterUserCode()->void::: context after user code
jdk.internal.jshell.tool.IOContext#replaceLastHistoryEntry(String)->void::: context replace last history entry
jdk.internal.jshell.tool.IOContext#readUserInput()->int::: context read user input
jdk.internal.jshell.tool.JShellTool#interactive()->boolean:::Is the input/output currently interactive
jdk.internal.jshell.tool.JShellTool#debug(String, Object...)->void::: shell tool debug
jdk.internal.jshell.tool.JShellTool#hard(String, Object...)->void:::Must show command output
jdk.internal.jshell.tool.JShellTool#error(String, Object...)->void:::Error command output
jdk.internal.jshell.tool.JShellTool#showFluff()->boolean:::Should optional informative be displayed?
jdk.internal.jshell.tool.JShellTool#fluff(String, Object...)->void:::Optional output
jdk.internal.jshell.tool.JShellTool#getResourceString(String)->String:::Resource bundle look-up
jdk.internal.jshell.tool.JShellTool#prefix(String)->String:::Add normal prefixing/postfixing to embedded newlines in a string, bracketing with normal prefix/postfix
jdk.internal.jshell.tool.JShellTool#prefixError(String)->String:::Add error prefixing/postfixing to embedded newlines in a string, bracketing with error prefix/postfix
jdk.internal.jshell.tool.JShellTool#prefix(String, String, String)->String:::Add prefixing/postfixing to embedded newlines in a string, bracketing with prefix/postfix
jdk.internal.jshell.tool.JShellTool#hardrb(String)->void:::Print using resource bundle look-up and adding prefix and postfix
jdk.internal.jshell.tool.JShellTool#messageFormat(String, Object...)->String:::Format using resource bundle look-up using MessageFormat
jdk.internal.jshell.tool.JShellTool#hardmsg(String, Object...)->void:::Print using resource bundle look-up, MessageFormat, and add prefix and postfix
jdk.internal.jshell.tool.JShellTool#errormsg(String, Object...)->void:::Print error using resource bundle look-up, MessageFormat, and add prefix and postfix
jdk.internal.jshell.tool.JShellTool#fluffmsg(String, Object...)->void:::Print (fluff) using resource bundle look-up, MessageFormat, and add prefix and postfix
jdk.internal.jshell.tool.JShellTool#hardPairs(Stream, Function, Function)->void::: shell tool hard pairs
jdk.internal.jshell.tool.JShellTool#trimEnd(String)->String:::Trim whitespace off end of string
jdk.internal.jshell.tool.JShellTool#start(String[])->int:::The entry point into the JShell tool.
jdk.internal.jshell.tool.JShellTool#toPathResolvingUserHome(String)->Path::: shell tool to path resolving user home
jdk.internal.jshell.tool.JShellTool.CompletionProvider#completionSuggestions(String, int, int[])->List::: completion provider completion suggestions
jdk.internal.jshell.tool.JShellTool.FixedCompletionProvider#completionSuggestions(String, int, int[])->List::: fixed completion provider completion suggestions
jdk.internal.jshell.tool.JShellTool#allSnippets()->Stream::: shell tool all snippets
jdk.internal.jshell.tool.JShellTool#dropableSnippets()->Stream::: shell tool dropable snippets
jdk.internal.jshell.tool.JShellTool#allVarSnippets()->Stream::: shell tool all var snippets
jdk.internal.jshell.tool.JShellTool#allMethodSnippets()->Stream::: shell tool all method snippets
jdk.internal.jshell.tool.JShellTool#allTypeSnippets()->Stream::: shell tool all type snippets
jdk.internal.jshell.tool.JShellTool#commandCompletionSuggestions(String, int, int[])->List::: shell tool command completion suggestions
jdk.internal.jshell.tool.JShellTool#commandDocumentation(String, int, boolean)->List::: shell tool command documentation
jdk.internal.jshell.tool.JShellTool#stop()->void::: shell tool stop
jdk.internal.jshell.tool.JShellTool#cmdSet(String)->boolean::: shell tool cmd set
jdk.internal.jshell.tool.JShellTool#setFeedback(MessageHandler, ArgTokenizer)->boolean::: shell tool set feedback
jdk.internal.jshell.tool.JShellTool#subCommand(String, ArgTokenizer, String[])->String::: shell tool sub command
jdk.internal.jshell.tool.JShellTool.EditorSetting#fromPrefs(PersistentStorage)->EditorSetting::: editor setting from prefs
jdk.internal.jshell.tool.JShellTool.EditorSetting#removePrefs(PersistentStorage)->void::: editor setting remove prefs
jdk.internal.jshell.tool.JShellTool.EditorSetting#toPrefs(PersistentStorage)->void::: editor setting to prefs
jdk.internal.jshell.tool.JShellTool.EditorSetting#equals(Object)->boolean::: editor setting equals
jdk.internal.jshell.tool.JShellTool.EditorSetting#hashCode()->int::: editor setting hash code
jdk.internal.jshell.tool.JShellTool.SetEditor#set()->boolean::: set editor set
jdk.internal.jshell.tool.JShellTool#setStart(ArgTokenizer)->boolean::: shell tool set start
jdk.internal.jshell.tool.JShellTool#showSetStart()->void::: shell tool show set start
jdk.internal.jshell.tool.JShellTool#cmdDebug(String)->boolean::: shell tool cmd debug
jdk.internal.jshell.tool.JShellTool#cmdHelp(String)->boolean::: shell tool cmd help
jdk.internal.jshell.tool.JShellTool#getResource(String)->String::: shell tool get resource
jdk.internal.jshell.tool.JShellTool#readResource(String)->String::: shell tool read resource
jdk.internal.jshell.tool.JShellTool#checkOptionsAndRemainingInput(ArgTokenizer)->boolean::: shell tool check options and remaining input
jdk.internal.jshell.tool.JShellTool#errorsOnly(List)->List:::Filter diagnostics for only errors (no warnings, ...)
jdk.internal.jshell.tool.JShellTool#processSource(String)->boolean:::Process a source snippet.
jdk.internal.jshell.tool.JShellTool#printStackTrace(StackTraceElement[], StackTraceElement[])->void::: shell tool print stack trace
jdk.internal.jshell.tool.JShellTool#printSnippetStatus(DeclarationSnippet, boolean)->void::: shell tool print snippet status
jdk.internal.jshell.tool.JShellTool#version()->String:::The current version number as a string.
jdk.internal.jshell.tool.JShellTool#fullVersion()->String:::The current full version number as a string.
jdk.internal.jshell.tool.JShellTool.NameSpace#tid(Snippet)->String::: name space tid
jdk.internal.jshell.tool.JShellTool.NameSpace#tidNext()->String::: name space tid next
jdk.internal.jshell.tool.JShellTool.ArgSuggestion#continuation()->String:::The candidate continuation of the given user's input.
jdk.internal.jshell.tool.JShellTool.ArgSuggestion#matchesType()->boolean:::Indicates whether input continuation matches the target type and is thus more likely to be the desired continuation
jdk.internal.jshell.tool.NonInteractiveIOContext#interactiveOutput()->boolean::: non interactive context interactive output
jdk.internal.jshell.tool.NonInteractiveIOContext#history(boolean)->Iterable::: non interactive context history
jdk.internal.jshell.tool.NonInteractiveIOContext#terminalEditorRunning()->boolean::: non interactive context terminal editor running
jdk.internal.jshell.tool.NonInteractiveIOContext#suspend()->void::: non interactive context suspend
jdk.internal.jshell.tool.NonInteractiveIOContext#resume()->void::: non interactive context resume
jdk.internal.jshell.tool.NonInteractiveIOContext#beforeUserCode()->void::: non interactive context before user code
jdk.internal.jshell.tool.NonInteractiveIOContext#afterUserCode()->void::: non interactive context after user code
jdk.internal.jshell.tool.NonInteractiveIOContext#replaceLastHistoryEntry(String)->void::: non interactive context replace last history entry
jdk.internal.jshell.tool.ScannerIOContext#readLine(String, String)->String::: scanner context read line
jdk.internal.jshell.tool.ScannerIOContext#close()->void::: scanner context close
jdk.internal.jshell.tool.ScannerIOContext#readUserInput()->int::: scanner context read user input
jdk.internal.jshell.tool.ReloadIOContext#readLine(String, String)->String::: reload context read line
jdk.internal.jshell.tool.ReloadIOContext#close()->void::: reload context close
jdk.internal.jshell.tool.ReloadIOContext#readUserInput()->int::: reload context read user input
jdk.internal.jshell.tool.JShellToolBuilder#in(InputStream, InputStream)->JavaShellToolBuilder:::Set the input channels
jdk.internal.jshell.tool.JShellToolBuilder#out(PrintStream)->JavaShellToolBuilder:::Set the output channels
jdk.internal.jshell.tool.JShellToolBuilder#out(PrintStream, PrintStream, PrintStream)->JavaShellToolBuilder:::Set the output channels
jdk.internal.jshell.tool.JShellToolBuilder#err(PrintStream)->JavaShellToolBuilder:::Set the error channels
jdk.internal.jshell.tool.JShellToolBuilder#err(PrintStream, PrintStream)->JavaShellToolBuilder:::Set the error channels
jdk.internal.jshell.tool.JShellToolBuilder#persistence(Preferences)->JavaShellToolBuilder:::Set the storage mechanism for persistent information which includes input history and retained settings
jdk.internal.jshell.tool.JShellToolBuilder#persistence(Map)->JavaShellToolBuilder:::Set the storage mechanism for persistent information which includes input history and retained settings
jdk.internal.jshell.tool.JShellToolBuilder#env(Map)->JavaShellToolBuilder:::Set the source for environment variables
jdk.internal.jshell.tool.JShellToolBuilder#locale(Locale)->JavaShellToolBuilder:::Set the locale
jdk.internal.jshell.tool.JShellToolBuilder#promptCapture(boolean)->JavaShellToolBuilder:::Set if the special command capturing prompt override should be used
jdk.internal.jshell.tool.JShellToolBuilder#rawTool()->JShellTool:::Create a tool instance for testing
jdk.internal.jshell.tool.JShellToolBuilder#run(String...)->void:::Run an instance of the Java shell tool as configured by the other methods in this interface
jdk.internal.jshell.tool.JShellToolBuilder#start(String...)->int:::Run an instance of the Java shell tool as configured by the other methods in this interface
jdk.internal.jshell.tool.JShellToolProvider#name()->String:::Returns the name of this Java shell tool provider.
jdk.internal.jshell.tool.JShellToolProvider#run(InputStream, OutputStream, OutputStream, String...)->int:::Run the jshell tool
jdk.internal.jshell.tool.JShellToolProvider#getSourceVersions()->Set:::Returns the source versions of the jshell tool.
jdk.internal.jshell.tool.JShellToolProvider#main(String[])->void:::Launch the tool and exit.
jdk.internal.jshell.tool.MessageHandler#fluff(String, Object...)->void::: message handler fluff
jdk.internal.jshell.tool.MessageHandler#fluffmsg(String, Object...)->void::: message handler fluffmsg
jdk.internal.jshell.tool.MessageHandler#hard(String, Object...)->void::: message handler hard
jdk.internal.jshell.tool.MessageHandler#hardmsg(String, Object...)->void::: message handler hardmsg
jdk.internal.jshell.tool.MessageHandler#errormsg(String, Object...)->void::: message handler errormsg
jdk.internal.jshell.tool.MessageHandler#showFluff()->boolean::: message handler show fluff
jdk.internal.jshell.tool.PersistentStorage#clear()->void:::Removes all of the preferences (key-value associations) in preferences.
jdk.internal.jshell.tool.PersistentStorage#keys()->String[]:::Returns all of the keys that have an associated value in preferences.
jdk.internal.jshell.tool.PersistentStorage#get(String)->String:::Returns the value associated with the specified key in preferences.
jdk.internal.jshell.tool.PersistentStorage#put(String, String)->void:::Associates the specified value with the specified key in this preference node.
jdk.internal.jshell.tool.PersistentStorage#remove(String)->void:::Removes the value associated with the specified key in preferences, if any.
jdk.internal.jshell.tool.PersistentStorage#flush()->void:::Forces any changes in the contents of this preferences to be stored
jdk.internal.jshell.tool.Startup#toString()->String::: startup to string
jdk.internal.jshell.tool.Startup#hashCode()->int::: startup hash code
jdk.internal.jshell.tool.Startup#equals(Object)->boolean::: startup equals
jdk.internal.jshell.tool.Startup#isEmpty()->boolean::: startup is empty
jdk.internal.jshell.tool.Startup#isDefault()->boolean::: startup is default
jdk.internal.jshell.tool.Startup#storedForm()->String::: startup stored form
jdk.internal.jshell.tool.Startup#show(boolean)->String::: startup show
jdk.internal.jshell.tool.Startup#showDetail()->String::: startup show detail
jdk.internal.jshell.tool.Startup#unpack(String, MessageHandler)->Startup:::Factory method: Unpack from stored form.
jdk.internal.jshell.tool.Startup#fromFileList(List, String, MessageHandler)->Startup:::Factory method: Read Startup from a list of external files or resources.
jdk.internal.jshell.tool.Startup#noStartup()->Startup:::Factory method: The empty Startup ("-none").
jdk.internal.jshell.tool.Startup#defaultStartup(MessageHandler)->Startup:::Factory method: The default Startup ("-default.").
jdk.internal.jshell.tool.StopDetectingInputStream#setInputStream(InputStream)->InputStream::: stop detecting input stream set input stream
jdk.internal.jshell.tool.StopDetectingInputStream#read()->int::: stop detecting input stream read
jdk.internal.jshell.tool.StopDetectingInputStream#shutdown()->void::: stop detecting input stream shutdown
jdk.internal.jshell.tool.StopDetectingInputStream#write(int)->void::: stop detecting input stream write
jdk.internal.jshell.tool.StopDetectingInputStream#setState(State)->void::: stop detecting input stream set state
