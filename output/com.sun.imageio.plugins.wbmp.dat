com.sun.imageio.plugins.wbmp.WBMPImageReader#setInput(Object, boolean, boolean)->void:::Overrides the method defined in the superclass.
com.sun.imageio.plugins.wbmp.WBMPImageReader#getNumImages(boolean)->int:::Overrides the method defined in the superclass.
com.sun.imageio.plugins.wbmp.WBMPImageReader#getWidth(int)->int::: image reader get width
com.sun.imageio.plugins.wbmp.WBMPImageReader#getHeight(int)->int::: image reader get height
com.sun.imageio.plugins.wbmp.WBMPImageReader#isRandomAccessEasy(int)->boolean::: image reader is random access easy
com.sun.imageio.plugins.wbmp.WBMPImageReader#readHeader()->void::: image reader read header
com.sun.imageio.plugins.wbmp.WBMPImageReader#getImageTypes(int)->Iterator::: image reader get image types
com.sun.imageio.plugins.wbmp.WBMPImageReader#getDefaultReadParam()->ImageReadParam::: image reader get default read param
com.sun.imageio.plugins.wbmp.WBMPImageReader#getImageMetadata(int)->IIOMetadata::: image reader get image metadata
com.sun.imageio.plugins.wbmp.WBMPImageReader#getStreamMetadata()->IIOMetadata::: image reader get stream metadata
com.sun.imageio.plugins.wbmp.WBMPImageReader#read(int, ImageReadParam)->BufferedImage::: image reader read
com.sun.imageio.plugins.wbmp.WBMPImageReader#canReadRaster()->boolean::: image reader can read raster
com.sun.imageio.plugins.wbmp.WBMPImageReader#readRaster(int, ImageReadParam)->Raster::: image reader read raster
com.sun.imageio.plugins.wbmp.WBMPImageReader#reset()->void::: image reader reset
com.sun.imageio.plugins.wbmp.WBMPImageReader#isValidWbmpType(int)->boolean::: image reader is valid wbmp type
com.sun.imageio.plugins.wbmp.WBMPImageReaderSpi#onRegistration(ServiceRegistry, Class)->void::: image reader spi on registration
com.sun.imageio.plugins.wbmp.WBMPImageReaderSpi#getDescription(Locale)->String::: image reader spi get description
com.sun.imageio.plugins.wbmp.WBMPImageReaderSpi#canDecodeInput(Object)->boolean::: image reader spi can decode input
com.sun.imageio.plugins.wbmp.WBMPImageReaderSpi#createReaderInstance(Object)->ImageReader::: image reader spi create reader instance
com.sun.imageio.plugins.wbmp.WBMPImageWriter#setOutput(Object)->void::: image writer set output
com.sun.imageio.plugins.wbmp.WBMPImageWriter#getDefaultStreamMetadata(ImageWriteParam)->IIOMetadata::: image writer get default stream metadata
com.sun.imageio.plugins.wbmp.WBMPImageWriter#getDefaultImageMetadata(ImageTypeSpecifier, ImageWriteParam)->IIOMetadata::: image writer get default image metadata
com.sun.imageio.plugins.wbmp.WBMPImageWriter#convertStreamMetadata(IIOMetadata, ImageWriteParam)->IIOMetadata::: image writer convert stream metadata
com.sun.imageio.plugins.wbmp.WBMPImageWriter#convertImageMetadata(IIOMetadata, ImageTypeSpecifier, ImageWriteParam)->IIOMetadata::: image writer convert image metadata
com.sun.imageio.plugins.wbmp.WBMPImageWriter#canWriteRasters()->boolean::: image writer can write rasters
com.sun.imageio.plugins.wbmp.WBMPImageWriter#write(IIOMetadata, IIOImage, ImageWriteParam)->void::: image writer write
com.sun.imageio.plugins.wbmp.WBMPImageWriter#reset()->void::: image writer reset
com.sun.imageio.plugins.wbmp.WBMPImageWriterSpi#getDescription(Locale)->String::: image writer spi get description
com.sun.imageio.plugins.wbmp.WBMPImageWriterSpi#onRegistration(ServiceRegistry, Class)->void::: image writer spi on registration
com.sun.imageio.plugins.wbmp.WBMPImageWriterSpi#canEncodeImage(ImageTypeSpecifier)->boolean::: image writer spi can encode image
com.sun.imageio.plugins.wbmp.WBMPImageWriterSpi#createWriterInstance(Object)->ImageWriter::: image writer spi create writer instance
com.sun.imageio.plugins.wbmp.WBMPMetadata#isReadOnly()->boolean::: metadata is read only
com.sun.imageio.plugins.wbmp.WBMPMetadata#getAsTree(String)->Node::: metadata get as tree
com.sun.imageio.plugins.wbmp.WBMPMetadata#setFromTree(String, Node)->void::: metadata set from tree
com.sun.imageio.plugins.wbmp.WBMPMetadata#mergeTree(String, Node)->void::: metadata merge tree
com.sun.imageio.plugins.wbmp.WBMPMetadata#reset()->void::: metadata reset
com.sun.imageio.plugins.wbmp.WBMPMetadata#getStandardChromaNode()->IIOMetadataNode::: metadata get standard chroma node
com.sun.imageio.plugins.wbmp.WBMPMetadata#getStandardDimensionNode()->IIOMetadataNode::: metadata get standard dimension node
com.sun.imageio.plugins.wbmp.WBMPMetadataFormat#canNodeAppear(String, ImageTypeSpecifier)->boolean::: metadata format can node appear
com.sun.imageio.plugins.wbmp.WBMPMetadataFormat#getInstance()->IIOMetadataFormat::: metadata format get instance
