ExsltBase#toString(Node):::Return the string value of a Node:::if->return->getStringValue->else->value->n->getNodeValue->if->nodelist->n->getChildNodes->buf->new->StringBuffer->for->i->nodelist->getLength->return->buf->toString->else->return
ExsltBase#toNumber(Node):::Convert the string value of a Node to a number:::d->str->toString->try->Double->valueOf->doubleValue->catch->finally->return
ExsltCommon#objectType(Object):::The exsl:object-type function returns a string giving the type of the object passed as the argument:::if->return->else->if->return->else->if->return->else->if->dtmI->getDTMIterator->if->return->else->return->else->return
ExsltCommon#nodeSet(ExpressionContext, Object):::The exsl:node-set function converts a result tree fragment (which is what you get when you use the content of xsl:variable rather than its select attribute to give a variable value) into a node set:::return->Extensions->nodeset
ExsltDatetime#dateTime():::The date:date-time function returns the current date and time as a date/time string:::cal->Calendar->getInstance->datetime->cal->getTime->dateFormat->new->SimpleDateFormat->buff->dateFormat->format->new->StringBuffer->offset->cal->get->cal->get->if->buff->append->else->hrs->min->posneg->buff->append->formatDigits->append->append->formatDigits->append->return->buff->toString
ExsltDatetime#date(String):::The date:date function returns the date specified in the date/time string given as the argument:::edz->getEraDatetimeZone->leader->datetime->zone->if->return->formatsIn->formatOut->date->testFormats->if->return->dateFormat->new->SimpleDateFormat->dateFormat->setLenient->dateOut->dateFormat->format->if->dateOut->length->return->else->return
ExsltDatetime#date():::See above.:::datetime->dateTime->toString->date->datetime->datetime->indexOf->substring->zone->datetime->getZoneStart->substring->return
ExsltDatetime#time(String):::The date:time function returns the time specified in the date/time string given as the argument:::edz->getEraDatetimeZone->time->zone->if->return->formatsIn->formatOut->date->testFormats->if->return->dateFormat->new->SimpleDateFormat->out->dateFormat->format->return
ExsltDatetime#time():::See above.:::datetime->dateTime->toString->time->datetime->datetime->indexOf->substring->return
ExsltDatetime#year(String):::The date:year function returns the year of a date as a number:::edz->getEraDatetimeZone->ad->length->datetime->if->return->formats->yr->getNumber->if->return->else->return
ExsltDatetime#year():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#monthInYear(String):::The date:month-in-year function returns the month of a date as a number:::edz->getEraDatetimeZone->datetime->if->return->formats->return->getNumber
ExsltDatetime#monthInYear():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#weekInYear(String):::The date:week-in-year function returns the week of the year as a number:::edz->getEraDatetimeZone->datetime->if->return->formats->return->getNumber
ExsltDatetime#weekInYear():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#dayInYear(String):::The date:day-in-year function returns the day of a date in a year as a number:::edz->getEraDatetimeZone->datetime->if->return->formats->return->getNumber
ExsltDatetime#dayInYear():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#dayInMonth(String):::The date:day-in-month function returns the day of a date as a number:::edz->getEraDatetimeZone->datetime->formats->day->getNumber->return
ExsltDatetime#dayInMonth():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#dayOfWeekInMonth(String):::The date:day-of-week-in-month function returns the day-of-the-week in a month of a date as a number (e.g:::edz->getEraDatetimeZone->datetime->if->return->formats->return->getNumber
ExsltDatetime#dayOfWeekInMonth():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#dayInWeek(String):::The date:day-in-week function returns the day of the week given in a date as a number:::edz->getEraDatetimeZone->datetime->if->return->formats->return->getNumber
ExsltDatetime#dayInWeek():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#hourInDay(String):::The date:hour-in-day function returns the hour of the day as a number:::edz->getEraDatetimeZone->datetime->if->return->formats->return->getNumber
ExsltDatetime#hourInDay():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#minuteInHour(String):::The date:minute-in-hour function returns the minute of the hour as a number:::edz->getEraDatetimeZone->datetime->if->return->formats->return->getNumber
ExsltDatetime#minuteInHour():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#secondInMinute(String):::The date:second-in-minute function returns the second of the minute as a number:::edz->getEraDatetimeZone->datetime->if->return->formats->return->getNumber
ExsltDatetime#secondInMinute():::See above.:::cal->Calendar->getInstance->return->cal->get
ExsltDatetime#leapYear(String):::The date:leap-year function returns true if the year given in a date is a leap year:::edz->getEraDatetimeZone->datetime->if->return->new->XNumber->formats->dbl->getNumber->if->return->new->XNumber->yr->return->new->XBoolean
ExsltDatetime#leapYear():::See above.:::cal->Calendar->getInstance->yr->cal->get->return
ExsltDatetime#monthName(String):::The date:month-name function returns the full name of the month of a date:::edz->getEraDatetimeZone->datetime->if->return->formatsIn->formatOut->return->getNameOrAbbrev
ExsltDatetime#monthName():::See above.:::cal->Calendar->getInstance->format->return->getNameOrAbbrev
ExsltDatetime#monthAbbreviation(String):::The date:month-abbreviation function returns the abbreviation of the month of a date:::edz->getEraDatetimeZone->datetime->if->return->formatsIn->formatOut->return->getNameOrAbbrev
ExsltDatetime#monthAbbreviation():::See above.:::format->return->getNameOrAbbrev
ExsltDatetime#dayName(String):::The date:day-name function returns the full name of the day of the week of a date:::edz->getEraDatetimeZone->datetime->if->return->formatsIn->formatOut->return->getNameOrAbbrev
ExsltDatetime#dayName():::See above.:::format->return->getNameOrAbbrev
ExsltDatetime#dayAbbreviation(String):::The date:day-abbreviation function returns the abbreviation of the day of the week of a date:::edz->getEraDatetimeZone->datetime->if->return->formatsIn->formatOut->return->getNameOrAbbrev
ExsltDatetime#dayAbbreviation():::See above.:::format->return->getNameOrAbbrev
ExsltDatetime#formatDate(String, String):::The date:format-date function formats a date/time according to a pattern:::yearSymbols->monthSymbols->daySymbols->timeZone->zone->if->dateTime->endsWith->dateTime->endsWith->TimeZone->getTimeZone->dateTime->dateTime->length->substring->else->if->dateTime->length->dateTime->dateTime->length->charAt->dateTime->dateTime->length->charAt->dateTime->dateTime->length->charAt->offset->dateTime->dateTime->length->substring->if->equals->equals->TimeZone->getTimeZone->else->TimeZone->getTimeZone->dateTime->dateTime->length->substring->else->TimeZone->getDefault->formats->try->inFormat->new->SimpleDateFormat->inFormat->setLenient->d->inFormat->parse->outFormat->strip->new->SimpleDateFormat->outFormat->setTimeZone->return->outFormat->format->catch->finally->for->i->try->inFormat->new->SimpleDateFormat->inFormat->setLenient->d->inFormat->parse->outFormat->strip->new->SimpleDateFormat->outFormat->setTimeZone->return->outFormat->format->catch->finally->try->inFormat->new->SimpleDateFormat->inFormat->setLenient->d->inFormat->parse->outFormat->strip->new->SimpleDateFormat->outFormat->setTimeZone->return->outFormat->format->catch->finally->try->inFormat->new->SimpleDateFormat->inFormat->setLenient->d->inFormat->parse->outFormat->strip->new->SimpleDateFormat->outFormat->setTimeZone->return->outFormat->format->catch->finally->return
ExsltDynamic#max(ExpressionContext, NodeList, String):::The dyn:max function calculates the maximum value for the nodes passed as the first argument, where the value of each node is calculated dynamically using an XPath expression passed as a string as the second argument:::xctxt->if->getXPathContext->else->throw->XSLMessages->new->ObjectArr->createMessage->new->SAXNotSupportedException->if->expr->length->return->contextNodes->new->NodeSetDTM->xctxt->pushContextNodeList->maxValue->for->i->contextNodes->getLength->xctxt->popContextNodeList->return
ExsltDynamic#min(ExpressionContext, NodeList, String):::The dyn:min function calculates the minimum value for the nodes passed as the first argument, where the value of each node is calculated dynamically using an XPath expression passed as a string as the second argument:::xctxt->if->getXPathContext->else->throw->XSLMessages->new->ObjectArr->createMessage->new->SAXNotSupportedException->if->expr->length->return->contextNodes->new->NodeSetDTM->xctxt->pushContextNodeList->minValue->for->i->nl->getLength->xctxt->popContextNodeList->return
ExsltDynamic#sum(ExpressionContext, NodeList, String):::The dyn:sum function calculates the sum for the nodes passed as the first argument, where the value of each node is calculated dynamically using an XPath expression passed as a string as the second argument:::xctxt->if->getXPathContext->else->throw->XSLMessages->new->ObjectArr->createMessage->new->SAXNotSupportedException->if->expr->length->return->contextNodes->new->NodeSetDTM->xctxt->pushContextNodeList->sum->for->i->nl->getLength->xctxt->popContextNodeList->return
ExsltDynamic#map(ExpressionContext, NodeList, String):::The dyn:map function evaluates the expression passed as the second argument for each of the nodes passed as the first argument, and returns a node set of those values:::xctxt->lDoc->if->getXPathContext->else->throw->XSLMessages->new->ObjectArr->createMessage->new->SAXNotSupportedException->if->expr->length->return->new->NodeSet->contextNodes->new->NodeSetDTM->xctxt->pushContextNodeList->resultSet->new->NodeSet->resultSet->setShouldCacheNodes->for->i->nl->getLength->xctxt->popContextNodeList->return
ExsltDynamic#evaluate(ExpressionContext, String):::The dyn:evaluate function evaluates a string as an XPath expression and returns the resulting value, which might be a boolean, number, string, node set, result tree fragment or external object:::if->xctxt->try->getXPathContext->dynamicXPath->xctxt->getSAXLocator->xctxt->getNamespaceContext->new->XPath->return->dynamicXPath->myContext->getContextNode->xctxt->getNamespaceContext->execute->catch->return->xctxt->getDTMManager->new->XNodeSet->finally->else->throw->XSLMessages->new->ObjectArr->createMessage->new->SAXNotSupportedException
ExsltDynamic#closure(ExpressionContext, NodeList, String):::The dyn:closure function creates a node set resulting from transitive closure of evaluating the expression passed as the second argument on each of the nodes passed as the first argument, then on the node set resulting from that and so on until no more nodes are found:::xctxt->if->getXPathContext->else->throw->XSLMessages->new->ObjectArr->createMessage->new->SAXNotSupportedException->if->expr->length->return->new->NodeSet->closureSet->new->NodeSet->closureSet->setShouldCacheNodes->iterationList->do->iterationSet->new->NodeSet->contextNodes->new->NodeSetDTM->xctxt->pushContextNodeList->for->i->iterationList->getLength->xctxt->popContextNodeList->for->i->iterationList->getLength->while->iterationList->getLength->return
ExsltMath#max(NodeList):::The math:max function returns the maximum value of the nodes passed as the argument:::if->nl->getLength->return->m->for->i->nl->getLength->return
ExsltMath#min(NodeList):::The math:min function returns the minimum value of the nodes passed as the argument:::if->nl->getLength->return->m->for->i->nl->getLength->return
ExsltMath#highest(NodeList):::The math:highest function returns the nodes in the node set whose value is the maximum value for the node set:::maxValue->max->highNodes->new->NodeSet->highNodes->setShouldCacheNodes->if->Double->isNaN->return->for->i->nl->getLength->return
ExsltMath#lowest(NodeList):::The math:lowest function returns the nodes in the node set whose value is the minimum value for the node set:::minValue->min->lowNodes->new->NodeSet->lowNodes->setShouldCacheNodes->if->Double->isNaN->return->for->i->nl->getLength->return
ExsltMath#abs(double):::The math:abs function returns the absolute value of a number.:::return->Math->abs
ExsltMath#acos(double):::The math:acos function returns the arccosine value of a number.:::return->Math->acos
ExsltMath#asin(double):::The math:asin function returns the arcsine value of a number.:::return->Math->asin
ExsltMath#atan(double):::The math:atan function returns the arctangent value of a number.:::return->Math->atan
ExsltMath#atan2(double, double):::The math:atan2 function returns the angle ( in radians ) from the X axis to a point (y,x).:::return->Math->atan2
ExsltMath#cos(double):::The math:cos function returns cosine of the passed argument.:::return->Math->cos
ExsltMath#exp(double):::The math:exp function returns e (the base of natural logarithms) raised to a power.:::return->Math->exp
ExsltMath#log(double):::The math:log function returns the natural logarithm of a number.:::return->Math->log
ExsltMath#power(double, double):::The math:power function returns the value of a base expression taken to a specified power.:::return->Math->pow
ExsltMath#random():::The math:random function returns a random number from 0 to 1.:::return->Math->random
ExsltMath#sin(double):::The math:sin function returns the sine of the number.:::return->Math->sin
ExsltMath#sqrt(double):::The math:sqrt function returns the square root of a number.:::return->Math->sqrt
ExsltMath#tan(double):::The math:tan function returns the tangent of the number passed as an argument.:::return->Math->tan
ExsltMath#constant(String, double):::The math:constant function returns the specified constant to a set precision:::value->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->if->bits->if->value->length->value->substring->return->Double->parseDouble->else->return
ExsltSets#leading(NodeList, NodeList):::The set:leading function returns the nodes in the node set passed as the first argument that precede, in document order, the first node in the node set passed as the second argument:::if->nl2->getLength->return->ns1->new->NodeSet->leadNodes->new->NodeSet->endNode->nl2->item->if->ns1->contains->return->for->i->nl1->getLength->return
ExsltSets#trailing(NodeList, NodeList):::The set:trailing function returns the nodes in the node set passed as the first argument that follow, in document order, the first node in the node set passed as the second argument:::if->nl2->getLength->return->ns1->new->NodeSet->trailNodes->new->NodeSet->startNode->nl2->item->if->ns1->contains->return->for->i->nl1->getLength->return
ExsltSets#intersection(NodeList, NodeList):::The set:intersection function returns a node set comprising the nodes that are within both the node sets passed as arguments to it.:::ns1->new->NodeSet->ns2->new->NodeSet->inter->new->NodeSet->inter->setShouldCacheNodes->for->i->ns1->getLength->return
ExsltSets#difference(NodeList, NodeList):::The set:difference function returns the difference between two node sets - those nodes that are in the node set passed as the first argument that are not in the node set passed as the second argument.:::ns1->new->NodeSet->ns2->new->NodeSet->diff->new->NodeSet->diff->setShouldCacheNodes->for->i->ns1->getLength->return
ExsltSets#distinct(NodeList):::The set:distinct function returns a subset of the nodes contained in the node-set NS passed as the first argument:::dist->new->NodeSet->dist->setShouldCacheNodes->stringTable->new->HashMap<>->for->i->nl->getLength->return
ExsltSets#hasSameNode(NodeList, NodeList):::The set:has-same-node function returns true if the node set passed as the first argument shares any nodes with the node set passed as the second argument:::ns1->new->NodeSet->ns2->new->NodeSet->for->i->ns1->getLength->return
ExsltStrings#align(String, String, String):::The str:align function aligns a string within another string:::if->targetStr->length->paddingStr->length->return->targetStr->paddingStr->length->substring->if->type->equals->return->paddingStr->paddingStr->length->targetStr->length->substring->else->if->type->equals->startIndex->paddingStr->length->targetStr->length->return->paddingStr->substring->paddingStr->targetStr->length->substring->else->return->paddingStr->targetStr->length->substring
ExsltStrings#align(String, String):::See above:::return->align
ExsltStrings#concat(NodeList):::The str:concat function takes a node set and returns the concatenation of the string values of the nodes in that node set:::sb->new->StringBuffer->for->i->nl->getLength->return->sb->toString
ExsltStrings#padding(double, String):::The str:padding function creates a padding string of a certain length:::if->pattern->length->return->sb->new->StringBuffer->len->numAdded->index->while->if->pattern->length->sb->pattern->charAt->append->return->sb->toString
ExsltStrings#padding(double):::See above:::return->padding
ExsltStrings#split(String, String):::The str:split function splits up a string and returns a node set of token elements, each containing one token from the string:::resultSet->new->NodeSet->resultSet->setShouldCacheNodes->done->fromIndex->matchIndex->token->while->str->length->str->indexOf->if->str->substring->pattern->length->else->str->substring->doc->JdkXmlUtils->getDOMDocument->synchronized->element->doc->createElement->text->doc->createTextNode->element->appendChild->resultSet->addNode->return
ExsltStrings#split(String):::See above:::return->split
ExsltStrings#tokenize(String, String):::The str:tokenize function splits up a string and returns a node set of token elements, each containing one token from the string:::resultSet->new->NodeSet->if->delims->length->lTokenizer->new->StringTokenizer->doc->JdkXmlUtils->getDOMDocument->synchronized->while->lTokenizer->hasMoreTokens->element->doc->createElement->element->doc->lTokenizer->nextToken->createTextNode->appendChild->resultSet->addNode->else->doc->JdkXmlUtils->getDOMDocument->synchronized->for->i->toTokenize->length->return
ExsltStrings#tokenize(String):::See above:::return->tokenize
Extensions#nodeset(ExpressionContext, Object):::This method is an extension that implements as a Xalan extension the node-set function also found in xt and saxon:::textNodeValue->if->return->new->NodeSet->else->if->else->if->booleanValue->new->XBoolean->str->else->if->doubleValue->new->XNumber->str->else->rtf->toString->myDoc->JdkXmlUtils->getDOMDocument->textNode->myDoc->createTextNode->docFrag->myDoc->createDocumentFragment->docFrag->appendChild->return->new->NodeSet
Extensions#intersection(NodeList, NodeList):::Returns the intersection of two node-sets.:::return->ExsltSets->intersection
Extensions#difference(NodeList, NodeList):::Returns the difference between two node-sets.:::return->ExsltSets->difference
Extensions#distinct(NodeList):::Returns node-set containing distinct string values.:::return->ExsltSets->distinct
Extensions#hasSameNodes(NodeList, NodeList):::Returns true if both node-sets contain the same set of nodes.:::ns1->new->NodeSet->ns2->new->NodeSet->if->ns1->getLength->ns2->getLength->return->for->i->ns1->getLength->return
Extensions#evaluate(ExpressionContext, String):::Returns the result of evaluating the argument as a string containing an XPath expression:::return->ExsltDynamic->evaluate
Extensions#tokenize(String, String):::Returns a NodeSet containing one text node for each token in the first argument:::doc->JdkXmlUtils->getDOMDocument->lTokenizer->new->StringTokenizer->resultSet->new->NodeSet->synchronized->while->lTokenizer->hasMoreTokens->resultSet->doc->lTokenizer->nextToken->createTextNode->addNode->return
Extensions#tokenize(String):::Returns a NodeSet containing one text node for each token in the first argument:::return->tokenize
NodeInfo#systemId(ExpressionContext):::systemId returns the system id of the current context node.:::contextNode->context->getContextNode->nodeHandler->getDTMNodeNumber->locator->getDTM->getSourceLocatorFor->if->return->locator->getSystemId->else->return
NodeInfo#systemId(NodeList):::systemId returns the system id of the node passed as argument:::if->nodeList->getLength->return->node->nodeList->item->nodeHandler->getDTMNodeNumber->locator->getDTM->getSourceLocatorFor->if->return->locator->getSystemId->else->return
NodeInfo#publicId(ExpressionContext):::publicId returns the public identifier of the current context node:::contextNode->context->getContextNode->nodeHandler->getDTMNodeNumber->locator->getDTM->getSourceLocatorFor->if->return->locator->getPublicId->else->return
NodeInfo#publicId(NodeList):::publicId returns the public identifier of the node passed as argument:::if->nodeList->getLength->return->node->nodeList->item->nodeHandler->getDTMNodeNumber->locator->getDTM->getSourceLocatorFor->if->return->locator->getPublicId->else->return
NodeInfo#lineNumber(ExpressionContext):::lineNumber returns the line number of the current context node:::contextNode->context->getContextNode->nodeHandler->getDTMNodeNumber->locator->getDTM->getSourceLocatorFor->if->return->locator->getLineNumber->else->return
NodeInfo#lineNumber(NodeList):::lineNumber returns the line number of the node passed as argument:::if->nodeList->getLength->return->node->nodeList->item->nodeHandler->getDTMNodeNumber->locator->getDTM->getSourceLocatorFor->if->return->locator->getLineNumber->else->return
NodeInfo#columnNumber(ExpressionContext):::columnNumber returns the column number of the current context node:::contextNode->context->getContextNode->nodeHandler->getDTMNodeNumber->locator->getDTM->getSourceLocatorFor->if->return->locator->getColumnNumber->else->return
NodeInfo#columnNumber(NodeList):::columnNumber returns the column number of the node passed as argument:::if->nodeList->getLength->return->node->nodeList->item->nodeHandler->getDTMNodeNumber->locator->getDTM->getSourceLocatorFor->if->return->locator->getColumnNumber->else->return
