PartialParser#getLastExpressionStart(Context, String):::Parse potentially partial code and keep track of the start of last expression.:::
Shell#main(String[]):::Main entry point with the default input, output and error streams.:::try->exitCode->main->if->System->exit->catch->println->System->exit->finally
Shell#main(InputStream, OutputStream, OutputStream, String[]):::Starting point for executing a Shell:::return->new->Shell->run
Shell#run(InputStream, OutputStream, OutputStream, String[]):::Run method logic.:::context->makeContext->if->return->global->context->createGlobal->env->context->getEnv->if->println->files->env->getFiles->if->files->isEmpty->return->readEvalPrint->if->return->compileScripts->if->return->runFXScripts->return->runScripts
Shell#apply(ScriptFunction, Object):::Hook to ScriptFunction "apply":::return->ScriptRuntime->apply
Shell#getLastExpressionStart(Context, String):::Parse potentially partial code and keep track of the start of last expression:::exprStart->p->context->getEnv->sourceFor->new->Context.ThrowErrorManager->new->Parser->try->p->parse->catch->finally->return
Shell#readEvalPrint(Context, Global):::read-eval-print loop for Nashorn shell.:::prompt->bundle->getString->in->new->InputStreamReader->new->BufferedReader->err->context->getErr->oldGlobal->Context->getGlobal->globalChanged->env->context->getEnv->try->if->Context->setGlobal->global->addShellBuiltins->while->err->print->err->flush->source->try->in->readLine->catch->err->ioe->toString->println->finally->if->break->if->source->isEmpty->continue->try->res->context->eval->if->err->toString->println->catch->err->println->if->e->printStackTrace->finally->catch->finally->if->Context->setGlobal->return
Shell#toString(Object, Global):::Converts result to a printable string:::if->return->result->toString->if->return->JSType->toPrimitive->toString->if->isArrayWithDefaultToString->sb->new->StringBuilder->iter->ArrayLikeIterator->arrayLikeIterator->while->iter->hasNext->obj->iter->next->if->sb->toString->append->if->iter->hasNext->sb->append->return->sb->toString->return->JSType->toString
ShellFunctions#input(Object, Object, Object):::Nashorn extension: global.input (shell-interactive-mode-only) Read one or more lines of input from the standard input till the given end marker is seen in standard input.:::endMarkerStr->JSType->toString->promptStr->JSType->toString->buf->new->StringBuilder->while->line->ScriptingFunctions->readLine->if->line->equals->break->buf->append->buf->append->return->buf->toString
ShellFunctions#evalinput(Object, Object, Object):::Nashorn extension: Reads zero or more lines from standard input and evaluates the concatenated string as code:::return->Global->input->eval
