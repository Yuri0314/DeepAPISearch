JndiLoginModule#login():::Prompt for username and password:::if->throw->new->LoginException->if->throw->new->LoginException->if->println->println->if->try->attemptAuthentication->if->println->return->catch->cleanState->if->le->toString->println->finally->else->if->try->attemptAuthentication->if->println->return->catch->cleanState->if->println->throw->finally->try->attemptAuthentication->if->println->return->catch->cleanState->if->println->throw->finally
JndiLoginModule#commit():::Abstract method to commit the authentication process (phase 2):::if->return->else->if->subject->isReadOnly->cleanState->throw->new->LoginException->if->subject->getPrincipals->contains->subject->getPrincipals->add->if->subject->getPrincipals->contains->subject->getPrincipals->add->if->subject->getPrincipals->contains->subject->getPrincipals->add->for->i->supplementaryGroups->size->if->println->println->println->println->cleanState->return
JndiLoginModule#abort():::This method is called if the LoginContext's overall authentication failed:::if->println->if->return->else->if->cleanState->new->LinkedList<UnixNumericGroupPrincipal>->else->logout->return
JndiLoginModule#logout():::Logout a user:::if->subject->isReadOnly->cleanState->throw->new->LoginException->subject->getPrincipals->remove->subject->getPrincipals->remove->subject->getPrincipals->remove->for->i->supplementaryGroups->size->cleanState->new->LinkedList<UnixNumericGroupPrincipal>->if->println->return
Krb5LoginModule#login():::Authenticate the user:::if->try->if->println->refresh->catch->le->ke->getMessage->new->LoginException->le->initCause->throw->finally->principalProperty->System->getProperty->if->new->StringBuffer->else->if->new->StringBuffer->validateConfiguration->if->krb5PrincName->toString->equals->if->try->attemptAuthentication->if->println->cleanState->return->catch->cleanState->if->le->getMessage->println->finally->else->if->try->attemptAuthentication->cleanState->return->catch->if->e->getMessage->println->cleanState->throw->finally->try->attemptAuthentication->cleanState->return->catch->if->e->getMessage->println->cleanState->throw->finally
Krb5LoginModule#logout():::Logout the user:::if->println->if->subject->isReadOnly->cleanKerberosCred->throw->new->LoginException->subject->getPrincipals->remove->it->subject->getPrivateCredentials->iterator->while->it->hasNext->o->it->next->if->it->remove->cleanKerberosCred->if->println->return
LdapLoginModule#login():::Begin user authentication:::if->throw->new->LoginException->if->println->if->try->attemptAuthentication->if->println->return->catch->cleanState->if->le->toString->println->finally->else->if->try->attemptAuthentication->if->println->return->catch->cleanState->if->println->throw->finally->try->attemptAuthentication->if->println->return->catch->cleanState->if->println->throw->finally
LdapLoginModule#commit():::Complete user authentication:::if->return->else->if->subject->isReadOnly->cleanState->throw->new->LoginException->principals->subject->getPrincipals->if->principals->contains->principals->add->if->println->if->principals->contains->principals->add->if->println->if->principals->contains->principals->add->if->println->cleanState->return
LdapLoginModule#abort():::Abort user authentication:::if->println->if->return->else->if->cleanState->else->logout->return
LdapLoginModule#logout():::Logout a user:::if->subject->isReadOnly->cleanState->throw->new->LoginException->principals->subject->getPrincipals->principals->remove->principals->remove->if->principals->remove->cleanState->if->println->return
NTLoginModule#initialize(Subject, CallbackHandler, Map, Map):::Initialize this LoginModule.:::options->get->equalsIgnoreCase->options->get->equalsIgnoreCase->if
NTLoginModule#login():::Import underlying NT system identity information.:::try->new->NTSystem->catch->if->println->throw->System->getProperty->new->FailedLoginException->finally->if->ntSystem->getName->throw->new->FailedLoginException->ntSystem->getName->new->NTUserPrincipal->if->println->userPrincipal->getName->println->if->ntSystem->getUserSID->ntSystem->getUserSID->new->NTSidUserPrincipal->if->userSID->getName->println->if->ntSystem->getDomain->ntSystem->getDomain->new->NTDomainPrincipal->if->userDomain->getName->println->if->ntSystem->getDomainSID->ntSystem->getDomainSID->new->NTSidDomainPrincipal->if->domainSID->getName->println->if->ntSystem->getPrimaryGroupID->ntSystem->getPrimaryGroupID->new->NTSidPrimaryGroupPrincipal->if->primaryGroup->getName->println->if->ntSystem->getGroupIDs->ntSystem->getGroupIDs->groupSIDs->ntSystem->getGroupIDs->new->NTSidGroupPrincipalArr->for->i->if->ntSystem->getImpersonationToken->ntSystem->getImpersonationToken->new->NTNumericCredential->if->ntSystem->getImpersonationToken->println->return
NTLoginModule#commit():::This method is called if the LoginContext's overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules succeeded):::if->if->println->return->if->subject->isReadOnly->throw->new->LoginException->principals->subject->getPrincipals->if->principals->contains->principals->add->if->principals->contains->principals->add->if->principals->contains->principals->add->if->principals->contains->principals->add->if->principals->contains->principals->add->for->i->pubCreds->subject->getPublicCredentials->if->pubCreds->contains->pubCreds->add->return
NTLoginModule#abort():::This method is called if the LoginContext's overall authentication failed:::if->println->if->return->else->if->else->logout->return
NTLoginModule#logout():::Logout the user:::if->subject->isReadOnly->throw->new->LoginException->principals->subject->getPrincipals->if->principals->contains->principals->remove->if->principals->contains->principals->remove->if->principals->contains->principals->remove->if->principals->contains->principals->remove->if->principals->contains->principals->remove->for->i->pubCreds->subject->getPublicCredentials->if->pubCreds->contains->pubCreds->remove->if->println->return
NTSystem#getName():::Get the username for the current NT user.:::return
NTSystem#getDomain():::Get the domain for the current NT user.:::return
NTSystem#getDomainSID():::Get a printable SID for the current NT user's domain.:::return
NTSystem#getUserSID():::Get a printable SID for the current NT user.:::return
NTSystem#getPrimaryGroupID():::Get a printable primary group SID for the current NT user.:::return
NTSystem#getGroupIDs():::Get the printable group SIDs for the current NT user.:::return->groupIDs->clone
NTSystem#getImpersonationToken():::Get an impersonation token for the current NT user.:::if->getImpersonationToken0->return
UnixLoginModule#initialize(Subject, CallbackHandler, Map, Map):::Initialize this LoginModule.:::options->get->equalsIgnoreCase
UnixLoginModule#login():::Authenticate the user (first phase):::unixGroups->try->new->UnixSystem->catch->throw->System->getProperty->new->FailedLoginException->finally->ss->getUsername->new->UnixPrincipal->ss->getUid->new->UnixNumericUserPrincipal->ss->getGid->new->UnixNumericGroupPrincipal->if->ss->getGroups->ss->getGroups->ss->getGroups->for->i->if->println->ss->getUid->println->ss->getGid->println->ss->getGroups->for->i->return
UnixLoginModule#commit():::Commit the authentication (second phase):::if->if->println->return->else->if->subject->isReadOnly->throw->new->LoginException->if->subject->getPrincipals->contains->subject->getPrincipals->add->if->subject->getPrincipals->contains->subject->getPrincipals->add->if->subject->getPrincipals->contains->subject->getPrincipals->add->for->i->supplementaryGroups->size->if->println->println->println->println->return
UnixLoginModule#abort():::Abort the authentication (second phase):::if->println->if->return->else->if->new->LinkedList<UnixNumericGroupPrincipal>->else->logout->return
UnixLoginModule#logout():::Logout the user   This method removes the Principals associated with the Subject.:::if->subject->isReadOnly->throw->new->LoginException->subject->getPrincipals->remove->subject->getPrincipals->remove->subject->getPrincipals->remove->for->i->supplementaryGroups->size->new->LinkedList<UnixNumericGroupPrincipal>->if->println->return
UnixSystem#getUsername():::Get the username for the current Unix user.:::return
UnixSystem#getUid():::Get the UID for the current Unix user.:::return
UnixSystem#getGid():::Get the GID for the current Unix user.:::return
UnixSystem#getGroups():::Get the supplementary groups for the current Unix user.:::return->groups->clone
