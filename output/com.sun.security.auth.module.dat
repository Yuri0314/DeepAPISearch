com.sun.security.auth.module.Crypt#crypt(byte[], byte[])->byte[]::: crypt crypt
com.sun.security.auth.module.Crypt#main(String[])->void::: crypt main
com.sun.security.auth.module.JndiLoginModule#initialize(Subject, CallbackHandler, Map, Map)->void::: jndi login module initialize
com.sun.security.auth.module.JndiLoginModule#login()->boolean:::Prompt for username and password
com.sun.security.auth.module.JndiLoginModule#commit()->boolean:::Abstract method to commit the authentication process (phase 2)
com.sun.security.auth.module.JndiLoginModule#abort()->boolean:::This method is called if the LoginContext's overall authentication failed
com.sun.security.auth.module.JndiLoginModule#logout()->boolean:::Logout a user
com.sun.security.auth.module.KeyStoreLoginModule#initialize(Subject, CallbackHandler, Map, Map)->void::: key store login module initialize
com.sun.security.auth.module.KeyStoreLoginModule#login()->boolean::: key store login module login
com.sun.security.auth.module.KeyStoreLoginModule#commit()->boolean::: key store login module commit
com.sun.security.auth.module.KeyStoreLoginModule#abort()->boolean::: key store login module abort
com.sun.security.auth.module.KeyStoreLoginModule#logout()->boolean::: key store login module logout
com.sun.security.auth.module.Krb5LoginModule#initialize(Subject, CallbackHandler, Map, Map)->void::: krb5 login module initialize
com.sun.security.auth.module.Krb5LoginModule#login()->boolean:::Authenticate the user
com.sun.security.auth.module.Krb5LoginModule#commit()->boolean::: krb5 login module commit
com.sun.security.auth.module.Krb5LoginModule#abort()->boolean::: krb5 login module abort
com.sun.security.auth.module.Krb5LoginModule#logout()->boolean:::Logout the user
com.sun.security.auth.module.LdapLoginModule#initialize(Subject, CallbackHandler, Map, Map)->void::: ldap login module initialize
com.sun.security.auth.module.LdapLoginModule#login()->boolean:::Begin user authentication
com.sun.security.auth.module.LdapLoginModule#commit()->boolean:::Complete user authentication
com.sun.security.auth.module.LdapLoginModule#abort()->boolean:::Abort user authentication
com.sun.security.auth.module.LdapLoginModule#logout()->boolean:::Logout a user
com.sun.security.auth.module.NTLoginModule#initialize(Subject, CallbackHandler, Map, Map)->void:::Initialize this LoginModule.
com.sun.security.auth.module.NTLoginModule#login()->boolean:::Import underlying NT system identity information.
com.sun.security.auth.module.NTLoginModule#commit()->boolean:::This method is called if the LoginContext's overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules succeeded)
com.sun.security.auth.module.NTLoginModule#abort()->boolean:::This method is called if the LoginContext's overall authentication failed
com.sun.security.auth.module.NTLoginModule#logout()->boolean:::Logout the user
com.sun.security.auth.module.NTSystem#getName()->String:::Get the username for the current NT user.
com.sun.security.auth.module.NTSystem#getDomain()->String:::Get the domain for the current NT user.
com.sun.security.auth.module.NTSystem#getDomainSID()->String:::Get a printable SID for the current NT user's domain.
com.sun.security.auth.module.NTSystem#getUserSID()->String:::Get a printable SID for the current NT user.
com.sun.security.auth.module.NTSystem#getPrimaryGroupID()->String:::Get a printable primary group SID for the current NT user.
com.sun.security.auth.module.NTSystem#getGroupIDs()->String[]:::Get the printable group SIDs for the current NT user.
com.sun.security.auth.module.NTSystem#getImpersonationToken()->long:::Get an impersonation token for the current NT user.
com.sun.security.auth.module.UnixLoginModule#initialize(Subject, CallbackHandler, Map, Map)->void:::Initialize this LoginModule.
com.sun.security.auth.module.UnixLoginModule#login()->boolean:::Authenticate the user (first phase)
com.sun.security.auth.module.UnixLoginModule#commit()->boolean:::Commit the authentication (second phase)
com.sun.security.auth.module.UnixLoginModule#abort()->boolean:::Abort the authentication (second phase)
com.sun.security.auth.module.UnixLoginModule#logout()->boolean:::Logout the user   This method removes the Principals associated with the Subject.
com.sun.security.auth.module.UnixSystem#getUsername()->String:::Get the username for the current Unix user.
com.sun.security.auth.module.UnixSystem#getUid()->long:::Get the UID for the current Unix user.
com.sun.security.auth.module.UnixSystem#getGid()->long:::Get the GID for the current Unix user.
com.sun.security.auth.module.UnixSystem#getGroups()->long[]:::Get the supplementary groups for the current Unix user.
