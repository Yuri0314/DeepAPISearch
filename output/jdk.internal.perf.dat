jdk.internal.perf.Perf.GetPerfAction#run()->Perf:::Run the Perf.getPerf() method in a privileged context.
jdk.internal.perf.Perf#getPerf()->Perf:::Return a reference to the singleton Perf instance
jdk.internal.perf.Perf#attach(int, String)->ByteBuffer:::Attach to the instrumentation buffer for the specified Java virtual machine
jdk.internal.perf.Perf#attach(String, int, String)->ByteBuffer:::Attach to the instrumentation buffer for the specified Java virtual machine owned by the given user
jdk.internal.perf.Perf#createLong(String, int, int, long)->ByteBuffer:::Create a long scalar entry in the instrumentation buffer with the given variability characteristic, units, and initial value
jdk.internal.perf.Perf#createString(String, int, int, String, int)->ByteBuffer:::Create a String entry in the instrumentation buffer with the given variability characteristic, units, and initial value
jdk.internal.perf.Perf#createString(String, int, int, String)->ByteBuffer:::Create a String entry in the instrumentation buffer with the given variability characteristic, units, and initial value
jdk.internal.perf.Perf#createByteArray(String, int, int, byte[], int)->ByteBuffer:::Create a byte vector entry in the instrumentation buffer with the given variability characteristic, units, and initial value
jdk.internal.perf.Perf#highResCounter()->long:::Return the value of the High Resolution Counter
jdk.internal.perf.Perf#highResFrequency()->long:::Returns the frequency of the High Resolution Counter, in ticks per second
jdk.internal.perf.PerfCounter#newPerfCounter(String)->PerfCounter::: perf counter new perf counter
jdk.internal.perf.PerfCounter#newConstantPerfCounter(String)->PerfCounter::: perf counter new constant perf counter
jdk.internal.perf.PerfCounter#get()->long:::Returns the current value of the perf counter.
jdk.internal.perf.PerfCounter#set(long)->void:::Sets the value of the perf counter to the given newValue.
jdk.internal.perf.PerfCounter#add(long)->void:::Adds the given value to the perf counter.
jdk.internal.perf.PerfCounter#increment()->void:::Increments the perf counter with 1.
jdk.internal.perf.PerfCounter#addTime(long)->void:::Adds the given interval to the perf counter.
jdk.internal.perf.PerfCounter#addElapsedTimeFrom(long)->void:::Adds the elapsed time from the given start time (ns) to the perf counter.
jdk.internal.perf.PerfCounter#toString()->String::: perf counter to string
jdk.internal.perf.PerfCounter#getFindClasses()->PerfCounter:::Number of findClass calls
jdk.internal.perf.PerfCounter#getFindClassTime()->PerfCounter:::Time (ns) spent in finding classes that includes lookup and read class bytes and defineClass
jdk.internal.perf.PerfCounter#getReadClassBytesTime()->PerfCounter:::Time (ns) spent in finding classes
jdk.internal.perf.PerfCounter#getParentDelegationTime()->PerfCounter:::Time (ns) spent in the parent delegation to the parent of the defining class loader
jdk.internal.perf.PerfCounter#getZipFileCount()->PerfCounter:::Number of zip files opened.
jdk.internal.perf.PerfCounter#getZipFileOpenTime()->PerfCounter:::Time (ns) spent in opening the zip files that includes building the entries hash table
