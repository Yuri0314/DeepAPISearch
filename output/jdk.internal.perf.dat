Perf.GetPerfAction#run():::Run the Perf.getPerf() method in a privileged context.:::return->getPerf
Perf#getPerf():::Return a reference to the singleton Perf instance:::security->System->getSecurityManager->if->perm->new->RuntimePermission->security->checkPermission->return
Perf#attach(int, String):::Attach to the instrumentation buffer for the specified Java virtual machine:::if->mode->compareTo->return->attachImpl->else->if->mode->compareTo->return->attachImpl->else->throw->new->IllegalArgumentException
Perf#attach(String, int, String):::Attach to the instrumentation buffer for the specified Java virtual machine owned by the given user:::if->mode->compareTo->return->attachImpl->else->if->mode->compareTo->return->attachImpl->else->throw->new->IllegalArgumentException
Perf#createLong(String, int, int, long):::Create a long scalar entry in the instrumentation buffer with the given variability characteristic, units, and initial value:::
Perf#createString(String, int, int, String, int):::Create a String entry in the instrumentation buffer with the given variability characteristic, units, and initial value:::v->getBytes->v1->new->byteArr->System->arraycopy->return->Math->max->createByteArray
Perf#createString(String, int, int, String):::Create a String entry in the instrumentation buffer with the given variability characteristic, units, and initial value:::v->getBytes->v1->new->byteArr->System->arraycopy->return->createByteArray
Perf#createByteArray(String, int, int, byte[], int):::Create a byte vector entry in the instrumentation buffer with the given variability characteristic, units, and initial value:::
Perf#highResCounter():::Return the value of the High Resolution Counter:::
Perf#highResFrequency():::Returns the frequency of the High Resolution Counter, in ticks per second:::
PerfCounter#get():::Returns the current value of the perf counter.:::return->lb->get
PerfCounter#set(long):::Sets the value of the perf counter to the given newValue.:::lb->put
PerfCounter#add(long):::Adds the given value to the perf counter.:::res->get->lb->put
PerfCounter#increment():::Increments the perf counter with 1.:::add
PerfCounter#addTime(long):::Adds the given interval to the perf counter.:::add
PerfCounter#addElapsedTimeFrom(long):::Adds the elapsed time from the given start time (ns) to the perf counter.:::System->nanoTime->add
PerfCounter#getFindClasses():::Number of findClass calls:::return
PerfCounter#getFindClassTime():::Time (ns) spent in finding classes that includes lookup and read class bytes and defineClass:::return
PerfCounter#getReadClassBytesTime():::Time (ns) spent in finding classes:::return
PerfCounter#getParentDelegationTime():::Time (ns) spent in the parent delegation to the parent of the defining class loader:::return
PerfCounter#getZipFileCount():::Number of zip files opened.:::return
PerfCounter#getZipFileOpenTime():::Time (ns) spent in opening the zip files that includes building the entries hash table:::return
