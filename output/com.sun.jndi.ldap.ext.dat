StartTlsResponseImpl#setEnabledCipherSuites(String[]):::Overrides the default list of cipher suites enabled for use on the TLS connection:::suites->clone
StartTlsResponseImpl#setHostnameVerifier(HostnameVerifier):::Overrides the default hostname verifier used by negotiate() after the TLS handshake has completed:::
StartTlsResponseImpl#negotiate():::Negotiates a TLS session using the default SSL socket factory:::return->negotiate
StartTlsResponseImpl#negotiate(SSLSocketFactory):::Negotiates a TLS session using an SSL socket factory:::if->throw->new->IOException->if->getDefaultFactory->if->println->sslSession->startHandshake->getSession->if->println->verifExcep->try->if->verify->return->catch->finally->if->verifier->verify->return->close->sslSession->invalidate->if->new->SSLPeerUnverifiedException->throw
StartTlsResponseImpl#close():::Closes the TLS connection gracefully and reverts back to the underlying connection.:::if->return->if->println->ldapConnection->replaceStreams->if->println->sslSocket->close
StartTlsResponseImpl#setConnection(Connection, String):::Sets the connection for TLS to use:::
StartTlsResponseImpl#getDefaultFactory()::: start tls response impl get default factory:::if->return->return->SSLSocketFactory->getDefault
StartTlsResponseImpl#startHandshake(SSLSocketFactory)::: start tls response impl start handshake:::if->throw->new->IllegalStateException->if->factory->createSocket->if->println->if->sslSocket->setEnabledCipherSuites->if->println->try->if->println->sslSocket->startHandshake->if->println->ldapConnection->sslSocket->getInputStream->sslSocket->getOutputStream->replaceStreams->if->println->catch->if->println->e->printStackTrace->sslSocket->close->throw->finally->return
StartTlsResponseImpl#verify(String, SSLSession)::: start tls response impl verify:::certs->if->hostname->startsWith->hostname->endsWith->hostname->hostname->length->substring->try->checker->HostnameChecker->getInstance->session->getPeerCertificates->peerCert->if->else->throw->new->SSLPeerUnverifiedException->checker->match->return->catch->cipher->session->getCipherSuite->if->cipher->indexOf->return->throw->throw->new->SSLPeerUnverifiedException->initCause->finally
StartTlsResponseImpl#getPeerPrincipal(SSLSession)::: start tls response impl get peer principal:::principal->try->session->getPeerPrincipal->catch->finally->return
