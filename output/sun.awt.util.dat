sun.awt.util.IdentityArrayList#trimToSize()->void:::Trims the capacity of this IdentityArrayList instance to be the list's current size
sun.awt.util.IdentityArrayList#ensureCapacity(int)->void:::Increases the capacity of this IdentityArrayList instance, if necessary, to ensure that it can hold at least the number of elements specified by the minimum capacity argument.
sun.awt.util.IdentityArrayList#size()->int:::Returns the number of elements in this list.
sun.awt.util.IdentityArrayList#isEmpty()->boolean:::Returns true if this list contains no elements.
sun.awt.util.IdentityArrayList#contains(Object)->boolean:::Returns true if this list contains the specified element
sun.awt.util.IdentityArrayList#indexOf(Object)->int:::Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element
sun.awt.util.IdentityArrayList#lastIndexOf(Object)->int:::Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element
sun.awt.util.IdentityArrayList#toArray()->Object[]:::Returns an array containing all of the elements in this list in proper sequence (from first to last element)
sun.awt.util.IdentityArrayList#toArray(T[])->T[]:::Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array
sun.awt.util.IdentityArrayList#get(int)->E:::Returns the element at the specified position in this list.
sun.awt.util.IdentityArrayList#set(int, E)->E:::Replaces the element at the specified position in this list with the specified element.
sun.awt.util.IdentityArrayList#add(E)->boolean:::Appends the specified element to the end of this list.
sun.awt.util.IdentityArrayList#add(int, E)->void:::Inserts the specified element at the specified position in this list
sun.awt.util.IdentityArrayList#remove(int)->E:::Removes the element at the specified position in this list
sun.awt.util.IdentityArrayList#remove(Object)->boolean:::Removes the first occurrence of the specified element from this list, if it is present
sun.awt.util.IdentityArrayList#clear()->void:::Removes all of the elements from this list
sun.awt.util.IdentityArrayList#addAll(Collection)->boolean:::Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's Iterator
sun.awt.util.IdentityArrayList#addAll(int, Collection)->boolean:::Inserts all of the elements in the specified collection into this list, starting at the specified position
sun.awt.util.IdentityArrayList#removeRange(int, int)->void:::Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive
sun.awt.util.IdentityLinkedList#getFirst()->E:::Returns the first element in this list.
sun.awt.util.IdentityLinkedList#getLast()->E:::Returns the last element in this list.
sun.awt.util.IdentityLinkedList#removeFirst()->E:::Removes and returns the first element from this list.
sun.awt.util.IdentityLinkedList#removeLast()->E:::Removes and returns the last element from this list.
sun.awt.util.IdentityLinkedList#addFirst(E)->void:::Inserts the specified element at the beginning of this list.
sun.awt.util.IdentityLinkedList#addLast(E)->void:::Appends the specified element to the end of this list
sun.awt.util.IdentityLinkedList#contains(Object)->boolean:::Returns true if this list contains the specified element
sun.awt.util.IdentityLinkedList#size()->int:::Returns the number of elements in this list.
sun.awt.util.IdentityLinkedList#add(E)->boolean:::Appends the specified element to the end of this list
sun.awt.util.IdentityLinkedList#remove(Object)->boolean:::Removes the first occurrence of the specified element from this list, if it is present
sun.awt.util.IdentityLinkedList#addAll(Collection)->boolean:::Appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator
sun.awt.util.IdentityLinkedList#addAll(int, Collection)->boolean:::Inserts all of the elements in the specified collection into this list, starting at the specified position
sun.awt.util.IdentityLinkedList#clear()->void:::Removes all of the elements from this list.
sun.awt.util.IdentityLinkedList#get(int)->E:::Returns the element at the specified position in this list.
sun.awt.util.IdentityLinkedList#set(int, E)->E:::Replaces the element at the specified position in this list with the specified element.
sun.awt.util.IdentityLinkedList#add(int, E)->void:::Inserts the specified element at the specified position in this list
sun.awt.util.IdentityLinkedList#remove(int)->E:::Removes the element at the specified position in this list
sun.awt.util.IdentityLinkedList#indexOf(Object)->int:::Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element
sun.awt.util.IdentityLinkedList#lastIndexOf(Object)->int:::Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element
sun.awt.util.IdentityLinkedList#peek()->E:::Retrieves, but does not remove, the head (first element) of this list.
sun.awt.util.IdentityLinkedList#element()->E:::Retrieves, but does not remove, the head (first element) of this list.
sun.awt.util.IdentityLinkedList#poll()->E:::Retrieves and removes the head (first element) of this list
sun.awt.util.IdentityLinkedList#remove()->E:::Retrieves and removes the head (first element) of this list.
sun.awt.util.IdentityLinkedList#offer(E)->boolean:::Adds the specified element as the tail (last element) of this list.
sun.awt.util.IdentityLinkedList#offerFirst(E)->boolean:::Inserts the specified element at the front of this list.
sun.awt.util.IdentityLinkedList#offerLast(E)->boolean:::Inserts the specified element at the end of this list.
sun.awt.util.IdentityLinkedList#peekFirst()->E:::Retrieves, but does not remove, the first element of this list, or returns null if this list is empty.
sun.awt.util.IdentityLinkedList#peekLast()->E:::Retrieves, but does not remove, the last element of this list, or returns null if this list is empty.
sun.awt.util.IdentityLinkedList#pollFirst()->E:::Retrieves and removes the first element of this list, or returns null if this list is empty.
sun.awt.util.IdentityLinkedList#pollLast()->E:::Retrieves and removes the last element of this list, or returns null if this list is empty.
sun.awt.util.IdentityLinkedList#push(E)->void:::Pushes an element onto the stack represented by this list
sun.awt.util.IdentityLinkedList#pop()->E:::Pops an element from the stack represented by this list
sun.awt.util.IdentityLinkedList#removeFirstOccurrence(Object)->boolean:::Removes the first occurrence of the specified element in this list (when traversing the list from head to tail)
sun.awt.util.IdentityLinkedList#removeLastOccurrence(Object)->boolean:::Removes the last occurrence of the specified element in this list (when traversing the list from head to tail)
sun.awt.util.IdentityLinkedList#listIterator(int)->ListIterator:::Returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list
sun.awt.util.IdentityLinkedList#descendingIterator()->Iterator::: identity linked list descending iterator
sun.awt.util.IdentityLinkedList#toArray()->Object[]:::Returns an array containing all of the elements in this list in proper sequence (from first to last element)
sun.awt.util.IdentityLinkedList#toArray(T[])->T[]:::Returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array
sun.awt.util.PerformanceLogger#loggingEnabled()->boolean:::Returns status of whether logging is enabled or not
sun.awt.util.PerformanceLogger.TimeData#getMessage()->String::: time data get message
sun.awt.util.PerformanceLogger.TimeData#getTime()->long::: time data get time
sun.awt.util.PerformanceLogger#setStartTime(String)->void:::Sets the start time
sun.awt.util.PerformanceLogger#setBaseTime(long)->void:::Sets the base time, output can then be displayed as offsets from the base time;.
sun.awt.util.PerformanceLogger#setStartTime(String, long)->void:::Sets the start time
sun.awt.util.PerformanceLogger#getStartTime()->long:::Gets the start time, which should be the time when the java process started, prior to the VM actually being loaded.
sun.awt.util.PerformanceLogger#setTime(String)->int:::Sets the value of a given time and returns the index of the slot that that time was stored in.
sun.awt.util.PerformanceLogger#setTime(String, long)->int:::Sets the value of a given time and returns the index of the slot that that time was stored in
sun.awt.util.PerformanceLogger#getTimeAtIndex(int)->long:::Returns time at given index.
sun.awt.util.PerformanceLogger#getMessageAtIndex(int)->String:::Returns message at given index.
sun.awt.util.PerformanceLogger#outputLog(Writer)->void:::Outputs all data to parameter-specified Writer object
sun.awt.util.PerformanceLogger#outputLog()->void:::Outputs all data to whatever location the user specified via sun.perflog command-line parameter.
sun.awt.util.ThreadGroupUtils#getRootThreadGroup()->ThreadGroup:::Returns a root thread group
