AbstractInsnNode#getOpcode():::Returns the opcode of this instruction.:::return
AbstractInsnNode#getType():::Returns the type of this instruction.:::
AbstractInsnNode#getPrevious():::Returns the previous instruction in the list to which this instruction belongs, if any.:::return
AbstractInsnNode#getNext():::Returns the next instruction in the list to which this instruction belongs, if any.:::return
AbstractInsnNode#accept(MethodVisitor):::Makes the given code visitor visit this instruction.:::
AbstractInsnNode#acceptAnnotations(MethodVisitor):::Makes the given visitor visit the annotations of this instruction.:::n->visibleTypeAnnotations->size->for->i->invisibleTypeAnnotations->size->for->i
AbstractInsnNode#clone(Map):::Returns a copy of this instruction.:::
AbstractInsnNode#clone(LabelNode, Map):::Returns the clone of the given label.:::return->map->get
AbstractInsnNode#clone(List, Map):::Returns the clones of the given labels.:::clones->labels->size->new->LabelNodeArr->for->i->return
AbstractInsnNode#cloneAnnotations(AbstractInsnNode):::Clones the annotations of the given instruction into this instruction.:::if->new->ArrayList<TypeAnnotationNode>->for->i->size->if->new->ArrayList<TypeAnnotationNode>->for->i->size->return
AnnotationNode#check(int):::Checks that this annotation node is compatible with the given ASM API version:::
AnnotationNode#accept(AnnotationVisitor):::Makes the given visitor visit this annotation.:::if->if->for->i->values->size->av->visitEnd
AnnotationNode#accept(AnnotationVisitor, String, Object):::Makes the given visitor visit a given annotation value.:::if->if->typeconst->av->visitEnum->else->if->an->an->av->visitAnnotation->accept->else->if->v->av->visitArray->if->array->for->j->array->size->v->visitEnd->else->av->visit
ClassNode#check(int):::Checks that this class node is compatible with the given ASM API version:::if->if->throw->new->RuntimeException->if->if->visibleTypeAnnotations->size->throw->new->RuntimeException->if->invisibleTypeAnnotations->size->throw->new->RuntimeException->i->n->visibleAnnotations->size->for->invisibleAnnotations->size->for->visibleTypeAnnotations->size->for->invisibleTypeAnnotations->size->for->foreach->f->check->foreach->m->check
ClassNode#accept(ClassVisitor):::Makes the given class visitor visit this class.:::interfaces->size->new->StringArr->toArray->cv->visit->if->cv->visitSource->if->module->accept->if->cv->visitOuterClass->i->n->visibleAnnotations->size->for->invisibleAnnotations->size->for->visibleTypeAnnotations->size->for->invisibleTypeAnnotations->size->for->attrs->size->for->for->innerClasses->size->for->fields->size->for->methods->size->cv->visitEnd
FieldInsnNode#setOpcode(int):::Sets the opcode of this instruction.:::
FieldNode#check(int):::Checks that this field node is compatible with the given ASM API version:::if->if->visibleTypeAnnotations->size->throw->new->RuntimeException->if->invisibleTypeAnnotations->size->throw->new->RuntimeException
FieldNode#accept(ClassVisitor):::Makes the given class visitor visit this field.:::fv->cv->visitField->if->return->i->n->visibleAnnotations->size->for->invisibleAnnotations->size->for->visibleTypeAnnotations->size->for->invisibleTypeAnnotations->size->for->attrs->size->for->fv->visitEnd
FrameNode#accept(MethodVisitor):::Makes the given visitor visit this stack map frame.:::switch->mv->local->size->asArray->stack->size->asArray->visitFrame->break->mv->local->size->asArray->visitFrame->break->mv->local->size->visitFrame->break->mv->visitFrame->break->mv->asArray->visitFrame->break
InnerClassNode#accept(ClassVisitor):::Makes the given class visitor visit this inner class.:::cv->visitInnerClass
InsnList#size():::Returns the number of instructions in this list.:::return
InsnList#getFirst():::Returns the first instruction in this list.:::return
InsnList#getLast():::Returns the last instruction in this list.:::return
InsnList#get(int):::Returns the instruction whose index is given:::if->throw->new->IndexOutOfBoundsException->if->toArray->return
InsnList#contains(AbstractInsnNode):::Returns <tt>true</tt> if the given instruction belongs to this list:::i->while->return
InsnList#indexOf(AbstractInsnNode):::Returns the index of the given instruction in this list:::if->toArray->return
InsnList#accept(MethodVisitor):::Makes the given visitor visit all of the instructions in this list.:::insn->while->insn->accept
InsnList#iterator():::Returns an iterator over the instructions in this list.:::return->iterator
InsnList#iterator(int):::Returns an iterator over the instructions in this list.:::return->new->InsnListIterator
InsnList#toArray():::Returns an array containing all of the instructions in this list.:::i->elem->insns->new->AbstractInsnNodeArr->while->return
InsnList#set(AbstractInsnNode, AbstractInsnNode):::Replaces an instruction of this list with another instruction.:::next->if->else->prev->if->else->if->index->else
InsnList#add(AbstractInsnNode):::Adds the given instruction to the end of this list.:::if->else
InsnList#add(InsnList):::Adds the given instructions to the end of this list.:::if->return->if->else->elem->insns->removeAll
InsnList#insert(AbstractInsnNode):::Inserts the given instruction at the begining of this list.:::if->else
InsnList#insert(InsnList):::Inserts the given instructions at the begining of this list.:::if->return->if->else->elem->insns->removeAll
InsnList#insert(AbstractInsnNode, AbstractInsnNode):::Inserts the given instruction after the specified instruction.:::next->if->else
InsnList#insert(AbstractInsnNode, InsnList):::Inserts the given instructions after the specified instruction.:::if->return->ifirst->ilast->next->if->else->insns->removeAll
InsnList#insertBefore(AbstractInsnNode, AbstractInsnNode):::Inserts the given instruction before the specified instruction.:::prev->if->else
InsnList#insertBefore(AbstractInsnNode, InsnList):::Inserts the given instructions before the specified instruction.:::if->return->ifirst->ilast->prev->if->else->insns->removeAll
InsnList#remove(AbstractInsnNode):::Removes the given instruction from this list.:::next->prev->if->if->else->else->if->else
InsnList#removeAll(boolean):::Removes all of the instructions of this list.:::if->insn->while->next
InsnList#clear():::Removes all of the instructions of this list.:::removeAll
InsnList#resetLabels():::Reset all labels in the instruction list:::insn->while->if->resetLabel
InsnNode#accept(MethodVisitor):::Makes the given visitor visit this instruction.:::mv->visitInsn->acceptAnnotations
IntInsnNode#setOpcode(int):::Sets the opcode of this instruction.:::
JumpInsnNode#setOpcode(int):::Sets the opcode of this instruction.:::
LocalVariableAnnotationNode#accept(MethodVisitor, boolean):::Makes the given visitor visit this type annotation.:::start->size->new->LabelArr->end->size->new->LabelArr->index->size->new->intArr->for->i->mv->visitLocalVariableAnnotation->accept
LocalVariableNode#accept(MethodVisitor):::Makes the given visitor visit this local variable declaration.:::mv->start->getLabel->end->getLabel->visitLocalVariable
MethodInsnNode#setOpcode(int):::Sets the opcode of this instruction.:::
MethodNode#getLabelNode(Label):::Returns the LabelNode corresponding to the given Label:::if->new->LabelNode->return
MethodNode#check(int):::Checks that this method node is compatible with the given ASM API version:::if->if->visibleTypeAnnotations->size->throw->new->RuntimeException->if->invisibleTypeAnnotations->size->throw->new->RuntimeException->n->tryCatchBlocks->size->for->i->for->i->instructions->size->if->visibleLocalVariableAnnotations->size->throw->new->RuntimeException->if->invisibleLocalVariableAnnotations->size->throw->new->RuntimeException
MethodNode#accept(ClassVisitor):::Makes the given class visitor visit this method.:::exceptions->size->new->StringArr->toArray->mv->cv->visitMethod->if->accept
MethodNode#accept(MethodVisitor):::Makes the given method visitor visit this method.:::i->j->n->parameters->size->for->if->av->mv->visitAnnotationDefault->AnnotationNode->accept->if->av->visitEnd->visibleAnnotations->size->for->invisibleAnnotations->size->for->visibleTypeAnnotations->size->for->invisibleTypeAnnotations->size->for->for->for->if->instructions->resetLabels->attrs->size->for->if->instructions->size->mv->visitCode->tryCatchBlocks->size->for->instructions->accept->localVariables->size->for->visibleLocalVariableAnnotations->size->for->invisibleLocalVariableAnnotations->size->for->mv->visitMaxs->mv->visitEnd
ModuleExportNode#accept(ModuleVisitor):::Makes the given module visitor visit this export declaration.:::mv->modules->new->StringArr->toArray->visitExport
ModuleOpenNode#accept(ModuleVisitor):::Makes the given module visitor visit this open declaration.:::mv->modules->new->StringArr->toArray->visitExport
ModuleProvideNode#accept(ModuleVisitor):::Makes the given module visitor visit this require declaration.:::mv->providers->new->StringArr->toArray->visitProvide
ModuleRequireNode#accept(ModuleVisitor):::Makes the given module visitor visit this require directive.:::mv->visitRequire
ParameterNode#accept(MethodVisitor):::Makes the given visitor visit this parameter declaration.:::mv->visitParameter
TryCatchBlockNode#updateIndex(int):::Updates the index of this try catch block in the method's list of try catch block nodes:::newTypeRef->if->foreach->if->foreach
TryCatchBlockNode#accept(MethodVisitor):::Makes the given visitor visit this try catch block.:::mv->start->getLabel->end->getLabel->handler->getLabel->visitTryCatchBlock->n->visibleTypeAnnotations->size->for->i->invisibleTypeAnnotations->size->for->i
TypeInsnNode#setOpcode(int):::Sets the opcode of this instruction.:::
VarInsnNode#setOpcode(int):::Sets the opcode of this instruction.:::
