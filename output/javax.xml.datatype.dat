DatatypeConstants.Field#toString():::Returns a field name in English:::return
DatatypeConstants.Field#getId():::Get id of this Field.:::return
DatatypeFactory#newDefaultInstance():::Creates a new instance of the DatatypeFactory #DATATYPEFACTORY_IMPLEMENTATION_CLASS builtin system-default implementation.:::return->new->DatatypeFactoryImpl
DatatypeFactory#newInstance():::Obtain a new instance of a DatatypeFactory:::return->FactoryFinder->find
DatatypeFactory#newInstance(String, ClassLoader):::Obtain a new instance of a DatatypeFactory from class name:::return->FactoryFinder->newInstance
DatatypeFactory#newDuration(String):::Obtain a new instance of a Duration specifying the Duration as its string representation, "PnYnMnDTnHnMnS", as defined in XML Schema 1.0 section 3.2.6.1:::
DatatypeFactory#newDuration(long):::Obtain a new instance of a Duration specifying the Duration as milliseconds:::
DatatypeFactory#newDuration(boolean, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigDecimal):::Obtain a new instance of a Duration specifying the Duration as isPositive, years, months, days, hours, minutes, seconds:::
DatatypeFactory#newDuration(boolean, int, int, int, int, int, int):::Obtain a new instance of a Duration specifying the Duration as isPositive, years, months, days, hours, minutes, seconds:::realYears->BigInteger->valueOf->realMonths->BigInteger->valueOf->realDays->BigInteger->valueOf->realHours->BigInteger->valueOf->realMinutes->BigInteger->valueOf->realSeconds->BigDecimal->valueOf->return->newDuration
DatatypeFactory#newDurationDayTime(String):::Create a Duration of type xdt:dayTimeDuration by parsing its String representation, "PnDTnHnMnS",    XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration:::if->throw->new->NullPointerException->matcher->XDTSCHEMA_DTD->matcher->if->matcher->matches->throw->new->IllegalArgumentException->return->newDuration
DatatypeFactory#newDurationDayTime(long):::Create a Duration of type xdt:dayTimeDuration using the specified milliseconds as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration:::return->newDuration
DatatypeFactory#newDurationDayTime(boolean, BigInteger, BigInteger, BigInteger, BigInteger):::Create a Duration of type xdt:dayTimeDuration using the specified day, hour, minute and second as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration:::return->new->BigDecimal->newDuration
DatatypeFactory#newDurationDayTime(boolean, int, int, int, int):::Create a Duration of type xdt:dayTimeDuration using the specified day, hour, minute and second as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration:::return->BigInteger->valueOf->BigInteger->valueOf->BigInteger->valueOf->BigInteger->valueOf->newDurationDayTime
DatatypeFactory#newDurationYearMonth(String):::Create a Duration of type xdt:yearMonthDuration by parsing its String representation, "PnYnM",    XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration:::if->throw->new->NullPointerException->matcher->XDTSCHEMA_YMD->matcher->if->matcher->matches->throw->new->IllegalArgumentException->return->newDuration
DatatypeFactory#newDurationYearMonth(long):::Create a Duration of type xdt:yearMonthDuration using the specified milliseconds as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration:::fullDuration->newDuration->isPositive->fullDuration->getSign->years->fullDuration->getField->if->months->fullDuration->getField->if->return->newDurationYearMonth
DatatypeFactory#newDurationYearMonth(boolean, BigInteger, BigInteger):::Create a Duration of type xdt:yearMonthDuration using the specified year and month as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration:::return->newDuration
DatatypeFactory#newDurationYearMonth(boolean, int, int):::Create a Duration of type xdt:yearMonthDuration using the specified year and month as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration:::return->BigInteger->valueOf->BigInteger->valueOf->newDurationYearMonth
DatatypeFactory#newXMLGregorianCalendar():::Create a new instance of an XMLGregorianCalendar:::
DatatypeFactory#newXMLGregorianCalendar(String):::Create a new XMLGregorianCalendar by parsing the String as a lexical representation:::
DatatypeFactory#newXMLGregorianCalendar(GregorianCalendar):::Create an XMLGregorianCalendar from a GregorianCalendar:::
DatatypeFactory#newXMLGregorianCalendar(BigInteger, int, int, int, int, int, BigDecimal, int):::Constructor allowing for complete value spaces allowed by W3C XML Schema 1.0 recommendation for xsd:dateTime and related builtin datatypes:::
DatatypeFactory#newXMLGregorianCalendar(int, int, int, int, int, int, int, int):::Constructor of value spaces that a java.util.GregorianCalendar instance would need to convert to an XMLGregorianCalendar instance:::realYear->BigInteger->valueOf->realMillisecond->if->if->throw->new->IllegalArgumentException->BigDecimal->valueOf->movePointLeft->return->newXMLGregorianCalendar
DatatypeFactory#newXMLGregorianCalendarDate(int, int, int, int):::Create a Java representation of XML Schema builtin datatype date or g*:::return->newXMLGregorianCalendar
DatatypeFactory#newXMLGregorianCalendarTime(int, int, int, int):::Create a Java instance of XML Schema builtin datatype time:::return->newXMLGregorianCalendar
DatatypeFactory#newXMLGregorianCalendarTime(int, int, int, BigDecimal, int):::Create a Java instance of XML Schema builtin datatype time:::return->newXMLGregorianCalendar
DatatypeFactory#newXMLGregorianCalendarTime(int, int, int, int, int):::Create a Java instance of XML Schema builtin datatype time:::realMilliseconds->if->if->throw->new->IllegalArgumentException->BigDecimal->valueOf->movePointLeft->return->newXMLGregorianCalendarTime
Duration#getXMLSchemaType():::Return the name of the XML Schema date/time type that this instance maps to:::yearSet->isSet->monthSet->isSet->daySet->isSet->hourSet->isSet->minuteSet->isSet->secondSet->isSet->if->return->if->return->if->return->throw->new->IllegalStateException
Duration#getSign():::Returns the sign of this duration in -1,0, or 1.:::
Duration#getYears():::Get the years value of this Duration as an int or 0 if not present:::return->getField->intValue
Duration#getMonths():::Obtains the value of the MONTHS field as an integer value, or 0 if not present:::return->getField->intValue
Duration#getDays():::Obtains the value of the DAYS field as an integer value, or 0 if not present:::return->getField->intValue
Duration#getHours():::Obtains the value of the HOURS field as an integer value, or 0 if not present:::return->getField->intValue
Duration#getMinutes():::Obtains the value of the MINUTES field as an integer value, or 0 if not present:::return->getField->intValue
Duration#getSeconds():::Obtains the value of the SECONDS field as an integer value, or 0 if not present:::return->getField->intValue
Duration#getTimeInMillis(Calendar):::Returns the length of the duration in milli-seconds:::cal->startInstant->clone->addTo->return->getCalendarTimeInMillis->getCalendarTimeInMillis
Duration#getTimeInMillis(Date):::Returns the length of the duration in milli-seconds:::cal->new->GregorianCalendar->cal->setTime->this->addTo->return->getCalendarTimeInMillis->startInstant->getTime
Duration#getField(DatatypeConstants.Field):::Gets the value of a field:::
Duration#isSet(DatatypeConstants.Field):::Checks if a field is set:::
Duration#add(Duration):::Computes a new duration whose value is this+rhs:::
Duration#addTo(Calendar):::Adds this duration to a Calendar object:::
Duration#addTo(Date):::Adds this duration to a Date object:::if->throw->this->getClass->getName->new->NullPointerException->cal->new->GregorianCalendar->cal->setTime->this->addTo->date->getCalendarTimeInMillis->setTime
Duration#subtract(Duration):::Computes a new duration whose value is this-rhs:::return->rhs->negate->add
Duration#multiply(int):::Computes a new duration whose value is factor times longer than the value of this duration:::return->String->valueOf->new->BigDecimal->multiply
Duration#multiply(BigDecimal):::Computes a new duration whose value is factor times longer than the value of this duration:::
Duration#negate():::Returns a new Duration object whose value is -this:::
Duration#normalizeWith(Calendar):::Converts the years and months fields into the days field by using a specific time instant as the reference point:::
Duration#compare(Duration):::Partial order relation comparison with this Duration instance:::
Duration#isLongerThan(Duration):::Checks if this duration object is strictly longer than another Duration object:::return->compare
Duration#isShorterThan(Duration):::Checks if this duration object is strictly shorter than another Duration object.:::return->compare
Duration#equals(Object):::Checks if this duration object has the same duration as another Duration object:::if->return->return->compare
Duration#hashCode():::Returns a hash code consistent with the definition of the equals method.:::
Duration#toString():::Returns a String representation of this Duration Object:::buf->new->StringBuffer->if->getSign->buf->append->buf->append->years->getField->if->buf->append->months->getField->if->buf->append->days->getField->if->buf->append->hours->getField->minutes->getField->seconds->getField->if->buf->append->if->buf->append->if->buf->append->if->buf->toString->append->return->buf->toString
FactoryFinder#newInstance(Class, String, ClassLoader, boolean):::Create an instance of a class:::return->newInstance
FactoryFinder#newInstance(Class, String, ClassLoader, boolean, boolean):::Create an instance of a class:::if->System->getSecurityManager->if->className->startsWith->try->providerClass->getProviderClass->if->type->isAssignableFrom->throw->type->getName->new->ClassCastException->instance->providerClass->getConstructor->newInstance->clD->dPrint->return->type->cast->catch->throw->new->DatatypeConfigurationException->throw->new->DatatypeConfigurationException->finally
FactoryFinder#find(Class, String):::Finds the implementation Class object in the specified order:::factoryId->type->getName->dPrint->try->systemProp->SecuritySupport->getSystemProperty->if->dPrint->return->newInstance->catch->if->se->printStackTrace->finally->try->if->synchronized->if->configFile->SecuritySupport->getSystemProperty->f->new->File->if->SecuritySupport->doesFileExist->dPrint->cacheProps->SecuritySupport->getFileInputStream->load->factoryClassName->cacheProps->getProperty->if->dPrint->return->newInstance->catch->if->ex->printStackTrace->finally->provider->findServiceProvider->if->return->if->throw->new->DatatypeConfigurationException->dPrint->return->newInstance
XMLGregorianCalendar#clear():::Unset all fields to undefined:::
XMLGregorianCalendar#reset():::Reset this XMLGregorianCalendar to its original values:::
XMLGregorianCalendar#setYear(BigInteger):::Set low and high order component of XSD dateTime year field:::
XMLGregorianCalendar#setYear(int):::Set year of XSD dateTime year field:::
XMLGregorianCalendar#setMonth(int):::Set month:::
XMLGregorianCalendar#setDay(int):::Set days in month:::
XMLGregorianCalendar#setTimezone(int):::Set the number of minutes in the timezone offset:::
XMLGregorianCalendar#setTime(int, int, int):::Set time as one unit.:::setTime
XMLGregorianCalendar#setHour(int):::Set hours:::
XMLGregorianCalendar#setMinute(int):::Set minutes:::
XMLGregorianCalendar#setSecond(int):::Set seconds:::
XMLGregorianCalendar#setMillisecond(int):::Set milliseconds:::
XMLGregorianCalendar#setFractionalSecond(BigDecimal):::Set fractional seconds:::
XMLGregorianCalendar#setTime(int, int, int, BigDecimal):::Set time as one unit, including the optional infinite precision fractional seconds.:::setHour->setMinute->setSecond->setFractionalSecond
XMLGregorianCalendar#setTime(int, int, int, int):::Set time as one unit, including optional milliseconds.:::setHour->setMinute->setSecond->setMillisecond
XMLGregorianCalendar#getEon():::Returns the high order component for XML Schema 1.0 dateTime datatype field for year:::
XMLGregorianCalendar#getYear():::Returns the low order component for XML Schema 1.0 dateTime datatype field for year or DatatypeConstants#FIELD_UNDEFINED:::
XMLGregorianCalendar#getEonAndYear():::Returns the XML Schema 1.0 dateTime datatype field for year:::
XMLGregorianCalendar#getMonth():::Returns the month of this calendar or DatatypeConstants#FIELD_UNDEFINED:::
XMLGregorianCalendar#getDay():::Returns the day of month or DatatypeConstants#FIELD_UNDEFINED:::
XMLGregorianCalendar#getTimezone():::Returns the Timezone offset in minutes or DatatypeConstants#FIELD_UNDEFINED if this optional field is not defined:::
XMLGregorianCalendar#getHour():::Returns the hour of day or DatatypeConstants#FIELD_UNDEFINED if this field is not defined:::
XMLGregorianCalendar#getMinute():::Returns the minute of hour or DatatypeConstants#FIELD_UNDEFINED if this field is not defined:::
XMLGregorianCalendar#getSecond():::Returns the second of minute or DatatypeConstants#FIELD_UNDEFINED if this field is not defined:::
XMLGregorianCalendar#getMillisecond():::Returns the millisecond precision of #getFractionalSecond():::fractionalSeconds->getFractionalSecond->if->return->return->getFractionalSecond->movePointRight->intValue
XMLGregorianCalendar#getFractionalSecond():::Returns fractional seconds:::
XMLGregorianCalendar#compare(XMLGregorianCalendar):::Compare two instances of W3C XML Schema 1.0 date/time datatypes according to partial order relation defined in W3C XML Schema 1.0 Part 2, Section 3.2.7.3, Order relation on dateTime:::
XMLGregorianCalendar#normalize():::Normalize this instance to UTC:::
XMLGregorianCalendar#equals(Object):::Compares this calendar to the specified object:::if->return->return->compare
XMLGregorianCalendar#hashCode():::Returns a hash code consistent with the definition of the equals method.:::timezone->getTimezone->if->gc->if->this->normalize->return->gc->getYear->gc->getMonth->gc->getDay->gc->getHour->gc->getMinute->gc->getSecond
XMLGregorianCalendar#toXMLFormat():::Return the lexical representation of this instance:::
XMLGregorianCalendar#getXMLSchemaType():::Return the name of the XML Schema date/time type that this instance maps to:::
XMLGregorianCalendar#toString():::Returns a String representation of this XMLGregorianCalendar Object:::return->toXMLFormat
XMLGregorianCalendar#isValid():::Validate instance by getXMLSchemaType() constraints.:::
XMLGregorianCalendar#add(Duration):::Add duration to this instance:::
XMLGregorianCalendar#toGregorianCalendar():::Convert this XMLGregorianCalendar to a GregorianCalendar:::
XMLGregorianCalendar#toGregorianCalendar(java.util.TimeZone, java.util.Locale, XMLGregorianCalendar):::Convert this XMLGregorianCalendar along with provided parameters to a GregorianCalendar instance:::
XMLGregorianCalendar#getTimeZone(int):::Returns a java.util.TimeZone for this class:::
XMLGregorianCalendar#clone():::Creates and returns a copy of this object.:::
