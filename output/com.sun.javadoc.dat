com.sun.javadoc.AnnotatedType#annotations()->AnnotationDesc[]:::Returns the annotations associated with this type.
com.sun.javadoc.AnnotatedType#underlyingType()->Type:::Returns the underlying type.
com.sun.javadoc.AnnotationDesc#annotationType()->AnnotationTypeDoc:::Returns the annotation type of this annotation.
com.sun.javadoc.AnnotationDesc#elementValues()->ElementValuePair[]:::Returns this annotation's elements and their values
com.sun.javadoc.AnnotationDesc#isSynthesized()->boolean:::Check for the synthesized bit on the annotation.
com.sun.javadoc.AnnotationDesc.ElementValuePair#element()->AnnotationTypeElementDoc:::Returns the annotation type element.
com.sun.javadoc.AnnotationDesc.ElementValuePair#value()->AnnotationValue:::Returns the value associated with the annotation type element.
com.sun.javadoc.AnnotationTypeDoc#elements()->AnnotationTypeElementDoc[]:::Returns the elements of this annotation type
com.sun.javadoc.AnnotationTypeElementDoc#defaultValue()->AnnotationValue:::Returns the default value of this element
com.sun.javadoc.AnnotationValue#value()->Object:::Returns the value
com.sun.javadoc.AnnotationValue#toString()->String:::Returns a string representation of the value.
com.sun.javadoc.ClassDoc#isAbstract()->boolean:::Return true if this class is abstract
com.sun.javadoc.ClassDoc#isSerializable()->boolean:::Return true if this class implements or interface extends java.io.Serializable
com.sun.javadoc.ClassDoc#isExternalizable()->boolean:::Return true if this class implements or interface extends java.io.Externalizable.
com.sun.javadoc.ClassDoc#serializationMethods()->MethodDoc[]:::Return the serialization methods for this class or interface.
com.sun.javadoc.ClassDoc#serializableFields()->FieldDoc[]:::Return the Serializable fields of this class or interface
com.sun.javadoc.ClassDoc#definesSerializableFields()->boolean::: Return true if Serializable fields are explicitly defined with  the special class member serialPersistentFields.
com.sun.javadoc.ClassDoc#superclass()->ClassDoc:::Return the superclass of this class
com.sun.javadoc.ClassDoc#superclassType()->Type:::Return the superclass of this class
com.sun.javadoc.ClassDoc#subclassOf(ClassDoc)->boolean:::Test whether this class is a subclass of the specified class
com.sun.javadoc.ClassDoc#interfaces()->ClassDoc[]:::Return interfaces implemented by this class or interfaces extended by this interface
com.sun.javadoc.ClassDoc#interfaceTypes()->Type[]:::Return interfaces implemented by this class or interfaces extended by this interface
com.sun.javadoc.ClassDoc#typeParameters()->TypeVariable[]:::Return the formal type parameters of this class or interface
com.sun.javadoc.ClassDoc#typeParamTags()->ParamTag[]:::Return the type parameter tags of this class or interface
com.sun.javadoc.ClassDoc#fields()->FieldDoc[]:::Return included fields in this class or interface
com.sun.javadoc.ClassDoc#fields(boolean)->FieldDoc[]:::Return fields in this class or interface, filtered to the specified access modifier option
com.sun.javadoc.ClassDoc#enumConstants()->FieldDoc[]:::Return the enum constants if this is an enum type
com.sun.javadoc.ClassDoc#methods()->MethodDoc[]:::Return included methods in this class or interface
com.sun.javadoc.ClassDoc#methods(boolean)->MethodDoc[]:::Return methods in this class or interface, filtered to the specified access modifier option
com.sun.javadoc.ClassDoc#constructors()->ConstructorDoc[]:::Return included constructors in this class
com.sun.javadoc.ClassDoc#constructors(boolean)->ConstructorDoc[]:::Return constructors in this class, filtered to the specified access modifier option
com.sun.javadoc.ClassDoc#innerClasses()->ClassDoc[]:::Return included nested classes and interfaces within this class or interface
com.sun.javadoc.ClassDoc#innerClasses(boolean)->ClassDoc[]:::Return nested classes and interfaces within this class or interface filtered to the specified access modifier option
com.sun.javadoc.ClassDoc#findClass(String)->ClassDoc:::Find the specified class or interface within the context of this class doc
com.sun.javadoc.ClassDoc#importedClasses()->ClassDoc[]:::Get the list of classes and interfaces declared as imported
com.sun.javadoc.ClassDoc#importedPackages()->PackageDoc[]:::Get the list of packages declared as imported
com.sun.javadoc.Doc#commentText()->String:::Return the text of the comment for this doc item
com.sun.javadoc.Doc#tags()->Tag[]:::Return all tags in this Doc item.
com.sun.javadoc.Doc#tags(String)->Tag[]:::Return tags of the specified Tag#kind() kind in this Doc item
com.sun.javadoc.Doc#seeTags()->SeeTag[]:::Return the see also tags in this Doc item.
com.sun.javadoc.Doc#inlineTags()->Tag[]:::Return comment as an array of tags
com.sun.javadoc.Doc#firstSentenceTags()->Tag[]:::Return the first sentence of the comment as an array of tags
com.sun.javadoc.Doc#getRawCommentText()->String:::Return the full unprocessed text of the comment
com.sun.javadoc.Doc#setRawCommentText(String)->void:::Set the full unprocessed text of the comment
com.sun.javadoc.Doc#name()->String:::Returns the non-qualified name of this Doc item.
com.sun.javadoc.Doc#compareTo(Object)->int:::Compares this doc object with the specified object for order
com.sun.javadoc.Doc#isField()->boolean:::Is this Doc item a field (but not an enum constant)?
com.sun.javadoc.Doc#isEnumConstant()->boolean:::Is this Doc item an enum constant?
com.sun.javadoc.Doc#isConstructor()->boolean:::Is this Doc item a constructor?
com.sun.javadoc.Doc#isMethod()->boolean:::Is this Doc item a method (but not a constructor or annotation type element)?
com.sun.javadoc.Doc#isAnnotationTypeElement()->boolean:::Is this Doc item an annotation type element?
com.sun.javadoc.Doc#isInterface()->boolean:::Is this Doc item an interface (but not an annotation type)?
com.sun.javadoc.Doc#isException()->boolean:::Is this Doc item an exception class?
com.sun.javadoc.Doc#isError()->boolean:::Is this Doc item an error class?
com.sun.javadoc.Doc#isEnum()->boolean:::Is this Doc item an enum type?
com.sun.javadoc.Doc#isAnnotationType()->boolean:::Is this Doc item an annotation type?
com.sun.javadoc.Doc#isOrdinaryClass()->boolean:::Is this Doc item an ordinary class? (i.e
com.sun.javadoc.Doc#isClass()->boolean:::Is this Doc item a class (and not an interface or annotation type)? This includes ordinary classes, enums, errors and exceptions.
com.sun.javadoc.Doc#isIncluded()->boolean:::Return true if this Doc item is included in the result set.
com.sun.javadoc.Doc#position()->SourcePosition:::Return the source position of the first line of the corresponding declaration, or null if no position is available
com.sun.javadoc.DocErrorReporter#printError(String)->void:::Print error message and increment error count.
com.sun.javadoc.DocErrorReporter#printError(SourcePosition, String)->void:::Print an error message and increment error count.
com.sun.javadoc.DocErrorReporter#printWarning(String)->void:::Print warning message and increment warning count.
com.sun.javadoc.DocErrorReporter#printWarning(SourcePosition, String)->void:::Print warning message and increment warning count.
com.sun.javadoc.DocErrorReporter#printNotice(String)->void:::Print a message.
com.sun.javadoc.DocErrorReporter#printNotice(SourcePosition, String)->void:::Print a message.
com.sun.javadoc.Doclet#start(RootDoc)->boolean:::Generate documentation here
com.sun.javadoc.Doclet#optionLength(String)->int:::Check for doclet-added options
com.sun.javadoc.Doclet#validOptions(String[][], DocErrorReporter)->boolean:::Check that options have the correct arguments
com.sun.javadoc.Doclet#languageVersion()->LanguageVersion:::Return the version of the Java Programming Language supported by this doclet
com.sun.javadoc.ExecutableMemberDoc#thrownExceptions()->ClassDoc[]:::Return exceptions this method or constructor throws
com.sun.javadoc.ExecutableMemberDoc#thrownExceptionTypes()->Type[]:::Return exceptions this method or constructor throws.
com.sun.javadoc.ExecutableMemberDoc#isNative()->boolean:::Return true if this method is native
com.sun.javadoc.ExecutableMemberDoc#isSynchronized()->boolean:::Return true if this method is synchronized
com.sun.javadoc.ExecutableMemberDoc#isVarArgs()->boolean:::Return true if this method was declared to take a variable number of arguments.
com.sun.javadoc.ExecutableMemberDoc#parameters()->Parameter[]:::Get argument information.
com.sun.javadoc.ExecutableMemberDoc#receiverType()->Type:::Get the receiver type of this executable element.
com.sun.javadoc.ExecutableMemberDoc#throwsTags()->ThrowsTag[]:::Return the throws tags in this method.
com.sun.javadoc.ExecutableMemberDoc#paramTags()->ParamTag[]:::Return the param tags in this method, excluding the type parameter tags.
com.sun.javadoc.ExecutableMemberDoc#typeParamTags()->ParamTag[]:::Return the type parameter tags in this method.
com.sun.javadoc.ExecutableMemberDoc#signature()->String:::Get the signature
com.sun.javadoc.ExecutableMemberDoc#flatSignature()->String:::get flat signature
com.sun.javadoc.ExecutableMemberDoc#typeParameters()->TypeVariable[]:::Return the formal type parameters of this method or constructor
com.sun.javadoc.FieldDoc#type()->Type:::Get type of this field.
com.sun.javadoc.FieldDoc#isTransient()->boolean:::Return true if this field is transient
com.sun.javadoc.FieldDoc#isVolatile()->boolean:::Return true if this field is volatile
com.sun.javadoc.FieldDoc#serialFieldTags()->SerialFieldTag[]:::Return the serialField tags in this FieldDoc item.
com.sun.javadoc.FieldDoc#constantValue()->Object:::Get the value of a constant field.
com.sun.javadoc.FieldDoc#constantValueExpression()->String:::Get the value of a constant field.
com.sun.javadoc.MemberDoc#isSynthetic()->boolean:::Returns true if this member was synthesized by the compiler.
com.sun.javadoc.MethodDoc#isAbstract()->boolean:::Return true if this method is abstract
com.sun.javadoc.MethodDoc#isDefault()->boolean:::Return true if this method is default
com.sun.javadoc.MethodDoc#returnType()->Type:::Get return type.
com.sun.javadoc.MethodDoc#overriddenClass()->ClassDoc:::Return the class containing the method that this method overrides
com.sun.javadoc.MethodDoc#overriddenType()->Type:::Return the type containing the method that this method overrides
com.sun.javadoc.MethodDoc#overriddenMethod()->MethodDoc:::Return the method that this method overrides.
com.sun.javadoc.MethodDoc#overrides(MethodDoc)->boolean:::Tests whether this method overrides another
com.sun.javadoc.PackageDoc#allClasses(boolean)->ClassDoc[]:::Get all classes and interfaces in the package, filtered to the specified access modifier option.
com.sun.javadoc.PackageDoc#allClasses()->ClassDoc[]:::Get all included classes and interfaces in the package
com.sun.javadoc.PackageDoc#ordinaryClasses()->ClassDoc[]:::Get included ordinary classes (that is, exclude exceptions, errors, enums, interfaces, and annotation types) in this package.
com.sun.javadoc.PackageDoc#exceptions()->ClassDoc[]:::Get included Exception classes in this package.
com.sun.javadoc.PackageDoc#errors()->ClassDoc[]:::Get included Error classes in this package.
com.sun.javadoc.PackageDoc#enums()->ClassDoc[]:::Get included enum types in this package.
com.sun.javadoc.PackageDoc#interfaces()->ClassDoc[]:::Get included interfaces in this package, omitting annotation types.
com.sun.javadoc.PackageDoc#annotationTypes()->AnnotationTypeDoc[]:::Get included annotation types in this package.
com.sun.javadoc.PackageDoc#annotations()->AnnotationDesc[]:::Get the annotations of this package
com.sun.javadoc.PackageDoc#findClass(String)->ClassDoc:::Lookup a class or interface within this package.
com.sun.javadoc.Parameter#type()->Type:::Get the type of this parameter.
com.sun.javadoc.Parameter#name()->String:::Get local name of this parameter
com.sun.javadoc.Parameter#typeName()->String:::Get type name of this parameter
com.sun.javadoc.Parameter#toString()->String:::Returns a string representation of the parameter
com.sun.javadoc.Parameter#annotations()->AnnotationDesc[]:::Get the annotations of this parameter
com.sun.javadoc.ParameterizedType#asClassDoc()->ClassDoc:::Return the generic class or interface that declared this type.
com.sun.javadoc.ParameterizedType#typeArguments()->Type[]:::Return the actual type arguments of this type
com.sun.javadoc.ParameterizedType#superclassType()->Type:::Return the class type that is a direct supertype of this one
com.sun.javadoc.ParameterizedType#interfaceTypes()->Type[]:::Return the interface types directly implemented by or extended by this parameterized type
com.sun.javadoc.ParameterizedType#containingType()->Type:::Return the type that contains this type as a member
com.sun.javadoc.ParamTag#parameterName()->String:::Return the name of the parameter or type parameter associated with this ParamTag
com.sun.javadoc.ParamTag#parameterComment()->String:::Return the parameter comment associated with this ParamTag.
com.sun.javadoc.ParamTag#isTypeParameter()->boolean:::Return true if this ParamTag corresponds to a type parameter
com.sun.javadoc.ProgramElementDoc#containingClass()->ClassDoc:::Get the containing class or interface of this program element.
com.sun.javadoc.ProgramElementDoc#containingPackage()->PackageDoc:::Get the package that this program element is contained in.
com.sun.javadoc.ProgramElementDoc#qualifiedName()->String:::Get the fully qualified name of this program element
com.sun.javadoc.ProgramElementDoc#modifierSpecifier()->int:::Get the modifier specifier integer.
com.sun.javadoc.ProgramElementDoc#modifiers()->String:::Get modifiers string
com.sun.javadoc.ProgramElementDoc#annotations()->AnnotationDesc[]:::Get the annotations of this program element
com.sun.javadoc.ProgramElementDoc#isPublic()->boolean:::Return true if this program element is public.
com.sun.javadoc.ProgramElementDoc#isProtected()->boolean:::Return true if this program element is protected.
com.sun.javadoc.ProgramElementDoc#isPrivate()->boolean:::Return true if this program element is private.
com.sun.javadoc.ProgramElementDoc#isPackagePrivate()->boolean:::Return true if this program element is package private.
com.sun.javadoc.ProgramElementDoc#isStatic()->boolean:::Return true if this program element is static.
com.sun.javadoc.ProgramElementDoc#isFinal()->boolean:::Return true if this program element is final.
com.sun.javadoc.RootDoc#options()->String[][]:::Command line options
com.sun.javadoc.RootDoc#specifiedPackages()->PackageDoc[]:::Return the packages specified on the command line
com.sun.javadoc.RootDoc#specifiedClasses()->ClassDoc[]:::Return the classes and interfaces specified as source file names on the command line.
com.sun.javadoc.RootDoc#classes()->ClassDoc[]:::Return the included       classes and interfaces in all packages.
com.sun.javadoc.RootDoc#packageNamed(String)->PackageDoc:::Return a PackageDoc for the specified package name.
com.sun.javadoc.RootDoc#classNamed(String)->ClassDoc:::Return a ClassDoc for the specified class or interface name.
com.sun.javadoc.SeeTag#label()->String:::Get the label of the @see tag
com.sun.javadoc.SeeTag#referencedPackage()->PackageDoc:::Get the package doc when @see references only a package
com.sun.javadoc.SeeTag#referencedClassName()->String:::Get the class or interface name of the @see reference
com.sun.javadoc.SeeTag#referencedClass()->ClassDoc:::Get the class doc referenced by the class name part of @see
com.sun.javadoc.SeeTag#referencedMemberName()->String:::Get the field, constructor or method substring of the @see reference
com.sun.javadoc.SeeTag#referencedMember()->MemberDoc:::Get the member doc for the field, constructor or method referenced by @see
com.sun.javadoc.SerialFieldTag#fieldName()->String:::Return the serializable field name.
com.sun.javadoc.SerialFieldTag#fieldType()->String:::Return the field type string.
com.sun.javadoc.SerialFieldTag#fieldTypeDoc()->ClassDoc:::Return the ClassDoc for field type.
com.sun.javadoc.SerialFieldTag#description()->String:::Return the field comment
com.sun.javadoc.SerialFieldTag#compareTo(Object)->int:::Compares this Object with the specified Object for order
com.sun.javadoc.SourcePosition#file()->File:::The source file
com.sun.javadoc.SourcePosition#line()->int:::The line in the source file
com.sun.javadoc.SourcePosition#column()->int:::The column in the source file
com.sun.javadoc.SourcePosition#toString()->String:::Convert the source position to the form "Filename:line".
com.sun.javadoc.Tag#name()->String:::Return the name of this tag
com.sun.javadoc.Tag#holder()->Doc:::Return the containing Doc of this Tag element.
com.sun.javadoc.Tag#kind()->String:::Return the kind of this tag
com.sun.javadoc.Tag#text()->String:::Return the text of this tag, that is, the portion beyond tag name.
com.sun.javadoc.Tag#toString()->String:::Convert this object to a string.
com.sun.javadoc.Tag#inlineTags()->Tag[]:::For a documentation comment with embedded  tags, return an array of Tag objects
com.sun.javadoc.Tag#firstSentenceTags()->Tag[]:::Return the first sentence of the comment as an array of tags
com.sun.javadoc.Tag#position()->SourcePosition:::Return the source position of this tag.
com.sun.javadoc.ThrowsTag#exceptionName()->String:::Return the name of the exception associated with this ThrowsTag.
com.sun.javadoc.ThrowsTag#exceptionComment()->String:::Return the exception comment associated with this ThrowsTag.
com.sun.javadoc.ThrowsTag#exception()->ClassDoc:::Return a ClassDoc that represents the exception
com.sun.javadoc.ThrowsTag#exceptionType()->Type:::Return the type of the exception associated with this ThrowsTag
com.sun.javadoc.Type#typeName()->String:::Return unqualified name of type excluding any dimension information
com.sun.javadoc.Type#qualifiedTypeName()->String:::Return qualified name of type excluding any dimension information
com.sun.javadoc.Type#simpleTypeName()->String:::Return the simple name of this type excluding any dimension information
com.sun.javadoc.Type#dimension()->String:::Return the type's dimension information, as a string
com.sun.javadoc.Type#toString()->String:::Return a string representation of the type
com.sun.javadoc.Type#isPrimitive()->boolean:::Return true if this type represents a primitive type.
com.sun.javadoc.Type#asClassDoc()->ClassDoc:::Return this type as a ClassDoc if it represents a class or interface
com.sun.javadoc.Type#asParameterizedType()->ParameterizedType:::Return this type as a ParameterizedType if it represents an invocation of a generic class or interface
com.sun.javadoc.Type#asTypeVariable()->TypeVariable:::Return this type as a TypeVariable if it represents a type variable
com.sun.javadoc.Type#asWildcardType()->WildcardType:::Return this type as a WildcardType if it represents a wildcard type.
com.sun.javadoc.Type#asAnnotatedType()->AnnotatedType:::Returns this type as a AnnotatedType if it represents an annotated type.
com.sun.javadoc.Type#asAnnotationTypeDoc()->AnnotationTypeDoc:::Return this type as an AnnotationTypeDoc if it represents an annotation type
com.sun.javadoc.Type#getElementType()->Type:::If this type is an array type, return the element type of the array
com.sun.javadoc.TypeVariable#bounds()->Type[]:::Return the bounds of this type variable
com.sun.javadoc.TypeVariable#owner()->ProgramElementDoc:::Return the class, interface, method, or constructor within which this type variable is declared.
com.sun.javadoc.TypeVariable#annotations()->AnnotationDesc[]:::Get the annotations of this program element
com.sun.javadoc.WildcardType#extendsBounds()->Type[]:::Return the upper bounds of this wildcard type argument as given by the extends clause
com.sun.javadoc.WildcardType#superBounds()->Type[]:::Return the lower bounds of this wildcard type argument as given by the super clause
