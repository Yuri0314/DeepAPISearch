javax.sql.rowset.spi.SyncFactory#registerProvider(String)->void:::Adds the given synchronization provider to the factory register
javax.sql.rowset.spi.SyncFactory#getSyncFactory()->SyncFactory:::Returns the SyncFactory singleton.
javax.sql.rowset.spi.SyncFactory#unregisterProvider(String)->void:::Removes the designated currently registered synchronization provider from the Factory SPI register.
javax.sql.rowset.spi.SyncFactory#getInstance(String)->SyncProvider:::Returns the SyncProvider instance identified by providerID.
javax.sql.rowset.spi.SyncFactory#getRegisteredProviders()->Enumeration:::Returns an Enumeration of currently registered synchronization providers
javax.sql.rowset.spi.SyncFactory#setLogger(Logger)->void:::Sets the logging object to be used by the SyncProvider implementation provided by the SyncFactory
javax.sql.rowset.spi.SyncFactory#setLogger(Logger, Level)->void:::Sets the logging object that is used by SyncProvider implementations provided by the SyncFactory SPI
javax.sql.rowset.spi.SyncFactory#getLogger()->Logger:::Returns the logging object for applications to retrieve synchronization events posted by SyncProvider implementations.
javax.sql.rowset.spi.SyncFactory#setJNDIContext(javax.naming.Context)->void:::Sets the initial JNDI context from which SyncProvider implementations can be retrieved from a JNDI namespace   This method checks to see that there is an SQLPermission object  which grants the permission setSyncFactory before allowing the method to succeed
javax.sql.rowset.spi.ProviderImpl#setClassname(String)->void::: provider impl set classname
javax.sql.rowset.spi.ProviderImpl#getClassname()->String::: provider impl get classname
javax.sql.rowset.spi.ProviderImpl#setVendor(String)->void::: provider impl set vendor
javax.sql.rowset.spi.ProviderImpl#getVendor()->String::: provider impl get vendor
javax.sql.rowset.spi.ProviderImpl#setVersion(String)->void::: provider impl set version
javax.sql.rowset.spi.ProviderImpl#getVersion()->String::: provider impl get version
javax.sql.rowset.spi.ProviderImpl#setIndex(int)->void::: provider impl set index
javax.sql.rowset.spi.ProviderImpl#getIndex()->int::: provider impl get index
javax.sql.rowset.spi.ProviderImpl#getDataSourceLock()->int::: provider impl get data source lock
javax.sql.rowset.spi.ProviderImpl#getProviderGrade()->int::: provider impl get provider grade
javax.sql.rowset.spi.ProviderImpl#getProviderID()->String::: provider impl get provider d
javax.sql.rowset.spi.ProviderImpl#getRowSetReader()->javax.sql.RowSetReader::: provider impl get row set reader
javax.sql.rowset.spi.ProviderImpl#getRowSetWriter()->javax.sql.RowSetWriter::: provider impl get row set writer
javax.sql.rowset.spi.ProviderImpl#setDataSourceLock(int)->void::: provider impl set data source lock
javax.sql.rowset.spi.ProviderImpl#supportsUpdatableView()->int::: provider impl supports updatable view
javax.sql.rowset.spi.SyncProvider#getProviderID()->String:::Returns the unique identifier for this SyncProvider object.
javax.sql.rowset.spi.SyncProvider#getRowSetReader()->RowSetReader:::Returns a javax.sql.RowSetReader object, which can be used to populate a RowSet object with data.
javax.sql.rowset.spi.SyncProvider#getRowSetWriter()->RowSetWriter:::Returns a javax.sql.RowSetWriter object, which can be used to write a RowSet object's data back to the underlying data source.
javax.sql.rowset.spi.SyncProvider#getProviderGrade()->int:::Returns a constant indicating the grade of synchronization a RowSet object can expect from this SyncProvider object.
javax.sql.rowset.spi.SyncProvider#setDataSourceLock(int)->void:::Sets a lock on the underlying data source at the level indicated by datasource_lock
javax.sql.rowset.spi.SyncProvider#getDataSourceLock()->int:::Returns the current data source lock severity level active in this SyncProvider implementation.
javax.sql.rowset.spi.SyncProvider#supportsUpdatableView()->int:::Returns whether this SyncProvider implementation can perform synchronization between a RowSet object and the SQL VIEW in the data source from which the RowSet object got its data.
javax.sql.rowset.spi.SyncProvider#getVersion()->String:::Returns the release version of this SyncProvider instance.
javax.sql.rowset.spi.SyncProvider#getVendor()->String:::Returns the vendor name of this SyncProvider instance
javax.sql.rowset.spi.SyncProviderException#getSyncResolver()->SyncResolver:::Retrieves the SyncResolver object that has been set for this SyncProviderException object, or if none has been set, an instance of the default SyncResolver implementation included in the reference implementation
javax.sql.rowset.spi.SyncProviderException#setSyncResolver(SyncResolver)->void:::Sets the SyncResolver object for this SyncProviderException object to the one supplied
javax.sql.rowset.spi.SyncResolver#getStatus()->int:::Retrieves the conflict status of the current row of this SyncResolver, which indicates the operation the RowSet object was attempting when the conflict occurred.
javax.sql.rowset.spi.SyncResolver#getConflictValue(int)->Object:::Retrieves the value in the designated column in the current row of this SyncResolver object, which is the value in the data source that caused a conflict.
javax.sql.rowset.spi.SyncResolver#getConflictValue(String)->Object:::Retrieves the value in the designated column in the current row of this SyncResolver object, which is the value in the data source that caused a conflict.
javax.sql.rowset.spi.SyncResolver#setResolvedValue(int, Object)->void:::Sets obj as the value in column index in the current row of the RowSet object that is being synchronized
javax.sql.rowset.spi.SyncResolver#setResolvedValue(String, Object)->void:::Sets obj as the value in column columnName in the current row of the RowSet object that is being synchronized
javax.sql.rowset.spi.SyncResolver#nextConflict()->boolean:::Moves the cursor down from its current position to the next row that contains a conflict value
javax.sql.rowset.spi.SyncResolver#previousConflict()->boolean:::Moves the cursor up from its current position to the previous conflict row in this SyncResolver object
javax.sql.rowset.spi.TransactionalWriter#commit()->void:::Makes permanent all changes that have been performed by the acceptChanges method since the last call to either the commit or rollback methods
javax.sql.rowset.spi.TransactionalWriter#rollback()->void:::Undoes all changes made in the current transaction
javax.sql.rowset.spi.TransactionalWriter#rollback(Savepoint)->void:::Undoes all changes made in the current transaction made prior to the given Savepoint object
javax.sql.rowset.spi.XmlReader#readXML(WebRowSet, java.io.Reader)->void:::Reads and parses the given WebRowSet object from the given input stream in XML format
javax.sql.rowset.spi.XmlWriter#writeXML(WebRowSet, java.io.Writer)->void:::Writes the given WebRowSet object to the specified java.io.Writer output stream as an XML document
