ByteArrayCounterSnapshot#getValue()::: byte array counter snapshot get value:::return
ByteArrayCounterSnapshot#byteArrayValue()::: byte array counter snapshot byte array value:::return
ByteArrayCounterSnapshot#byteAt(int)::: byte array counter snapshot byte at:::return
LongArrayCounterSnapshot#getValue()::: long array counter snapshot get value:::return
LongArrayCounterSnapshot#longArrayValue()::: long array counter snapshot long array value:::return
LongArrayCounterSnapshot#longAt(int)::: long array counter snapshot long at:::return
LongCounterSnapshot#getValue()::: long counter snapshot get value:::return->Long->valueOf
LongCounterSnapshot#longValue():::Get the value of this Long performance counter:::return
PerfByteArrayCounter#getValue()::: perf byte array counter get value:::return->byteArrayValue
PerfByteArrayCounter#byteArrayValue():::Get a copy of the elements of the ByteArrayCounter.:::bb->position->b->bb->limit->new->byteArr->bb->get->return
PerfByteArrayCounter#byteAt(int):::Get the value of an element of the ByteArrayCounter object.:::bb->position->return->bb->get
PerfByteArrayCounter#toString()::: perf byte array counter to string:::result->getName->byteArrayValue->new->String->getUnits->if->isInternal->return->else->return
PerfByteArrayCounter#writeReplace():::Serialize as a snapshot object.:::return->getName->getUnits->getVariability->getFlags->getVectorLength->byteArrayValue->new->ByteArrayCounterSnapshot
PerfDataEntry#size()::: perf data entry size:::return
PerfDataEntry#name()::: perf data entry name:::return
PerfDataEntry#type()::: perf data entry type:::return
PerfDataEntry#units()::: perf data entry units:::return
PerfDataEntry#flags()::: perf data entry flags:::return
PerfDataEntry#vectorLength():::Returns the number of elements in the data.:::return
PerfDataEntry#variability()::: perf data entry variability:::return
PerfDataEntry#byteData()::: perf data entry byte data:::data->position->return->data->duplicate
PerfDataEntry#longData()::: perf data entry long data:::lb->data->asLongBuffer->return
PerfDataType#toString()::: perf data type to string:::return
PerfDataType#byteValue()::: perf data type byte value:::return
PerfDataType#size()::: perf data type size:::return
PerfDataType#toPerfDataType(byte):::Maps an integer PerfDataType value to its corresponding PerfDataType object.:::for->j->return
PerfInstrumentation#getMajorVersion()::: perf instrumentation get major version:::return->prologue->getMajorVersion
PerfInstrumentation#getMinorVersion()::: perf instrumentation get minor version:::return->prologue->getMinorVersion
PerfInstrumentation#getModificationTimeStamp()::: perf instrumentation get modification time stamp:::return->prologue->getModificationTimeStamp
PerfInstrumentation#rewind()::: perf instrumentation rewind:::buffer->rewind->buffer->prologue->getEntryOffset->position->buffer->position->new->TreeMap<>
PerfInstrumentation#hasNext()::: perf instrumentation has next:::return->prologue->getUsed
PerfInstrumentation#getNextCounter()::: perf instrumentation get next counter:::if->hasNext->return->if->throw->new->InstrumentationException->if->buffer->limit->throw->buffer->limit->new->InstrumentationException->buffer->position->entry->new->PerfDataEntry->entry->size->counter->type->entry->type->if->if->entry->units->entry->vectorLength->entry->name->entry->variability->entry->flags->entry->vectorLength->entry->byteData->new->PerfStringCounter->else->if->entry->vectorLength->entry->name->entry->units->entry->variability->entry->flags->entry->vectorLength->entry->byteData->new->PerfByteArrayCounter->else->else->if->if->entry->vectorLength->entry->name->entry->units->entry->variability->entry->flags->entry->longData->new->PerfLongCounter->else->entry->name->entry->units->entry->variability->entry->flags->entry->vectorLength->entry->longData->new->PerfLongArrayCounter->else->return
PerfInstrumentation#getAllCounters()::: perf instrumentation get all counters:::while->hasNext->c->getNextCounter->if->map->c->getName->put->return->map->values->new->ArrayList<>
PerfInstrumentation#findByPattern(String)::: perf instrumentation find by pattern:::while->hasNext->c->getNextCounter->if->map->c->getName->put->pattern->Pattern->compile->matcher->pattern->matcher->matches->new->ArrayList<>->foreach->map->entrySet->name->me->getKey->matcher->reset->if->matcher->lookingAt->matches->me->getValue->add->return
PerfLongArrayCounter#getValue()::: perf long array counter get value:::return->longArrayValue
PerfLongArrayCounter#longArrayValue():::Get a copy of the elements of the LongArrayCounter.:::lb->position->l->lb->limit->new->longArr->lb->get->return
PerfLongArrayCounter#longAt(int):::Get the value of an element of the LongArrayCounter object.:::lb->position->return->lb->get
PerfLongArrayCounter#writeReplace():::Serialize as a snapshot object.:::return->getName->getUnits->getVariability->getFlags->getVectorLength->longArrayValue->new->LongArrayCounterSnapshot
PerfLongCounter#getValue()::: perf long counter get value:::return->Long->lb->get->valueOf
PerfLongCounter#longValue():::Get the value of this Long performance counter:::return->lb->get
PerfLongCounter#writeReplace():::Serialize as a snapshot object.:::return->getName->getUnits->getVariability->getFlags->longValue->new->LongCounterSnapshot
PerfStringCounter#isVector()::: perf string counter is vector:::return
PerfStringCounter#getVectorLength()::: perf string counter get vector length:::return
PerfStringCounter#getValue()::: perf string counter get value:::return->stringValue
PerfStringCounter#stringValue()::: perf string counter string value:::str->b->byteArrayValue->if->return->i->for->return->new->String
PerfStringCounter#writeReplace():::Serialize as a snapshot object.:::return->getName->getUnits->getVariability->getFlags->stringValue->new->StringCounterSnapshot
Prologue#getMagic()::: prologue get magic:::return
Prologue#getMajorVersion()::: prologue get major version:::header->position->return->header->get
Prologue#getMinorVersion()::: prologue get minor version:::header->position->return->header->get
Prologue#getByteOrder()::: prologue get byte order:::header->position->byte_order->header->get->if->return->else->return
Prologue#getEntryOffset()::: prologue get entry offset:::header->position->return->header->getInt
Prologue#getUsed()::: prologue get used:::header->position->return->header->getInt
Prologue#getOverflow()::: prologue get overflow:::header->position->return->header->getInt
Prologue#getModificationTimeStamp()::: prologue get modification time stamp:::header->position->return->header->getLong
Prologue#getNumEntries()::: prologue get num entries:::header->position->return->header->getInt
Prologue#isAccessible()::: prologue is accessible:::header->position->b->header->get->return
StringCounterSnapshot#getValue()::: string counter snapshot get value:::return
StringCounterSnapshot#stringValue()::: string counter snapshot string value:::return
