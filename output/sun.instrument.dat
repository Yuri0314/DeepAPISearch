sun.instrument.InstrumentationImpl#addTransformer(ClassFileTransformer)->void::: instrumentation impl add transformer
sun.instrument.InstrumentationImpl#addTransformer(ClassFileTransformer, boolean)->void::: instrumentation impl add transformer
sun.instrument.InstrumentationImpl#removeTransformer(ClassFileTransformer)->boolean::: instrumentation impl remove transformer
sun.instrument.InstrumentationImpl#isModifiableClass(Class)->boolean::: instrumentation impl is modifiable class
sun.instrument.InstrumentationImpl#isModifiableModule(Module)->boolean::: instrumentation impl is modifiable module
sun.instrument.InstrumentationImpl#isRetransformClassesSupported()->boolean::: instrumentation impl is retransform classes supported
sun.instrument.InstrumentationImpl#retransformClasses(Class...)->void::: instrumentation impl retransform classes
sun.instrument.InstrumentationImpl#isRedefineClassesSupported()->boolean::: instrumentation impl is redefine classes supported
sun.instrument.InstrumentationImpl#redefineClasses(ClassDefinition...)->void::: instrumentation impl redefine classes
sun.instrument.InstrumentationImpl#getAllLoadedClasses()->Class[]::: instrumentation impl get all loaded classes
sun.instrument.InstrumentationImpl#getInitiatedClasses(ClassLoader)->Class[]::: instrumentation impl get initiated classes
sun.instrument.InstrumentationImpl#getObjectSize(Object)->long::: instrumentation impl get object size
sun.instrument.InstrumentationImpl#appendToBootstrapClassLoaderSearch(JarFile)->void::: instrumentation impl append to bootstrap class loader search
sun.instrument.InstrumentationImpl#appendToSystemClassLoaderSearch(JarFile)->void::: instrumentation impl append to system class loader search
sun.instrument.InstrumentationImpl#isNativeMethodPrefixSupported()->boolean::: instrumentation impl is native method prefix supported
sun.instrument.InstrumentationImpl#setNativeMethodPrefix(ClassFileTransformer, String)->void::: instrumentation impl set native method prefix
sun.instrument.InstrumentationImpl#redefineModule(Module, Set, Map>, Map>, Set>, Map, List>>)->void::: instrumentation impl redefine module
sun.instrument.InstrumentationImpl#loadAgent(String)->void:::Invoked by the java launcher to load a java agent that is packaged with the main application in an executable JAR file.
sun.instrument.TransformerManager#isRetransformable()->boolean::: transformer manager is retransformable
sun.instrument.TransformerManager#addTransformer(ClassFileTransformer)->void::: transformer manager add transformer
sun.instrument.TransformerManager#removeTransformer(ClassFileTransformer)->boolean::: transformer manager remove transformer
sun.instrument.TransformerManager#includesTransformer(ClassFileTransformer)->boolean::: transformer manager includes transformer
sun.instrument.TransformerManager#transform(Module, ClassLoader, String, Class, ProtectionDomain, byte[])->byte[]::: transformer manager transform
sun.instrument.TransformerManager#getTransformerCount()->int::: transformer manager get transformer count
sun.instrument.TransformerManager#setNativeMethodPrefix(ClassFileTransformer, String)->boolean::: transformer manager set native method prefix
sun.instrument.TransformerManager#getNativeMethodPrefixes()->String[]::: transformer manager get native method prefixes
