DEREncodedKeyValueResolver#engineCanResolve(Element, String, StorageResolver):::{}.:::return->XMLUtils->elementIsInSignature11Space
DEREncodedKeyValueResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::{}.:::LOG->element->getTagName->debug->if->engineCanResolve->return->try->derKeyValue->new->DEREncodedKeyValue->return->derKeyValue->getPublicKey->catch->LOG->debug->finally->return
DEREncodedKeyValueResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::{}.:::return
DEREncodedKeyValueResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver):::{}.:::return
DEREncodedKeyValueResolver#engineLookupAndResolvePrivateKey(Element, String, StorageResolver):::{}.:::return
DSAKeyValueResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineResolvePublicKey:::if->return->dsaKeyElement->isKeyValue->XMLUtils->elementIsInSignatureSpace->if->XMLUtils->element->getFirstChild->selectDsNode->else->if->XMLUtils->elementIsInSignatureSpace->if->return->try->dsaKeyValue->new->DSAKeyValue->pk->dsaKeyValue->getPublicKey->return->catch->LOG->ex->getMessage->debug->finally->return
DSAKeyValueResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver)::: key value resolver engine lookup resolve x509 certificate:::return
DSAKeyValueResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver)::: key value resolver engine lookup and resolve secret key:::return
ECKeyValueResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineResolvePublicKey:::if->return->ecKeyElement->isKeyValue->XMLUtils->elementIsInSignatureSpace->if->XMLUtils->element->getFirstChild->selectDs11Node->else->if->XMLUtils->elementIsInSignature11Space->if->return->try->ecKeyValue->new->ECKeyValue->return->ecKeyValue->getPublicKey->catch->LOG->ex->getMessage->debug->finally->return
ECKeyValueResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver)::: key value resolver engine lookup resolve x509 certificate:::return
ECKeyValueResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver)::: key value resolver engine lookup and resolve secret key:::return
KeyInfoReferenceResolver#engineCanResolve(Element, String, StorageResolver):::{}.:::return->XMLUtils->elementIsInSignature11Space
KeyInfoReferenceResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::{}.:::LOG->element->getTagName->debug->if->engineCanResolve->return->try->referent->resolveReferentKeyInfo->if->return->referent->getPublicKey->catch->LOG->debug->finally->return
KeyInfoReferenceResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::{}.:::LOG->element->getTagName->debug->if->engineCanResolve->return->try->referent->resolveReferentKeyInfo->if->return->referent->getX509Certificate->catch->LOG->debug->finally->return
KeyInfoReferenceResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver):::{}.:::LOG->element->getTagName->debug->if->engineCanResolve->return->try->referent->resolveReferentKeyInfo->if->return->referent->getSecretKey->catch->LOG->debug->finally->return
KeyInfoReferenceResolver#engineLookupAndResolvePrivateKey(Element, String, StorageResolver):::{}.:::LOG->element->getTagName->debug->if->engineCanResolve->return->try->referent->resolveReferentKeyInfo->if->return->referent->getPrivateKey->catch->LOG->debug->finally->return
KeyInfoReferenceResolver#resolveReferentKeyInfo(Element, String, StorageResolver):::Resolve the KeyInfoReference Element's URI attribute into a KeyInfo instance.:::reference->new->KeyInfoReference->uriAttr->reference->getURIAttr->resource->resolveInput->referentElement->try->obtainReferenceElement->catch->LOG->debug->return->finally->if->LOG->uriAttr->getValue->debug->return->validateReference->referent->new->KeyInfo->referent->addStorageResolver->return
KeyInfoReferenceResolver#validateReference(Element):::Validate the Element referred to by the KeyInfoReference.:::if->XMLUtils->elementIsInSignatureSpace->exArgs->referentElement->getNamespaceURI->referentElement->getLocalName->new->QName->throw->new->XMLSecurityException->referent->new->KeyInfo->if->referent->containsKeyInfoReference->if->throw->new->XMLSecurityException->else->throw->new->XMLSecurityException
KeyInfoReferenceResolver#resolveInput(Attr, String, boolean):::Resolve the XML signature input represented by the specified URI.:::resRes->ResourceResolver->getInstance->return->resRes->resolve
KeyInfoReferenceResolver#obtainReferenceElement(XMLSignatureInput):::Resolve the Element effectively represented by the XML signature input source.:::e->if->resource->isElement->resource->getSubNode->else->if->resource->isNodeSet->LOG->debug->return->else->inputBytes->resource->getBytes->getDocFromBytes->return
PrivateKeyResolver#engineCanResolve(Element, String, StorageResolver):::This method returns whether the KeyResolverSpi is able to perform the requested action.:::if->XMLUtils->elementIsInSignatureSpace->XMLUtils->elementIsInSignatureSpace->return->return
PrivateKeyResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineLookupAndResolvePublicKey:::return
PrivateKeyResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::Method engineResolveX509Certificate :::return
PrivateKeyResolver#engineResolveSecretKey(Element, String, StorageResolver):::Method engineResolveSecretKey:::return
PrivateKeyResolver#engineLookupAndResolvePrivateKey(Element, String, StorageResolver):::Method engineResolvePrivateKey :::LOG->element->getTagName->debug->if->XMLUtils->elementIsInSignatureSpace->privKey->resolveX509Data->if->return->else->if->XMLUtils->elementIsInSignatureSpace->LOG->debug->keyName->element->getFirstChild->getNodeValue->try->key->keyStore->getKey->if->return->catch->LOG->debug->finally->LOG->debug->return
PrivateKeyResolver#resolveX509Data(Element, String)::: private key resolver resolve x509 data:::LOG->debug->try->x509Data->new->X509Data->len->x509Data->lengthSKI->for->i->x509Data->lengthIssuerSerial->for->i->x509Data->lengthSubjectName->for->i->x509Data->lengthCertificate->for->i->catch->LOG->debug->LOG->debug->finally->return
PrivateKeyResolver#resolveX509SKI(XMLX509SKI)::: private key resolver resolve x509 i:::LOG->debug->aliases->keyStore->aliases->while->aliases->hasMoreElements->alias->aliases->nextElement->if->keyStore->isKeyEntry->cert->keyStore->getCertificate->if->certSKI->x509SKI->getDocument->new->XMLX509SKI->if->certSKI->equals->LOG->debug->try->key->keyStore->getKey->if->return->catch->LOG->debug->finally->return
PrivateKeyResolver#resolveX509IssuerSerial(XMLX509IssuerSerial)::: private key resolver resolve x509 issuer serial:::LOG->debug->aliases->keyStore->aliases->while->aliases->hasMoreElements->alias->aliases->nextElement->if->keyStore->isKeyEntry->cert->keyStore->getCertificate->if->certSerial->x509Serial->getDocument->new->XMLX509IssuerSerial->if->certSerial->equals->LOG->debug->try->key->keyStore->getKey->if->return->catch->LOG->debug->finally->return
PrivateKeyResolver#resolveX509SubjectName(XMLX509SubjectName)::: private key resolver resolve x509 subject name:::LOG->debug->aliases->keyStore->aliases->while->aliases->hasMoreElements->alias->aliases->nextElement->if->keyStore->isKeyEntry->cert->keyStore->getCertificate->if->certSN->x509SubjectName->getDocument->new->XMLX509SubjectName->if->certSN->equals->LOG->debug->try->key->keyStore->getKey->if->return->catch->LOG->debug->finally->return
PrivateKeyResolver#resolveX509Certificate(XMLX509Certificate)::: private key resolver resolve x509 certificate:::LOG->debug->x509CertBytes->x509Cert->getCertificateBytes->aliases->keyStore->aliases->while->aliases->hasMoreElements->alias->aliases->nextElement->if->keyStore->isKeyEntry->cert->keyStore->getCertificate->if->certBytes->try->cert->getEncoded->catch->LOG->debug->finally->if->Arrays->equals->LOG->debug->try->key->keyStore->getKey->if->return->catch->LOG->debug->finally->return
RetrievalMethodResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineResolvePublicKey :::if->XMLUtils->elementIsInSignatureSpace->return->try->rm->new->RetrievalMethod->type->rm->getType->resource->resolveInput->if->equals->cert->getRawCertificate->if->return->cert->getPublicKey->return->e->obtainReferenceElement->if->XMLUtils->elementIsInSignatureSpace->if->if->LOG->isDebugEnabled->error->LOG->debug->return->rm2->new->RetrievalMethod->resource2->resolveInput->e2->obtainReferenceElement->if->LOG->debug->return->return->resolveKey->catch->LOG->debug->LOG->debug->LOG->debug->LOG->debug->LOG->debug->finally->return
RetrievalMethodResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::Method engineResolveX509Certificate :::if->XMLUtils->elementIsInSignatureSpace->return->try->rm->new->RetrievalMethod->type->rm->getType->resource->resolveInput->if->equals->return->getRawCertificate->e->obtainReferenceElement->if->XMLUtils->elementIsInSignatureSpace->if->if->LOG->isDebugEnabled->error->LOG->debug->return->rm2->new->RetrievalMethod->resource2->resolveInput->e2->obtainReferenceElement->if->LOG->debug->return->return->resolveCertificate->catch->LOG->debug->LOG->debug->LOG->debug->LOG->debug->LOG->debug->finally->return
RetrievalMethodResolver#resolveCertificate(Element, String, StorageResolver):::Retrieves a x509Certificate from the given information:::if->LOG->isDebugEnabled->LOG->e->getNamespaceURI->e->getLocalName->debug->if->return->KeyResolver->getX509Certificate->return
RetrievalMethodResolver#resolveKey(Element, String, StorageResolver):::Retrieves a PublicKey from the given information:::if->LOG->isDebugEnabled->LOG->e->getNamespaceURI->e->getLocalName->debug->if->return->KeyResolver->getPublicKey->return
RetrievalMethodResolver#obtainReferenceElement(XMLSignatureInput, boolean)::: retrieval method resolver obtain reference element:::e->if->resource->isElement->resource->getSubNode->else->if->resource->isNodeSet->resource->getNodeSet->getDocumentElement->else->inputBytes->resource->getBytes->getDocFromBytes->LOG->debug->return
RetrievalMethodResolver#getRawCertificate(XMLSignatureInput)::: retrieval method resolver get raw certificate:::inputBytes->resource->getBytes->certFact->CertificateFactory->getInstance->try->is->new->ByteArrayInputStream->return->certFact->generateCertificate->catch->finally
RetrievalMethodResolver#resolveInput(RetrievalMethod, String, boolean):::Resolves the input from the given retrieval method:::uri->rm->getURIAttr->transforms->rm->getTransforms->resRes->ResourceResolver->getInstance->resource->resRes->resolve->if->LOG->debug->transforms->performTransforms->return
RetrievalMethodResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver):::Method engineResolveSecretKey :::return
RetrievalMethodResolver#getDocumentElement(Set)::: retrieval method resolver get document element:::it->set->iterator->e->while->it->hasNext->currentNode->it->next->if->currentNode->getNodeType->break->parents->new->ArrayList<>->while->parents->add->n->e->getParentNode->if->n->getNodeType->break->it2->parents->parents->size->listIterator->ele->while->it2->hasPrevious->it2->previous->if->set->contains->return->return
RSAKeyValueResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver)::: key value resolver engine lookup and resolve public key:::if->return->LOG->element->getTagName->debug->isKeyValue->XMLUtils->elementIsInSignatureSpace->rsaKeyElement->if->XMLUtils->element->getFirstChild->selectDsNode->else->if->XMLUtils->elementIsInSignatureSpace->if->return->try->rsaKeyValue->new->RSAKeyValue->return->rsaKeyValue->getPublicKey->catch->LOG->debug->finally->return
RSAKeyValueResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver)::: key value resolver engine lookup resolve x509 certificate:::return
RSAKeyValueResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver)::: key value resolver engine lookup and resolve secret key:::return
SecretKeyResolver#engineCanResolve(Element, String, StorageResolver):::This method returns whether the KeyResolverSpi is able to perform the requested action.:::return->XMLUtils->elementIsInSignatureSpace
SecretKeyResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineLookupAndResolvePublicKey:::return
SecretKeyResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::Method engineResolveX509Certificate :::return
SecretKeyResolver#engineResolveSecretKey(Element, String, StorageResolver):::Method engineResolveSecretKey:::LOG->element->getTagName->debug->if->XMLUtils->elementIsInSignatureSpace->keyName->element->getFirstChild->getNodeValue->try->key->keyStore->getKey->if->return->catch->LOG->debug->finally->LOG->debug->return
SecretKeyResolver#engineLookupAndResolvePrivateKey(Element, String, StorageResolver):::Method engineResolvePrivateKey :::return
SingleKeyResolver#engineCanResolve(Element, String, StorageResolver):::This method returns whether the KeyResolverSpi is able to perform the requested action.:::return->XMLUtils->elementIsInSignatureSpace
SingleKeyResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineLookupAndResolvePublicKey:::LOG->element->getTagName->debug->if->XMLUtils->elementIsInSignatureSpace->name->element->getFirstChild->getNodeValue->if->keyName->equals->return->LOG->debug->return
SingleKeyResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::Method engineResolveX509Certificate :::return
SingleKeyResolver#engineResolveSecretKey(Element, String, StorageResolver):::Method engineResolveSecretKey:::LOG->element->getTagName->debug->if->XMLUtils->elementIsInSignatureSpace->name->element->getFirstChild->getNodeValue->if->keyName->equals->return->LOG->debug->return
SingleKeyResolver#engineLookupAndResolvePrivateKey(Element, String, StorageResolver):::Method engineResolvePrivateKey :::LOG->element->getTagName->debug->if->XMLUtils->elementIsInSignatureSpace->name->element->getFirstChild->getNodeValue->if->keyName->equals->return->LOG->debug->return
X509CertificateResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineResolvePublicKey :::cert->this->engineLookupResolveX509Certificate->if->return->cert->getPublicKey->return
X509CertificateResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::Method engineResolveX509Certificate :::try->els->XMLUtils->element->getFirstChild->selectDsNodes->if->el->XMLUtils->element->getFirstChild->selectDsNode->if->return->engineLookupResolveX509Certificate->return->for->i->return->catch->LOG->debug->throw->new->KeyResolverException->finally
X509CertificateResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver):::Method engineResolveSecretKey :::return
X509DigestResolver#engineCanResolve(Element, String, StorageResolver):::{}.:::if->XMLUtils->elementIsInSignatureSpace->try->x509Data->new->X509Data->return->x509Data->containsDigest->catch->return->finally->else->return
X509DigestResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::{}.:::cert->this->engineLookupResolveX509Certificate->if->return->cert->getPublicKey->return
X509DigestResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::{}.:::LOG->element->getTagName->debug->if->engineCanResolve->return->try->return->resolveCertificate->catch->LOG->debug->finally->return
X509DigestResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver):::{}.:::return
X509DigestResolver#resolveCertificate(Element, String, StorageResolver):::Resolves from the storage resolver the actual certificate represented by the digest.:::x509Digests->x509childNodes->XMLUtils->element->getFirstChild->selectDs11Nodes->if->return->try->checkStorage->new->XMLX509DigestArr->for->i->storageIterator->storage->getIterator->while->storageIterator->hasNext->cert->storageIterator->next->for->i->catch->throw->new->KeyResolverException->finally->return
X509DigestResolver#checkStorage(StorageResolver):::Method checkSrorage:::if->exArgs->ex->new->KeyResolverException->LOG->debug->throw
X509IssuerSerialResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver)::: x509 issuer serial resolver engine lookup and resolve public key:::cert->this->engineLookupResolveX509Certificate->if->return->cert->getPublicKey->return
X509IssuerSerialResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver)::: x509 issuer serial resolver engine lookup resolve x509 certificate:::LOG->element->getTagName->debug->x509data->try->new->X509Data->catch->LOG->debug->return->LOG->debug->return->finally->if->x509data->containsIssuerSerial->return->try->if->exArgs->ex->new->KeyResolverException->LOG->debug->throw->noOfISS->x509data->lengthIssuerSerial->storageIterator->storage->getIterator->while->storageIterator->hasNext->cert->storageIterator->next->certSerial->element->getOwnerDocument->new->XMLX509IssuerSerial->LOG->certSerial->getIssuerName->debug->LOG->certSerial->getSerialNumber->toString->debug->for->i->return->catch->LOG->debug->throw->new->KeyResolverException->finally
X509IssuerSerialResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver)::: x509 issuer serial resolver engine lookup and resolve secret key:::return
X509SKIResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineResolvePublicKey:::cert->this->engineLookupResolveX509Certificate->if->return->cert->getPublicKey->return
X509SKIResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::Method engineResolveX509Certificate :::LOG->element->getTagName->debug->if->XMLUtils->elementIsInSignatureSpace->LOG->debug->return->x509childObject->x509childNodes->XMLUtils->element->getFirstChild->selectDsNodes->if->LOG->debug->return->try->if->exArgs->ex->new->KeyResolverException->LOG->debug->throw->new->XMLX509SKIArr->for->i->storageIterator->storage->getIterator->while->storageIterator->hasNext->cert->storageIterator->next->certSKI->element->getOwnerDocument->new->XMLX509SKI->for->i->catch->throw->new->KeyResolverException->finally->return
X509SKIResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver):::Method engineResolveSecretKey :::return
X509SubjectNameResolver#engineLookupAndResolvePublicKey(Element, String, StorageResolver):::Method engineResolvePublicKey:::cert->this->engineLookupResolveX509Certificate->if->return->cert->getPublicKey->return
X509SubjectNameResolver#engineLookupResolveX509Certificate(Element, String, StorageResolver):::Method engineResolveX509Certificate :::LOG->element->getTagName->debug->x509childNodes->x509childObject->if->XMLUtils->elementIsInSignatureSpace->LOG->debug->return->XMLUtils->element->getFirstChild->selectDsNodes->if->LOG->debug->return->try->if->exArgs->ex->new->KeyResolverException->LOG->debug->throw->new->XMLX509SubjectNameArr->for->i->storageIterator->storage->getIterator->while->storageIterator->hasNext->cert->storageIterator->next->certSN->element->getOwnerDocument->new->XMLX509SubjectName->LOG->certSN->getSubjectName->debug->for->i->return->catch->LOG->debug->throw->new->KeyResolverException->finally
X509SubjectNameResolver#engineLookupAndResolveSecretKey(Element, String, StorageResolver):::Method engineResolveSecretKey :::return
