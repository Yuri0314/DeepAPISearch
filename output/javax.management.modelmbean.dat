DescriptorSupport#toXMLString():::Returns an XML String representing the descriptor.  The format is not defined, but an implementation must ensure that the string returned by this method can be used to build an equivalent descriptor when instantiated using the constructor #DescriptorSupport(String) DescriptorSupport(String inStr).  Fields which are not String objects will have toString() called on them to create the value:::buf->new->StringBuilder->returnedSet->descriptorMap->entrySet->foreach->name->currElement->getKey->value->currElement->getValue->valueString->if->svalue->if->svalue->startsWith->svalue->endsWith->quote->if->makeFieldValue->buf->append->append->append->append->append->buf->append->return->buf->toString
DescriptorSupport#toString():::Returns a human readable string representing the descriptor:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->respStr->fields->getFields->if->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->return->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->for->i->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->return
ModelMBean#setModelMBeanInfo(ModelMBeanInfo):::Initializes a ModelMBean object using ModelMBeanInfo passed in:::
ModelMBean#setManagedResource(Object, String):::Sets the instance handle of the object against which to execute all methods in this ModelMBean management interface (MBeanInfo and Descriptors).:::
ModelMBeanAttributeInfo#setDescriptor(Descriptor):::Sets associated Descriptor (full replace) for the ModelMBeanAttributeDescriptor:::validDescriptor
ModelMBeanAttributeInfo#toString():::Returns a human-readable version of the ModelMBeanAttributeInfo instance.:::return->this->getName->this->getDescription->this->getType->this->isReadable->this->isWritable->this->getDescriptor
ModelMBeanConstructorInfo#clone():::Creates and returns a new ModelMBeanConstructorInfo which is a duplicate of this ModelMBeanConstructorInfo.:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->return->new->ModelMBeanConstructorInfo
ModelMBeanConstructorInfo#setDescriptor(Descriptor):::Sets associated Descriptor (full replace) of ModelMBeanConstructorInfo:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->validDescriptor
ModelMBeanConstructorInfo#toString():::Returns a string containing the entire contents of the ModelMBeanConstructorInfo in human readable form.:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->retStr->this->getName->this->getDescription->this->getDescriptor->pTypes->this->getSignature->for->i->return
ModelMBeanInfo#getDescriptors(String):::Returns a Descriptor array consisting of all Descriptors for the ModelMBeanInfo of type inDescriptorType.:::
ModelMBeanInfo#setDescriptors(Descriptor[]):::Adds or replaces descriptors in the ModelMBeanInfo.:::
ModelMBeanInfo#getMBeanDescriptor():::Returns the ModelMBean's descriptor which contains MBean wide policies:::
ModelMBeanInfo#getNotification(String):::Returns a ModelMBeanNotificationInfo requested by name.:::
ModelMBeanInfo#clone():::Creates and returns a copy of this object.:::
ModelMBeanInfo#getAttributes():::Returns the list of attributes exposed for management:::
ModelMBeanInfo#getClassName():::Returns the name of the Java class of the MBean described by this <CODE>MBeanInfo</CODE>.:::
ModelMBeanInfo#getConstructors():::Returns the list of the public constructors  of the MBean:::
ModelMBeanInfo#getDescription():::Returns a human readable description of the MBean.:::
ModelMBeanInfo#getNotifications():::Returns the list of the notifications emitted by the MBean:::
ModelMBeanInfo#getOperations():::Returns the list of operations  of the MBean:::
ModelMBeanInfoSupport#clone():::Returns a shallow clone of this instance:::return->new->ModelMBeanInfoSupport
ModelMBeanNotificationBroadcaster#sendNotification(String):::Sends a Notification which contains the text string that is passed in to the registered Notification listeners on the ModelMBean.:::
ModelMBeanNotificationBroadcaster#sendAttributeChangeNotification(AttributeChangeNotification):::Sends an attributeChangeNotification which is passed in to the registered attributeChangeNotification listeners on the ModelMBean.:::
ModelMBeanNotificationBroadcaster#sendAttributeChangeNotification(Attribute, Attribute):::Sends an attributeChangeNotification which contains the old value and new value for the attribute to the registered AttributeChangeNotification listeners on the ModelMBean.:::
ModelMBeanNotificationBroadcaster#addAttributeChangeNotificationListener(NotificationListener, String, Object):::Registers an object which implements the NotificationListener interface as a listener:::
ModelMBeanNotificationInfo#clone():::Creates and returns a new ModelMBeanNotificationInfo which is a duplicate of this ModelMBeanNotificationInfo.:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->return->new->ModelMBeanNotificationInfo
ModelMBeanNotificationInfo#getDescriptor():::Returns a copy of the associated Descriptor for the ModelMBeanNotificationInfo.:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->if->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->validDescriptor->return->notificationDescriptor->clone
ModelMBeanNotificationInfo#setDescriptor(Descriptor):::Sets associated Descriptor (full replace) for the ModelMBeanNotificationInfo If the new Descriptor is null, then the associated Descriptor reverts to a default descriptor:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->validDescriptor
ModelMBeanNotificationInfo#toString():::Returns a human readable string containing ModelMBeanNotificationInfo.:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->retStr->new->StringBuilder->retStr->append->this->getName->append->retStr->append->this->getDescription->append->retStr->append->this->getDescriptor->append->retStr->append->nTypes->this->getNotifTypes->for->i->return->retStr->toString
ModelMBeanOperationInfo#setDescriptor(Descriptor):::Sets associated Descriptor (full replace) for the ModelMBeanOperationInfo If the new Descriptor is null, then the associated Descriptor reverts to a default descriptor:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->validDescriptor
ModelMBeanOperationInfo#toString():::Returns a string containing the entire contents of the ModelMBeanOperationInfo in human readable form.:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->retStr->this->getName->this->getDescription->this->getDescriptor->this->getReturnType->pTypes->this->getSignature->for->i->return
RequiredModelMBean#setModelMBeanInfo(ModelMBeanInfo):::Initializes a ModelMBean object using ModelMBeanInfo passed in:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->if->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->x->new->IllegalArgumentException->exceptionText->throw->new->RuntimeOperationsException->if->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->exceptionText->x->new->IllegalStateException->throw->new->RuntimeOperationsException->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->printModelMBeanInfo->log->noOfNotifications->if->mbi->getNotifications->mbi->getNotifications->MODELMBEAN_LOGGER->log->mbi->clone->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->printModelMBeanInfo->log->MODELMBEAN_LOGGER->log
RequiredModelMBean#setManagedResource(Object, String):::Sets the instance handle of the object against which to execute all methods in this ModelMBean management interface (MBeanInfo and Descriptors).:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->if->mr_type->equalsIgnoreCase->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->throw->new->InvalidTargetObjectTypeException->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log
RequiredModelMBean#load():::Instantiates this MBean instance with the data found for the MBean in the persistent store:::x->new->ServiceNotFoundException->throw->x->getMessage->new->MBeanException
RequiredModelMBean#store():::Captures the current state of this MBean instance and writes it out to the persistent store:::x->new->ServiceNotFoundException->throw->x->getMessage->new->MBeanException
RequiredModelMBean#getMBeanInfo():::Returns the attributes, operations, constructors and notifications that this RequiredModelMBean exposes for management.:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->if->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->createDefaultModelMBeanInfo->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->modelMBeanInfo->getClassName->modelMBeanInfo->getDescription->log->MODELMBEAN_LOGGER->printModelMBeanInfo->log->return->modelMBeanInfo->clone
RequiredModelMBean#getAttribute(String):::Returns the value of a specific attribute defined for this ModelMBean:::if->throw->new->IllegalArgumentException->new->RuntimeOperationsException->tracing->MODELMBEAN_LOGGER->isLoggable->if->MODELMBEAN_LOGGER->log->response->try->if->throw->new->AttributeNotFoundException->attrInfo->modelMBeanInfo->getAttribute->mmbDesc->modelMBeanInfo->getMBeanDescriptor->if->throw->new->AttributeNotFoundException->attrDescr->attrInfo->getDescriptor->if->if->attrInfo->isReadable->throw->new->AttributeNotFoundException->resolveForCacheValue->if->MODELMBEAN_LOGGER->log->if->if->MODELMBEAN_LOGGER->log->attrGetMethod->attrDescr->getFieldValue->if->if->MODELMBEAN_LOGGER->log->getResponse->new->ObjectArr->new->StringArr->invoke->if->if->MODELMBEAN_LOGGER->log->objctl->attrDescr->getFieldValue->ctl->if->objctl->toString->else->if->mmbDesc->getFieldValue->if->objctl->toString->else->if->ctl->equals->if->MODELMBEAN_LOGGER->log->attrDescr->setField->stamp->String->new->Date->getTime->valueOf->attrDescr->setField->attrInfo->setDescriptor->modelMBeanInfo->setDescriptor->if->MODELMBEAN_LOGGER->log->MODELMBEAN_LOGGER->attrInfo->getDescriptor->log->attStr->modelMBeanInfo->getDescriptor->toString->MODELMBEAN_LOGGER->log->else->if->MODELMBEAN_LOGGER->log->else->qualifier->attrDescr->getFieldValue->if->attrDescr->getFieldValue->if->MODELMBEAN_LOGGER->log->respType->attrInfo->getType->if->responseClass->response->getClass->getName->if->respType->equals->wrongType->primitiveType->correspondingTypes->for->i->if->if->else->subtype->try->respClass->response->getClass->caughException->new->ExceptionArr->stack->AccessController->getContext->c->javaSecurityAccess->new->PrivilegedAction<Class<?>>->doIntersectionPrivilege->if->throw->c->isInstance->catch->if->MODELMBEAN_LOGGER->log->finally->if->if->if->MODELMBEAN_LOGGER->log->throw->new->InvalidAttributeValueException->new->MBeanException->else->if->MODELMBEAN_LOGGER->log->throw->new->InvalidAttributeValueException->new->MBeanException->catch->throw->throw->if->MODELMBEAN_LOGGER->e->getMessage->e->getClass->toString->log->throw->e->getMessage->new->MBeanException->finally->if->MODELMBEAN_LOGGER->log->return
RequiredModelMBean#getAttributes(String[]):::Returns the values of several attributes in the ModelMBean:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->getName->log->if->throw->new->IllegalArgumentException->new->RuntimeOperationsException->responseList->new->AttributeList->for->i->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->return
RequiredModelMBean#setAttribute(Attribute):::Sets the value of a specific attribute of a named ModelMBean:::tracing->MODELMBEAN_LOGGER->isLoggable->if->MODELMBEAN_LOGGER->log->if->throw->new->IllegalArgumentException->new->RuntimeOperationsException->attrName->attribute->getName->attrValue->attribute->getValue->updateDescriptor->attrInfo->modelMBeanInfo->getAttribute->if->throw->new->AttributeNotFoundException->mmbDesc->modelMBeanInfo->getMBeanDescriptor->attrDescr->attrInfo->getDescriptor->if->if->attrInfo->isWritable->throw->new->AttributeNotFoundException->attrSetMethod->attrDescr->getFieldValue->attrGetMethod->attrDescr->getFieldValue->attrType->attrInfo->getType->currValue->try->this->getAttribute->catch->finally->oldAttr->new->Attribute->if->if->try->clazz->loadClass->if->clazz->isInstance->throw->clazz->getName->attrValue->getClass->getName->new->InvalidAttributeValueException->catch->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->finally->else->new->ObjectArr->new->StringArr->invoke->objctl->attrDescr->getFieldValue->ctl->if->objctl->toString->else->if->mmbDesc->getFieldValue->if->objctl->toString->else->updateCache->ctl->equals->if->throw->new->ServiceNotFoundException->new->MBeanException->if->if->MODELMBEAN_LOGGER->log->attrDescr->setField->if->currtime->String->new->Date->getTime->valueOf->attrDescr->setField->attrInfo->setDescriptor->modelMBeanInfo->setDescriptor->if->strb->new->StringBuilder->append->append->append->attrInfo->getDescriptor->append->append->modelMBeanInfo->getDescriptor->append->MODELMBEAN_LOGGER->strb->toString->log->if->MODELMBEAN_LOGGER->log->sendAttributeChangeNotification->else->if->MODELMBEAN_LOGGER->log->throw->new->InvalidAttributeValueException->if->MODELMBEAN_LOGGER->log
RequiredModelMBean#setAttributes(AttributeList):::Sets the values of an array of attributes of this ModelMBean:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->if->throw->new->IllegalArgumentException->new->RuntimeOperationsException->responseList->new->AttributeList->foreach->attributes->asList->try->setAttribute->responseList->add->catch->responseList->remove->finally->return
RequiredModelMBean#addNotificationListener(NotificationListener, NotificationFilter, Object):::Registers an object which implements the NotificationListener interface as a listener:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->if->throw->new->IllegalArgumentException->if->new->NotificationBroadcasterSupport->generalBroadcaster->addNotificationListener->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->MODELMBEAN_LOGGER->log
RequiredModelMBean#removeNotificationListener(NotificationListener):::Removes a listener for Notifications from the RequiredModelMBean.:::if->throw->new->ListenerNotFoundException->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->if->throw->new->ListenerNotFoundException->generalBroadcaster->removeNotificationListener->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log
RequiredModelMBean#getNotificationInfo():::Returns the array of Notifications always generated by the RequiredModelMBean:::if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->hasGeneric->hasNotification->hasAttributeChange->hasNotification->currInfo->modelMBeanInfo->getNotifications->len->respInfo->new->ModelMBeanNotificationInfoArr->inserted->if->makeGenericInfo->if->makeAttributeChangeInfo->count->offset->for->j->if->MODELMBEAN_LOGGER->isLoggable->MODELMBEAN_LOGGER->log->return
RequiredModelMBean#getClassLoaderRepository():::Return the Class Loader Repository used to perform class loading:::return->MBeanServerFactory->getClassLoaderRepository
RequiredModelMBean#preRegister(MBeanServer, ObjectName):::Allows the MBean to perform any operations it needs before being registered in the MBean server:::if->throw->new->NullPointerException->return
RequiredModelMBean#postRegister(Boolean):::Allows the MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed:::registrationDone->booleanValue
RequiredModelMBean#preDeregister():::Allows the MBean to perform any operations it needs before being unregistered by the MBean server:::
RequiredModelMBean#postDeregister():::Allows the MBean to perform any operations needed after having been unregistered in the MBean server:::
