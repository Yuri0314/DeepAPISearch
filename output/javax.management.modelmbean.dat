javax.management.modelmbean.DescriptorSupport#getFieldValue(String)->Object::: descriptor support get field value
javax.management.modelmbean.DescriptorSupport#setField(String, Object)->void::: descriptor support set field
javax.management.modelmbean.DescriptorSupport#getFields()->String[]::: descriptor support get fields
javax.management.modelmbean.DescriptorSupport#getFieldNames()->String[]::: descriptor support get field names
javax.management.modelmbean.DescriptorSupport#getFieldValues(String...)->Object[]::: descriptor support get field values
javax.management.modelmbean.DescriptorSupport#setFields(String[], Object[])->void::: descriptor support set fields
javax.management.modelmbean.DescriptorSupport#clone()->Object::: descriptor support clone
javax.management.modelmbean.DescriptorSupport#removeField(String)->void::: descriptor support remove field
javax.management.modelmbean.DescriptorSupport#equals(Object)->boolean::: descriptor support equals
javax.management.modelmbean.DescriptorSupport#hashCode()->int::: descriptor support hash code
javax.management.modelmbean.DescriptorSupport#isValid()->boolean::: descriptor support is valid
javax.management.modelmbean.DescriptorSupport#toXMLString()->String:::Returns an XML String representing the descriptor.  The format is not defined, but an implementation must ensure that the string returned by this method can be used to build an equivalent descriptor when instantiated using the constructor #DescriptorSupport(String) DescriptorSupport(String inStr).  Fields which are not String objects will have toString() called on them to create the value
javax.management.modelmbean.DescriptorSupport#toString()->String:::Returns a human readable string representing the descriptor
javax.management.modelmbean.ModelMBean#setModelMBeanInfo(ModelMBeanInfo)->void:::Initializes a ModelMBean object using ModelMBeanInfo passed in
javax.management.modelmbean.ModelMBean#setManagedResource(Object, String)->void:::Sets the instance handle of the object against which to execute all methods in this ModelMBean management interface (MBeanInfo and Descriptors).
javax.management.modelmbean.ModelMBeanAttributeInfo#getDescriptor()->Descriptor::: model bean attribute info get descriptor
javax.management.modelmbean.ModelMBeanAttributeInfo#setDescriptor(Descriptor)->void:::Sets associated Descriptor (full replace) for the ModelMBeanAttributeDescriptor
javax.management.modelmbean.ModelMBeanAttributeInfo#clone()->Object::: model bean attribute info clone
javax.management.modelmbean.ModelMBeanAttributeInfo#toString()->String:::Returns a human-readable version of the ModelMBeanAttributeInfo instance.
javax.management.modelmbean.ModelMBeanConstructorInfo#clone()->Object:::Creates and returns a new ModelMBeanConstructorInfo which is a duplicate of this ModelMBeanConstructorInfo.
javax.management.modelmbean.ModelMBeanConstructorInfo#getDescriptor()->Descriptor::: model bean constructor info get descriptor
javax.management.modelmbean.ModelMBeanConstructorInfo#setDescriptor(Descriptor)->void:::Sets associated Descriptor (full replace) of ModelMBeanConstructorInfo
javax.management.modelmbean.ModelMBeanConstructorInfo#toString()->String:::Returns a string containing the entire contents of the ModelMBeanConstructorInfo in human readable form.
javax.management.modelmbean.ModelMBeanInfo#getDescriptors(String)->Descriptor[]:::Returns a Descriptor array consisting of all Descriptors for the ModelMBeanInfo of type inDescriptorType.
javax.management.modelmbean.ModelMBeanInfo#setDescriptors(Descriptor[])->void:::Adds or replaces descriptors in the ModelMBeanInfo.
javax.management.modelmbean.ModelMBeanInfo#getDescriptor(String, String)->Descriptor::: model bean info get descriptor
javax.management.modelmbean.ModelMBeanInfo#setDescriptor(Descriptor, String)->void::: model bean info set descriptor
javax.management.modelmbean.ModelMBeanInfo#getMBeanDescriptor()->Descriptor:::Returns the ModelMBean's descriptor which contains MBean wide policies
javax.management.modelmbean.ModelMBeanInfo#setMBeanDescriptor(Descriptor)->void::: model bean info set bean descriptor
javax.management.modelmbean.ModelMBeanInfo#getAttribute(String)->ModelMBeanAttributeInfo::: model bean info get attribute
javax.management.modelmbean.ModelMBeanInfo#getOperation(String)->ModelMBeanOperationInfo::: model bean info get operation
javax.management.modelmbean.ModelMBeanInfo#getNotification(String)->ModelMBeanNotificationInfo:::Returns a ModelMBeanNotificationInfo requested by name.
javax.management.modelmbean.ModelMBeanInfo#clone()->java.lang.Object:::Creates and returns a copy of this object.
javax.management.modelmbean.ModelMBeanInfo#getAttributes()->MBeanAttributeInfo[]:::Returns the list of attributes exposed for management
javax.management.modelmbean.ModelMBeanInfo#getClassName()->java.lang.String:::Returns the name of the Java class of the MBean described by this <CODE>MBeanInfo</CODE>.
javax.management.modelmbean.ModelMBeanInfo#getConstructors()->MBeanConstructorInfo[]:::Returns the list of the public constructors  of the MBean
javax.management.modelmbean.ModelMBeanInfo#getDescription()->java.lang.String:::Returns a human readable description of the MBean.
javax.management.modelmbean.ModelMBeanInfo#getNotifications()->MBeanNotificationInfo[]:::Returns the list of the notifications emitted by the MBean
javax.management.modelmbean.ModelMBeanInfo#getOperations()->MBeanOperationInfo[]:::Returns the list of operations  of the MBean
javax.management.modelmbean.ModelMBeanInfoSupport#clone()->Object:::Returns a shallow clone of this instance
javax.management.modelmbean.ModelMBeanInfoSupport#getDescriptors(String)->Descriptor[]::: model bean info support get descriptors
javax.management.modelmbean.ModelMBeanInfoSupport#setDescriptors(Descriptor[])->void::: model bean info support set descriptors
javax.management.modelmbean.ModelMBeanInfoSupport#getDescriptor(String)->Descriptor::: model bean info support get descriptor
javax.management.modelmbean.ModelMBeanInfoSupport#getDescriptor(String, String)->Descriptor::: model bean info support get descriptor
javax.management.modelmbean.ModelMBeanInfoSupport#setDescriptor(Descriptor, String)->void::: model bean info support set descriptor
javax.management.modelmbean.ModelMBeanInfoSupport#getAttribute(String)->ModelMBeanAttributeInfo::: model bean info support get attribute
javax.management.modelmbean.ModelMBeanInfoSupport#getOperation(String)->ModelMBeanOperationInfo::: model bean info support get operation
javax.management.modelmbean.ModelMBeanInfoSupport#getConstructor(String)->ModelMBeanConstructorInfo::: model bean info support get constructor
javax.management.modelmbean.ModelMBeanInfoSupport#getNotification(String)->ModelMBeanNotificationInfo::: model bean info support get notification
javax.management.modelmbean.ModelMBeanInfoSupport#getDescriptor()->Descriptor::: model bean info support get descriptor
javax.management.modelmbean.ModelMBeanInfoSupport#getMBeanDescriptor()->Descriptor::: model bean info support get bean descriptor
javax.management.modelmbean.ModelMBeanInfoSupport#setMBeanDescriptor(Descriptor)->void::: model bean info support set bean descriptor
javax.management.modelmbean.ModelMBeanNotificationBroadcaster#sendNotification(Notification)->void::: model bean notification broadcaster send notification
javax.management.modelmbean.ModelMBeanNotificationBroadcaster#sendNotification(String)->void:::Sends a Notification which contains the text string that is passed in to the registered Notification listeners on the ModelMBean.
javax.management.modelmbean.ModelMBeanNotificationBroadcaster#sendAttributeChangeNotification(AttributeChangeNotification)->void:::Sends an attributeChangeNotification which is passed in to the registered attributeChangeNotification listeners on the ModelMBean.
javax.management.modelmbean.ModelMBeanNotificationBroadcaster#sendAttributeChangeNotification(Attribute, Attribute)->void:::Sends an attributeChangeNotification which contains the old value and new value for the attribute to the registered AttributeChangeNotification listeners on the ModelMBean.
javax.management.modelmbean.ModelMBeanNotificationBroadcaster#addAttributeChangeNotificationListener(NotificationListener, String, Object)->void:::Registers an object which implements the NotificationListener interface as a listener
javax.management.modelmbean.ModelMBeanNotificationBroadcaster#removeAttributeChangeNotificationListener(NotificationListener, String)->void::: model bean notification broadcaster remove attribute change notification listener
javax.management.modelmbean.ModelMBeanNotificationInfo#clone()->Object:::Creates and returns a new ModelMBeanNotificationInfo which is a duplicate of this ModelMBeanNotificationInfo.
javax.management.modelmbean.ModelMBeanNotificationInfo#getDescriptor()->Descriptor:::Returns a copy of the associated Descriptor for the ModelMBeanNotificationInfo.
javax.management.modelmbean.ModelMBeanNotificationInfo#setDescriptor(Descriptor)->void:::Sets associated Descriptor (full replace) for the ModelMBeanNotificationInfo If the new Descriptor is null, then the associated Descriptor reverts to a default descriptor
javax.management.modelmbean.ModelMBeanNotificationInfo#toString()->String:::Returns a human readable string containing ModelMBeanNotificationInfo.
javax.management.modelmbean.ModelMBeanOperationInfo#clone()->Object::: model bean operation info clone
javax.management.modelmbean.ModelMBeanOperationInfo#getDescriptor()->Descriptor::: model bean operation info get descriptor
javax.management.modelmbean.ModelMBeanOperationInfo#setDescriptor(Descriptor)->void:::Sets associated Descriptor (full replace) for the ModelMBeanOperationInfo If the new Descriptor is null, then the associated Descriptor reverts to a default descriptor
javax.management.modelmbean.ModelMBeanOperationInfo#toString()->String:::Returns a string containing the entire contents of the ModelMBeanOperationInfo in human readable form.
javax.management.modelmbean.RequiredModelMBean#setModelMBeanInfo(ModelMBeanInfo)->void:::Initializes a ModelMBean object using ModelMBeanInfo passed in
javax.management.modelmbean.RequiredModelMBean#setManagedResource(Object, String)->void:::Sets the instance handle of the object against which to execute all methods in this ModelMBean management interface (MBeanInfo and Descriptors).
javax.management.modelmbean.RequiredModelMBean#load()->void:::Instantiates this MBean instance with the data found for the MBean in the persistent store
javax.management.modelmbean.RequiredModelMBean#store()->void:::Captures the current state of this MBean instance and writes it out to the persistent store
javax.management.modelmbean.RequiredModelMBean#getMBeanInfo()->MBeanInfo:::Returns the attributes, operations, constructors and notifications that this RequiredModelMBean exposes for management.
javax.management.modelmbean.RequiredModelMBean#invoke(String, Object[], String[])->Object::: required model bean invoke
javax.management.modelmbean.RequiredModelMBean#getAttribute(String)->Object:::Returns the value of a specific attribute defined for this ModelMBean
javax.management.modelmbean.RequiredModelMBean#getAttributes(String[])->AttributeList:::Returns the values of several attributes in the ModelMBean
javax.management.modelmbean.RequiredModelMBean#setAttribute(Attribute)->void:::Sets the value of a specific attribute of a named ModelMBean
javax.management.modelmbean.RequiredModelMBean#setAttributes(AttributeList)->AttributeList:::Sets the values of an array of attributes of this ModelMBean
javax.management.modelmbean.RequiredModelMBean#addNotificationListener(NotificationListener, NotificationFilter, Object)->void:::Registers an object which implements the NotificationListener interface as a listener
javax.management.modelmbean.RequiredModelMBean#removeNotificationListener(NotificationListener)->void:::Removes a listener for Notifications from the RequiredModelMBean.
javax.management.modelmbean.RequiredModelMBean#removeNotificationListener(NotificationListener, NotificationFilter, Object)->void::: required model bean remove notification listener
javax.management.modelmbean.RequiredModelMBean#sendNotification(Notification)->void::: required model bean send notification
javax.management.modelmbean.RequiredModelMBean#sendNotification(String)->void::: required model bean send notification
javax.management.modelmbean.RequiredModelMBean#getNotificationInfo()->MBeanNotificationInfo[]:::Returns the array of Notifications always generated by the RequiredModelMBean
javax.management.modelmbean.RequiredModelMBean#addAttributeChangeNotificationListener(NotificationListener, String, Object)->void::: required model bean add attribute change notification listener
javax.management.modelmbean.RequiredModelMBean#removeAttributeChangeNotificationListener(NotificationListener, String)->void::: required model bean remove attribute change notification listener
javax.management.modelmbean.RequiredModelMBean#sendAttributeChangeNotification(AttributeChangeNotification)->void::: required model bean send attribute change notification
javax.management.modelmbean.RequiredModelMBean#sendAttributeChangeNotification(Attribute, Attribute)->void::: required model bean send attribute change notification
javax.management.modelmbean.RequiredModelMBean#getClassLoaderRepository()->ClassLoaderRepository:::Return the Class Loader Repository used to perform class loading
javax.management.modelmbean.RequiredModelMBean#preRegister(MBeanServer, ObjectName)->ObjectName:::Allows the MBean to perform any operations it needs before being registered in the MBean server
javax.management.modelmbean.RequiredModelMBean#postRegister(Boolean)->void:::Allows the MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed
javax.management.modelmbean.RequiredModelMBean#preDeregister()->void:::Allows the MBean to perform any operations it needs before being unregistered by the MBean server
javax.management.modelmbean.RequiredModelMBean#postDeregister()->void:::Allows the MBean to perform any operations needed after having been unregistered in the MBean server
