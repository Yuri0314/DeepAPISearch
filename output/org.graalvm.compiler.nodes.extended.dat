ArrayRangeWrite#getLength():::The length of the modified range.:::
ArrayRangeWrite#writesObjectArray():::Return true if the written array is an object array, false if it is a primitive array.:::
ArrayRangeWrite#isInitialization():::Returns whether this write is the initialization of the written location:::
BranchProbabilityNode#probability(double, boolean):::This intrinsic should only be used for the condition of an if statement:::
ForeignCallNode#setBci(int):::Set the bci of the invoke bytecode for use when converting a stateAfter into a stateDuring.:::
IntegerSwitchNode#keyAt(int):::Gets the key at the specified index.:::return->JavaConstant->forInt
IntegerSwitchNode#intKeyAt(int):::Gets the key at the specified index, as a java int.:::return
IntegerSwitchNode#tryRemoveUnreachableKeys(SimplifierTool, Stamp):::Remove unreachable keys from the switch based on the stamp of the value, i.e., based on the known range of the switch value.:::if->return->integerStamp->if->integerStamp->isUnrestricted->return->newKeyDatas->new->ArrayList<>->newSuccessors->blockSuccessorCount->new->ArrayList<>->for->i->if->newKeyDatas->size->return->else->if->newKeyDatas->size->if->tool->defaultSuccessor->addToWorkList->graph->defaultSuccessor->removeSplitPropagate->return->else->newDefaultSuccessor->defaultSuccessor->addNewSuccessor->newDefaultProbability->value->doReplace->return
SwitchNode#keyCount():::The number of distinct keys in this switch.:::
SwitchNode#keyAt(int):::The key at the specified position, encoded in a Constant.:::
SwitchNode#equalKeys(SwitchNode):::Returns true if the switch has the same keys in the same order as this switch.:::
SwitchNode#keySuccessorIndex(int):::Returns the index of the successor belonging to the key at the specified index.:::return
SwitchNode#keySuccessor(int):::Returns the successor for the key at the given index.:::return->successors->get
SwitchNode#keyProbability(int):::Returns the probability of the key at the given index.:::return
SwitchNode#defaultProbability():::Returns the probability of taking the default branch.:::return
SwitchNode#defaultSuccessorIndex():::Returns the index of the default (fall through) successor of this switch.:::return
SwitchNode#defaultSuccessor():::Gets the successor corresponding to the default (fall through) case.:::if->defaultSuccessorIndex->throw->new->GraalError->return->successors->defaultSuccessorIndex->get
SwitchNode#killOtherSuccessors(SimplifierTool, int):::Delete all other successors except for the one reached by survivingEdge.:::foreach->successors->if->blockSuccessor->tool->deleteBranch->tool->blockSuccessor->addToWorkList->graph->blockSuccessor->removeSplit
