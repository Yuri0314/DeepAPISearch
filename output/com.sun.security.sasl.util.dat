AbstractSaslImpl#isComplete():::Determines whether this mechanism has completed.:::return
AbstractSaslImpl#getNegotiatedProperty(String):::Retrieves the negotiated property.:::if->throw->new->IllegalStateException->switch->if->return->else->if->return->else->return->return->Integer->toString->return->Integer->toString->return->Integer->toString->return
AbstractSaslImpl#traceOutput(String, String, String, byte[]):::Outputs a byte array:::traceOutput
AbstractSaslImpl#networkByteOrderToInt(byte[], int, int):::Returns the integer represented by  4 bytes in network byte order.:::if->throw->new->IllegalArgumentException->answer->for->i->return
AbstractSaslImpl#intToNetworkByteOrder(int, byte[], int, int):::Encodes an integer into 4 bytes in network byte order in the buffer supplied.:::if->throw->new->IllegalArgumentException->for->i
PolicyUtils#checkPolicy(int, Map):::Determines whether a mechanism's characteristics, as defined in flags, fits the security policy properties found in props.:::if->return->if->props->get->equalsIgnoreCase->return->if->props->get->equalsIgnoreCase->return->if->props->get->equalsIgnoreCase->return->if->props->get->equalsIgnoreCase->return->if->props->get->equalsIgnoreCase->return->if->props->get->equalsIgnoreCase->return->return
PolicyUtils#filterMechs(String[], int[], Map):::Given a list of mechanisms and their characteristics, select the subset that conforms to the policies defined in props:::if->return->mechs->clone->passed->new->booleanArr->count->for->i->answer->new->StringArr->for->i->j->return
