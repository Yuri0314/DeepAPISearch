AbstractPreferences#put(String, String):::Implements the put method as per the specification in Preferences#put(String,String):::if->throw->new->NullPointerException->if->key->length->throw->new->IllegalArgumentException->if->value->length->throw->new->IllegalArgumentException->if->key->indexOf->throw->new->IllegalArgumentException->if->value->indexOf->throw->new->IllegalArgumentException->synchronized->if->throw->new->IllegalStateException->putSpi->enqueuePreferenceChangeEvent
AbstractPreferences#get(String, String):::Implements the get method as per the specification in Preferences#get(String,String):::if->throw->new->NullPointerException->if->key->indexOf->throw->new->IllegalArgumentException->synchronized->if->throw->new->IllegalStateException->result->try->getSpi->catch->finally->return
AbstractPreferences#remove(String):::Implements the remove(String) method as per the specification in Preferences#remove(String):::Objects->requireNonNull->if->key->indexOf->throw->new->IllegalArgumentException->synchronized->if->throw->new->IllegalStateException->removeSpi->enqueuePreferenceChangeEvent
AbstractPreferences#clear():::Implements the clear method as per the specification in Preferences#clear():::synchronized->foreach->keys->remove
AbstractPreferences#putInt(String, int):::Implements the putInt method as per the specification in Preferences#putInt(String,int):::Integer->toString->put
AbstractPreferences#getInt(String, int):::Implements the getInt method as per the specification in Preferences#getInt(String,int):::result->try->value->get->if->Integer->parseInt->catch->finally->return
AbstractPreferences#putLong(String, long):::Implements the putLong method as per the specification in Preferences#putLong(String,long):::Long->toString->put
AbstractPreferences#getLong(String, long):::Implements the getLong method as per the specification in Preferences#getLong(String,long):::result->try->value->get->if->Long->parseLong->catch->finally->return
AbstractPreferences#putBoolean(String, boolean):::Implements the putBoolean method as per the specification in Preferences#putBoolean(String,boolean):::String->valueOf->put
AbstractPreferences#getBoolean(String, boolean):::Implements the getBoolean method as per the specification in Preferences#getBoolean(String,boolean):::result->value->get->if->if->value->equalsIgnoreCase->else->if->value->equalsIgnoreCase->return
AbstractPreferences#putFloat(String, float):::Implements the putFloat method as per the specification in Preferences#putFloat(String,float):::Float->toString->put
AbstractPreferences#getFloat(String, float):::Implements the getFloat method as per the specification in Preferences#getFloat(String,float):::result->try->value->get->if->Float->parseFloat->catch->finally->return
AbstractPreferences#putDouble(String, double):::Implements the putDouble method as per the specification in Preferences#putDouble(String,double):::Double->toString->put
AbstractPreferences#getDouble(String, double):::Implements the getDouble method as per the specification in Preferences#getDouble(String,double):::result->try->value->get->if->Double->parseDouble->catch->finally->return
AbstractPreferences#putByteArray(String, byte[]):::Implements the putByteArray method as per the specification in Preferences#putByteArray(String,byte[]).:::Base64->byteArrayToBase64->put
AbstractPreferences#getByteArray(String, byte[]):::Implements the getByteArray method as per the specification in Preferences#getByteArray(String,byte[]).:::result->value->get->try->if->Base64->base64ToByteArray->catch->finally->return
AbstractPreferences#keys():::Implements the keys method as per the specification in Preferences#keys():::synchronized->if->throw->new->IllegalStateException->return->keysSpi
AbstractPreferences#childrenNames():::Implements the children method as per the specification in Preferences#childrenNames():::synchronized->if->throw->new->IllegalStateException->s->kidCache->keySet->new->TreeSet<>->foreach->childrenNamesSpi->s->add->return->s->toArray
AbstractPreferences#cachedChildren():::Returns all known unremoved children of this node.:::return->kidCache->values->toArray
AbstractPreferences#parent():::Implements the parent method as per the specification in Preferences#parent():::synchronized->if->throw->new->IllegalStateException->return
AbstractPreferences#node(String):::Implements the node method as per the specification in Preferences#node(String):::synchronized->if->throw->new->IllegalStateException->if->path->equals->return->if->path->equals->return->if->path->charAt->return->new->StringTokenizer->node->return->root->path->substring->new->StringTokenizer->node
AbstractPreferences#nodeExists(String):::Implements the nodeExists method as per the specification in Preferences#nodeExists(String):::synchronized->if->path->equals->return->if->throw->new->IllegalStateException->if->path->equals->return->if->path->charAt->return->new->StringTokenizer->nodeExists->return->root->path->substring->new->StringTokenizer->nodeExists
AbstractPreferences#removeNode():::Implements the removeNode() method as per the specification in Preferences#removeNode():::if->throw->new->UnsupportedOperationException->synchronized->removeNode2->remove
AbstractPreferences#name():::Implements the name method as per the specification in Preferences#name():::return
AbstractPreferences#absolutePath():::Implements the absolutePath method as per the specification in Preferences#absolutePath():::return
AbstractPreferences#isUserNode():::Implements the isUserNode method as per the specification in Preferences#isUserNode():::return->AccessController->new->PrivilegedAction<Boolean>->doPrivileged->booleanValue
AbstractPreferences#putSpi(String, String):::Put the given key-value association into this preference node:::
AbstractPreferences#getSpi(String):::Return the value associated with the specified key at this preference node, or null if there is no association for this key, or the association cannot be determined at this time:::
AbstractPreferences#removeSpi(String):::Remove the association (if any) for the specified key at this preference node:::
AbstractPreferences#removeNodeSpi():::Removes this preference node, invalidating it and any preferences that it contains:::
AbstractPreferences#keysSpi():::Returns all of the keys that have an associated value in this preference node:::
AbstractPreferences#childrenNamesSpi():::Returns the names of the children of this preference node:::
AbstractPreferences#getChild(String):::Returns the named child if it exists, or null if it does not:::synchronized->kidNames->childrenNames->foreach->if->kidName->equals->return->childSpi->return
AbstractPreferences#childSpi(String):::Returns the named child of this preference node, creating it if it does not already exist:::
AbstractPreferences#toString():::Returns the absolute path name of this preferences node.:::return->this->isUserNode->this->absolutePath
AbstractPreferences#sync():::Implements the sync method as per the specification in Preferences#sync():::sync2
AbstractPreferences#syncSpi():::This method is invoked with this node locked:::
AbstractPreferences#flush():::Implements the flush method as per the specification in Preferences#flush():::flush2
AbstractPreferences#flushSpi():::This method is invoked with this node locked:::
AbstractPreferences#isRemoved():::Returns true iff this node (or an ancestor) has been removed with the #removeNode() method:::synchronized->return
AbstractPreferences#prefListeners():::Return this node's preference/node change listeners:::synchronized->return
AbstractPreferences#exportNode(OutputStream):::Implements the exportNode method as per the specification in Preferences#exportNode(OutputStream).:::XmlSupport->export
AbstractPreferences#exportSubtree(OutputStream):::Implements the exportSubtree method as per the specification in Preferences#exportSubtree(OutputStream).:::XmlSupport->export
Base64#byteArrayToBase64(byte[]):::Translates the specified byte array into a Base64 string as per Preferences.put(byte[]).:::return->byteArrayToBase64
Base64#byteArrayToAltBase64(byte[]):::Translates the specified byte array into an "alternate representation" Base64 string:::return->byteArrayToBase64
Base64#base64ToByteArray(String):::Translates the specified Base64 string (as per Preferences.get(byte[])) into a byte array.:::return->base64ToByteArray
Base64#altBase64ToByteArray(String):::Translates the specified "alternate representation" Base64 string into a byte array.:::return->base64ToByteArray
NodeChangeEvent#getParent():::Returns the parent of the node that was added or removed.:::return->getSource
NodeChangeEvent#getChild():::Returns the node that was added or removed.:::return
NodeChangeListener#childAdded(NodeChangeEvent):::This method gets called when a child node is added.:::
NodeChangeListener#childRemoved(NodeChangeEvent):::This method gets called when a child node is removed.:::
PreferenceChangeEvent#getNode():::Returns the preference node that emitted the event.:::return->getSource
PreferenceChangeEvent#getKey():::Returns the key of the preference that was changed.:::return
PreferenceChangeEvent#getNewValue():::Returns the new value for the preference.:::return
PreferenceChangeListener#preferenceChange(PreferenceChangeEvent):::This method gets called when a preference is added, removed or when its value is changed.:::
Preferences#userNodeForPackage(Class):::Returns the preference node from the calling user's preference tree that is associated (by convention) with the specified class's package:::return->userRoot->nodeName->node
Preferences#systemNodeForPackage(Class):::Returns the preference node from the system preference tree that is associated (by convention) with the specified class's package:::return->systemRoot->nodeName->node
Preferences#userRoot():::Returns the root preference node for the calling user.:::security->System->getSecurityManager->if->security->checkPermission->return->factory->userRoot
Preferences#systemRoot():::Returns the root preference node for the system.:::security->System->getSecurityManager->if->security->checkPermission->return->factory->systemRoot
Preferences#put(String, String):::Associates the specified value with the specified key in this preference node.:::
Preferences#get(String, String):::Returns the value associated with the specified key in this preference node:::
Preferences#remove(String):::Removes the value associated with the specified key in this preference node, if any:::
Preferences#clear():::Removes all of the preferences (key-value associations) in this preference node:::
Preferences#putInt(String, int):::Associates a string representing the specified int value with the specified key in this preference node:::
Preferences#getInt(String, int):::Returns the int value represented by the string associated with the specified key in this preference node:::
Preferences#putLong(String, long):::Associates a string representing the specified long value with the specified key in this preference node:::
Preferences#getLong(String, long):::Returns the long value represented by the string associated with the specified key in this preference node:::
Preferences#putBoolean(String, boolean):::Associates a string representing the specified boolean value with the specified key in this preference node:::
Preferences#getBoolean(String, boolean):::Returns the boolean value represented by the string associated with the specified key in this preference node:::
Preferences#putFloat(String, float):::Associates a string representing the specified float value with the specified key in this preference node:::
Preferences#getFloat(String, float):::Returns the float value represented by the string associated with the specified key in this preference node:::
Preferences#putDouble(String, double):::Associates a string representing the specified double value with the specified key in this preference node:::
Preferences#getDouble(String, double):::Returns the double value represented by the string associated with the specified key in this preference node:::
Preferences#putByteArray(String, byte[]):::Associates a string representing the specified byte array with the specified key in this preference node:::
Preferences#getByteArray(String, byte[]):::Returns the byte array value represented by the string associated with the specified key in this preference node:::
Preferences#keys():::Returns all of the keys that have an associated value in this preference node:::
Preferences#childrenNames():::Returns the names of the children of this preference node, relative to this node:::
Preferences#parent():::Returns the parent of this preference node, or null if this is the root.:::
Preferences#node(String):::Returns the named preference node in the same tree as this node, creating it and any of its ancestors if they do not already exist:::
Preferences#nodeExists(String):::Returns true if the named preference node exists in the same tree as this node:::
Preferences#removeNode():::Removes this preference node and all of its descendants, invalidating any preferences contained in the removed nodes:::
Preferences#name():::Returns this preference node's name, relative to its parent.:::
Preferences#absolutePath():::Returns this preference node's absolute path name.:::
Preferences#isUserNode():::Returns true if this preference node is in the user preference tree, false if it's in the system preference tree.:::
Preferences#toString():::Returns a string representation of this preferences node, as if computed by the expression:(this.isUserNode() ? "User" : "System") + " Preference Node: " + this.absolutePath().:::
Preferences#flush():::Forces any changes in the contents of this preference node and its descendants to the persistent store:::
Preferences#sync():::Ensures that future reads from this preference node and its descendants reflect any changes that were committed to the persistent store (from any VM) prior to the sync invocation:::
Preferences#addPreferenceChangeListener(PreferenceChangeListener):::Registers the specified listener to receive preference change events for this preference node:::
Preferences#removePreferenceChangeListener(PreferenceChangeListener):::Removes the specified preference change listener, so it no longer receives preference change events.:::
Preferences#addNodeChangeListener(NodeChangeListener):::Registers the specified listener to receive node change events for this node:::
Preferences#removeNodeChangeListener(NodeChangeListener):::Removes the specified NodeChangeListener, so it no longer receives change events.:::
Preferences#exportNode(OutputStream):::Emits on the specified output stream an XML document representing all of the preferences contained in this node (but not its descendants):::
Preferences#exportSubtree(OutputStream):::Emits an XML document representing all of the preferences contained in this node and all of its descendants:::
Preferences#importPreferences(InputStream):::Imports all of the preferences represented by the XML document on the specified input stream:::XmlSupport->importPreferences
PreferencesFactory#systemRoot():::Returns the system root preference node:::
PreferencesFactory#userRoot():::Returns the user root preference node corresponding to the calling user:::
WindowsPreferences#putSpi(String, String):::Implements AbstractPreferences putSpi() method:::nativeHandle->openKey->if->return->result->toWindowsName->toWindowsValueString->WindowsRegSetValueEx1->if->logger->toWindowsName->byteArrayToString->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->warning->closeKey
WindowsPreferences#getSpi(String):::Implements AbstractPreferences getSpi() method:::nativeHandle->openKey->if->return->resultObject->toWindowsName->WindowsRegQueryValueEx->if->closeKey->return->closeKey->return->toJavaValueString
WindowsPreferences#removeSpi(String):::Implements AbstractPreferences removeSpi() method:::nativeHandle->openKey->if->return->result->toWindowsName->WindowsRegDeleteValue->if->logger->windowsAbsolutePath->byteArrayToString->toWindowsName->Long->rootNativeHandle->toHexString->warning->closeKey
WindowsPreferences#keysSpi():::Implements AbstractPreferences keysSpi() method:::nativeHandle->openKey->if->throw->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->new->BackingStoreException->result->WindowsRegQueryInfoKey1->if->info->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->logger->warning->throw->new->BackingStoreException->maxValueNameLength->valuesNumber->if->closeKey->return->new->StringArr->valueNames->new->StringArr->for->i->closeKey->return
WindowsPreferences#childrenNamesSpi():::Implements AbstractPreferences childrenNamesSpi() method:::nativeHandle->openKey->if->throw->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->new->BackingStoreException->result->WindowsRegQueryInfoKey1->if->info->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->logger->warning->throw->new->BackingStoreException->maxKeyLength->subKeysNumber->if->closeKey->return->new->StringArr->subkeys->new->StringArr->children->new->StringArr->for->i->closeKey->return
WindowsPreferences#flush():::Implements Preferences flush() method:::if->isRemoved->parent->flush->return->if->throw->new->BackingStoreException->nativeHandle->openKey->if->throw->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->new->BackingStoreException->result->WindowsRegFlushKey1->if->info->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->logger->warning->throw->new->BackingStoreException->closeKey
WindowsPreferences#sync():::Implements Preferences sync() method:::if->isRemoved->throw->new->IllegalStateException->flush
WindowsPreferences#childSpi(String):::Implements AbstractPreferences childSpi() method:::return->new->WindowsPreferences
WindowsPreferences#removeNodeSpi():::Implements AbstractPreferences removeNodeSpi() method:::parentNativeHandle->parent->openKey->if->throw->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->new->BackingStoreException->result->name->toWindowsName->WindowsRegDeleteKey->if->info->windowsAbsolutePath->byteArrayToString->Long->rootNativeHandle->toHexString->logger->warning->throw->new->BackingStoreException->closeKey
WindowsPreferences#flushSpi():::Empty, never used implementation  of AbstractPreferences.flushSpi().:::
WindowsPreferences#syncSpi():::Empty, never used implementation  of AbstractPreferences.flushSpi().:::
WindowsPreferencesFactory#userRoot():::Returns WindowsPreferences.userRoot:::return->WindowsPreferences->getUserRoot
WindowsPreferencesFactory#systemRoot():::Returns WindowsPreferences.systemRoot:::return->WindowsPreferences->getSystemRoot
XmlSupport#export(OutputStream, Preferences, boolean):::Export the specified preferences node and, if subTree is true, all subnodes, to the specified output stream:::if->isRemoved->throw->new->IllegalStateException->doc->createPrefsDoc->preferences->doc->getDocumentElement->preferences->setAttribute->xmlRoot->preferences->doc->createElement->appendChild->xmlRoot->p->isUserNode->setAttribute->ancestors->new->ArrayList<>->for->kid->dad->kid->parent->kid->parent->e->for->i->ancestors->size->putPreferencesInXml->writeDoc
XmlSupport#importPreferences(InputStream):::Import preferences from the specified input stream, which is assumed to contain an XML document in the format described in the Preferences spec.:::try->doc->loadPrefsDoc->xmlVersion->doc->getDocumentElement->getAttribute->if->xmlVersion->compareTo->throw->new->InvalidPreferencesFormatException->xmlRoot->doc->getDocumentElement->getChildNodes->item->prefsRoot->xmlRoot->getAttribute->equals->Preferences->userRoot->Preferences->systemRoot->ImportSubtree->catch->throw->new->InvalidPreferencesFormatException->finally
XmlSupport#exportMap(OutputStream, Map):::Export the specified Map<String,String> to a map document on the specified OutputStream as per the prefs DTD:::doc->createPrefsDoc->xmlMap->doc->getDocumentElement->xmlMap->setAttribute->foreach->map->entrySet->xe->xmlMap->doc->createElement->appendChild->xe->e->getKey->setAttribute->xe->e->getValue->setAttribute->writeDoc
XmlSupport#importMap(InputStream, Map):::Import Map from the specified input stream, which is assumed to contain a map document as per the prefs DTD:::try->doc->loadPrefsDoc->xmlMap->doc->getDocumentElement->mapVersion->xmlMap->getAttribute->if->mapVersion->compareTo->throw->new->InvalidPreferencesFormatException->entries->xmlMap->getChildNodes->for->i->numEntries->entries->getLength->catch->throw->new->InvalidPreferencesFormatException->finally
