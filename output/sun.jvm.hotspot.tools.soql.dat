JSDB#main(String[])::: b main:::jsdb->new->JSDB->jsdb->execute
JSDB#run()::: b run:::engine->new->JSJavaScriptEngine->engine->startConsole
SOQL#main(String[])::: l main:::soql->new->SOQL->soql->execute
SOQL#run()::: l run:::SOQLEngine->getEngine->while->try->out->print->line->in->readLine->if->return->st->new->StringTokenizer->if->st->hasMoreTokens->cmd->st->nextToken->if->cmd->equals->handleSelect->else->if->cmd->equals->handleClasses->else->if->cmd->equals->handleClass->else->if->cmd->equals->handleObject->else->if->cmd->equals->out->println->return->else->if->cmd->equals->else->handleUnknown->catch->e->printStackTrace->return->finally
SOQL#handleSelect(String)::: l handle select:::buf->new->StringBuffer->tmp->while->out->print->try->in->readLine->catch->break->finally->if->tmp->equals->tmp->equals->break->buf->append->buf->append->buf->toString->try->soqlEngine->new->ObjectVisitor->executeQuery->catch->se->printStackTrace->finally
SOQL#handleClasses(String)::: l handle classes:::klasses->SystemDictionaryHelper->getAllInstanceKlasses->for->i
SOQL#handleClass(String)::: l handle class:::st->new->StringTokenizer->st->nextToken->if->st->hasMoreTokens->className->st->nextToken->klass->SystemDictionaryHelper->findInstanceKlass->if->out->println->else->base->klass->getSuper->if->out->println->out->print->out->base->getName->asString->replace->println->fields->klass->getFields->numFields->fields->length->cp->klass->getConstants->out->println->if->for->f->else->out->println->else->out->println
SOQL#getOopAtAddress(Address)::: l get oop at address:::oopHandle->addr->addOffsetToAsOopHandle->return->VM->getVM->getObjectHeap->newOop
SOQL#handleObject(String)::: l handle object:::st->new->StringTokenizer->st->nextToken->if->st->hasMoreTokens->addrStr->st->nextToken->addr->dbg->VM->getVM->getDebugger->try->dbg->parseAddress->catch->out->e->getMessage->println->return->finally->oop->try->getOopAtAddress->catch->out->e->getMessage->println->finally->if->oop->new->OopPrinter->iterate->else->out->println->else->out->println
SOQL#handleUnknown(String)::: l handle unknown:::out->println
