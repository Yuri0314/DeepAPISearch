ProcessArgumentMatcher#getExcludeStringFrom(Class)::: process argument matcher get exclude string from:::if->return->m->excludeClass->getModule->if->m->isNamed->return->m->getName->excludeClass->getName->return->excludeClass->getName
ProcessArgumentMatcher#check(VirtualMachineDescriptor, String, String)::: process argument matcher check:::mainClass->try->vmId->vmd->id->new->VmIdentifier->monitoredHost->MonitoredHost->getMonitoredHost->monitoredVm->monitoredHost->getMonitoredVm->MonitoredVmUtil->mainClass->monitoredHost->detach->catch->return->return->finally->if->mainClass->equals->return->if->mainClass->indexOf->return->return
ProcessArgumentMatcher#getSingleVMD(String)::: process argument matcher get single d:::vids->new->ArrayList<>->vmds->VirtualMachine->list->foreach->if->check->if->pid->vmd->id->equals->vids->add->return
ProcessArgumentMatcher#getVMDs(Class, String)::: process argument matcher get ds:::excludeCls->getExcludeStringFrom->vids->new->ArrayList<>->vmds->VirtualMachine->list->foreach->if->check->vids->add->return
ProcessArgumentMatcher#getVirtualMachineDescriptors(Class)::: process argument matcher get virtual machine descriptors:::if->return->getSingleVMD->else->return->getVMDs
ProcessArgumentMatcher#getVirtualMachineDescriptors()::: process argument matcher get virtual machine descriptors:::return->this->getVirtualMachineDescriptors
ProcessArgumentMatcher#getVirtualMachinePids(Class)::: process argument matcher get virtual machine pids:::if->return->List->of->else->return->getVMDs->stream->return->x->id->map->Collectors->toList->collect
ProcessArgumentMatcher#getVirtualMachinePids()::: process argument matcher get virtual machine pids:::return->this->getVirtualMachinePids
