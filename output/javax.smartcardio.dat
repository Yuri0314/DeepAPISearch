ATR#getBytes():::Returns a copy of the bytes in this ATR.:::return->atr->clone
ATR#getHistoricalBytes():::Returns a copy of the historical bytes in this ATR:::b->new->byteArr->System->arraycopy->return
ATR#toString():::Returns a string representation of this ATR.:::return
ATR#equals(Object):::Compares the specified object with this ATR for equality:::if->return->if->return->other->return->Arrays->equals
ATR#hashCode():::Returns the hash code value for this ATR.:::return->Arrays->hashCode
Card#getATR():::Returns the ATR of this card.:::
Card#getProtocol():::Returns the protocol in use for this card.:::
Card#getBasicChannel():::Returns the CardChannel for the basic logical channel:::
Card#openLogicalChannel():::Opens a new logical channel to the card and returns it:::
Card#beginExclusive():::Requests exclusive access to this card:::
Card#endExclusive():::Releases the exclusive access previously established using beginExclusive.:::
Card#transmitControlCommand(int, byte[]):::Transmits a control command to the terminal device:::
Card#disconnect(boolean):::Disconnects the connection with this card:::
CardChannel#getCard():::Returns the Card this channel is associated with.:::
CardChannel#getChannelNumber():::Returns the channel number of this CardChannel:::
CardChannel#transmit(CommandAPDU):::Transmits the specified command APDU to the Smart Card and returns the response APDU:::
CardChannel#transmit(ByteBuffer, ByteBuffer):::Transmits the command APDU stored in the command ByteBuffer and receives the response APDU in the response ByteBuffer:::
CardChannel#close():::Closes this CardChannel:::
CardPermission#getActions():::Returns the canonical string representation of the actions:::return
CardPermission#implies(Permission):::Checks if this CardPermission object implies the specified permission:::if->return->other->if->return->thisName->getName->if->thisName->equals->return->if->thisName->other->getName->equals->return->return
CardPermission#equals(Object):::Compares the specified object with this CardPermission for equality:::if->return->if->return->other->return->this->getName->other->getName->equals
CardPermission#hashCode():::Returns the hash code value for this CardPermission object.:::return->getName->hashCode
CardTerminal#getName():::Returns the unique name of this terminal.:::
CardTerminal#connect(String):::Establishes a connection to the card:::
CardTerminal#isCardPresent():::Returns whether a card is present in this terminal.:::
CardTerminal#waitForCardPresent(long):::Waits until a card is present in this terminal or the timeout expires:::
CardTerminal#waitForCardAbsent(long):::Waits until a card is absent in this terminal or the timeout expires:::
CardTerminals#list():::Returns an unmodifiable list of all available terminals.:::return->list
CardTerminals#list(State):::Returns an unmodifiable list of all terminals matching the specified state:::
CardTerminals#getTerminal(String):::Returns the terminal with the specified name or null if no such terminal exists.:::if->throw->new->NullPointerException->try->foreach->list->if->terminal->getName->equals->return->return->catch->return->finally
CardTerminals#waitForChange():::Waits for card insertion or removal in any of the terminals of this object:::waitForChange
CardTerminals#waitForChange(long):::Waits for card insertion or removal in any of the terminals of this object or until the timeout expires:::
CommandAPDU#getCLA():::Returns the value of the class byte CLA.:::return
CommandAPDU#getINS():::Returns the value of the instruction byte INS.:::return
CommandAPDU#getP1():::Returns the value of the parameter byte P1.:::return
CommandAPDU#getP2():::Returns the value of the parameter byte P2.:::return
CommandAPDU#getNc():::Returns the number of data bytes in the command body (Nc) or 0 if this APDU has no body:::return
CommandAPDU#getData():::Returns a copy of the data bytes in the command body:::data->new->byteArr->System->arraycopy->return
CommandAPDU#getNe():::Returns the maximum number of expected data bytes in a response APDU (Ne).:::return
CommandAPDU#getBytes():::Returns a copy of the bytes in this APDU.:::return->apdu->clone
CommandAPDU#toString():::Returns a string representation of this command APDU.:::return
CommandAPDU#equals(Object):::Compares the specified object with this command APDU for equality:::if->return->if->return->other->return->Arrays->equals
CommandAPDU#hashCode():::Returns the hash code value for this command APDU.:::return->Arrays->hashCode
ResponseAPDU#getNr():::Returns the number of data bytes in the response body (Nr) or 0 if this APDU has no body:::return
ResponseAPDU#getData():::Returns a copy of the data bytes in the response body:::data->new->byteArr->System->arraycopy->return
ResponseAPDU#getSW1():::Returns the value of the status byte SW1 as a value between 0 and 255.:::return
ResponseAPDU#getSW2():::Returns the value of the status byte SW2 as a value between 0 and 255.:::return
ResponseAPDU#getSW():::Returns the value of the status bytes SW1 and SW2 as a single status word SW:::return->getSW1->getSW2
ResponseAPDU#getBytes():::Returns a copy of the bytes in this APDU.:::return->apdu->clone
ResponseAPDU#toString():::Returns a string representation of this response APDU.:::return->Integer->getSW->toHexString
ResponseAPDU#equals(Object):::Compares the specified object with this response APDU for equality:::if->return->if->return->other->return->Arrays->equals
ResponseAPDU#hashCode():::Returns the hash code value for this response APDU.:::return->Arrays->hashCode
TerminalFactory#getDefaultType():::Get the default TerminalFactory type:::return
TerminalFactory#getDefault():::Returns the default TerminalFactory instance:::return
TerminalFactory#getInstance(String, Object):::Returns a TerminalFactory of the specified type that is initialized with the specified parameters:::instance->GetInstance->getInstance->return->new->TerminalFactory
TerminalFactory#getInstance(String, Object, String):::Returns a TerminalFactory of the specified type that is initialized with the specified parameters:::instance->GetInstance->getInstance->return->new->TerminalFactory
TerminalFactory#getInstance(String, Object, Provider):::Returns a TerminalFactory of the specified type that is initialized with the specified parameters:::instance->GetInstance->getInstance->return->new->TerminalFactory
TerminalFactory#getProvider():::Returns the provider of this TerminalFactory.:::return
TerminalFactory#getType():::Returns the type of this TerminalFactory:::return
TerminalFactory#terminals():::Returns a new CardTerminals object encapsulating the terminals supported by this factory:::return->spi->engineTerminals
TerminalFactory#toString():::Returns a string representation of this TerminalFactory.:::return->provider->getName
TerminalFactorySpi#engineTerminals():::Returns the CardTerminals created by this factory.:::
