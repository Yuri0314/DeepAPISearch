sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#getVmIdentifier()->VmIdentifier::: abstract monitored vm get vm identifier
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#findByName(String)->Monitor::: abstract monitored vm find by name
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#findByPattern(String)->List::: abstract monitored vm find by pattern
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#detach()->void::: abstract monitored vm detach
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#setInterval(int)->void::: abstract monitored vm set interval
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#getInterval()->int::: abstract monitored vm get interval
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#setLastException(Exception)->void::: abstract monitored vm set last exception
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#getLastException()->Exception::: abstract monitored vm get last exception
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#clearLastException()->void::: abstract monitored vm clear last exception
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#isErrored()->boolean::: abstract monitored vm is errored
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#getMonitorStatus()->MonitorStatus:::Get a list of the inserted and removed monitors since last called.
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#addVmListener(VmListener)->void::: abstract monitored vm add vm listener
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#removeVmListener(VmListener)->void::: abstract monitored vm remove vm listener
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#getBytes()->byte[]::: abstract monitored vm get bytes
sun.jvmstat.perfdata.monitor.AbstractMonitoredVm#getCapacity()->int::: abstract monitored vm get capacity
sun.jvmstat.perfdata.monitor.AbstractPerfDataBuffer#getLocalVmId()->int:::Get the Local Java Virtual Machine Identifier, or lvmid for the target JVM associated with this instrumentation buffer.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBuffer#getBytes()->byte[]:::Get a copy of the raw instrumentation data
sun.jvmstat.perfdata.monitor.AbstractPerfDataBuffer#getCapacity()->int:::Get the capacity of the instrumentation buffer.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBuffer#findByName(String)->Monitor:::Find a named Instrumentation object
sun.jvmstat.perfdata.monitor.AbstractPerfDataBuffer#findByPattern(String)->List:::Find all Instrumentation objects with names matching the given pattern
sun.jvmstat.perfdata.monitor.AbstractPerfDataBuffer#getMonitorStatus()->MonitorStatus:::Get a list of the inserted and removed monitors since last called.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBuffer#getByteBuffer()->ByteBuffer:::Get the ByteBuffer containing the instrumentation data.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBuffer#createPerfDataBuffer(ByteBuffer, int)->void:::Create the perfdata instrumentation buffer for the given lvmid using the given ByteBuffer object as the source of the instrumentation data
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getMagic()->int:::Get the magic number.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getByteOrder()->ByteOrder:::Get the byte order.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getMajorVersion()->int:::Get the major version.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getMinorVersion()->int:::Get the minor version.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#isAccessible()->boolean:::Get the accessible flag
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#supportsAccessible()->boolean:::Test if the accessible flag is supported by this version of the PerfDataBufferPrologue
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getSize()->int:::Get the size of the header portion of the instrumentation buffer.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#majorVersionBuffer()->IntBuffer:::Return an IntBuffer that accesses the major version number
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#minorVersionBuffer()->IntBuffer:::Return an IntBuffer that accesses the minor version number
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getMagic(ByteBuffer)->int:::Get the magic number from the given byteBuffer.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getMajorVersion(ByteBuffer)->int:::Get the major version number from the given ByteBuffer.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getMinorVersion(ByteBuffer)->int:::Get the minor version number from the given ByteBuffer.
sun.jvmstat.perfdata.monitor.AbstractPerfDataBufferPrologue#getByteOrder(ByteBuffer)->ByteOrder:::Get the byte order for the given ByteBuffer.
sun.jvmstat.perfdata.monitor.AliasFileParser#parse(Map>)->void:::method to parse the given input file.
sun.jvmstat.perfdata.monitor.CountedTimerTask#executionCount()->long::: counted timer task execution count
sun.jvmstat.perfdata.monitor.CountedTimerTask#run()->void::: counted timer task run
sun.jvmstat.perfdata.monitor.CountedTimerTaskUtils#reschedule(Timer, CountedTimerTask, CountedTimerTask, int, int)->void:::Reschedule a CountedTimeTask at a different interval
sun.jvmstat.perfdata.monitor.MonitorStatus#getInserted()->List:::Get the list of Monitors inserted since the last query.
sun.jvmstat.perfdata.monitor.MonitorStatus#getRemoved()->List:::Get the list of Monitors removed since the last query.
sun.jvmstat.perfdata.monitor.PerfByteArrayMonitor#getValue()->Object::: The object returned contains a byte[] with a copy of the current elements of the ByteArrayInstrument.
sun.jvmstat.perfdata.monitor.PerfByteArrayMonitor#byteArrayValue()->byte[]:::Get a copy of the elements of the byte array instrument.
sun.jvmstat.perfdata.monitor.PerfByteArrayMonitor#byteAt(int)->byte:::Get the current value of an element of the byte array instrument.
sun.jvmstat.perfdata.monitor.PerfByteArrayMonitor#getMaximumLength()->int:::Get the maximum length of the byte array for this byte array instrument.
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#getLocalVmId()->int:::Get the Local Java Virtual Machine Identifier, or lvmid for the target JVM associated with this instrumentation buffer.
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#getBytes()->byte[]:::Get a copy of the raw instrumentation data
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#getCapacity()->int:::Get the capacity of the instrumentation buffer.
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#getByteBuffer()->ByteBuffer:::Get the ByteBuffer containing the instrumentation data.
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#findByAlias(String)->Monitor:::Find the Monitor object for the named counter by using one of its aliases.
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#findByName(String)->Monitor:::Find a named Instrumentation object
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#findByPattern(String)->List:::Find all Instrumentation objects with names matching the given pattern
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#getMonitorStatus()->MonitorStatus:::Get a list of the inserted and removed monitors since last called.
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#getMonitorStatus(Map)->MonitorStatus:::get the list of inserted and removed monitors since last called.
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#buildMonitorMap(Map)->void:::build the map of Monitor objects.
sun.jvmstat.perfdata.monitor.PerfDataBufferImpl#getNewMonitors(Map)->void:::get the new Monitor objects from the Map of Monitor objects.
sun.jvmstat.perfdata.monitor.PerfIntegerMonitor#getValue()->Object::: The object returned contains an Integer object containing the current value of the IntegerInstrument.
sun.jvmstat.perfdata.monitor.PerfIntegerMonitor#intValue()->int:::Return the current value of the IntegerInstrument as an int.
sun.jvmstat.perfdata.monitor.PerfLongMonitor#getValue()->Object::: The object returned contains a Long object containing the current value of the LongInstrument.
sun.jvmstat.perfdata.monitor.PerfLongMonitor#longValue()->long:::Return the current value of the LongInstrument as an long.
sun.jvmstat.perfdata.monitor.PerfStringConstantMonitor#getValue()->Object::: perf string constant monitor get value
sun.jvmstat.perfdata.monitor.PerfStringConstantMonitor#stringValue()->String::: perf string constant monitor string value
sun.jvmstat.perfdata.monitor.PerfStringMonitor#getValue()->Object::: The object returned contains a String with a copy of the current value of the StringInstrument.
sun.jvmstat.perfdata.monitor.PerfStringMonitor#stringValue()->String:::Return the current value of the StringInstrument as a String.
sun.jvmstat.perfdata.monitor.SyntaxException#getMessage()->String::: syntax exception get message
