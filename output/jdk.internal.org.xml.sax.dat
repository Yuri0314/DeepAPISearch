Attributes#getLength():::Return the number of attributes in the list:::
Attributes#getURI(int):::Look up an attribute's Namespace URI by index.:::
Attributes#getLocalName(int):::Look up an attribute's local name by index.:::
Attributes#getQName(int):::Look up an attribute's XML qualified (prefixed) name by index.:::
Attributes#getType(int):::Look up an attribute's type by index:::
Attributes#getValue(int):::Look up an attribute's value by index:::
Attributes#getIndex(String, String):::Look up the index of an attribute by Namespace name.:::
Attributes#getIndex(String):::Look up the index of an attribute by XML qualified (prefixed) name.:::
Attributes#getType(String, String):::Look up an attribute's type by Namespace name:::
Attributes#getType(String):::Look up an attribute's type by XML qualified (prefixed) name:::
Attributes#getValue(String, String):::Look up an attribute's value by Namespace name:::
Attributes#getValue(String):::Look up an attribute's value by XML qualified (prefixed) name:::
ContentHandler#setDocumentLocator(Locator):::Receive an object for locating the origin of SAX document events:::
ContentHandler#startDocument():::Receive notification of the beginning of a document:::
ContentHandler#endDocument():::Receive notification of the end of a document:::
ContentHandler#startPrefixMapping(String, String):::Begin the scope of a prefix-URI Namespace mapping:::
ContentHandler#endPrefixMapping(String):::End the scope of a prefix-URI mapping:::
ContentHandler#startElement(String, String, String, Attributes):::Receive notification of the beginning of an element:::
ContentHandler#endElement(String, String, String):::Receive notification of the end of an element:::
ContentHandler#characters(char[], int, int):::Receive notification of character data:::
ContentHandler#ignorableWhitespace(char[], int, int):::Receive notification of ignorable whitespace in element content:::
ContentHandler#processingInstruction(String, String):::Receive notification of a processing instruction:::
ContentHandler#skippedEntity(String):::Receive notification of a skipped entity:::
DTDHandler#notationDecl(String, String, String):::Receive notification of a notation declaration event:::
DTDHandler#unparsedEntityDecl(String, String, String, String):::Receive notification of an unparsed entity declaration event:::
DTDHandler#startDTD(String, String, String):::Receive notification of the start of DTD declarations:::
DTDHandler#startInternalSub():::Receive notification of the start of DTD internal subset.:::
EntityResolver#resolveEntity(String, String):::Allow the application to resolve external entities:::
ErrorHandler#warning(SAXParseException):::Receive notification of a warning:::
ErrorHandler#error(SAXParseException):::Receive notification of a recoverable error:::
ErrorHandler#fatalError(SAXParseException):::Receive notification of a non-recoverable error:::
InputSource#setPublicId(String):::Set the public identifier for this input source:::
InputSource#getPublicId():::Get the public identifier for this input source.:::return
InputSource#setSystemId(String):::Set the system identifier for this input source:::
InputSource#getSystemId():::Get the system identifier for this input source:::return
InputSource#setByteStream(InputStream):::Set the byte stream for this input source:::
InputSource#getByteStream():::Get the byte stream for this input source:::return
InputSource#setEncoding(String):::Set the character encoding, if known:::
InputSource#getEncoding():::Get the character encoding for a byte stream or URI:::return
InputSource#setCharacterStream(Reader):::Set the character stream for this input source:::
InputSource#getCharacterStream():::Get the character stream for this input source.:::return
Locator#getPublicId():::Return the public identifier for the current document event:::
Locator#getSystemId():::Return the system identifier for the current document event:::
Locator#getLineNumber():::Return the line number where the current document event ends:::
Locator#getColumnNumber():::Return the column number where the current document event ends:::
SAXException#getMessage():::Return a detail message for this exception:::message->super->getMessage->cause->super->getCause->if->return->cause->getMessage->else->return
SAXException#getException():::Return the embedded exception, if any.:::return->getExceptionInternal
SAXException#getCause():::Return the cause of the exception:::return->super->getCause
SAXException#toString():::Override toString to pick up any embedded exception.:::exception->super->getCause->if->return->super->toString->exception->toString->else->return->super->toString
SAXParseException#getPublicId():::Get the public identifier of the entity where the exception occurred.:::return
SAXParseException#getSystemId():::Get the system identifier of the entity where the exception occurred:::return
SAXParseException#getLineNumber():::The line number of the end of the text where the exception occurred:::return
SAXParseException#getColumnNumber():::The column number of the end of the text where the exception occurred:::return
SAXParseException#toString():::Override toString to provide more detailed error message.:::buf->getClass->getName->new->StringBuilder->message->getLocalizedMessage->if->buf->append->append->if->buf->append->append->if->buf->append->append->if->buf->append->append->if->buf->append->append->return->buf->toString
XMLReader#getFeature(String):::Look up the value of a feature flag:::
XMLReader#setFeature(String, boolean):::Set the value of a feature flag:::
XMLReader#getProperty(String):::Look up the value of a property:::
XMLReader#setProperty(String, Object):::Set the value of a property:::
XMLReader#setEntityResolver(EntityResolver):::Allow an application to register an entity resolver:::
XMLReader#getEntityResolver():::Return the current entity resolver.:::
XMLReader#setDTDHandler(DTDHandler):::Allow an application to register a DTD event handler:::
XMLReader#getDTDHandler():::Return the current DTD handler.:::
XMLReader#setContentHandler(ContentHandler):::Allow an application to register a content event handler:::
XMLReader#getContentHandler():::Return the current content handler.:::
XMLReader#setErrorHandler(ErrorHandler):::Allow an application to register an error event handler:::
XMLReader#getErrorHandler():::Return the current error handler.:::
XMLReader#parse(InputSource):::Parse an XML document:::
XMLReader#parse(String):::Parse an XML document from a system identifier (URI):::
