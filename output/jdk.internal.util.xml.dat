PropertiesDefaultHandler#load(Properties, InputStream)::: properties default handler load:::try->parser->new->SAXParserImpl->parser->parse->catch->throw->new->InvalidPropertiesFormatException->finally
PropertiesDefaultHandler#store(Properties, OutputStream, String, Charset)::: properties default handler store:::try->writer->new->XMLStreamWriterImpl->writer->writeStartDocument->writer->writeDTD->writer->writeStartElement->if->comment->length->writer->writeStartElement->writer->writeCharacters->writer->writeEndElement->synchronized->foreach->props->entrySet->k->e->getKey->v->e->getValue->if->writer->writeStartElement->writer->writeAttribute->writer->writeCharacters->writer->writeEndElement->writer->writeEndElement->writer->writeEndDocument->writer->flush->catch->if->e->getCause->throw->e->getCause->throw->new->IOException->finally
PropertiesDefaultHandler#startElement(String, String, String, Attributes)::: properties default handler start element:::if->if->ALLOWED_ELEMENTS->contains->new->SAXParseException->fatalError->else->if->new->SAXParseException->fatalError->if->rootElm->equals->new->SAXParseException->fatalError->if->qName->equals->attributes->getValue->if->new->SAXParseException->fatalError->else->if->qName->equals->if->new->SAXParseException->fatalError
PropertiesDefaultHandler#characters(char[], int, int)::: properties default handler characters:::if->buf->append
PropertiesDefaultHandler#endElement(String, String, String)::: properties default handler end element:::if->ALLOWED_ELEMENTS->contains->ELEMENT_ROOT->equals->new->SAXParseException->fatalError->if->properties->buf->toString->setProperty->buf->buf->length->delete
PropertiesDefaultHandler#resolveEntity(String, String)::: properties default handler resolve entity:::if->sysid->equals->return->throw->new->SAXException
PropertiesDefaultHandler#error(SAXParseException)::: properties default handler error:::throw
PropertiesDefaultHandler#fatalError(SAXParseException)::: properties default handler fatal error:::throw
PropertiesDefaultHandler#warning(SAXParseException)::: properties default handler warning:::throw
PropertiesDefaultHandler#startDTD(String, String, String)::: properties default handler start d:::if->ELEMENT_ROOT->equals->PROPS_DTD_URI->equals->new->SAXParseException->fatalError
PropertiesDefaultHandler#startInternalSub()::: properties default handler start internal sub:::new->SAXParseException->fatalError
SAXParser#parse(InputStream, DefaultHandler):::Parse the content of the given java.io.InputStream instance as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->input->new->InputSource->this->parse
SAXParser#parse(String, DefaultHandler):::Parse the content described by the giving Uniform Resource Identifier (URI) as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->input->new->InputSource->this->parse
SAXParser#parse(File, DefaultHandler):::Parse the content of the file specified as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->input->f->toURI->toASCIIString->new->InputSource->this->parse
SAXParser#parse(InputSource, DefaultHandler):::Parse the content given org.xml.sax.InputSource as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->reader->this->getXMLReader->if->reader->setContentHandler->reader->setEntityResolver->reader->setErrorHandler->reader->setDTDHandler->reader->parse
SAXParser#getXMLReader():::Returns the org.xml.sax.XMLReader that is encapsulated by the implementation of this class.:::
SAXParser#isNamespaceAware():::Indicates whether or not this parser is configured to understand namespaces.:::
SAXParser#isValidating():::Indicates whether or not this parser is configured to validate XML documents.:::
SAXParser#isXIncludeAware():::Get the XInclude processing mode for this parser.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
XMLStreamException#getNestedException():::Gets the nested exception.:::return
XMLStreamWriter#writeStartElement(String):::Writes a start tag to the output:::
XMLStreamWriter#writeEmptyElement(String):::Writes an empty element tag to the output:::
XMLStreamWriter#writeEndElement():::Writes an end tag to the output relying on the internal state of the writer to determine the prefix and local name of the event.:::
XMLStreamWriter#writeEndDocument():::Closes any start tags and writes corresponding end tags.:::
XMLStreamWriter#close():::Close this writer and free any resources associated with the writer:::
XMLStreamWriter#flush():::Write any cached data to the underlying output mechanism.:::
XMLStreamWriter#writeAttribute(String, String):::Writes an attribute to the output stream without a prefix.:::
XMLStreamWriter#writeCData(String):::Writes a CData section:::
XMLStreamWriter#writeDTD(String):::Write a DTD section:::
XMLStreamWriter#writeStartDocument():::Write the XML Declaration:::
XMLStreamWriter#writeStartDocument(String):::Write the XML Declaration:::
XMLStreamWriter#writeStartDocument(String, String):::Write the XML Declaration:::
XMLStreamWriter#writeCharacters(String):::Write text to the output:::
XMLStreamWriter#writeCharacters(char[], int, int):::Write text to the output:::
