AESCryptSubstitutions#decryptBlockWithOriginalKey(Object, byte[], int, byte[], int):::Variation for platforms (e.g:::crypt
AESCryptSubstitutions#checkArgs(byte[], int, byte[], int):::Perform null and array bounds checks for arguments to a cipher operation.:::if->probability->DeoptimizeNode->deopt
CipherBlockChainingSubstitutions#decryptWithOriginalKey(Object, byte[], int, int, byte[], int):::Variation for platforms (e.g:::realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->embeddedCipher->RawLoadNode->embeddedCipherOffset->LocationIdentity->any->load->if->aesCryptType->doInstanceof->aesCipher->aesCryptType->piCastNonNull->crypt->return->else->return->decryptWithOriginalKey
ClassGetHubNode#mayNullCheckSkipConversion():::There is more than one java.lang.Class value that has a NULL hub.:::return
CRC32Substitutions#update(int, int):::Removed in 9.:::crcTableRawAddress->WordFactory->GraalHotSpotVMConfigNode->crcTableAddress->pointer->c->index->offset->result->crcTableRawAddress->readInt->return
CRC32Substitutions#updateBytes(int, byte[], int, int):::Removed in 9.:::bufAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->return->updateBytesCRC32
CRC32Substitutions#updateByteBuffer(int, long, int, int):::Removed in 9.:::bufAddr->WordFactory->unsigned->add->return->updateBytesCRC32
HotSpotReplacementsUtil.HotSpotOptimizingLocationIdentity#foldIndirection(ValueNode, ValueNode, LocationIdentity):::Fold reads that convert from Class -> Hub -> Class or vice versa.:::if->access->if->access->getLocationIdentity->equals->address->access->getAddress->if->offset->return->offset->getBase->return
HotSpotReplacementsUtil#clearPendingException(Word):::Clears the pending exception for the given thread.:::result->thread->threadPendingExceptionOffset->readObject->thread->threadPendingExceptionOffset->writeObject->return
HotSpotReplacementsUtil#getPendingException(Word):::Gets the pending exception for the given thread.:::return->thread->threadPendingExceptionOffset->readObject
HotSpotReplacementsUtil#klassIsArray(KlassPointer):::Checks if class klass is an array:::layoutHelper->readLayoutHelper->layoutHelperNeutralValue->klassLayoutHelperNeutralValue->return
HotSpotReplacementsUtil#biasedLockMaskInPlace(GraalHotSpotVMConfig):::Mask for a biasable, locked or unlocked mark word:::return
HotSpotReplacementsUtil#biasedLockPattern(GraalHotSpotVMConfig):::Pattern for a biasable, unlocked mark word:::return
HotSpotReplacementsUtil#objectAlignment(GraalHotSpotVMConfig):::Idiom for making GraalHotSpotVMConfig a constant.:::return
HotSpotReplacementsUtil#arrayAllocationSize(int, int, int):::Calls #arrayAllocationSize(int, int, int, int) using an injected VM configuration object.:::return->objectAlignment->arrayAllocationSize
HotSpotReplacementsUtil#arrayAllocationSize(int, int, int, int):::Computes the size of the memory chunk allocated for an array:::size->mask->return
HotSpotReplacementsUtil#loadHub(Object):::Loads the hub of an object (without null checking it first).:::return->loadHubIntrinsic
HotSpotReplacementsUtil#registerAsWord(Register):::Reads the value of a given register.:::return->registerAsWord
HubGetClassNode#isLossless():::Any concrete Klass* has a corresponding java.lang.Class.:::return
InstanceOfSnippets#instanceofWithProfile(Object, KlassPointer[], boolean[], Object, Object, boolean, Counters):::A test against a set of hints derived from a profile with 100% precise coverage of seen types:::if->probability->inc->if->DeoptimizeNode->deopt->return->anchorNode->SnippetAnchorNode->anchor->objectHub->PiNode->piCastNonNull->loadHubIntrinsic->ExplodeLoopNode->explodeLoop->for->i->DeoptimizeNode->deopt->return
InstanceOfSnippets#instanceofExact(Object, KlassPointer, Object, Object, Counters):::A test against a final type.:::if->probability->inc->return->anchorNode->SnippetAnchorNode->anchor->objectHub->PiNode->piCastNonNull->loadHubIntrinsic->if->objectHub->notEqual->probability->inc->return->inc->return
InstanceOfSnippets#instanceofPrimary(KlassPointer, Object, int, Object, Object, Counters):::A test against a primary type.:::if->probability->inc->return->anchorNode->SnippetAnchorNode->anchor->objectHub->PiNode->piCastNonNull->loadHubIntrinsic->if->objectHub->readKlassPointer->notEqual->probability->inc->return->inc->return
InstanceOfSnippets#instanceofSecondary(KlassPointer, Object, KlassPointer[], boolean[], Object, Object, Counters):::A test against a restricted secondary type type.:::if->probability->inc->return->anchorNode->SnippetAnchorNode->anchor->objectHub->PiNode->piCastNonNull->loadHubIntrinsic->ExplodeLoopNode->explodeLoop->for->i->inc->if->checkSecondarySubType->return->return
InstanceOfSnippets#instanceofDynamic(KlassPointer, Object, Object, Object, boolean, Counters):::Type test used when the type being tested against is not known at compile time.:::if->probability->inc->if->return->else->return->anchorNode->SnippetAnchorNode->anchor->nonNullObjectHub->PiNode->piCastNonNull->loadHubIntrinsic->if->BranchProbabilityNode->hub->isNull->probability->if->checkUnknownSubType->return->return
Log#printf(String, long):::Prints a formatted string to the log stream.:::cstring->printf
MonitorSnippets#monitorenterStub(Object, int, boolean):::Calls straight out to the monitorenter stub.:::verifyOop->incCounter->if->DeoptimizeNode->deopt->lock->beginLockScope->traceObject->monitorenterStubC
MonitorSnippets#monitorexitStub(Object, int, boolean):::Calls straight out to the monitorexit stub.:::verifyOop->traceObject->lock->CurrentLockNode->currentLock->monitorexitStubC->endLockScope->decCounter
NewObjectSnippets#useNullAllocationStubs(GraalHotSpotVMConfig):::When allocating on the slow path, determines whether to use a version of the runtime call that returns null on a failed allocation instead of raising an OutOfMemoryError.:::return->config->areNullAllocationStubsAvailable
NewObjectSnippets.Templates#lower(NewInstanceNode, HotSpotRegistersProvider, LoweringTool):::Lowers a NewInstanceNode.:::graph->newInstanceNode->graph->type->newInstanceNode->instanceClass->hub->ConstantNode->KlassPointerStamp->klassNonNull->type->klass->providers->getMetaAccess->forConstant->size->instanceSize->localOptions->graph->getOptions->snippet->GeneratePIC->getValue->args->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->addConst->args->add->args->type->prototypeMarkWord->add->args->newInstanceNode->fillContents->addConst->args->newInstanceNode->emitMemoryBarrier->addConst->args->registers->getThreadRegister->addConst->args->addConst->args->ProfileAllocations->getValue->type->toJavaName->addConst->args->addConst->template->template->graph->getDebug->log->template->providers->getMetaAccess->instantiate
NewObjectSnippets.Templates#lower(NewArrayNode, HotSpotRegistersProvider, LoweringTool):::Lowers a NewArrayNode.:::graph->newArrayNode->graph->elementType->newArrayNode->elementType->arrayType->elementType->getArrayClass->elementKind->elementType->getJavaKind->hub->ConstantNode->KlassPointerStamp->klassNonNull->arrayType->klass->providers->getMetaAccess->forConstant->headerSize->tool->getMetaAccess->getArrayBaseOffset->log2ElementSize->CodeUtil->tool->getMetaAccess->getArrayIndexScale->log2->localOptions->graph->getOptions->snippet->if->GeneratePIC->getValue->if->elementType->isPrimitive->else->else->args->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->add->length->newArrayNode->length->args->length->isAlive->graph->addOrUniqueWithInputs->add->args->arrayType->prototypeMarkWord->add->args->addConst->args->addConst->args->newArrayNode->fillContents->addConst->args->newArrayNode->emitMemoryBarrier->addConst->args->registers->getThreadRegister->addConst->args->length->isConstant->addConst->args->ProfileAllocations->getValue->arrayType->toJavaName->addConst->args->tool->getLowerer->supportBulkZeroing->addConst->args->addConst->template->template->graph->getDebug->log->template->providers->getMetaAccess->instantiate
ThreadSubstitutions#isInterrupted(Thread, boolean):::hidden in 9.:::javaThread->CurrentJavaThreadNode->get->thread->javaThread->threadObjectOffset->readObject->if->osThread->javaThread->osThreadOffset->readWord->interrupted->osThread->osThreadInterruptedOffset->any->readInt->if->return->return->isInterrupted
