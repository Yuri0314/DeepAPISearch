org.graalvm.compiler.hotspot.replacements.HotspotSnippetsOptions_OptionDescriptors#get(String)->OptionDescriptor::: hotspot snippets options_ option descriptors get
org.graalvm.compiler.hotspot.replacements.HotspotSnippetsOptions_OptionDescriptors#iterator()->Iterator::: hotspot snippets options_ option descriptors iterator
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_decryptBlockStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ crypt substitutions_decrypt block stub execute
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_decryptBlockStub#getSource()->Class::: plugin_ crypt substitutions_decrypt block stub get source
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_decryptBlockWithOriginalKeyStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ crypt substitutions_decrypt block with original key stub execute
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_decryptBlockWithOriginalKeyStub#getSource()->Class::: plugin_ crypt substitutions_decrypt block with original key stub get source
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_encryptBlockStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ crypt substitutions_encrypt block stub execute
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_encryptBlockStub#getSource()->Class::: plugin_ crypt substitutions_encrypt block stub get source
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_kOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ crypt substitutions_k offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_kOffset#getSource()->Class::: plugin_ crypt substitutions_k offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_lastKeyOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ crypt substitutions_last key offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_AESCryptSubstitutions_lastKeyOffset#getSource()->Class::: plugin_ crypt substitutions_last key offset get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_AESCryptSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ crypt substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_AssertionSnippets_vmMessageC#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ assertion snippets_vm message c execute
org.graalvm.compiler.hotspot.replacements.Plugin_AssertionSnippets_vmMessageC#getSource()->Class::: plugin_ assertion snippets_vm message c get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_AssertionSnippets#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ assertion snippets register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_aesCryptType#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ cipher block chaining substitutions_aes crypt type execute
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_aesCryptType#getSource()->Class::: plugin_ cipher block chaining substitutions_aes crypt type get source
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_decryptAESCryptStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ cipher block chaining substitutions_decrypt crypt stub execute
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_decryptAESCryptStub#getSource()->Class::: plugin_ cipher block chaining substitutions_decrypt crypt stub get source
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_decryptAESCryptWithOriginalKeyStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ cipher block chaining substitutions_decrypt crypt with original key stub execute
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_decryptAESCryptWithOriginalKeyStub#getSource()->Class::: plugin_ cipher block chaining substitutions_decrypt crypt with original key stub get source
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_embeddedCipherOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ cipher block chaining substitutions_embedded cipher offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_embeddedCipherOffset#getSource()->Class::: plugin_ cipher block chaining substitutions_embedded cipher offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_encryptAESCryptStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ cipher block chaining substitutions_encrypt crypt stub execute
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_encryptAESCryptStub#getSource()->Class::: plugin_ cipher block chaining substitutions_encrypt crypt stub get source
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_rOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ cipher block chaining substitutions_r offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_CipherBlockChainingSubstitutions_rOffset#getSource()->Class::: plugin_ cipher block chaining substitutions_r offset get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_CipherBlockChainingSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ cipher block chaining substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_ClassGetHubNode_piCastNonNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ class get hub node_pi cast non null execute
org.graalvm.compiler.hotspot.replacements.Plugin_ClassGetHubNode_piCastNonNull#getSource()->Class::: plugin_ class get hub node_pi cast non null get source
org.graalvm.compiler.hotspot.replacements.Plugin_ClassGetHubNode_readClass#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ class get hub node_read class execute
org.graalvm.compiler.hotspot.replacements.Plugin_ClassGetHubNode_readClass#getSource()->Class::: plugin_ class get hub node_read class get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_ClassGetHubNode#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ class get hub node register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_CounterModeSubstitutions_counterOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ counter mode substitutions_counter offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_CounterModeSubstitutions_counterOffset#getSource()->Class::: plugin_ counter mode substitutions_counter offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_CounterModeSubstitutions_encCounterOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ counter mode substitutions_enc counter offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_CounterModeSubstitutions_encCounterOffset#getSource()->Class::: plugin_ counter mode substitutions_enc counter offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_CounterModeSubstitutions_usedOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ counter mode substitutions_used offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_CounterModeSubstitutions_usedOffset#getSource()->Class::: plugin_ counter mode substitutions_used offset get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_CounterModeSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ counter mode substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_CRC32CSubstitutions_updateBytesCRC32#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ c32 substitutions_update bytes c32 execute
org.graalvm.compiler.hotspot.replacements.Plugin_CRC32CSubstitutions_updateBytesCRC32#getSource()->Class::: plugin_ c32 substitutions_update bytes c32 get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_CRC32CSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ c32 substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_CRC32Substitutions_updateBytesCRC32#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ c32 substitutions_update bytes c32 execute
org.graalvm.compiler.hotspot.replacements.Plugin_CRC32Substitutions_updateBytesCRC32#getSource()->Class::: plugin_ c32 substitutions_update bytes c32 get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_CRC32Substitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ c32 substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_DigestBaseSubstitutions_useSHA1Intrinsics#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ digest base substitutions_use a1 intrinsics execute
org.graalvm.compiler.hotspot.replacements.Plugin_DigestBaseSubstitutions_useSHA1Intrinsics#getSource()->Class::: plugin_ digest base substitutions_use a1 intrinsics get source
org.graalvm.compiler.hotspot.replacements.Plugin_DigestBaseSubstitutions_useSHA256Intrinsics#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ digest base substitutions_use a256 intrinsics execute
org.graalvm.compiler.hotspot.replacements.Plugin_DigestBaseSubstitutions_useSHA256Intrinsics#getSource()->Class::: plugin_ digest base substitutions_use a256 intrinsics get source
org.graalvm.compiler.hotspot.replacements.Plugin_DigestBaseSubstitutions_useSHA512Intrinsics#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ digest base substitutions_use a512 intrinsics execute
org.graalvm.compiler.hotspot.replacements.Plugin_DigestBaseSubstitutions_useSHA512Intrinsics#getSource()->Class::: plugin_ digest base substitutions_use a512 intrinsics get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_DigestBaseSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ digest base substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotClassSubstitutions_getObjectType#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot class substitutions_get object type execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotClassSubstitutions_getObjectType#getSource()->Class::: plugin_ hot spot class substitutions_get object type get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_HotSpotClassSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ hot spot class substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_ageMaskInPlace#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_age mask in place execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_ageMaskInPlace#getSource()->Class::: plugin_ hot spot replacements util_age mask in place get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocateInstancePrefetchLines#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_allocate instance prefetch lines execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocateInstancePrefetchLines#getSource()->Class::: plugin_ hot spot replacements util_allocate instance prefetch lines get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocatePrefetchDistance#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_allocate prefetch distance execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocatePrefetchDistance#getSource()->Class::: plugin_ hot spot replacements util_allocate prefetch distance get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocatePrefetchLines#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_allocate prefetch lines execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocatePrefetchLines#getSource()->Class::: plugin_ hot spot replacements util_allocate prefetch lines get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocatePrefetchStepSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_allocate prefetch step size execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocatePrefetchStepSize#getSource()->Class::: plugin_ hot spot replacements util_allocate prefetch step size get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocatePrefetchStyle#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_allocate prefetch style execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_allocatePrefetchStyle#getSource()->Class::: plugin_ hot spot replacements util_allocate prefetch style get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_arrayClassElementOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_array class element offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_arrayClassElementOffset#getSource()->Class::: plugin_ hot spot replacements util_array class element offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_arrayKlassComponentMirrorOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_array klass component mirror offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_arrayKlassComponentMirrorOffset#getSource()->Class::: plugin_ hot spot replacements util_array klass component mirror offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_arrayKlassOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_array klass offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_arrayKlassOffset#getSource()->Class::: plugin_ hot spot replacements util_array klass offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_arrayLengthOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_array length offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_arrayLengthOffset#getSource()->Class::: plugin_ hot spot replacements util_array length offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_backedgeCounterOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_backedge counter offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_backedgeCounterOffset#getSource()->Class::: plugin_ hot spot replacements util_backedge counter offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_biasedLockMaskInPlace#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_biased lock mask in place execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_biasedLockMaskInPlace#getSource()->Class::: plugin_ hot spot replacements util_biased lock mask in place get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_biasedLockPattern#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_biased lock pattern execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_biasedLockPattern#getSource()->Class::: plugin_ hot spot replacements util_biased lock pattern get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_cardTableShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_card table shift execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_cardTableShift#getSource()->Class::: plugin_ hot spot replacements util_card table shift get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_dirtyCardValue#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_dirty card value execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_dirtyCardValue#getSource()->Class::: plugin_ hot spot replacements util_dirty card value get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_epochMaskInPlace#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_epoch mask in place execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_epochMaskInPlace#getSource()->Class::: plugin_ hot spot replacements util_epoch mask in place get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1CardQueueBufferOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_g1 card queue buffer offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1CardQueueBufferOffset#getSource()->Class::: plugin_ hot spot replacements util_g1 card queue buffer offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1CardQueueIndexOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_g1 card queue index offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1CardQueueIndexOffset#getSource()->Class::: plugin_ hot spot replacements util_g1 card queue index offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1SATBQueueBufferOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_g1 queue buffer offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1SATBQueueBufferOffset#getSource()->Class::: plugin_ hot spot replacements util_g1 queue buffer offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1SATBQueueIndexOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_g1 queue index offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1SATBQueueIndexOffset#getSource()->Class::: plugin_ hot spot replacements util_g1 queue index offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1SATBQueueMarkingOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_g1 queue marking offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1SATBQueueMarkingOffset#getSource()->Class::: plugin_ hot spot replacements util_g1 queue marking offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1YoungCardValue#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_g1 young card value execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_g1YoungCardValue#getSource()->Class::: plugin_ hot spot replacements util_g1 young card value get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_gcTotalCollectionsAddress#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_gc total collections address execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_gcTotalCollectionsAddress#getSource()->Class::: plugin_ hot spot replacements util_gc total collections address get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_getFieldOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_get field offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_getFieldOffset#getSource()->Class::: plugin_ hot spot replacements util_get field offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_getHeapWordSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_get heap word size execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_getHeapWordSize#getSource()->Class::: plugin_ hot spot replacements util_get heap word size get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_getType#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_get type execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_getType#getSource()->Class::: plugin_ hot spot replacements util_get type get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_getWordKind#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_get word kind execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_getWordKind#getSource()->Class::: plugin_ hot spot replacements util_get word kind get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_hubOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_hub offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_hubOffset#getSource()->Class::: plugin_ hot spot replacements util_hub offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_identityHashCode#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_identity hash code execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_identityHashCode#getSource()->Class::: plugin_ hot spot replacements util_identity hash code get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_identityHashCodeShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_identity hash code shift execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_identityHashCodeShift#getSource()->Class::: plugin_ hot spot replacements util_identity hash code shift get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_instanceHeaderSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_instance header size execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_instanceHeaderSize#getSource()->Class::: plugin_ hot spot replacements util_instance header size get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_instanceKlassInitStateOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_instance klass init state offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_instanceKlassInitStateOffset#getSource()->Class::: plugin_ hot spot replacements util_instance klass init state offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_instanceKlassStateFullyInitialized#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_instance klass state fully initialized execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_instanceKlassStateFullyInitialized#getSource()->Class::: plugin_ hot spot replacements util_instance klass state fully initialized get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_invocationCounterIncrement#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_invocation counter increment execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_invocationCounterIncrement#getSource()->Class::: plugin_ hot spot replacements util_invocation counter increment get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_invocationCounterOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_invocation counter offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_invocationCounterOffset#getSource()->Class::: plugin_ hot spot replacements util_invocation counter offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_invocationCounterShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_invocation counter shift execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_invocationCounterShift#getSource()->Class::: plugin_ hot spot replacements util_invocation counter shift get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_jvmAccWrittenFlags#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_jvm acc written flags execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_jvmAccWrittenFlags#getSource()->Class::: plugin_ hot spot replacements util_jvm acc written flags get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_klassAccessFlagsOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_klass access flags offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_klassAccessFlagsOffset#getSource()->Class::: plugin_ hot spot replacements util_klass access flags offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_klassLayoutHelperNeutralValue#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_klass layout helper neutral value execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_klassLayoutHelperNeutralValue#getSource()->Class::: plugin_ hot spot replacements util_klass layout helper neutral value get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_klassModifierFlagsOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_klass modifier flags offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_klassModifierFlagsOffset#getSource()->Class::: plugin_ hot spot replacements util_klass modifier flags offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_klassSuperKlassOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_klass super klass offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_klassSuperKlassOffset#getSource()->Class::: plugin_ hot spot replacements util_klass super klass offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeMask#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_layout helper header size mask execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeMask#getSource()->Class::: plugin_ hot spot replacements util_layout helper header size mask get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_layout helper header size shift execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeShift#getSource()->Class::: plugin_ hot spot replacements util_layout helper header size shift get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeMask#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_layout helper log2 element size mask execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeMask#getSource()->Class::: plugin_ hot spot replacements util_layout helper log2 element size mask get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_layout helper log2 element size shift execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeShift#getSource()->Class::: plugin_ hot spot replacements util_layout helper log2 element size shift get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_loadHubIntrinsic#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_load hub intrinsic execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_loadHubIntrinsic#getSource()->Class::: plugin_ hot spot replacements util_load hub intrinsic get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_loadKlassFromObjectIntrinsic#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_load klass from object intrinsic execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_loadKlassFromObjectIntrinsic#getSource()->Class::: plugin_ hot spot replacements util_load klass from object intrinsic get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_loadWordFromObjectIntrinsic#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_load word from object intrinsic execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_loadWordFromObjectIntrinsic#getSource()->Class::: plugin_ hot spot replacements util_load word from object intrinsic get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_lockDisplacedMarkOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_lock displaced mark offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_lockDisplacedMarkOffset#getSource()->Class::: plugin_ hot spot replacements util_lock displaced mark offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_markOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_mark offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_markOffset#getSource()->Class::: plugin_ hot spot replacements util_mark offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_metaspaceArrayBaseOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_metaspace array base offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_metaspaceArrayBaseOffset#getSource()->Class::: plugin_ hot spot replacements util_metaspace array base offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_metaspaceArrayLengthOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_metaspace array length offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_metaspaceArrayLengthOffset#getSource()->Class::: plugin_ hot spot replacements util_metaspace array length offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_methodHolderClass#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_method holder class execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_methodHolderClass#getSource()->Class::: plugin_ hot spot replacements util_method holder class get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_monitorMask#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_monitor mask execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_monitorMask#getSource()->Class::: plugin_ hot spot replacements util_monitor mask get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectAlignment#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_object alignment execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectAlignment#getSource()->Class::: plugin_ hot spot replacements util_object alignment get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorCxqOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_object monitor cxq offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorCxqOffset#getSource()->Class::: plugin_ hot spot replacements util_object monitor cxq offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorEntryListOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_object monitor entry list offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorEntryListOffset#getSource()->Class::: plugin_ hot spot replacements util_object monitor entry list offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorOwnerOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_object monitor owner offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorOwnerOffset#getSource()->Class::: plugin_ hot spot replacements util_object monitor owner offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorRecursionsOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_object monitor recursions offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorRecursionsOffset#getSource()->Class::: plugin_ hot spot replacements util_object monitor recursions offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorSuccOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_object monitor succ offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_objectMonitorSuccOffset#getSource()->Class::: plugin_ hot spot replacements util_object monitor succ offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_osThreadInterruptedOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_os thread interrupted offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_osThreadInterruptedOffset#getSource()->Class::: plugin_ hot spot replacements util_os thread interrupted offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_osThreadOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_os thread offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_osThreadOffset#getSource()->Class::: plugin_ hot spot replacements util_os thread offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_pageSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_page size execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_pageSize#getSource()->Class::: plugin_ hot spot replacements util_page size get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_prototypeMarkWordOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_prototype mark word offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_prototypeMarkWordOffset#getSource()->Class::: plugin_ hot spot replacements util_prototype mark word offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_readLayoutHelper#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_read layout helper execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_readLayoutHelper#getSource()->Class::: plugin_ hot spot replacements util_read layout helper get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_referentOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_referent offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_referentOffset#getSource()->Class::: plugin_ hot spot replacements util_referent offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_registerAsWord#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_register as word execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_registerAsWord#getSource()->Class::: plugin_ hot spot replacements util_register as word get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_secondarySuperCacheOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_secondary super cache offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_secondarySuperCacheOffset#getSource()->Class::: plugin_ hot spot replacements util_secondary super cache offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_secondarySupersOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_secondary supers offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_secondarySupersOffset#getSource()->Class::: plugin_ hot spot replacements util_secondary supers offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_stackBias#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_stack bias execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_stackBias#getSource()->Class::: plugin_ hot spot replacements util_stack bias get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_superCheckOffsetOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_super check offset offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_superCheckOffsetOffset#getSource()->Class::: plugin_ hot spot replacements util_super check offset offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadExceptionOopOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_thread exception oop offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadExceptionOopOffset#getSource()->Class::: plugin_ hot spot replacements util_thread exception oop offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadExceptionPcOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_thread exception pc offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadExceptionPcOffset#getSource()->Class::: plugin_ hot spot replacements util_thread exception pc offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadObjectOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_thread object offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadObjectOffset#getSource()->Class::: plugin_ hot spot replacements util_thread object offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadPendingExceptionOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_thread pending exception offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadPendingExceptionOffset#getSource()->Class::: plugin_ hot spot replacements util_thread pending exception offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadTlabEndOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_thread tlab end offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadTlabEndOffset#getSource()->Class::: plugin_ hot spot replacements util_thread tlab end offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadTlabTopOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_thread tlab top offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_threadTlabTopOffset#getSource()->Class::: plugin_ hot spot replacements util_thread tlab top offset get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_uninitializedIdentityHashCodeValue#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_uninitialized identity hash code value execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_uninitializedIdentityHashCodeValue#getSource()->Class::: plugin_ hot spot replacements util_uninitialized identity hash code value get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_unlockedMask#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_unlocked mask execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_unlockedMask#getSource()->Class::: plugin_ hot spot replacements util_unlocked mask get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_useBiasedLocking#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_use biased locking execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_useBiasedLocking#getSource()->Class::: plugin_ hot spot replacements util_use biased locking get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_useTLAB#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_use b execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_useTLAB#getSource()->Class::: plugin_ hot spot replacements util_use b get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_verifyOopStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_verify oop stub execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_verifyOopStub#getSource()->Class::: plugin_ hot spot replacements util_verify oop stub get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_verifyOops#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_verify oops execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_verifyOops#getSource()->Class::: plugin_ hot spot replacements util_verify oops get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_wordSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_word size execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_wordSize#getSource()->Class::: plugin_ hot spot replacements util_word size get source
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_writeRegisterAsWord#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hot spot replacements util_write register as word execute
org.graalvm.compiler.hotspot.replacements.Plugin_HotSpotReplacementsUtil_writeRegisterAsWord#getSource()->Class::: plugin_ hot spot replacements util_write register as word get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_HotSpotReplacementsUtil#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ hot spot replacements util register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_HubGetClassNode_readClass#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ hub get class node_read class execute
org.graalvm.compiler.hotspot.replacements.Plugin_HubGetClassNode_readClass#getSource()->Class::: plugin_ hub get class node_read class get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_HubGetClassNode#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ hub get class node register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_IdentityHashCodeNode_identityHashCode#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ identity hash code node_identity hash code execute
org.graalvm.compiler.hotspot.replacements.Plugin_IdentityHashCodeNode_identityHashCode#getSource()->Class::: plugin_ identity hash code node_identity hash code get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_IdentityHashCodeNode#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ identity hash code node register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_Log_log__0#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ log_log__0 execute
org.graalvm.compiler.hotspot.replacements.Plugin_Log_log__0#getSource()->Class::: plugin_ log_log__0 get source
org.graalvm.compiler.hotspot.replacements.Plugin_Log_log__1#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ log_log__1 execute
org.graalvm.compiler.hotspot.replacements.Plugin_Log_log__1#getSource()->Class::: plugin_ log_log__1 get source
org.graalvm.compiler.hotspot.replacements.Plugin_Log_printf#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ log_printf execute
org.graalvm.compiler.hotspot.replacements.Plugin_Log_printf#getSource()->Class::: plugin_ log_printf get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_Log#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ log register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_bkpt#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ monitor snippets_bkpt execute
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_bkpt#getSource()->Class::: plugin_ monitor snippets_bkpt get source
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_doProfile#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ monitor snippets_do profile execute
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_doProfile#getSource()->Class::: plugin_ monitor snippets_do profile get source
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_monitorenterStubC#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ monitor snippets_monitorenter stub c execute
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_monitorenterStubC#getSource()->Class::: plugin_ monitor snippets_monitorenter stub c get source
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_monitorexitStubC#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ monitor snippets_monitorexit stub c execute
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_monitorexitStubC#getSource()->Class::: plugin_ monitor snippets_monitorexit stub c get source
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_useFastInflatedLocking#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ monitor snippets_use fast inflated locking execute
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_useFastInflatedLocking#getSource()->Class::: plugin_ monitor snippets_use fast inflated locking get source
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_verifyBalancedMonitors#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ monitor snippets_verify balanced monitors execute
org.graalvm.compiler.hotspot.replacements.Plugin_MonitorSnippets_verifyBalancedMonitors#getSource()->Class::: plugin_ monitor snippets_verify balanced monitors get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_MonitorSnippets#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ monitor snippets register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_createName#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_create name execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_createName#getSource()->Class::: plugin_ new object snippets_create name get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_doProfile#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_do profile execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_doProfile#getSource()->Class::: plugin_ new object snippets_do profile get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_dynamicNewInstance#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_dynamic new instance execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_dynamicNewInstance#getSource()->Class::: plugin_ new object snippets_dynamic new instance get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_dynamicNewInstanceOrNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_dynamic new instance or null execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_dynamicNewInstanceOrNull#getSource()->Class::: plugin_ new object snippets_dynamic new instance or null get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_getMinimalBulkZeroingSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_get minimal bulk zeroing size execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_getMinimalBulkZeroingSize#getSource()->Class::: plugin_ new object snippets_get minimal bulk zeroing size get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newArray#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_new array execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newArray#getSource()->Class::: plugin_ new object snippets_new array get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newArrayOrNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_new array or null execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newArrayOrNull#getSource()->Class::: plugin_ new object snippets_new array or null get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newInstance#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_new instance execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newInstance#getSource()->Class::: plugin_ new object snippets_new instance get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newInstanceOrNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_new instance or null execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newInstanceOrNull#getSource()->Class::: plugin_ new object snippets_new instance or null get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newMultiArray#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_new multi array execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newMultiArray#getSource()->Class::: plugin_ new object snippets_new multi array get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newMultiArrayOrNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_new multi array or null execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_newMultiArrayOrNull#getSource()->Class::: plugin_ new object snippets_new multi array or null get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_useNullAllocationStubs#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_use null allocation stubs execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_useNullAllocationStubs#getSource()->Class::: plugin_ new object snippets_use null allocation stubs get source
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_withContext#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ new object snippets_with context execute
org.graalvm.compiler.hotspot.replacements.Plugin_NewObjectSnippets_withContext#getSource()->Class::: plugin_ new object snippets_with context get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_NewObjectSnippets#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ new object snippets register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_ObjectSubstitutions_fastNotifyStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ object substitutions_fast notify stub execute
org.graalvm.compiler.hotspot.replacements.Plugin_ObjectSubstitutions_fastNotifyStub#getSource()->Class::: plugin_ object substitutions_fast notify stub get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_ObjectSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ object substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_SHA2Substitutions_stateOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ a2 substitutions_state offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_SHA2Substitutions_stateOffset#getSource()->Class::: plugin_ a2 substitutions_state offset get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_SHA2Substitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ a2 substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_SHA5Substitutions_stateOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ a5 substitutions_state offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_SHA5Substitutions_stateOffset#getSource()->Class::: plugin_ a5 substitutions_state offset get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_SHA5Substitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ a5 substitutions register plugins
org.graalvm.compiler.hotspot.replacements.Plugin_SHASubstitutions_stateOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])->boolean::: plugin_ substitutions_state offset execute
org.graalvm.compiler.hotspot.replacements.Plugin_SHASubstitutions_stateOffset#getSource()->Class::: plugin_ substitutions_state offset get source
org.graalvm.compiler.hotspot.replacements.PluginFactory_SHASubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)->void::: plugin factory_ substitutions register plugins
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#kOffset(IntrinsicContext)->long::: crypt substitutions k offset
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#lastKeyOffset(IntrinsicContext)->long::: crypt substitutions last key offset
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#encryptBlock(Object, byte[], int, byte[], int)->void::: crypt substitutions encrypt block
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#implEncryptBlock(Object, byte[], int, byte[], int)->void::: crypt substitutions impl encrypt block
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#decryptBlock(Object, byte[], int, byte[], int)->void::: crypt substitutions decrypt block
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#implDecryptBlock(Object, byte[], int, byte[], int)->void::: crypt substitutions impl decrypt block
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#decryptBlockWithOriginalKey(Object, byte[], int, byte[], int)->void:::Variation for platforms (e.g
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#implDecryptBlockWithOriginalKey(Object, byte[], int, byte[], int)->void::: crypt substitutions impl decrypt block with original key
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#checkArgs(byte[], int, byte[], int)->void:::Perform null and array bounds checks for arguments to a cipher operation.
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#encryptBlockStub(ForeignCallDescriptor, Word, Word, Pointer)->void::: crypt substitutions encrypt block stub
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#decryptBlockStub(ForeignCallDescriptor, Word, Word, Pointer)->void::: crypt substitutions decrypt block stub
org.graalvm.compiler.hotspot.replacements.AESCryptSubstitutions#decryptBlockWithOriginalKeyStub(ForeignCallDescriptor, Word, Word, Pointer, Pointer)->void::: crypt substitutions decrypt block with original key stub
org.graalvm.compiler.hotspot.replacements.ArraysSupportSubstitutions#vectorizedMismatch(Object, long, Object, long, int, int)->int::: arrays support substitutions vectorized mismatch
org.graalvm.compiler.hotspot.replacements.AssertionSnippets#assertion(boolean, String)->void::: assertion snippets assertion
org.graalvm.compiler.hotspot.replacements.AssertionSnippets#stubAssertion(boolean, String)->void::: assertion snippets stub assertion
org.graalvm.compiler.hotspot.replacements.AssertionSnippets#vmMessageC(ForeignCallDescriptor, boolean, Word, long, long, long)->void::: assertion snippets vm message c
org.graalvm.compiler.hotspot.replacements.AssertionSnippets.Templates#lower(AssertionNode, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.BigIntegerSubstitutions#multiplyToLen(Object, int[], int, int[], int, int[])->int[]::: big integer substitutions multiply to len
org.graalvm.compiler.hotspot.replacements.BigIntegerSubstitutions#multiplyToLenStatic(int[], int, int[], int, int[])->int[]::: big integer substitutions multiply to len static
org.graalvm.compiler.hotspot.replacements.BigIntegerSubstitutions#mulAdd(int[], int[], int, int, int)->int::: big integer substitutions mul add
org.graalvm.compiler.hotspot.replacements.BigIntegerSubstitutions#implMulAdd(int[], int[], int, int, int)->int::: big integer substitutions impl mul add
org.graalvm.compiler.hotspot.replacements.BigIntegerSubstitutions#implMontgomeryMultiply(int[], int[], int[], int, long, int[])->int[]::: big integer substitutions impl montgomery multiply
org.graalvm.compiler.hotspot.replacements.BigIntegerSubstitutions#implMontgomerySquare(int[], int[], int, long, int[])->int[]::: big integer substitutions impl montgomery square
org.graalvm.compiler.hotspot.replacements.BigIntegerSubstitutions#implSquareToLen(int[], int, int[], int)->int[]::: big integer substitutions impl square to len
org.graalvm.compiler.hotspot.replacements.CallSiteTargetNode#tryFold(ValueNode, MetaAccessProvider, Assumptions)->ConstantNode::: call site target node try fold
org.graalvm.compiler.hotspot.replacements.CallSiteTargetNode#canonical(CanonicalizerTool)->Node::: call site target node canonical
org.graalvm.compiler.hotspot.replacements.CallSiteTargetNode#lower(LoweringTool)->void::: call site target node lower
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#aesCryptType(IntrinsicContext)->ResolvedJavaType::: cipher block chaining substitutions aes crypt type
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#encrypt(Object, byte[], int, int, byte[], int)->int::: cipher block chaining substitutions encrypt
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#embeddedCipherOffset(IntrinsicContext)->long::: cipher block chaining substitutions embedded cipher offset
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#rOffset(IntrinsicContext)->long::: cipher block chaining substitutions r offset
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#implEncrypt(Object, byte[], int, int, byte[], int)->int::: cipher block chaining substitutions impl encrypt
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#decrypt(Object, byte[], int, int, byte[], int)->int::: cipher block chaining substitutions decrypt
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#implDecrypt(Object, byte[], int, int, byte[], int)->int::: cipher block chaining substitutions impl decrypt
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#decryptWithOriginalKey(Object, byte[], int, int, byte[], int)->int:::Variation for platforms (e.g
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#implDecryptWithOriginalKey(Object, byte[], int, int, byte[], int)->int::: cipher block chaining substitutions impl decrypt with original key
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#encryptAESCryptStub(ForeignCallDescriptor, Word, Word, Pointer, Pointer, int)->void::: cipher block chaining substitutions encrypt crypt stub
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#decryptAESCryptStub(ForeignCallDescriptor, Word, Word, Pointer, Pointer, int)->void::: cipher block chaining substitutions decrypt crypt stub
org.graalvm.compiler.hotspot.replacements.CipherBlockChainingSubstitutions#decryptAESCryptWithOriginalKeyStub(ForeignCallDescriptor, Word, Word, Pointer, Pointer, int, Pointer)->void::: cipher block chaining substitutions decrypt crypt with original key stub
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#create(ValueNode, MetaAccessProvider, ConstantReflectionProvider, boolean)->ValueNode::: class get hub node create
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#intrinsify(GraphBuilderContext, ResolvedJavaMethod, ValueNode)->boolean::: class get hub node intrinsify
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#canonical(ClassGetHubNode, MetaAccessProvider, ConstantReflectionProvider, boolean, Stamp, ValueNode)->ValueNode::: class get hub node canonical
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#canonical(CanonicalizerTool)->Node::: class get hub node canonical
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#lower(LoweringTool)->void::: class get hub node lower
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#readClass(Class)->KlassPointer::: class get hub node read class
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#piCastNonNull(Object, GuardingNode)->KlassPointer::: class get hub node pi cast non null
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#getValue()->ValueNode::: class get hub node get value
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#convert(Constant, ConstantReflectionProvider)->Constant::: class get hub node convert
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#reverse(Constant, ConstantReflectionProvider)->Constant::: class get hub node reverse
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#isLossless()->boolean::: class get hub node is lossless
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#mayNullCheckSkipConversion()->boolean:::There is more than one java.lang.Class value that has a NULL hub.
org.graalvm.compiler.hotspot.replacements.ClassGetHubNode#preservesOrder(CanonicalCondition, Constant, ConstantReflectionProvider)->boolean::: class get hub node preserves order
org.graalvm.compiler.hotspot.replacements.CounterModeSubstitutions#implCrypt(Object, byte[], int, int, byte[], int)->int::: counter mode substitutions impl crypt
org.graalvm.compiler.hotspot.replacements.CounterModeSubstitutions#counterModeType(IntrinsicContext)->ResolvedJavaType::: counter mode substitutions counter mode type
org.graalvm.compiler.hotspot.replacements.CounterModeSubstitutions#counterOffset(IntrinsicContext)->int::: counter mode substitutions counter offset
org.graalvm.compiler.hotspot.replacements.CounterModeSubstitutions#encCounterOffset(IntrinsicContext)->int::: counter mode substitutions enc counter offset
org.graalvm.compiler.hotspot.replacements.CounterModeSubstitutions#usedOffset(IntrinsicContext)->int::: counter mode substitutions used offset
org.graalvm.compiler.hotspot.replacements.CRC32CSubstitutions#updateBytes(int, byte[], int, int)->int::: c32 substitutions update bytes
org.graalvm.compiler.hotspot.replacements.CRC32CSubstitutions#updateDirectByteBuffer(int, long, int, int)->int::: c32 substitutions update direct byte buffer
org.graalvm.compiler.hotspot.replacements.CRC32CSubstitutions#updateBytesCRC32(ForeignCallDescriptor, int, WordBase, int)->int::: c32 substitutions update bytes c32
org.graalvm.compiler.hotspot.replacements.CRC32Substitutions#update(int, int)->int:::Removed in 9.
org.graalvm.compiler.hotspot.replacements.CRC32Substitutions#updateBytes(int, byte[], int, int)->int:::Removed in 9.
org.graalvm.compiler.hotspot.replacements.CRC32Substitutions#updateBytes0(int, byte[], int, int)->int::: c32 substitutions update bytes0
org.graalvm.compiler.hotspot.replacements.CRC32Substitutions#updateByteBuffer(int, long, int, int)->int:::Removed in 9.
org.graalvm.compiler.hotspot.replacements.CRC32Substitutions#updateByteBuffer0(int, long, int, int)->int::: c32 substitutions update byte buffer0
org.graalvm.compiler.hotspot.replacements.CRC32Substitutions#updateBytesCRC32(ForeignCallDescriptor, int, WordBase, int)->int::: c32 substitutions update bytes c32
org.graalvm.compiler.hotspot.replacements.DigestBaseSubstitutions#implCompressMultiBlock0(Object, byte[], int, int)->int::: digest base substitutions impl compress multi block0
org.graalvm.compiler.hotspot.replacements.DigestBaseSubstitutions#useSHA1Intrinsics(GraalHotSpotVMConfig)->boolean::: digest base substitutions use a1 intrinsics
org.graalvm.compiler.hotspot.replacements.DigestBaseSubstitutions#useSHA256Intrinsics(GraalHotSpotVMConfig)->boolean::: digest base substitutions use a256 intrinsics
org.graalvm.compiler.hotspot.replacements.DigestBaseSubstitutions#useSHA512Intrinsics(GraalHotSpotVMConfig)->boolean::: digest base substitutions use a512 intrinsics
org.graalvm.compiler.hotspot.replacements.EncodedSymbolConstant#getSerializedSize()->int::: encoded symbol constant get serialized size
org.graalvm.compiler.hotspot.replacements.EncodedSymbolConstant#serialize(ByteBuffer)->void::: encoded symbol constant serialize
org.graalvm.compiler.hotspot.replacements.EncodedSymbolConstant#getEncodedConstant()->byte[]::: encoded symbol constant get encoded constant
org.graalvm.compiler.hotspot.replacements.EncodedSymbolConstant#toValueString()->String::: encoded symbol constant to value string
org.graalvm.compiler.hotspot.replacements.HashCodeSnippets#identityHashCodeSnippet(Object)->int::: hash code snippets identity hash code snippet
org.graalvm.compiler.hotspot.replacements.HashCodeSnippets#computeHashCode(Object)->int::: hash code snippets compute hash code
org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.Templates#lower(IdentityHashCodeNode, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.HotSpotArraySubstitutions#newInstance(Class, int)->Object::: hot spot array substitutions new instance
org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions#getModifiers(Class)->int::: hot spot class substitutions get modifiers
org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions#isInterface(Class)->boolean::: hot spot class substitutions is interface
org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions#isArray(Class)->boolean::: hot spot class substitutions is array
org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions#isPrimitive(Class)->boolean::: hot spot class substitutions is primitive
org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions#getObjectType(MetaAccessProvider)->ResolvedJavaType::: hot spot class substitutions get object type
org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions#getSuperclass(Class)->Class::: hot spot class substitutions get superclass
org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions#getComponentType(Class)->Class::: hot spot class substitutions get component type
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#getThread()->Word::: hot spot g1 write barrier snippets get thread
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#wordSize()->int::: hot spot g1 write barrier snippets word size
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#objectArrayIndexScale()->int::: hot spot g1 write barrier snippets object array index scale
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#satbQueueMarkingOffset()->int::: hot spot g1 write barrier snippets satb queue marking offset
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#satbQueueBufferOffset()->int::: hot spot g1 write barrier snippets satb queue buffer offset
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#satbQueueIndexOffset()->int::: hot spot g1 write barrier snippets satb queue index offset
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#cardQueueBufferOffset()->int::: hot spot g1 write barrier snippets card queue buffer offset
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#cardQueueIndexOffset()->int::: hot spot g1 write barrier snippets card queue index offset
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#dirtyCardValue()->byte::: hot spot g1 write barrier snippets dirty card value
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#youngCardValue()->byte::: hot spot g1 write barrier snippets young card value
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#cardTableAddress()->Word::: hot spot g1 write barrier snippets card table address
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#cardTableShift()->int::: hot spot g1 write barrier snippets card table shift
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#logOfHeapRegionGrainBytes()->int::: hot spot g1 write barrier snippets log of heap region grain bytes
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#preWriteBarrierCallDescriptor()->ForeignCallDescriptor::: hot spot g1 write barrier snippets pre write barrier call descriptor
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#postWriteBarrierCallDescriptor()->ForeignCallDescriptor::: hot spot g1 write barrier snippets post write barrier call descriptor
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#verifyOops()->boolean::: hot spot g1 write barrier snippets verify oops
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#verifyBarrier()->boolean::: hot spot g1 write barrier snippets verify barrier
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#gcTotalCollectionsAddress()->long::: hot spot g1 write barrier snippets gc total collections address
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#verifyOopCallDescriptor()->ForeignCallDescriptor::: hot spot g1 write barrier snippets verify oop call descriptor
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#validateObjectCallDescriptor()->ForeignCallDescriptor::: hot spot g1 write barrier snippets validate object call descriptor
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets#printfCallDescriptor()->ForeignCallDescriptor::: hot spot g1 write barrier snippets printf call descriptor
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.Templates#lower(G1PreWriteBarrier, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.Templates#lower(G1ReferentFieldReadBarrier, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.Templates#lower(G1PostWriteBarrier, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.Templates#lower(G1ArrayRangePreWriteBarrier, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.Templates#lower(G1ArrayRangePostWriteBarrier, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.HotSpotG1WriteBarrierSnippets.HotspotG1WriteBarrierLowerer#uncompress(ValueNode)->ValueNode::: hotspot g1 write barrier lowerer uncompress
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.HotSpotOptimizingLocationIdentity#canonicalizeRead(ValueNode, AddressNode, ValueNode, CanonicalizerTool)->ValueNode::: hot spot optimizing location identity canonicalize read
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.HotSpotOptimizingLocationIdentity#findReadHub(ValueNode)->ValueNode::: hot spot optimizing location identity find read hub
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.HotSpotOptimizingLocationIdentity#foldIndirection(ValueNode, ValueNode, LocationIdentity)->ValueNode:::Fold reads that convert from Class -> Hub -> Class or vice versa.
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#methodHolderClass(IntrinsicContext)->ResolvedJavaType::: hot spot replacements util method holder class
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#getType(IntrinsicContext, String)->ResolvedJavaType::: hot spot replacements util get type
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#getFieldOffset(ResolvedJavaType, String)->int::: hot spot replacements util get field offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#runtime()->HotSpotJVMCIRuntime::: hot spot replacements util runtime
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#getHeapWordSize(GraalHotSpotVMConfig)->int::: hot spot replacements util get heap word size
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#klassLayoutHelperNeutralValue(GraalHotSpotVMConfig)->int::: hot spot replacements util klass layout helper neutral value
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#useTLAB(GraalHotSpotVMConfig)->boolean::: hot spot replacements util use b
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#verifyOops(GraalHotSpotVMConfig)->boolean::: hot spot replacements util verify oops
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#threadExceptionOopOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util thread exception oop offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#threadExceptionPcOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util thread exception pc offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#threadTlabTopOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util thread tlab top offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#threadTlabEndOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util thread tlab end offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#threadPendingExceptionOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util thread pending exception offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#readExceptionOop(Word)->Object::: hot spot replacements util read exception oop
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#readExceptionPc(Word)->Word::: hot spot replacements util read exception pc
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#writeExceptionOop(Word, Object)->void::: hot spot replacements util write exception oop
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#writeExceptionPc(Word, Word)->void::: hot spot replacements util write exception pc
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#readTlabTop(Word)->Word::: hot spot replacements util read tlab top
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#readTlabEnd(Word)->Word::: hot spot replacements util read tlab end
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#writeTlabTop(Word, Word)->void::: hot spot replacements util write tlab top
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#clearPendingException(Word)->Object:::Clears the pending exception for the given thread.
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#getPendingException(Word)->Object:::Gets the pending exception for the given thread.
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#threadObjectOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util thread object offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#osThreadOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util os thread offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#osThreadInterruptedOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util os thread interrupted offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#getWordKind()->JavaKind::: hot spot replacements util get word kind
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#wordSize()->int::: hot spot replacements util word size
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#pageSize(GraalHotSpotVMConfig)->int::: hot spot replacements util page size
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#prototypeMarkWordOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util prototype mark word offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#klassAccessFlagsOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util klass access flags offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#jvmAccWrittenFlags(GraalHotSpotVMConfig)->int::: hot spot replacements util jvm acc written flags
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#allocatePrefetchStyle(GraalHotSpotVMConfig)->int::: hot spot replacements util allocate prefetch style
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#allocatePrefetchLines(GraalHotSpotVMConfig)->int::: hot spot replacements util allocate prefetch lines
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#allocatePrefetchDistance(GraalHotSpotVMConfig)->int::: hot spot replacements util allocate prefetch distance
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#allocateInstancePrefetchLines(GraalHotSpotVMConfig)->int::: hot spot replacements util allocate instance prefetch lines
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#allocatePrefetchStepSize(GraalHotSpotVMConfig)->int::: hot spot replacements util allocate prefetch step size
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#invocationCounterIncrement(GraalHotSpotVMConfig)->int::: hot spot replacements util invocation counter increment
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#invocationCounterOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util invocation counter offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#backedgeCounterOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util backedge counter offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#invocationCounterShift(GraalHotSpotVMConfig)->int::: hot spot replacements util invocation counter shift
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#stackBias(GraalHotSpotVMConfig)->int::: hot spot replacements util stack bias
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#readLayoutHelper(KlassPointer)->int::: hot spot replacements util read layout helper
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#klassIsArray(KlassPointer)->boolean:::Checks if class klass is an array
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#arrayKlassComponentMirrorOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util array klass component mirror offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#klassSuperKlassOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util klass super klass offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#markOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util mark offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#hubOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util hub offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#initializeObjectHeader(Word, Word, KlassPointer)->void::: hot spot replacements util initialize object header
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#unlockedMask(GraalHotSpotVMConfig)->int::: hot spot replacements util unlocked mask
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#monitorMask(GraalHotSpotVMConfig)->int::: hot spot replacements util monitor mask
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#objectMonitorOwnerOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util object monitor owner offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#objectMonitorRecursionsOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util object monitor recursions offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#objectMonitorCxqOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util object monitor cxq offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#objectMonitorEntryListOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util object monitor entry list offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#objectMonitorSuccOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util object monitor succ offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#biasedLockMaskInPlace(GraalHotSpotVMConfig)->int:::Mask for a biasable, locked or unlocked mark word
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#epochMaskInPlace(GraalHotSpotVMConfig)->int::: hot spot replacements util epoch mask in place
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#biasedLockPattern(GraalHotSpotVMConfig)->int:::Pattern for a biasable, unlocked mark word
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#ageMaskInPlace(GraalHotSpotVMConfig)->int::: hot spot replacements util age mask in place
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#metaspaceArrayLengthOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util metaspace array length offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#metaspaceArrayBaseOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util metaspace array base offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#arrayLengthOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util array length offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#arrayStart(int[])->Word::: hot spot replacements util array start
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#objectAlignment(GraalHotSpotVMConfig)->int:::Idiom for making GraalHotSpotVMConfig a constant.
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#arrayAllocationSize(int, int, int)->long:::Calls #arrayAllocationSize(int, int, int, int) using an injected VM configuration object.
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#arrayAllocationSize(int, int, int, int)->long:::Computes the size of the memory chunk allocated for an array
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#instanceHeaderSize(GraalHotSpotVMConfig)->int::: hot spot replacements util instance header size
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#dirtyCardValue(GraalHotSpotVMConfig)->byte::: hot spot replacements util dirty card value
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#g1YoungCardValue(GraalHotSpotVMConfig)->byte::: hot spot replacements util g1 young card value
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#cardTableShift(GraalHotSpotVMConfig)->int::: hot spot replacements util card table shift
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#g1CardQueueIndexOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util g1 card queue index offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#g1CardQueueBufferOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util g1 card queue buffer offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#g1SATBQueueMarkingOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util g1 queue marking offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#g1SATBQueueIndexOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util g1 queue index offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#g1SATBQueueBufferOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util g1 queue buffer offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#superCheckOffsetOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util super check offset offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#secondarySuperCacheOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util secondary super cache offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#secondarySupersOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util secondary supers offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#lockDisplacedMarkOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util lock displaced mark offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#useBiasedLocking(GraalHotSpotVMConfig)->boolean::: hot spot replacements util use biased locking
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#uninitializedIdentityHashCodeValue(GraalHotSpotVMConfig)->int::: hot spot replacements util uninitialized identity hash code value
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#identityHashCodeShift(GraalHotSpotVMConfig)->int::: hot spot replacements util identity hash code shift
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#loadHub(Object)->KlassPointer:::Loads the hub of an object (without null checking it first).
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#verifyOop(Object)->Object::: hot spot replacements util verify oop
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#loadWordFromObject(Object, int)->Word::: hot spot replacements util load word from object
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#loadWordFromObject(Object, int, LocationIdentity)->Word::: hot spot replacements util load word from object
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#loadKlassFromObject(Object, int, LocationIdentity)->KlassPointer::: hot spot replacements util load klass from object
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#registerAsWord(Register)->Word:::Reads the value of a given register.
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#registerAsWord(Register, boolean, boolean)->Word::: hot spot replacements util register as word
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#writeRegisterAsWord(Register, Word)->void::: hot spot replacements util write register as word
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#loadHubIntrinsic(Object)->KlassPointer::: hot spot replacements util load hub intrinsic
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#instanceKlassInitStateOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util instance klass init state offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#instanceKlassStateFullyInitialized(GraalHotSpotVMConfig)->int::: hot spot replacements util instance klass state fully initialized
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#isInstanceKlassFullyInitialized(KlassPointer)->boolean::: hot spot replacements util is instance klass fully initialized
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#klassModifierFlagsOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util klass modifier flags offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#arrayKlassOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util array klass offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#layoutHelperHeaderSizeShift(GraalHotSpotVMConfig)->int::: hot spot replacements util layout helper header size shift
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#layoutHelperHeaderSizeMask(GraalHotSpotVMConfig)->int::: hot spot replacements util layout helper header size mask
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#layoutHelperLog2ElementSizeShift(GraalHotSpotVMConfig)->int::: hot spot replacements util layout helper log2 element size shift
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#layoutHelperLog2ElementSizeMask(GraalHotSpotVMConfig)->int::: hot spot replacements util layout helper log2 element size mask
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#identityHashCode(ForeignCallDescriptor, Object)->int::: hot spot replacements util identity hash code
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#gcTotalCollectionsAddress(GraalHotSpotVMConfig)->long::: hot spot replacements util gc total collections address
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#referentOffset(MetaAccessProvider)->long::: hot spot replacements util referent offset
org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil#arrayClassElementOffset(GraalHotSpotVMConfig)->int::: hot spot replacements util array class element offset
org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets#cardTableAddress()->Word::: hot spot serial write barrier snippets card table address
org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets#cardTableShift()->int::: hot spot serial write barrier snippets card table shift
org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets#verifyBarrier()->boolean::: hot spot serial write barrier snippets verify barrier
org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets#dirtyCardValue()->byte::: hot spot serial write barrier snippets dirty card value
org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.Templates#lower(SerialWriteBarrier, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.HotSpotSerialWriteBarrierSnippets.Templates#lower(SerialArrayRangeWriteBarrier, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#getHub()->ValueNode::: hub get class node get hub
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#canonical(CanonicalizerTool)->Node::: hub get class node canonical
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#lower(LoweringTool)->void::: hub get class node lower
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#readClass(KlassPointer)->Class::: hub get class node read class
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#getValue()->ValueNode::: hub get class node get value
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#convert(Constant, ConstantReflectionProvider)->Constant::: hub get class node convert
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#reverse(Constant, ConstantReflectionProvider)->Constant::: hub get class node reverse
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#isLossless()->boolean:::Any concrete Klass* has a corresponding java.lang.Class.
org.graalvm.compiler.hotspot.replacements.HubGetClassNode#mayNullCheckSkipConversion()->boolean::: hub get class node may null check skip conversion
org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode#getLocationIdentity()->LocationIdentity::: identity hash code node get location identity
org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode#canonical(CanonicalizerTool)->Node::: identity hash code node canonical
org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode#lower(LoweringTool)->void::: identity hash code node lower
org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode#identityHashCode(Object)->int::: identity hash code node identity hash code
org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets#instanceofWithProfile(Object, KlassPointer[], boolean[], Object, Object, boolean, Counters)->Object:::A test against a set of hints derived from a profile with 100% precise coverage of seen types
org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets#instanceofExact(Object, KlassPointer, Object, Object, Counters)->Object:::A test against a final type.
org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets#instanceofPrimary(KlassPointer, Object, int, Object, Object, Counters)->Object:::A test against a primary type.
org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets#instanceofSecondary(KlassPointer, Object, KlassPointer[], boolean[], Object, Object, Counters)->Object:::A test against a restricted secondary type type.
org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets#instanceofDynamic(KlassPointer, Object, Object, Object, boolean, Counters)->Object:::Type test used when the type being tested against is not known at compile time.
org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets#isAssignableFrom(Class, Class, Object, Object, Counters)->Object::: instance of snippets is assignable from
org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.Templates#makeArguments(InstanceOfUsageReplacer, LoweringTool)->Arguments::: templates make arguments
org.graalvm.compiler.hotspot.replacements.KlassLayoutHelperNode#create(GraalHotSpotVMConfig, ValueNode, ConstantReflectionProvider, MetaAccessProvider)->ValueNode::: klass layout helper node create
org.graalvm.compiler.hotspot.replacements.KlassLayoutHelperNode#intrinsify(GraphBuilderContext, ResolvedJavaMethod, GraalHotSpotVMConfig, ValueNode)->boolean::: klass layout helper node intrinsify
org.graalvm.compiler.hotspot.replacements.KlassLayoutHelperNode#inferStamp()->boolean::: klass layout helper node infer stamp
org.graalvm.compiler.hotspot.replacements.KlassLayoutHelperNode#canonical(CanonicalizerTool)->Node::: klass layout helper node canonical
org.graalvm.compiler.hotspot.replacements.KlassLayoutHelperNode#lower(LoweringTool)->void::: klass layout helper node lower
org.graalvm.compiler.hotspot.replacements.KlassLayoutHelperNode#getHub()->ValueNode::: klass layout helper node get hub
org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets#loadException(Register)->Object::: load exception object snippets load exception
org.graalvm.compiler.hotspot.replacements.LoadExceptionObjectSnippets.Templates#lower(LoadExceptionObjectNode, HotSpotRegistersProvider, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.Log#print(boolean)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#print(byte)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#print(char)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#print(short)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#print(int)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#print(long)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#printf(String, long)->void:::Prints a formatted string to the log stream.
org.graalvm.compiler.hotspot.replacements.Log#printf(String, long, long)->void::: log printf
org.graalvm.compiler.hotspot.replacements.Log#printf(String, long, long, long)->void::: log printf
org.graalvm.compiler.hotspot.replacements.Log#print(float)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#print(double)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#print(String)->void::: log print
org.graalvm.compiler.hotspot.replacements.Log#printObject(Object)->void::: log print object
org.graalvm.compiler.hotspot.replacements.Log#println(boolean)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#println(byte)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#println(char)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#println(short)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#println(int)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#println(long)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#println(float)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#println(double)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#println(String)->void::: log println
org.graalvm.compiler.hotspot.replacements.Log#printlnObject(Object)->void::: log println object
org.graalvm.compiler.hotspot.replacements.Log#println()->void::: log println
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#doProfile(OptionValues)->boolean::: monitor snippets do profile
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#monitorenter(Object, KlassPointer, int, Register, Register, boolean, Counters)->void::: monitor snippets monitorenter
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#useFastInflatedLocking(OptionValues)->boolean::: monitor snippets use fast inflated locking
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#monitorenterStub(Object, int, boolean)->void:::Calls straight out to the monitorenter stub.
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#monitorexit(Object, int, Register, boolean, Counters)->void::: monitor snippets monitorexit
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#monitorexitStub(Object, int, boolean)->void:::Calls straight out to the monitorexit stub.
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#traceObject(boolean, String, Object, boolean)->void::: monitor snippets trace object
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#trace(boolean, String, WordBase)->void::: monitor snippets trace
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#bkpt(Object, Word, Word, Word)->void::: monitor snippets bkpt
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#verifyBalancedMonitors(OptionValues)->boolean::: monitor snippets verify balanced monitors
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#incCounter()->void::: monitor snippets inc counter
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#decCounter()->void::: monitor snippets dec counter
org.graalvm.compiler.hotspot.replacements.MonitorSnippets.Templates#lower(RawMonitorEnterNode, HotSpotRegistersProvider, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.MonitorSnippets.Templates#lower(MonitorExitNode, HotSpotRegistersProvider, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.MonitorSnippets.Templates#isTracingEnabledForType(ValueNode)->boolean::: templates is tracing enabled for type
org.graalvm.compiler.hotspot.replacements.MonitorSnippets.Templates#isTracingEnabledForMethod(StructuredGraph)->boolean::: templates is tracing enabled for method
org.graalvm.compiler.hotspot.replacements.MonitorSnippets#monitorexitStubC(ForeignCallDescriptor, Object, Word)->void::: monitor snippets monitorexit stub c
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#createName(OptionValues, String, String)->String::: new object snippets create name
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#doProfile(OptionValues)->boolean::: new object snippets do profile
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#withContext(OptionValues)->boolean::: new object snippets with context
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#profileAllocation(String, long, String)->void::: new object snippets profile allocation
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#emitPrefetchAllocate(Word, boolean)->void::: new object snippets emit prefetch allocate
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#allocateInstance(long, KlassPointer, Word, boolean, boolean, Register, boolean, String, Counters)->Object::: new object snippets allocate instance
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#allocateInstanceHelper(long, KlassPointer, Word, boolean, boolean, Register, boolean, String, Counters)->Object::: new object snippets allocate instance helper
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#newInstanceStub(KlassPointer)->Object::: new object snippets new instance stub
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#allocateInstancePIC(long, KlassPointer, Word, boolean, boolean, Register, boolean, String, Counters)->Object::: new object snippets allocate instance c
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#allocateInstanceDynamic(Class, Class, boolean, boolean, Register, Counters)->Object::: new object snippets allocate instance dynamic
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#allocatePrimitiveArrayPIC(KlassPointer, int, Word, int, int, boolean, boolean, Register, boolean, String, boolean, Counters)->Object::: new object snippets allocate primitive array c
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#allocateArrayPIC(KlassPointer, int, Word, int, int, boolean, boolean, Register, boolean, String, boolean, Counters)->Object::: new object snippets allocate array c
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#allocateArray(KlassPointer, int, Word, int, int, boolean, boolean, Register, boolean, String, boolean, Counters)->Object::: new object snippets allocate array
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#useNullAllocationStubs(GraalHotSpotVMConfig)->boolean:::When allocating on the slow path, determines whether to use a version of the runtime call that returns null on a failed allocation instead of raising an OutOfMemoryError.
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#newArrayStub(KlassPointer, int)->Object::: new object snippets new array stub
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#dynamicNewInstanceStub(Class)->Object::: new object snippets dynamic new instance stub
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#dynamicNewInstance(ForeignCallDescriptor, Class)->Object::: new object snippets dynamic new instance
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#dynamicNewInstanceOrNull(ForeignCallDescriptor, Class)->Object::: new object snippets dynamic new instance or null
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#allocateArrayDynamic(Class, Class, int, boolean, boolean, Register, JavaKind, int, boolean, Word, Counters)->Object::: new object snippets allocate array dynamic
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets#getMinimalBulkZeroingSize(OptionValues)->int::: new object snippets get minimal bulk zeroing size
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.Templates#lower(NewInstanceNode, HotSpotRegistersProvider, LoweringTool)->void:::Lowers a NewInstanceNode.
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.Templates#lower(NewArrayNode, HotSpotRegistersProvider, LoweringTool)->void:::Lowers a NewArrayNode.
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.Templates#lower(DynamicNewInstanceNode, HotSpotRegistersProvider, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.Templates#lower(DynamicNewArrayNode, HotSpotRegistersProvider, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.Templates#lower(NewMultiArrayNode, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.Templates#lower(VerifyHeapNode, HotSpotRegistersProvider, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.ObjectCloneNode#computeStamp(ValueNode)->Stamp::: object clone node compute stamp
org.graalvm.compiler.hotspot.replacements.ObjectCloneNode#getLoweredSnippetGraph(LoweringTool)->StructuredGraph::: object clone node get lowered snippet graph
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#booleanArrayClone(boolean[])->boolean[]::: object clone snippets boolean array clone
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#byteArrayClone(byte[])->byte[]::: object clone snippets byte array clone
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#shortArrayClone(short[])->short[]::: object clone snippets short array clone
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#charArrayClone(char[])->char[]::: object clone snippets char array clone
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#intArrayClone(int[])->int[]::: object clone snippets int array clone
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#floatArrayClone(float[])->float[]::: object clone snippets float array clone
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#longArrayClone(long[])->long[]::: object clone snippets long array clone
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#doubleArrayClone(double[])->double[]::: object clone snippets double array clone
org.graalvm.compiler.hotspot.replacements.ObjectCloneSnippets#objectArrayClone(Object[])->Object[]::: object clone snippets object array clone
org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions#hashCode(Object)->int::: object substitutions hash code
org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions#notify(Object)->void::: object substitutions notify
org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions#notifyAll(Object)->void::: object substitutions notify all
org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions#fastNotifyStub(ForeignCallDescriptor, Object)->boolean::: object substitutions fast notify stub
org.graalvm.compiler.hotspot.replacements.ReflectionGetCallerClassNode#canonical(CanonicalizerTool)->Node::: reflection get caller class node canonical
org.graalvm.compiler.hotspot.replacements.ReflectionGetCallerClassNode#lower(LoweringTool)->void::: reflection get caller class node lower
org.graalvm.compiler.hotspot.replacements.ReflectionSubstitutions#getClassAccessFlags(Class)->int::: reflection substitutions get class access flags
org.graalvm.compiler.hotspot.replacements.SHA2Substitutions#implCompress0(Object, byte[], int)->void::: a2 substitutions impl compress0
org.graalvm.compiler.hotspot.replacements.SHA2Substitutions#stateOffset(IntrinsicContext)->long::: a2 substitutions state offset
org.graalvm.compiler.hotspot.replacements.SHA5Substitutions#implCompress0(Object, byte[], int)->void::: a5 substitutions impl compress0
org.graalvm.compiler.hotspot.replacements.SHA5Substitutions#stateOffset(IntrinsicContext)->long::: a5 substitutions state offset
org.graalvm.compiler.hotspot.replacements.SHASubstitutions#implCompress0(Object, byte[], int)->void::: substitutions impl compress0
org.graalvm.compiler.hotspot.replacements.SHASubstitutions#stateOffset(IntrinsicContext)->long::: substitutions state offset
org.graalvm.compiler.hotspot.replacements.StringToBytesSnippets#transform(String)->byte[]::: string to bytes snippets transform
org.graalvm.compiler.hotspot.replacements.StringToBytesSnippets.Templates#lower(StringToBytesNode, LoweringTool)->void::: templates lower
org.graalvm.compiler.hotspot.replacements.StringUTF16Substitutions#toBytes(char[], int, int)->byte[]::: string f16 substitutions to bytes
org.graalvm.compiler.hotspot.replacements.StringUTF16Substitutions#getChars(byte[], int, int, char[], int)->void::: string f16 substitutions get chars
org.graalvm.compiler.hotspot.replacements.ThreadSubstitutions#isInterrupted(Thread, boolean)->boolean:::hidden in 9.
org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils#checkSecondarySubType(KlassPointer, KlassPointer, Counters)->boolean::: type check snippet utils check secondary sub type
org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils#checkUnknownSubType(KlassPointer, KlassPointer, Counters)->boolean::: type check snippet utils check unknown sub type
org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils#createHints(TypeCheckHints, MetaAccessProvider, boolean, StructuredGraph)->Hints::: type check snippet utils create hints
org.graalvm.compiler.hotspot.replacements.TypeCheckSnippetUtils#loadSecondarySupersElement(Word, int)->KlassPointer::: type check snippet utils load secondary supers element
org.graalvm.compiler.hotspot.replacements.UnsafeLoadSnippets#lowerUnsafeLoad(Object, long)->Object::: unsafe load snippets lower unsafe load
org.graalvm.compiler.hotspot.replacements.UnsafeLoadSnippets.Templates#lower(RawLoadNode, LoweringTool)->void::: templates lower
