HotspotSnippetsOptions_OptionDescriptors#get(String)::: hotspot snippets options_ option descriptors get:::switch->return->OptionDescriptor->create->return->OptionDescriptor->create->return->OptionDescriptor->new->StringArr->create->return->OptionDescriptor->create->return->OptionDescriptor->create->return->OptionDescriptor->create->return->OptionDescriptor->create->return->OptionDescriptor->create->return->OptionDescriptor->create->return->OptionDescriptor->create->return
HotspotSnippetsOptions_OptionDescriptors#iterator()::: hotspot snippets options_ option descriptors iterator:::return->new->Iterator<OptionDescriptor>
Plugin_AESCryptSubstitutions_decryptBlockStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ crypt substitutions_decrypt block stub execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->return->intrinsify
Plugin_AESCryptSubstitutions_decryptBlockStub#getSource()::: plugin_ crypt substitutions_decrypt block stub get source:::return
Plugin_AESCryptSubstitutions_decryptBlockWithOriginalKeyStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ crypt substitutions_decrypt block with original key stub execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->arg6->return->intrinsify
Plugin_AESCryptSubstitutions_decryptBlockWithOriginalKeyStub#getSource()::: plugin_ crypt substitutions_decrypt block with original key stub get source:::return
Plugin_AESCryptSubstitutions_encryptBlockStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ crypt substitutions_encrypt block stub execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->return->intrinsify
Plugin_AESCryptSubstitutions_encryptBlockStub#getSource()::: plugin_ crypt substitutions_encrypt block stub get source:::return
Plugin_AESCryptSubstitutions_kOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ crypt substitutions_k offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->kOffset->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_AESCryptSubstitutions_kOffset#getSource()::: plugin_ crypt substitutions_k offset get source:::return
Plugin_AESCryptSubstitutions_lastKeyOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ crypt substitutions_last key offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->lastKeyOffset->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_AESCryptSubstitutions_lastKeyOffset#getSource()::: plugin_ crypt substitutions_last key offset get source:::return
PluginFactory_AESCryptSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ crypt substitutions register plugins:::plugins->new->Plugin_AESCryptSubstitutions_decryptBlockStub->register->plugins->new->Plugin_AESCryptSubstitutions_decryptBlockWithOriginalKeyStub->register->plugins->new->Plugin_AESCryptSubstitutions_encryptBlockStub->register->plugins->new->Plugin_AESCryptSubstitutions_kOffset->register->plugins->new->Plugin_AESCryptSubstitutions_lastKeyOffset->register
Plugin_AssertionSnippets_vmMessageC#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ assertion snippets_vm message c execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->arg6->arg7->return->intrinsify
Plugin_AssertionSnippets_vmMessageC#getSource()::: plugin_ assertion snippets_vm message c get source:::return
PluginFactory_AssertionSnippets#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ assertion snippets register plugins:::plugins->new->Plugin_AssertionSnippets_vmMessageC->register
Plugin_CipherBlockChainingSubstitutions_aesCryptType#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ cipher block chaining substitutions_aes crypt type execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->aesCryptType->constant->snippetReflection->forObject->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_CipherBlockChainingSubstitutions_aesCryptType#getSource()::: plugin_ cipher block chaining substitutions_aes crypt type get source:::return
Plugin_CipherBlockChainingSubstitutions_decryptAESCryptStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ cipher block chaining substitutions_decrypt crypt stub execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->arg6->arg7->return->intrinsify
Plugin_CipherBlockChainingSubstitutions_decryptAESCryptStub#getSource()::: plugin_ cipher block chaining substitutions_decrypt crypt stub get source:::return
Plugin_CipherBlockChainingSubstitutions_decryptAESCryptWithOriginalKeyStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ cipher block chaining substitutions_decrypt crypt with original key stub execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->arg6->arg7->arg8->return->intrinsify
Plugin_CipherBlockChainingSubstitutions_decryptAESCryptWithOriginalKeyStub#getSource()::: plugin_ cipher block chaining substitutions_decrypt crypt with original key stub get source:::return
Plugin_CipherBlockChainingSubstitutions_embeddedCipherOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ cipher block chaining substitutions_embedded cipher offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->embeddedCipherOffset->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_CipherBlockChainingSubstitutions_embeddedCipherOffset#getSource()::: plugin_ cipher block chaining substitutions_embedded cipher offset get source:::return
Plugin_CipherBlockChainingSubstitutions_encryptAESCryptStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ cipher block chaining substitutions_encrypt crypt stub execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->arg6->arg7->return->intrinsify
Plugin_CipherBlockChainingSubstitutions_encryptAESCryptStub#getSource()::: plugin_ cipher block chaining substitutions_encrypt crypt stub get source:::return
Plugin_CipherBlockChainingSubstitutions_rOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ cipher block chaining substitutions_r offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->rOffset->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_CipherBlockChainingSubstitutions_rOffset#getSource()::: plugin_ cipher block chaining substitutions_r offset get source:::return
PluginFactory_CipherBlockChainingSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ cipher block chaining substitutions register plugins:::plugins->new->Plugin_CipherBlockChainingSubstitutions_aesCryptType->register->plugins->new->Plugin_CipherBlockChainingSubstitutions_decryptAESCryptStub->register->plugins->new->Plugin_CipherBlockChainingSubstitutions_decryptAESCryptWithOriginalKeyStub->register->plugins->new->Plugin_CipherBlockChainingSubstitutions_embeddedCipherOffset->register->plugins->new->Plugin_CipherBlockChainingSubstitutions_encryptAESCryptStub->register->plugins->new->Plugin_CipherBlockChainingSubstitutions_rOffset->register
Plugin_ClassGetHubNode_piCastNonNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ class get hub node_pi cast non null execute:::arg0->arg1->return->intrinsify
Plugin_ClassGetHubNode_piCastNonNull#getSource()::: plugin_ class get hub node_pi cast non null get source:::return
Plugin_ClassGetHubNode_readClass#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ class get hub node_read class execute:::arg0->return->intrinsify
Plugin_ClassGetHubNode_readClass#getSource()::: plugin_ class get hub node_read class get source:::return
PluginFactory_ClassGetHubNode#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ class get hub node register plugins:::plugins->new->Plugin_ClassGetHubNode_piCastNonNull->register->plugins->new->Plugin_ClassGetHubNode_readClass->register
Plugin_CounterModeSubstitutions_counterOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ counter mode substitutions_counter offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->counterOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_CounterModeSubstitutions_counterOffset#getSource()::: plugin_ counter mode substitutions_counter offset get source:::return
Plugin_CounterModeSubstitutions_encCounterOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ counter mode substitutions_enc counter offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->encCounterOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_CounterModeSubstitutions_encCounterOffset#getSource()::: plugin_ counter mode substitutions_enc counter offset get source:::return
Plugin_CounterModeSubstitutions_usedOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ counter mode substitutions_used offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->usedOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_CounterModeSubstitutions_usedOffset#getSource()::: plugin_ counter mode substitutions_used offset get source:::return
PluginFactory_CounterModeSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ counter mode substitutions register plugins:::plugins->new->Plugin_CounterModeSubstitutions_counterOffset->register->plugins->new->Plugin_CounterModeSubstitutions_encCounterOffset->register->plugins->new->Plugin_CounterModeSubstitutions_usedOffset->register
Plugin_CRC32CSubstitutions_updateBytesCRC32#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ c32 substitutions_update bytes c32 execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->return->intrinsify
Plugin_CRC32CSubstitutions_updateBytesCRC32#getSource()::: plugin_ c32 substitutions_update bytes c32 get source:::return
PluginFactory_CRC32CSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ c32 substitutions register plugins:::plugins->new->Plugin_CRC32CSubstitutions_updateBytesCRC32->register
Plugin_CRC32Substitutions_updateBytesCRC32#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ c32 substitutions_update bytes c32 execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->return->intrinsify
Plugin_CRC32Substitutions_updateBytesCRC32#getSource()::: plugin_ c32 substitutions_update bytes c32 get source:::return
PluginFactory_CRC32Substitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ c32 substitutions register plugins:::plugins->new->Plugin_CRC32Substitutions_updateBytesCRC32->register
Plugin_DigestBaseSubstitutions_useSHA1Intrinsics#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ digest base substitutions_use a1 intrinsics execute:::if->checkInjectedArgument->return->arg0->result->useSHA1Intrinsics->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_DigestBaseSubstitutions_useSHA1Intrinsics#getSource()::: plugin_ digest base substitutions_use a1 intrinsics get source:::return
Plugin_DigestBaseSubstitutions_useSHA256Intrinsics#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ digest base substitutions_use a256 intrinsics execute:::if->checkInjectedArgument->return->arg0->result->useSHA256Intrinsics->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_DigestBaseSubstitutions_useSHA256Intrinsics#getSource()::: plugin_ digest base substitutions_use a256 intrinsics get source:::return
Plugin_DigestBaseSubstitutions_useSHA512Intrinsics#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ digest base substitutions_use a512 intrinsics execute:::if->checkInjectedArgument->return->arg0->result->useSHA512Intrinsics->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_DigestBaseSubstitutions_useSHA512Intrinsics#getSource()::: plugin_ digest base substitutions_use a512 intrinsics get source:::return
PluginFactory_DigestBaseSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ digest base substitutions register plugins:::plugins->new->Plugin_DigestBaseSubstitutions_useSHA1Intrinsics->register->plugins->new->Plugin_DigestBaseSubstitutions_useSHA256Intrinsics->register->plugins->new->Plugin_DigestBaseSubstitutions_useSHA512Intrinsics->register
Plugin_HotSpotClassSubstitutions_getObjectType#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot class substitutions_get object type execute:::if->checkInjectedArgument->return->arg0->b->getMetaAccess->result->getObjectType->constant->snippetReflection->forObject->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotClassSubstitutions_getObjectType#getSource()::: plugin_ hot spot class substitutions_get object type get source:::return
PluginFactory_HotSpotClassSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ hot spot class substitutions register plugins:::plugins->new->Plugin_HotSpotClassSubstitutions_getObjectType->register
Plugin_HotSpotReplacementsUtil_ageMaskInPlace#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_age mask in place execute:::if->checkInjectedArgument->return->arg0->result->ageMaskInPlace->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_ageMaskInPlace#getSource()::: plugin_ hot spot replacements util_age mask in place get source:::return
Plugin_HotSpotReplacementsUtil_allocateInstancePrefetchLines#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_allocate instance prefetch lines execute:::if->checkInjectedArgument->return->arg0->result->allocateInstancePrefetchLines->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_allocateInstancePrefetchLines#getSource()::: plugin_ hot spot replacements util_allocate instance prefetch lines get source:::return
Plugin_HotSpotReplacementsUtil_allocatePrefetchDistance#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_allocate prefetch distance execute:::if->checkInjectedArgument->return->arg0->result->allocatePrefetchDistance->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_allocatePrefetchDistance#getSource()::: plugin_ hot spot replacements util_allocate prefetch distance get source:::return
Plugin_HotSpotReplacementsUtil_allocatePrefetchLines#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_allocate prefetch lines execute:::if->checkInjectedArgument->return->arg0->result->allocatePrefetchLines->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_allocatePrefetchLines#getSource()::: plugin_ hot spot replacements util_allocate prefetch lines get source:::return
Plugin_HotSpotReplacementsUtil_allocatePrefetchStepSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_allocate prefetch step size execute:::if->checkInjectedArgument->return->arg0->result->allocatePrefetchStepSize->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_allocatePrefetchStepSize#getSource()::: plugin_ hot spot replacements util_allocate prefetch step size get source:::return
Plugin_HotSpotReplacementsUtil_allocatePrefetchStyle#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_allocate prefetch style execute:::if->checkInjectedArgument->return->arg0->result->allocatePrefetchStyle->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_allocatePrefetchStyle#getSource()::: plugin_ hot spot replacements util_allocate prefetch style get source:::return
Plugin_HotSpotReplacementsUtil_arrayClassElementOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_array class element offset execute:::if->checkInjectedArgument->return->arg0->result->arrayClassElementOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_arrayClassElementOffset#getSource()::: plugin_ hot spot replacements util_array class element offset get source:::return
Plugin_HotSpotReplacementsUtil_arrayKlassComponentMirrorOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_array klass component mirror offset execute:::if->checkInjectedArgument->return->arg0->result->arrayKlassComponentMirrorOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_arrayKlassComponentMirrorOffset#getSource()::: plugin_ hot spot replacements util_array klass component mirror offset get source:::return
Plugin_HotSpotReplacementsUtil_arrayKlassOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_array klass offset execute:::if->checkInjectedArgument->return->arg0->result->arrayKlassOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_arrayKlassOffset#getSource()::: plugin_ hot spot replacements util_array klass offset get source:::return
Plugin_HotSpotReplacementsUtil_arrayLengthOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_array length offset execute:::if->checkInjectedArgument->return->arg0->result->arrayLengthOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_arrayLengthOffset#getSource()::: plugin_ hot spot replacements util_array length offset get source:::return
Plugin_HotSpotReplacementsUtil_backedgeCounterOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_backedge counter offset execute:::if->checkInjectedArgument->return->arg0->result->backedgeCounterOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_backedgeCounterOffset#getSource()::: plugin_ hot spot replacements util_backedge counter offset get source:::return
Plugin_HotSpotReplacementsUtil_biasedLockMaskInPlace#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_biased lock mask in place execute:::if->checkInjectedArgument->return->arg0->result->biasedLockMaskInPlace->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_biasedLockMaskInPlace#getSource()::: plugin_ hot spot replacements util_biased lock mask in place get source:::return
Plugin_HotSpotReplacementsUtil_biasedLockPattern#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_biased lock pattern execute:::if->checkInjectedArgument->return->arg0->result->biasedLockPattern->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_biasedLockPattern#getSource()::: plugin_ hot spot replacements util_biased lock pattern get source:::return
Plugin_HotSpotReplacementsUtil_cardTableShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_card table shift execute:::if->checkInjectedArgument->return->arg0->result->cardTableShift->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_cardTableShift#getSource()::: plugin_ hot spot replacements util_card table shift get source:::return
Plugin_HotSpotReplacementsUtil_dirtyCardValue#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_dirty card value execute:::if->checkInjectedArgument->return->arg0->result->dirtyCardValue->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_dirtyCardValue#getSource()::: plugin_ hot spot replacements util_dirty card value get source:::return
Plugin_HotSpotReplacementsUtil_epochMaskInPlace#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_epoch mask in place execute:::if->checkInjectedArgument->return->arg0->result->epochMaskInPlace->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_epochMaskInPlace#getSource()::: plugin_ hot spot replacements util_epoch mask in place get source:::return
Plugin_HotSpotReplacementsUtil_g1CardQueueBufferOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_g1 card queue buffer offset execute:::if->checkInjectedArgument->return->arg0->result->g1CardQueueBufferOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_g1CardQueueBufferOffset#getSource()::: plugin_ hot spot replacements util_g1 card queue buffer offset get source:::return
Plugin_HotSpotReplacementsUtil_g1CardQueueIndexOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_g1 card queue index offset execute:::if->checkInjectedArgument->return->arg0->result->g1CardQueueIndexOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_g1CardQueueIndexOffset#getSource()::: plugin_ hot spot replacements util_g1 card queue index offset get source:::return
Plugin_HotSpotReplacementsUtil_g1SATBQueueBufferOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_g1 queue buffer offset execute:::if->checkInjectedArgument->return->arg0->result->g1SATBQueueBufferOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_g1SATBQueueBufferOffset#getSource()::: plugin_ hot spot replacements util_g1 queue buffer offset get source:::return
Plugin_HotSpotReplacementsUtil_g1SATBQueueIndexOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_g1 queue index offset execute:::if->checkInjectedArgument->return->arg0->result->g1SATBQueueIndexOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_g1SATBQueueIndexOffset#getSource()::: plugin_ hot spot replacements util_g1 queue index offset get source:::return
Plugin_HotSpotReplacementsUtil_g1SATBQueueMarkingOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_g1 queue marking offset execute:::if->checkInjectedArgument->return->arg0->result->g1SATBQueueMarkingOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_g1SATBQueueMarkingOffset#getSource()::: plugin_ hot spot replacements util_g1 queue marking offset get source:::return
Plugin_HotSpotReplacementsUtil_g1YoungCardValue#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_g1 young card value execute:::if->checkInjectedArgument->return->arg0->result->g1YoungCardValue->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_g1YoungCardValue#getSource()::: plugin_ hot spot replacements util_g1 young card value get source:::return
Plugin_HotSpotReplacementsUtil_gcTotalCollectionsAddress#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_gc total collections address execute:::if->checkInjectedArgument->return->arg0->result->gcTotalCollectionsAddress->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_gcTotalCollectionsAddress#getSource()::: plugin_ hot spot replacements util_gc total collections address get source:::return
Plugin_HotSpotReplacementsUtil_getFieldOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_get field offset execute:::arg0->if->isConstant->cst->asJavaConstant->b->getConstantReflection->asJavaType->if->snippetReflection->asObject->else->return->arg1->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->result->getFieldOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_getFieldOffset#getSource()::: plugin_ hot spot replacements util_get field offset get source:::return
Plugin_HotSpotReplacementsUtil_getHeapWordSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_get heap word size execute:::if->checkInjectedArgument->return->arg0->result->getHeapWordSize->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_getHeapWordSize#getSource()::: plugin_ hot spot replacements util_get heap word size get source:::return
Plugin_HotSpotReplacementsUtil_getType#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_get type execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->arg1->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->result->getType->constant->snippetReflection->forObject->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_getType#getSource()::: plugin_ hot spot replacements util_get type get source:::return
Plugin_HotSpotReplacementsUtil_getWordKind#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_get word kind execute:::result->getWordKind->constant->snippetReflection->forObject->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_getWordKind#getSource()::: plugin_ hot spot replacements util_get word kind get source:::return
Plugin_HotSpotReplacementsUtil_hubOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_hub offset execute:::if->checkInjectedArgument->return->arg0->result->hubOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_hubOffset#getSource()::: plugin_ hot spot replacements util_hub offset get source:::return
Plugin_HotSpotReplacementsUtil_identityHashCode#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_identity hash code execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->return->intrinsify
Plugin_HotSpotReplacementsUtil_identityHashCode#getSource()::: plugin_ hot spot replacements util_identity hash code get source:::return
Plugin_HotSpotReplacementsUtil_identityHashCodeShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_identity hash code shift execute:::if->checkInjectedArgument->return->arg0->result->identityHashCodeShift->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_identityHashCodeShift#getSource()::: plugin_ hot spot replacements util_identity hash code shift get source:::return
Plugin_HotSpotReplacementsUtil_instanceHeaderSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_instance header size execute:::if->checkInjectedArgument->return->arg0->result->instanceHeaderSize->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_instanceHeaderSize#getSource()::: plugin_ hot spot replacements util_instance header size get source:::return
Plugin_HotSpotReplacementsUtil_instanceKlassInitStateOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_instance klass init state offset execute:::if->checkInjectedArgument->return->arg0->result->instanceKlassInitStateOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_instanceKlassInitStateOffset#getSource()::: plugin_ hot spot replacements util_instance klass init state offset get source:::return
Plugin_HotSpotReplacementsUtil_instanceKlassStateFullyInitialized#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_instance klass state fully initialized execute:::if->checkInjectedArgument->return->arg0->result->instanceKlassStateFullyInitialized->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_instanceKlassStateFullyInitialized#getSource()::: plugin_ hot spot replacements util_instance klass state fully initialized get source:::return
Plugin_HotSpotReplacementsUtil_invocationCounterIncrement#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_invocation counter increment execute:::if->checkInjectedArgument->return->arg0->result->invocationCounterIncrement->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_invocationCounterIncrement#getSource()::: plugin_ hot spot replacements util_invocation counter increment get source:::return
Plugin_HotSpotReplacementsUtil_invocationCounterOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_invocation counter offset execute:::if->checkInjectedArgument->return->arg0->result->invocationCounterOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_invocationCounterOffset#getSource()::: plugin_ hot spot replacements util_invocation counter offset get source:::return
Plugin_HotSpotReplacementsUtil_invocationCounterShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_invocation counter shift execute:::if->checkInjectedArgument->return->arg0->result->invocationCounterShift->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_invocationCounterShift#getSource()::: plugin_ hot spot replacements util_invocation counter shift get source:::return
Plugin_HotSpotReplacementsUtil_jvmAccWrittenFlags#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_jvm acc written flags execute:::if->checkInjectedArgument->return->arg0->result->jvmAccWrittenFlags->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_jvmAccWrittenFlags#getSource()::: plugin_ hot spot replacements util_jvm acc written flags get source:::return
Plugin_HotSpotReplacementsUtil_klassAccessFlagsOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_klass access flags offset execute:::if->checkInjectedArgument->return->arg0->result->klassAccessFlagsOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_klassAccessFlagsOffset#getSource()::: plugin_ hot spot replacements util_klass access flags offset get source:::return
Plugin_HotSpotReplacementsUtil_klassLayoutHelperNeutralValue#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_klass layout helper neutral value execute:::if->checkInjectedArgument->return->arg0->result->klassLayoutHelperNeutralValue->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_klassLayoutHelperNeutralValue#getSource()::: plugin_ hot spot replacements util_klass layout helper neutral value get source:::return
Plugin_HotSpotReplacementsUtil_klassModifierFlagsOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_klass modifier flags offset execute:::if->checkInjectedArgument->return->arg0->result->klassModifierFlagsOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_klassModifierFlagsOffset#getSource()::: plugin_ hot spot replacements util_klass modifier flags offset get source:::return
Plugin_HotSpotReplacementsUtil_klassSuperKlassOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_klass super klass offset execute:::if->checkInjectedArgument->return->arg0->result->klassSuperKlassOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_klassSuperKlassOffset#getSource()::: plugin_ hot spot replacements util_klass super klass offset get source:::return
Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeMask#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_layout helper header size mask execute:::if->checkInjectedArgument->return->arg0->result->layoutHelperHeaderSizeMask->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeMask#getSource()::: plugin_ hot spot replacements util_layout helper header size mask get source:::return
Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_layout helper header size shift execute:::if->checkInjectedArgument->return->arg0->result->layoutHelperHeaderSizeShift->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeShift#getSource()::: plugin_ hot spot replacements util_layout helper header size shift get source:::return
Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeMask#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_layout helper log2 element size mask execute:::if->checkInjectedArgument->return->arg0->result->layoutHelperLog2ElementSizeMask->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeMask#getSource()::: plugin_ hot spot replacements util_layout helper log2 element size mask get source:::return
Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeShift#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_layout helper log2 element size shift execute:::if->checkInjectedArgument->return->arg0->result->layoutHelperLog2ElementSizeShift->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeShift#getSource()::: plugin_ hot spot replacements util_layout helper log2 element size shift get source:::return
Plugin_HotSpotReplacementsUtil_loadHubIntrinsic#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_load hub intrinsic execute:::arg0->b->getStampProvider->arg1->node->new->org.graalvm.compiler.nodes.extended.LoadHubNode->b->addPush->return
Plugin_HotSpotReplacementsUtil_loadHubIntrinsic#getSource()::: plugin_ hot spot replacements util_load hub intrinsic get source:::return
Plugin_HotSpotReplacementsUtil_loadKlassFromObjectIntrinsic#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_load klass from object intrinsic execute:::arg0->arg1->arg2->arg3->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg4->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->node->new->org.graalvm.compiler.nodes.extended.RawLoadNode->b->addPush->return
Plugin_HotSpotReplacementsUtil_loadKlassFromObjectIntrinsic#getSource()::: plugin_ hot spot replacements util_load klass from object intrinsic get source:::return
Plugin_HotSpotReplacementsUtil_loadWordFromObjectIntrinsic#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_load word from object intrinsic execute:::arg0->arg1->arg2->arg3->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg4->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->node->new->org.graalvm.compiler.nodes.extended.RawLoadNode->b->addPush->return
Plugin_HotSpotReplacementsUtil_loadWordFromObjectIntrinsic#getSource()::: plugin_ hot spot replacements util_load word from object intrinsic get source:::return
Plugin_HotSpotReplacementsUtil_lockDisplacedMarkOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_lock displaced mark offset execute:::if->checkInjectedArgument->return->arg0->result->lockDisplacedMarkOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_lockDisplacedMarkOffset#getSource()::: plugin_ hot spot replacements util_lock displaced mark offset get source:::return
Plugin_HotSpotReplacementsUtil_markOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_mark offset execute:::if->checkInjectedArgument->return->arg0->result->markOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_markOffset#getSource()::: plugin_ hot spot replacements util_mark offset get source:::return
Plugin_HotSpotReplacementsUtil_metaspaceArrayBaseOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_metaspace array base offset execute:::if->checkInjectedArgument->return->arg0->result->metaspaceArrayBaseOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_metaspaceArrayBaseOffset#getSource()::: plugin_ hot spot replacements util_metaspace array base offset get source:::return
Plugin_HotSpotReplacementsUtil_metaspaceArrayLengthOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_metaspace array length offset execute:::if->checkInjectedArgument->return->arg0->result->metaspaceArrayLengthOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_metaspaceArrayLengthOffset#getSource()::: plugin_ hot spot replacements util_metaspace array length offset get source:::return
Plugin_HotSpotReplacementsUtil_methodHolderClass#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_method holder class execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->methodHolderClass->constant->snippetReflection->forObject->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_methodHolderClass#getSource()::: plugin_ hot spot replacements util_method holder class get source:::return
Plugin_HotSpotReplacementsUtil_monitorMask#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_monitor mask execute:::if->checkInjectedArgument->return->arg0->result->monitorMask->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_monitorMask#getSource()::: plugin_ hot spot replacements util_monitor mask get source:::return
Plugin_HotSpotReplacementsUtil_objectAlignment#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_object alignment execute:::if->checkInjectedArgument->return->arg0->result->objectAlignment->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_objectAlignment#getSource()::: plugin_ hot spot replacements util_object alignment get source:::return
Plugin_HotSpotReplacementsUtil_objectMonitorCxqOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_object monitor cxq offset execute:::if->checkInjectedArgument->return->arg0->result->objectMonitorCxqOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_objectMonitorCxqOffset#getSource()::: plugin_ hot spot replacements util_object monitor cxq offset get source:::return
Plugin_HotSpotReplacementsUtil_objectMonitorEntryListOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_object monitor entry list offset execute:::if->checkInjectedArgument->return->arg0->result->objectMonitorEntryListOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_objectMonitorEntryListOffset#getSource()::: plugin_ hot spot replacements util_object monitor entry list offset get source:::return
Plugin_HotSpotReplacementsUtil_objectMonitorOwnerOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_object monitor owner offset execute:::if->checkInjectedArgument->return->arg0->result->objectMonitorOwnerOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_objectMonitorOwnerOffset#getSource()::: plugin_ hot spot replacements util_object monitor owner offset get source:::return
Plugin_HotSpotReplacementsUtil_objectMonitorRecursionsOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_object monitor recursions offset execute:::if->checkInjectedArgument->return->arg0->result->objectMonitorRecursionsOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_objectMonitorRecursionsOffset#getSource()::: plugin_ hot spot replacements util_object monitor recursions offset get source:::return
Plugin_HotSpotReplacementsUtil_objectMonitorSuccOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_object monitor succ offset execute:::if->checkInjectedArgument->return->arg0->result->objectMonitorSuccOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_objectMonitorSuccOffset#getSource()::: plugin_ hot spot replacements util_object monitor succ offset get source:::return
Plugin_HotSpotReplacementsUtil_osThreadInterruptedOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_os thread interrupted offset execute:::if->checkInjectedArgument->return->arg0->result->osThreadInterruptedOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_osThreadInterruptedOffset#getSource()::: plugin_ hot spot replacements util_os thread interrupted offset get source:::return
Plugin_HotSpotReplacementsUtil_osThreadOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_os thread offset execute:::if->checkInjectedArgument->return->arg0->result->osThreadOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_osThreadOffset#getSource()::: plugin_ hot spot replacements util_os thread offset get source:::return
Plugin_HotSpotReplacementsUtil_pageSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_page size execute:::if->checkInjectedArgument->return->arg0->result->pageSize->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_pageSize#getSource()::: plugin_ hot spot replacements util_page size get source:::return
Plugin_HotSpotReplacementsUtil_prototypeMarkWordOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_prototype mark word offset execute:::if->checkInjectedArgument->return->arg0->result->prototypeMarkWordOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_prototypeMarkWordOffset#getSource()::: plugin_ hot spot replacements util_prototype mark word offset get source:::return
Plugin_HotSpotReplacementsUtil_readLayoutHelper#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_read layout helper execute:::arg0->arg1->return->intrinsify
Plugin_HotSpotReplacementsUtil_readLayoutHelper#getSource()::: plugin_ hot spot replacements util_read layout helper get source:::return
Plugin_HotSpotReplacementsUtil_referentOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_referent offset execute:::if->checkInjectedArgument->return->arg0->b->getMetaAccess->result->referentOffset->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_referentOffset#getSource()::: plugin_ hot spot replacements util_referent offset get source:::return
Plugin_HotSpotReplacementsUtil_registerAsWord#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_register as word execute:::arg0->arg1->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg2->if->isConstant->asJavaConstant->asInt->else->return->arg3->if->isConstant->asJavaConstant->asInt->else->return->node->new->org.graalvm.compiler.replacements.nodes.ReadRegisterNode->b->addPush->return
Plugin_HotSpotReplacementsUtil_registerAsWord#getSource()::: plugin_ hot spot replacements util_register as word get source:::return
Plugin_HotSpotReplacementsUtil_secondarySuperCacheOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_secondary super cache offset execute:::if->checkInjectedArgument->return->arg0->result->secondarySuperCacheOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_secondarySuperCacheOffset#getSource()::: plugin_ hot spot replacements util_secondary super cache offset get source:::return
Plugin_HotSpotReplacementsUtil_secondarySupersOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_secondary supers offset execute:::if->checkInjectedArgument->return->arg0->result->secondarySupersOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_secondarySupersOffset#getSource()::: plugin_ hot spot replacements util_secondary supers offset get source:::return
Plugin_HotSpotReplacementsUtil_stackBias#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_stack bias execute:::if->checkInjectedArgument->return->arg0->result->stackBias->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_stackBias#getSource()::: plugin_ hot spot replacements util_stack bias get source:::return
Plugin_HotSpotReplacementsUtil_superCheckOffsetOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_super check offset offset execute:::if->checkInjectedArgument->return->arg0->result->superCheckOffsetOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_superCheckOffsetOffset#getSource()::: plugin_ hot spot replacements util_super check offset offset get source:::return
Plugin_HotSpotReplacementsUtil_threadExceptionOopOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_thread exception oop offset execute:::if->checkInjectedArgument->return->arg0->result->threadExceptionOopOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_threadExceptionOopOffset#getSource()::: plugin_ hot spot replacements util_thread exception oop offset get source:::return
Plugin_HotSpotReplacementsUtil_threadExceptionPcOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_thread exception pc offset execute:::if->checkInjectedArgument->return->arg0->result->threadExceptionPcOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_threadExceptionPcOffset#getSource()::: plugin_ hot spot replacements util_thread exception pc offset get source:::return
Plugin_HotSpotReplacementsUtil_threadObjectOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_thread object offset execute:::if->checkInjectedArgument->return->arg0->result->threadObjectOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_threadObjectOffset#getSource()::: plugin_ hot spot replacements util_thread object offset get source:::return
Plugin_HotSpotReplacementsUtil_threadPendingExceptionOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_thread pending exception offset execute:::if->checkInjectedArgument->return->arg0->result->threadPendingExceptionOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_threadPendingExceptionOffset#getSource()::: plugin_ hot spot replacements util_thread pending exception offset get source:::return
Plugin_HotSpotReplacementsUtil_threadTlabEndOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_thread tlab end offset execute:::if->checkInjectedArgument->return->arg0->result->threadTlabEndOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_threadTlabEndOffset#getSource()::: plugin_ hot spot replacements util_thread tlab end offset get source:::return
Plugin_HotSpotReplacementsUtil_threadTlabTopOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_thread tlab top offset execute:::if->checkInjectedArgument->return->arg0->result->threadTlabTopOffset->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_threadTlabTopOffset#getSource()::: plugin_ hot spot replacements util_thread tlab top offset get source:::return
Plugin_HotSpotReplacementsUtil_uninitializedIdentityHashCodeValue#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_uninitialized identity hash code value execute:::if->checkInjectedArgument->return->arg0->result->uninitializedIdentityHashCodeValue->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_uninitializedIdentityHashCodeValue#getSource()::: plugin_ hot spot replacements util_uninitialized identity hash code value get source:::return
Plugin_HotSpotReplacementsUtil_unlockedMask#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_unlocked mask execute:::if->checkInjectedArgument->return->arg0->result->unlockedMask->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_unlockedMask#getSource()::: plugin_ hot spot replacements util_unlocked mask get source:::return
Plugin_HotSpotReplacementsUtil_useBiasedLocking#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_use biased locking execute:::if->checkInjectedArgument->return->arg0->result->useBiasedLocking->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_useBiasedLocking#getSource()::: plugin_ hot spot replacements util_use biased locking get source:::return
Plugin_HotSpotReplacementsUtil_useTLAB#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_use b execute:::if->checkInjectedArgument->return->arg0->result->useTLAB->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_useTLAB#getSource()::: plugin_ hot spot replacements util_use b get source:::return
Plugin_HotSpotReplacementsUtil_verifyOopStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_verify oop stub execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->return->intrinsify
Plugin_HotSpotReplacementsUtil_verifyOopStub#getSource()::: plugin_ hot spot replacements util_verify oop stub get source:::return
Plugin_HotSpotReplacementsUtil_verifyOops#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_verify oops execute:::if->checkInjectedArgument->return->arg0->result->verifyOops->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_verifyOops#getSource()::: plugin_ hot spot replacements util_verify oops get source:::return
Plugin_HotSpotReplacementsUtil_wordSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_word size execute:::result->wordSize->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_HotSpotReplacementsUtil_wordSize#getSource()::: plugin_ hot spot replacements util_word size get source:::return
Plugin_HotSpotReplacementsUtil_writeRegisterAsWord#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hot spot replacements util_write register as word execute:::arg0->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg1->node->new->org.graalvm.compiler.replacements.nodes.WriteRegisterNode->b->add->return
Plugin_HotSpotReplacementsUtil_writeRegisterAsWord#getSource()::: plugin_ hot spot replacements util_write register as word get source:::return
PluginFactory_HotSpotReplacementsUtil#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ hot spot replacements util register plugins:::plugins->new->Plugin_HotSpotReplacementsUtil_ageMaskInPlace->register->plugins->new->Plugin_HotSpotReplacementsUtil_allocateInstancePrefetchLines->register->plugins->new->Plugin_HotSpotReplacementsUtil_allocatePrefetchDistance->register->plugins->new->Plugin_HotSpotReplacementsUtil_allocatePrefetchLines->register->plugins->new->Plugin_HotSpotReplacementsUtil_allocatePrefetchStepSize->register->plugins->new->Plugin_HotSpotReplacementsUtil_allocatePrefetchStyle->register->plugins->new->Plugin_HotSpotReplacementsUtil_arrayClassElementOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_arrayKlassComponentMirrorOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_arrayKlassOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_arrayLengthOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_backedgeCounterOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_biasedLockMaskInPlace->register->plugins->new->Plugin_HotSpotReplacementsUtil_biasedLockPattern->register->plugins->new->Plugin_HotSpotReplacementsUtil_cardTableShift->register->plugins->new->Plugin_HotSpotReplacementsUtil_dirtyCardValue->register->plugins->new->Plugin_HotSpotReplacementsUtil_epochMaskInPlace->register->plugins->new->Plugin_HotSpotReplacementsUtil_g1CardQueueBufferOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_g1CardQueueIndexOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_g1SATBQueueBufferOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_g1SATBQueueIndexOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_g1SATBQueueMarkingOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_g1YoungCardValue->register->plugins->new->Plugin_HotSpotReplacementsUtil_gcTotalCollectionsAddress->register->plugins->new->Plugin_HotSpotReplacementsUtil_getFieldOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_getHeapWordSize->register->plugins->new->Plugin_HotSpotReplacementsUtil_getType->register->plugins->new->Plugin_HotSpotReplacementsUtil_getWordKind->register->plugins->new->Plugin_HotSpotReplacementsUtil_hubOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_identityHashCode->register->plugins->new->Plugin_HotSpotReplacementsUtil_identityHashCodeShift->register->plugins->new->Plugin_HotSpotReplacementsUtil_instanceHeaderSize->register->plugins->new->Plugin_HotSpotReplacementsUtil_instanceKlassInitStateOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_instanceKlassStateFullyInitialized->register->plugins->new->Plugin_HotSpotReplacementsUtil_invocationCounterIncrement->register->plugins->new->Plugin_HotSpotReplacementsUtil_invocationCounterOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_invocationCounterShift->register->plugins->new->Plugin_HotSpotReplacementsUtil_jvmAccWrittenFlags->register->plugins->new->Plugin_HotSpotReplacementsUtil_klassAccessFlagsOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_klassLayoutHelperNeutralValue->register->plugins->new->Plugin_HotSpotReplacementsUtil_klassModifierFlagsOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_klassSuperKlassOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeMask->register->plugins->new->Plugin_HotSpotReplacementsUtil_layoutHelperHeaderSizeShift->register->plugins->new->Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeMask->register->plugins->new->Plugin_HotSpotReplacementsUtil_layoutHelperLog2ElementSizeShift->register->plugins->new->Plugin_HotSpotReplacementsUtil_loadHubIntrinsic->register->plugins->new->Plugin_HotSpotReplacementsUtil_loadKlassFromObjectIntrinsic->register->plugins->new->Plugin_HotSpotReplacementsUtil_loadWordFromObjectIntrinsic->register->plugins->new->Plugin_HotSpotReplacementsUtil_lockDisplacedMarkOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_markOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_metaspaceArrayBaseOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_metaspaceArrayLengthOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_methodHolderClass->register->plugins->new->Plugin_HotSpotReplacementsUtil_monitorMask->register->plugins->new->Plugin_HotSpotReplacementsUtil_objectAlignment->register->plugins->new->Plugin_HotSpotReplacementsUtil_objectMonitorCxqOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_objectMonitorEntryListOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_objectMonitorOwnerOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_objectMonitorRecursionsOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_objectMonitorSuccOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_osThreadInterruptedOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_osThreadOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_pageSize->register->plugins->new->Plugin_HotSpotReplacementsUtil_prototypeMarkWordOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_readLayoutHelper->register->plugins->new->Plugin_HotSpotReplacementsUtil_referentOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_registerAsWord->register->plugins->new->Plugin_HotSpotReplacementsUtil_secondarySuperCacheOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_secondarySupersOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_stackBias->register->plugins->new->Plugin_HotSpotReplacementsUtil_superCheckOffsetOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_threadExceptionOopOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_threadExceptionPcOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_threadObjectOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_threadPendingExceptionOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_threadTlabEndOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_threadTlabTopOffset->register->plugins->new->Plugin_HotSpotReplacementsUtil_uninitializedIdentityHashCodeValue->register->plugins->new->Plugin_HotSpotReplacementsUtil_unlockedMask->register->plugins->new->Plugin_HotSpotReplacementsUtil_useBiasedLocking->register->plugins->new->Plugin_HotSpotReplacementsUtil_useTLAB->register->plugins->new->Plugin_HotSpotReplacementsUtil_verifyOopStub->register->plugins->new->Plugin_HotSpotReplacementsUtil_verifyOops->register->plugins->new->Plugin_HotSpotReplacementsUtil_wordSize->register->plugins->new->Plugin_HotSpotReplacementsUtil_writeRegisterAsWord->register
Plugin_HubGetClassNode_readClass#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ hub get class node_read class execute:::arg0->b->getMetaAccess->arg1->node->new->org.graalvm.compiler.hotspot.replacements.HubGetClassNode->b->addPush->return
Plugin_HubGetClassNode_readClass#getSource()::: plugin_ hub get class node_read class get source:::return
PluginFactory_HubGetClassNode#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ hub get class node register plugins:::plugins->new->Plugin_HubGetClassNode_readClass->register
Plugin_IdentityHashCodeNode_identityHashCode#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ identity hash code node_identity hash code execute:::arg0->node->new->org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode->b->addPush->return
Plugin_IdentityHashCodeNode_identityHashCode#getSource()::: plugin_ identity hash code node_identity hash code get source:::return
PluginFactory_IdentityHashCodeNode#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ identity hash code node register plugins:::plugins->new->Plugin_IdentityHashCodeNode_identityHashCode->register
Plugin_Log_log__0#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ log_log__0 execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->return->intrinsify
Plugin_Log_log__0#getSource()::: plugin_ log_log__0 get source:::return
Plugin_Log_log__1#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ log_log__1 execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->return->intrinsify
Plugin_Log_log__1#getSource()::: plugin_ log_log__1 get source:::return
Plugin_Log_printf#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ log_printf execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->arg6->return->intrinsify
Plugin_Log_printf#getSource()::: plugin_ log_printf get source:::return
PluginFactory_Log#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ log register plugins:::plugins->new->Plugin_Log_log__0->register->plugins->new->Plugin_Log_log__1->register->plugins->new->Plugin_Log_printf->register
Plugin_MonitorSnippets_bkpt#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ monitor snippets_bkpt execute:::arg0->arg1->arg2->arg3->node->new->org.graalvm.compiler.nodes.BreakpointNode->b->add->return
Plugin_MonitorSnippets_bkpt#getSource()::: plugin_ monitor snippets_bkpt get source:::return
Plugin_MonitorSnippets_doProfile#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ monitor snippets_do profile execute:::if->checkInjectedArgument->return->arg0->b->getOptions->result->doProfile->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_MonitorSnippets_doProfile#getSource()::: plugin_ monitor snippets_do profile get source:::return
Plugin_MonitorSnippets_monitorenterStubC#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ monitor snippets_monitorenter stub c execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->return->intrinsify
Plugin_MonitorSnippets_monitorenterStubC#getSource()::: plugin_ monitor snippets_monitorenter stub c get source:::return
Plugin_MonitorSnippets_monitorexitStubC#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ monitor snippets_monitorexit stub c execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->return->intrinsify
Plugin_MonitorSnippets_monitorexitStubC#getSource()::: plugin_ monitor snippets_monitorexit stub c get source:::return
Plugin_MonitorSnippets_useFastInflatedLocking#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ monitor snippets_use fast inflated locking execute:::if->checkInjectedArgument->return->arg0->b->getOptions->result->useFastInflatedLocking->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_MonitorSnippets_useFastInflatedLocking#getSource()::: plugin_ monitor snippets_use fast inflated locking get source:::return
Plugin_MonitorSnippets_verifyBalancedMonitors#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ monitor snippets_verify balanced monitors execute:::if->checkInjectedArgument->return->arg0->b->getOptions->result->verifyBalancedMonitors->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_MonitorSnippets_verifyBalancedMonitors#getSource()::: plugin_ monitor snippets_verify balanced monitors get source:::return
PluginFactory_MonitorSnippets#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ monitor snippets register plugins:::plugins->new->Plugin_MonitorSnippets_bkpt->register->plugins->new->Plugin_MonitorSnippets_doProfile->register->plugins->new->Plugin_MonitorSnippets_monitorenterStubC->register->plugins->new->Plugin_MonitorSnippets_monitorexitStubC->register->plugins->new->Plugin_MonitorSnippets_useFastInflatedLocking->register->plugins->new->Plugin_MonitorSnippets_verifyBalancedMonitors->register
Plugin_NewObjectSnippets_createName#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_create name execute:::if->checkInjectedArgument->return->arg0->b->getOptions->arg1->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->result->createName->constant->b->getConstantReflection->forString->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_NewObjectSnippets_createName#getSource()::: plugin_ new object snippets_create name get source:::return
Plugin_NewObjectSnippets_doProfile#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_do profile execute:::if->checkInjectedArgument->return->arg0->b->getOptions->result->doProfile->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_NewObjectSnippets_doProfile#getSource()::: plugin_ new object snippets_do profile get source:::return
Plugin_NewObjectSnippets_dynamicNewInstance#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_dynamic new instance execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->return->intrinsify
Plugin_NewObjectSnippets_dynamicNewInstance#getSource()::: plugin_ new object snippets_dynamic new instance get source:::return
Plugin_NewObjectSnippets_dynamicNewInstanceOrNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_dynamic new instance or null execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->return->intrinsify
Plugin_NewObjectSnippets_dynamicNewInstanceOrNull#getSource()::: plugin_ new object snippets_dynamic new instance or null get source:::return
Plugin_NewObjectSnippets_getMinimalBulkZeroingSize#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_get minimal bulk zeroing size execute:::if->checkInjectedArgument->return->arg0->b->getOptions->result->getMinimalBulkZeroingSize->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_NewObjectSnippets_getMinimalBulkZeroingSize#getSource()::: plugin_ new object snippets_get minimal bulk zeroing size get source:::return
Plugin_NewObjectSnippets_newArray#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_new array execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->return->intrinsify
Plugin_NewObjectSnippets_newArray#getSource()::: plugin_ new object snippets_new array get source:::return
Plugin_NewObjectSnippets_newArrayOrNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_new array or null execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->return->intrinsify
Plugin_NewObjectSnippets_newArrayOrNull#getSource()::: plugin_ new object snippets_new array or null get source:::return
Plugin_NewObjectSnippets_newInstance#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_new instance execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->return->intrinsify
Plugin_NewObjectSnippets_newInstance#getSource()::: plugin_ new object snippets_new instance get source:::return
Plugin_NewObjectSnippets_newInstanceOrNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_new instance or null execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->return->intrinsify
Plugin_NewObjectSnippets_newInstanceOrNull#getSource()::: plugin_ new object snippets_new instance or null get source:::return
Plugin_NewObjectSnippets_newMultiArray#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_new multi array execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->return->intrinsify
Plugin_NewObjectSnippets_newMultiArray#getSource()::: plugin_ new object snippets_new multi array get source:::return
Plugin_NewObjectSnippets_newMultiArrayOrNull#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_new multi array or null execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->arg4->arg5->return->intrinsify
Plugin_NewObjectSnippets_newMultiArrayOrNull#getSource()::: plugin_ new object snippets_new multi array or null get source:::return
Plugin_NewObjectSnippets_useNullAllocationStubs#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_use null allocation stubs execute:::if->checkInjectedArgument->return->arg0->result->useNullAllocationStubs->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_NewObjectSnippets_useNullAllocationStubs#getSource()::: plugin_ new object snippets_use null allocation stubs get source:::return
Plugin_NewObjectSnippets_withContext#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ new object snippets_with context execute:::if->checkInjectedArgument->return->arg0->b->getOptions->result->withContext->constant->JavaConstant->forInt->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_NewObjectSnippets_withContext#getSource()::: plugin_ new object snippets_with context get source:::return
PluginFactory_NewObjectSnippets#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ new object snippets register plugins:::plugins->new->Plugin_NewObjectSnippets_createName->register->plugins->new->Plugin_NewObjectSnippets_doProfile->register->plugins->new->Plugin_NewObjectSnippets_dynamicNewInstance->register->plugins->new->Plugin_NewObjectSnippets_dynamicNewInstanceOrNull->register->plugins->new->Plugin_NewObjectSnippets_getMinimalBulkZeroingSize->register->plugins->new->Plugin_NewObjectSnippets_newArray->register->plugins->new->Plugin_NewObjectSnippets_newArrayOrNull->register->plugins->new->Plugin_NewObjectSnippets_newInstance->register->plugins->new->Plugin_NewObjectSnippets_newInstanceOrNull->register->plugins->new->Plugin_NewObjectSnippets_newMultiArray->register->plugins->new->Plugin_NewObjectSnippets_newMultiArrayOrNull->register->plugins->new->Plugin_NewObjectSnippets_useNullAllocationStubs->register->plugins->new->Plugin_NewObjectSnippets_withContext->register
Plugin_ObjectSubstitutions_fastNotifyStub#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ object substitutions_fast notify stub execute:::arg0->arg1->arg2->if->isConstant->snippetReflection->asJavaConstant->asObject->else->return->arg3->return->intrinsify
Plugin_ObjectSubstitutions_fastNotifyStub#getSource()::: plugin_ object substitutions_fast notify stub get source:::return
PluginFactory_ObjectSubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ object substitutions register plugins:::plugins->new->Plugin_ObjectSubstitutions_fastNotifyStub->register
Plugin_SHA2Substitutions_stateOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ a2 substitutions_state offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->stateOffset->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_SHA2Substitutions_stateOffset#getSource()::: plugin_ a2 substitutions_state offset get source:::return
PluginFactory_SHA2Substitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ a2 substitutions register plugins:::plugins->new->Plugin_SHA2Substitutions_stateOffset->register
Plugin_SHA5Substitutions_stateOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ a5 substitutions_state offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->stateOffset->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_SHA5Substitutions_stateOffset#getSource()::: plugin_ a5 substitutions_state offset get source:::return
PluginFactory_SHA5Substitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ a5 substitutions register plugins:::plugins->new->Plugin_SHA5Substitutions_stateOffset->register
Plugin_SHASubstitutions_stateOffset#execute(GraphBuilderContext, ResolvedJavaMethod, InvocationPlugin.Receiver, ValueNode[])::: plugin_ substitutions_state offset execute:::if->checkInjectedArgument->return->arg0->b->getIntrinsic->result->stateOffset->constant->JavaConstant->forLong->node->ConstantNode->b->getMetaAccess->b->getGraph->forConstant->b->push->b->notifyReplacedCall->return
Plugin_SHASubstitutions_stateOffset#getSource()::: plugin_ substitutions_state offset get source:::return
PluginFactory_SHASubstitutions#registerPlugins(InvocationPlugins, NodeIntrinsicPluginFactory.InjectionProvider)::: plugin factory_ substitutions register plugins:::plugins->new->Plugin_SHASubstitutions_stateOffset->register
AESCryptSubstitutions#kOffset(IntrinsicContext)::: crypt substitutions k offset:::return->HotSpotReplacementsUtil->aesCryptType->getFieldOffset
AESCryptSubstitutions#lastKeyOffset(IntrinsicContext)::: crypt substitutions last key offset:::return->HotSpotReplacementsUtil->aesCryptType->getFieldOffset
AESCryptSubstitutions#encryptBlock(Object, byte[], int, byte[], int)::: crypt substitutions encrypt block:::crypt
AESCryptSubstitutions#implEncryptBlock(Object, byte[], int, byte[], int)::: crypt substitutions impl encrypt block:::crypt
AESCryptSubstitutions#decryptBlock(Object, byte[], int, byte[], int)::: crypt substitutions decrypt block:::crypt
AESCryptSubstitutions#implDecryptBlock(Object, byte[], int, byte[], int)::: crypt substitutions impl decrypt block:::crypt
AESCryptSubstitutions#decryptBlockWithOriginalKey(Object, byte[], int, byte[], int):::Variation for platforms (e.g:::crypt
AESCryptSubstitutions#implDecryptBlockWithOriginalKey(Object, byte[], int, byte[], int)::: crypt substitutions impl decrypt block with original key:::crypt
AESCryptSubstitutions#crypt(Object, byte[], int, byte[], int, boolean, boolean)::: crypt substitutions crypt:::checkArgs->realReceiver->PiNode->aesCryptType->piCastNonNull->kObject->RawLoadNode->kOffset->LocationIdentity->any->load->kAddr->Word->objectToTrackedPointer->getArrayBaseOffset->add->inAddr->WordFactory->ComputeObjectAddressNode->getArrayBaseOffset->get->unsigned->outAddr->WordFactory->ComputeObjectAddressNode->getArrayBaseOffset->get->unsigned->if->encryptBlockStub->else->if->lastKeyObject->RawLoadNode->lastKeyOffset->LocationIdentity->any->load->lastKeyAddr->Word->objectToTrackedPointer->getArrayBaseOffset->add->decryptBlockWithOriginalKeyStub->else->decryptBlockStub
AESCryptSubstitutions#checkArgs(byte[], int, byte[], int):::Perform null and array bounds checks for arguments to a cipher operation.:::if->probability->DeoptimizeNode->deopt
AESCryptSubstitutions#encryptBlockStub(ForeignCallDescriptor, Word, Word, Pointer)::: crypt substitutions encrypt block stub:::
AESCryptSubstitutions#decryptBlockStub(ForeignCallDescriptor, Word, Word, Pointer)::: crypt substitutions decrypt block stub:::
AESCryptSubstitutions#decryptBlockWithOriginalKeyStub(ForeignCallDescriptor, Word, Word, Pointer, Pointer)::: crypt substitutions decrypt block with original key stub:::
ArraysSupportSubstitutions#vectorizedMismatch(Object, long, Object, long, int, int)::: arrays support substitutions vectorized mismatch:::aAddr->WordFactory->ComputeObjectAddressNode->get->unsigned->bAddr->WordFactory->ComputeObjectAddressNode->get->unsigned->return->HotSpotBackend->vectorizedMismatch
AssertionSnippets#assertion(boolean, String)::: assertion snippets assertion:::if->cstring->vmMessageC
AssertionSnippets#stubAssertion(boolean, String)::: assertion snippets stub assertion:::if->cstring->vmMessageC
AssertionSnippets#vmMessageC(ForeignCallDescriptor, boolean, Word, long, long, long)::: assertion snippets vm message c:::
AssertionSnippets.Templates#lower(AssertionNode, LoweringTool)::: templates lower:::graph->assertionNode->graph->args->graph->start->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->assertionNode->condition->add->args->assertionNode->message->graph->method->addConst->template->providers->getMetaAccess->instantiate
BigIntegerSubstitutions#multiplyToLen(Object, int[], int, int[], int, int[])::: big integer substitutions multiply to len:::return->multiplyToLenStatic
BigIntegerSubstitutions#multiplyToLenStatic(int[], int, int[], int, int[])::: big integer substitutions multiply to len static:::zResult->zLen->if->new->intArr->else->HotSpotBackend->arrayStart->arrayStart->arrayStart->multiplyToLenStub->return
BigIntegerSubstitutions#mulAdd(int[], int[], int, int, int)::: big integer substitutions mul add:::outNonNull->GraalDirectives->guardingNonNull->newOffset->return->HotSpotBackend->arrayStart->arrayStart->mulAddStub
BigIntegerSubstitutions#implMulAdd(int[], int[], int, int, int)::: big integer substitutions impl mul add:::outNonNull->GraalDirectives->guardingNonNull->newOffset->return->HotSpotBackend->arrayStart->arrayStart->mulAddStub
BigIntegerSubstitutions#implMontgomeryMultiply(int[], int[], int[], int, long, int[])::: big integer substitutions impl montgomery multiply:::HotSpotBackend->arrayStart->arrayStart->arrayStart->arrayStart->implMontgomeryMultiply->return
BigIntegerSubstitutions#implMontgomerySquare(int[], int[], int, long, int[])::: big integer substitutions impl montgomery square:::HotSpotBackend->arrayStart->arrayStart->arrayStart->implMontgomerySquare->return
BigIntegerSubstitutions#implSquareToLen(int[], int, int[], int)::: big integer substitutions impl square to len:::HotSpotBackend->arrayStart->arrayStart->implSquareToLen->return
CallSiteTargetNode#getCallSite()::: call site target node get call site:::return->arguments->get
CallSiteTargetNode#tryFold(ValueNode, MetaAccessProvider, Assumptions)::: call site target node try fold:::if->callSite->isConstant->callSite->isNullConstant->c->callSite->asConstant->target->c->getCallSiteTarget->if->return->ConstantNode->forConstant->return
CallSiteTargetNode#canonical(CanonicalizerTool)::: call site target node canonical:::target->getCallSite->tool->getMetaAccess->graph->getAssumptions->tryFold->if->return->return
CallSiteTargetNode#lower(LoweringTool)::: call site target node lower:::target->getCallSite->tool->getMetaAccess->graph->getAssumptions->tryFold->if->graph->replaceFixedWithFloating->else->invoke->createInvoke->graph->replaceFixedWithFixed->invoke->lower
CipherBlockChainingSubstitutions#aesCryptType(IntrinsicContext)::: cipher block chaining substitutions aes crypt type:::return->HotSpotReplacementsUtil->getType
CipherBlockChainingSubstitutions#encrypt(Object, byte[], int, int, byte[], int)::: cipher block chaining substitutions encrypt:::realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->embeddedCipher->RawLoadNode->embeddedCipherOffset->LocationIdentity->any->load->if->aesCryptType->doInstanceof->aesCipher->aesCryptType->piCastNonNull->crypt->return->else->return->encrypt
CipherBlockChainingSubstitutions#embeddedCipherOffset(IntrinsicContext)::: cipher block chaining substitutions embedded cipher offset:::return->HotSpotReplacementsUtil->HotSpotReplacementsUtil->getType->getFieldOffset
CipherBlockChainingSubstitutions#rOffset(IntrinsicContext)::: cipher block chaining substitutions r offset:::return->HotSpotReplacementsUtil->HotSpotReplacementsUtil->methodHolderClass->getFieldOffset
CipherBlockChainingSubstitutions#implEncrypt(Object, byte[], int, int, byte[], int)::: cipher block chaining substitutions impl encrypt:::realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->embeddedCipher->RawLoadNode->embeddedCipherOffset->LocationIdentity->any->load->if->aesCryptType->doInstanceof->aesCipher->aesCryptType->piCastNonNull->crypt->return->else->return->implEncrypt
CipherBlockChainingSubstitutions#decrypt(Object, byte[], int, int, byte[], int)::: cipher block chaining substitutions decrypt:::realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->embeddedCipher->RawLoadNode->embeddedCipherOffset->LocationIdentity->any->load->if->aesCryptType->doInstanceof->aesCipher->aesCryptType->piCastNonNull->crypt->return->else->return->decrypt
CipherBlockChainingSubstitutions#implDecrypt(Object, byte[], int, int, byte[], int)::: cipher block chaining substitutions impl decrypt:::realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->embeddedCipher->RawLoadNode->embeddedCipherOffset->LocationIdentity->any->load->if->aesCryptType->doInstanceof->aesCipher->aesCryptType->piCastNonNull->crypt->return->else->return->implDecrypt
CipherBlockChainingSubstitutions#decryptWithOriginalKey(Object, byte[], int, int, byte[], int):::Variation for platforms (e.g:::realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->embeddedCipher->RawLoadNode->embeddedCipherOffset->LocationIdentity->any->load->if->aesCryptType->doInstanceof->aesCipher->aesCryptType->piCastNonNull->crypt->return->else->return->decryptWithOriginalKey
CipherBlockChainingSubstitutions#implDecryptWithOriginalKey(Object, byte[], int, int, byte[], int)::: cipher block chaining substitutions impl decrypt with original key:::realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->embeddedCipher->RawLoadNode->embeddedCipherOffset->LocationIdentity->any->load->if->aesCryptType->doInstanceof->aesCipher->aesCryptType->piCastNonNull->crypt->return->else->return->implDecryptWithOriginalKey
CipherBlockChainingSubstitutions#crypt(Object, byte[], int, int, byte[], int, Object, boolean, boolean)::: cipher block chaining substitutions crypt:::AESCryptSubstitutions->checkArgs->realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->aesCipher->aesCryptType->piCastNonNull->kObject->RawLoadNode->AESCryptSubstitutions->kOffset->LocationIdentity->any->load->rObject->RawLoadNode->rOffset->LocationIdentity->any->load->kAddr->Word->objectToTrackedPointer->ReplacementsUtil->getArrayBaseOffset->add->rAddr->Word->objectToTrackedPointer->ReplacementsUtil->getArrayBaseOffset->add->inAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->outAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->if->encryptAESCryptStub->else->if->lastKeyObject->RawLoadNode->AESCryptSubstitutions->lastKeyOffset->LocationIdentity->any->load->lastKeyAddr->Word->objectToTrackedPointer->ReplacementsUtil->getArrayBaseOffset->add->decryptAESCryptWithOriginalKeyStub->else->decryptAESCryptStub
CipherBlockChainingSubstitutions#encryptAESCryptStub(ForeignCallDescriptor, Word, Word, Pointer, Pointer, int)::: cipher block chaining substitutions encrypt crypt stub:::
CipherBlockChainingSubstitutions#decryptAESCryptStub(ForeignCallDescriptor, Word, Word, Pointer, Pointer, int)::: cipher block chaining substitutions decrypt crypt stub:::
CipherBlockChainingSubstitutions#decryptAESCryptWithOriginalKeyStub(ForeignCallDescriptor, Word, Word, Pointer, Pointer, int, Pointer)::: cipher block chaining substitutions decrypt crypt with original key stub:::
ClassGetHubNode#create(ValueNode, MetaAccessProvider, ConstantReflectionProvider, boolean)::: class get hub node create:::return->KlassPointerStamp->klass->canonical
ClassGetHubNode#intrinsify(GraphBuilderContext, ResolvedJavaMethod, ValueNode)::: class get hub node intrinsify:::clazzValue->b->getMetaAccess->b->getConstantReflection->create->b->b->append->push->return
ClassGetHubNode#canonical(ClassGetHubNode, MetaAccessProvider, ConstantReflectionProvider, boolean, Stamp, ValueNode)::: class get hub node canonical:::self->if->self->hasNoUsages->return->else->if->clazz->isConstant->clazz->isNullConstant->if->exactType->constantReflection->clazz->asJavaConstant->asJavaType->if->exactType->isPrimitive->return->ConstantNode->forConstant->else->return->ConstantNode->constantReflection->asObjectHub->forConstant->if->getClass->return->KlassPointerStamp->klassNonNull->getClass->getObject->new->LoadHubNode->if->return->getHub->if->new->ClassGetHubNode->return
ClassGetHubNode#canonical(CanonicalizerTool)::: class get hub node canonical:::return->tool->getMetaAccess->tool->getConstantReflection->tool->allUsagesAvailable->stamp->canonical
ClassGetHubNode#lower(LoweringTool)::: class get hub node lower:::tool->getLowerer->lower
ClassGetHubNode#readClass(Class)::: class get hub node read class:::
ClassGetHubNode#piCastNonNull(Object, GuardingNode)::: class get hub node pi cast non null:::
ClassGetHubNode#getValue()::: class get hub node get value:::return
ClassGetHubNode#convert(Constant, ConstantReflectionProvider)::: class get hub node convert:::exactType->constantReflection->asJavaType->if->exactType->isPrimitive->return->else->return->constantReflection->asObjectHub
ClassGetHubNode#reverse(Constant, ConstantReflectionProvider)::: class get hub node reverse:::objectType->constantReflection->asJavaType->return->constantReflection->asJavaClass
ClassGetHubNode#isLossless()::: class get hub node is lossless:::return
ClassGetHubNode#mayNullCheckSkipConversion():::There is more than one java.lang.Class value that has a NULL hub.:::return
ClassGetHubNode#preservesOrder(CanonicalCondition, Constant, ConstantReflectionProvider)::: class get hub node preserves order:::exactType->constantReflection->asJavaType->return->exactType->isPrimitive
CounterModeSubstitutions#implCrypt(Object, byte[], int, int, byte[], int)::: counter mode substitutions impl crypt:::realReceiver->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->embeddedCipher->RawLoadNode->embeddedCipherOffset->LocationIdentity->any->load->aesCipher->aesCryptType->piCastNonNull->srcAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->dstAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->usedPtr->WordFactory->ComputeObjectAddressNode->usedOffset->get->unsigned->cntOffset->counterOffset->encCntOffset->encCounterOffset->kObject->RawLoadNode->AESCryptSubstitutions->kOffset->LocationIdentity->any->load->cntObj->RawLoadNode->LocationIdentity->any->load->encCntObj->RawLoadNode->LocationIdentity->any->load->kPtr->Word->objectToTrackedPointer->ReplacementsUtil->getArrayBaseOffset->add->cntPtr->Word->objectToTrackedPointer->ReplacementsUtil->getArrayBaseOffset->add->encCntPtr->Word->objectToTrackedPointer->ReplacementsUtil->getArrayBaseOffset->add->return->HotSpotBackend->counterModeAESCrypt
CounterModeSubstitutions#counterModeType(IntrinsicContext)::: counter mode substitutions counter mode type:::return->HotSpotReplacementsUtil->getType
CounterModeSubstitutions#counterOffset(IntrinsicContext)::: counter mode substitutions counter offset:::return->HotSpotReplacementsUtil->counterModeType->getFieldOffset
CounterModeSubstitutions#encCounterOffset(IntrinsicContext)::: counter mode substitutions enc counter offset:::return->HotSpotReplacementsUtil->counterModeType->getFieldOffset
CounterModeSubstitutions#usedOffset(IntrinsicContext)::: counter mode substitutions used offset:::return->HotSpotReplacementsUtil->counterModeType->getFieldOffset
CRC32CSubstitutions#updateBytes(int, byte[], int, int)::: c32 substitutions update bytes:::bufAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->return->updateBytesCRC32
CRC32CSubstitutions#updateDirectByteBuffer(int, long, int, int)::: c32 substitutions update direct byte buffer:::bufAddr->WordFactory->unsigned->add->return->updateBytesCRC32
CRC32CSubstitutions#updateBytesCRC32(ForeignCallDescriptor, int, WordBase, int)::: c32 substitutions update bytes c32:::
CRC32Substitutions#update(int, int):::Removed in 9.:::crcTableRawAddress->WordFactory->GraalHotSpotVMConfigNode->crcTableAddress->pointer->c->index->offset->result->crcTableRawAddress->readInt->return
CRC32Substitutions#updateBytes(int, byte[], int, int):::Removed in 9.:::bufAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->return->updateBytesCRC32
CRC32Substitutions#updateBytes0(int, byte[], int, int)::: c32 substitutions update bytes0:::bufAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->return->updateBytesCRC32
CRC32Substitutions#updateByteBuffer(int, long, int, int):::Removed in 9.:::bufAddr->WordFactory->unsigned->add->return->updateBytesCRC32
CRC32Substitutions#updateByteBuffer0(int, long, int, int)::: c32 substitutions update byte buffer0:::bufAddr->WordFactory->unsigned->add->return->updateBytesCRC32
CRC32Substitutions#updateBytesCRC32(ForeignCallDescriptor, int, WordBase, int)::: c32 substitutions update bytes c32:::
DigestBaseSubstitutions#implCompressMultiBlock0(Object, byte[], int, int)::: digest base substitutions impl compress multi block0:::realReceiver->PiNode->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->sha1type->HotSpotReplacementsUtil->getType->sha256type->HotSpotReplacementsUtil->getType->sha512type->HotSpotReplacementsUtil->getType->bufAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->if->useSHA1Intrinsics->doInstanceof->sha1obj->PiNode->piCastNonNull->state->RawLoadNode->HotSpotReplacementsUtil->getFieldOffset->LocationIdentity->any->load->stateAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->return->HotSpotBackend->shaImplCompressMBStub->else->if->useSHA256Intrinsics->doInstanceof->sha256obj->PiNode->piCastNonNull->state->RawLoadNode->HotSpotReplacementsUtil->getFieldOffset->LocationIdentity->any->load->stateAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->return->HotSpotBackend->sha2ImplCompressMBStub->else->if->useSHA512Intrinsics->doInstanceof->sha512obj->PiNode->piCastNonNull->state->RawLoadNode->HotSpotReplacementsUtil->getFieldOffset->LocationIdentity->any->load->stateAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->return->HotSpotBackend->sha5ImplCompressMBStub->else->return->implCompressMultiBlock0
DigestBaseSubstitutions#useSHA1Intrinsics(GraalHotSpotVMConfig)::: digest base substitutions use a1 intrinsics:::return->config->useSHA1Intrinsics
DigestBaseSubstitutions#useSHA256Intrinsics(GraalHotSpotVMConfig)::: digest base substitutions use a256 intrinsics:::return->config->useSHA256Intrinsics
DigestBaseSubstitutions#useSHA512Intrinsics(GraalHotSpotVMConfig)::: digest base substitutions use a512 intrinsics:::return->config->useSHA512Intrinsics
EncodedSymbolConstant#getSerializedSize()::: encoded symbol constant get serialized size:::return->getEncodedConstant
EncodedSymbolConstant#serialize(ByteBuffer)::: encoded symbol constant serialize:::buffer->getEncodedConstant->put
EncodedSymbolConstant#toUTF8String(String):::Converts a string to a byte array with modified UTF-8 encoding:::try->bytes->new->ByteArrayOutputStream->stream->new->DataOutputStream->stream->writeUTF->return->bytes->toByteArray->catch->throw->new->PermanentBailoutException->finally
EncodedSymbolConstant#encodeConstant(Constant)::: encoded symbol constant encode constant:::if->return->asObject->toUTF8String->else->if->metaspaceConstant->klass->metaspaceConstant->asResolvedJavaType->if->return->klass->getName->toUTF8String->method->metaspaceConstant->asResolvedJavaMethod->if->methodName->method->getName->toUTF8String->signature->method->getSignature->toMethodDescriptor->toUTF8String->result->new->byteArr->resultPos->System->arraycopy->System->arraycopy->return->throw->new->PermanentBailoutException
EncodedSymbolConstant#getEncodedConstant()::: encoded symbol constant get encoded constant:::if->encodeConstant->return
EncodedSymbolConstant#toValueString()::: encoded symbol constant to value string:::return->constant->toValueString
HashCodeSnippets#identityHashCodeSnippet(Object)::: hash code snippets identity hash code snippet:::if->probability->return->return->computeHashCode
HashCodeSnippets#computeHashCode(Object)::: hash code snippets compute hash code:::mark->markOffset->loadWordFromObject->biasedLock->mark->biasedLockMaskInPlace->and->if->biasedLock->WordFactory->unlockedMask->unsigned->equal->probability->hash->mark->identityHashCodeShift->unsignedShiftRight->rawValue->if->uninitializedIdentityHashCodeValue->probability->return->return->identityHashCode
HashCodeSnippets.Templates#lower(IdentityHashCodeNode, LoweringTool)::: templates lower:::graph->node->graph->args->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->add->template->template->template->providers->getMetaAccess->instantiate
HotSpotArraySubstitutions#newInstance(Class, int)::: hot spot array substitutions new instance:::if->arrayKlassOffset->loadKlassFromObject->isNull->return->newInstance->return->DynamicNewArrayNode->GraalDirectives->guardingNonNull->newArray
HotSpotClassSubstitutions#getModifiers(Class)::: hot spot class substitutions get modifiers:::klass->ClassGetHubNode->readClass->if->klass->isNull->return->else->return->klass->klassModifierFlagsOffset->readInt
HotSpotClassSubstitutions#isInterface(Class)::: hot spot class substitutions is interface:::klass->ClassGetHubNode->readClass->if->klass->isNull->return->else->accessFlags->klass->klassAccessFlagsOffset->readInt->return
HotSpotClassSubstitutions#isArray(Class)::: hot spot class substitutions is array:::klass->ClassGetHubNode->readClass->if->klass->isNull->return->else->klassNonNull->ClassGetHubNode->SnippetAnchorNode->anchor->piCastNonNull->return->klassIsArray
HotSpotClassSubstitutions#isPrimitive(Class)::: hot spot class substitutions is primitive:::klass->ClassGetHubNode->readClass->return->klass->isNull
HotSpotClassSubstitutions#getObjectType(MetaAccessProvider)::: hot spot class substitutions get object type:::return->metaAccesss->lookupJavaType
HotSpotClassSubstitutions#getSuperclass(Class)::: hot spot class substitutions get superclass:::klass->ClassGetHubNode->readClass->if->klass->isNull->klassNonNull->ClassGetHubNode->SnippetAnchorNode->anchor->piCastNonNull->accessFlags->klassNonNull->klassAccessFlagsOffset->readInt->if->if->klassIsArray->return->ConstantNode->getObjectType->forClass->else->superKlass->klassNonNull->klassSuperKlassOffset->readKlassPointer->if->superKlass->isNull->return->else->superKlassNonNull->ClassGetHubNode->SnippetAnchorNode->anchor->piCastNonNull->return->HubGetClassNode->readClass->else->return
HotSpotClassSubstitutions#getComponentType(Class)::: hot spot class substitutions get component type:::klass->ClassGetHubNode->readClass->if->klass->isNull->klassNonNull->ClassGetHubNode->SnippetAnchorNode->anchor->piCastNonNull->if->klassIsArray->return->PiNode->klassNonNull->arrayKlassComponentMirrorOffset->readObject->asNonNullClass->else->return
HotSpotG1WriteBarrierSnippets#getThread()::: hot spot g1 write barrier snippets get thread:::return->HotSpotReplacementsUtil->registerAsWord
HotSpotG1WriteBarrierSnippets#wordSize()::: hot spot g1 write barrier snippets word size:::return->HotSpotReplacementsUtil->wordSize
HotSpotG1WriteBarrierSnippets#objectArrayIndexScale()::: hot spot g1 write barrier snippets object array index scale:::return->ReplacementsUtil->arrayIndexScale
HotSpotG1WriteBarrierSnippets#satbQueueMarkingOffset()::: hot spot g1 write barrier snippets satb queue marking offset:::return->HotSpotReplacementsUtil->g1SATBQueueMarkingOffset
HotSpotG1WriteBarrierSnippets#satbQueueBufferOffset()::: hot spot g1 write barrier snippets satb queue buffer offset:::return->HotSpotReplacementsUtil->g1SATBQueueBufferOffset
HotSpotG1WriteBarrierSnippets#satbQueueIndexOffset()::: hot spot g1 write barrier snippets satb queue index offset:::return->HotSpotReplacementsUtil->g1SATBQueueIndexOffset
HotSpotG1WriteBarrierSnippets#cardQueueBufferOffset()::: hot spot g1 write barrier snippets card queue buffer offset:::return->HotSpotReplacementsUtil->g1CardQueueBufferOffset
HotSpotG1WriteBarrierSnippets#cardQueueIndexOffset()::: hot spot g1 write barrier snippets card queue index offset:::return->HotSpotReplacementsUtil->g1CardQueueIndexOffset
HotSpotG1WriteBarrierSnippets#dirtyCardValue()::: hot spot g1 write barrier snippets dirty card value:::return->HotSpotReplacementsUtil->dirtyCardValue
HotSpotG1WriteBarrierSnippets#youngCardValue()::: hot spot g1 write barrier snippets young card value:::return->HotSpotReplacementsUtil->g1YoungCardValue
HotSpotG1WriteBarrierSnippets#cardTableAddress()::: hot spot g1 write barrier snippets card table address:::return->WordFactory->GraalHotSpotVMConfigNode->cardTableAddress->unsigned
HotSpotG1WriteBarrierSnippets#cardTableShift()::: hot spot g1 write barrier snippets card table shift:::return->HotSpotReplacementsUtil->cardTableShift
HotSpotG1WriteBarrierSnippets#logOfHeapRegionGrainBytes()::: hot spot g1 write barrier snippets log of heap region grain bytes:::return->GraalHotSpotVMConfigNode->logOfHeapRegionGrainBytes
HotSpotG1WriteBarrierSnippets#preWriteBarrierCallDescriptor()::: hot spot g1 write barrier snippets pre write barrier call descriptor:::return
HotSpotG1WriteBarrierSnippets#postWriteBarrierCallDescriptor()::: hot spot g1 write barrier snippets post write barrier call descriptor:::return
HotSpotG1WriteBarrierSnippets#verifyOops()::: hot spot g1 write barrier snippets verify oops:::return->HotSpotReplacementsUtil->verifyOops
HotSpotG1WriteBarrierSnippets#verifyBarrier()::: hot spot g1 write barrier snippets verify barrier:::return
HotSpotG1WriteBarrierSnippets#gcTotalCollectionsAddress()::: hot spot g1 write barrier snippets gc total collections address:::return->HotSpotReplacementsUtil->gcTotalCollectionsAddress
HotSpotG1WriteBarrierSnippets#verifyOopCallDescriptor()::: hot spot g1 write barrier snippets verify oop call descriptor:::return
HotSpotG1WriteBarrierSnippets#validateObjectCallDescriptor()::: hot spot g1 write barrier snippets validate object call descriptor:::return
HotSpotG1WriteBarrierSnippets#printfCallDescriptor()::: hot spot g1 write barrier snippets printf call descriptor:::return
HotSpotG1WriteBarrierSnippets.Templates#lower(G1PreWriteBarrier, LoweringTool)::: templates lower:::lowerer->lower
HotSpotG1WriteBarrierSnippets.Templates#lower(G1ReferentFieldReadBarrier, LoweringTool)::: templates lower:::lowerer->lower
HotSpotG1WriteBarrierSnippets.Templates#lower(G1PostWriteBarrier, LoweringTool)::: templates lower:::lowerer->lower
HotSpotG1WriteBarrierSnippets.Templates#lower(G1ArrayRangePreWriteBarrier, LoweringTool)::: templates lower:::lowerer->lower
HotSpotG1WriteBarrierSnippets.Templates#lower(G1ArrayRangePostWriteBarrier, LoweringTool)::: templates lower:::lowerer->lower
HotSpotG1WriteBarrierSnippets.HotspotG1WriteBarrierLowerer#uncompress(ValueNode)::: hotspot g1 write barrier lowerer uncompress:::return->HotSpotCompressionNode->uncompress
HotSpotReplacementsUtil.HotSpotOptimizingLocationIdentity#canonicalizeRead(ValueNode, AddressNode, ValueNode, CanonicalizerTool)::: hot spot optimizing location identity canonicalize read:::
HotSpotReplacementsUtil.HotSpotOptimizingLocationIdentity#findReadHub(ValueNode)::: hot spot optimizing location identity find read hub:::base->if->getValue->if->access->if->access->getLocationIdentity->equals->access->getLocationIdentity->equals->address->access->getAddress->if->offset->return->offset->getBase->else->if->loadhub->return->loadhub->getValue->return
HotSpotReplacementsUtil.HotSpotOptimizingLocationIdentity#foldIndirection(ValueNode, ValueNode, LocationIdentity):::Fold reads that convert from Class -> Hub -> Class or vice versa.:::if->access->if->access->getLocationIdentity->equals->address->access->getAddress->if->offset->return->offset->getBase->return
HotSpotReplacementsUtil#methodHolderClass(IntrinsicContext)::: hot spot replacements util method holder class:::return->context->getOriginalMethod->getDeclaringClass
HotSpotReplacementsUtil#getType(IntrinsicContext, String)::: hot spot replacements util get type:::try->unresolved->UnresolvedJavaType->create->return->unresolved->methodHolderClass->resolve->catch->throw->new->GraalError->finally
HotSpotReplacementsUtil#getFieldOffset(ResolvedJavaType, String)::: hot spot replacements util get field offset:::foreach->type->getInstanceFields->if->field->getName->equals->return->field->getOffset->throw->new->GraalError
HotSpotReplacementsUtil#runtime()::: hot spot replacements util runtime:::return->HotSpotJVMCIRuntime->runtime
HotSpotReplacementsUtil#getHeapWordSize(GraalHotSpotVMConfig)::: hot spot replacements util get heap word size:::return
HotSpotReplacementsUtil#klassLayoutHelperNeutralValue(GraalHotSpotVMConfig)::: hot spot replacements util klass layout helper neutral value:::return
HotSpotReplacementsUtil#useTLAB(GraalHotSpotVMConfig)::: hot spot replacements util use b:::return
HotSpotReplacementsUtil#verifyOops(GraalHotSpotVMConfig)::: hot spot replacements util verify oops:::return
HotSpotReplacementsUtil#threadExceptionOopOffset(GraalHotSpotVMConfig)::: hot spot replacements util thread exception oop offset:::return
HotSpotReplacementsUtil#threadExceptionPcOffset(GraalHotSpotVMConfig)::: hot spot replacements util thread exception pc offset:::return
HotSpotReplacementsUtil#threadTlabTopOffset(GraalHotSpotVMConfig)::: hot spot replacements util thread tlab top offset:::return->config->threadTlabTopOffset
HotSpotReplacementsUtil#threadTlabEndOffset(GraalHotSpotVMConfig)::: hot spot replacements util thread tlab end offset:::return->config->threadTlabEndOffset
HotSpotReplacementsUtil#threadPendingExceptionOffset(GraalHotSpotVMConfig)::: hot spot replacements util thread pending exception offset:::return
HotSpotReplacementsUtil#readExceptionOop(Word)::: hot spot replacements util read exception oop:::return->thread->threadExceptionOopOffset->readObject
HotSpotReplacementsUtil#readExceptionPc(Word)::: hot spot replacements util read exception pc:::return->thread->threadExceptionPcOffset->readWord
HotSpotReplacementsUtil#writeExceptionOop(Word, Object)::: hot spot replacements util write exception oop:::thread->threadExceptionOopOffset->writeObject
HotSpotReplacementsUtil#writeExceptionPc(Word, Word)::: hot spot replacements util write exception pc:::thread->threadExceptionPcOffset->writeWord
HotSpotReplacementsUtil#readTlabTop(Word)::: hot spot replacements util read tlab top:::return->thread->threadTlabTopOffset->readWord
HotSpotReplacementsUtil#readTlabEnd(Word)::: hot spot replacements util read tlab end:::return->thread->threadTlabEndOffset->readWord
HotSpotReplacementsUtil#writeTlabTop(Word, Word)::: hot spot replacements util write tlab top:::thread->threadTlabTopOffset->writeWord
HotSpotReplacementsUtil#clearPendingException(Word):::Clears the pending exception for the given thread.:::result->thread->threadPendingExceptionOffset->readObject->thread->threadPendingExceptionOffset->writeObject->return
HotSpotReplacementsUtil#getPendingException(Word):::Gets the pending exception for the given thread.:::return->thread->threadPendingExceptionOffset->readObject
HotSpotReplacementsUtil#threadObjectOffset(GraalHotSpotVMConfig)::: hot spot replacements util thread object offset:::return
HotSpotReplacementsUtil#osThreadOffset(GraalHotSpotVMConfig)::: hot spot replacements util os thread offset:::return
HotSpotReplacementsUtil#osThreadInterruptedOffset(GraalHotSpotVMConfig)::: hot spot replacements util os thread interrupted offset:::return
HotSpotReplacementsUtil#getWordKind()::: hot spot replacements util get word kind:::return->runtime->getHostJVMCIBackend->getCodeCache->getTarget
HotSpotReplacementsUtil#wordSize()::: hot spot replacements util word size:::return->runtime->getHostJVMCIBackend->getCodeCache->getTarget
HotSpotReplacementsUtil#pageSize(GraalHotSpotVMConfig)::: hot spot replacements util page size:::return
HotSpotReplacementsUtil#prototypeMarkWordOffset(GraalHotSpotVMConfig)::: hot spot replacements util prototype mark word offset:::return
HotSpotReplacementsUtil#klassAccessFlagsOffset(GraalHotSpotVMConfig)::: hot spot replacements util klass access flags offset:::return
HotSpotReplacementsUtil#jvmAccWrittenFlags(GraalHotSpotVMConfig)::: hot spot replacements util jvm acc written flags:::return
HotSpotReplacementsUtil#allocatePrefetchStyle(GraalHotSpotVMConfig)::: hot spot replacements util allocate prefetch style:::return
HotSpotReplacementsUtil#allocatePrefetchLines(GraalHotSpotVMConfig)::: hot spot replacements util allocate prefetch lines:::return
HotSpotReplacementsUtil#allocatePrefetchDistance(GraalHotSpotVMConfig)::: hot spot replacements util allocate prefetch distance:::return
HotSpotReplacementsUtil#allocateInstancePrefetchLines(GraalHotSpotVMConfig)::: hot spot replacements util allocate instance prefetch lines:::return
HotSpotReplacementsUtil#allocatePrefetchStepSize(GraalHotSpotVMConfig)::: hot spot replacements util allocate prefetch step size:::return
HotSpotReplacementsUtil#invocationCounterIncrement(GraalHotSpotVMConfig)::: hot spot replacements util invocation counter increment:::return
HotSpotReplacementsUtil#invocationCounterOffset(GraalHotSpotVMConfig)::: hot spot replacements util invocation counter offset:::return
HotSpotReplacementsUtil#backedgeCounterOffset(GraalHotSpotVMConfig)::: hot spot replacements util backedge counter offset:::return
HotSpotReplacementsUtil#invocationCounterShift(GraalHotSpotVMConfig)::: hot spot replacements util invocation counter shift:::return
HotSpotReplacementsUtil#stackBias(GraalHotSpotVMConfig)::: hot spot replacements util stack bias:::return
HotSpotReplacementsUtil#readLayoutHelper(KlassPointer)::: hot spot replacements util read layout helper:::
HotSpotReplacementsUtil#klassIsArray(KlassPointer):::Checks if class klass is an array:::layoutHelper->readLayoutHelper->layoutHelperNeutralValue->klassLayoutHelperNeutralValue->return
HotSpotReplacementsUtil#arrayKlassComponentMirrorOffset(GraalHotSpotVMConfig)::: hot spot replacements util array klass component mirror offset:::return->config->getFieldOffset
HotSpotReplacementsUtil#klassSuperKlassOffset(GraalHotSpotVMConfig)::: hot spot replacements util klass super klass offset:::return
HotSpotReplacementsUtil#markOffset(GraalHotSpotVMConfig)::: hot spot replacements util mark offset:::return
HotSpotReplacementsUtil#hubOffset(GraalHotSpotVMConfig)::: hot spot replacements util hub offset:::return
HotSpotReplacementsUtil#initializeObjectHeader(Word, Word, KlassPointer)::: hot spot replacements util initialize object header:::memory->markOffset->writeWord->StoreHubNode->write
HotSpotReplacementsUtil#unlockedMask(GraalHotSpotVMConfig)::: hot spot replacements util unlocked mask:::return
HotSpotReplacementsUtil#monitorMask(GraalHotSpotVMConfig)::: hot spot replacements util monitor mask:::return
HotSpotReplacementsUtil#objectMonitorOwnerOffset(GraalHotSpotVMConfig)::: hot spot replacements util object monitor owner offset:::return
HotSpotReplacementsUtil#objectMonitorRecursionsOffset(GraalHotSpotVMConfig)::: hot spot replacements util object monitor recursions offset:::return
HotSpotReplacementsUtil#objectMonitorCxqOffset(GraalHotSpotVMConfig)::: hot spot replacements util object monitor cxq offset:::return
HotSpotReplacementsUtil#objectMonitorEntryListOffset(GraalHotSpotVMConfig)::: hot spot replacements util object monitor entry list offset:::return
HotSpotReplacementsUtil#objectMonitorSuccOffset(GraalHotSpotVMConfig)::: hot spot replacements util object monitor succ offset:::return
HotSpotReplacementsUtil#biasedLockMaskInPlace(GraalHotSpotVMConfig):::Mask for a biasable, locked or unlocked mark word:::return
HotSpotReplacementsUtil#epochMaskInPlace(GraalHotSpotVMConfig)::: hot spot replacements util epoch mask in place:::return
HotSpotReplacementsUtil#biasedLockPattern(GraalHotSpotVMConfig):::Pattern for a biasable, unlocked mark word:::return
HotSpotReplacementsUtil#ageMaskInPlace(GraalHotSpotVMConfig)::: hot spot replacements util age mask in place:::return
HotSpotReplacementsUtil#metaspaceArrayLengthOffset(GraalHotSpotVMConfig)::: hot spot replacements util metaspace array length offset:::return
HotSpotReplacementsUtil#metaspaceArrayBaseOffset(GraalHotSpotVMConfig)::: hot spot replacements util metaspace array base offset:::return
HotSpotReplacementsUtil#arrayLengthOffset(GraalHotSpotVMConfig)::: hot spot replacements util array length offset:::return->config->arrayOopDescLengthOffset
HotSpotReplacementsUtil#arrayStart(int[])::: hot spot replacements util array start:::return->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned
HotSpotReplacementsUtil#objectAlignment(GraalHotSpotVMConfig):::Idiom for making GraalHotSpotVMConfig a constant.:::return
HotSpotReplacementsUtil#arrayAllocationSize(int, int, int):::Calls #arrayAllocationSize(int, int, int, int) using an injected VM configuration object.:::return->objectAlignment->arrayAllocationSize
HotSpotReplacementsUtil#arrayAllocationSize(int, int, int, int):::Computes the size of the memory chunk allocated for an array:::size->mask->return
HotSpotReplacementsUtil#instanceHeaderSize(GraalHotSpotVMConfig)::: hot spot replacements util instance header size:::return->wordSize->wordSize
HotSpotReplacementsUtil#dirtyCardValue(GraalHotSpotVMConfig)::: hot spot replacements util dirty card value:::return
HotSpotReplacementsUtil#g1YoungCardValue(GraalHotSpotVMConfig)::: hot spot replacements util g1 young card value:::return
HotSpotReplacementsUtil#cardTableShift(GraalHotSpotVMConfig)::: hot spot replacements util card table shift:::return
HotSpotReplacementsUtil#g1CardQueueIndexOffset(GraalHotSpotVMConfig)::: hot spot replacements util g1 card queue index offset:::return
HotSpotReplacementsUtil#g1CardQueueBufferOffset(GraalHotSpotVMConfig)::: hot spot replacements util g1 card queue buffer offset:::return
HotSpotReplacementsUtil#g1SATBQueueMarkingOffset(GraalHotSpotVMConfig)::: hot spot replacements util g1 queue marking offset:::return
HotSpotReplacementsUtil#g1SATBQueueIndexOffset(GraalHotSpotVMConfig)::: hot spot replacements util g1 queue index offset:::return
HotSpotReplacementsUtil#g1SATBQueueBufferOffset(GraalHotSpotVMConfig)::: hot spot replacements util g1 queue buffer offset:::return
HotSpotReplacementsUtil#superCheckOffsetOffset(GraalHotSpotVMConfig)::: hot spot replacements util super check offset offset:::return
HotSpotReplacementsUtil#secondarySuperCacheOffset(GraalHotSpotVMConfig)::: hot spot replacements util secondary super cache offset:::return
HotSpotReplacementsUtil#secondarySupersOffset(GraalHotSpotVMConfig)::: hot spot replacements util secondary supers offset:::return
HotSpotReplacementsUtil#lockDisplacedMarkOffset(GraalHotSpotVMConfig)::: hot spot replacements util lock displaced mark offset:::return
HotSpotReplacementsUtil#useBiasedLocking(GraalHotSpotVMConfig)::: hot spot replacements util use biased locking:::return
HotSpotReplacementsUtil#uninitializedIdentityHashCodeValue(GraalHotSpotVMConfig)::: hot spot replacements util uninitialized identity hash code value:::return
HotSpotReplacementsUtil#identityHashCodeShift(GraalHotSpotVMConfig)::: hot spot replacements util identity hash code shift:::return
HotSpotReplacementsUtil#loadHub(Object):::Loads the hub of an object (without null checking it first).:::return->loadHubIntrinsic
HotSpotReplacementsUtil#verifyOop(Object)::: hot spot replacements util verify oop:::if->verifyOops->verifyOopStub->return
HotSpotReplacementsUtil#verifyOopStub(ForeignCallDescriptor, Object)::: hot spot replacements util verify oop stub:::
HotSpotReplacementsUtil#loadWordFromObject(Object, int)::: hot spot replacements util load word from object:::ReplacementsUtil->hubOffset->staticAssert->return->LocationIdentity->any->getWordKind->loadWordFromObjectIntrinsic
HotSpotReplacementsUtil#loadWordFromObject(Object, int, LocationIdentity)::: hot spot replacements util load word from object:::ReplacementsUtil->hubOffset->staticAssert->return->getWordKind->loadWordFromObjectIntrinsic
HotSpotReplacementsUtil#loadKlassFromObject(Object, int, LocationIdentity)::: hot spot replacements util load klass from object:::ReplacementsUtil->hubOffset->staticAssert->return->getWordKind->loadKlassFromObjectIntrinsic
HotSpotReplacementsUtil#registerAsWord(Register):::Reads the value of a given register.:::return->registerAsWord
HotSpotReplacementsUtil#registerAsWord(Register, boolean, boolean)::: hot spot replacements util register as word:::
HotSpotReplacementsUtil#writeRegisterAsWord(Register, Word)::: hot spot replacements util write register as word:::
HotSpotReplacementsUtil#loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind)::: hot spot replacements util load word from object intrinsic:::
HotSpotReplacementsUtil#loadKlassFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind)::: hot spot replacements util load klass from object intrinsic:::
HotSpotReplacementsUtil#loadHubIntrinsic(Object)::: hot spot replacements util load hub intrinsic:::
HotSpotReplacementsUtil#instanceKlassInitStateOffset(GraalHotSpotVMConfig)::: hot spot replacements util instance klass init state offset:::return
HotSpotReplacementsUtil#instanceKlassStateFullyInitialized(GraalHotSpotVMConfig)::: hot spot replacements util instance klass state fully initialized:::return
HotSpotReplacementsUtil#isInstanceKlassFullyInitialized(KlassPointer)::: hot spot replacements util is instance klass fully initialized:::return->readInstanceKlassState->instanceKlassStateFullyInitialized
HotSpotReplacementsUtil#readInstanceKlassState(KlassPointer)::: hot spot replacements util read instance klass state:::return->hub->instanceKlassInitStateOffset->readByte
HotSpotReplacementsUtil#klassModifierFlagsOffset(GraalHotSpotVMConfig)::: hot spot replacements util klass modifier flags offset:::return
HotSpotReplacementsUtil#arrayKlassOffset(GraalHotSpotVMConfig)::: hot spot replacements util array klass offset:::return
HotSpotReplacementsUtil#layoutHelperHeaderSizeShift(GraalHotSpotVMConfig)::: hot spot replacements util layout helper header size shift:::return
HotSpotReplacementsUtil#layoutHelperHeaderSizeMask(GraalHotSpotVMConfig)::: hot spot replacements util layout helper header size mask:::return
HotSpotReplacementsUtil#layoutHelperLog2ElementSizeShift(GraalHotSpotVMConfig)::: hot spot replacements util layout helper log2 element size shift:::return
HotSpotReplacementsUtil#layoutHelperLog2ElementSizeMask(GraalHotSpotVMConfig)::: hot spot replacements util layout helper log2 element size mask:::return
HotSpotReplacementsUtil#identityHashCode(ForeignCallDescriptor, Object)::: hot spot replacements util identity hash code:::
HotSpotReplacementsUtil#gcTotalCollectionsAddress(GraalHotSpotVMConfig)::: hot spot replacements util gc total collections address:::return->config->gcTotalCollectionsAddress
HotSpotReplacementsUtil#referentOffset(MetaAccessProvider)::: hot spot replacements util referent offset:::return->metaAccessProvider->lookupJavaType->getFieldOffset
HotSpotReplacementsUtil#arrayClassElementOffset(GraalHotSpotVMConfig)::: hot spot replacements util array class element offset:::return
HotSpotSerialWriteBarrierSnippets#cardTableAddress()::: hot spot serial write barrier snippets card table address:::return->WordFactory->GraalHotSpotVMConfigNode->cardTableAddress->unsigned
HotSpotSerialWriteBarrierSnippets#cardTableShift()::: hot spot serial write barrier snippets card table shift:::return->HotSpotReplacementsUtil->cardTableShift
HotSpotSerialWriteBarrierSnippets#verifyBarrier()::: hot spot serial write barrier snippets verify barrier:::return
HotSpotSerialWriteBarrierSnippets#dirtyCardValue()::: hot spot serial write barrier snippets dirty card value:::return
HotSpotSerialWriteBarrierSnippets.Templates#lower(SerialWriteBarrier, LoweringTool)::: templates lower:::lowerer->lower
HotSpotSerialWriteBarrierSnippets.Templates#lower(SerialArrayRangeWriteBarrier, LoweringTool)::: templates lower:::lowerer->lower
HubGetClassNode#getHub()::: hub get class node get hub:::return
HubGetClassNode#canonical(CanonicalizerTool)::: hub get class node canonical:::if->tool->allUsagesAvailable->hasNoUsages->return->else->metaAccess->tool->getMetaAccess->if->hub->isConstant->tool->getOptions->getValue->exactType->tool->getConstantReflection->hub->asConstant->asJavaType->if->return->ConstantNode->tool->getConstantReflection->asJavaClass->forConstant->return
HubGetClassNode#lower(LoweringTool)::: hub get class node lower:::tool->getLowerer->lower
HubGetClassNode#readClass(KlassPointer)::: hub get class node read class:::
HubGetClassNode#getValue()::: hub get class node get value:::return
HubGetClassNode#convert(Constant, ConstantReflectionProvider)::: hub get class node convert:::if->equals->return->return->constantReflection->constantReflection->asJavaType->asJavaClass
HubGetClassNode#reverse(Constant, ConstantReflectionProvider)::: hub get class node reverse:::if->equals->return->type->constantReflection->asJavaType->if->type->isPrimitive->return->else->return->constantReflection->asObjectHub
HubGetClassNode#isLossless():::Any concrete Klass* has a corresponding java.lang.Class.:::return
HubGetClassNode#mayNullCheckSkipConversion()::: hub get class node may null check skip conversion:::return
IdentityHashCodeNode#getLocationIdentity()::: identity hash code node get location identity:::return
IdentityHashCodeNode#canonical(CanonicalizerTool)::: identity hash code node canonical:::if->object->isConstant->c->object->asConstant->if->ImmutableCode->tool->getOptions->getValue->return->identityHashCode->if->c->isNull->JavaConstant->forInt->else->JavaConstant->getIdentityHashCode->forInt->return->StampFactory->forConstant->new->ConstantNode->return
IdentityHashCodeNode#lower(LoweringTool)::: identity hash code node lower:::tool->getLowerer->lower
IdentityHashCodeNode#identityHashCode(Object)::: identity hash code node identity hash code:::
InstanceOfSnippets#instanceofWithProfile(Object, KlassPointer[], boolean[], Object, Object, boolean, Counters):::A test against a set of hints derived from a profile with 100% precise coverage of seen types:::if->probability->inc->if->DeoptimizeNode->deopt->return->anchorNode->SnippetAnchorNode->anchor->objectHub->PiNode->piCastNonNull->loadHubIntrinsic->ExplodeLoopNode->explodeLoop->for->i->DeoptimizeNode->deopt->return
InstanceOfSnippets#instanceofExact(Object, KlassPointer, Object, Object, Counters):::A test against a final type.:::if->probability->inc->return->anchorNode->SnippetAnchorNode->anchor->objectHub->PiNode->piCastNonNull->loadHubIntrinsic->if->objectHub->notEqual->probability->inc->return->inc->return
InstanceOfSnippets#instanceofPrimary(KlassPointer, Object, int, Object, Object, Counters):::A test against a primary type.:::if->probability->inc->return->anchorNode->SnippetAnchorNode->anchor->objectHub->PiNode->piCastNonNull->loadHubIntrinsic->if->objectHub->readKlassPointer->notEqual->probability->inc->return->inc->return
InstanceOfSnippets#instanceofSecondary(KlassPointer, Object, KlassPointer[], boolean[], Object, Object, Counters):::A test against a restricted secondary type type.:::if->probability->inc->return->anchorNode->SnippetAnchorNode->anchor->objectHub->PiNode->piCastNonNull->loadHubIntrinsic->ExplodeLoopNode->explodeLoop->for->i->inc->if->checkSecondarySubType->return->return
InstanceOfSnippets#instanceofDynamic(KlassPointer, Object, Object, Object, boolean, Counters):::Type test used when the type being tested against is not known at compile time.:::if->probability->inc->if->return->else->return->anchorNode->SnippetAnchorNode->anchor->nonNullObjectHub->PiNode->piCastNonNull->loadHubIntrinsic->if->BranchProbabilityNode->hub->isNull->probability->if->checkUnknownSubType->return->return
InstanceOfSnippets#isAssignableFrom(Class, Class, Object, Object, Counters)::: instance of snippets is assignable from:::if->DeoptimizeNode->deopt->return->anchorNode->SnippetAnchorNode->anchor->otherClassNonNull->PiNode->piCastNonNullClass->if->BranchProbabilityNode->probability->return->thisHub->ClassGetHubNode->readClass->otherHub->ClassGetHubNode->readClass->if->BranchProbabilityNode->thisHub->isNull->probability->if->BranchProbabilityNode->otherHub->isNull->probability->guardNonNull->SnippetAnchorNode->anchor->nonNullOtherHub->ClassGetHubNode->piCastNonNull->if->TypeCheckSnippetUtils->checkUnknownSubType->return->return
InstanceOfSnippets.Templates#makeArguments(InstanceOfUsageReplacer, LoweringTool)::: templates make arguments:::if->instanceOf->object->instanceOf->getValue->assumptions->instanceOf->graph->getAssumptions->localOptions->instanceOf->getOptions->profile->instanceOf->profile->if->GeneratePIC->getValue->hintInfo->instanceOf->type->TypeCheckMinProfileHitProbability->getValue->TypeCheckMaxHints->getValue->new->TypeCheckHints->type->instanceOf->type->getType->hub->ConstantNode->KlassPointerStamp->klassNonNull->type->klass->providers->getMetaAccess->instanceOf->graph->forConstant->args->graph->instanceOf->graph->if->hints->providers->getMetaAccess->createHints->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->add->args->KlassPointerStamp->klassNonNull->addVarargs->args->StampFactory->forKind->addVarargs->else->if->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->add->args->ConstantNode->KlassPointerStamp->klassNonNull->klass->providers->getMetaAccess->forConstant->add->else->if->type->isPrimaryType->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->add->args->add->args->type->superCheckOffset->addConst->else->hints->providers->getMetaAccess->createHints->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->add->args->add->args->KlassPointerStamp->klassNonNull->addVarargs->args->StampFactory->forKind->addVarargs->args->add->args->add->if->args->getNullSeen->addConst->args->addConst->return->else->if->instanceOf->object->instanceOf->getObject->args->instanceOf->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->instanceOf->getMirrorOrHub->add->args->add->args->add->args->add->args->instanceOf->allowsNull->addConst->args->addConst->return->else->if->isAssignable->args->isAssignable->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->isAssignable->getThisClass->add->args->isAssignable->getOtherClass->add->args->add->args->add->args->addConst->return->else->throw->GraalError->shouldNotReachHere
KlassLayoutHelperNode#create(GraalHotSpotVMConfig, ValueNode, ConstantReflectionProvider, MetaAccessProvider)::: klass layout helper node create:::stamp->StampFactory->forKind->return->canonical
KlassLayoutHelperNode#intrinsify(GraphBuilderContext, ResolvedJavaMethod, GraalHotSpotVMConfig, ValueNode)::: klass layout helper node intrinsify:::valueNode->b->getConstantReflection->b->getMetaAccess->create->b->b->append->push->return
KlassLayoutHelperNode#inferStamp()::: klass layout helper node infer stamp:::if->hub->hubStamp->hub->getValue->stamp->if->objectStamp->type->objectStamp->type->if->type->isJavaLangObject->if->type->isArray->type->isInterface->return->StampFactory->forInteger->updateStamp->if->type->isArray->return->StampFactory->forInteger->updateStamp->return
KlassLayoutHelperNode#canonical(CanonicalizerTool)::: klass layout helper node canonical:::if->tool->allUsagesAvailable->hasNoUsages->return->else->return->stamp->tool->getConstantReflection->tool->getMetaAccess->canonical
KlassLayoutHelperNode#canonical(KlassLayoutHelperNode, GraalHotSpotVMConfig, ValueNode, Stamp, ConstantReflectionProvider, MetaAccessProvider)::: klass layout helper node canonical:::self->if->klass->isConstant->if->klass->asConstant->isDefaultForKind->constant->stamp->constantReflection->getMemoryAccessProvider->klass->asConstant->readConstant->return->ConstantNode->forConstant->if->hub->hubStamp->hub->getValue->stamp->if->ostamp->type->ostamp->type->if->type->isArray->type->getComponentType->isPrimitive->constant->stamp->constantReflection->getMemoryAccessProvider->type->klass->readConstant->return->ConstantNode->forConstant->if->new->KlassLayoutHelperNode->return
KlassLayoutHelperNode#lower(LoweringTool)::: klass layout helper node lower:::tool->getLowerer->lower
KlassLayoutHelperNode#getHub()::: klass layout helper node get hub:::return
LoadExceptionObjectSnippets#loadException(Register)::: load exception object snippets load exception:::thread->registerAsWord->exception->readExceptionOop->writeExceptionOop->WordFactory->zero->writeExceptionPc->return->piCastToSnippetReplaceeStamp
LoadExceptionObjectSnippets.Templates#lower(LoadExceptionObjectNode, HotSpotRegistersProvider, LoweringTool)::: templates lower:::graph->loadExceptionObject->graph->if->LoadExceptionObjectInVM->graph->getOptions->getValue->wordType->providers->getMetaAccess->lookupJavaType->stamp->wordTypes->getWordStamp->thread->graph->registers->getThreadRegister->new->ReadRegisterNode->add->graph->addBeforeFixed->loadExceptionC->graph->providers->getForeignCalls->new->ForeignCallNode->add->loadExceptionC->loadExceptionObject->stateAfter->setStateAfter->graph->replaceFixedWithFixed->else->args->loadExceptionObject->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->registers->getThreadRegister->addConst->template->providers->getMetaAccess->instantiate
Log#log(ForeignCallDescriptor, Object, boolean, boolean)::: log log:::
Log#log(ForeignCallDescriptor, int, long, boolean)::: log log:::
Log#printf(ForeignCallDescriptor, Word, long, long, long)::: log printf:::
Log#print(boolean)::: log print:::getTypeChar->log
Log#print(byte)::: log print:::getTypeChar->log
Log#print(char)::: log print:::getTypeChar->log
Log#print(short)::: log print:::getTypeChar->log
Log#print(int)::: log print:::getTypeChar->log
Log#print(long)::: log print:::getTypeChar->log
Log#printf(String, long):::Prints a formatted string to the log stream.:::cstring->printf
Log#printf(String, long, long)::: log printf:::cstring->printf
Log#printf(String, long, long, long)::: log printf:::cstring->printf
Log#print(float)::: log print:::if->Float->isNaN->print->else->if->print->else->if->print->else->getTypeChar->Float->floatToRawIntBits->log
Log#print(double)::: log print:::if->Double->isNaN->print->else->if->print->else->if->print->else->getTypeChar->Double->doubleToRawLongBits->log
Log#print(String)::: log print:::log
Log#printObject(Object)::: log print object:::log
Log#println(boolean)::: log println:::getTypeChar->log
Log#println(byte)::: log println:::getTypeChar->log
Log#println(char)::: log println:::getTypeChar->log
Log#println(short)::: log println:::getTypeChar->log
Log#println(int)::: log println:::getTypeChar->log
Log#println(long)::: log println:::getTypeChar->log
Log#println(float)::: log println:::if->Float->isNaN->println->else->if->println->else->if->println->else->getTypeChar->Float->floatToRawIntBits->log
Log#println(double)::: log println:::if->Double->isNaN->println->else->if->println->else->if->println->else->getTypeChar->Double->doubleToRawLongBits->log
Log#println(String)::: log println:::log
Log#printlnObject(Object)::: log println object:::log
Log#println()::: log println:::println
MonitorSnippets#doProfile(OptionValues)::: monitor snippets do profile:::return->ProfileMonitors->getValue
MonitorSnippets#monitorenter(Object, KlassPointer, int, Register, Register, boolean, Counters)::: monitor snippets monitorenter:::verifyOop->mark->markOffset->loadWordFromObject->lock->beginLockScope->objectPointer->Word->objectToTrackedPointer->trace->trace->trace->incCounter->if->useBiasedLocking->if->tryEnterBiased->return->if->inlineFastLockSupported->mark->monitorMask->and->notEqual->probability->if->tryEnterInflated->return->else->unlockedMark->mark->unlockedMask->or->trace->lock->lockDisplacedMarkOffset->writeWord->MembarNode->memoryBarrier->currentMark->objectPointer->markOffset->compareAndSwapWord->if->currentMark->equal->probability->traceObject->inc->mark->return->else->trace->alignedMask->wordSize->unsigned->stackPointer->registerAsWord->stackBias->add->if->currentMark->subtract->alignedMask->pageSize->subtract->and->equal->probability->lock->lockDisplacedMarkOffset->zero->writeWord->traceObject->inc->return->traceObject->inc->monitorenterStubC
MonitorSnippets#tryEnterBiased(Object, KlassPointer, Word, Word, Register, boolean, Counters)::: monitor snippets try enter biased:::biasableLockBits->mark->biasedLockMaskInPlace->and->prototypeMarkWord->hub->prototypeMarkWordOffset->readWord->thread->registerAsWord->tmp->prototypeMarkWord->or->xor->ageMaskInPlace->and->trace->trace->trace->if->tmp->equal->probability->traceObject->inc->FastAcquireBiasedLockNode->mark->return->if->biasableLockBits->WordFactory->biasedLockPattern->unsigned->equal->probability->objectPointer->Word->objectToTrackedPointer->if->tmp->biasedLockMaskInPlace->and->equal->probability->if->tmp->epochMaskInPlace->and->equal->probability->unbiasedMark->mark->biasedLockMaskInPlace->ageMaskInPlace->epochMaskInPlace->and->biasedMark->unbiasedMark->or->trace->trace->if->objectPointer->markOffset->logicCompareAndSwapWord->probability->traceObject->inc->return->traceObject->inc->else->biasedMark->prototypeMarkWord->or->trace->if->objectPointer->markOffset->logicCompareAndSwapWord->probability->traceObject->inc->return->traceObject->inc->monitorenterStubC->return->else->result->objectPointer->markOffset->compareAndSwapWord->if->bkpt->inc->return->else->inc->return
MonitorSnippets#useFastInflatedLocking(OptionValues)::: monitor snippets use fast inflated locking:::return->SimpleFastInflatedLocking->getValue
MonitorSnippets#inlineFastLockSupported()::: monitor snippets inline fast lock supported:::return->inlineFastLockSupported
MonitorSnippets#inlineFastLockSupported(GraalHotSpotVMConfig, OptionValues)::: monitor snippets inline fast lock supported:::return->useFastInflatedLocking->monitorMask->objectMonitorOwnerOffset
MonitorSnippets#tryEnterInflated(Object, Word, Word, Register, boolean, Counters)::: monitor snippets try enter inflated:::lock->lockDisplacedMarkOffset->writeWord->monitor->mark->monitorMask->subtract->ownerOffset->objectMonitorOwnerOffset->owner->monitor->readWord->if->owner->equal->probability->if->monitor->registerAsWord->logicCompareAndSwapWord->probability->traceObject->inc->return->else->traceObject->inc->else->traceObject->inc->return
MonitorSnippets#monitorenterStub(Object, int, boolean):::Calls straight out to the monitorenter stub.:::verifyOop->incCounter->if->DeoptimizeNode->deopt->lock->beginLockScope->traceObject->monitorenterStubC
MonitorSnippets#monitorexit(Object, int, Register, boolean, Counters)::: monitor snippets monitorexit:::Word->objectToTrackedPointer->trace->mark->markOffset->loadWordFromObject->if->useBiasedLocking->trace->if->mark->biasedLockMaskInPlace->and->WordFactory->biasedLockPattern->unsigned->equal->probability->endLockScope->decCounter->traceObject->inc->return->lock->CurrentLockNode->currentLock->displacedMark->lock->lockDisplacedMarkOffset->readWord->trace->if->displacedMark->equal->probability->traceObject->inc->else->if->tryExitInflated->verifyOop->objectPointer->Word->objectToTrackedPointer->if->objectPointer->markOffset->logicCompareAndSwapWord->probability->traceObject->inc->else->traceObject->inc->monitorexitStubC->endLockScope->decCounter
MonitorSnippets#inlineFastUnlockSupported(OptionValues)::: monitor snippets inline fast unlock supported:::return->inlineFastUnlockSupported
MonitorSnippets#inlineFastUnlockSupported(GraalHotSpotVMConfig, OptionValues)::: monitor snippets inline fast unlock supported:::return->useFastInflatedLocking->objectMonitorEntryListOffset->objectMonitorCxqOffset->monitorMask->objectMonitorOwnerOffset->objectMonitorRecursionsOffset
MonitorSnippets#tryExitInflated(Object, Word, Word, Register, boolean, Counters)::: monitor snippets try exit inflated:::if->inlineFastUnlockSupported->return->if->mark->monitorMask->and->notEqual->probability->monitor->mark->monitorMask->subtract->ownerOffset->objectMonitorOwnerOffset->owner->monitor->readWord->recursionsOffset->objectMonitorRecursionsOffset->recursions->monitor->readWord->thread->registerAsWord->if->owner->xor->or->equal->probability->cxqOffset->objectMonitorCxqOffset->cxq->monitor->readWord->entryListOffset->objectMonitorEntryListOffset->entryList->monitor->readWord->if->cxq->or->equal->probability->memoryBarrier->monitor->zero->writeWord->traceObject->inc->return->else->succOffset->objectMonitorSuccOffset->succ->monitor->readWord->if->succ->isNonNull->probability->monitor->zero->writeWord->memoryBarrier->monitor->readWord->if->succ->isNonNull->probability->traceObject->inc->return->else->if->monitor->zero->logicCompareAndSwapWord->probability->traceObject->inc->return->inc->traceObject->monitorexitStubC->return->return
MonitorSnippets#monitorexitStub(Object, int, boolean):::Calls straight out to the monitorexit stub.:::verifyOop->traceObject->lock->CurrentLockNode->currentLock->monitorexitStubC->endLockScope->decCounter
MonitorSnippets#traceObject(boolean, String, Object, boolean)::: monitor snippets trace object:::if->doProfile->DynamicCounterNode->counter->if->Log->print->Log->print->Log->printlnObject
MonitorSnippets#trace(boolean, String, WordBase)::: monitor snippets trace:::if->Log->value->rawValue->printf
MonitorSnippets#bkpt(Object, Word, Word, Word)::: monitor snippets bkpt:::
MonitorSnippets#verifyBalancedMonitors(OptionValues)::: monitor snippets verify balanced monitors:::return->VerifyBalancedMonitors->getValue
MonitorSnippets#incCounter()::: monitor snippets inc counter:::if->verifyBalancedMonitors->counter->MonitorCounterNode->counter->count->counter->readInt->counter->writeInt
MonitorSnippets#decCounter()::: monitor snippets dec counter:::if->verifyBalancedMonitors->counter->MonitorCounterNode->counter->count->counter->readInt->counter->writeInt
MonitorSnippets#initCounter()::: monitor snippets init counter:::counter->MonitorCounterNode->counter->counter->writeInt
MonitorSnippets#checkCounter(String)::: monitor snippets check counter:::counter->MonitorCounterNode->counter->count->counter->readInt->if->vmError
MonitorSnippets.Templates#lower(RawMonitorEnterNode, HotSpotRegistersProvider, LoweringTool)::: templates lower:::graph->monitorenterNode->graph->checkBalancedMonitors->args->if->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->monitorenterNode->object->add->args->monitorenterNode->getHub->add->args->monitorenterNode->getMonitorId->getLockDepth->addConst->args->registers->getThreadRegister->addConst->args->registers->getStackPointerRegister->addConst->args->monitorenterNode->object->isTracingEnabledForType->isTracingEnabledForMethod->addConst->args->addConst->else->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->monitorenterNode->object->add->args->monitorenterNode->getMonitorId->getLockDepth->addConst->args->monitorenterNode->object->isTracingEnabledForType->isTracingEnabledForMethod->addConst->args->addConst->template->providers->getMetaAccess->instantiate
MonitorSnippets.Templates#lower(MonitorExitNode, HotSpotRegistersProvider, LoweringTool)::: templates lower:::graph->monitorexitNode->graph->args->if->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->else->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->monitorexitNode->object->add->args->monitorexitNode->getMonitorId->getLockDepth->addConst->args->registers->getThreadRegister->addConst->args->monitorexitNode->object->isTracingEnabledForType->isTracingEnabledForMethod->addConst->args->addConst->template->providers->getMetaAccess->instantiate
MonitorSnippets.Templates#isTracingEnabledForType(ValueNode)::: templates is tracing enabled for type:::type->StampTool->object->stamp->typeOrNull->filter->TraceMonitorsTypeFilter->object->getOptions->getValue->if->return->else->if->filter->length->return->if->return->return->type->getName->contains
MonitorSnippets.Templates#isTracingEnabledForMethod(StructuredGraph)::: templates is tracing enabled for method:::filter->TraceMonitorsMethodFilter->graph->getOptions->getValue->if->return->else->if->filter->length->return->if->graph->method->return->return->graph->method->format->contains
MonitorSnippets.Templates#checkBalancedMonitors(StructuredGraph, LoweringTool):::If balanced monitor checking is enabled then nodes are inserted at the start and all return points of the graph to initialize and check the monitor counter respectively.:::if->VerifyBalancedMonitors->getValue->nodes->graph->getNodes->filter->if->nodes->isEmpty->returnType->initCounter->getMethod->getSignature->initCounter->getMethod->getDeclaringClass->getReturnType->returnStamp->StampFactory->graph->getAssumptions->forDeclaredType->callTarget->graph->initCounter->getMethod->new->ValueNodeArr->new->MethodCallTargetNode->add->invoke->graph->new->InvokeNode->add->invoke->graph->start->stateAfter->setStateAfter->graph->graph->start->addAfterFixed->inlineeGraph->providers->getReplacements->initCounter->getMethod->invoke->graph->trackNodeSourcePosition->invoke->getNodeSourcePosition->invoke->getOptions->getSnippet->InliningUtil->inline->rets->graph->getNodes->snapshot->foreach->checkCounter->getMethod->getSignature->checkCounter->getMethod->getDeclaringClass->getReturnType->msg->graph->method->format->errMsg->ConstantNode->tool->getConstantReflection->forString->providers->getMetaAccess->forConstant->StampFactory->graph->getAssumptions->forDeclaredType->graph->checkCounter->getMethod->new->ValueNodeArr->new->MethodCallTargetNode->add->graph->new->InvokeNode->add->code->graph->method->new->ResolvedJavaMethodBytecode->stateAfter->new->ValueNodeArr->new->ValueNodeArr->new->ValueNodeArr->new->FrameState->invoke->graph->add->setStateAfter->graph->addBeforeFixed->args->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->addConst->template->graph->getDebug->copySpecializedGraph->InliningUtil->inline
MonitorSnippets#monitorenterStubC(ForeignCallDescriptor, Object, Word)::: monitor snippets monitorenter stub c:::
MonitorSnippets#monitorexitStubC(ForeignCallDescriptor, Object, Word)::: monitor snippets monitorexit stub c:::
NewObjectSnippets#createName(OptionValues, String, String)::: new object snippets create name:::switch->ProfileAllocationsContext->getValue->return->return->return->return->throw->GraalError->shouldNotReachHere
NewObjectSnippets#doProfile(OptionValues)::: new object snippets do profile:::return->ProfileAllocations->getValue
NewObjectSnippets#withContext(OptionValues)::: new object snippets with context:::context->ProfileAllocationsContext->getValue->return
NewObjectSnippets#profileAllocation(String, long, String)::: new object snippets profile allocation:::if->doProfile->name->createName->context->withContext->DynamicCounterNode->counter->DynamicCounterNode->counter
NewObjectSnippets#emitPrefetchAllocate(Word, boolean)::: new object snippets emit prefetch allocate:::if->allocatePrefetchStyle->lines->allocatePrefetchLines->allocateInstancePrefetchLines->stepSize->allocatePrefetchStepSize->distance->allocatePrefetchDistance->ExplodeLoopNode->explodeLoop->for->i
NewObjectSnippets#allocateInstance(long, KlassPointer, Word, boolean, boolean, Register, boolean, String, Counters)::: new object snippets allocate instance:::return->allocateInstanceHelper->piCastToSnippetReplaceeStamp
NewObjectSnippets#allocateInstanceHelper(long, KlassPointer, Word, boolean, boolean, Register, boolean, String, Counters)::: new object snippets allocate instance helper:::result->thread->registerAsWord->top->readTlabTop->end->readTlabEnd->newTop->top->WordFactory->unsigned->add->if->useTLAB->newTop->belowOrEqual->probability->writeTlabTop->emitPrefetchAllocate->formatObject->else->theCounters->if->inc->newInstanceStub->profileAllocation->return->verifyOop
NewObjectSnippets#newInstanceStub(KlassPointer)::: new object snippets new instance stub:::if->useNullAllocationStubs->return->newInstanceOrNull->nonNullOrDeopt->else->return->newInstance
NewObjectSnippets#newInstance(ForeignCallDescriptor, KlassPointer)::: new object snippets new instance:::
NewObjectSnippets#newInstanceOrNull(ForeignCallDescriptor, KlassPointer)::: new object snippets new instance or null:::
NewObjectSnippets#allocateInstancePIC(long, KlassPointer, Word, boolean, boolean, Register, boolean, String, Counters)::: new object snippets allocate instance c:::picHub->LoadConstantIndirectlyFixedNode->loadKlass->return->allocateInstanceHelper->piCastToSnippetReplaceeStamp
NewObjectSnippets#allocateInstanceDynamic(Class, Class, boolean, boolean, Register, Counters)::: new object snippets allocate instance dynamic:::if->probability->DeoptimizeNode->deopt->nonNullType->PiNode->SnippetAnchorNode->anchor->piCastNonNullClass->if->DynamicNewInstanceNode->throwsInstantiationException->probability->DeoptimizeNode->deopt->return->PiNode->allocateInstanceDynamicHelper->piCastToSnippetReplaceeStamp
NewObjectSnippets#allocateInstanceDynamicHelper(Class, boolean, boolean, Register, Counters, Class)::: new object snippets allocate instance dynamic helper:::hub->ClassGetHubNode->readClass->if->hub->isNull->probability->nonNullHub->ClassGetHubNode->SnippetAnchorNode->anchor->piCastNonNull->if->isInstanceKlassFullyInitialized->probability->layoutHelper->readLayoutHelper->if->probability->prototypeMarkWord->nonNullHub->prototypeMarkWordOffset->readWord->return->allocateInstanceHelper->else->DeoptimizeNode->deopt->return->dynamicNewInstanceStub
NewObjectSnippets#allocatePrimitiveArrayPIC(KlassPointer, int, Word, int, int, boolean, boolean, Register, boolean, String, boolean, Counters)::: new object snippets allocate primitive array c:::picHub->LoadConstantIndirectlyNode->loadKlass->return->allocateArrayImpl
NewObjectSnippets#allocateArrayPIC(KlassPointer, int, Word, int, int, boolean, boolean, Register, boolean, String, boolean, Counters)::: new object snippets allocate array c:::picHub->LoadConstantIndirectlyFixedNode->loadKlass->return->allocateArrayImpl
NewObjectSnippets#allocateArray(KlassPointer, int, Word, int, int, boolean, boolean, Register, boolean, String, boolean, Counters)::: new object snippets allocate array:::result->allocateArrayImpl->return->verifyOop->piArrayCastToSnippetReplaceeStamp
NewObjectSnippets#useNullAllocationStubs(GraalHotSpotVMConfig):::When allocating on the slow path, determines whether to use a version of the runtime call that returns null on a failed allocation instead of raising an OutOfMemoryError.:::return->config->areNullAllocationStubsAvailable
NewObjectSnippets#allocateArrayImpl(KlassPointer, int, Word, int, int, boolean, boolean, Register, boolean, String, boolean, Counters)::: new object snippets allocate array impl:::result->allocationSize->arrayAllocationSize->thread->registerAsWord->top->readTlabTop->end->readTlabEnd->newTop->top->WordFactory->unsigned->add->if->belowThan->probability->useTLAB->newTop->belowOrEqual->probability->writeTlabTop->emitPrefetchAllocate->theCounters->if->inc->formatArray->else->newArrayStub->profileAllocation->return
NewObjectSnippets#newArrayStub(KlassPointer, int)::: new object snippets new array stub:::if->useNullAllocationStubs->return->newArrayOrNull->nonNullOrDeopt->else->return->newArray
NewObjectSnippets#newArray(ForeignCallDescriptor, KlassPointer, int)::: new object snippets new array:::
NewObjectSnippets#newArrayOrNull(ForeignCallDescriptor, KlassPointer, int)::: new object snippets new array or null:::
NewObjectSnippets#dynamicNewInstanceStub(Class)::: new object snippets dynamic new instance stub:::if->useNullAllocationStubs->return->dynamicNewInstanceOrNull->nonNullOrDeopt->else->return->dynamicNewInstance
NewObjectSnippets#nonNullOrDeopt(Object):::Deoptimizes if obj == null otherwise returns obj.:::if->DeoptimizeNode->deopt->return
NewObjectSnippets#dynamicNewInstance(ForeignCallDescriptor, Class)::: new object snippets dynamic new instance:::
NewObjectSnippets#dynamicNewInstanceOrNull(ForeignCallDescriptor, Class)::: new object snippets dynamic new instance or null:::
NewObjectSnippets#allocateArrayDynamic(Class, Class, int, boolean, boolean, Register, JavaKind, int, boolean, Word, Counters)::: new object snippets allocate array dynamic:::result->allocateArrayDynamicImpl->return
NewObjectSnippets#allocateArrayDynamicImpl(Class, Class, int, boolean, boolean, Register, JavaKind, int, boolean, Word, Counters)::: new object snippets allocate array dynamic impl:::staticAssert->if->DynamicNewArrayNode->throwsIllegalArgumentException->probability->DeoptimizeNode->deopt->klass->arrayKlassOffset->loadKlassFromObject->if->klass->isNull->DeoptimizeNode->deopt->nonNullKlass->ClassGetHubNode->SnippetAnchorNode->anchor->piCastNonNull->if->DeoptimizeNode->deopt->layoutHelper->if->readLayoutHelper->else->readLayoutHelper->runtimeAssert->headerSize->layoutHelperHeaderSizeShift->layoutHelperHeaderSizeMask->log2ElementSize->layoutHelperLog2ElementSizeShift->layoutHelperLog2ElementSizeMask->result->allocateArrayImpl->return->verifyOop->piArrayCastToSnippetReplaceeStamp
NewObjectSnippets#newmultiarray(KlassPointer, int, int[]):::Calls the runtime stub for implementing MULTIANEWARRAY.:::dims->DimensionsNode->allocaDimsArray->ExplodeLoopNode->explodeLoop->for->i->return->newMultiArrayStub
NewObjectSnippets#newMultiArrayStub(KlassPointer, int, Word)::: new object snippets new multi array stub:::if->useNullAllocationStubs->return->newMultiArrayOrNull->nonNullOrDeopt->else->return->newMultiArray
NewObjectSnippets#newmultiarrayPIC(KlassPointer, int, int[])::: new object snippets newmultiarray c:::picHub->LoadConstantIndirectlyFixedNode->loadKlass->return->newmultiarray
NewObjectSnippets#newMultiArray(ForeignCallDescriptor, KlassPointer, int, Word)::: new object snippets new multi array:::
NewObjectSnippets#newMultiArrayOrNull(ForeignCallDescriptor, KlassPointer, int, Word)::: new object snippets new multi array or null:::
NewObjectSnippets#zeroMemory(long, Word, boolean, int, boolean, boolean, Counters):::Zero uninitialized memory in a newly allocated object, unrolling as necessary and ensuring that stores are aligned.:::fillMemory
NewObjectSnippets#fillMemory(long, long, Word, boolean, int, boolean, boolean, Counters)::: new object snippets fill memory:::ReplacementsUtil->runtimeAssert->offset->if->memory->LocationIdentity->init->writeInt->ReplacementsUtil->runtimeAssert->theCounters->if->ReplacementsUtil->staticAssert->if->inc->explodeLoop->for->i->else->off->WordFactory->signed->if->getMinimalBulkZeroingSize->probability->if->inc->ZeroMemoryNode->memory->add->LocationIdentity->init->zero->else->if->if->inc->explodeLoop->else->if->inc->for->off->rawValue->off->add
NewObjectSnippets#getMinimalBulkZeroingSize(OptionValues)::: new object snippets get minimal bulk zeroing size:::return->MinimalBulkZeroingSize->getValue
NewObjectSnippets#fillWithGarbage(long, Word, boolean, int, boolean, Counters):::Fill uninitialized memory with garbage value in a newly allocated object, unrolling as necessary and ensuring that stores are aligned.:::fillMemory
NewObjectSnippets#formatObject(KlassPointer, long, Word, Word, boolean, boolean, boolean, Counters):::Formats some allocated memory with an object header and zeroes out the rest.:::prototypeMarkWord->useBiasedLocking->hub->prototypeMarkWordOffset->readWord->initializeObjectHeader->if->instanceHeaderSize->zeroMemory->else->if->instanceHeaderSize->fillWithGarbage->if->MembarNode->LocationIdentity->init->memoryBarrier->return->memory->toObjectNonNull
NewObjectSnippets#verifyHeap(Register)::: new object snippets verify heap:::thread->registerAsWord->topValue->readTlabTop->if->topValue->WordFactory->zero->equal->topValueContents->topValue->readWord->if->topValueContents->WordFactory->zero->equal->AssertionSnippets->cstring->vmMessageC
NewObjectSnippets#formatArray(KlassPointer, long, int, int, Word, Word, boolean, boolean, boolean, boolean, Counters):::Formats some allocated memory with an object header and zeroes out the rest.:::memory->arrayLengthOffset->LocationIdentity->init->writeInt->initializeObjectHeader->if->zeroMemory->else->if->fillWithGarbage->if->MembarNode->LocationIdentity->init->memoryBarrier->return->memory->toObjectNonNull
NewObjectSnippets.Templates#lower(NewInstanceNode, HotSpotRegistersProvider, LoweringTool):::Lowers a NewInstanceNode.:::graph->newInstanceNode->graph->type->newInstanceNode->instanceClass->hub->ConstantNode->KlassPointerStamp->klassNonNull->type->klass->providers->getMetaAccess->forConstant->size->instanceSize->localOptions->graph->getOptions->snippet->GeneratePIC->getValue->args->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->addConst->args->add->args->type->prototypeMarkWord->add->args->newInstanceNode->fillContents->addConst->args->newInstanceNode->emitMemoryBarrier->addConst->args->registers->getThreadRegister->addConst->args->addConst->args->ProfileAllocations->getValue->type->toJavaName->addConst->args->addConst->template->template->graph->getDebug->log->template->providers->getMetaAccess->instantiate
NewObjectSnippets.Templates#lower(NewArrayNode, HotSpotRegistersProvider, LoweringTool):::Lowers a NewArrayNode.:::graph->newArrayNode->graph->elementType->newArrayNode->elementType->arrayType->elementType->getArrayClass->elementKind->elementType->getJavaKind->hub->ConstantNode->KlassPointerStamp->klassNonNull->arrayType->klass->providers->getMetaAccess->forConstant->headerSize->tool->getMetaAccess->getArrayBaseOffset->log2ElementSize->CodeUtil->tool->getMetaAccess->getArrayIndexScale->log2->localOptions->graph->getOptions->snippet->if->GeneratePIC->getValue->if->elementType->isPrimitive->else->else->args->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->add->length->newArrayNode->length->args->length->isAlive->graph->addOrUniqueWithInputs->add->args->arrayType->prototypeMarkWord->add->args->addConst->args->addConst->args->newArrayNode->fillContents->addConst->args->newArrayNode->emitMemoryBarrier->addConst->args->registers->getThreadRegister->addConst->args->length->isConstant->addConst->args->ProfileAllocations->getValue->arrayType->toJavaName->addConst->args->tool->getLowerer->supportBulkZeroing->addConst->args->addConst->template->template->graph->getDebug->log->template->providers->getMetaAccess->instantiate
NewObjectSnippets.Templates#lower(DynamicNewInstanceNode, HotSpotRegistersProvider, LoweringTool)::: templates lower:::args->newInstanceNode->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->newInstanceNode->getInstanceType->add->classClass->newInstanceNode->getClassClass->args->add->args->newInstanceNode->fillContents->addConst->args->newInstanceNode->emitMemoryBarrier->addConst->args->registers->getThreadRegister->addConst->args->addConst->template->template->template->providers->getMetaAccess->instantiate
NewObjectSnippets.Templates#lower(DynamicNewArrayNode, HotSpotRegistersProvider, LoweringTool)::: templates lower:::graph->newArrayNode->graph->args->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->newArrayNode->getElementType->add->voidClass->newArrayNode->getVoidClass->args->add->length->newArrayNode->length->args->length->isAlive->graph->addOrUniqueWithInputs->add->args->newArrayNode->fillContents->addConst->args->newArrayNode->emitMemoryBarrier->addConst->args->registers->getThreadRegister->addConst->args->newArrayNode->getKnownElementKind->newArrayNode->getKnownElementKind->addConst->if->newArrayNode->getKnownElementKind->args->newArrayNode->getKnownElementKind->lookupArrayClass->layoutHelper->addConst->else->args->addConst->args->tool->getLowerer->supportBulkZeroing->addConst->args->lookupArrayClass->prototypeMarkWord->add->args->addConst->template->template->template->providers->getMetaAccess->instantiate
NewObjectSnippets.Templates#lookupArrayClass(LoweringTool, JavaKind)::: templates lookup array class:::return->tool->getMetaAccess->kind->toJavaClass->lookupJavaType->getArrayClass
NewObjectSnippets.Templates#lower(NewMultiArrayNode, LoweringTool)::: templates lower:::graph->newmultiarrayNode->graph->localOptions->graph->getOptions->rank->newmultiarrayNode->dimensionCount->dims->new->ValueNodeArr->for->i->newmultiarrayNode->dimensionCount->type->newmultiarrayNode->type->hub->ConstantNode->KlassPointerStamp->klassNonNull->type->klass->providers->getMetaAccess->forConstant->snippet->GeneratePIC->getValue->args->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->add->args->addConst->args->StampFactory->forKind->addVarargs->template->providers->getMetaAccess->instantiate
NewObjectSnippets.Templates#instanceSize(HotSpotResolvedObjectType)::: templates instance size:::size->type->instanceSize->return
NewObjectSnippets.Templates#lower(VerifyHeapNode, HotSpotRegistersProvider, LoweringTool)::: templates lower:::if->args->verifyHeapNode->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->registers->getThreadRegister->addConst->template->template->template->providers->getMetaAccess->instantiate->else->GraphUtil->removeFixedWithUnusedInputs
ObjectCloneNode#computeStamp(ValueNode)::: object clone node compute stamp:::if->object->stamp->getConcreteType->return->AbstractPointerStamp->object->stamp->pointerNonNull->return->AbstractPointerStamp->object->stamp->pointerMaybeNull
ObjectCloneNode#getLoweredSnippetGraph(LoweringTool)::: object clone node get lowered snippet graph:::type->StampTool->getObject->typeOrNull->if->if->type->isArray->lowerer->tool->getLowerer->objectCloneSnippets->lowerer->getObjectCloneSnippets->info->type->getComponentType->getJavaKind->get->if->snippetMethod->info->getMethod->replacements->tool->getReplacements->snippetGraph->debug->getDebug->try->s->debug->scope->replacements->graph->trackNodeSourcePosition->this->getNodeSourcePosition->debug->getOptions->getSnippet->catch->throw->debug->handle->finally->return->snippetGraph->getDebug->copy->lowerReplacement->else->assumptions->graph->getAssumptions->getObject->stamp->getConcreteType->if->newGraph->graph->getOptions->graph->getDebug->AllowAssumptions->ifNonNull->new->StructuredGraph.Builder->name->build->param->newGraph->StampPair->getObject->stamp->createSingle->new->ParameterNode->addWithoutUnique->newInstance->newGraph->new->NewInstanceNode->add->newGraph->newGraph->start->addAfterFixed->returnNode->newGraph->new->ReturnNode->add->newGraph->addAfterFixed->foreach->type->getInstanceFields->load->newGraph->LoadFieldNode->newGraph->getAssumptions->create->add->newGraph->addBeforeFixed->newGraph->newGraph->new->StoreFieldNode->add->addBeforeFixed->return->lowerReplacement->return
ObjectCloneSnippets#booleanArrayClone(boolean[])::: object clone snippets boolean array clone:::result->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopy->return
ObjectCloneSnippets#byteArrayClone(byte[])::: object clone snippets byte array clone:::result->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopy->return
ObjectCloneSnippets#shortArrayClone(short[])::: object clone snippets short array clone:::result->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopy->return
ObjectCloneSnippets#charArrayClone(char[])::: object clone snippets char array clone:::result->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopy->return
ObjectCloneSnippets#intArrayClone(int[])::: object clone snippets int array clone:::result->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopy->return
ObjectCloneSnippets#floatArrayClone(float[])::: object clone snippets float array clone:::result->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopy->return
ObjectCloneSnippets#longArrayClone(long[])::: object clone snippets long array clone:::result->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopy->return
ObjectCloneSnippets#doubleArrayClone(double[])::: object clone snippets double array clone:::result->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopy->return
ObjectCloneSnippets#objectArrayClone(Object[])::: object clone snippets object array clone:::result->DynamicNewArrayNode->GraalDirectives->src->getClass->getComponentType->guardingNonNull->newArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointUninitializedArraycopy->return
ObjectSubstitutions#hashCode(Object)::: object substitutions hash code:::return->IdentityHashCodeNode->identityHashCode
ObjectSubstitutions#notify(Object)::: object substitutions notify:::if->fastNotifyStub->notify
ObjectSubstitutions#notifyAll(Object)::: object substitutions notify all:::if->fastNotifyStub->notifyAll
ObjectSubstitutions#fastNotifyStub(ForeignCallDescriptor, Object)::: object substitutions fast notify stub:::
ReflectionGetCallerClassNode#canonical(CanonicalizerTool)::: reflection get caller class node canonical:::callerClassNode->tool->getMetaAccess->tool->getConstantReflection->getCallerClassNode->if->return->return
ReflectionGetCallerClassNode#lower(LoweringTool)::: reflection get caller class node lower:::callerClassNode->tool->getMetaAccess->tool->getConstantReflection->getCallerClassNode->if->graph->graph->addOrUniqueWithInputs->replaceFixedWithFloating->else->invoke->createInvoke->graph->replaceFixedWithFixed->invoke->lower
ReflectionGetCallerClassNode#getCallerClassNode(MetaAccessProvider, ConstantReflectionProvider):::If inlining is deep enough this method returns a ConstantNode of the caller class by walking the stack.:::state->stateAfter->for->n->state->outerFrameState->return
ReflectionSubstitutions#getClassAccessFlags(Class)::: reflection substitutions get class access flags:::klass->ClassGetHubNode->GraalDirectives->guardingNonNull->readClass->if->klass->isNull->return->else->return->klass->klassAccessFlagsOffset->readInt->jvmAccWrittenFlags
SHA2Substitutions#implCompress0(Object, byte[], int)::: a2 substitutions impl compress0:::realReceiver->PiNode->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->state->RawLoadNode->stateOffset->LocationIdentity->any->load->bufAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->stateAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->HotSpotBackend->sha2ImplCompressStub
SHA2Substitutions#stateOffset(IntrinsicContext)::: a2 substitutions state offset:::return->HotSpotReplacementsUtil->HotSpotReplacementsUtil->methodHolderClass->getFieldOffset
SHA5Substitutions#implCompress0(Object, byte[], int)::: a5 substitutions impl compress0:::realReceiver->PiNode->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->state->RawLoadNode->stateOffset->LocationIdentity->any->load->bufAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->stateAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->HotSpotBackend->sha5ImplCompressStub
SHA5Substitutions#stateOffset(IntrinsicContext)::: a5 substitutions state offset:::return->HotSpotReplacementsUtil->HotSpotReplacementsUtil->methodHolderClass->getFieldOffset
SHASubstitutions#implCompress0(Object, byte[], int)::: substitutions impl compress0:::realReceiver->PiNode->HotSpotReplacementsUtil->methodHolderClass->piCastNonNull->state->RawLoadNode->stateOffset->LocationIdentity->any->load->bufAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->stateAddr->WordFactory->ComputeObjectAddressNode->ReplacementsUtil->getArrayBaseOffset->get->unsigned->HotSpotBackend->shaImplCompressStub
SHASubstitutions#stateOffset(IntrinsicContext)::: substitutions state offset:::return->HotSpotReplacementsUtil->HotSpotReplacementsUtil->methodHolderClass->getFieldOffset
StringToBytesSnippets#transform(String)::: string to bytes snippets transform:::i->compilationTimeString->length->array->NewArrayNode->newUninitializedArray->cArray->CStringConstant->cstring->while->RawStoreNode->getArrayBaseOffset->cArray->readByte->NamedLocationIdentity->getArrayLocation->storeByte->return
StringToBytesSnippets.Templates#lower(StringToBytesNode, LoweringTool)::: templates lower:::args->stringToBytesNode->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->stringToBytesNode->getValue->addConst->template->template->template->providers->getMetaAccess->instantiate
StringUTF16Substitutions#toBytes(char[], int, int)::: string f16 substitutions to bytes:::if->probability->probability->probability->probability->DeoptimizeNode->deopt->val->NewArrayNode->newUninitializedArray->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopyKillsAny->return
StringUTF16Substitutions#getChars(byte[], int, int, char[], int)::: string f16 substitutions get chars:::length->if->probability->probability->probability->probability->DeoptimizeNode->deopt->ArrayCopyCallNode->HotSpotReplacementsUtil->getHeapWordSize->disjointArraycopyKillsAny
ThreadSubstitutions#isInterrupted(Thread, boolean):::hidden in 9.:::javaThread->CurrentJavaThreadNode->get->thread->javaThread->threadObjectOffset->readObject->if->osThread->javaThread->osThreadOffset->readWord->interrupted->osThread->osThreadInterruptedOffset->any->readInt->if->return->return->isInterrupted
TypeCheckSnippetUtils#checkSecondarySubType(KlassPointer, KlassPointer, Counters)::: type check snippet utils check secondary sub type:::if->sNonNull->secondarySuperCacheOffset->readKlassPointer->equal->inc->return->return->checkSelfAndSupers
TypeCheckSnippetUtils#checkUnknownSubType(KlassPointer, KlassPointer, Counters)::: type check snippet utils check unknown sub type:::superCheckOffset->t->superCheckOffsetOffset->readInt->primary->secondarySuperCacheOffset->if->sNonNull->readKlassPointer->equal->if->inc->else->inc->return->if->inc->return->return->checkSelfAndSupers
TypeCheckSnippetUtils#checkSelfAndSupers(KlassPointer, KlassPointer, Counters)::: type check snippet utils check self and supers:::if->s->equal->inc->return->secondarySupers->s->secondarySupersOffset->readWord->length->secondarySupers->metaspaceArrayLengthOffset->readInt->for->i->inc->return
TypeCheckSnippetUtils#createHints(TypeCheckHints, MetaAccessProvider, boolean, StructuredGraph)::: type check snippet utils create hints:::hubs->new->ConstantNodeArr->isPositive->new->booleanArr->index->for->i->if->Arrays->copyOf->Arrays->copyOf->return->new->Hints
TypeCheckSnippetUtils#loadSecondarySupersElement(Word, int)::: type check snippet utils load secondary supers element:::return->KlassPointer->metaspaceArray->metaspaceArrayBaseOffset->wordSize->readWord->fromWord
UnsafeLoadSnippets#lowerUnsafeLoad(Object, long)::: unsafe load snippets lower unsafe load:::fixedObject->FixedValueAnchorNode->getObject->if->referentOffset->return->Word->objectToTrackedPointer->readObject->else->return->Word->objectToTrackedPointer->readObject
UnsafeLoadSnippets.Templates#lower(RawLoadNode, LoweringTool)::: templates lower:::args->load->graph->getGuardsStage->tool->getLoweringStage->new->Arguments->args->load->object->add->args->load->offset->add->template->providers->getMetaAccess->instantiate
