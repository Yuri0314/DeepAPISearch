javax.imageio.spi.DigraphNode#getData()->E:::Returns the Object referenced by this node.
javax.imageio.spi.DigraphNode#getOutNodes()->Iterator>:::Returns an Iterator containing the nodes pointed to by this node.
javax.imageio.spi.DigraphNode#addEdge(DigraphNode)->boolean:::Adds a directed edge to the graph
javax.imageio.spi.DigraphNode#hasEdge(DigraphNode)->boolean:::Returns true if an edge exists between this node and the given node.
javax.imageio.spi.DigraphNode#removeEdge(DigraphNode)->boolean:::Removes a directed edge from the graph
javax.imageio.spi.DigraphNode#dispose()->void:::Removes this node from the graph, updating neighboring nodes appropriately.
javax.imageio.spi.DigraphNode#getInDegree()->int:::Returns the in-degree of this node.
javax.imageio.spi.IIORegistry#getDefaultInstance()->IIORegistry:::Returns the default IIORegistry instance used by the Image I/O API
javax.imageio.spi.IIORegistry#registerApplicationClasspathSpis()->void:::Registers all available service providers found on the application class path, using the default ClassLoader
javax.imageio.spi.IIOServiceProvider#onRegistration(ServiceRegistry, Class)->void:::A callback that will be called exactly once after the Spi class has been instantiated and registered in a ServiceRegistry
javax.imageio.spi.IIOServiceProvider#onDeregistration(ServiceRegistry, Class)->void:::A callback that will be whenever the Spi class has been deregistered from a ServiceRegistry
javax.imageio.spi.IIOServiceProvider#getVendorName()->String:::Returns the name of the vendor responsible for creating this service provider and its associated implementation
javax.imageio.spi.IIOServiceProvider#getVersion()->String:::Returns a string describing the version number of this service provider and its associated implementation
javax.imageio.spi.IIOServiceProvider#getDescription(Locale)->String:::Returns a brief, human-readable description of this service provider and its associated implementation
javax.imageio.spi.ImageInputStreamSpi#getInputClass()->Class:::Returns a Class object representing the class or interface type that must be implemented by an input source in order to be "wrapped" in an ImageInputStream via the createInputStreamInstance method
javax.imageio.spi.ImageInputStreamSpi#canUseCacheFile()->boolean:::Returns true if the ImageInputStream implementation associated with this service provider can optionally make use of a cache file for improved performance and/or memory footrprint
javax.imageio.spi.ImageInputStreamSpi#needsCacheFile()->boolean:::Returns true if the ImageInputStream implementation associated with this service provider requires the use of a cache File
javax.imageio.spi.ImageInputStreamSpi#createInputStreamInstance(Object, boolean, File)->ImageInputStream:::Returns an instance of the ImageInputStream implementation associated with this service provider
javax.imageio.spi.ImageInputStreamSpi#createInputStreamInstance(Object)->ImageInputStream:::Returns an instance of the ImageInputStream implementation associated with this service provider
javax.imageio.spi.ImageOutputStreamSpi#getOutputClass()->Class:::Returns a Class object representing the class or interface type that must be implemented by an output destination in order to be "wrapped" in an ImageOutputStream via the createOutputStreamInstance method
javax.imageio.spi.ImageOutputStreamSpi#canUseCacheFile()->boolean:::Returns true if the ImageOutputStream implementation associated with this service provider can optionally make use of a cache File for improved performance and/or memory footrprint
javax.imageio.spi.ImageOutputStreamSpi#needsCacheFile()->boolean:::Returns true if the ImageOutputStream implementation associated with this service provider requires the use of a cache File
javax.imageio.spi.ImageOutputStreamSpi#createOutputStreamInstance(Object, boolean, File)->ImageOutputStream:::Returns an instance of the ImageOutputStream implementation associated with this service provider
javax.imageio.spi.ImageOutputStreamSpi#createOutputStreamInstance(Object)->ImageOutputStream:::Returns an instance of the ImageOutputStream implementation associated with this service provider
javax.imageio.spi.ImageReaderSpi#getInputTypes()->Class[]:::Returns an array of Class objects indicating what types of objects may be used as arguments to the reader's setInput method
javax.imageio.spi.ImageReaderSpi#canDecodeInput(Object)->boolean:::Returns true if the supplied source object appears to be of the format supported by this reader
javax.imageio.spi.ImageReaderSpi#createReaderInstance()->ImageReader:::Returns an instance of the ImageReader implementation associated with this service provider
javax.imageio.spi.ImageReaderSpi#createReaderInstance(Object)->ImageReader:::Returns an instance of the ImageReader implementation associated with this service provider
javax.imageio.spi.ImageReaderSpi#isOwnReader(ImageReader)->boolean:::Returns true if the ImageReader object passed in is an instance of the ImageReader associated with this service provider
javax.imageio.spi.ImageReaderSpi#getImageWriterSpiNames()->String[]:::Returns an array of Strings containing the fully qualified names of all the ImageWriterSpi classes that can understand the internal metadata representation used by the ImageReader associated with this service provider, or null if there are no such ImageWriters specified
javax.imageio.spi.ImageReaderWriterSpi#getFormatNames()->String[]:::Returns an array of Strings containing human-readable names for the formats that are generally usable by the ImageReader or ImageWriter implementation associated with this service provider
javax.imageio.spi.ImageReaderWriterSpi#getFileSuffixes()->String[]:::Returns an array of Strings containing a list of file suffixes associated with the formats that are generally usable by the ImageReader or ImageWriter implementation associated with this service provider
javax.imageio.spi.ImageReaderWriterSpi#getMIMETypes()->String[]:::Returns an array of Strings containing a list of MIME types associated with the formats that are generally usable by the ImageReader or ImageWriter implementation associated with this service provider
javax.imageio.spi.ImageReaderWriterSpi#getPluginClassName()->String:::Returns the fully-qualified class name of the ImageReader or ImageWriter plug-in associated with this service provider.
javax.imageio.spi.ImageReaderWriterSpi#isStandardStreamMetadataFormatSupported()->boolean:::Returns true if the standard metadata format is among the document formats recognized by the getAsTree and setFromTree methods on the stream metadata objects produced or consumed by this plug-in.
javax.imageio.spi.ImageReaderWriterSpi#getNativeStreamMetadataFormatName()->String:::Returns the name of the "native" stream metadata format for this plug-in, which typically allows for lossless encoding and transmission of the stream metadata stored in the format handled by this plug-in
javax.imageio.spi.ImageReaderWriterSpi#getExtraStreamMetadataFormatNames()->String[]:::Returns an array of Strings containing the names of additional document formats, other than the native and standard formats, recognized by the getAsTree and setFromTree methods on the stream metadata objects produced or consumed by this plug-in
javax.imageio.spi.ImageReaderWriterSpi#isStandardImageMetadataFormatSupported()->boolean:::Returns true if the standard metadata format is among the document formats recognized by the getAsTree and setFromTree methods on the image metadata objects produced or consumed by this plug-in.
javax.imageio.spi.ImageReaderWriterSpi#getNativeImageMetadataFormatName()->String:::Returns the name of the "native" image metadata format for this plug-in, which typically allows for lossless encoding and transmission of the image metadata stored in the format handled by this plug-in
javax.imageio.spi.ImageReaderWriterSpi#getExtraImageMetadataFormatNames()->String[]:::Returns an array of Strings containing the names of additional document formats, other than the native and standard formats, recognized by the getAsTree and setFromTree methods on the image metadata objects produced or consumed by this plug-in
javax.imageio.spi.ImageReaderWriterSpi#getStreamMetadataFormat(String)->IIOMetadataFormat:::Returns an IIOMetadataFormat object describing the given stream metadata format, or null if no description is available
javax.imageio.spi.ImageReaderWriterSpi#getImageMetadataFormat(String)->IIOMetadataFormat:::Returns an IIOMetadataFormat object describing the given image metadata format, or null if no description is available
javax.imageio.spi.ImageTranscoderSpi#getReaderServiceProviderName()->String:::Returns the fully qualified class name of an ImageReaderSpi class that generates IIOMetadata objects that may be used as input to this transcoder.
javax.imageio.spi.ImageTranscoderSpi#getWriterServiceProviderName()->String:::Returns the fully qualified class name of an ImageWriterSpi class that generates IIOMetadata objects that may be used as input to this transcoder.
javax.imageio.spi.ImageTranscoderSpi#createTranscoderInstance()->ImageTranscoder:::Returns an instance of the ImageTranscoder implementation associated with this service provider.
javax.imageio.spi.ImageWriterSpi#isFormatLossless()->boolean:::Returns true if the format that this writer outputs preserves pixel data bit-accurately
javax.imageio.spi.ImageWriterSpi#getOutputTypes()->Class[]:::Returns an array of Class objects indicating what types of objects may be used as arguments to the writer's setOutput method
javax.imageio.spi.ImageWriterSpi#canEncodeImage(ImageTypeSpecifier)->boolean:::Returns true if the ImageWriter implementation associated with this service provider is able to encode an image with the given layout
javax.imageio.spi.ImageWriterSpi#canEncodeImage(RenderedImage)->boolean:::Returns true if the ImageWriter implementation associated with this service provider is able to encode the given RenderedImage instance
javax.imageio.spi.ImageWriterSpi#createWriterInstance()->ImageWriter:::Returns an instance of the ImageWriter implementation associated with this service provider
javax.imageio.spi.ImageWriterSpi#createWriterInstance(Object)->ImageWriter:::Returns an instance of the ImageWriter implementation associated with this service provider
javax.imageio.spi.ImageWriterSpi#isOwnWriter(ImageWriter)->boolean:::Returns true if the ImageWriter object passed in is an instance of the ImageWriter associated with this service provider.
javax.imageio.spi.ImageWriterSpi#getImageReaderSpiNames()->String[]:::Returns an array of Strings containing all the fully qualified names of all the ImageReaderSpi classes that can understand the internal metadata representation used by the ImageWriter associated with this service provider, or null if there are no such ImageReaders specified
javax.imageio.spi.PartiallyOrderedSet#size()->int::: partially ordered set size
javax.imageio.spi.PartiallyOrderedSet#contains(Object)->boolean::: partially ordered set contains
javax.imageio.spi.PartiallyOrderedSet#iterator()->Iterator:::Returns an iterator over the elements contained in this collection, with an ordering that respects the orderings set by the setOrdering method.
javax.imageio.spi.PartiallyOrderedSet#add(E)->boolean:::Adds an Object to this PartiallyOrderedSet.
javax.imageio.spi.PartiallyOrderedSet#remove(Object)->boolean:::Removes an Object from this PartiallyOrderedSet.
javax.imageio.spi.PartiallyOrderedSet#clear()->void::: partially ordered set clear
javax.imageio.spi.PartiallyOrderedSet#setOrdering(E, E)->boolean:::Sets an ordering between two nodes
javax.imageio.spi.PartiallyOrderedSet#unsetOrdering(E, E)->boolean:::Removes any ordering between two nodes.
javax.imageio.spi.PartiallyOrderedSet#hasOrdering(E, E)->boolean:::Returns true if an ordering exists between two nodes.
javax.imageio.spi.PartialOrderIterator#hasNext()->boolean::: partial order iterator has next
javax.imageio.spi.PartialOrderIterator#next()->E::: partial order iterator next
javax.imageio.spi.PartialOrderIterator#remove()->void::: partial order iterator remove
javax.imageio.spi.RegisterableService#onRegistration(ServiceRegistry, Class)->void:::Called when an object implementing this interface is added to the given category of the given registry
javax.imageio.spi.RegisterableService#onDeregistration(ServiceRegistry, Class)->void:::Called when an object implementing this interface is removed from the given category of the given registry
javax.imageio.spi.ServiceRegistry#lookupProviders(Class, ClassLoader)->Iterator:::Searches for implementations of a particular service class using the given class loader
javax.imageio.spi.ServiceRegistry#lookupProviders(Class)->Iterator:::Locates and incrementally instantiates the available providers of a given service using the context class loader
javax.imageio.spi.ServiceRegistry#getCategories()->Iterator>:::Returns an Iterator of Class objects indicating the current set of categories
javax.imageio.spi.ServiceRegistry#registerServiceProvider(T, Class)->boolean:::Adds a service provider object to the registry
javax.imageio.spi.ServiceRegistry#registerServiceProvider(Object)->void:::Adds a service provider object to the registry
javax.imageio.spi.ServiceRegistry#registerServiceProviders(Iterator)->void:::Adds a set of service provider objects, taken from an Iterator to the registry
javax.imageio.spi.ServiceRegistry#deregisterServiceProvider(T, Class)->boolean:::Removes a service provider object from the given category
javax.imageio.spi.ServiceRegistry#deregisterServiceProvider(Object)->void:::Removes a service provider object from all categories that contain it.
javax.imageio.spi.ServiceRegistry#contains(Object)->boolean:::Returns true if provider is currently registered.
javax.imageio.spi.ServiceRegistry#getServiceProviders(Class, boolean)->Iterator:::Returns an Iterator containing all registered service providers in the given category
javax.imageio.spi.ServiceRegistry.Filter#filter(Object)->boolean:::Returns true if the given provider object matches the criterion defined by this Filter.
javax.imageio.spi.ServiceRegistry#getServiceProviders(Class, Filter, boolean)->Iterator:::Returns an Iterator containing service provider objects within a given category that satisfy a criterion imposed by the supplied ServiceRegistry.Filter object's filter method
javax.imageio.spi.ServiceRegistry#getServiceProviderByClass(Class)->T:::Returns the currently registered service provider object that is of the given class type
javax.imageio.spi.ServiceRegistry#setOrdering(Class, T, T)->boolean:::Sets a pairwise ordering between two service provider objects within a given category
javax.imageio.spi.ServiceRegistry#unsetOrdering(Class, T, T)->boolean:::Sets a pairwise ordering between two service provider objects within a given category
javax.imageio.spi.ServiceRegistry#deregisterAll(Class)->void:::Deregisters all service provider object currently registered under the given category.
javax.imageio.spi.ServiceRegistry#deregisterAll()->void:::Deregisters all currently registered service providers from all categories.
javax.imageio.spi.ServiceRegistry#finalize()->void:::Finalizes this object prior to garbage collection
javax.imageio.spi.SubRegistry#registerServiceProvider(Object)->boolean::: sub registry register service provider
javax.imageio.spi.SubRegistry#deregisterServiceProvider(Object)->boolean:::If the provider was not previously registered, do nothing.
javax.imageio.spi.SubRegistry#contains(Object)->boolean::: sub registry contains
javax.imageio.spi.SubRegistry#setOrdering(Object, Object)->boolean::: sub registry set ordering
javax.imageio.spi.SubRegistry#unsetOrdering(Object, Object)->boolean::: sub registry unset ordering
javax.imageio.spi.SubRegistry#getServiceProviders(boolean)->Iterator::: sub registry get service providers
javax.imageio.spi.SubRegistry#getServiceProviderByClass(Class)->T::: sub registry get service provider by class
javax.imageio.spi.SubRegistry#clear()->void::: sub registry clear
javax.imageio.spi.SubRegistry#finalize()->void::: sub registry finalize
javax.imageio.spi.FilterIterator#hasNext()->boolean::: filter iterator has next
javax.imageio.spi.FilterIterator#next()->T::: filter iterator next
javax.imageio.spi.FilterIterator#remove()->void::: filter iterator remove
