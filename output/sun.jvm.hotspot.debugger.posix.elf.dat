sun.jvm.hotspot.debugger.posix.elf.ELFFile#getHeader()->ELFHeader::: file get header
sun.jvm.hotspot.debugger.posix.elf.ELFFile#close()->void::: file close
sun.jvm.hotspot.debugger.posix.elf.ELFFile#getMagicNumber()->byte[]:::Returns the 4 byte magic number for this file
sun.jvm.hotspot.debugger.posix.elf.ELFFile#getObjectSize()->byte:::Returns a byte identifying the size of objects used for this ELF file
sun.jvm.hotspot.debugger.posix.elf.ELFFile#getEncoding()->byte:::Returns a byte identifying the data encoding of the processor specific data
sun.jvm.hotspot.debugger.posix.elf.ELFFile#getVersion()->byte:::Returns one of the version constants
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser#getParser()->ELFFileParser::: file parser get parser
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser#parse(String)->ELFFile:::Parses the data in filename and returns the ELFFile representation.
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser#parse(DataSource)->ELFFile:::Parses the data source and returns the ELFFile representation.
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#getHeader()->ELFHeader::: file impl get header
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#getMagicNumber()->byte[]::: file impl get magic number
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#getObjectSize()->byte::: file impl get object size
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#getEncoding()->byte::: file impl get encoding
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#getVersion()->byte::: file impl get version
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getFileType()->short::: header impl get file type
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getArch()->short::: header impl get arch
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getSectionHeaderSize()->short::: header impl get section header size
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getNumberOfSectionHeaders()->short::: header impl get number of section headers
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getSectionHeader(int)->ELFSectionHeader:::Returns the section header at the specified index
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getSectionHeaderStringTable()->ELFStringTable::: header impl get section header string table
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getStringTable()->ELFStringTable::: header impl get string table
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getDynamicStringTable()->ELFStringTable::: header impl get dynamic string table
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getHashTable()->ELFHashTable:::The ELFHashTable does not currently work
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getSymbolTableSection()->ELFSectionHeader::: header impl get symbol table section
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getDynamicSymbolTableSection()->ELFSectionHeader::: header impl get dynamic symbol table section
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getELFSymbol(String)->ELFSymbol::: header impl get symbol
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHeaderImpl#getELFSymbol(long)->ELFSymbol::: header impl get symbol
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSectionHeaderImpl#getType()->int::: section header impl get type
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSectionHeaderImpl#getNumberOfSymbols()->int::: section header impl get number of symbols
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSectionHeaderImpl#getELFSymbol(int)->ELFSymbol:::Returns the ELFSymbol at the specified index
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSectionHeaderImpl#getStringTable()->ELFStringTable::: section header impl get string table
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSectionHeaderImpl#getHashTable()->ELFHashTable:::The ELFHashTable does not currently work
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSectionHeaderImpl#getName()->String::: section header impl get name
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSectionHeaderImpl#getLink()->int::: section header impl get link
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSectionHeaderImpl#getOffset()->int::: section header impl get offset
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSymbolImpl#getBinding()->int::: symbol impl get binding
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSymbolImpl#getType()->int::: symbol impl get type
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSymbolImpl#getOffset()->long::: symbol impl get offset
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSymbolImpl#getName()->String::: symbol impl get name
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSymbolImpl#getValue()->long::: symbol impl get value
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFSymbolImpl#getSize()->int::: symbol impl get size
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFStringTableImpl#get(int)->String::: string table impl get
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFStringTableImpl#getNumStrings()->int::: string table impl get num strings
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl.ELFHashTableImpl#getSymbol(String)->ELFSymbol:::This method doesn't work every time and is unreliable
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#close()->void::: file impl close
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#seek(long)->void::: file impl seek
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#getFilePointer()->long::: file impl get file pointer
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#readByte()->byte::: file impl read byte
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#readBytes(byte[])->int::: file impl read bytes
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#readShort()->short::: file impl read short
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#readInt()->int::: file impl read int
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#readLong()->long::: file impl read long
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#byteSwap(short)->short:::Signed byte utility functions used for converting from big-endian (MSB) to little-endian (LSB).
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#byteSwap(int)->int::: file impl byte swap
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#byteSwap(long)->long::: file impl byte swap
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#readUnsignedByte()->short::: file impl read unsigned byte
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#readUnsignedShort()->int::: file impl read unsigned short
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#readUnsignedInt()->long::: file impl read unsigned int
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#unsignedByte(byte)->short:::Returns the unsigned value of the byte.
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#unsignedByte(short)->int:::Returns a big-endian unsigned representation of the short.
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#unsignedByte(int)->long:::Returns a big-endian unsigned representation of the int.
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#unsignedByteSwap(short)->int:::Unsigned byte utility functions used for converting from big-endian (MSB) to little-endian (LSB).
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser.ELFFileImpl#unsignedByteSwap(int)->long::: file impl unsigned byte swap
sun.jvm.hotspot.debugger.posix.elf.ELFFileParser#main(String[])->void::: file parser main
sun.jvm.hotspot.debugger.posix.elf.ELFHashTable#getSymbol(String)->ELFSymbol:::Returns the ELFSymbol that has the specified name or null if no symbol with that name exists
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getFileType()->short:::Returns a file type which is defined by the file type constants.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getArch()->short:::Returns one of the architecture constants.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getSectionHeaderSize()->short:::Returns the size of a section header.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getNumberOfSectionHeaders()->short:::Returns the number of section headers.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getSectionHeader(int)->ELFSectionHeader:::Returns the section header at the specified index
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getSectionHeaderStringTable()->ELFStringTable:::Returns the section header string table associated with this ELF file.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getStringTable()->ELFStringTable:::Returns the string table associated with this ELF file.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getDynamicStringTable()->ELFStringTable:::Returns the dynamic string table associated with this ELF file, or null if one does not exist.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getHashTable()->ELFHashTable:::Returns the hash table associated with this ELF file, or null if one does not exist
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getSymbolTableSection()->ELFSectionHeader:::Returns the symbol table associated with this ELF file, or null if one does not exist.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getDynamicSymbolTableSection()->ELFSectionHeader:::Returns the dynamic symbol table associated with this ELF file, or null if one does not exist.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getELFSymbol(String)->ELFSymbol:::Returns the elf symbol with the specified name or null if one is not found.
sun.jvm.hotspot.debugger.posix.elf.ELFHeader#getELFSymbol(long)->ELFSymbol:::Returns the elf symbol with the specified address or null if one is not found
sun.jvm.hotspot.debugger.posix.elf.ELFProgramHeader#getType()->int::: program header get type
sun.jvm.hotspot.debugger.posix.elf.ELFSectionHeader#getType()->int:::Returns the type of section header.
sun.jvm.hotspot.debugger.posix.elf.ELFSectionHeader#getNumberOfSymbols()->int:::Returns the number of symbols in this section or 0 if none.
sun.jvm.hotspot.debugger.posix.elf.ELFSectionHeader#getELFSymbol(int)->ELFSymbol:::Returns the symbol at the specified index
sun.jvm.hotspot.debugger.posix.elf.ELFSectionHeader#getStringTable()->ELFStringTable:::Returns the string table for this section or null if one does not exist.
sun.jvm.hotspot.debugger.posix.elf.ELFSectionHeader#getHashTable()->ELFHashTable:::Returns the hash table for this section or null if one does not exist
sun.jvm.hotspot.debugger.posix.elf.ELFSectionHeader#getLink()->int::: section header get link
sun.jvm.hotspot.debugger.posix.elf.ELFSectionHeader#getName()->String:::Returns the name of the section or null if the section has no name.
sun.jvm.hotspot.debugger.posix.elf.ELFSectionHeader#getOffset()->int:::Returns the offset in bytes to the beginning of the section.
sun.jvm.hotspot.debugger.posix.elf.ELFStringTable#get(int)->String::: string table get
sun.jvm.hotspot.debugger.posix.elf.ELFStringTable#getNumStrings()->int::: string table get num strings
sun.jvm.hotspot.debugger.posix.elf.ELFSymbol#getOffset()->long:::Returns the location from the beginning of the file to the symbol.
sun.jvm.hotspot.debugger.posix.elf.ELFSymbol#getName()->String:::Returns the name of the symbol or null if the symbol has no name.
sun.jvm.hotspot.debugger.posix.elf.ELFSymbol#getBinding()->int:::Returns the binding for this symbol.
sun.jvm.hotspot.debugger.posix.elf.ELFSymbol#getType()->int:::Returns the symbol type.
sun.jvm.hotspot.debugger.posix.elf.ELFSymbol#getValue()->long:::Value of the associated symbol
sun.jvm.hotspot.debugger.posix.elf.ELFSymbol#getSize()->int:::Size of the symbol
