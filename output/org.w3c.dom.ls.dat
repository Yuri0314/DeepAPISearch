org.w3c.dom.ls.DOMImplementationLS#createLSParser(short, String)->LSParser:::Create a new LSParser
org.w3c.dom.ls.DOMImplementationLS#createLSSerializer()->LSSerializer::: Create a new LSSerializer object.
org.w3c.dom.ls.DOMImplementationLS#createLSInput()->LSInput::: Create a new empty input source object where LSInput.characterStream, LSInput.byteStream , LSInput.stringData LSInput.systemId, LSInput.publicId, LSInput.baseURI, and LSInput.encoding are null, and LSInput.certifiedText is false.
org.w3c.dom.ls.DOMImplementationLS#createLSOutput()->LSOutput::: Create a new empty output destination object where LSOutput.characterStream, LSOutput.byteStream, LSOutput.systemId, LSOutput.encoding are null.
org.w3c.dom.ls.LSInput#getCharacterStream()->java.io.Reader::: An attribute of a language and binding dependent type that represents a stream of 16-bit units
org.w3c.dom.ls.LSInput#setCharacterStream(java.io.Reader)->void::: An attribute of a language and binding dependent type that represents a stream of 16-bit units
org.w3c.dom.ls.LSInput#getByteStream()->java.io.InputStream::: An attribute of a language and binding dependent type that represents a stream of bytes
org.w3c.dom.ls.LSInput#setByteStream(java.io.InputStream)->void::: An attribute of a language and binding dependent type that represents a stream of bytes
org.w3c.dom.ls.LSInput#getStringData()->String::: String data to parse
org.w3c.dom.ls.LSInput#setStringData(String)->void::: String data to parse
org.w3c.dom.ls.LSInput#getSystemId()->String::: The system identifier, a URI reference [IETF RFC 2396], for this input source
org.w3c.dom.ls.LSInput#setSystemId(String)->void::: The system identifier, a URI reference [IETF RFC 2396], for this input source
org.w3c.dom.ls.LSInput#getPublicId()->String::: The public identifier for this input source
org.w3c.dom.ls.LSInput#setPublicId(String)->void::: The public identifier for this input source
org.w3c.dom.ls.LSInput#getBaseURI()->String::: The base URI to be used (see section 5.1.4 in [IETF RFC 2396]) for resolving a relative systemId to an absolute URI
org.w3c.dom.ls.LSInput#setBaseURI(String)->void::: The base URI to be used (see section 5.1.4 in [IETF RFC 2396]) for resolving a relative systemId to an absolute URI
org.w3c.dom.ls.LSInput#getEncoding()->String::: The character encoding, if known
org.w3c.dom.ls.LSInput#setEncoding(String)->void::: The character encoding, if known
org.w3c.dom.ls.LSInput#getCertifiedText()->boolean::: If set to true, assume that the input is certified (see section 2.13 in [XML 1.1]) when parsing [XML 1.1].
org.w3c.dom.ls.LSInput#setCertifiedText(boolean)->void::: If set to true, assume that the input is certified (see section 2.13 in [XML 1.1]) when parsing [XML 1.1].
org.w3c.dom.ls.LSLoadEvent#getNewDocument()->Document:::The document that finished loading.
org.w3c.dom.ls.LSLoadEvent#getInput()->LSInput:::The input source that was parsed.
org.w3c.dom.ls.LSOutput#getCharacterStream()->java.io.Writer::: An attribute of a language and binding dependent type that represents a writable stream to which 16-bit units can be output.
org.w3c.dom.ls.LSOutput#setCharacterStream(java.io.Writer)->void::: An attribute of a language and binding dependent type that represents a writable stream to which 16-bit units can be output.
org.w3c.dom.ls.LSOutput#getByteStream()->java.io.OutputStream::: An attribute of a language and binding dependent type that represents a writable stream of bytes.
org.w3c.dom.ls.LSOutput#setByteStream(java.io.OutputStream)->void::: An attribute of a language and binding dependent type that represents a writable stream of bytes.
org.w3c.dom.ls.LSOutput#getSystemId()->String::: The system identifier, a URI reference [IETF RFC 2396], for this output destination
org.w3c.dom.ls.LSOutput#setSystemId(String)->void::: The system identifier, a URI reference [IETF RFC 2396], for this output destination
org.w3c.dom.ls.LSOutput#getEncoding()->String::: The character encoding to use for the output
org.w3c.dom.ls.LSOutput#setEncoding(String)->void::: The character encoding to use for the output
org.w3c.dom.ls.LSParser#getDomConfig()->DOMConfiguration::: The DOMConfiguration object used when parsing an input source
org.w3c.dom.ls.LSParser#getFilter()->LSParserFilter::: When a filter is provided, the implementation will call out to the filter as it is constructing the DOM tree structure
org.w3c.dom.ls.LSParser#setFilter(LSParserFilter)->void::: When a filter is provided, the implementation will call out to the filter as it is constructing the DOM tree structure
org.w3c.dom.ls.LSParser#getAsync()->boolean::: true if the LSParser is asynchronous, false if it is synchronous.
org.w3c.dom.ls.LSParser#getBusy()->boolean::: true if the LSParser is currently busy loading a document, otherwise false.
org.w3c.dom.ls.LSParser#parse(LSInput)->Document:::Parse an XML document from a resource identified by a LSInput.
org.w3c.dom.ls.LSParser#parseURI(String)->Document::: Parse an XML document from a location identified by a URI reference [IETF RFC 2396]
org.w3c.dom.ls.LSParser#parseWithContext(LSInput, Node, short)->Node::: Parse an XML fragment from a resource identified by a LSInput and insert the content into an existing document at the position specified with the context and action arguments
org.w3c.dom.ls.LSParser#abort()->void::: Abort the loading of the document that is currently being loaded by the LSParser
org.w3c.dom.ls.LSParserFilter#startElement(Element)->short::: The parser will call this method after each Element start tag has been scanned, but before the remainder of the Element is processed
org.w3c.dom.ls.LSParserFilter#acceptNode(Node)->short:::This method will be called by the parser at the completion of the parsing of each node
org.w3c.dom.ls.LSParserFilter#getWhatToShow()->int::: Tells the LSParser what types of nodes to show to the method LSParserFilter.acceptNode
org.w3c.dom.ls.LSProgressEvent#getInput()->LSInput:::The input source that is being parsed.
org.w3c.dom.ls.LSProgressEvent#getPosition()->int:::The current position in the input source, including all external entities and other resources that have been read.
org.w3c.dom.ls.LSProgressEvent#getTotalSize()->int:::The total size of the document including all external resources, this number might change as a document is being parsed if references to more external resources are seen
org.w3c.dom.ls.LSResourceResolver#resolveResource(String, String, String, String, String)->LSInput::: Allow the application to resolve external resources
org.w3c.dom.ls.LSSerializer#getDomConfig()->DOMConfiguration::: The DOMConfiguration object used by the LSSerializer when serializing a DOM node
org.w3c.dom.ls.LSSerializer#getNewLine()->String::: The end-of-line sequence of characters to be used in the XML being written out
org.w3c.dom.ls.LSSerializer#setNewLine(String)->void::: The end-of-line sequence of characters to be used in the XML being written out
org.w3c.dom.ls.LSSerializer#getFilter()->LSSerializerFilter::: When the application provides a filter, the serializer will call out to the filter before serializing each Node
org.w3c.dom.ls.LSSerializer#setFilter(LSSerializerFilter)->void::: When the application provides a filter, the serializer will call out to the filter before serializing each Node
org.w3c.dom.ls.LSSerializer#write(Node, LSOutput)->boolean::: Serialize the specified node as described above in the general description of the LSSerializer interface
org.w3c.dom.ls.LSSerializer#writeToURI(Node, String)->boolean::: A convenience method that acts as if LSSerializer.write was called with a LSOutput with no encoding specified and LSOutput.systemId set to the uri argument.
org.w3c.dom.ls.LSSerializer#writeToString(Node)->String::: Serialize the specified node as described above in the general description of the LSSerializer interface
org.w3c.dom.ls.LSSerializerFilter#getWhatToShow()->int::: Tells the LSSerializer what types of nodes to show to the filter
