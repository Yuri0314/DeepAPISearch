CollatorFactory#getCollator(String, String)::: collator factory get collator:::
CollatorFactory#getCollator(Locale)::: collator factory get collator:::
DOM#getIterator():::returns singleton iterator containg the document root:::
DOM#getStringValue()::: m get string value:::
DOM#getChildren(int)::: m get children:::
DOM#getTypedChildren(int)::: m get typed children:::
DOM#getAxisIterator(int)::: m get axis iterator:::
DOM#getTypedAxisIterator(int, int)::: m get typed axis iterator:::
DOM#getNthDescendant(int, int, boolean)::: m get nth descendant:::
DOM#getNamespaceAxisIterator(int, int)::: m get namespace axis iterator:::
DOM#getNodeValueIterator(DTMAxisIterator, int, String, boolean)::: m get node value iterator:::
DOM#orderNodes(DTMAxisIterator, int)::: m order nodes:::
DOM#getNodeName(int)::: m get node name:::
DOM#getNodeNameX(int)::: m get node name x:::
DOM#getNamespaceName(int)::: m get namespace name:::
DOM#getExpandedTypeID(int)::: m get expanded type d:::
DOM#getNamespaceType(int)::: m get namespace type:::
DOM#getParent(int)::: m get parent:::
DOM#getAttributeNode(int, int)::: m get attribute node:::
DOM#getStringValueX(int)::: m get string value x:::
DOM#copy(int, SerializationHandler)::: m copy:::
DOM#copy(DTMAxisIterator, SerializationHandler)::: m copy:::
DOM#shallowCopy(int, SerializationHandler)::: m shallow copy:::
DOM#lessThan(int, int)::: m less than:::
DOM#characters(int, SerializationHandler)::: m characters:::
DOM#makeNode(int)::: m make node:::
DOM#makeNode(DTMAxisIterator)::: m make node:::
DOM#makeNodeList(int)::: m make node list:::
DOM#makeNodeList(DTMAxisIterator)::: m make node list:::
DOM#getLanguage(int)::: m get language:::
DOM#getSize()::: m get size:::
DOM#getDocumentURI(int)::: m get document i:::
DOM#setFilter(StripFilter)::: m set filter:::
DOM#setupMapping(String[], String[], int[], String[])::: m setup mapping:::
DOM#isElement(int)::: m is element:::
DOM#isAttribute(int)::: m is attribute:::
DOM#lookupNamespace(int, String)::: m lookup namespace:::
DOM#getNodeIdent(int)::: m get node ident:::
DOM#getNodeHandle(int)::: m get node handle:::
DOM#getResultTreeFrag(int, int)::: m get result tree frag:::
DOM#getResultTreeFrag(int, int, boolean)::: m get result tree frag:::
DOM#getOutputDomBuilder()::: m get output dom builder:::
DOM#getNSType(int)::: m get type:::
DOM#getDocument()::: m get document:::
DOM#getUnparsedEntityURI(String)::: m get unparsed entity i:::
DOM#getElementsWithIDs()::: m get elements with ds:::
DOM#release()::: m release:::
DOMCache#retrieveDocument(String, String, Translet):::This method is responsible for:  (1) building the DOMImpl tree       Parser  _parser = new Parser();      DOMImpl _dom = new DOMImpl();      _parser.setDocumentHandler(_dom.getBuilder());      _parser.setDTDHandler(_dom.getBuilder());      _parser.parse(uri);  (2) giving the translet an early opportunity to extract anything from     the DOMImpl that it would like       translet.documentPrepass(_dom);  (3) setting the document URI:       _dom.setDocumentURI(uri);:::
DOMEnhancedForDTM#getMapping(String[], String[], int[])::: enhanced for m get mapping:::
DOMEnhancedForDTM#getReverseMapping(String[], String[], int[])::: enhanced for m get reverse mapping:::
DOMEnhancedForDTM#getNamespaceMapping(String[])::: enhanced for m get namespace mapping:::
DOMEnhancedForDTM#getReverseNamespaceMapping(String[])::: enhanced for m get reverse namespace mapping:::
DOMEnhancedForDTM#getDocumentURI()::: enhanced for m get document i:::
DOMEnhancedForDTM#setDocumentURI(String)::: enhanced for m set document i:::
DOMEnhancedForDTM#getExpandedTypeID2(int)::: enhanced for m get expanded type d2:::
DOMEnhancedForDTM#hasDOMSource()::: enhanced for m has source:::
DOMEnhancedForDTM#getElementById(String)::: enhanced for m get element by id:::
NodeIterator#next():::Callers should not call next() after it returns END.:::
NodeIterator#reset():::Resets the iterator to the last start node.:::
NodeIterator#getLast():::Returns the number of elements in this iterator.:::
NodeIterator#getPosition():::Returns the position of the current node in the set.:::
NodeIterator#setMark():::Remembers the current node for the next call to gotoMark().:::
NodeIterator#gotoMark():::Restores the current node remembered by setMark().:::
NodeIterator#setStartNode(int):::Set start to END should 'close' the iterator, i.e:::
NodeIterator#isReverse():::True if this iterator has a reversed axis.:::
NodeIterator#cloneIterator():::Returns a deep copy of this iterator.:::
NodeIterator#setRestartable(boolean):::Prevents or allows iterator restarts.:::
ProcessorVersion#main(String[])::: processor version main:::println
StripFilter#stripSpace(DOM, int, int)::: strip filter strip space:::
Translet#transform(DOM, SerializationHandler)::: translet transform:::
Translet#transform(DOM, SerializationHandler[])::: translet transform:::
Translet#transform(DOM, DTMAxisIterator, SerializationHandler)::: translet transform:::
Translet#addParameter(String, Object)::: translet add parameter:::
Translet#buildKeys(DOM, DTMAxisIterator, SerializationHandler, int)::: translet build keys:::
Translet#addAuxiliaryClass(Class)::: translet add auxiliary class:::
Translet#getAuxiliaryClass(String)::: translet get auxiliary class:::
Translet#getNamesArray()::: translet get names array:::
Translet#getUrisArray()::: translet get uris array:::
Translet#getTypesArray()::: translet get types array:::
Translet#getNamespaceArray()::: translet get namespace array:::
Translet#overrideDefaultParser()::: translet override default parser:::
Translet#setOverrideDefaultParser(boolean)::: translet set override default parser:::
