Buffer#createSameBufferException():::Returns an IllegalArgumentException indicating that the source and target are the same Buffer
Buffer#createCapacityException(int):::Verify that the capacity is nonnegative.
Buffer#capacity():::Returns this buffer's capacity.
Buffer#position():::Returns this buffer's position.
Buffer#position(int):::Sets this buffer's position
Buffer#limit():::Returns this buffer's limit.
Buffer#limit(int):::Sets this buffer's limit
Buffer#mark():::Sets this buffer's mark at its position.
Buffer#reset():::Resets this buffer's position to the previously-marked position
Buffer#clear():::Clears this buffer
Buffer#flip():::Flips this buffer
Buffer#rewind():::Rewinds this buffer
Buffer#remaining():::Returns the number of elements between the current position and the limit.
Buffer#hasRemaining():::Tells whether there are any elements between the current position and the limit.
Buffer#isReadOnly():::Tells whether or not this buffer is read-only.
Buffer#hasArray():::Tells whether or not this buffer is backed by an accessible array
Buffer#array():::Returns the array that backs this buffer&nbsp;&nbsp;(optional operation)
Buffer#arrayOffset():::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
Buffer#isDirect():::Tells whether or not this buffer is direct.
Buffer#slice():::Creates a new buffer whose content is a shared subsequence of this buffer's content
Buffer#duplicate():::Creates a new buffer that shares this buffer's content
Buffer#nextGetIndex():::Checks the current position against the limit, throwing a BufferUnderflowException if it is not smaller than the limit, and then increments the position.
Buffer#nextPutIndex():::Checks the current position against the limit, throwing a BufferOverflowException if it is not smaller than the limit, and then increments the position.
Buffer#checkIndex(int):::Checks the given index against the limit, throwing an IndexOutOfBoundsException if it is not smaller than the limit or is smaller than zero.
ByteBuffer#allocateDirect(int):::Allocates a new direct byte buffer
ByteBuffer#allocate(int):::Allocates a new byte buffer
ByteBuffer#wrap(byte[], int, int):::Wraps a byte array into a buffer
ByteBuffer#wrap(byte[]):::Wraps a byte array into a buffer
ByteBuffer#slice():::Creates a new byte buffer whose content is a shared subsequence of this buffer's content
ByteBuffer#duplicate():::Creates a new byte buffer that shares this buffer's content
ByteBuffer#asReadOnlyBuffer():::Creates a new, read-only byte buffer that shares this buffer's content
ByteBuffer#get():::Relative get method
ByteBuffer#put(byte):::Relative put method&nbsp;&nbsp;(optional operation)
ByteBuffer#get(int):::Absolute get method
ByteBuffer#put(int, byte):::Absolute put method&nbsp;&nbsp;(optional operation)
ByteBuffer#get(byte[], int, int):::Relative bulk get method
ByteBuffer#get(byte[]):::Relative bulk get method
ByteBuffer#put(ByteBuffer):::Relative bulk put method&nbsp;&nbsp;(optional operation)
ByteBuffer#put(byte[], int, int):::Relative bulk put method&nbsp;&nbsp;(optional operation)
ByteBuffer#put(byte[]):::Relative bulk put method&nbsp;&nbsp;(optional operation)
ByteBuffer#hasArray():::Tells whether or not this buffer is backed by an accessible byte array
ByteBuffer#array():::Returns the byte array that backs this buffer&nbsp;&nbsp;(optional operation)
ByteBuffer#arrayOffset():::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
ByteBuffer#compact():::Compacts this buffer&nbsp;&nbsp;(optional operation)
ByteBuffer#isDirect():::Tells whether or not this byte buffer is direct.
ByteBuffer#toString():::Returns a string summarizing the state of this buffer.
ByteBuffer#hashCode():::Returns the current hash code of this buffer
ByteBuffer#equals(Object):::Tells whether or not this buffer is equal to another object
ByteBuffer#compareTo(ByteBuffer):::Compares this buffer to another
ByteBuffer#mismatch(ByteBuffer):::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
ByteBuffer#order():::Retrieves this buffer's byte order
ByteBuffer#order(ByteOrder):::Modifies this buffer's byte order.
ByteBuffer#alignmentOffset(int, int):::Returns the memory address, pointing to the byte at the given index, modulus the given unit size
ByteBuffer#alignedSlice(int):::Creates a new byte buffer whose content is a shared and aligned subsequence of this buffer's content
ByteBuffer#getChar():::Relative get method for reading a char value
ByteBuffer#putChar(char):::Relative put method for writing a char value&nbsp;&nbsp;(optional operation)
ByteBuffer#getChar(int):::Absolute get method for reading a char value
ByteBuffer#putChar(int, char):::Absolute put method for writing a char value&nbsp;&nbsp;(optional operation)
ByteBuffer#asCharBuffer():::Creates a view of this byte buffer as a char buffer
ByteBuffer#getShort():::Relative get method for reading a short value
ByteBuffer#putShort(short):::Relative put method for writing a short value&nbsp;&nbsp;(optional operation)
ByteBuffer#getShort(int):::Absolute get method for reading a short value
ByteBuffer#putShort(int, short):::Absolute put method for writing a short value&nbsp;&nbsp;(optional operation)
ByteBuffer#asShortBuffer():::Creates a view of this byte buffer as a short buffer
ByteBuffer#getInt():::Relative get method for reading an int value
ByteBuffer#putInt(int):::Relative put method for writing an int value&nbsp;&nbsp;(optional operation)
ByteBuffer#getInt(int):::Absolute get method for reading an int value
ByteBuffer#putInt(int, int):::Absolute put method for writing an int value&nbsp;&nbsp;(optional operation)
ByteBuffer#asIntBuffer():::Creates a view of this byte buffer as an int buffer
ByteBuffer#getLong():::Relative get method for reading a long value
ByteBuffer#putLong(long):::Relative put method for writing a long value&nbsp;&nbsp;(optional operation)
ByteBuffer#getLong(int):::Absolute get method for reading a long value
ByteBuffer#putLong(int, long):::Absolute put method for writing a long value&nbsp;&nbsp;(optional operation)
ByteBuffer#asLongBuffer():::Creates a view of this byte buffer as a long buffer
ByteBuffer#getFloat():::Relative get method for reading a float value
ByteBuffer#putFloat(float):::Relative put method for writing a float value&nbsp;&nbsp;(optional operation)
ByteBuffer#getFloat(int):::Absolute get method for reading a float value
ByteBuffer#putFloat(int, float):::Absolute put method for writing a float value&nbsp;&nbsp;(optional operation)
ByteBuffer#asFloatBuffer():::Creates a view of this byte buffer as a float buffer
ByteBuffer#getDouble():::Relative get method for reading a double value
ByteBuffer#putDouble(double):::Relative put method for writing a double value&nbsp;&nbsp;(optional operation)
ByteBuffer#getDouble(int):::Absolute get method for reading a double value
ByteBuffer#putDouble(int, double):::Absolute put method for writing a double value&nbsp;&nbsp;(optional operation)
ByteBuffer#asDoubleBuffer():::Creates a view of this byte buffer as a double buffer
ByteOrder#nativeOrder():::Retrieves the native byte order of the underlying platform
ByteOrder#toString():::Constructs a string describing this object
CharBuffer#allocate(int):::Allocates a new char buffer
CharBuffer#wrap(char[], int, int):::Wraps a char array into a buffer
CharBuffer#wrap(char[]):::Wraps a char array into a buffer
CharBuffer#read(CharBuffer):::Attempts to read characters into the specified character buffer
CharBuffer#wrap(CharSequence, int, int):::Wraps a character sequence into a buffer
CharBuffer#wrap(CharSequence):::Wraps a character sequence into a buffer
CharBuffer#slice():::Creates a new char buffer whose content is a shared subsequence of this buffer's content
CharBuffer#duplicate():::Creates a new char buffer that shares this buffer's content
CharBuffer#asReadOnlyBuffer():::Creates a new, read-only char buffer that shares this buffer's content
CharBuffer#get():::Relative get method
CharBuffer#put(char):::Relative put method&nbsp;&nbsp;(optional operation)
CharBuffer#get(int):::Absolute get method
CharBuffer#put(int, char):::Absolute put method&nbsp;&nbsp;(optional operation)
CharBuffer#get(char[], int, int):::Relative bulk get method
CharBuffer#get(char[]):::Relative bulk get method
CharBuffer#put(CharBuffer):::Relative bulk put method&nbsp;&nbsp;(optional operation)
CharBuffer#put(char[], int, int):::Relative bulk put method&nbsp;&nbsp;(optional operation)
CharBuffer#put(char[]):::Relative bulk put method&nbsp;&nbsp;(optional operation)
CharBuffer#put(String, int, int):::Relative bulk put method&nbsp;&nbsp;(optional operation)
CharBuffer#put(String):::Relative bulk put method&nbsp;&nbsp;(optional operation)
CharBuffer#hasArray():::Tells whether or not this buffer is backed by an accessible char array
CharBuffer#array():::Returns the char array that backs this buffer&nbsp;&nbsp;(optional operation)
CharBuffer#arrayOffset():::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
CharBuffer#compact():::Compacts this buffer&nbsp;&nbsp;(optional operation)
CharBuffer#isDirect():::Tells whether or not this char buffer is direct.
CharBuffer#hashCode():::Returns the current hash code of this buffer
CharBuffer#equals(Object):::Tells whether or not this buffer is equal to another object
CharBuffer#compareTo(CharBuffer):::Compares this buffer to another
CharBuffer#mismatch(CharBuffer):::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
CharBuffer#toString():::Returns a string containing the characters in this buffer
CharBuffer#length():::Returns the length of this character buffer
CharBuffer#charAt(int):::Reads the character at the given index relative to the current position.
CharBuffer#subSequence(int, int):::Creates a new character buffer that represents the specified subsequence of this buffer, relative to the current position
CharBuffer#append(CharSequence):::Appends the specified character sequence  to this buffer&nbsp;&nbsp;(optional operation)
CharBuffer#append(CharSequence, int, int):::Appends a subsequence of the  specified character sequence  to this buffer&nbsp;&nbsp;(optional operation)
CharBuffer#append(char):::Appends the specified char  to this buffer&nbsp;&nbsp;(optional operation)
CharBuffer#order():::Retrieves this buffer's byte order
DoubleBuffer#allocate(int):::Allocates a new double buffer
DoubleBuffer#wrap(double[], int, int):::Wraps a double array into a buffer
DoubleBuffer#wrap(double[]):::Wraps a double array into a buffer
DoubleBuffer#slice():::Creates a new double buffer whose content is a shared subsequence of this buffer's content
DoubleBuffer#duplicate():::Creates a new double buffer that shares this buffer's content
DoubleBuffer#asReadOnlyBuffer():::Creates a new, read-only double buffer that shares this buffer's content
DoubleBuffer#get():::Relative get method
DoubleBuffer#put(double):::Relative put method&nbsp;&nbsp;(optional operation)
DoubleBuffer#get(int):::Absolute get method
DoubleBuffer#put(int, double):::Absolute put method&nbsp;&nbsp;(optional operation)
DoubleBuffer#get(double[], int, int):::Relative bulk get method
DoubleBuffer#get(double[]):::Relative bulk get method
DoubleBuffer#put(DoubleBuffer):::Relative bulk put method&nbsp;&nbsp;(optional operation)
DoubleBuffer#put(double[], int, int):::Relative bulk put method&nbsp;&nbsp;(optional operation)
DoubleBuffer#put(double[]):::Relative bulk put method&nbsp;&nbsp;(optional operation)
DoubleBuffer#hasArray():::Tells whether or not this buffer is backed by an accessible double array
DoubleBuffer#array():::Returns the double array that backs this buffer&nbsp;&nbsp;(optional operation)
DoubleBuffer#arrayOffset():::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
DoubleBuffer#compact():::Compacts this buffer&nbsp;&nbsp;(optional operation)
DoubleBuffer#isDirect():::Tells whether or not this double buffer is direct.
DoubleBuffer#toString():::Returns a string summarizing the state of this buffer.
DoubleBuffer#hashCode():::Returns the current hash code of this buffer
DoubleBuffer#equals(Object):::Tells whether or not this buffer is equal to another object
DoubleBuffer#compareTo(DoubleBuffer):::Compares this buffer to another
DoubleBuffer#mismatch(DoubleBuffer):::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
DoubleBuffer#order():::Retrieves this buffer's byte order
FloatBuffer#allocate(int):::Allocates a new float buffer
FloatBuffer#wrap(float[], int, int):::Wraps a float array into a buffer
FloatBuffer#wrap(float[]):::Wraps a float array into a buffer
FloatBuffer#slice():::Creates a new float buffer whose content is a shared subsequence of this buffer's content
FloatBuffer#duplicate():::Creates a new float buffer that shares this buffer's content
FloatBuffer#asReadOnlyBuffer():::Creates a new, read-only float buffer that shares this buffer's content
FloatBuffer#get():::Relative get method
FloatBuffer#put(float):::Relative put method&nbsp;&nbsp;(optional operation)
FloatBuffer#get(int):::Absolute get method
FloatBuffer#put(int, float):::Absolute put method&nbsp;&nbsp;(optional operation)
FloatBuffer#get(float[], int, int):::Relative bulk get method
FloatBuffer#get(float[]):::Relative bulk get method
FloatBuffer#put(FloatBuffer):::Relative bulk put method&nbsp;&nbsp;(optional operation)
FloatBuffer#put(float[], int, int):::Relative bulk put method&nbsp;&nbsp;(optional operation)
FloatBuffer#put(float[]):::Relative bulk put method&nbsp;&nbsp;(optional operation)
FloatBuffer#hasArray():::Tells whether or not this buffer is backed by an accessible float array
FloatBuffer#array():::Returns the float array that backs this buffer&nbsp;&nbsp;(optional operation)
FloatBuffer#arrayOffset():::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
FloatBuffer#compact():::Compacts this buffer&nbsp;&nbsp;(optional operation)
FloatBuffer#isDirect():::Tells whether or not this float buffer is direct.
FloatBuffer#toString():::Returns a string summarizing the state of this buffer.
FloatBuffer#hashCode():::Returns the current hash code of this buffer
FloatBuffer#equals(Object):::Tells whether or not this buffer is equal to another object
FloatBuffer#compareTo(FloatBuffer):::Compares this buffer to another
FloatBuffer#mismatch(FloatBuffer):::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
FloatBuffer#order():::Retrieves this buffer's byte order
IntBuffer#allocate(int):::Allocates a new int buffer
IntBuffer#wrap(int[], int, int):::Wraps an int array into a buffer
IntBuffer#wrap(int[]):::Wraps an int array into a buffer
IntBuffer#slice():::Creates a new int buffer whose content is a shared subsequence of this buffer's content
IntBuffer#duplicate():::Creates a new int buffer that shares this buffer's content
IntBuffer#asReadOnlyBuffer():::Creates a new, read-only int buffer that shares this buffer's content
IntBuffer#get():::Relative get method
IntBuffer#put(int):::Relative put method&nbsp;&nbsp;(optional operation)
IntBuffer#get(int):::Absolute get method
IntBuffer#put(int, int):::Absolute put method&nbsp;&nbsp;(optional operation)
IntBuffer#get(int[], int, int):::Relative bulk get method
IntBuffer#get(int[]):::Relative bulk get method
IntBuffer#put(IntBuffer):::Relative bulk put method&nbsp;&nbsp;(optional operation)
IntBuffer#put(int[], int, int):::Relative bulk put method&nbsp;&nbsp;(optional operation)
IntBuffer#put(int[]):::Relative bulk put method&nbsp;&nbsp;(optional operation)
IntBuffer#hasArray():::Tells whether or not this buffer is backed by an accessible int array
IntBuffer#array():::Returns the int array that backs this buffer&nbsp;&nbsp;(optional operation)
IntBuffer#arrayOffset():::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
IntBuffer#compact():::Compacts this buffer&nbsp;&nbsp;(optional operation)
IntBuffer#isDirect():::Tells whether or not this int buffer is direct.
IntBuffer#toString():::Returns a string summarizing the state of this buffer.
IntBuffer#hashCode():::Returns the current hash code of this buffer
IntBuffer#equals(Object):::Tells whether or not this buffer is equal to another object
IntBuffer#compareTo(IntBuffer):::Compares this buffer to another
IntBuffer#mismatch(IntBuffer):::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
IntBuffer#order():::Retrieves this buffer's byte order
LongBuffer#allocate(int):::Allocates a new long buffer
LongBuffer#wrap(long[], int, int):::Wraps a long array into a buffer
LongBuffer#wrap(long[]):::Wraps a long array into a buffer
LongBuffer#slice():::Creates a new long buffer whose content is a shared subsequence of this buffer's content
LongBuffer#duplicate():::Creates a new long buffer that shares this buffer's content
LongBuffer#asReadOnlyBuffer():::Creates a new, read-only long buffer that shares this buffer's content
LongBuffer#get():::Relative get method
LongBuffer#put(long):::Relative put method&nbsp;&nbsp;(optional operation)
LongBuffer#get(int):::Absolute get method
LongBuffer#put(int, long):::Absolute put method&nbsp;&nbsp;(optional operation)
LongBuffer#get(long[], int, int):::Relative bulk get method
LongBuffer#get(long[]):::Relative bulk get method
LongBuffer#put(LongBuffer):::Relative bulk put method&nbsp;&nbsp;(optional operation)
LongBuffer#put(long[], int, int):::Relative bulk put method&nbsp;&nbsp;(optional operation)
LongBuffer#put(long[]):::Relative bulk put method&nbsp;&nbsp;(optional operation)
LongBuffer#hasArray():::Tells whether or not this buffer is backed by an accessible long array
LongBuffer#array():::Returns the long array that backs this buffer&nbsp;&nbsp;(optional operation)
LongBuffer#arrayOffset():::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
LongBuffer#compact():::Compacts this buffer&nbsp;&nbsp;(optional operation)
LongBuffer#isDirect():::Tells whether or not this long buffer is direct.
LongBuffer#toString():::Returns a string summarizing the state of this buffer.
LongBuffer#hashCode():::Returns the current hash code of this buffer
LongBuffer#equals(Object):::Tells whether or not this buffer is equal to another object
LongBuffer#compareTo(LongBuffer):::Compares this buffer to another
LongBuffer#mismatch(LongBuffer):::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
LongBuffer#order():::Retrieves this buffer's byte order
MappedByteBuffer#isLoaded():::Tells whether or not this buffer's content is resident in physical memory
MappedByteBuffer#load():::Loads this buffer's content into physical memory
MappedByteBuffer#force():::Forces any changes made to this buffer's content to be written to the storage device containing the mapped file
ShortBuffer#allocate(int):::Allocates a new short buffer
ShortBuffer#wrap(short[], int, int):::Wraps a short array into a buffer
ShortBuffer#wrap(short[]):::Wraps a short array into a buffer
ShortBuffer#slice():::Creates a new short buffer whose content is a shared subsequence of this buffer's content
ShortBuffer#duplicate():::Creates a new short buffer that shares this buffer's content
ShortBuffer#asReadOnlyBuffer():::Creates a new, read-only short buffer that shares this buffer's content
ShortBuffer#get():::Relative get method
ShortBuffer#put(short):::Relative put method&nbsp;&nbsp;(optional operation)
ShortBuffer#get(int):::Absolute get method
ShortBuffer#put(int, short):::Absolute put method&nbsp;&nbsp;(optional operation)
ShortBuffer#get(short[], int, int):::Relative bulk get method
ShortBuffer#get(short[]):::Relative bulk get method
ShortBuffer#put(ShortBuffer):::Relative bulk put method&nbsp;&nbsp;(optional operation)
ShortBuffer#put(short[], int, int):::Relative bulk put method&nbsp;&nbsp;(optional operation)
ShortBuffer#put(short[]):::Relative bulk put method&nbsp;&nbsp;(optional operation)
ShortBuffer#hasArray():::Tells whether or not this buffer is backed by an accessible short array
ShortBuffer#array():::Returns the short array that backs this buffer&nbsp;&nbsp;(optional operation)
ShortBuffer#arrayOffset():::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
ShortBuffer#compact():::Compacts this buffer&nbsp;&nbsp;(optional operation)
ShortBuffer#isDirect():::Tells whether or not this short buffer is direct.
ShortBuffer#toString():::Returns a string summarizing the state of this buffer.
ShortBuffer#hashCode():::Returns the current hash code of this buffer
ShortBuffer#equals(Object):::Tells whether or not this buffer is equal to another object
ShortBuffer#compareTo(ShortBuffer):::Compares this buffer to another
ShortBuffer#mismatch(ShortBuffer):::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
ShortBuffer#order():::Retrieves this buffer's byte order
