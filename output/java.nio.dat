java.nio.Bits#swap(short)->short:::
java.nio.Bits#swap(char)->char:::
java.nio.Bits#swap(int)->int:::
java.nio.Bits#swap(long)->long:::
java.nio.Bits#pageSize()->int:::
java.nio.Bits#pageCount(long)->int:::
java.nio.Bits#unaligned()->boolean:::
java.nio.Bits#reserveMemory(long, int)->void:::
java.nio.Bits#unreserveMemory(long, int)->void:::
java.nio.Buffer#createSameBufferException()->IllegalArgumentException:::Returns an {@code IllegalArgumentException} indicating that the source  and target are the same {@code Buffer}
java.nio.Buffer#createCapacityException(int)->IllegalArgumentException:::Verify that the capacity is nonnegative.
java.nio.Buffer#capacity()->int:::Returns this buffer's capacity.
java.nio.Buffer#position()->int:::Returns this buffer's position.
java.nio.Buffer#position(int)->Buffer:::Sets this buffer's position
java.nio.Buffer#limit()->int:::Returns this buffer's limit.
java.nio.Buffer#limit(int)->Buffer:::Sets this buffer's limit
java.nio.Buffer#mark()->Buffer:::Sets this buffer's mark at its position.
java.nio.Buffer#reset()->Buffer:::Resets this buffer's position to the previously-marked position
java.nio.Buffer#clear()->Buffer:::Clears this buffer
java.nio.Buffer#flip()->Buffer:::Flips this buffer
java.nio.Buffer#rewind()->Buffer:::Rewinds this buffer
java.nio.Buffer#remaining()->int:::Returns the number of elements between the current position and the  limit.
java.nio.Buffer#hasRemaining()->boolean:::Tells whether there are any elements between the current position and  the limit.
java.nio.Buffer#isReadOnly()->boolean:::Tells whether or not this buffer is read-only.
java.nio.Buffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible  array
java.nio.Buffer#array()->Object:::Returns the array that backs this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.Buffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first  element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.Buffer#isDirect()->boolean:::Tells whether or not this buffer is  <a href="ByteBuffer.html#direct"><i>direct</i></a>.
java.nio.Buffer#slice()->Buffer:::Creates a new buffer whose content is a shared subsequence of  this buffer's content
java.nio.Buffer#duplicate()->Buffer:::Creates a new buffer that shares this buffer's content
java.nio.Buffer#base()->Object:::
java.nio.Buffer#nextGetIndex()->int:::Checks the current position against the limit, throwing a {@link  BufferUnderflowException} if it is not smaller than the limit, and then  increments the position.
java.nio.Buffer#nextGetIndex(int)->int:::
java.nio.Buffer#nextPutIndex()->int:::Checks the current position against the limit, throwing a {@link  BufferOverflowException} if it is not smaller than the limit, and then  increments the position.
java.nio.Buffer#nextPutIndex(int)->int:::
java.nio.Buffer#checkIndex(int)->int:::Checks the given index against the limit, throwing an {@link  IndexOutOfBoundsException} if it is not smaller than the limit  or is smaller than zero.
java.nio.Buffer#checkIndex(int, int)->int:::
java.nio.Buffer#markValue()->int:::
java.nio.Buffer#truncate()->void:::
java.nio.Buffer#discardMark()->void:::
java.nio.Buffer#checkBounds(int, int, int)->void:::
java.nio.BufferMismatch#mismatch(ByteBuffer, int, ByteBuffer, int, int)->int:::
java.nio.BufferMismatch#mismatch(CharBuffer, int, CharBuffer, int, int)->int:::
java.nio.BufferMismatch#mismatch(ShortBuffer, int, ShortBuffer, int, int)->int:::
java.nio.BufferMismatch#mismatch(IntBuffer, int, IntBuffer, int, int)->int:::
java.nio.BufferMismatch#mismatch(FloatBuffer, int, FloatBuffer, int, int)->int:::
java.nio.BufferMismatch#mismatch(LongBuffer, int, LongBuffer, int, int)->int:::
java.nio.BufferMismatch#mismatch(DoubleBuffer, int, DoubleBuffer, int, int)->int:::
java.nio.ByteBuffer#base()->Object:::
java.nio.ByteBuffer#allocateDirect(int)->ByteBuffer:::Allocates a new direct byte buffer
java.nio.ByteBuffer#allocate(int)->ByteBuffer:::Allocates a new byte buffer
java.nio.ByteBuffer#wrap(byte[], int, int)->ByteBuffer:::Wraps a byte array into a buffer
java.nio.ByteBuffer#wrap(byte[])->ByteBuffer:::Wraps a byte array into a buffer
java.nio.ByteBuffer#slice()->ByteBuffer:::Creates a new byte buffer whose content is a shared subsequence of  this buffer's content
java.nio.ByteBuffer#duplicate()->ByteBuffer:::Creates a new byte buffer that shares this buffer's content
java.nio.ByteBuffer#asReadOnlyBuffer()->ByteBuffer:::Creates a new, read-only byte buffer that shares this buffer's  content
java.nio.ByteBuffer#get()->byte:::Relative <i>get</i> method
java.nio.ByteBuffer#put(byte)->ByteBuffer:::Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#get(int)->byte:::Absolute <i>get</i> method
java.nio.ByteBuffer#put(int, byte)->ByteBuffer:::Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#get(byte[], int, int)->ByteBuffer:::Relative bulk <i>get</i> method
java.nio.ByteBuffer#get(byte[])->ByteBuffer:::Relative bulk <i>get</i> method
java.nio.ByteBuffer#put(ByteBuffer)->ByteBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#put(byte[], int, int)->ByteBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#put(byte[])->ByteBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible byte  array
java.nio.ByteBuffer#array()->byte[]:::Returns the byte array that backs this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first  element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#position(int)->ByteBuffer:::{@inheritDoc}
java.nio.ByteBuffer#limit(int)->ByteBuffer:::{@inheritDoc}
java.nio.ByteBuffer#mark()->ByteBuffer:::{@inheritDoc}
java.nio.ByteBuffer#reset()->ByteBuffer:::{@inheritDoc}
java.nio.ByteBuffer#clear()->ByteBuffer:::{@inheritDoc}
java.nio.ByteBuffer#flip()->ByteBuffer:::{@inheritDoc}
java.nio.ByteBuffer#rewind()->ByteBuffer:::{@inheritDoc}
java.nio.ByteBuffer#compact()->ByteBuffer:::Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#isDirect()->boolean:::Tells whether or not this byte buffer is direct.
java.nio.ByteBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.ByteBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.ByteBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.ByteBuffer#compareTo(ByteBuffer)->int:::Compares this buffer to another
java.nio.ByteBuffer#mismatch(ByteBuffer)->int:::Finds and returns the relative index of the first mismatch between this  buffer and a given buffer
java.nio.ByteBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.ByteBuffer#order(ByteOrder)->ByteBuffer:::Modifies this buffer's byte order.
java.nio.ByteBuffer#alignmentOffset(int, int)->int:::Returns the memory address, pointing to the byte at the given index,  modulus the given unit size
java.nio.ByteBuffer#alignedSlice(int)->ByteBuffer:::Creates a new byte buffer whose content is a shared and aligned  subsequence of this buffer's content
java.nio.ByteBuffer#slice(int, int)->ByteBuffer:::
java.nio.ByteBuffer#getChar()->char:::Relative <i>get</i> method for reading a char value
java.nio.ByteBuffer#putChar(char)->ByteBuffer:::Relative <i>put</i> method for writing a char  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#getChar(int)->char:::Absolute <i>get</i> method for reading a char value
java.nio.ByteBuffer#putChar(int, char)->ByteBuffer:::Absolute <i>put</i> method for writing a char  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#asCharBuffer()->CharBuffer:::Creates a view of this byte buffer as a char buffer
java.nio.ByteBuffer#getShort()->short:::Relative <i>get</i> method for reading a short value
java.nio.ByteBuffer#putShort(short)->ByteBuffer:::Relative <i>put</i> method for writing a short  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#getShort(int)->short:::Absolute <i>get</i> method for reading a short value
java.nio.ByteBuffer#putShort(int, short)->ByteBuffer:::Absolute <i>put</i> method for writing a short  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#asShortBuffer()->ShortBuffer:::Creates a view of this byte buffer as a short buffer
java.nio.ByteBuffer#getInt()->int:::Relative <i>get</i> method for reading an int value
java.nio.ByteBuffer#putInt(int)->ByteBuffer:::Relative <i>put</i> method for writing an int  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#getInt(int)->int:::Absolute <i>get</i> method for reading an int value
java.nio.ByteBuffer#putInt(int, int)->ByteBuffer:::Absolute <i>put</i> method for writing an int  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#asIntBuffer()->IntBuffer:::Creates a view of this byte buffer as an int buffer
java.nio.ByteBuffer#getLong()->long:::Relative <i>get</i> method for reading a long value
java.nio.ByteBuffer#putLong(long)->ByteBuffer:::Relative <i>put</i> method for writing a long  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#getLong(int)->long:::Absolute <i>get</i> method for reading a long value
java.nio.ByteBuffer#putLong(int, long)->ByteBuffer:::Absolute <i>put</i> method for writing a long  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#asLongBuffer()->LongBuffer:::Creates a view of this byte buffer as a long buffer
java.nio.ByteBuffer#getFloat()->float:::Relative <i>get</i> method for reading a float value
java.nio.ByteBuffer#putFloat(float)->ByteBuffer:::Relative <i>put</i> method for writing a float  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#getFloat(int)->float:::Absolute <i>get</i> method for reading a float value
java.nio.ByteBuffer#putFloat(int, float)->ByteBuffer:::Absolute <i>put</i> method for writing a float  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#asFloatBuffer()->FloatBuffer:::Creates a view of this byte buffer as a float buffer
java.nio.ByteBuffer#getDouble()->double:::Relative <i>get</i> method for reading a double value
java.nio.ByteBuffer#putDouble(double)->ByteBuffer:::Relative <i>put</i> method for writing a double  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#getDouble(int)->double:::Absolute <i>get</i> method for reading a double value
java.nio.ByteBuffer#putDouble(int, double)->ByteBuffer:::Absolute <i>put</i> method for writing a double  value&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ByteBuffer#asDoubleBuffer()->DoubleBuffer:::Creates a view of this byte buffer as a double buffer
java.nio.ByteBufferAsCharBufferB#base()->Object:::
java.nio.ByteBufferAsCharBufferB#slice()->CharBuffer:::
java.nio.ByteBufferAsCharBufferB#duplicate()->CharBuffer:::
java.nio.ByteBufferAsCharBufferB#asReadOnlyBuffer()->CharBuffer:::
java.nio.ByteBufferAsCharBufferB#byteOffset(long)->long:::
java.nio.ByteBufferAsCharBufferB#get()->char:::
java.nio.ByteBufferAsCharBufferB#get(int)->char:::
java.nio.ByteBufferAsCharBufferB#getUnchecked(int)->char:::
java.nio.ByteBufferAsCharBufferB#put(char)->CharBuffer:::
java.nio.ByteBufferAsCharBufferB#put(int, char)->CharBuffer:::
java.nio.ByteBufferAsCharBufferB#compact()->CharBuffer:::
java.nio.ByteBufferAsCharBufferB#isDirect()->boolean:::
java.nio.ByteBufferAsCharBufferB#isReadOnly()->boolean:::
java.nio.ByteBufferAsCharBufferB#toString(int, int)->String:::
java.nio.ByteBufferAsCharBufferB#subSequence(int, int)->CharBuffer:::
java.nio.ByteBufferAsCharBufferB#order()->ByteOrder:::
java.nio.ByteBufferAsCharBufferB#charRegionOrder()->ByteOrder:::
java.nio.ByteBufferAsCharBufferL#base()->Object:::
java.nio.ByteBufferAsCharBufferL#slice()->CharBuffer:::
java.nio.ByteBufferAsCharBufferL#duplicate()->CharBuffer:::
java.nio.ByteBufferAsCharBufferL#asReadOnlyBuffer()->CharBuffer:::
java.nio.ByteBufferAsCharBufferL#byteOffset(long)->long:::
java.nio.ByteBufferAsCharBufferL#get()->char:::
java.nio.ByteBufferAsCharBufferL#get(int)->char:::
java.nio.ByteBufferAsCharBufferL#getUnchecked(int)->char:::
java.nio.ByteBufferAsCharBufferL#put(char)->CharBuffer:::
java.nio.ByteBufferAsCharBufferL#put(int, char)->CharBuffer:::
java.nio.ByteBufferAsCharBufferL#compact()->CharBuffer:::
java.nio.ByteBufferAsCharBufferL#isDirect()->boolean:::
java.nio.ByteBufferAsCharBufferL#isReadOnly()->boolean:::
java.nio.ByteBufferAsCharBufferL#toString(int, int)->String:::
java.nio.ByteBufferAsCharBufferL#subSequence(int, int)->CharBuffer:::
java.nio.ByteBufferAsCharBufferL#order()->ByteOrder:::
java.nio.ByteBufferAsCharBufferL#charRegionOrder()->ByteOrder:::
java.nio.ByteBufferAsCharBufferRB#base()->Object:::
java.nio.ByteBufferAsCharBufferRB#slice()->CharBuffer:::
java.nio.ByteBufferAsCharBufferRB#duplicate()->CharBuffer:::
java.nio.ByteBufferAsCharBufferRB#asReadOnlyBuffer()->CharBuffer:::
java.nio.ByteBufferAsCharBufferRB#put(char)->CharBuffer:::
java.nio.ByteBufferAsCharBufferRB#put(int, char)->CharBuffer:::
java.nio.ByteBufferAsCharBufferRB#compact()->CharBuffer:::
java.nio.ByteBufferAsCharBufferRB#isDirect()->boolean:::
java.nio.ByteBufferAsCharBufferRB#isReadOnly()->boolean:::
java.nio.ByteBufferAsCharBufferRB#toString(int, int)->String:::
java.nio.ByteBufferAsCharBufferRB#subSequence(int, int)->CharBuffer:::
java.nio.ByteBufferAsCharBufferRB#order()->ByteOrder:::
java.nio.ByteBufferAsCharBufferRB#charRegionOrder()->ByteOrder:::
java.nio.ByteBufferAsCharBufferRL#base()->Object:::
java.nio.ByteBufferAsCharBufferRL#slice()->CharBuffer:::
java.nio.ByteBufferAsCharBufferRL#duplicate()->CharBuffer:::
java.nio.ByteBufferAsCharBufferRL#asReadOnlyBuffer()->CharBuffer:::
java.nio.ByteBufferAsCharBufferRL#put(char)->CharBuffer:::
java.nio.ByteBufferAsCharBufferRL#put(int, char)->CharBuffer:::
java.nio.ByteBufferAsCharBufferRL#compact()->CharBuffer:::
java.nio.ByteBufferAsCharBufferRL#isDirect()->boolean:::
java.nio.ByteBufferAsCharBufferRL#isReadOnly()->boolean:::
java.nio.ByteBufferAsCharBufferRL#toString(int, int)->String:::
java.nio.ByteBufferAsCharBufferRL#subSequence(int, int)->CharBuffer:::
java.nio.ByteBufferAsCharBufferRL#order()->ByteOrder:::
java.nio.ByteBufferAsCharBufferRL#charRegionOrder()->ByteOrder:::
java.nio.ByteBufferAsDoubleBufferB#base()->Object:::
java.nio.ByteBufferAsDoubleBufferB#slice()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferB#duplicate()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferB#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferB#byteOffset(long)->long:::
java.nio.ByteBufferAsDoubleBufferB#get()->double:::
java.nio.ByteBufferAsDoubleBufferB#get(int)->double:::
java.nio.ByteBufferAsDoubleBufferB#put(double)->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferB#put(int, double)->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferB#compact()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferB#isDirect()->boolean:::
java.nio.ByteBufferAsDoubleBufferB#isReadOnly()->boolean:::
java.nio.ByteBufferAsDoubleBufferB#order()->ByteOrder:::
java.nio.ByteBufferAsDoubleBufferL#base()->Object:::
java.nio.ByteBufferAsDoubleBufferL#slice()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferL#duplicate()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferL#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferL#byteOffset(long)->long:::
java.nio.ByteBufferAsDoubleBufferL#get()->double:::
java.nio.ByteBufferAsDoubleBufferL#get(int)->double:::
java.nio.ByteBufferAsDoubleBufferL#put(double)->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferL#put(int, double)->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferL#compact()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferL#isDirect()->boolean:::
java.nio.ByteBufferAsDoubleBufferL#isReadOnly()->boolean:::
java.nio.ByteBufferAsDoubleBufferL#order()->ByteOrder:::
java.nio.ByteBufferAsDoubleBufferRB#base()->Object:::
java.nio.ByteBufferAsDoubleBufferRB#slice()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRB#duplicate()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRB#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRB#put(double)->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRB#put(int, double)->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRB#compact()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRB#isDirect()->boolean:::
java.nio.ByteBufferAsDoubleBufferRB#isReadOnly()->boolean:::
java.nio.ByteBufferAsDoubleBufferRB#order()->ByteOrder:::
java.nio.ByteBufferAsDoubleBufferRL#base()->Object:::
java.nio.ByteBufferAsDoubleBufferRL#slice()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRL#duplicate()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRL#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRL#put(double)->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRL#put(int, double)->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRL#compact()->DoubleBuffer:::
java.nio.ByteBufferAsDoubleBufferRL#isDirect()->boolean:::
java.nio.ByteBufferAsDoubleBufferRL#isReadOnly()->boolean:::
java.nio.ByteBufferAsDoubleBufferRL#order()->ByteOrder:::
java.nio.ByteBufferAsFloatBufferB#base()->Object:::
java.nio.ByteBufferAsFloatBufferB#slice()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferB#duplicate()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferB#asReadOnlyBuffer()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferB#byteOffset(long)->long:::
java.nio.ByteBufferAsFloatBufferB#get()->float:::
java.nio.ByteBufferAsFloatBufferB#get(int)->float:::
java.nio.ByteBufferAsFloatBufferB#put(float)->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferB#put(int, float)->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferB#compact()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferB#isDirect()->boolean:::
java.nio.ByteBufferAsFloatBufferB#isReadOnly()->boolean:::
java.nio.ByteBufferAsFloatBufferB#order()->ByteOrder:::
java.nio.ByteBufferAsFloatBufferL#base()->Object:::
java.nio.ByteBufferAsFloatBufferL#slice()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferL#duplicate()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferL#asReadOnlyBuffer()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferL#byteOffset(long)->long:::
java.nio.ByteBufferAsFloatBufferL#get()->float:::
java.nio.ByteBufferAsFloatBufferL#get(int)->float:::
java.nio.ByteBufferAsFloatBufferL#put(float)->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferL#put(int, float)->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferL#compact()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferL#isDirect()->boolean:::
java.nio.ByteBufferAsFloatBufferL#isReadOnly()->boolean:::
java.nio.ByteBufferAsFloatBufferL#order()->ByteOrder:::
java.nio.ByteBufferAsFloatBufferRB#base()->Object:::
java.nio.ByteBufferAsFloatBufferRB#slice()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRB#duplicate()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRB#asReadOnlyBuffer()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRB#put(float)->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRB#put(int, float)->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRB#compact()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRB#isDirect()->boolean:::
java.nio.ByteBufferAsFloatBufferRB#isReadOnly()->boolean:::
java.nio.ByteBufferAsFloatBufferRB#order()->ByteOrder:::
java.nio.ByteBufferAsFloatBufferRL#base()->Object:::
java.nio.ByteBufferAsFloatBufferRL#slice()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRL#duplicate()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRL#asReadOnlyBuffer()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRL#put(float)->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRL#put(int, float)->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRL#compact()->FloatBuffer:::
java.nio.ByteBufferAsFloatBufferRL#isDirect()->boolean:::
java.nio.ByteBufferAsFloatBufferRL#isReadOnly()->boolean:::
java.nio.ByteBufferAsFloatBufferRL#order()->ByteOrder:::
java.nio.ByteBufferAsIntBufferB#base()->Object:::
java.nio.ByteBufferAsIntBufferB#slice()->IntBuffer:::
java.nio.ByteBufferAsIntBufferB#duplicate()->IntBuffer:::
java.nio.ByteBufferAsIntBufferB#asReadOnlyBuffer()->IntBuffer:::
java.nio.ByteBufferAsIntBufferB#byteOffset(long)->long:::
java.nio.ByteBufferAsIntBufferB#get()->int:::
java.nio.ByteBufferAsIntBufferB#get(int)->int:::
java.nio.ByteBufferAsIntBufferB#put(int)->IntBuffer:::
java.nio.ByteBufferAsIntBufferB#put(int, int)->IntBuffer:::
java.nio.ByteBufferAsIntBufferB#compact()->IntBuffer:::
java.nio.ByteBufferAsIntBufferB#isDirect()->boolean:::
java.nio.ByteBufferAsIntBufferB#isReadOnly()->boolean:::
java.nio.ByteBufferAsIntBufferB#order()->ByteOrder:::
java.nio.ByteBufferAsIntBufferL#base()->Object:::
java.nio.ByteBufferAsIntBufferL#slice()->IntBuffer:::
java.nio.ByteBufferAsIntBufferL#duplicate()->IntBuffer:::
java.nio.ByteBufferAsIntBufferL#asReadOnlyBuffer()->IntBuffer:::
java.nio.ByteBufferAsIntBufferL#byteOffset(long)->long:::
java.nio.ByteBufferAsIntBufferL#get()->int:::
java.nio.ByteBufferAsIntBufferL#get(int)->int:::
java.nio.ByteBufferAsIntBufferL#put(int)->IntBuffer:::
java.nio.ByteBufferAsIntBufferL#put(int, int)->IntBuffer:::
java.nio.ByteBufferAsIntBufferL#compact()->IntBuffer:::
java.nio.ByteBufferAsIntBufferL#isDirect()->boolean:::
java.nio.ByteBufferAsIntBufferL#isReadOnly()->boolean:::
java.nio.ByteBufferAsIntBufferL#order()->ByteOrder:::
java.nio.ByteBufferAsIntBufferRB#base()->Object:::
java.nio.ByteBufferAsIntBufferRB#slice()->IntBuffer:::
java.nio.ByteBufferAsIntBufferRB#duplicate()->IntBuffer:::
java.nio.ByteBufferAsIntBufferRB#asReadOnlyBuffer()->IntBuffer:::
java.nio.ByteBufferAsIntBufferRB#put(int)->IntBuffer:::
java.nio.ByteBufferAsIntBufferRB#put(int, int)->IntBuffer:::
java.nio.ByteBufferAsIntBufferRB#compact()->IntBuffer:::
java.nio.ByteBufferAsIntBufferRB#isDirect()->boolean:::
java.nio.ByteBufferAsIntBufferRB#isReadOnly()->boolean:::
java.nio.ByteBufferAsIntBufferRB#order()->ByteOrder:::
java.nio.ByteBufferAsIntBufferRL#base()->Object:::
java.nio.ByteBufferAsIntBufferRL#slice()->IntBuffer:::
java.nio.ByteBufferAsIntBufferRL#duplicate()->IntBuffer:::
java.nio.ByteBufferAsIntBufferRL#asReadOnlyBuffer()->IntBuffer:::
java.nio.ByteBufferAsIntBufferRL#put(int)->IntBuffer:::
java.nio.ByteBufferAsIntBufferRL#put(int, int)->IntBuffer:::
java.nio.ByteBufferAsIntBufferRL#compact()->IntBuffer:::
java.nio.ByteBufferAsIntBufferRL#isDirect()->boolean:::
java.nio.ByteBufferAsIntBufferRL#isReadOnly()->boolean:::
java.nio.ByteBufferAsIntBufferRL#order()->ByteOrder:::
java.nio.ByteBufferAsLongBufferB#base()->Object:::
java.nio.ByteBufferAsLongBufferB#slice()->LongBuffer:::
java.nio.ByteBufferAsLongBufferB#duplicate()->LongBuffer:::
java.nio.ByteBufferAsLongBufferB#asReadOnlyBuffer()->LongBuffer:::
java.nio.ByteBufferAsLongBufferB#byteOffset(long)->long:::
java.nio.ByteBufferAsLongBufferB#get()->long:::
java.nio.ByteBufferAsLongBufferB#get(int)->long:::
java.nio.ByteBufferAsLongBufferB#put(long)->LongBuffer:::
java.nio.ByteBufferAsLongBufferB#put(int, long)->LongBuffer:::
java.nio.ByteBufferAsLongBufferB#compact()->LongBuffer:::
java.nio.ByteBufferAsLongBufferB#isDirect()->boolean:::
java.nio.ByteBufferAsLongBufferB#isReadOnly()->boolean:::
java.nio.ByteBufferAsLongBufferB#order()->ByteOrder:::
java.nio.ByteBufferAsLongBufferL#base()->Object:::
java.nio.ByteBufferAsLongBufferL#slice()->LongBuffer:::
java.nio.ByteBufferAsLongBufferL#duplicate()->LongBuffer:::
java.nio.ByteBufferAsLongBufferL#asReadOnlyBuffer()->LongBuffer:::
java.nio.ByteBufferAsLongBufferL#byteOffset(long)->long:::
java.nio.ByteBufferAsLongBufferL#get()->long:::
java.nio.ByteBufferAsLongBufferL#get(int)->long:::
java.nio.ByteBufferAsLongBufferL#put(long)->LongBuffer:::
java.nio.ByteBufferAsLongBufferL#put(int, long)->LongBuffer:::
java.nio.ByteBufferAsLongBufferL#compact()->LongBuffer:::
java.nio.ByteBufferAsLongBufferL#isDirect()->boolean:::
java.nio.ByteBufferAsLongBufferL#isReadOnly()->boolean:::
java.nio.ByteBufferAsLongBufferL#order()->ByteOrder:::
java.nio.ByteBufferAsLongBufferRB#base()->Object:::
java.nio.ByteBufferAsLongBufferRB#slice()->LongBuffer:::
java.nio.ByteBufferAsLongBufferRB#duplicate()->LongBuffer:::
java.nio.ByteBufferAsLongBufferRB#asReadOnlyBuffer()->LongBuffer:::
java.nio.ByteBufferAsLongBufferRB#put(long)->LongBuffer:::
java.nio.ByteBufferAsLongBufferRB#put(int, long)->LongBuffer:::
java.nio.ByteBufferAsLongBufferRB#compact()->LongBuffer:::
java.nio.ByteBufferAsLongBufferRB#isDirect()->boolean:::
java.nio.ByteBufferAsLongBufferRB#isReadOnly()->boolean:::
java.nio.ByteBufferAsLongBufferRB#order()->ByteOrder:::
java.nio.ByteBufferAsLongBufferRL#base()->Object:::
java.nio.ByteBufferAsLongBufferRL#slice()->LongBuffer:::
java.nio.ByteBufferAsLongBufferRL#duplicate()->LongBuffer:::
java.nio.ByteBufferAsLongBufferRL#asReadOnlyBuffer()->LongBuffer:::
java.nio.ByteBufferAsLongBufferRL#put(long)->LongBuffer:::
java.nio.ByteBufferAsLongBufferRL#put(int, long)->LongBuffer:::
java.nio.ByteBufferAsLongBufferRL#compact()->LongBuffer:::
java.nio.ByteBufferAsLongBufferRL#isDirect()->boolean:::
java.nio.ByteBufferAsLongBufferRL#isReadOnly()->boolean:::
java.nio.ByteBufferAsLongBufferRL#order()->ByteOrder:::
java.nio.ByteBufferAsShortBufferB#base()->Object:::
java.nio.ByteBufferAsShortBufferB#slice()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferB#duplicate()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferB#asReadOnlyBuffer()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferB#byteOffset(long)->long:::
java.nio.ByteBufferAsShortBufferB#get()->short:::
java.nio.ByteBufferAsShortBufferB#get(int)->short:::
java.nio.ByteBufferAsShortBufferB#put(short)->ShortBuffer:::
java.nio.ByteBufferAsShortBufferB#put(int, short)->ShortBuffer:::
java.nio.ByteBufferAsShortBufferB#compact()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferB#isDirect()->boolean:::
java.nio.ByteBufferAsShortBufferB#isReadOnly()->boolean:::
java.nio.ByteBufferAsShortBufferB#order()->ByteOrder:::
java.nio.ByteBufferAsShortBufferL#base()->Object:::
java.nio.ByteBufferAsShortBufferL#slice()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferL#duplicate()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferL#asReadOnlyBuffer()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferL#byteOffset(long)->long:::
java.nio.ByteBufferAsShortBufferL#get()->short:::
java.nio.ByteBufferAsShortBufferL#get(int)->short:::
java.nio.ByteBufferAsShortBufferL#put(short)->ShortBuffer:::
java.nio.ByteBufferAsShortBufferL#put(int, short)->ShortBuffer:::
java.nio.ByteBufferAsShortBufferL#compact()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferL#isDirect()->boolean:::
java.nio.ByteBufferAsShortBufferL#isReadOnly()->boolean:::
java.nio.ByteBufferAsShortBufferL#order()->ByteOrder:::
java.nio.ByteBufferAsShortBufferRB#base()->Object:::
java.nio.ByteBufferAsShortBufferRB#slice()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRB#duplicate()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRB#asReadOnlyBuffer()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRB#put(short)->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRB#put(int, short)->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRB#compact()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRB#isDirect()->boolean:::
java.nio.ByteBufferAsShortBufferRB#isReadOnly()->boolean:::
java.nio.ByteBufferAsShortBufferRB#order()->ByteOrder:::
java.nio.ByteBufferAsShortBufferRL#base()->Object:::
java.nio.ByteBufferAsShortBufferRL#slice()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRL#duplicate()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRL#asReadOnlyBuffer()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRL#put(short)->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRL#put(int, short)->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRL#compact()->ShortBuffer:::
java.nio.ByteBufferAsShortBufferRL#isDirect()->boolean:::
java.nio.ByteBufferAsShortBufferRL#isReadOnly()->boolean:::
java.nio.ByteBufferAsShortBufferRL#order()->ByteOrder:::
java.nio.ByteOrder#nativeOrder()->ByteOrder:::Retrieves the native byte order of the underlying platform
java.nio.ByteOrder#toString()->String:::Constructs a string describing this object
java.nio.CharBuffer#base()->Object:::
java.nio.CharBuffer#allocate(int)->CharBuffer:::Allocates a new char buffer
java.nio.CharBuffer#wrap(char[], int, int)->CharBuffer:::Wraps a char array into a buffer
java.nio.CharBuffer#wrap(char[])->CharBuffer:::Wraps a char array into a buffer
java.nio.CharBuffer#read(CharBuffer)->int:::Attempts to read characters into the specified character buffer
java.nio.CharBuffer#wrap(CharSequence, int, int)->CharBuffer:::Wraps a character sequence into a buffer
java.nio.CharBuffer#wrap(CharSequence)->CharBuffer:::Wraps a character sequence into a buffer
java.nio.CharBuffer#slice()->CharBuffer:::Creates a new char buffer whose content is a shared subsequence of  this buffer's content
java.nio.CharBuffer#duplicate()->CharBuffer:::Creates a new char buffer that shares this buffer's content
java.nio.CharBuffer#asReadOnlyBuffer()->CharBuffer:::Creates a new, read-only char buffer that shares this buffer's  content
java.nio.CharBuffer#get()->char:::Relative <i>get</i> method
java.nio.CharBuffer#put(char)->CharBuffer:::Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#get(int)->char:::Absolute <i>get</i> method
java.nio.CharBuffer#getUnchecked(int)->char:::
java.nio.CharBuffer#put(int, char)->CharBuffer:::Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#get(char[], int, int)->CharBuffer:::Relative bulk <i>get</i> method
java.nio.CharBuffer#get(char[])->CharBuffer:::Relative bulk <i>get</i> method
java.nio.CharBuffer#put(CharBuffer)->CharBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#put(char[], int, int)->CharBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#put(char[])->CharBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#put(String, int, int)->CharBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#put(String)->CharBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible char  array
java.nio.CharBuffer#array()->char[]:::Returns the char array that backs this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first  element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#position(int)->CharBuffer:::{@inheritDoc}
java.nio.CharBuffer#limit(int)->CharBuffer:::{@inheritDoc}
java.nio.CharBuffer#mark()->CharBuffer:::{@inheritDoc}
java.nio.CharBuffer#reset()->CharBuffer:::{@inheritDoc}
java.nio.CharBuffer#clear()->CharBuffer:::{@inheritDoc}
java.nio.CharBuffer#flip()->CharBuffer:::{@inheritDoc}
java.nio.CharBuffer#rewind()->CharBuffer:::{@inheritDoc}
java.nio.CharBuffer#compact()->CharBuffer:::Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#isDirect()->boolean:::Tells whether or not this char buffer is direct.
java.nio.CharBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.CharBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.CharBuffer#compareTo(CharBuffer)->int:::Compares this buffer to another
java.nio.CharBuffer#mismatch(CharBuffer)->int:::Finds and returns the relative index of the first mismatch between this  buffer and a given buffer
java.nio.CharBuffer#toString()->String:::Returns a string containing the characters in this buffer
java.nio.CharBuffer#toString(int, int)->String:::
java.nio.CharBuffer#length()->int:::Returns the length of this character buffer
java.nio.CharBuffer#charAt(int)->char:::Reads the character at the given index relative to the current  position.
java.nio.CharBuffer#subSequence(int, int)->CharBuffer:::Creates a new character buffer that represents the specified subsequence  of this buffer, relative to the current position
java.nio.CharBuffer#append(CharSequence)->CharBuffer:::Appends the specified character sequence  to this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#append(CharSequence, int, int)->CharBuffer:::Appends a subsequence of the  specified character sequence  to this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#append(char)->CharBuffer:::Appends the specified char  to this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.CharBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.CharBuffer#charRegionOrder()->ByteOrder:::
java.nio.CharBuffer#chars()->IntStream:::
java.nio.CharBufferSpliterator#trySplit()->OfInt:::
java.nio.CharBufferSpliterator#forEachRemaining(IntConsumer)->void:::
java.nio.CharBufferSpliterator#tryAdvance(IntConsumer)->boolean:::
java.nio.CharBufferSpliterator#estimateSize()->long:::
java.nio.CharBufferSpliterator#characteristics()->int:::
java.nio.DirectByteBuffer#attachment()->Object:::
java.nio.DirectByteBuffer.Deallocator#run()->void:::
java.nio.DirectByteBuffer#cleaner()->Cleaner:::
java.nio.DirectByteBuffer#base()->Object:::
java.nio.DirectByteBuffer#slice()->ByteBuffer:::
java.nio.DirectByteBuffer#slice(int, int)->ByteBuffer:::
java.nio.DirectByteBuffer#duplicate()->ByteBuffer:::
java.nio.DirectByteBuffer#asReadOnlyBuffer()->ByteBuffer:::
java.nio.DirectByteBuffer#address()->long:::
java.nio.DirectByteBuffer#get()->byte:::
java.nio.DirectByteBuffer#get(int)->byte:::
java.nio.DirectByteBuffer#get(byte[], int, int)->ByteBuffer:::
java.nio.DirectByteBuffer#put(byte)->ByteBuffer:::
java.nio.DirectByteBuffer#put(int, byte)->ByteBuffer:::
java.nio.DirectByteBuffer#put(ByteBuffer)->ByteBuffer:::
java.nio.DirectByteBuffer#put(byte[], int, int)->ByteBuffer:::
java.nio.DirectByteBuffer#compact()->ByteBuffer:::
java.nio.DirectByteBuffer#isDirect()->boolean:::
java.nio.DirectByteBuffer#isReadOnly()->boolean:::
java.nio.DirectByteBuffer#getChar()->char:::
java.nio.DirectByteBuffer#getChar(int)->char:::
java.nio.DirectByteBuffer#putChar(char)->ByteBuffer:::
java.nio.DirectByteBuffer#putChar(int, char)->ByteBuffer:::
java.nio.DirectByteBuffer#asCharBuffer()->CharBuffer:::
java.nio.DirectByteBuffer#getShort()->short:::
java.nio.DirectByteBuffer#getShort(int)->short:::
java.nio.DirectByteBuffer#putShort(short)->ByteBuffer:::
java.nio.DirectByteBuffer#putShort(int, short)->ByteBuffer:::
java.nio.DirectByteBuffer#asShortBuffer()->ShortBuffer:::
java.nio.DirectByteBuffer#getInt()->int:::
java.nio.DirectByteBuffer#getInt(int)->int:::
java.nio.DirectByteBuffer#putInt(int)->ByteBuffer:::
java.nio.DirectByteBuffer#putInt(int, int)->ByteBuffer:::
java.nio.DirectByteBuffer#asIntBuffer()->IntBuffer:::
java.nio.DirectByteBuffer#getLong()->long:::
java.nio.DirectByteBuffer#getLong(int)->long:::
java.nio.DirectByteBuffer#putLong(long)->ByteBuffer:::
java.nio.DirectByteBuffer#putLong(int, long)->ByteBuffer:::
java.nio.DirectByteBuffer#asLongBuffer()->LongBuffer:::
java.nio.DirectByteBuffer#getFloat()->float:::
java.nio.DirectByteBuffer#getFloat(int)->float:::
java.nio.DirectByteBuffer#putFloat(float)->ByteBuffer:::
java.nio.DirectByteBuffer#putFloat(int, float)->ByteBuffer:::
java.nio.DirectByteBuffer#asFloatBuffer()->FloatBuffer:::
java.nio.DirectByteBuffer#getDouble()->double:::
java.nio.DirectByteBuffer#getDouble(int)->double:::
java.nio.DirectByteBuffer#putDouble(double)->ByteBuffer:::
java.nio.DirectByteBuffer#putDouble(int, double)->ByteBuffer:::
java.nio.DirectByteBuffer#asDoubleBuffer()->DoubleBuffer:::
java.nio.DirectByteBufferR#base()->Object:::
java.nio.DirectByteBufferR#slice()->ByteBuffer:::
java.nio.DirectByteBufferR#slice(int, int)->ByteBuffer:::
java.nio.DirectByteBufferR#duplicate()->ByteBuffer:::
java.nio.DirectByteBufferR#asReadOnlyBuffer()->ByteBuffer:::
java.nio.DirectByteBufferR#put(byte)->ByteBuffer:::
java.nio.DirectByteBufferR#put(int, byte)->ByteBuffer:::
java.nio.DirectByteBufferR#put(ByteBuffer)->ByteBuffer:::
java.nio.DirectByteBufferR#put(byte[], int, int)->ByteBuffer:::
java.nio.DirectByteBufferR#compact()->ByteBuffer:::
java.nio.DirectByteBufferR#isDirect()->boolean:::
java.nio.DirectByteBufferR#isReadOnly()->boolean:::
java.nio.DirectByteBufferR#putChar(char)->ByteBuffer:::
java.nio.DirectByteBufferR#putChar(int, char)->ByteBuffer:::
java.nio.DirectByteBufferR#asCharBuffer()->CharBuffer:::
java.nio.DirectByteBufferR#putShort(short)->ByteBuffer:::
java.nio.DirectByteBufferR#putShort(int, short)->ByteBuffer:::
java.nio.DirectByteBufferR#asShortBuffer()->ShortBuffer:::
java.nio.DirectByteBufferR#putInt(int)->ByteBuffer:::
java.nio.DirectByteBufferR#putInt(int, int)->ByteBuffer:::
java.nio.DirectByteBufferR#asIntBuffer()->IntBuffer:::
java.nio.DirectByteBufferR#putLong(long)->ByteBuffer:::
java.nio.DirectByteBufferR#putLong(int, long)->ByteBuffer:::
java.nio.DirectByteBufferR#asLongBuffer()->LongBuffer:::
java.nio.DirectByteBufferR#putFloat(float)->ByteBuffer:::
java.nio.DirectByteBufferR#putFloat(int, float)->ByteBuffer:::
java.nio.DirectByteBufferR#asFloatBuffer()->FloatBuffer:::
java.nio.DirectByteBufferR#putDouble(double)->ByteBuffer:::
java.nio.DirectByteBufferR#putDouble(int, double)->ByteBuffer:::
java.nio.DirectByteBufferR#asDoubleBuffer()->DoubleBuffer:::
java.nio.DirectCharBufferRS#base()->Object:::
java.nio.DirectCharBufferRS#slice()->CharBuffer:::
java.nio.DirectCharBufferRS#duplicate()->CharBuffer:::
java.nio.DirectCharBufferRS#asReadOnlyBuffer()->CharBuffer:::
java.nio.DirectCharBufferRS#put(char)->CharBuffer:::
java.nio.DirectCharBufferRS#put(int, char)->CharBuffer:::
java.nio.DirectCharBufferRS#put(CharBuffer)->CharBuffer:::
java.nio.DirectCharBufferRS#put(char[], int, int)->CharBuffer:::
java.nio.DirectCharBufferRS#compact()->CharBuffer:::
java.nio.DirectCharBufferRS#isDirect()->boolean:::
java.nio.DirectCharBufferRS#isReadOnly()->boolean:::
java.nio.DirectCharBufferRS#toString(int, int)->String:::
java.nio.DirectCharBufferRS#subSequence(int, int)->CharBuffer:::
java.nio.DirectCharBufferRS#order()->ByteOrder:::
java.nio.DirectCharBufferRS#charRegionOrder()->ByteOrder:::
java.nio.DirectCharBufferRU#base()->Object:::
java.nio.DirectCharBufferRU#slice()->CharBuffer:::
java.nio.DirectCharBufferRU#duplicate()->CharBuffer:::
java.nio.DirectCharBufferRU#asReadOnlyBuffer()->CharBuffer:::
java.nio.DirectCharBufferRU#put(char)->CharBuffer:::
java.nio.DirectCharBufferRU#put(int, char)->CharBuffer:::
java.nio.DirectCharBufferRU#put(CharBuffer)->CharBuffer:::
java.nio.DirectCharBufferRU#put(char[], int, int)->CharBuffer:::
java.nio.DirectCharBufferRU#compact()->CharBuffer:::
java.nio.DirectCharBufferRU#isDirect()->boolean:::
java.nio.DirectCharBufferRU#isReadOnly()->boolean:::
java.nio.DirectCharBufferRU#toString(int, int)->String:::
java.nio.DirectCharBufferRU#subSequence(int, int)->CharBuffer:::
java.nio.DirectCharBufferRU#order()->ByteOrder:::
java.nio.DirectCharBufferRU#charRegionOrder()->ByteOrder:::
java.nio.DirectCharBufferS#attachment()->Object:::
java.nio.DirectCharBufferS#cleaner()->Cleaner:::
java.nio.DirectCharBufferS#base()->Object:::
java.nio.DirectCharBufferS#slice()->CharBuffer:::
java.nio.DirectCharBufferS#duplicate()->CharBuffer:::
java.nio.DirectCharBufferS#asReadOnlyBuffer()->CharBuffer:::
java.nio.DirectCharBufferS#address()->long:::
java.nio.DirectCharBufferS#get()->char:::
java.nio.DirectCharBufferS#get(int)->char:::
java.nio.DirectCharBufferS#getUnchecked(int)->char:::
java.nio.DirectCharBufferS#get(char[], int, int)->CharBuffer:::
java.nio.DirectCharBufferS#put(char)->CharBuffer:::
java.nio.DirectCharBufferS#put(int, char)->CharBuffer:::
java.nio.DirectCharBufferS#put(CharBuffer)->CharBuffer:::
java.nio.DirectCharBufferS#put(char[], int, int)->CharBuffer:::
java.nio.DirectCharBufferS#compact()->CharBuffer:::
java.nio.DirectCharBufferS#isDirect()->boolean:::
java.nio.DirectCharBufferS#isReadOnly()->boolean:::
java.nio.DirectCharBufferS#toString(int, int)->String:::
java.nio.DirectCharBufferS#subSequence(int, int)->CharBuffer:::
java.nio.DirectCharBufferS#order()->ByteOrder:::
java.nio.DirectCharBufferS#charRegionOrder()->ByteOrder:::
java.nio.DirectCharBufferU#attachment()->Object:::
java.nio.DirectCharBufferU#cleaner()->Cleaner:::
java.nio.DirectCharBufferU#base()->Object:::
java.nio.DirectCharBufferU#slice()->CharBuffer:::
java.nio.DirectCharBufferU#duplicate()->CharBuffer:::
java.nio.DirectCharBufferU#asReadOnlyBuffer()->CharBuffer:::
java.nio.DirectCharBufferU#address()->long:::
java.nio.DirectCharBufferU#get()->char:::
java.nio.DirectCharBufferU#get(int)->char:::
java.nio.DirectCharBufferU#getUnchecked(int)->char:::
java.nio.DirectCharBufferU#get(char[], int, int)->CharBuffer:::
java.nio.DirectCharBufferU#put(char)->CharBuffer:::
java.nio.DirectCharBufferU#put(int, char)->CharBuffer:::
java.nio.DirectCharBufferU#put(CharBuffer)->CharBuffer:::
java.nio.DirectCharBufferU#put(char[], int, int)->CharBuffer:::
java.nio.DirectCharBufferU#compact()->CharBuffer:::
java.nio.DirectCharBufferU#isDirect()->boolean:::
java.nio.DirectCharBufferU#isReadOnly()->boolean:::
java.nio.DirectCharBufferU#toString(int, int)->String:::
java.nio.DirectCharBufferU#subSequence(int, int)->CharBuffer:::
java.nio.DirectCharBufferU#order()->ByteOrder:::
java.nio.DirectCharBufferU#charRegionOrder()->ByteOrder:::
java.nio.DirectDoubleBufferRS#base()->Object:::
java.nio.DirectDoubleBufferRS#slice()->DoubleBuffer:::
java.nio.DirectDoubleBufferRS#duplicate()->DoubleBuffer:::
java.nio.DirectDoubleBufferRS#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.DirectDoubleBufferRS#put(double)->DoubleBuffer:::
java.nio.DirectDoubleBufferRS#put(int, double)->DoubleBuffer:::
java.nio.DirectDoubleBufferRS#put(DoubleBuffer)->DoubleBuffer:::
java.nio.DirectDoubleBufferRS#put(double[], int, int)->DoubleBuffer:::
java.nio.DirectDoubleBufferRS#compact()->DoubleBuffer:::
java.nio.DirectDoubleBufferRS#isDirect()->boolean:::
java.nio.DirectDoubleBufferRS#isReadOnly()->boolean:::
java.nio.DirectDoubleBufferRS#order()->ByteOrder:::
java.nio.DirectDoubleBufferRU#base()->Object:::
java.nio.DirectDoubleBufferRU#slice()->DoubleBuffer:::
java.nio.DirectDoubleBufferRU#duplicate()->DoubleBuffer:::
java.nio.DirectDoubleBufferRU#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.DirectDoubleBufferRU#put(double)->DoubleBuffer:::
java.nio.DirectDoubleBufferRU#put(int, double)->DoubleBuffer:::
java.nio.DirectDoubleBufferRU#put(DoubleBuffer)->DoubleBuffer:::
java.nio.DirectDoubleBufferRU#put(double[], int, int)->DoubleBuffer:::
java.nio.DirectDoubleBufferRU#compact()->DoubleBuffer:::
java.nio.DirectDoubleBufferRU#isDirect()->boolean:::
java.nio.DirectDoubleBufferRU#isReadOnly()->boolean:::
java.nio.DirectDoubleBufferRU#order()->ByteOrder:::
java.nio.DirectDoubleBufferS#attachment()->Object:::
java.nio.DirectDoubleBufferS#cleaner()->Cleaner:::
java.nio.DirectDoubleBufferS#base()->Object:::
java.nio.DirectDoubleBufferS#slice()->DoubleBuffer:::
java.nio.DirectDoubleBufferS#duplicate()->DoubleBuffer:::
java.nio.DirectDoubleBufferS#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.DirectDoubleBufferS#address()->long:::
java.nio.DirectDoubleBufferS#get()->double:::
java.nio.DirectDoubleBufferS#get(int)->double:::
java.nio.DirectDoubleBufferS#get(double[], int, int)->DoubleBuffer:::
java.nio.DirectDoubleBufferS#put(double)->DoubleBuffer:::
java.nio.DirectDoubleBufferS#put(int, double)->DoubleBuffer:::
java.nio.DirectDoubleBufferS#put(DoubleBuffer)->DoubleBuffer:::
java.nio.DirectDoubleBufferS#put(double[], int, int)->DoubleBuffer:::
java.nio.DirectDoubleBufferS#compact()->DoubleBuffer:::
java.nio.DirectDoubleBufferS#isDirect()->boolean:::
java.nio.DirectDoubleBufferS#isReadOnly()->boolean:::
java.nio.DirectDoubleBufferS#order()->ByteOrder:::
java.nio.DirectDoubleBufferU#attachment()->Object:::
java.nio.DirectDoubleBufferU#cleaner()->Cleaner:::
java.nio.DirectDoubleBufferU#base()->Object:::
java.nio.DirectDoubleBufferU#slice()->DoubleBuffer:::
java.nio.DirectDoubleBufferU#duplicate()->DoubleBuffer:::
java.nio.DirectDoubleBufferU#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.DirectDoubleBufferU#address()->long:::
java.nio.DirectDoubleBufferU#get()->double:::
java.nio.DirectDoubleBufferU#get(int)->double:::
java.nio.DirectDoubleBufferU#get(double[], int, int)->DoubleBuffer:::
java.nio.DirectDoubleBufferU#put(double)->DoubleBuffer:::
java.nio.DirectDoubleBufferU#put(int, double)->DoubleBuffer:::
java.nio.DirectDoubleBufferU#put(DoubleBuffer)->DoubleBuffer:::
java.nio.DirectDoubleBufferU#put(double[], int, int)->DoubleBuffer:::
java.nio.DirectDoubleBufferU#compact()->DoubleBuffer:::
java.nio.DirectDoubleBufferU#isDirect()->boolean:::
java.nio.DirectDoubleBufferU#isReadOnly()->boolean:::
java.nio.DirectDoubleBufferU#order()->ByteOrder:::
java.nio.DirectFloatBufferRS#base()->Object:::
java.nio.DirectFloatBufferRS#slice()->FloatBuffer:::
java.nio.DirectFloatBufferRS#duplicate()->FloatBuffer:::
java.nio.DirectFloatBufferRS#asReadOnlyBuffer()->FloatBuffer:::
java.nio.DirectFloatBufferRS#put(float)->FloatBuffer:::
java.nio.DirectFloatBufferRS#put(int, float)->FloatBuffer:::
java.nio.DirectFloatBufferRS#put(FloatBuffer)->FloatBuffer:::
java.nio.DirectFloatBufferRS#put(float[], int, int)->FloatBuffer:::
java.nio.DirectFloatBufferRS#compact()->FloatBuffer:::
java.nio.DirectFloatBufferRS#isDirect()->boolean:::
java.nio.DirectFloatBufferRS#isReadOnly()->boolean:::
java.nio.DirectFloatBufferRS#order()->ByteOrder:::
java.nio.DirectFloatBufferRU#base()->Object:::
java.nio.DirectFloatBufferRU#slice()->FloatBuffer:::
java.nio.DirectFloatBufferRU#duplicate()->FloatBuffer:::
java.nio.DirectFloatBufferRU#asReadOnlyBuffer()->FloatBuffer:::
java.nio.DirectFloatBufferRU#put(float)->FloatBuffer:::
java.nio.DirectFloatBufferRU#put(int, float)->FloatBuffer:::
java.nio.DirectFloatBufferRU#put(FloatBuffer)->FloatBuffer:::
java.nio.DirectFloatBufferRU#put(float[], int, int)->FloatBuffer:::
java.nio.DirectFloatBufferRU#compact()->FloatBuffer:::
java.nio.DirectFloatBufferRU#isDirect()->boolean:::
java.nio.DirectFloatBufferRU#isReadOnly()->boolean:::
java.nio.DirectFloatBufferRU#order()->ByteOrder:::
java.nio.DirectFloatBufferS#attachment()->Object:::
java.nio.DirectFloatBufferS#cleaner()->Cleaner:::
java.nio.DirectFloatBufferS#base()->Object:::
java.nio.DirectFloatBufferS#slice()->FloatBuffer:::
java.nio.DirectFloatBufferS#duplicate()->FloatBuffer:::
java.nio.DirectFloatBufferS#asReadOnlyBuffer()->FloatBuffer:::
java.nio.DirectFloatBufferS#address()->long:::
java.nio.DirectFloatBufferS#get()->float:::
java.nio.DirectFloatBufferS#get(int)->float:::
java.nio.DirectFloatBufferS#get(float[], int, int)->FloatBuffer:::
java.nio.DirectFloatBufferS#put(float)->FloatBuffer:::
java.nio.DirectFloatBufferS#put(int, float)->FloatBuffer:::
java.nio.DirectFloatBufferS#put(FloatBuffer)->FloatBuffer:::
java.nio.DirectFloatBufferS#put(float[], int, int)->FloatBuffer:::
java.nio.DirectFloatBufferS#compact()->FloatBuffer:::
java.nio.DirectFloatBufferS#isDirect()->boolean:::
java.nio.DirectFloatBufferS#isReadOnly()->boolean:::
java.nio.DirectFloatBufferS#order()->ByteOrder:::
java.nio.DirectFloatBufferU#attachment()->Object:::
java.nio.DirectFloatBufferU#cleaner()->Cleaner:::
java.nio.DirectFloatBufferU#base()->Object:::
java.nio.DirectFloatBufferU#slice()->FloatBuffer:::
java.nio.DirectFloatBufferU#duplicate()->FloatBuffer:::
java.nio.DirectFloatBufferU#asReadOnlyBuffer()->FloatBuffer:::
java.nio.DirectFloatBufferU#address()->long:::
java.nio.DirectFloatBufferU#get()->float:::
java.nio.DirectFloatBufferU#get(int)->float:::
java.nio.DirectFloatBufferU#get(float[], int, int)->FloatBuffer:::
java.nio.DirectFloatBufferU#put(float)->FloatBuffer:::
java.nio.DirectFloatBufferU#put(int, float)->FloatBuffer:::
java.nio.DirectFloatBufferU#put(FloatBuffer)->FloatBuffer:::
java.nio.DirectFloatBufferU#put(float[], int, int)->FloatBuffer:::
java.nio.DirectFloatBufferU#compact()->FloatBuffer:::
java.nio.DirectFloatBufferU#isDirect()->boolean:::
java.nio.DirectFloatBufferU#isReadOnly()->boolean:::
java.nio.DirectFloatBufferU#order()->ByteOrder:::
java.nio.DirectIntBufferRS#base()->Object:::
java.nio.DirectIntBufferRS#slice()->IntBuffer:::
java.nio.DirectIntBufferRS#duplicate()->IntBuffer:::
java.nio.DirectIntBufferRS#asReadOnlyBuffer()->IntBuffer:::
java.nio.DirectIntBufferRS#put(int)->IntBuffer:::
java.nio.DirectIntBufferRS#put(int, int)->IntBuffer:::
java.nio.DirectIntBufferRS#put(IntBuffer)->IntBuffer:::
java.nio.DirectIntBufferRS#put(int[], int, int)->IntBuffer:::
java.nio.DirectIntBufferRS#compact()->IntBuffer:::
java.nio.DirectIntBufferRS#isDirect()->boolean:::
java.nio.DirectIntBufferRS#isReadOnly()->boolean:::
java.nio.DirectIntBufferRS#order()->ByteOrder:::
java.nio.DirectIntBufferRU#base()->Object:::
java.nio.DirectIntBufferRU#slice()->IntBuffer:::
java.nio.DirectIntBufferRU#duplicate()->IntBuffer:::
java.nio.DirectIntBufferRU#asReadOnlyBuffer()->IntBuffer:::
java.nio.DirectIntBufferRU#put(int)->IntBuffer:::
java.nio.DirectIntBufferRU#put(int, int)->IntBuffer:::
java.nio.DirectIntBufferRU#put(IntBuffer)->IntBuffer:::
java.nio.DirectIntBufferRU#put(int[], int, int)->IntBuffer:::
java.nio.DirectIntBufferRU#compact()->IntBuffer:::
java.nio.DirectIntBufferRU#isDirect()->boolean:::
java.nio.DirectIntBufferRU#isReadOnly()->boolean:::
java.nio.DirectIntBufferRU#order()->ByteOrder:::
java.nio.DirectIntBufferS#attachment()->Object:::
java.nio.DirectIntBufferS#cleaner()->Cleaner:::
java.nio.DirectIntBufferS#base()->Object:::
java.nio.DirectIntBufferS#slice()->IntBuffer:::
java.nio.DirectIntBufferS#duplicate()->IntBuffer:::
java.nio.DirectIntBufferS#asReadOnlyBuffer()->IntBuffer:::
java.nio.DirectIntBufferS#address()->long:::
java.nio.DirectIntBufferS#get()->int:::
java.nio.DirectIntBufferS#get(int)->int:::
java.nio.DirectIntBufferS#get(int[], int, int)->IntBuffer:::
java.nio.DirectIntBufferS#put(int)->IntBuffer:::
java.nio.DirectIntBufferS#put(int, int)->IntBuffer:::
java.nio.DirectIntBufferS#put(IntBuffer)->IntBuffer:::
java.nio.DirectIntBufferS#put(int[], int, int)->IntBuffer:::
java.nio.DirectIntBufferS#compact()->IntBuffer:::
java.nio.DirectIntBufferS#isDirect()->boolean:::
java.nio.DirectIntBufferS#isReadOnly()->boolean:::
java.nio.DirectIntBufferS#order()->ByteOrder:::
java.nio.DirectIntBufferU#attachment()->Object:::
java.nio.DirectIntBufferU#cleaner()->Cleaner:::
java.nio.DirectIntBufferU#base()->Object:::
java.nio.DirectIntBufferU#slice()->IntBuffer:::
java.nio.DirectIntBufferU#duplicate()->IntBuffer:::
java.nio.DirectIntBufferU#asReadOnlyBuffer()->IntBuffer:::
java.nio.DirectIntBufferU#address()->long:::
java.nio.DirectIntBufferU#get()->int:::
java.nio.DirectIntBufferU#get(int)->int:::
java.nio.DirectIntBufferU#get(int[], int, int)->IntBuffer:::
java.nio.DirectIntBufferU#put(int)->IntBuffer:::
java.nio.DirectIntBufferU#put(int, int)->IntBuffer:::
java.nio.DirectIntBufferU#put(IntBuffer)->IntBuffer:::
java.nio.DirectIntBufferU#put(int[], int, int)->IntBuffer:::
java.nio.DirectIntBufferU#compact()->IntBuffer:::
java.nio.DirectIntBufferU#isDirect()->boolean:::
java.nio.DirectIntBufferU#isReadOnly()->boolean:::
java.nio.DirectIntBufferU#order()->ByteOrder:::
java.nio.DirectLongBufferRS#base()->Object:::
java.nio.DirectLongBufferRS#slice()->LongBuffer:::
java.nio.DirectLongBufferRS#duplicate()->LongBuffer:::
java.nio.DirectLongBufferRS#asReadOnlyBuffer()->LongBuffer:::
java.nio.DirectLongBufferRS#put(long)->LongBuffer:::
java.nio.DirectLongBufferRS#put(int, long)->LongBuffer:::
java.nio.DirectLongBufferRS#put(LongBuffer)->LongBuffer:::
java.nio.DirectLongBufferRS#put(long[], int, int)->LongBuffer:::
java.nio.DirectLongBufferRS#compact()->LongBuffer:::
java.nio.DirectLongBufferRS#isDirect()->boolean:::
java.nio.DirectLongBufferRS#isReadOnly()->boolean:::
java.nio.DirectLongBufferRS#order()->ByteOrder:::
java.nio.DirectLongBufferRU#base()->Object:::
java.nio.DirectLongBufferRU#slice()->LongBuffer:::
java.nio.DirectLongBufferRU#duplicate()->LongBuffer:::
java.nio.DirectLongBufferRU#asReadOnlyBuffer()->LongBuffer:::
java.nio.DirectLongBufferRU#put(long)->LongBuffer:::
java.nio.DirectLongBufferRU#put(int, long)->LongBuffer:::
java.nio.DirectLongBufferRU#put(LongBuffer)->LongBuffer:::
java.nio.DirectLongBufferRU#put(long[], int, int)->LongBuffer:::
java.nio.DirectLongBufferRU#compact()->LongBuffer:::
java.nio.DirectLongBufferRU#isDirect()->boolean:::
java.nio.DirectLongBufferRU#isReadOnly()->boolean:::
java.nio.DirectLongBufferRU#order()->ByteOrder:::
java.nio.DirectLongBufferS#attachment()->Object:::
java.nio.DirectLongBufferS#cleaner()->Cleaner:::
java.nio.DirectLongBufferS#base()->Object:::
java.nio.DirectLongBufferS#slice()->LongBuffer:::
java.nio.DirectLongBufferS#duplicate()->LongBuffer:::
java.nio.DirectLongBufferS#asReadOnlyBuffer()->LongBuffer:::
java.nio.DirectLongBufferS#address()->long:::
java.nio.DirectLongBufferS#get()->long:::
java.nio.DirectLongBufferS#get(int)->long:::
java.nio.DirectLongBufferS#get(long[], int, int)->LongBuffer:::
java.nio.DirectLongBufferS#put(long)->LongBuffer:::
java.nio.DirectLongBufferS#put(int, long)->LongBuffer:::
java.nio.DirectLongBufferS#put(LongBuffer)->LongBuffer:::
java.nio.DirectLongBufferS#put(long[], int, int)->LongBuffer:::
java.nio.DirectLongBufferS#compact()->LongBuffer:::
java.nio.DirectLongBufferS#isDirect()->boolean:::
java.nio.DirectLongBufferS#isReadOnly()->boolean:::
java.nio.DirectLongBufferS#order()->ByteOrder:::
java.nio.DirectLongBufferU#attachment()->Object:::
java.nio.DirectLongBufferU#cleaner()->Cleaner:::
java.nio.DirectLongBufferU#base()->Object:::
java.nio.DirectLongBufferU#slice()->LongBuffer:::
java.nio.DirectLongBufferU#duplicate()->LongBuffer:::
java.nio.DirectLongBufferU#asReadOnlyBuffer()->LongBuffer:::
java.nio.DirectLongBufferU#address()->long:::
java.nio.DirectLongBufferU#get()->long:::
java.nio.DirectLongBufferU#get(int)->long:::
java.nio.DirectLongBufferU#get(long[], int, int)->LongBuffer:::
java.nio.DirectLongBufferU#put(long)->LongBuffer:::
java.nio.DirectLongBufferU#put(int, long)->LongBuffer:::
java.nio.DirectLongBufferU#put(LongBuffer)->LongBuffer:::
java.nio.DirectLongBufferU#put(long[], int, int)->LongBuffer:::
java.nio.DirectLongBufferU#compact()->LongBuffer:::
java.nio.DirectLongBufferU#isDirect()->boolean:::
java.nio.DirectLongBufferU#isReadOnly()->boolean:::
java.nio.DirectLongBufferU#order()->ByteOrder:::
java.nio.DirectShortBufferRS#base()->Object:::
java.nio.DirectShortBufferRS#slice()->ShortBuffer:::
java.nio.DirectShortBufferRS#duplicate()->ShortBuffer:::
java.nio.DirectShortBufferRS#asReadOnlyBuffer()->ShortBuffer:::
java.nio.DirectShortBufferRS#put(short)->ShortBuffer:::
java.nio.DirectShortBufferRS#put(int, short)->ShortBuffer:::
java.nio.DirectShortBufferRS#put(ShortBuffer)->ShortBuffer:::
java.nio.DirectShortBufferRS#put(short[], int, int)->ShortBuffer:::
java.nio.DirectShortBufferRS#compact()->ShortBuffer:::
java.nio.DirectShortBufferRS#isDirect()->boolean:::
java.nio.DirectShortBufferRS#isReadOnly()->boolean:::
java.nio.DirectShortBufferRS#order()->ByteOrder:::
java.nio.DirectShortBufferRU#base()->Object:::
java.nio.DirectShortBufferRU#slice()->ShortBuffer:::
java.nio.DirectShortBufferRU#duplicate()->ShortBuffer:::
java.nio.DirectShortBufferRU#asReadOnlyBuffer()->ShortBuffer:::
java.nio.DirectShortBufferRU#put(short)->ShortBuffer:::
java.nio.DirectShortBufferRU#put(int, short)->ShortBuffer:::
java.nio.DirectShortBufferRU#put(ShortBuffer)->ShortBuffer:::
java.nio.DirectShortBufferRU#put(short[], int, int)->ShortBuffer:::
java.nio.DirectShortBufferRU#compact()->ShortBuffer:::
java.nio.DirectShortBufferRU#isDirect()->boolean:::
java.nio.DirectShortBufferRU#isReadOnly()->boolean:::
java.nio.DirectShortBufferRU#order()->ByteOrder:::
java.nio.DirectShortBufferS#attachment()->Object:::
java.nio.DirectShortBufferS#cleaner()->Cleaner:::
java.nio.DirectShortBufferS#base()->Object:::
java.nio.DirectShortBufferS#slice()->ShortBuffer:::
java.nio.DirectShortBufferS#duplicate()->ShortBuffer:::
java.nio.DirectShortBufferS#asReadOnlyBuffer()->ShortBuffer:::
java.nio.DirectShortBufferS#address()->long:::
java.nio.DirectShortBufferS#get()->short:::
java.nio.DirectShortBufferS#get(int)->short:::
java.nio.DirectShortBufferS#get(short[], int, int)->ShortBuffer:::
java.nio.DirectShortBufferS#put(short)->ShortBuffer:::
java.nio.DirectShortBufferS#put(int, short)->ShortBuffer:::
java.nio.DirectShortBufferS#put(ShortBuffer)->ShortBuffer:::
java.nio.DirectShortBufferS#put(short[], int, int)->ShortBuffer:::
java.nio.DirectShortBufferS#compact()->ShortBuffer:::
java.nio.DirectShortBufferS#isDirect()->boolean:::
java.nio.DirectShortBufferS#isReadOnly()->boolean:::
java.nio.DirectShortBufferS#order()->ByteOrder:::
java.nio.DirectShortBufferU#attachment()->Object:::
java.nio.DirectShortBufferU#cleaner()->Cleaner:::
java.nio.DirectShortBufferU#base()->Object:::
java.nio.DirectShortBufferU#slice()->ShortBuffer:::
java.nio.DirectShortBufferU#duplicate()->ShortBuffer:::
java.nio.DirectShortBufferU#asReadOnlyBuffer()->ShortBuffer:::
java.nio.DirectShortBufferU#address()->long:::
java.nio.DirectShortBufferU#get()->short:::
java.nio.DirectShortBufferU#get(int)->short:::
java.nio.DirectShortBufferU#get(short[], int, int)->ShortBuffer:::
java.nio.DirectShortBufferU#put(short)->ShortBuffer:::
java.nio.DirectShortBufferU#put(int, short)->ShortBuffer:::
java.nio.DirectShortBufferU#put(ShortBuffer)->ShortBuffer:::
java.nio.DirectShortBufferU#put(short[], int, int)->ShortBuffer:::
java.nio.DirectShortBufferU#compact()->ShortBuffer:::
java.nio.DirectShortBufferU#isDirect()->boolean:::
java.nio.DirectShortBufferU#isReadOnly()->boolean:::
java.nio.DirectShortBufferU#order()->ByteOrder:::
java.nio.DoubleBuffer#base()->Object:::
java.nio.DoubleBuffer#allocate(int)->DoubleBuffer:::Allocates a new double buffer
java.nio.DoubleBuffer#wrap(double[], int, int)->DoubleBuffer:::Wraps a double array into a buffer
java.nio.DoubleBuffer#wrap(double[])->DoubleBuffer:::Wraps a double array into a buffer
java.nio.DoubleBuffer#slice()->DoubleBuffer:::Creates a new double buffer whose content is a shared subsequence of  this buffer's content
java.nio.DoubleBuffer#duplicate()->DoubleBuffer:::Creates a new double buffer that shares this buffer's content
java.nio.DoubleBuffer#asReadOnlyBuffer()->DoubleBuffer:::Creates a new, read-only double buffer that shares this buffer's  content
java.nio.DoubleBuffer#get()->double:::Relative <i>get</i> method
java.nio.DoubleBuffer#put(double)->DoubleBuffer:::Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.DoubleBuffer#get(int)->double:::Absolute <i>get</i> method
java.nio.DoubleBuffer#put(int, double)->DoubleBuffer:::Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.DoubleBuffer#get(double[], int, int)->DoubleBuffer:::Relative bulk <i>get</i> method
java.nio.DoubleBuffer#get(double[])->DoubleBuffer:::Relative bulk <i>get</i> method
java.nio.DoubleBuffer#put(DoubleBuffer)->DoubleBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.DoubleBuffer#put(double[], int, int)->DoubleBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.DoubleBuffer#put(double[])->DoubleBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.DoubleBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible double  array
java.nio.DoubleBuffer#array()->double[]:::Returns the double array that backs this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.DoubleBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first  element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.DoubleBuffer#position(int)->DoubleBuffer:::{@inheritDoc}
java.nio.DoubleBuffer#limit(int)->DoubleBuffer:::{@inheritDoc}
java.nio.DoubleBuffer#mark()->DoubleBuffer:::{@inheritDoc}
java.nio.DoubleBuffer#reset()->DoubleBuffer:::{@inheritDoc}
java.nio.DoubleBuffer#clear()->DoubleBuffer:::{@inheritDoc}
java.nio.DoubleBuffer#flip()->DoubleBuffer:::{@inheritDoc}
java.nio.DoubleBuffer#rewind()->DoubleBuffer:::{@inheritDoc}
java.nio.DoubleBuffer#compact()->DoubleBuffer:::Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.DoubleBuffer#isDirect()->boolean:::Tells whether or not this double buffer is direct.
java.nio.DoubleBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.DoubleBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.DoubleBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.DoubleBuffer#compareTo(DoubleBuffer)->int:::Compares this buffer to another
java.nio.DoubleBuffer#mismatch(DoubleBuffer)->int:::Finds and returns the relative index of the first mismatch between this  buffer and a given buffer
java.nio.DoubleBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.FloatBuffer#base()->Object:::
java.nio.FloatBuffer#allocate(int)->FloatBuffer:::Allocates a new float buffer
java.nio.FloatBuffer#wrap(float[], int, int)->FloatBuffer:::Wraps a float array into a buffer
java.nio.FloatBuffer#wrap(float[])->FloatBuffer:::Wraps a float array into a buffer
java.nio.FloatBuffer#slice()->FloatBuffer:::Creates a new float buffer whose content is a shared subsequence of  this buffer's content
java.nio.FloatBuffer#duplicate()->FloatBuffer:::Creates a new float buffer that shares this buffer's content
java.nio.FloatBuffer#asReadOnlyBuffer()->FloatBuffer:::Creates a new, read-only float buffer that shares this buffer's  content
java.nio.FloatBuffer#get()->float:::Relative <i>get</i> method
java.nio.FloatBuffer#put(float)->FloatBuffer:::Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.FloatBuffer#get(int)->float:::Absolute <i>get</i> method
java.nio.FloatBuffer#put(int, float)->FloatBuffer:::Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.FloatBuffer#get(float[], int, int)->FloatBuffer:::Relative bulk <i>get</i> method
java.nio.FloatBuffer#get(float[])->FloatBuffer:::Relative bulk <i>get</i> method
java.nio.FloatBuffer#put(FloatBuffer)->FloatBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.FloatBuffer#put(float[], int, int)->FloatBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.FloatBuffer#put(float[])->FloatBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.FloatBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible float  array
java.nio.FloatBuffer#array()->float[]:::Returns the float array that backs this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.FloatBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first  element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.FloatBuffer#position(int)->FloatBuffer:::{@inheritDoc}
java.nio.FloatBuffer#limit(int)->FloatBuffer:::{@inheritDoc}
java.nio.FloatBuffer#mark()->FloatBuffer:::{@inheritDoc}
java.nio.FloatBuffer#reset()->FloatBuffer:::{@inheritDoc}
java.nio.FloatBuffer#clear()->FloatBuffer:::{@inheritDoc}
java.nio.FloatBuffer#flip()->FloatBuffer:::{@inheritDoc}
java.nio.FloatBuffer#rewind()->FloatBuffer:::{@inheritDoc}
java.nio.FloatBuffer#compact()->FloatBuffer:::Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.FloatBuffer#isDirect()->boolean:::Tells whether or not this float buffer is direct.
java.nio.FloatBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.FloatBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.FloatBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.FloatBuffer#compareTo(FloatBuffer)->int:::Compares this buffer to another
java.nio.FloatBuffer#mismatch(FloatBuffer)->int:::Finds and returns the relative index of the first mismatch between this  buffer and a given buffer
java.nio.FloatBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.HeapByteBuffer#slice()->ByteBuffer:::
java.nio.HeapByteBuffer#slice(int, int)->ByteBuffer:::
java.nio.HeapByteBuffer#duplicate()->ByteBuffer:::
java.nio.HeapByteBuffer#asReadOnlyBuffer()->ByteBuffer:::
java.nio.HeapByteBuffer#ix(int)->int:::
java.nio.HeapByteBuffer#get()->byte:::
java.nio.HeapByteBuffer#get(int)->byte:::
java.nio.HeapByteBuffer#get(byte[], int, int)->ByteBuffer:::
java.nio.HeapByteBuffer#isDirect()->boolean:::
java.nio.HeapByteBuffer#isReadOnly()->boolean:::
java.nio.HeapByteBuffer#put(byte)->ByteBuffer:::
java.nio.HeapByteBuffer#put(int, byte)->ByteBuffer:::
java.nio.HeapByteBuffer#put(byte[], int, int)->ByteBuffer:::
java.nio.HeapByteBuffer#put(ByteBuffer)->ByteBuffer:::
java.nio.HeapByteBuffer#compact()->ByteBuffer:::
java.nio.HeapByteBuffer#_get(int)->byte:::
java.nio.HeapByteBuffer#_put(int, byte)->void:::
java.nio.HeapByteBuffer#getChar()->char:::
java.nio.HeapByteBuffer#getChar(int)->char:::
java.nio.HeapByteBuffer#putChar(char)->ByteBuffer:::
java.nio.HeapByteBuffer#putChar(int, char)->ByteBuffer:::
java.nio.HeapByteBuffer#asCharBuffer()->CharBuffer:::
java.nio.HeapByteBuffer#getShort()->short:::
java.nio.HeapByteBuffer#getShort(int)->short:::
java.nio.HeapByteBuffer#putShort(short)->ByteBuffer:::
java.nio.HeapByteBuffer#putShort(int, short)->ByteBuffer:::
java.nio.HeapByteBuffer#asShortBuffer()->ShortBuffer:::
java.nio.HeapByteBuffer#getInt()->int:::
java.nio.HeapByteBuffer#getInt(int)->int:::
java.nio.HeapByteBuffer#putInt(int)->ByteBuffer:::
java.nio.HeapByteBuffer#putInt(int, int)->ByteBuffer:::
java.nio.HeapByteBuffer#asIntBuffer()->IntBuffer:::
java.nio.HeapByteBuffer#getLong()->long:::
java.nio.HeapByteBuffer#getLong(int)->long:::
java.nio.HeapByteBuffer#putLong(long)->ByteBuffer:::
java.nio.HeapByteBuffer#putLong(int, long)->ByteBuffer:::
java.nio.HeapByteBuffer#asLongBuffer()->LongBuffer:::
java.nio.HeapByteBuffer#getFloat()->float:::
java.nio.HeapByteBuffer#getFloat(int)->float:::
java.nio.HeapByteBuffer#putFloat(float)->ByteBuffer:::
java.nio.HeapByteBuffer#putFloat(int, float)->ByteBuffer:::
java.nio.HeapByteBuffer#asFloatBuffer()->FloatBuffer:::
java.nio.HeapByteBuffer#getDouble()->double:::
java.nio.HeapByteBuffer#getDouble(int)->double:::
java.nio.HeapByteBuffer#putDouble(double)->ByteBuffer:::
java.nio.HeapByteBuffer#putDouble(int, double)->ByteBuffer:::
java.nio.HeapByteBuffer#asDoubleBuffer()->DoubleBuffer:::
java.nio.HeapByteBufferR#slice()->ByteBuffer:::
java.nio.HeapByteBufferR#slice(int, int)->ByteBuffer:::
java.nio.HeapByteBufferR#duplicate()->ByteBuffer:::
java.nio.HeapByteBufferR#asReadOnlyBuffer()->ByteBuffer:::
java.nio.HeapByteBufferR#isReadOnly()->boolean:::
java.nio.HeapByteBufferR#put(byte)->ByteBuffer:::
java.nio.HeapByteBufferR#put(int, byte)->ByteBuffer:::
java.nio.HeapByteBufferR#put(byte[], int, int)->ByteBuffer:::
java.nio.HeapByteBufferR#put(ByteBuffer)->ByteBuffer:::
java.nio.HeapByteBufferR#compact()->ByteBuffer:::
java.nio.HeapByteBufferR#_get(int)->byte:::
java.nio.HeapByteBufferR#_put(int, byte)->void:::
java.nio.HeapByteBufferR#putChar(char)->ByteBuffer:::
java.nio.HeapByteBufferR#putChar(int, char)->ByteBuffer:::
java.nio.HeapByteBufferR#asCharBuffer()->CharBuffer:::
java.nio.HeapByteBufferR#putShort(short)->ByteBuffer:::
java.nio.HeapByteBufferR#putShort(int, short)->ByteBuffer:::
java.nio.HeapByteBufferR#asShortBuffer()->ShortBuffer:::
java.nio.HeapByteBufferR#putInt(int)->ByteBuffer:::
java.nio.HeapByteBufferR#putInt(int, int)->ByteBuffer:::
java.nio.HeapByteBufferR#asIntBuffer()->IntBuffer:::
java.nio.HeapByteBufferR#putLong(long)->ByteBuffer:::
java.nio.HeapByteBufferR#putLong(int, long)->ByteBuffer:::
java.nio.HeapByteBufferR#asLongBuffer()->LongBuffer:::
java.nio.HeapByteBufferR#putFloat(float)->ByteBuffer:::
java.nio.HeapByteBufferR#putFloat(int, float)->ByteBuffer:::
java.nio.HeapByteBufferR#asFloatBuffer()->FloatBuffer:::
java.nio.HeapByteBufferR#putDouble(double)->ByteBuffer:::
java.nio.HeapByteBufferR#putDouble(int, double)->ByteBuffer:::
java.nio.HeapByteBufferR#asDoubleBuffer()->DoubleBuffer:::
java.nio.HeapCharBuffer#slice()->CharBuffer:::
java.nio.HeapCharBuffer#duplicate()->CharBuffer:::
java.nio.HeapCharBuffer#asReadOnlyBuffer()->CharBuffer:::
java.nio.HeapCharBuffer#ix(int)->int:::
java.nio.HeapCharBuffer#get()->char:::
java.nio.HeapCharBuffer#get(int)->char:::
java.nio.HeapCharBuffer#getUnchecked(int)->char:::
java.nio.HeapCharBuffer#get(char[], int, int)->CharBuffer:::
java.nio.HeapCharBuffer#isDirect()->boolean:::
java.nio.HeapCharBuffer#isReadOnly()->boolean:::
java.nio.HeapCharBuffer#put(char)->CharBuffer:::
java.nio.HeapCharBuffer#put(int, char)->CharBuffer:::
java.nio.HeapCharBuffer#put(char[], int, int)->CharBuffer:::
java.nio.HeapCharBuffer#put(CharBuffer)->CharBuffer:::
java.nio.HeapCharBuffer#compact()->CharBuffer:::
java.nio.HeapCharBuffer#toString(int, int)->String:::
java.nio.HeapCharBuffer#subSequence(int, int)->CharBuffer:::
java.nio.HeapCharBuffer#order()->ByteOrder:::
java.nio.HeapCharBuffer#charRegionOrder()->ByteOrder:::
java.nio.HeapCharBufferR#slice()->CharBuffer:::
java.nio.HeapCharBufferR#duplicate()->CharBuffer:::
java.nio.HeapCharBufferR#asReadOnlyBuffer()->CharBuffer:::
java.nio.HeapCharBufferR#isReadOnly()->boolean:::
java.nio.HeapCharBufferR#put(char)->CharBuffer:::
java.nio.HeapCharBufferR#put(int, char)->CharBuffer:::
java.nio.HeapCharBufferR#put(char[], int, int)->CharBuffer:::
java.nio.HeapCharBufferR#put(CharBuffer)->CharBuffer:::
java.nio.HeapCharBufferR#compact()->CharBuffer:::
java.nio.HeapCharBufferR#toString(int, int)->String:::
java.nio.HeapCharBufferR#subSequence(int, int)->CharBuffer:::
java.nio.HeapCharBufferR#order()->ByteOrder:::
java.nio.HeapCharBufferR#charRegionOrder()->ByteOrder:::
java.nio.HeapDoubleBuffer#slice()->DoubleBuffer:::
java.nio.HeapDoubleBuffer#duplicate()->DoubleBuffer:::
java.nio.HeapDoubleBuffer#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.HeapDoubleBuffer#ix(int)->int:::
java.nio.HeapDoubleBuffer#get()->double:::
java.nio.HeapDoubleBuffer#get(int)->double:::
java.nio.HeapDoubleBuffer#get(double[], int, int)->DoubleBuffer:::
java.nio.HeapDoubleBuffer#isDirect()->boolean:::
java.nio.HeapDoubleBuffer#isReadOnly()->boolean:::
java.nio.HeapDoubleBuffer#put(double)->DoubleBuffer:::
java.nio.HeapDoubleBuffer#put(int, double)->DoubleBuffer:::
java.nio.HeapDoubleBuffer#put(double[], int, int)->DoubleBuffer:::
java.nio.HeapDoubleBuffer#put(DoubleBuffer)->DoubleBuffer:::
java.nio.HeapDoubleBuffer#compact()->DoubleBuffer:::
java.nio.HeapDoubleBuffer#order()->ByteOrder:::
java.nio.HeapDoubleBufferR#slice()->DoubleBuffer:::
java.nio.HeapDoubleBufferR#duplicate()->DoubleBuffer:::
java.nio.HeapDoubleBufferR#asReadOnlyBuffer()->DoubleBuffer:::
java.nio.HeapDoubleBufferR#isReadOnly()->boolean:::
java.nio.HeapDoubleBufferR#put(double)->DoubleBuffer:::
java.nio.HeapDoubleBufferR#put(int, double)->DoubleBuffer:::
java.nio.HeapDoubleBufferR#put(double[], int, int)->DoubleBuffer:::
java.nio.HeapDoubleBufferR#put(DoubleBuffer)->DoubleBuffer:::
java.nio.HeapDoubleBufferR#compact()->DoubleBuffer:::
java.nio.HeapDoubleBufferR#order()->ByteOrder:::
java.nio.HeapFloatBuffer#slice()->FloatBuffer:::
java.nio.HeapFloatBuffer#duplicate()->FloatBuffer:::
java.nio.HeapFloatBuffer#asReadOnlyBuffer()->FloatBuffer:::
java.nio.HeapFloatBuffer#ix(int)->int:::
java.nio.HeapFloatBuffer#get()->float:::
java.nio.HeapFloatBuffer#get(int)->float:::
java.nio.HeapFloatBuffer#get(float[], int, int)->FloatBuffer:::
java.nio.HeapFloatBuffer#isDirect()->boolean:::
java.nio.HeapFloatBuffer#isReadOnly()->boolean:::
java.nio.HeapFloatBuffer#put(float)->FloatBuffer:::
java.nio.HeapFloatBuffer#put(int, float)->FloatBuffer:::
java.nio.HeapFloatBuffer#put(float[], int, int)->FloatBuffer:::
java.nio.HeapFloatBuffer#put(FloatBuffer)->FloatBuffer:::
java.nio.HeapFloatBuffer#compact()->FloatBuffer:::
java.nio.HeapFloatBuffer#order()->ByteOrder:::
java.nio.HeapFloatBufferR#slice()->FloatBuffer:::
java.nio.HeapFloatBufferR#duplicate()->FloatBuffer:::
java.nio.HeapFloatBufferR#asReadOnlyBuffer()->FloatBuffer:::
java.nio.HeapFloatBufferR#isReadOnly()->boolean:::
java.nio.HeapFloatBufferR#put(float)->FloatBuffer:::
java.nio.HeapFloatBufferR#put(int, float)->FloatBuffer:::
java.nio.HeapFloatBufferR#put(float[], int, int)->FloatBuffer:::
java.nio.HeapFloatBufferR#put(FloatBuffer)->FloatBuffer:::
java.nio.HeapFloatBufferR#compact()->FloatBuffer:::
java.nio.HeapFloatBufferR#order()->ByteOrder:::
java.nio.HeapIntBuffer#slice()->IntBuffer:::
java.nio.HeapIntBuffer#duplicate()->IntBuffer:::
java.nio.HeapIntBuffer#asReadOnlyBuffer()->IntBuffer:::
java.nio.HeapIntBuffer#ix(int)->int:::
java.nio.HeapIntBuffer#get()->int:::
java.nio.HeapIntBuffer#get(int)->int:::
java.nio.HeapIntBuffer#get(int[], int, int)->IntBuffer:::
java.nio.HeapIntBuffer#isDirect()->boolean:::
java.nio.HeapIntBuffer#isReadOnly()->boolean:::
java.nio.HeapIntBuffer#put(int)->IntBuffer:::
java.nio.HeapIntBuffer#put(int, int)->IntBuffer:::
java.nio.HeapIntBuffer#put(int[], int, int)->IntBuffer:::
java.nio.HeapIntBuffer#put(IntBuffer)->IntBuffer:::
java.nio.HeapIntBuffer#compact()->IntBuffer:::
java.nio.HeapIntBuffer#order()->ByteOrder:::
java.nio.HeapIntBufferR#slice()->IntBuffer:::
java.nio.HeapIntBufferR#duplicate()->IntBuffer:::
java.nio.HeapIntBufferR#asReadOnlyBuffer()->IntBuffer:::
java.nio.HeapIntBufferR#isReadOnly()->boolean:::
java.nio.HeapIntBufferR#put(int)->IntBuffer:::
java.nio.HeapIntBufferR#put(int, int)->IntBuffer:::
java.nio.HeapIntBufferR#put(int[], int, int)->IntBuffer:::
java.nio.HeapIntBufferR#put(IntBuffer)->IntBuffer:::
java.nio.HeapIntBufferR#compact()->IntBuffer:::
java.nio.HeapIntBufferR#order()->ByteOrder:::
java.nio.HeapLongBuffer#slice()->LongBuffer:::
java.nio.HeapLongBuffer#duplicate()->LongBuffer:::
java.nio.HeapLongBuffer#asReadOnlyBuffer()->LongBuffer:::
java.nio.HeapLongBuffer#ix(int)->int:::
java.nio.HeapLongBuffer#get()->long:::
java.nio.HeapLongBuffer#get(int)->long:::
java.nio.HeapLongBuffer#get(long[], int, int)->LongBuffer:::
java.nio.HeapLongBuffer#isDirect()->boolean:::
java.nio.HeapLongBuffer#isReadOnly()->boolean:::
java.nio.HeapLongBuffer#put(long)->LongBuffer:::
java.nio.HeapLongBuffer#put(int, long)->LongBuffer:::
java.nio.HeapLongBuffer#put(long[], int, int)->LongBuffer:::
java.nio.HeapLongBuffer#put(LongBuffer)->LongBuffer:::
java.nio.HeapLongBuffer#compact()->LongBuffer:::
java.nio.HeapLongBuffer#order()->ByteOrder:::
java.nio.HeapLongBufferR#slice()->LongBuffer:::
java.nio.HeapLongBufferR#duplicate()->LongBuffer:::
java.nio.HeapLongBufferR#asReadOnlyBuffer()->LongBuffer:::
java.nio.HeapLongBufferR#isReadOnly()->boolean:::
java.nio.HeapLongBufferR#put(long)->LongBuffer:::
java.nio.HeapLongBufferR#put(int, long)->LongBuffer:::
java.nio.HeapLongBufferR#put(long[], int, int)->LongBuffer:::
java.nio.HeapLongBufferR#put(LongBuffer)->LongBuffer:::
java.nio.HeapLongBufferR#compact()->LongBuffer:::
java.nio.HeapLongBufferR#order()->ByteOrder:::
java.nio.HeapShortBuffer#slice()->ShortBuffer:::
java.nio.HeapShortBuffer#duplicate()->ShortBuffer:::
java.nio.HeapShortBuffer#asReadOnlyBuffer()->ShortBuffer:::
java.nio.HeapShortBuffer#ix(int)->int:::
java.nio.HeapShortBuffer#get()->short:::
java.nio.HeapShortBuffer#get(int)->short:::
java.nio.HeapShortBuffer#get(short[], int, int)->ShortBuffer:::
java.nio.HeapShortBuffer#isDirect()->boolean:::
java.nio.HeapShortBuffer#isReadOnly()->boolean:::
java.nio.HeapShortBuffer#put(short)->ShortBuffer:::
java.nio.HeapShortBuffer#put(int, short)->ShortBuffer:::
java.nio.HeapShortBuffer#put(short[], int, int)->ShortBuffer:::
java.nio.HeapShortBuffer#put(ShortBuffer)->ShortBuffer:::
java.nio.HeapShortBuffer#compact()->ShortBuffer:::
java.nio.HeapShortBuffer#order()->ByteOrder:::
java.nio.HeapShortBufferR#slice()->ShortBuffer:::
java.nio.HeapShortBufferR#duplicate()->ShortBuffer:::
java.nio.HeapShortBufferR#asReadOnlyBuffer()->ShortBuffer:::
java.nio.HeapShortBufferR#isReadOnly()->boolean:::
java.nio.HeapShortBufferR#put(short)->ShortBuffer:::
java.nio.HeapShortBufferR#put(int, short)->ShortBuffer:::
java.nio.HeapShortBufferR#put(short[], int, int)->ShortBuffer:::
java.nio.HeapShortBufferR#put(ShortBuffer)->ShortBuffer:::
java.nio.HeapShortBufferR#compact()->ShortBuffer:::
java.nio.HeapShortBufferR#order()->ByteOrder:::
java.nio.IntBuffer#base()->Object:::
java.nio.IntBuffer#allocate(int)->IntBuffer:::Allocates a new int buffer
java.nio.IntBuffer#wrap(int[], int, int)->IntBuffer:::Wraps an int array into a buffer
java.nio.IntBuffer#wrap(int[])->IntBuffer:::Wraps an int array into a buffer
java.nio.IntBuffer#slice()->IntBuffer:::Creates a new int buffer whose content is a shared subsequence of  this buffer's content
java.nio.IntBuffer#duplicate()->IntBuffer:::Creates a new int buffer that shares this buffer's content
java.nio.IntBuffer#asReadOnlyBuffer()->IntBuffer:::Creates a new, read-only int buffer that shares this buffer's  content
java.nio.IntBuffer#get()->int:::Relative <i>get</i> method
java.nio.IntBuffer#put(int)->IntBuffer:::Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.IntBuffer#get(int)->int:::Absolute <i>get</i> method
java.nio.IntBuffer#put(int, int)->IntBuffer:::Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.IntBuffer#get(int[], int, int)->IntBuffer:::Relative bulk <i>get</i> method
java.nio.IntBuffer#get(int[])->IntBuffer:::Relative bulk <i>get</i> method
java.nio.IntBuffer#put(IntBuffer)->IntBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.IntBuffer#put(int[], int, int)->IntBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.IntBuffer#put(int[])->IntBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.IntBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible int  array
java.nio.IntBuffer#array()->int[]:::Returns the int array that backs this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.IntBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first  element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.IntBuffer#position(int)->IntBuffer:::{@inheritDoc}
java.nio.IntBuffer#limit(int)->IntBuffer:::{@inheritDoc}
java.nio.IntBuffer#mark()->IntBuffer:::{@inheritDoc}
java.nio.IntBuffer#reset()->IntBuffer:::{@inheritDoc}
java.nio.IntBuffer#clear()->IntBuffer:::{@inheritDoc}
java.nio.IntBuffer#flip()->IntBuffer:::{@inheritDoc}
java.nio.IntBuffer#rewind()->IntBuffer:::{@inheritDoc}
java.nio.IntBuffer#compact()->IntBuffer:::Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.IntBuffer#isDirect()->boolean:::Tells whether or not this int buffer is direct.
java.nio.IntBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.IntBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.IntBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.IntBuffer#compareTo(IntBuffer)->int:::Compares this buffer to another
java.nio.IntBuffer#mismatch(IntBuffer)->int:::Finds and returns the relative index of the first mismatch between this  buffer and a given buffer
java.nio.IntBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.LongBuffer#base()->Object:::
java.nio.LongBuffer#allocate(int)->LongBuffer:::Allocates a new long buffer
java.nio.LongBuffer#wrap(long[], int, int)->LongBuffer:::Wraps a long array into a buffer
java.nio.LongBuffer#wrap(long[])->LongBuffer:::Wraps a long array into a buffer
java.nio.LongBuffer#slice()->LongBuffer:::Creates a new long buffer whose content is a shared subsequence of  this buffer's content
java.nio.LongBuffer#duplicate()->LongBuffer:::Creates a new long buffer that shares this buffer's content
java.nio.LongBuffer#asReadOnlyBuffer()->LongBuffer:::Creates a new, read-only long buffer that shares this buffer's  content
java.nio.LongBuffer#get()->long:::Relative <i>get</i> method
java.nio.LongBuffer#put(long)->LongBuffer:::Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.LongBuffer#get(int)->long:::Absolute <i>get</i> method
java.nio.LongBuffer#put(int, long)->LongBuffer:::Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.LongBuffer#get(long[], int, int)->LongBuffer:::Relative bulk <i>get</i> method
java.nio.LongBuffer#get(long[])->LongBuffer:::Relative bulk <i>get</i> method
java.nio.LongBuffer#put(LongBuffer)->LongBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.LongBuffer#put(long[], int, int)->LongBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.LongBuffer#put(long[])->LongBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.LongBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible long  array
java.nio.LongBuffer#array()->long[]:::Returns the long array that backs this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.LongBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first  element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.LongBuffer#position(int)->LongBuffer:::{@inheritDoc}
java.nio.LongBuffer#limit(int)->LongBuffer:::{@inheritDoc}
java.nio.LongBuffer#mark()->LongBuffer:::{@inheritDoc}
java.nio.LongBuffer#reset()->LongBuffer:::{@inheritDoc}
java.nio.LongBuffer#clear()->LongBuffer:::{@inheritDoc}
java.nio.LongBuffer#flip()->LongBuffer:::{@inheritDoc}
java.nio.LongBuffer#rewind()->LongBuffer:::{@inheritDoc}
java.nio.LongBuffer#compact()->LongBuffer:::Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.LongBuffer#isDirect()->boolean:::Tells whether or not this long buffer is direct.
java.nio.LongBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.LongBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.LongBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.LongBuffer#compareTo(LongBuffer)->int:::Compares this buffer to another
java.nio.LongBuffer#mismatch(LongBuffer)->int:::Finds and returns the relative index of the first mismatch between this  buffer and a given buffer
java.nio.LongBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.MappedByteBuffer#isLoaded()->boolean:::Tells whether or not this buffer's content is resident in physical  memory
java.nio.MappedByteBuffer#load()->MappedByteBuffer:::Loads this buffer's content into physical memory
java.nio.MappedByteBuffer#force()->MappedByteBuffer:::Forces any changes made to this buffer's content to be written to the  storage device containing the mapped file
java.nio.MappedByteBuffer#position(int)->MappedByteBuffer:::{@inheritDoc}
java.nio.MappedByteBuffer#limit(int)->MappedByteBuffer:::{@inheritDoc}
java.nio.MappedByteBuffer#mark()->MappedByteBuffer:::{@inheritDoc}
java.nio.MappedByteBuffer#reset()->MappedByteBuffer:::{@inheritDoc}
java.nio.MappedByteBuffer#clear()->MappedByteBuffer:::{@inheritDoc}
java.nio.MappedByteBuffer#flip()->MappedByteBuffer:::{@inheritDoc}
java.nio.MappedByteBuffer#rewind()->MappedByteBuffer:::{@inheritDoc}
java.nio.ShortBuffer#base()->Object:::
java.nio.ShortBuffer#allocate(int)->ShortBuffer:::Allocates a new short buffer
java.nio.ShortBuffer#wrap(short[], int, int)->ShortBuffer:::Wraps a short array into a buffer
java.nio.ShortBuffer#wrap(short[])->ShortBuffer:::Wraps a short array into a buffer
java.nio.ShortBuffer#slice()->ShortBuffer:::Creates a new short buffer whose content is a shared subsequence of  this buffer's content
java.nio.ShortBuffer#duplicate()->ShortBuffer:::Creates a new short buffer that shares this buffer's content
java.nio.ShortBuffer#asReadOnlyBuffer()->ShortBuffer:::Creates a new, read-only short buffer that shares this buffer's  content
java.nio.ShortBuffer#get()->short:::Relative <i>get</i> method
java.nio.ShortBuffer#put(short)->ShortBuffer:::Relative <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ShortBuffer#get(int)->short:::Absolute <i>get</i> method
java.nio.ShortBuffer#put(int, short)->ShortBuffer:::Absolute <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ShortBuffer#get(short[], int, int)->ShortBuffer:::Relative bulk <i>get</i> method
java.nio.ShortBuffer#get(short[])->ShortBuffer:::Relative bulk <i>get</i> method
java.nio.ShortBuffer#put(ShortBuffer)->ShortBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ShortBuffer#put(short[], int, int)->ShortBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ShortBuffer#put(short[])->ShortBuffer:::Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ShortBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible short  array
java.nio.ShortBuffer#array()->short[]:::Returns the short array that backs this  buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ShortBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first  element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ShortBuffer#position(int)->ShortBuffer:::{@inheritDoc}
java.nio.ShortBuffer#limit(int)->ShortBuffer:::{@inheritDoc}
java.nio.ShortBuffer#mark()->ShortBuffer:::{@inheritDoc}
java.nio.ShortBuffer#reset()->ShortBuffer:::{@inheritDoc}
java.nio.ShortBuffer#clear()->ShortBuffer:::{@inheritDoc}
java.nio.ShortBuffer#flip()->ShortBuffer:::{@inheritDoc}
java.nio.ShortBuffer#rewind()->ShortBuffer:::{@inheritDoc}
java.nio.ShortBuffer#compact()->ShortBuffer:::Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>
java.nio.ShortBuffer#isDirect()->boolean:::Tells whether or not this short buffer is direct.
java.nio.ShortBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.ShortBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.ShortBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.ShortBuffer#compareTo(ShortBuffer)->int:::Compares this buffer to another
java.nio.ShortBuffer#mismatch(ShortBuffer)->int:::Finds and returns the relative index of the first mismatch between this  buffer and a given buffer
java.nio.ShortBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.StringCharBuffer#slice()->CharBuffer:::
java.nio.StringCharBuffer#duplicate()->CharBuffer:::
java.nio.StringCharBuffer#asReadOnlyBuffer()->CharBuffer:::
java.nio.StringCharBuffer#get()->char:::
java.nio.StringCharBuffer#get(int)->char:::
java.nio.StringCharBuffer#getUnchecked(int)->char:::
java.nio.StringCharBuffer#put(char)->CharBuffer:::
java.nio.StringCharBuffer#put(int, char)->CharBuffer:::
java.nio.StringCharBuffer#compact()->CharBuffer:::
java.nio.StringCharBuffer#isReadOnly()->boolean:::
java.nio.StringCharBuffer#toString(int, int)->String:::
java.nio.StringCharBuffer#subSequence(int, int)->CharBuffer:::
java.nio.StringCharBuffer#isDirect()->boolean:::
java.nio.StringCharBuffer#order()->ByteOrder:::
java.nio.StringCharBuffer#charRegionOrder()->ByteOrder:::
java.nio.StringCharBuffer#equals(Object)->boolean:::
java.nio.StringCharBuffer#compareTo(CharBuffer)->int:::
