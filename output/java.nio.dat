java.nio.Bits#swap(short)->short::: bits swap
java.nio.Bits#swap(char)->char::: bits swap
java.nio.Bits#swap(int)->int::: bits swap
java.nio.Bits#swap(long)->long::: bits swap
java.nio.Bits#pageSize()->int::: bits page size
java.nio.Bits#pageCount(long)->int::: bits page count
java.nio.Bits#unaligned()->boolean::: bits unaligned
java.nio.Bits#reserveMemory(long, int)->void::: bits reserve memory
java.nio.Bits#unreserveMemory(long, int)->void::: bits unreserve memory
java.nio.Buffer#createSameBufferException()->IllegalArgumentException:::Returns an IllegalArgumentException indicating that the source and target are the same Buffer
java.nio.Buffer#createCapacityException(int)->IllegalArgumentException:::Verify that the capacity is nonnegative.
java.nio.Buffer#capacity()->int:::Returns this buffer's capacity.
java.nio.Buffer#position()->int:::Returns this buffer's position.
java.nio.Buffer#position(int)->Buffer:::Sets this buffer's position
java.nio.Buffer#limit()->int:::Returns this buffer's limit.
java.nio.Buffer#limit(int)->Buffer:::Sets this buffer's limit
java.nio.Buffer#mark()->Buffer:::Sets this buffer's mark at its position.
java.nio.Buffer#reset()->Buffer:::Resets this buffer's position to the previously-marked position
java.nio.Buffer#clear()->Buffer:::Clears this buffer
java.nio.Buffer#flip()->Buffer:::Flips this buffer
java.nio.Buffer#rewind()->Buffer:::Rewinds this buffer
java.nio.Buffer#remaining()->int:::Returns the number of elements between the current position and the limit.
java.nio.Buffer#hasRemaining()->boolean:::Tells whether there are any elements between the current position and the limit.
java.nio.Buffer#isReadOnly()->boolean:::Tells whether or not this buffer is read-only.
java.nio.Buffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible array
java.nio.Buffer#array()->Object:::Returns the array that backs this buffer&nbsp;&nbsp;(optional operation)
java.nio.Buffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
java.nio.Buffer#isDirect()->boolean:::Tells whether or not this buffer is direct.
java.nio.Buffer#slice()->Buffer:::Creates a new buffer whose content is a shared subsequence of this buffer's content
java.nio.Buffer#duplicate()->Buffer:::Creates a new buffer that shares this buffer's content
java.nio.Buffer#base()->Object::: buffer base
java.nio.Buffer#nextGetIndex()->int:::Checks the current position against the limit, throwing a BufferUnderflowException if it is not smaller than the limit, and then increments the position.
java.nio.Buffer#nextGetIndex(int)->int::: buffer next get index
java.nio.Buffer#nextPutIndex()->int:::Checks the current position against the limit, throwing a BufferOverflowException if it is not smaller than the limit, and then increments the position.
java.nio.Buffer#nextPutIndex(int)->int::: buffer next put index
java.nio.Buffer#checkIndex(int)->int:::Checks the given index against the limit, throwing an IndexOutOfBoundsException if it is not smaller than the limit or is smaller than zero.
java.nio.Buffer#checkIndex(int, int)->int::: buffer check index
java.nio.Buffer#markValue()->int::: buffer mark value
java.nio.Buffer#truncate()->void::: buffer truncate
java.nio.Buffer#discardMark()->void::: buffer discard mark
java.nio.Buffer#checkBounds(int, int, int)->void::: buffer check bounds
java.nio.BufferMismatch#mismatch(ByteBuffer, int, ByteBuffer, int, int)->int::: buffer mismatch mismatch
java.nio.BufferMismatch#mismatch(CharBuffer, int, CharBuffer, int, int)->int::: buffer mismatch mismatch
java.nio.BufferMismatch#mismatch(ShortBuffer, int, ShortBuffer, int, int)->int::: buffer mismatch mismatch
java.nio.BufferMismatch#mismatch(IntBuffer, int, IntBuffer, int, int)->int::: buffer mismatch mismatch
java.nio.BufferMismatch#mismatch(FloatBuffer, int, FloatBuffer, int, int)->int::: buffer mismatch mismatch
java.nio.BufferMismatch#mismatch(LongBuffer, int, LongBuffer, int, int)->int::: buffer mismatch mismatch
java.nio.BufferMismatch#mismatch(DoubleBuffer, int, DoubleBuffer, int, int)->int::: buffer mismatch mismatch
java.nio.ByteBuffer#base()->Object::: byte buffer base
java.nio.ByteBuffer#allocateDirect(int)->ByteBuffer:::Allocates a new direct byte buffer
java.nio.ByteBuffer#allocate(int)->ByteBuffer:::Allocates a new byte buffer
java.nio.ByteBuffer#wrap(byte[], int, int)->ByteBuffer:::Wraps a byte array into a buffer
java.nio.ByteBuffer#wrap(byte[])->ByteBuffer:::Wraps a byte array into a buffer
java.nio.ByteBuffer#slice()->ByteBuffer:::Creates a new byte buffer whose content is a shared subsequence of this buffer's content
java.nio.ByteBuffer#duplicate()->ByteBuffer:::Creates a new byte buffer that shares this buffer's content
java.nio.ByteBuffer#asReadOnlyBuffer()->ByteBuffer:::Creates a new, read-only byte buffer that shares this buffer's content
java.nio.ByteBuffer#get()->byte:::Relative get method
java.nio.ByteBuffer#put(byte)->ByteBuffer:::Relative put method&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#get(int)->byte:::Absolute get method
java.nio.ByteBuffer#put(int, byte)->ByteBuffer:::Absolute put method&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#get(byte[], int, int)->ByteBuffer:::Relative bulk get method
java.nio.ByteBuffer#get(byte[])->ByteBuffer:::Relative bulk get method
java.nio.ByteBuffer#put(ByteBuffer)->ByteBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#put(byte[], int, int)->ByteBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#put(byte[])->ByteBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible byte array
java.nio.ByteBuffer#array()->byte[]:::Returns the byte array that backs this buffer&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#position(int)->ByteBuffer::: byte buffer position
java.nio.ByteBuffer#limit(int)->ByteBuffer::: byte buffer limit
java.nio.ByteBuffer#mark()->ByteBuffer::: byte buffer mark
java.nio.ByteBuffer#reset()->ByteBuffer::: byte buffer reset
java.nio.ByteBuffer#clear()->ByteBuffer::: byte buffer clear
java.nio.ByteBuffer#flip()->ByteBuffer::: byte buffer flip
java.nio.ByteBuffer#rewind()->ByteBuffer::: byte buffer rewind
java.nio.ByteBuffer#compact()->ByteBuffer:::Compacts this buffer&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#isDirect()->boolean:::Tells whether or not this byte buffer is direct.
java.nio.ByteBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.ByteBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.ByteBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.ByteBuffer#compareTo(ByteBuffer)->int:::Compares this buffer to another
java.nio.ByteBuffer#mismatch(ByteBuffer)->int:::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
java.nio.ByteBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.ByteBuffer#order(ByteOrder)->ByteBuffer:::Modifies this buffer's byte order.
java.nio.ByteBuffer#alignmentOffset(int, int)->int:::Returns the memory address, pointing to the byte at the given index, modulus the given unit size
java.nio.ByteBuffer#alignedSlice(int)->ByteBuffer:::Creates a new byte buffer whose content is a shared and aligned subsequence of this buffer's content
java.nio.ByteBuffer#slice(int, int)->ByteBuffer::: byte buffer slice
java.nio.ByteBuffer#getChar()->char:::Relative get method for reading a char value
java.nio.ByteBuffer#putChar(char)->ByteBuffer:::Relative put method for writing a char value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#getChar(int)->char:::Absolute get method for reading a char value
java.nio.ByteBuffer#putChar(int, char)->ByteBuffer:::Absolute put method for writing a char value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#asCharBuffer()->CharBuffer:::Creates a view of this byte buffer as a char buffer
java.nio.ByteBuffer#getShort()->short:::Relative get method for reading a short value
java.nio.ByteBuffer#putShort(short)->ByteBuffer:::Relative put method for writing a short value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#getShort(int)->short:::Absolute get method for reading a short value
java.nio.ByteBuffer#putShort(int, short)->ByteBuffer:::Absolute put method for writing a short value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#asShortBuffer()->ShortBuffer:::Creates a view of this byte buffer as a short buffer
java.nio.ByteBuffer#getInt()->int:::Relative get method for reading an int value
java.nio.ByteBuffer#putInt(int)->ByteBuffer:::Relative put method for writing an int value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#getInt(int)->int:::Absolute get method for reading an int value
java.nio.ByteBuffer#putInt(int, int)->ByteBuffer:::Absolute put method for writing an int value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#asIntBuffer()->IntBuffer:::Creates a view of this byte buffer as an int buffer
java.nio.ByteBuffer#getLong()->long:::Relative get method for reading a long value
java.nio.ByteBuffer#putLong(long)->ByteBuffer:::Relative put method for writing a long value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#getLong(int)->long:::Absolute get method for reading a long value
java.nio.ByteBuffer#putLong(int, long)->ByteBuffer:::Absolute put method for writing a long value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#asLongBuffer()->LongBuffer:::Creates a view of this byte buffer as a long buffer
java.nio.ByteBuffer#getFloat()->float:::Relative get method for reading a float value
java.nio.ByteBuffer#putFloat(float)->ByteBuffer:::Relative put method for writing a float value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#getFloat(int)->float:::Absolute get method for reading a float value
java.nio.ByteBuffer#putFloat(int, float)->ByteBuffer:::Absolute put method for writing a float value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#asFloatBuffer()->FloatBuffer:::Creates a view of this byte buffer as a float buffer
java.nio.ByteBuffer#getDouble()->double:::Relative get method for reading a double value
java.nio.ByteBuffer#putDouble(double)->ByteBuffer:::Relative put method for writing a double value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#getDouble(int)->double:::Absolute get method for reading a double value
java.nio.ByteBuffer#putDouble(int, double)->ByteBuffer:::Absolute put method for writing a double value&nbsp;&nbsp;(optional operation)
java.nio.ByteBuffer#asDoubleBuffer()->DoubleBuffer:::Creates a view of this byte buffer as a double buffer
java.nio.ByteBufferAsCharBufferB#base()->Object::: byte buffer as char buffer b base
java.nio.ByteBufferAsCharBufferB#slice()->CharBuffer::: byte buffer as char buffer b slice
java.nio.ByteBufferAsCharBufferB#duplicate()->CharBuffer::: byte buffer as char buffer b duplicate
java.nio.ByteBufferAsCharBufferB#asReadOnlyBuffer()->CharBuffer::: byte buffer as char buffer b as read only buffer
java.nio.ByteBufferAsCharBufferB#byteOffset(long)->long::: byte buffer as char buffer b byte offset
java.nio.ByteBufferAsCharBufferB#get()->char::: byte buffer as char buffer b get
java.nio.ByteBufferAsCharBufferB#get(int)->char::: byte buffer as char buffer b get
java.nio.ByteBufferAsCharBufferB#getUnchecked(int)->char::: byte buffer as char buffer b get unchecked
java.nio.ByteBufferAsCharBufferB#put(char)->CharBuffer::: byte buffer as char buffer b put
java.nio.ByteBufferAsCharBufferB#put(int, char)->CharBuffer::: byte buffer as char buffer b put
java.nio.ByteBufferAsCharBufferB#compact()->CharBuffer::: byte buffer as char buffer b compact
java.nio.ByteBufferAsCharBufferB#isDirect()->boolean::: byte buffer as char buffer b is direct
java.nio.ByteBufferAsCharBufferB#isReadOnly()->boolean::: byte buffer as char buffer b is read only
java.nio.ByteBufferAsCharBufferB#toString(int, int)->String::: byte buffer as char buffer b to string
java.nio.ByteBufferAsCharBufferB#subSequence(int, int)->CharBuffer::: byte buffer as char buffer b sub sequence
java.nio.ByteBufferAsCharBufferB#order()->ByteOrder::: byte buffer as char buffer b order
java.nio.ByteBufferAsCharBufferB#charRegionOrder()->ByteOrder::: byte buffer as char buffer b char region order
java.nio.ByteBufferAsCharBufferL#base()->Object::: byte buffer as char buffer l base
java.nio.ByteBufferAsCharBufferL#slice()->CharBuffer::: byte buffer as char buffer l slice
java.nio.ByteBufferAsCharBufferL#duplicate()->CharBuffer::: byte buffer as char buffer l duplicate
java.nio.ByteBufferAsCharBufferL#asReadOnlyBuffer()->CharBuffer::: byte buffer as char buffer l as read only buffer
java.nio.ByteBufferAsCharBufferL#byteOffset(long)->long::: byte buffer as char buffer l byte offset
java.nio.ByteBufferAsCharBufferL#get()->char::: byte buffer as char buffer l get
java.nio.ByteBufferAsCharBufferL#get(int)->char::: byte buffer as char buffer l get
java.nio.ByteBufferAsCharBufferL#getUnchecked(int)->char::: byte buffer as char buffer l get unchecked
java.nio.ByteBufferAsCharBufferL#put(char)->CharBuffer::: byte buffer as char buffer l put
java.nio.ByteBufferAsCharBufferL#put(int, char)->CharBuffer::: byte buffer as char buffer l put
java.nio.ByteBufferAsCharBufferL#compact()->CharBuffer::: byte buffer as char buffer l compact
java.nio.ByteBufferAsCharBufferL#isDirect()->boolean::: byte buffer as char buffer l is direct
java.nio.ByteBufferAsCharBufferL#isReadOnly()->boolean::: byte buffer as char buffer l is read only
java.nio.ByteBufferAsCharBufferL#toString(int, int)->String::: byte buffer as char buffer l to string
java.nio.ByteBufferAsCharBufferL#subSequence(int, int)->CharBuffer::: byte buffer as char buffer l sub sequence
java.nio.ByteBufferAsCharBufferL#order()->ByteOrder::: byte buffer as char buffer l order
java.nio.ByteBufferAsCharBufferL#charRegionOrder()->ByteOrder::: byte buffer as char buffer l char region order
java.nio.ByteBufferAsCharBufferRB#base()->Object::: byte buffer as char buffer b base
java.nio.ByteBufferAsCharBufferRB#slice()->CharBuffer::: byte buffer as char buffer b slice
java.nio.ByteBufferAsCharBufferRB#duplicate()->CharBuffer::: byte buffer as char buffer b duplicate
java.nio.ByteBufferAsCharBufferRB#asReadOnlyBuffer()->CharBuffer::: byte buffer as char buffer b as read only buffer
java.nio.ByteBufferAsCharBufferRB#put(char)->CharBuffer::: byte buffer as char buffer b put
java.nio.ByteBufferAsCharBufferRB#put(int, char)->CharBuffer::: byte buffer as char buffer b put
java.nio.ByteBufferAsCharBufferRB#compact()->CharBuffer::: byte buffer as char buffer b compact
java.nio.ByteBufferAsCharBufferRB#isDirect()->boolean::: byte buffer as char buffer b is direct
java.nio.ByteBufferAsCharBufferRB#isReadOnly()->boolean::: byte buffer as char buffer b is read only
java.nio.ByteBufferAsCharBufferRB#toString(int, int)->String::: byte buffer as char buffer b to string
java.nio.ByteBufferAsCharBufferRB#subSequence(int, int)->CharBuffer::: byte buffer as char buffer b sub sequence
java.nio.ByteBufferAsCharBufferRB#order()->ByteOrder::: byte buffer as char buffer b order
java.nio.ByteBufferAsCharBufferRB#charRegionOrder()->ByteOrder::: byte buffer as char buffer b char region order
java.nio.ByteBufferAsCharBufferRL#base()->Object::: byte buffer as char buffer l base
java.nio.ByteBufferAsCharBufferRL#slice()->CharBuffer::: byte buffer as char buffer l slice
java.nio.ByteBufferAsCharBufferRL#duplicate()->CharBuffer::: byte buffer as char buffer l duplicate
java.nio.ByteBufferAsCharBufferRL#asReadOnlyBuffer()->CharBuffer::: byte buffer as char buffer l as read only buffer
java.nio.ByteBufferAsCharBufferRL#put(char)->CharBuffer::: byte buffer as char buffer l put
java.nio.ByteBufferAsCharBufferRL#put(int, char)->CharBuffer::: byte buffer as char buffer l put
java.nio.ByteBufferAsCharBufferRL#compact()->CharBuffer::: byte buffer as char buffer l compact
java.nio.ByteBufferAsCharBufferRL#isDirect()->boolean::: byte buffer as char buffer l is direct
java.nio.ByteBufferAsCharBufferRL#isReadOnly()->boolean::: byte buffer as char buffer l is read only
java.nio.ByteBufferAsCharBufferRL#toString(int, int)->String::: byte buffer as char buffer l to string
java.nio.ByteBufferAsCharBufferRL#subSequence(int, int)->CharBuffer::: byte buffer as char buffer l sub sequence
java.nio.ByteBufferAsCharBufferRL#order()->ByteOrder::: byte buffer as char buffer l order
java.nio.ByteBufferAsCharBufferRL#charRegionOrder()->ByteOrder::: byte buffer as char buffer l char region order
java.nio.ByteBufferAsDoubleBufferB#base()->Object::: byte buffer as double buffer b base
java.nio.ByteBufferAsDoubleBufferB#slice()->DoubleBuffer::: byte buffer as double buffer b slice
java.nio.ByteBufferAsDoubleBufferB#duplicate()->DoubleBuffer::: byte buffer as double buffer b duplicate
java.nio.ByteBufferAsDoubleBufferB#asReadOnlyBuffer()->DoubleBuffer::: byte buffer as double buffer b as read only buffer
java.nio.ByteBufferAsDoubleBufferB#byteOffset(long)->long::: byte buffer as double buffer b byte offset
java.nio.ByteBufferAsDoubleBufferB#get()->double::: byte buffer as double buffer b get
java.nio.ByteBufferAsDoubleBufferB#get(int)->double::: byte buffer as double buffer b get
java.nio.ByteBufferAsDoubleBufferB#put(double)->DoubleBuffer::: byte buffer as double buffer b put
java.nio.ByteBufferAsDoubleBufferB#put(int, double)->DoubleBuffer::: byte buffer as double buffer b put
java.nio.ByteBufferAsDoubleBufferB#compact()->DoubleBuffer::: byte buffer as double buffer b compact
java.nio.ByteBufferAsDoubleBufferB#isDirect()->boolean::: byte buffer as double buffer b is direct
java.nio.ByteBufferAsDoubleBufferB#isReadOnly()->boolean::: byte buffer as double buffer b is read only
java.nio.ByteBufferAsDoubleBufferB#order()->ByteOrder::: byte buffer as double buffer b order
java.nio.ByteBufferAsDoubleBufferL#base()->Object::: byte buffer as double buffer l base
java.nio.ByteBufferAsDoubleBufferL#slice()->DoubleBuffer::: byte buffer as double buffer l slice
java.nio.ByteBufferAsDoubleBufferL#duplicate()->DoubleBuffer::: byte buffer as double buffer l duplicate
java.nio.ByteBufferAsDoubleBufferL#asReadOnlyBuffer()->DoubleBuffer::: byte buffer as double buffer l as read only buffer
java.nio.ByteBufferAsDoubleBufferL#byteOffset(long)->long::: byte buffer as double buffer l byte offset
java.nio.ByteBufferAsDoubleBufferL#get()->double::: byte buffer as double buffer l get
java.nio.ByteBufferAsDoubleBufferL#get(int)->double::: byte buffer as double buffer l get
java.nio.ByteBufferAsDoubleBufferL#put(double)->DoubleBuffer::: byte buffer as double buffer l put
java.nio.ByteBufferAsDoubleBufferL#put(int, double)->DoubleBuffer::: byte buffer as double buffer l put
java.nio.ByteBufferAsDoubleBufferL#compact()->DoubleBuffer::: byte buffer as double buffer l compact
java.nio.ByteBufferAsDoubleBufferL#isDirect()->boolean::: byte buffer as double buffer l is direct
java.nio.ByteBufferAsDoubleBufferL#isReadOnly()->boolean::: byte buffer as double buffer l is read only
java.nio.ByteBufferAsDoubleBufferL#order()->ByteOrder::: byte buffer as double buffer l order
java.nio.ByteBufferAsDoubleBufferRB#base()->Object::: byte buffer as double buffer b base
java.nio.ByteBufferAsDoubleBufferRB#slice()->DoubleBuffer::: byte buffer as double buffer b slice
java.nio.ByteBufferAsDoubleBufferRB#duplicate()->DoubleBuffer::: byte buffer as double buffer b duplicate
java.nio.ByteBufferAsDoubleBufferRB#asReadOnlyBuffer()->DoubleBuffer::: byte buffer as double buffer b as read only buffer
java.nio.ByteBufferAsDoubleBufferRB#put(double)->DoubleBuffer::: byte buffer as double buffer b put
java.nio.ByteBufferAsDoubleBufferRB#put(int, double)->DoubleBuffer::: byte buffer as double buffer b put
java.nio.ByteBufferAsDoubleBufferRB#compact()->DoubleBuffer::: byte buffer as double buffer b compact
java.nio.ByteBufferAsDoubleBufferRB#isDirect()->boolean::: byte buffer as double buffer b is direct
java.nio.ByteBufferAsDoubleBufferRB#isReadOnly()->boolean::: byte buffer as double buffer b is read only
java.nio.ByteBufferAsDoubleBufferRB#order()->ByteOrder::: byte buffer as double buffer b order
java.nio.ByteBufferAsDoubleBufferRL#base()->Object::: byte buffer as double buffer l base
java.nio.ByteBufferAsDoubleBufferRL#slice()->DoubleBuffer::: byte buffer as double buffer l slice
java.nio.ByteBufferAsDoubleBufferRL#duplicate()->DoubleBuffer::: byte buffer as double buffer l duplicate
java.nio.ByteBufferAsDoubleBufferRL#asReadOnlyBuffer()->DoubleBuffer::: byte buffer as double buffer l as read only buffer
java.nio.ByteBufferAsDoubleBufferRL#put(double)->DoubleBuffer::: byte buffer as double buffer l put
java.nio.ByteBufferAsDoubleBufferRL#put(int, double)->DoubleBuffer::: byte buffer as double buffer l put
java.nio.ByteBufferAsDoubleBufferRL#compact()->DoubleBuffer::: byte buffer as double buffer l compact
java.nio.ByteBufferAsDoubleBufferRL#isDirect()->boolean::: byte buffer as double buffer l is direct
java.nio.ByteBufferAsDoubleBufferRL#isReadOnly()->boolean::: byte buffer as double buffer l is read only
java.nio.ByteBufferAsDoubleBufferRL#order()->ByteOrder::: byte buffer as double buffer l order
java.nio.ByteBufferAsFloatBufferB#base()->Object::: byte buffer as float buffer b base
java.nio.ByteBufferAsFloatBufferB#slice()->FloatBuffer::: byte buffer as float buffer b slice
java.nio.ByteBufferAsFloatBufferB#duplicate()->FloatBuffer::: byte buffer as float buffer b duplicate
java.nio.ByteBufferAsFloatBufferB#asReadOnlyBuffer()->FloatBuffer::: byte buffer as float buffer b as read only buffer
java.nio.ByteBufferAsFloatBufferB#byteOffset(long)->long::: byte buffer as float buffer b byte offset
java.nio.ByteBufferAsFloatBufferB#get()->float::: byte buffer as float buffer b get
java.nio.ByteBufferAsFloatBufferB#get(int)->float::: byte buffer as float buffer b get
java.nio.ByteBufferAsFloatBufferB#put(float)->FloatBuffer::: byte buffer as float buffer b put
java.nio.ByteBufferAsFloatBufferB#put(int, float)->FloatBuffer::: byte buffer as float buffer b put
java.nio.ByteBufferAsFloatBufferB#compact()->FloatBuffer::: byte buffer as float buffer b compact
java.nio.ByteBufferAsFloatBufferB#isDirect()->boolean::: byte buffer as float buffer b is direct
java.nio.ByteBufferAsFloatBufferB#isReadOnly()->boolean::: byte buffer as float buffer b is read only
java.nio.ByteBufferAsFloatBufferB#order()->ByteOrder::: byte buffer as float buffer b order
java.nio.ByteBufferAsFloatBufferL#base()->Object::: byte buffer as float buffer l base
java.nio.ByteBufferAsFloatBufferL#slice()->FloatBuffer::: byte buffer as float buffer l slice
java.nio.ByteBufferAsFloatBufferL#duplicate()->FloatBuffer::: byte buffer as float buffer l duplicate
java.nio.ByteBufferAsFloatBufferL#asReadOnlyBuffer()->FloatBuffer::: byte buffer as float buffer l as read only buffer
java.nio.ByteBufferAsFloatBufferL#byteOffset(long)->long::: byte buffer as float buffer l byte offset
java.nio.ByteBufferAsFloatBufferL#get()->float::: byte buffer as float buffer l get
java.nio.ByteBufferAsFloatBufferL#get(int)->float::: byte buffer as float buffer l get
java.nio.ByteBufferAsFloatBufferL#put(float)->FloatBuffer::: byte buffer as float buffer l put
java.nio.ByteBufferAsFloatBufferL#put(int, float)->FloatBuffer::: byte buffer as float buffer l put
java.nio.ByteBufferAsFloatBufferL#compact()->FloatBuffer::: byte buffer as float buffer l compact
java.nio.ByteBufferAsFloatBufferL#isDirect()->boolean::: byte buffer as float buffer l is direct
java.nio.ByteBufferAsFloatBufferL#isReadOnly()->boolean::: byte buffer as float buffer l is read only
java.nio.ByteBufferAsFloatBufferL#order()->ByteOrder::: byte buffer as float buffer l order
java.nio.ByteBufferAsFloatBufferRB#base()->Object::: byte buffer as float buffer b base
java.nio.ByteBufferAsFloatBufferRB#slice()->FloatBuffer::: byte buffer as float buffer b slice
java.nio.ByteBufferAsFloatBufferRB#duplicate()->FloatBuffer::: byte buffer as float buffer b duplicate
java.nio.ByteBufferAsFloatBufferRB#asReadOnlyBuffer()->FloatBuffer::: byte buffer as float buffer b as read only buffer
java.nio.ByteBufferAsFloatBufferRB#put(float)->FloatBuffer::: byte buffer as float buffer b put
java.nio.ByteBufferAsFloatBufferRB#put(int, float)->FloatBuffer::: byte buffer as float buffer b put
java.nio.ByteBufferAsFloatBufferRB#compact()->FloatBuffer::: byte buffer as float buffer b compact
java.nio.ByteBufferAsFloatBufferRB#isDirect()->boolean::: byte buffer as float buffer b is direct
java.nio.ByteBufferAsFloatBufferRB#isReadOnly()->boolean::: byte buffer as float buffer b is read only
java.nio.ByteBufferAsFloatBufferRB#order()->ByteOrder::: byte buffer as float buffer b order
java.nio.ByteBufferAsFloatBufferRL#base()->Object::: byte buffer as float buffer l base
java.nio.ByteBufferAsFloatBufferRL#slice()->FloatBuffer::: byte buffer as float buffer l slice
java.nio.ByteBufferAsFloatBufferRL#duplicate()->FloatBuffer::: byte buffer as float buffer l duplicate
java.nio.ByteBufferAsFloatBufferRL#asReadOnlyBuffer()->FloatBuffer::: byte buffer as float buffer l as read only buffer
java.nio.ByteBufferAsFloatBufferRL#put(float)->FloatBuffer::: byte buffer as float buffer l put
java.nio.ByteBufferAsFloatBufferRL#put(int, float)->FloatBuffer::: byte buffer as float buffer l put
java.nio.ByteBufferAsFloatBufferRL#compact()->FloatBuffer::: byte buffer as float buffer l compact
java.nio.ByteBufferAsFloatBufferRL#isDirect()->boolean::: byte buffer as float buffer l is direct
java.nio.ByteBufferAsFloatBufferRL#isReadOnly()->boolean::: byte buffer as float buffer l is read only
java.nio.ByteBufferAsFloatBufferRL#order()->ByteOrder::: byte buffer as float buffer l order
java.nio.ByteBufferAsIntBufferB#base()->Object::: byte buffer as int buffer b base
java.nio.ByteBufferAsIntBufferB#slice()->IntBuffer::: byte buffer as int buffer b slice
java.nio.ByteBufferAsIntBufferB#duplicate()->IntBuffer::: byte buffer as int buffer b duplicate
java.nio.ByteBufferAsIntBufferB#asReadOnlyBuffer()->IntBuffer::: byte buffer as int buffer b as read only buffer
java.nio.ByteBufferAsIntBufferB#byteOffset(long)->long::: byte buffer as int buffer b byte offset
java.nio.ByteBufferAsIntBufferB#get()->int::: byte buffer as int buffer b get
java.nio.ByteBufferAsIntBufferB#get(int)->int::: byte buffer as int buffer b get
java.nio.ByteBufferAsIntBufferB#put(int)->IntBuffer::: byte buffer as int buffer b put
java.nio.ByteBufferAsIntBufferB#put(int, int)->IntBuffer::: byte buffer as int buffer b put
java.nio.ByteBufferAsIntBufferB#compact()->IntBuffer::: byte buffer as int buffer b compact
java.nio.ByteBufferAsIntBufferB#isDirect()->boolean::: byte buffer as int buffer b is direct
java.nio.ByteBufferAsIntBufferB#isReadOnly()->boolean::: byte buffer as int buffer b is read only
java.nio.ByteBufferAsIntBufferB#order()->ByteOrder::: byte buffer as int buffer b order
java.nio.ByteBufferAsIntBufferL#base()->Object::: byte buffer as int buffer l base
java.nio.ByteBufferAsIntBufferL#slice()->IntBuffer::: byte buffer as int buffer l slice
java.nio.ByteBufferAsIntBufferL#duplicate()->IntBuffer::: byte buffer as int buffer l duplicate
java.nio.ByteBufferAsIntBufferL#asReadOnlyBuffer()->IntBuffer::: byte buffer as int buffer l as read only buffer
java.nio.ByteBufferAsIntBufferL#byteOffset(long)->long::: byte buffer as int buffer l byte offset
java.nio.ByteBufferAsIntBufferL#get()->int::: byte buffer as int buffer l get
java.nio.ByteBufferAsIntBufferL#get(int)->int::: byte buffer as int buffer l get
java.nio.ByteBufferAsIntBufferL#put(int)->IntBuffer::: byte buffer as int buffer l put
java.nio.ByteBufferAsIntBufferL#put(int, int)->IntBuffer::: byte buffer as int buffer l put
java.nio.ByteBufferAsIntBufferL#compact()->IntBuffer::: byte buffer as int buffer l compact
java.nio.ByteBufferAsIntBufferL#isDirect()->boolean::: byte buffer as int buffer l is direct
java.nio.ByteBufferAsIntBufferL#isReadOnly()->boolean::: byte buffer as int buffer l is read only
java.nio.ByteBufferAsIntBufferL#order()->ByteOrder::: byte buffer as int buffer l order
java.nio.ByteBufferAsIntBufferRB#base()->Object::: byte buffer as int buffer b base
java.nio.ByteBufferAsIntBufferRB#slice()->IntBuffer::: byte buffer as int buffer b slice
java.nio.ByteBufferAsIntBufferRB#duplicate()->IntBuffer::: byte buffer as int buffer b duplicate
java.nio.ByteBufferAsIntBufferRB#asReadOnlyBuffer()->IntBuffer::: byte buffer as int buffer b as read only buffer
java.nio.ByteBufferAsIntBufferRB#put(int)->IntBuffer::: byte buffer as int buffer b put
java.nio.ByteBufferAsIntBufferRB#put(int, int)->IntBuffer::: byte buffer as int buffer b put
java.nio.ByteBufferAsIntBufferRB#compact()->IntBuffer::: byte buffer as int buffer b compact
java.nio.ByteBufferAsIntBufferRB#isDirect()->boolean::: byte buffer as int buffer b is direct
java.nio.ByteBufferAsIntBufferRB#isReadOnly()->boolean::: byte buffer as int buffer b is read only
java.nio.ByteBufferAsIntBufferRB#order()->ByteOrder::: byte buffer as int buffer b order
java.nio.ByteBufferAsIntBufferRL#base()->Object::: byte buffer as int buffer l base
java.nio.ByteBufferAsIntBufferRL#slice()->IntBuffer::: byte buffer as int buffer l slice
java.nio.ByteBufferAsIntBufferRL#duplicate()->IntBuffer::: byte buffer as int buffer l duplicate
java.nio.ByteBufferAsIntBufferRL#asReadOnlyBuffer()->IntBuffer::: byte buffer as int buffer l as read only buffer
java.nio.ByteBufferAsIntBufferRL#put(int)->IntBuffer::: byte buffer as int buffer l put
java.nio.ByteBufferAsIntBufferRL#put(int, int)->IntBuffer::: byte buffer as int buffer l put
java.nio.ByteBufferAsIntBufferRL#compact()->IntBuffer::: byte buffer as int buffer l compact
java.nio.ByteBufferAsIntBufferRL#isDirect()->boolean::: byte buffer as int buffer l is direct
java.nio.ByteBufferAsIntBufferRL#isReadOnly()->boolean::: byte buffer as int buffer l is read only
java.nio.ByteBufferAsIntBufferRL#order()->ByteOrder::: byte buffer as int buffer l order
java.nio.ByteBufferAsLongBufferB#base()->Object::: byte buffer as long buffer b base
java.nio.ByteBufferAsLongBufferB#slice()->LongBuffer::: byte buffer as long buffer b slice
java.nio.ByteBufferAsLongBufferB#duplicate()->LongBuffer::: byte buffer as long buffer b duplicate
java.nio.ByteBufferAsLongBufferB#asReadOnlyBuffer()->LongBuffer::: byte buffer as long buffer b as read only buffer
java.nio.ByteBufferAsLongBufferB#byteOffset(long)->long::: byte buffer as long buffer b byte offset
java.nio.ByteBufferAsLongBufferB#get()->long::: byte buffer as long buffer b get
java.nio.ByteBufferAsLongBufferB#get(int)->long::: byte buffer as long buffer b get
java.nio.ByteBufferAsLongBufferB#put(long)->LongBuffer::: byte buffer as long buffer b put
java.nio.ByteBufferAsLongBufferB#put(int, long)->LongBuffer::: byte buffer as long buffer b put
java.nio.ByteBufferAsLongBufferB#compact()->LongBuffer::: byte buffer as long buffer b compact
java.nio.ByteBufferAsLongBufferB#isDirect()->boolean::: byte buffer as long buffer b is direct
java.nio.ByteBufferAsLongBufferB#isReadOnly()->boolean::: byte buffer as long buffer b is read only
java.nio.ByteBufferAsLongBufferB#order()->ByteOrder::: byte buffer as long buffer b order
java.nio.ByteBufferAsLongBufferL#base()->Object::: byte buffer as long buffer l base
java.nio.ByteBufferAsLongBufferL#slice()->LongBuffer::: byte buffer as long buffer l slice
java.nio.ByteBufferAsLongBufferL#duplicate()->LongBuffer::: byte buffer as long buffer l duplicate
java.nio.ByteBufferAsLongBufferL#asReadOnlyBuffer()->LongBuffer::: byte buffer as long buffer l as read only buffer
java.nio.ByteBufferAsLongBufferL#byteOffset(long)->long::: byte buffer as long buffer l byte offset
java.nio.ByteBufferAsLongBufferL#get()->long::: byte buffer as long buffer l get
java.nio.ByteBufferAsLongBufferL#get(int)->long::: byte buffer as long buffer l get
java.nio.ByteBufferAsLongBufferL#put(long)->LongBuffer::: byte buffer as long buffer l put
java.nio.ByteBufferAsLongBufferL#put(int, long)->LongBuffer::: byte buffer as long buffer l put
java.nio.ByteBufferAsLongBufferL#compact()->LongBuffer::: byte buffer as long buffer l compact
java.nio.ByteBufferAsLongBufferL#isDirect()->boolean::: byte buffer as long buffer l is direct
java.nio.ByteBufferAsLongBufferL#isReadOnly()->boolean::: byte buffer as long buffer l is read only
java.nio.ByteBufferAsLongBufferL#order()->ByteOrder::: byte buffer as long buffer l order
java.nio.ByteBufferAsLongBufferRB#base()->Object::: byte buffer as long buffer b base
java.nio.ByteBufferAsLongBufferRB#slice()->LongBuffer::: byte buffer as long buffer b slice
java.nio.ByteBufferAsLongBufferRB#duplicate()->LongBuffer::: byte buffer as long buffer b duplicate
java.nio.ByteBufferAsLongBufferRB#asReadOnlyBuffer()->LongBuffer::: byte buffer as long buffer b as read only buffer
java.nio.ByteBufferAsLongBufferRB#put(long)->LongBuffer::: byte buffer as long buffer b put
java.nio.ByteBufferAsLongBufferRB#put(int, long)->LongBuffer::: byte buffer as long buffer b put
java.nio.ByteBufferAsLongBufferRB#compact()->LongBuffer::: byte buffer as long buffer b compact
java.nio.ByteBufferAsLongBufferRB#isDirect()->boolean::: byte buffer as long buffer b is direct
java.nio.ByteBufferAsLongBufferRB#isReadOnly()->boolean::: byte buffer as long buffer b is read only
java.nio.ByteBufferAsLongBufferRB#order()->ByteOrder::: byte buffer as long buffer b order
java.nio.ByteBufferAsLongBufferRL#base()->Object::: byte buffer as long buffer l base
java.nio.ByteBufferAsLongBufferRL#slice()->LongBuffer::: byte buffer as long buffer l slice
java.nio.ByteBufferAsLongBufferRL#duplicate()->LongBuffer::: byte buffer as long buffer l duplicate
java.nio.ByteBufferAsLongBufferRL#asReadOnlyBuffer()->LongBuffer::: byte buffer as long buffer l as read only buffer
java.nio.ByteBufferAsLongBufferRL#put(long)->LongBuffer::: byte buffer as long buffer l put
java.nio.ByteBufferAsLongBufferRL#put(int, long)->LongBuffer::: byte buffer as long buffer l put
java.nio.ByteBufferAsLongBufferRL#compact()->LongBuffer::: byte buffer as long buffer l compact
java.nio.ByteBufferAsLongBufferRL#isDirect()->boolean::: byte buffer as long buffer l is direct
java.nio.ByteBufferAsLongBufferRL#isReadOnly()->boolean::: byte buffer as long buffer l is read only
java.nio.ByteBufferAsLongBufferRL#order()->ByteOrder::: byte buffer as long buffer l order
java.nio.ByteBufferAsShortBufferB#base()->Object::: byte buffer as short buffer b base
java.nio.ByteBufferAsShortBufferB#slice()->ShortBuffer::: byte buffer as short buffer b slice
java.nio.ByteBufferAsShortBufferB#duplicate()->ShortBuffer::: byte buffer as short buffer b duplicate
java.nio.ByteBufferAsShortBufferB#asReadOnlyBuffer()->ShortBuffer::: byte buffer as short buffer b as read only buffer
java.nio.ByteBufferAsShortBufferB#byteOffset(long)->long::: byte buffer as short buffer b byte offset
java.nio.ByteBufferAsShortBufferB#get()->short::: byte buffer as short buffer b get
java.nio.ByteBufferAsShortBufferB#get(int)->short::: byte buffer as short buffer b get
java.nio.ByteBufferAsShortBufferB#put(short)->ShortBuffer::: byte buffer as short buffer b put
java.nio.ByteBufferAsShortBufferB#put(int, short)->ShortBuffer::: byte buffer as short buffer b put
java.nio.ByteBufferAsShortBufferB#compact()->ShortBuffer::: byte buffer as short buffer b compact
java.nio.ByteBufferAsShortBufferB#isDirect()->boolean::: byte buffer as short buffer b is direct
java.nio.ByteBufferAsShortBufferB#isReadOnly()->boolean::: byte buffer as short buffer b is read only
java.nio.ByteBufferAsShortBufferB#order()->ByteOrder::: byte buffer as short buffer b order
java.nio.ByteBufferAsShortBufferL#base()->Object::: byte buffer as short buffer l base
java.nio.ByteBufferAsShortBufferL#slice()->ShortBuffer::: byte buffer as short buffer l slice
java.nio.ByteBufferAsShortBufferL#duplicate()->ShortBuffer::: byte buffer as short buffer l duplicate
java.nio.ByteBufferAsShortBufferL#asReadOnlyBuffer()->ShortBuffer::: byte buffer as short buffer l as read only buffer
java.nio.ByteBufferAsShortBufferL#byteOffset(long)->long::: byte buffer as short buffer l byte offset
java.nio.ByteBufferAsShortBufferL#get()->short::: byte buffer as short buffer l get
java.nio.ByteBufferAsShortBufferL#get(int)->short::: byte buffer as short buffer l get
java.nio.ByteBufferAsShortBufferL#put(short)->ShortBuffer::: byte buffer as short buffer l put
java.nio.ByteBufferAsShortBufferL#put(int, short)->ShortBuffer::: byte buffer as short buffer l put
java.nio.ByteBufferAsShortBufferL#compact()->ShortBuffer::: byte buffer as short buffer l compact
java.nio.ByteBufferAsShortBufferL#isDirect()->boolean::: byte buffer as short buffer l is direct
java.nio.ByteBufferAsShortBufferL#isReadOnly()->boolean::: byte buffer as short buffer l is read only
java.nio.ByteBufferAsShortBufferL#order()->ByteOrder::: byte buffer as short buffer l order
java.nio.ByteBufferAsShortBufferRB#base()->Object::: byte buffer as short buffer b base
java.nio.ByteBufferAsShortBufferRB#slice()->ShortBuffer::: byte buffer as short buffer b slice
java.nio.ByteBufferAsShortBufferRB#duplicate()->ShortBuffer::: byte buffer as short buffer b duplicate
java.nio.ByteBufferAsShortBufferRB#asReadOnlyBuffer()->ShortBuffer::: byte buffer as short buffer b as read only buffer
java.nio.ByteBufferAsShortBufferRB#put(short)->ShortBuffer::: byte buffer as short buffer b put
java.nio.ByteBufferAsShortBufferRB#put(int, short)->ShortBuffer::: byte buffer as short buffer b put
java.nio.ByteBufferAsShortBufferRB#compact()->ShortBuffer::: byte buffer as short buffer b compact
java.nio.ByteBufferAsShortBufferRB#isDirect()->boolean::: byte buffer as short buffer b is direct
java.nio.ByteBufferAsShortBufferRB#isReadOnly()->boolean::: byte buffer as short buffer b is read only
java.nio.ByteBufferAsShortBufferRB#order()->ByteOrder::: byte buffer as short buffer b order
java.nio.ByteBufferAsShortBufferRL#base()->Object::: byte buffer as short buffer l base
java.nio.ByteBufferAsShortBufferRL#slice()->ShortBuffer::: byte buffer as short buffer l slice
java.nio.ByteBufferAsShortBufferRL#duplicate()->ShortBuffer::: byte buffer as short buffer l duplicate
java.nio.ByteBufferAsShortBufferRL#asReadOnlyBuffer()->ShortBuffer::: byte buffer as short buffer l as read only buffer
java.nio.ByteBufferAsShortBufferRL#put(short)->ShortBuffer::: byte buffer as short buffer l put
java.nio.ByteBufferAsShortBufferRL#put(int, short)->ShortBuffer::: byte buffer as short buffer l put
java.nio.ByteBufferAsShortBufferRL#compact()->ShortBuffer::: byte buffer as short buffer l compact
java.nio.ByteBufferAsShortBufferRL#isDirect()->boolean::: byte buffer as short buffer l is direct
java.nio.ByteBufferAsShortBufferRL#isReadOnly()->boolean::: byte buffer as short buffer l is read only
java.nio.ByteBufferAsShortBufferRL#order()->ByteOrder::: byte buffer as short buffer l order
java.nio.ByteOrder#nativeOrder()->ByteOrder:::Retrieves the native byte order of the underlying platform
java.nio.ByteOrder#toString()->String:::Constructs a string describing this object
java.nio.CharBuffer#base()->Object::: char buffer base
java.nio.CharBuffer#allocate(int)->CharBuffer:::Allocates a new char buffer
java.nio.CharBuffer#wrap(char[], int, int)->CharBuffer:::Wraps a char array into a buffer
java.nio.CharBuffer#wrap(char[])->CharBuffer:::Wraps a char array into a buffer
java.nio.CharBuffer#read(CharBuffer)->int:::Attempts to read characters into the specified character buffer
java.nio.CharBuffer#wrap(CharSequence, int, int)->CharBuffer:::Wraps a character sequence into a buffer
java.nio.CharBuffer#wrap(CharSequence)->CharBuffer:::Wraps a character sequence into a buffer
java.nio.CharBuffer#slice()->CharBuffer:::Creates a new char buffer whose content is a shared subsequence of this buffer's content
java.nio.CharBuffer#duplicate()->CharBuffer:::Creates a new char buffer that shares this buffer's content
java.nio.CharBuffer#asReadOnlyBuffer()->CharBuffer:::Creates a new, read-only char buffer that shares this buffer's content
java.nio.CharBuffer#get()->char:::Relative get method
java.nio.CharBuffer#put(char)->CharBuffer:::Relative put method&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#get(int)->char:::Absolute get method
java.nio.CharBuffer#getUnchecked(int)->char::: char buffer get unchecked
java.nio.CharBuffer#put(int, char)->CharBuffer:::Absolute put method&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#get(char[], int, int)->CharBuffer:::Relative bulk get method
java.nio.CharBuffer#get(char[])->CharBuffer:::Relative bulk get method
java.nio.CharBuffer#put(CharBuffer)->CharBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#put(char[], int, int)->CharBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#put(char[])->CharBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#put(String, int, int)->CharBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#put(String)->CharBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible char array
java.nio.CharBuffer#array()->char[]:::Returns the char array that backs this buffer&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#position(int)->CharBuffer::: char buffer position
java.nio.CharBuffer#limit(int)->CharBuffer::: char buffer limit
java.nio.CharBuffer#mark()->CharBuffer::: char buffer mark
java.nio.CharBuffer#reset()->CharBuffer::: char buffer reset
java.nio.CharBuffer#clear()->CharBuffer::: char buffer clear
java.nio.CharBuffer#flip()->CharBuffer::: char buffer flip
java.nio.CharBuffer#rewind()->CharBuffer::: char buffer rewind
java.nio.CharBuffer#compact()->CharBuffer:::Compacts this buffer&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#isDirect()->boolean:::Tells whether or not this char buffer is direct.
java.nio.CharBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.CharBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.CharBuffer#compareTo(CharBuffer)->int:::Compares this buffer to another
java.nio.CharBuffer#mismatch(CharBuffer)->int:::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
java.nio.CharBuffer#toString()->String:::Returns a string containing the characters in this buffer
java.nio.CharBuffer#toString(int, int)->String::: char buffer to string
java.nio.CharBuffer#length()->int:::Returns the length of this character buffer
java.nio.CharBuffer#charAt(int)->char:::Reads the character at the given index relative to the current position.
java.nio.CharBuffer#subSequence(int, int)->CharBuffer:::Creates a new character buffer that represents the specified subsequence of this buffer, relative to the current position
java.nio.CharBuffer#append(CharSequence)->CharBuffer:::Appends the specified character sequence  to this buffer&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#append(CharSequence, int, int)->CharBuffer:::Appends a subsequence of the  specified character sequence  to this buffer&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#append(char)->CharBuffer:::Appends the specified char  to this buffer&nbsp;&nbsp;(optional operation)
java.nio.CharBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.CharBuffer#charRegionOrder()->ByteOrder::: char buffer char region order
java.nio.CharBuffer#chars()->IntStream::: char buffer chars
java.nio.CharBufferSpliterator#trySplit()->OfInt::: char buffer spliterator try split
java.nio.CharBufferSpliterator#forEachRemaining(IntConsumer)->void::: char buffer spliterator for each remaining
java.nio.CharBufferSpliterator#tryAdvance(IntConsumer)->boolean::: char buffer spliterator try advance
java.nio.CharBufferSpliterator#estimateSize()->long::: char buffer spliterator estimate size
java.nio.CharBufferSpliterator#characteristics()->int::: char buffer spliterator characteristics
java.nio.DirectByteBuffer#attachment()->Object::: direct byte buffer attachment
java.nio.DirectByteBuffer#cleaner()->Cleaner::: direct byte buffer cleaner
java.nio.DirectByteBuffer#base()->Object::: direct byte buffer base
java.nio.DirectByteBuffer#slice()->ByteBuffer::: direct byte buffer slice
java.nio.DirectByteBuffer#slice(int, int)->ByteBuffer::: direct byte buffer slice
java.nio.DirectByteBuffer#duplicate()->ByteBuffer::: direct byte buffer duplicate
java.nio.DirectByteBuffer#asReadOnlyBuffer()->ByteBuffer::: direct byte buffer as read only buffer
java.nio.DirectByteBuffer#address()->long::: direct byte buffer address
java.nio.DirectByteBuffer#get()->byte::: direct byte buffer get
java.nio.DirectByteBuffer#get(int)->byte::: direct byte buffer get
java.nio.DirectByteBuffer#get(byte[], int, int)->ByteBuffer::: direct byte buffer get
java.nio.DirectByteBuffer#put(byte)->ByteBuffer::: direct byte buffer put
java.nio.DirectByteBuffer#put(int, byte)->ByteBuffer::: direct byte buffer put
java.nio.DirectByteBuffer#put(ByteBuffer)->ByteBuffer::: direct byte buffer put
java.nio.DirectByteBuffer#put(byte[], int, int)->ByteBuffer::: direct byte buffer put
java.nio.DirectByteBuffer#compact()->ByteBuffer::: direct byte buffer compact
java.nio.DirectByteBuffer#isDirect()->boolean::: direct byte buffer is direct
java.nio.DirectByteBuffer#isReadOnly()->boolean::: direct byte buffer is read only
java.nio.DirectByteBuffer#getChar()->char::: direct byte buffer get char
java.nio.DirectByteBuffer#getChar(int)->char::: direct byte buffer get char
java.nio.DirectByteBuffer#putChar(char)->ByteBuffer::: direct byte buffer put char
java.nio.DirectByteBuffer#putChar(int, char)->ByteBuffer::: direct byte buffer put char
java.nio.DirectByteBuffer#asCharBuffer()->CharBuffer::: direct byte buffer as char buffer
java.nio.DirectByteBuffer#getShort()->short::: direct byte buffer get short
java.nio.DirectByteBuffer#getShort(int)->short::: direct byte buffer get short
java.nio.DirectByteBuffer#putShort(short)->ByteBuffer::: direct byte buffer put short
java.nio.DirectByteBuffer#putShort(int, short)->ByteBuffer::: direct byte buffer put short
java.nio.DirectByteBuffer#asShortBuffer()->ShortBuffer::: direct byte buffer as short buffer
java.nio.DirectByteBuffer#getInt()->int::: direct byte buffer get int
java.nio.DirectByteBuffer#getInt(int)->int::: direct byte buffer get int
java.nio.DirectByteBuffer#putInt(int)->ByteBuffer::: direct byte buffer put int
java.nio.DirectByteBuffer#putInt(int, int)->ByteBuffer::: direct byte buffer put int
java.nio.DirectByteBuffer#asIntBuffer()->IntBuffer::: direct byte buffer as int buffer
java.nio.DirectByteBuffer#getLong()->long::: direct byte buffer get long
java.nio.DirectByteBuffer#getLong(int)->long::: direct byte buffer get long
java.nio.DirectByteBuffer#putLong(long)->ByteBuffer::: direct byte buffer put long
java.nio.DirectByteBuffer#putLong(int, long)->ByteBuffer::: direct byte buffer put long
java.nio.DirectByteBuffer#asLongBuffer()->LongBuffer::: direct byte buffer as long buffer
java.nio.DirectByteBuffer#getFloat()->float::: direct byte buffer get float
java.nio.DirectByteBuffer#getFloat(int)->float::: direct byte buffer get float
java.nio.DirectByteBuffer#putFloat(float)->ByteBuffer::: direct byte buffer put float
java.nio.DirectByteBuffer#putFloat(int, float)->ByteBuffer::: direct byte buffer put float
java.nio.DirectByteBuffer#asFloatBuffer()->FloatBuffer::: direct byte buffer as float buffer
java.nio.DirectByteBuffer#getDouble()->double::: direct byte buffer get double
java.nio.DirectByteBuffer#getDouble(int)->double::: direct byte buffer get double
java.nio.DirectByteBuffer#putDouble(double)->ByteBuffer::: direct byte buffer put double
java.nio.DirectByteBuffer#putDouble(int, double)->ByteBuffer::: direct byte buffer put double
java.nio.DirectByteBuffer#asDoubleBuffer()->DoubleBuffer::: direct byte buffer as double buffer
java.nio.DirectByteBufferR#base()->Object::: direct byte buffer r base
java.nio.DirectByteBufferR#slice()->ByteBuffer::: direct byte buffer r slice
java.nio.DirectByteBufferR#slice(int, int)->ByteBuffer::: direct byte buffer r slice
java.nio.DirectByteBufferR#duplicate()->ByteBuffer::: direct byte buffer r duplicate
java.nio.DirectByteBufferR#asReadOnlyBuffer()->ByteBuffer::: direct byte buffer r as read only buffer
java.nio.DirectByteBufferR#put(byte)->ByteBuffer::: direct byte buffer r put
java.nio.DirectByteBufferR#put(int, byte)->ByteBuffer::: direct byte buffer r put
java.nio.DirectByteBufferR#put(ByteBuffer)->ByteBuffer::: direct byte buffer r put
java.nio.DirectByteBufferR#put(byte[], int, int)->ByteBuffer::: direct byte buffer r put
java.nio.DirectByteBufferR#compact()->ByteBuffer::: direct byte buffer r compact
java.nio.DirectByteBufferR#isDirect()->boolean::: direct byte buffer r is direct
java.nio.DirectByteBufferR#isReadOnly()->boolean::: direct byte buffer r is read only
java.nio.DirectByteBufferR#putChar(char)->ByteBuffer::: direct byte buffer r put char
java.nio.DirectByteBufferR#putChar(int, char)->ByteBuffer::: direct byte buffer r put char
java.nio.DirectByteBufferR#asCharBuffer()->CharBuffer::: direct byte buffer r as char buffer
java.nio.DirectByteBufferR#putShort(short)->ByteBuffer::: direct byte buffer r put short
java.nio.DirectByteBufferR#putShort(int, short)->ByteBuffer::: direct byte buffer r put short
java.nio.DirectByteBufferR#asShortBuffer()->ShortBuffer::: direct byte buffer r as short buffer
java.nio.DirectByteBufferR#putInt(int)->ByteBuffer::: direct byte buffer r put int
java.nio.DirectByteBufferR#putInt(int, int)->ByteBuffer::: direct byte buffer r put int
java.nio.DirectByteBufferR#asIntBuffer()->IntBuffer::: direct byte buffer r as int buffer
java.nio.DirectByteBufferR#putLong(long)->ByteBuffer::: direct byte buffer r put long
java.nio.DirectByteBufferR#putLong(int, long)->ByteBuffer::: direct byte buffer r put long
java.nio.DirectByteBufferR#asLongBuffer()->LongBuffer::: direct byte buffer r as long buffer
java.nio.DirectByteBufferR#putFloat(float)->ByteBuffer::: direct byte buffer r put float
java.nio.DirectByteBufferR#putFloat(int, float)->ByteBuffer::: direct byte buffer r put float
java.nio.DirectByteBufferR#asFloatBuffer()->FloatBuffer::: direct byte buffer r as float buffer
java.nio.DirectByteBufferR#putDouble(double)->ByteBuffer::: direct byte buffer r put double
java.nio.DirectByteBufferR#putDouble(int, double)->ByteBuffer::: direct byte buffer r put double
java.nio.DirectByteBufferR#asDoubleBuffer()->DoubleBuffer::: direct byte buffer r as double buffer
java.nio.DirectCharBufferRS#base()->Object::: direct char buffer s base
java.nio.DirectCharBufferRS#slice()->CharBuffer::: direct char buffer s slice
java.nio.DirectCharBufferRS#duplicate()->CharBuffer::: direct char buffer s duplicate
java.nio.DirectCharBufferRS#asReadOnlyBuffer()->CharBuffer::: direct char buffer s as read only buffer
java.nio.DirectCharBufferRS#put(char)->CharBuffer::: direct char buffer s put
java.nio.DirectCharBufferRS#put(int, char)->CharBuffer::: direct char buffer s put
java.nio.DirectCharBufferRS#put(CharBuffer)->CharBuffer::: direct char buffer s put
java.nio.DirectCharBufferRS#put(char[], int, int)->CharBuffer::: direct char buffer s put
java.nio.DirectCharBufferRS#compact()->CharBuffer::: direct char buffer s compact
java.nio.DirectCharBufferRS#isDirect()->boolean::: direct char buffer s is direct
java.nio.DirectCharBufferRS#isReadOnly()->boolean::: direct char buffer s is read only
java.nio.DirectCharBufferRS#toString(int, int)->String::: direct char buffer s to string
java.nio.DirectCharBufferRS#subSequence(int, int)->CharBuffer::: direct char buffer s sub sequence
java.nio.DirectCharBufferRS#order()->ByteOrder::: direct char buffer s order
java.nio.DirectCharBufferRS#charRegionOrder()->ByteOrder::: direct char buffer s char region order
java.nio.DirectCharBufferRU#base()->Object::: direct char buffer u base
java.nio.DirectCharBufferRU#slice()->CharBuffer::: direct char buffer u slice
java.nio.DirectCharBufferRU#duplicate()->CharBuffer::: direct char buffer u duplicate
java.nio.DirectCharBufferRU#asReadOnlyBuffer()->CharBuffer::: direct char buffer u as read only buffer
java.nio.DirectCharBufferRU#put(char)->CharBuffer::: direct char buffer u put
java.nio.DirectCharBufferRU#put(int, char)->CharBuffer::: direct char buffer u put
java.nio.DirectCharBufferRU#put(CharBuffer)->CharBuffer::: direct char buffer u put
java.nio.DirectCharBufferRU#put(char[], int, int)->CharBuffer::: direct char buffer u put
java.nio.DirectCharBufferRU#compact()->CharBuffer::: direct char buffer u compact
java.nio.DirectCharBufferRU#isDirect()->boolean::: direct char buffer u is direct
java.nio.DirectCharBufferRU#isReadOnly()->boolean::: direct char buffer u is read only
java.nio.DirectCharBufferRU#toString(int, int)->String::: direct char buffer u to string
java.nio.DirectCharBufferRU#subSequence(int, int)->CharBuffer::: direct char buffer u sub sequence
java.nio.DirectCharBufferRU#order()->ByteOrder::: direct char buffer u order
java.nio.DirectCharBufferRU#charRegionOrder()->ByteOrder::: direct char buffer u char region order
java.nio.DirectCharBufferS#attachment()->Object::: direct char buffer s attachment
java.nio.DirectCharBufferS#cleaner()->Cleaner::: direct char buffer s cleaner
java.nio.DirectCharBufferS#base()->Object::: direct char buffer s base
java.nio.DirectCharBufferS#slice()->CharBuffer::: direct char buffer s slice
java.nio.DirectCharBufferS#duplicate()->CharBuffer::: direct char buffer s duplicate
java.nio.DirectCharBufferS#asReadOnlyBuffer()->CharBuffer::: direct char buffer s as read only buffer
java.nio.DirectCharBufferS#address()->long::: direct char buffer s address
java.nio.DirectCharBufferS#get()->char::: direct char buffer s get
java.nio.DirectCharBufferS#get(int)->char::: direct char buffer s get
java.nio.DirectCharBufferS#getUnchecked(int)->char::: direct char buffer s get unchecked
java.nio.DirectCharBufferS#get(char[], int, int)->CharBuffer::: direct char buffer s get
java.nio.DirectCharBufferS#put(char)->CharBuffer::: direct char buffer s put
java.nio.DirectCharBufferS#put(int, char)->CharBuffer::: direct char buffer s put
java.nio.DirectCharBufferS#put(CharBuffer)->CharBuffer::: direct char buffer s put
java.nio.DirectCharBufferS#put(char[], int, int)->CharBuffer::: direct char buffer s put
java.nio.DirectCharBufferS#compact()->CharBuffer::: direct char buffer s compact
java.nio.DirectCharBufferS#isDirect()->boolean::: direct char buffer s is direct
java.nio.DirectCharBufferS#isReadOnly()->boolean::: direct char buffer s is read only
java.nio.DirectCharBufferS#toString(int, int)->String::: direct char buffer s to string
java.nio.DirectCharBufferS#subSequence(int, int)->CharBuffer::: direct char buffer s sub sequence
java.nio.DirectCharBufferS#order()->ByteOrder::: direct char buffer s order
java.nio.DirectCharBufferS#charRegionOrder()->ByteOrder::: direct char buffer s char region order
java.nio.DirectCharBufferU#attachment()->Object::: direct char buffer u attachment
java.nio.DirectCharBufferU#cleaner()->Cleaner::: direct char buffer u cleaner
java.nio.DirectCharBufferU#base()->Object::: direct char buffer u base
java.nio.DirectCharBufferU#slice()->CharBuffer::: direct char buffer u slice
java.nio.DirectCharBufferU#duplicate()->CharBuffer::: direct char buffer u duplicate
java.nio.DirectCharBufferU#asReadOnlyBuffer()->CharBuffer::: direct char buffer u as read only buffer
java.nio.DirectCharBufferU#address()->long::: direct char buffer u address
java.nio.DirectCharBufferU#get()->char::: direct char buffer u get
java.nio.DirectCharBufferU#get(int)->char::: direct char buffer u get
java.nio.DirectCharBufferU#getUnchecked(int)->char::: direct char buffer u get unchecked
java.nio.DirectCharBufferU#get(char[], int, int)->CharBuffer::: direct char buffer u get
java.nio.DirectCharBufferU#put(char)->CharBuffer::: direct char buffer u put
java.nio.DirectCharBufferU#put(int, char)->CharBuffer::: direct char buffer u put
java.nio.DirectCharBufferU#put(CharBuffer)->CharBuffer::: direct char buffer u put
java.nio.DirectCharBufferU#put(char[], int, int)->CharBuffer::: direct char buffer u put
java.nio.DirectCharBufferU#compact()->CharBuffer::: direct char buffer u compact
java.nio.DirectCharBufferU#isDirect()->boolean::: direct char buffer u is direct
java.nio.DirectCharBufferU#isReadOnly()->boolean::: direct char buffer u is read only
java.nio.DirectCharBufferU#toString(int, int)->String::: direct char buffer u to string
java.nio.DirectCharBufferU#subSequence(int, int)->CharBuffer::: direct char buffer u sub sequence
java.nio.DirectCharBufferU#order()->ByteOrder::: direct char buffer u order
java.nio.DirectCharBufferU#charRegionOrder()->ByteOrder::: direct char buffer u char region order
java.nio.DirectDoubleBufferRS#base()->Object::: direct double buffer s base
java.nio.DirectDoubleBufferRS#slice()->DoubleBuffer::: direct double buffer s slice
java.nio.DirectDoubleBufferRS#duplicate()->DoubleBuffer::: direct double buffer s duplicate
java.nio.DirectDoubleBufferRS#asReadOnlyBuffer()->DoubleBuffer::: direct double buffer s as read only buffer
java.nio.DirectDoubleBufferRS#put(double)->DoubleBuffer::: direct double buffer s put
java.nio.DirectDoubleBufferRS#put(int, double)->DoubleBuffer::: direct double buffer s put
java.nio.DirectDoubleBufferRS#put(DoubleBuffer)->DoubleBuffer::: direct double buffer s put
java.nio.DirectDoubleBufferRS#put(double[], int, int)->DoubleBuffer::: direct double buffer s put
java.nio.DirectDoubleBufferRS#compact()->DoubleBuffer::: direct double buffer s compact
java.nio.DirectDoubleBufferRS#isDirect()->boolean::: direct double buffer s is direct
java.nio.DirectDoubleBufferRS#isReadOnly()->boolean::: direct double buffer s is read only
java.nio.DirectDoubleBufferRS#order()->ByteOrder::: direct double buffer s order
java.nio.DirectDoubleBufferRU#base()->Object::: direct double buffer u base
java.nio.DirectDoubleBufferRU#slice()->DoubleBuffer::: direct double buffer u slice
java.nio.DirectDoubleBufferRU#duplicate()->DoubleBuffer::: direct double buffer u duplicate
java.nio.DirectDoubleBufferRU#asReadOnlyBuffer()->DoubleBuffer::: direct double buffer u as read only buffer
java.nio.DirectDoubleBufferRU#put(double)->DoubleBuffer::: direct double buffer u put
java.nio.DirectDoubleBufferRU#put(int, double)->DoubleBuffer::: direct double buffer u put
java.nio.DirectDoubleBufferRU#put(DoubleBuffer)->DoubleBuffer::: direct double buffer u put
java.nio.DirectDoubleBufferRU#put(double[], int, int)->DoubleBuffer::: direct double buffer u put
java.nio.DirectDoubleBufferRU#compact()->DoubleBuffer::: direct double buffer u compact
java.nio.DirectDoubleBufferRU#isDirect()->boolean::: direct double buffer u is direct
java.nio.DirectDoubleBufferRU#isReadOnly()->boolean::: direct double buffer u is read only
java.nio.DirectDoubleBufferRU#order()->ByteOrder::: direct double buffer u order
java.nio.DirectDoubleBufferS#attachment()->Object::: direct double buffer s attachment
java.nio.DirectDoubleBufferS#cleaner()->Cleaner::: direct double buffer s cleaner
java.nio.DirectDoubleBufferS#base()->Object::: direct double buffer s base
java.nio.DirectDoubleBufferS#slice()->DoubleBuffer::: direct double buffer s slice
java.nio.DirectDoubleBufferS#duplicate()->DoubleBuffer::: direct double buffer s duplicate
java.nio.DirectDoubleBufferS#asReadOnlyBuffer()->DoubleBuffer::: direct double buffer s as read only buffer
java.nio.DirectDoubleBufferS#address()->long::: direct double buffer s address
java.nio.DirectDoubleBufferS#get()->double::: direct double buffer s get
java.nio.DirectDoubleBufferS#get(int)->double::: direct double buffer s get
java.nio.DirectDoubleBufferS#get(double[], int, int)->DoubleBuffer::: direct double buffer s get
java.nio.DirectDoubleBufferS#put(double)->DoubleBuffer::: direct double buffer s put
java.nio.DirectDoubleBufferS#put(int, double)->DoubleBuffer::: direct double buffer s put
java.nio.DirectDoubleBufferS#put(DoubleBuffer)->DoubleBuffer::: direct double buffer s put
java.nio.DirectDoubleBufferS#put(double[], int, int)->DoubleBuffer::: direct double buffer s put
java.nio.DirectDoubleBufferS#compact()->DoubleBuffer::: direct double buffer s compact
java.nio.DirectDoubleBufferS#isDirect()->boolean::: direct double buffer s is direct
java.nio.DirectDoubleBufferS#isReadOnly()->boolean::: direct double buffer s is read only
java.nio.DirectDoubleBufferS#order()->ByteOrder::: direct double buffer s order
java.nio.DirectDoubleBufferU#attachment()->Object::: direct double buffer u attachment
java.nio.DirectDoubleBufferU#cleaner()->Cleaner::: direct double buffer u cleaner
java.nio.DirectDoubleBufferU#base()->Object::: direct double buffer u base
java.nio.DirectDoubleBufferU#slice()->DoubleBuffer::: direct double buffer u slice
java.nio.DirectDoubleBufferU#duplicate()->DoubleBuffer::: direct double buffer u duplicate
java.nio.DirectDoubleBufferU#asReadOnlyBuffer()->DoubleBuffer::: direct double buffer u as read only buffer
java.nio.DirectDoubleBufferU#address()->long::: direct double buffer u address
java.nio.DirectDoubleBufferU#get()->double::: direct double buffer u get
java.nio.DirectDoubleBufferU#get(int)->double::: direct double buffer u get
java.nio.DirectDoubleBufferU#get(double[], int, int)->DoubleBuffer::: direct double buffer u get
java.nio.DirectDoubleBufferU#put(double)->DoubleBuffer::: direct double buffer u put
java.nio.DirectDoubleBufferU#put(int, double)->DoubleBuffer::: direct double buffer u put
java.nio.DirectDoubleBufferU#put(DoubleBuffer)->DoubleBuffer::: direct double buffer u put
java.nio.DirectDoubleBufferU#put(double[], int, int)->DoubleBuffer::: direct double buffer u put
java.nio.DirectDoubleBufferU#compact()->DoubleBuffer::: direct double buffer u compact
java.nio.DirectDoubleBufferU#isDirect()->boolean::: direct double buffer u is direct
java.nio.DirectDoubleBufferU#isReadOnly()->boolean::: direct double buffer u is read only
java.nio.DirectDoubleBufferU#order()->ByteOrder::: direct double buffer u order
java.nio.DirectFloatBufferRS#base()->Object::: direct float buffer s base
java.nio.DirectFloatBufferRS#slice()->FloatBuffer::: direct float buffer s slice
java.nio.DirectFloatBufferRS#duplicate()->FloatBuffer::: direct float buffer s duplicate
java.nio.DirectFloatBufferRS#asReadOnlyBuffer()->FloatBuffer::: direct float buffer s as read only buffer
java.nio.DirectFloatBufferRS#put(float)->FloatBuffer::: direct float buffer s put
java.nio.DirectFloatBufferRS#put(int, float)->FloatBuffer::: direct float buffer s put
java.nio.DirectFloatBufferRS#put(FloatBuffer)->FloatBuffer::: direct float buffer s put
java.nio.DirectFloatBufferRS#put(float[], int, int)->FloatBuffer::: direct float buffer s put
java.nio.DirectFloatBufferRS#compact()->FloatBuffer::: direct float buffer s compact
java.nio.DirectFloatBufferRS#isDirect()->boolean::: direct float buffer s is direct
java.nio.DirectFloatBufferRS#isReadOnly()->boolean::: direct float buffer s is read only
java.nio.DirectFloatBufferRS#order()->ByteOrder::: direct float buffer s order
java.nio.DirectFloatBufferRU#base()->Object::: direct float buffer u base
java.nio.DirectFloatBufferRU#slice()->FloatBuffer::: direct float buffer u slice
java.nio.DirectFloatBufferRU#duplicate()->FloatBuffer::: direct float buffer u duplicate
java.nio.DirectFloatBufferRU#asReadOnlyBuffer()->FloatBuffer::: direct float buffer u as read only buffer
java.nio.DirectFloatBufferRU#put(float)->FloatBuffer::: direct float buffer u put
java.nio.DirectFloatBufferRU#put(int, float)->FloatBuffer::: direct float buffer u put
java.nio.DirectFloatBufferRU#put(FloatBuffer)->FloatBuffer::: direct float buffer u put
java.nio.DirectFloatBufferRU#put(float[], int, int)->FloatBuffer::: direct float buffer u put
java.nio.DirectFloatBufferRU#compact()->FloatBuffer::: direct float buffer u compact
java.nio.DirectFloatBufferRU#isDirect()->boolean::: direct float buffer u is direct
java.nio.DirectFloatBufferRU#isReadOnly()->boolean::: direct float buffer u is read only
java.nio.DirectFloatBufferRU#order()->ByteOrder::: direct float buffer u order
java.nio.DirectFloatBufferS#attachment()->Object::: direct float buffer s attachment
java.nio.DirectFloatBufferS#cleaner()->Cleaner::: direct float buffer s cleaner
java.nio.DirectFloatBufferS#base()->Object::: direct float buffer s base
java.nio.DirectFloatBufferS#slice()->FloatBuffer::: direct float buffer s slice
java.nio.DirectFloatBufferS#duplicate()->FloatBuffer::: direct float buffer s duplicate
java.nio.DirectFloatBufferS#asReadOnlyBuffer()->FloatBuffer::: direct float buffer s as read only buffer
java.nio.DirectFloatBufferS#address()->long::: direct float buffer s address
java.nio.DirectFloatBufferS#get()->float::: direct float buffer s get
java.nio.DirectFloatBufferS#get(int)->float::: direct float buffer s get
java.nio.DirectFloatBufferS#get(float[], int, int)->FloatBuffer::: direct float buffer s get
java.nio.DirectFloatBufferS#put(float)->FloatBuffer::: direct float buffer s put
java.nio.DirectFloatBufferS#put(int, float)->FloatBuffer::: direct float buffer s put
java.nio.DirectFloatBufferS#put(FloatBuffer)->FloatBuffer::: direct float buffer s put
java.nio.DirectFloatBufferS#put(float[], int, int)->FloatBuffer::: direct float buffer s put
java.nio.DirectFloatBufferS#compact()->FloatBuffer::: direct float buffer s compact
java.nio.DirectFloatBufferS#isDirect()->boolean::: direct float buffer s is direct
java.nio.DirectFloatBufferS#isReadOnly()->boolean::: direct float buffer s is read only
java.nio.DirectFloatBufferS#order()->ByteOrder::: direct float buffer s order
java.nio.DirectFloatBufferU#attachment()->Object::: direct float buffer u attachment
java.nio.DirectFloatBufferU#cleaner()->Cleaner::: direct float buffer u cleaner
java.nio.DirectFloatBufferU#base()->Object::: direct float buffer u base
java.nio.DirectFloatBufferU#slice()->FloatBuffer::: direct float buffer u slice
java.nio.DirectFloatBufferU#duplicate()->FloatBuffer::: direct float buffer u duplicate
java.nio.DirectFloatBufferU#asReadOnlyBuffer()->FloatBuffer::: direct float buffer u as read only buffer
java.nio.DirectFloatBufferU#address()->long::: direct float buffer u address
java.nio.DirectFloatBufferU#get()->float::: direct float buffer u get
java.nio.DirectFloatBufferU#get(int)->float::: direct float buffer u get
java.nio.DirectFloatBufferU#get(float[], int, int)->FloatBuffer::: direct float buffer u get
java.nio.DirectFloatBufferU#put(float)->FloatBuffer::: direct float buffer u put
java.nio.DirectFloatBufferU#put(int, float)->FloatBuffer::: direct float buffer u put
java.nio.DirectFloatBufferU#put(FloatBuffer)->FloatBuffer::: direct float buffer u put
java.nio.DirectFloatBufferU#put(float[], int, int)->FloatBuffer::: direct float buffer u put
java.nio.DirectFloatBufferU#compact()->FloatBuffer::: direct float buffer u compact
java.nio.DirectFloatBufferU#isDirect()->boolean::: direct float buffer u is direct
java.nio.DirectFloatBufferU#isReadOnly()->boolean::: direct float buffer u is read only
java.nio.DirectFloatBufferU#order()->ByteOrder::: direct float buffer u order
java.nio.DirectIntBufferRS#base()->Object::: direct int buffer s base
java.nio.DirectIntBufferRS#slice()->IntBuffer::: direct int buffer s slice
java.nio.DirectIntBufferRS#duplicate()->IntBuffer::: direct int buffer s duplicate
java.nio.DirectIntBufferRS#asReadOnlyBuffer()->IntBuffer::: direct int buffer s as read only buffer
java.nio.DirectIntBufferRS#put(int)->IntBuffer::: direct int buffer s put
java.nio.DirectIntBufferRS#put(int, int)->IntBuffer::: direct int buffer s put
java.nio.DirectIntBufferRS#put(IntBuffer)->IntBuffer::: direct int buffer s put
java.nio.DirectIntBufferRS#put(int[], int, int)->IntBuffer::: direct int buffer s put
java.nio.DirectIntBufferRS#compact()->IntBuffer::: direct int buffer s compact
java.nio.DirectIntBufferRS#isDirect()->boolean::: direct int buffer s is direct
java.nio.DirectIntBufferRS#isReadOnly()->boolean::: direct int buffer s is read only
java.nio.DirectIntBufferRS#order()->ByteOrder::: direct int buffer s order
java.nio.DirectIntBufferRU#base()->Object::: direct int buffer u base
java.nio.DirectIntBufferRU#slice()->IntBuffer::: direct int buffer u slice
java.nio.DirectIntBufferRU#duplicate()->IntBuffer::: direct int buffer u duplicate
java.nio.DirectIntBufferRU#asReadOnlyBuffer()->IntBuffer::: direct int buffer u as read only buffer
java.nio.DirectIntBufferRU#put(int)->IntBuffer::: direct int buffer u put
java.nio.DirectIntBufferRU#put(int, int)->IntBuffer::: direct int buffer u put
java.nio.DirectIntBufferRU#put(IntBuffer)->IntBuffer::: direct int buffer u put
java.nio.DirectIntBufferRU#put(int[], int, int)->IntBuffer::: direct int buffer u put
java.nio.DirectIntBufferRU#compact()->IntBuffer::: direct int buffer u compact
java.nio.DirectIntBufferRU#isDirect()->boolean::: direct int buffer u is direct
java.nio.DirectIntBufferRU#isReadOnly()->boolean::: direct int buffer u is read only
java.nio.DirectIntBufferRU#order()->ByteOrder::: direct int buffer u order
java.nio.DirectIntBufferS#attachment()->Object::: direct int buffer s attachment
java.nio.DirectIntBufferS#cleaner()->Cleaner::: direct int buffer s cleaner
java.nio.DirectIntBufferS#base()->Object::: direct int buffer s base
java.nio.DirectIntBufferS#slice()->IntBuffer::: direct int buffer s slice
java.nio.DirectIntBufferS#duplicate()->IntBuffer::: direct int buffer s duplicate
java.nio.DirectIntBufferS#asReadOnlyBuffer()->IntBuffer::: direct int buffer s as read only buffer
java.nio.DirectIntBufferS#address()->long::: direct int buffer s address
java.nio.DirectIntBufferS#get()->int::: direct int buffer s get
java.nio.DirectIntBufferS#get(int)->int::: direct int buffer s get
java.nio.DirectIntBufferS#get(int[], int, int)->IntBuffer::: direct int buffer s get
java.nio.DirectIntBufferS#put(int)->IntBuffer::: direct int buffer s put
java.nio.DirectIntBufferS#put(int, int)->IntBuffer::: direct int buffer s put
java.nio.DirectIntBufferS#put(IntBuffer)->IntBuffer::: direct int buffer s put
java.nio.DirectIntBufferS#put(int[], int, int)->IntBuffer::: direct int buffer s put
java.nio.DirectIntBufferS#compact()->IntBuffer::: direct int buffer s compact
java.nio.DirectIntBufferS#isDirect()->boolean::: direct int buffer s is direct
java.nio.DirectIntBufferS#isReadOnly()->boolean::: direct int buffer s is read only
java.nio.DirectIntBufferS#order()->ByteOrder::: direct int buffer s order
java.nio.DirectIntBufferU#attachment()->Object::: direct int buffer u attachment
java.nio.DirectIntBufferU#cleaner()->Cleaner::: direct int buffer u cleaner
java.nio.DirectIntBufferU#base()->Object::: direct int buffer u base
java.nio.DirectIntBufferU#slice()->IntBuffer::: direct int buffer u slice
java.nio.DirectIntBufferU#duplicate()->IntBuffer::: direct int buffer u duplicate
java.nio.DirectIntBufferU#asReadOnlyBuffer()->IntBuffer::: direct int buffer u as read only buffer
java.nio.DirectIntBufferU#address()->long::: direct int buffer u address
java.nio.DirectIntBufferU#get()->int::: direct int buffer u get
java.nio.DirectIntBufferU#get(int)->int::: direct int buffer u get
java.nio.DirectIntBufferU#get(int[], int, int)->IntBuffer::: direct int buffer u get
java.nio.DirectIntBufferU#put(int)->IntBuffer::: direct int buffer u put
java.nio.DirectIntBufferU#put(int, int)->IntBuffer::: direct int buffer u put
java.nio.DirectIntBufferU#put(IntBuffer)->IntBuffer::: direct int buffer u put
java.nio.DirectIntBufferU#put(int[], int, int)->IntBuffer::: direct int buffer u put
java.nio.DirectIntBufferU#compact()->IntBuffer::: direct int buffer u compact
java.nio.DirectIntBufferU#isDirect()->boolean::: direct int buffer u is direct
java.nio.DirectIntBufferU#isReadOnly()->boolean::: direct int buffer u is read only
java.nio.DirectIntBufferU#order()->ByteOrder::: direct int buffer u order
java.nio.DirectLongBufferRS#base()->Object::: direct long buffer s base
java.nio.DirectLongBufferRS#slice()->LongBuffer::: direct long buffer s slice
java.nio.DirectLongBufferRS#duplicate()->LongBuffer::: direct long buffer s duplicate
java.nio.DirectLongBufferRS#asReadOnlyBuffer()->LongBuffer::: direct long buffer s as read only buffer
java.nio.DirectLongBufferRS#put(long)->LongBuffer::: direct long buffer s put
java.nio.DirectLongBufferRS#put(int, long)->LongBuffer::: direct long buffer s put
java.nio.DirectLongBufferRS#put(LongBuffer)->LongBuffer::: direct long buffer s put
java.nio.DirectLongBufferRS#put(long[], int, int)->LongBuffer::: direct long buffer s put
java.nio.DirectLongBufferRS#compact()->LongBuffer::: direct long buffer s compact
java.nio.DirectLongBufferRS#isDirect()->boolean::: direct long buffer s is direct
java.nio.DirectLongBufferRS#isReadOnly()->boolean::: direct long buffer s is read only
java.nio.DirectLongBufferRS#order()->ByteOrder::: direct long buffer s order
java.nio.DirectLongBufferRU#base()->Object::: direct long buffer u base
java.nio.DirectLongBufferRU#slice()->LongBuffer::: direct long buffer u slice
java.nio.DirectLongBufferRU#duplicate()->LongBuffer::: direct long buffer u duplicate
java.nio.DirectLongBufferRU#asReadOnlyBuffer()->LongBuffer::: direct long buffer u as read only buffer
java.nio.DirectLongBufferRU#put(long)->LongBuffer::: direct long buffer u put
java.nio.DirectLongBufferRU#put(int, long)->LongBuffer::: direct long buffer u put
java.nio.DirectLongBufferRU#put(LongBuffer)->LongBuffer::: direct long buffer u put
java.nio.DirectLongBufferRU#put(long[], int, int)->LongBuffer::: direct long buffer u put
java.nio.DirectLongBufferRU#compact()->LongBuffer::: direct long buffer u compact
java.nio.DirectLongBufferRU#isDirect()->boolean::: direct long buffer u is direct
java.nio.DirectLongBufferRU#isReadOnly()->boolean::: direct long buffer u is read only
java.nio.DirectLongBufferRU#order()->ByteOrder::: direct long buffer u order
java.nio.DirectLongBufferS#attachment()->Object::: direct long buffer s attachment
java.nio.DirectLongBufferS#cleaner()->Cleaner::: direct long buffer s cleaner
java.nio.DirectLongBufferS#base()->Object::: direct long buffer s base
java.nio.DirectLongBufferS#slice()->LongBuffer::: direct long buffer s slice
java.nio.DirectLongBufferS#duplicate()->LongBuffer::: direct long buffer s duplicate
java.nio.DirectLongBufferS#asReadOnlyBuffer()->LongBuffer::: direct long buffer s as read only buffer
java.nio.DirectLongBufferS#address()->long::: direct long buffer s address
java.nio.DirectLongBufferS#get()->long::: direct long buffer s get
java.nio.DirectLongBufferS#get(int)->long::: direct long buffer s get
java.nio.DirectLongBufferS#get(long[], int, int)->LongBuffer::: direct long buffer s get
java.nio.DirectLongBufferS#put(long)->LongBuffer::: direct long buffer s put
java.nio.DirectLongBufferS#put(int, long)->LongBuffer::: direct long buffer s put
java.nio.DirectLongBufferS#put(LongBuffer)->LongBuffer::: direct long buffer s put
java.nio.DirectLongBufferS#put(long[], int, int)->LongBuffer::: direct long buffer s put
java.nio.DirectLongBufferS#compact()->LongBuffer::: direct long buffer s compact
java.nio.DirectLongBufferS#isDirect()->boolean::: direct long buffer s is direct
java.nio.DirectLongBufferS#isReadOnly()->boolean::: direct long buffer s is read only
java.nio.DirectLongBufferS#order()->ByteOrder::: direct long buffer s order
java.nio.DirectLongBufferU#attachment()->Object::: direct long buffer u attachment
java.nio.DirectLongBufferU#cleaner()->Cleaner::: direct long buffer u cleaner
java.nio.DirectLongBufferU#base()->Object::: direct long buffer u base
java.nio.DirectLongBufferU#slice()->LongBuffer::: direct long buffer u slice
java.nio.DirectLongBufferU#duplicate()->LongBuffer::: direct long buffer u duplicate
java.nio.DirectLongBufferU#asReadOnlyBuffer()->LongBuffer::: direct long buffer u as read only buffer
java.nio.DirectLongBufferU#address()->long::: direct long buffer u address
java.nio.DirectLongBufferU#get()->long::: direct long buffer u get
java.nio.DirectLongBufferU#get(int)->long::: direct long buffer u get
java.nio.DirectLongBufferU#get(long[], int, int)->LongBuffer::: direct long buffer u get
java.nio.DirectLongBufferU#put(long)->LongBuffer::: direct long buffer u put
java.nio.DirectLongBufferU#put(int, long)->LongBuffer::: direct long buffer u put
java.nio.DirectLongBufferU#put(LongBuffer)->LongBuffer::: direct long buffer u put
java.nio.DirectLongBufferU#put(long[], int, int)->LongBuffer::: direct long buffer u put
java.nio.DirectLongBufferU#compact()->LongBuffer::: direct long buffer u compact
java.nio.DirectLongBufferU#isDirect()->boolean::: direct long buffer u is direct
java.nio.DirectLongBufferU#isReadOnly()->boolean::: direct long buffer u is read only
java.nio.DirectLongBufferU#order()->ByteOrder::: direct long buffer u order
java.nio.DirectShortBufferRS#base()->Object::: direct short buffer s base
java.nio.DirectShortBufferRS#slice()->ShortBuffer::: direct short buffer s slice
java.nio.DirectShortBufferRS#duplicate()->ShortBuffer::: direct short buffer s duplicate
java.nio.DirectShortBufferRS#asReadOnlyBuffer()->ShortBuffer::: direct short buffer s as read only buffer
java.nio.DirectShortBufferRS#put(short)->ShortBuffer::: direct short buffer s put
java.nio.DirectShortBufferRS#put(int, short)->ShortBuffer::: direct short buffer s put
java.nio.DirectShortBufferRS#put(ShortBuffer)->ShortBuffer::: direct short buffer s put
java.nio.DirectShortBufferRS#put(short[], int, int)->ShortBuffer::: direct short buffer s put
java.nio.DirectShortBufferRS#compact()->ShortBuffer::: direct short buffer s compact
java.nio.DirectShortBufferRS#isDirect()->boolean::: direct short buffer s is direct
java.nio.DirectShortBufferRS#isReadOnly()->boolean::: direct short buffer s is read only
java.nio.DirectShortBufferRS#order()->ByteOrder::: direct short buffer s order
java.nio.DirectShortBufferRU#base()->Object::: direct short buffer u base
java.nio.DirectShortBufferRU#slice()->ShortBuffer::: direct short buffer u slice
java.nio.DirectShortBufferRU#duplicate()->ShortBuffer::: direct short buffer u duplicate
java.nio.DirectShortBufferRU#asReadOnlyBuffer()->ShortBuffer::: direct short buffer u as read only buffer
java.nio.DirectShortBufferRU#put(short)->ShortBuffer::: direct short buffer u put
java.nio.DirectShortBufferRU#put(int, short)->ShortBuffer::: direct short buffer u put
java.nio.DirectShortBufferRU#put(ShortBuffer)->ShortBuffer::: direct short buffer u put
java.nio.DirectShortBufferRU#put(short[], int, int)->ShortBuffer::: direct short buffer u put
java.nio.DirectShortBufferRU#compact()->ShortBuffer::: direct short buffer u compact
java.nio.DirectShortBufferRU#isDirect()->boolean::: direct short buffer u is direct
java.nio.DirectShortBufferRU#isReadOnly()->boolean::: direct short buffer u is read only
java.nio.DirectShortBufferRU#order()->ByteOrder::: direct short buffer u order
java.nio.DirectShortBufferS#attachment()->Object::: direct short buffer s attachment
java.nio.DirectShortBufferS#cleaner()->Cleaner::: direct short buffer s cleaner
java.nio.DirectShortBufferS#base()->Object::: direct short buffer s base
java.nio.DirectShortBufferS#slice()->ShortBuffer::: direct short buffer s slice
java.nio.DirectShortBufferS#duplicate()->ShortBuffer::: direct short buffer s duplicate
java.nio.DirectShortBufferS#asReadOnlyBuffer()->ShortBuffer::: direct short buffer s as read only buffer
java.nio.DirectShortBufferS#address()->long::: direct short buffer s address
java.nio.DirectShortBufferS#get()->short::: direct short buffer s get
java.nio.DirectShortBufferS#get(int)->short::: direct short buffer s get
java.nio.DirectShortBufferS#get(short[], int, int)->ShortBuffer::: direct short buffer s get
java.nio.DirectShortBufferS#put(short)->ShortBuffer::: direct short buffer s put
java.nio.DirectShortBufferS#put(int, short)->ShortBuffer::: direct short buffer s put
java.nio.DirectShortBufferS#put(ShortBuffer)->ShortBuffer::: direct short buffer s put
java.nio.DirectShortBufferS#put(short[], int, int)->ShortBuffer::: direct short buffer s put
java.nio.DirectShortBufferS#compact()->ShortBuffer::: direct short buffer s compact
java.nio.DirectShortBufferS#isDirect()->boolean::: direct short buffer s is direct
java.nio.DirectShortBufferS#isReadOnly()->boolean::: direct short buffer s is read only
java.nio.DirectShortBufferS#order()->ByteOrder::: direct short buffer s order
java.nio.DirectShortBufferU#attachment()->Object::: direct short buffer u attachment
java.nio.DirectShortBufferU#cleaner()->Cleaner::: direct short buffer u cleaner
java.nio.DirectShortBufferU#base()->Object::: direct short buffer u base
java.nio.DirectShortBufferU#slice()->ShortBuffer::: direct short buffer u slice
java.nio.DirectShortBufferU#duplicate()->ShortBuffer::: direct short buffer u duplicate
java.nio.DirectShortBufferU#asReadOnlyBuffer()->ShortBuffer::: direct short buffer u as read only buffer
java.nio.DirectShortBufferU#address()->long::: direct short buffer u address
java.nio.DirectShortBufferU#get()->short::: direct short buffer u get
java.nio.DirectShortBufferU#get(int)->short::: direct short buffer u get
java.nio.DirectShortBufferU#get(short[], int, int)->ShortBuffer::: direct short buffer u get
java.nio.DirectShortBufferU#put(short)->ShortBuffer::: direct short buffer u put
java.nio.DirectShortBufferU#put(int, short)->ShortBuffer::: direct short buffer u put
java.nio.DirectShortBufferU#put(ShortBuffer)->ShortBuffer::: direct short buffer u put
java.nio.DirectShortBufferU#put(short[], int, int)->ShortBuffer::: direct short buffer u put
java.nio.DirectShortBufferU#compact()->ShortBuffer::: direct short buffer u compact
java.nio.DirectShortBufferU#isDirect()->boolean::: direct short buffer u is direct
java.nio.DirectShortBufferU#isReadOnly()->boolean::: direct short buffer u is read only
java.nio.DirectShortBufferU#order()->ByteOrder::: direct short buffer u order
java.nio.DoubleBuffer#base()->Object::: double buffer base
java.nio.DoubleBuffer#allocate(int)->DoubleBuffer:::Allocates a new double buffer
java.nio.DoubleBuffer#wrap(double[], int, int)->DoubleBuffer:::Wraps a double array into a buffer
java.nio.DoubleBuffer#wrap(double[])->DoubleBuffer:::Wraps a double array into a buffer
java.nio.DoubleBuffer#slice()->DoubleBuffer:::Creates a new double buffer whose content is a shared subsequence of this buffer's content
java.nio.DoubleBuffer#duplicate()->DoubleBuffer:::Creates a new double buffer that shares this buffer's content
java.nio.DoubleBuffer#asReadOnlyBuffer()->DoubleBuffer:::Creates a new, read-only double buffer that shares this buffer's content
java.nio.DoubleBuffer#get()->double:::Relative get method
java.nio.DoubleBuffer#put(double)->DoubleBuffer:::Relative put method&nbsp;&nbsp;(optional operation)
java.nio.DoubleBuffer#get(int)->double:::Absolute get method
java.nio.DoubleBuffer#put(int, double)->DoubleBuffer:::Absolute put method&nbsp;&nbsp;(optional operation)
java.nio.DoubleBuffer#get(double[], int, int)->DoubleBuffer:::Relative bulk get method
java.nio.DoubleBuffer#get(double[])->DoubleBuffer:::Relative bulk get method
java.nio.DoubleBuffer#put(DoubleBuffer)->DoubleBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.DoubleBuffer#put(double[], int, int)->DoubleBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.DoubleBuffer#put(double[])->DoubleBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.DoubleBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible double array
java.nio.DoubleBuffer#array()->double[]:::Returns the double array that backs this buffer&nbsp;&nbsp;(optional operation)
java.nio.DoubleBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
java.nio.DoubleBuffer#position(int)->DoubleBuffer::: double buffer position
java.nio.DoubleBuffer#limit(int)->DoubleBuffer::: double buffer limit
java.nio.DoubleBuffer#mark()->DoubleBuffer::: double buffer mark
java.nio.DoubleBuffer#reset()->DoubleBuffer::: double buffer reset
java.nio.DoubleBuffer#clear()->DoubleBuffer::: double buffer clear
java.nio.DoubleBuffer#flip()->DoubleBuffer::: double buffer flip
java.nio.DoubleBuffer#rewind()->DoubleBuffer::: double buffer rewind
java.nio.DoubleBuffer#compact()->DoubleBuffer:::Compacts this buffer&nbsp;&nbsp;(optional operation)
java.nio.DoubleBuffer#isDirect()->boolean:::Tells whether or not this double buffer is direct.
java.nio.DoubleBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.DoubleBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.DoubleBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.DoubleBuffer#compareTo(DoubleBuffer)->int:::Compares this buffer to another
java.nio.DoubleBuffer#mismatch(DoubleBuffer)->int:::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
java.nio.DoubleBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.FloatBuffer#base()->Object::: float buffer base
java.nio.FloatBuffer#allocate(int)->FloatBuffer:::Allocates a new float buffer
java.nio.FloatBuffer#wrap(float[], int, int)->FloatBuffer:::Wraps a float array into a buffer
java.nio.FloatBuffer#wrap(float[])->FloatBuffer:::Wraps a float array into a buffer
java.nio.FloatBuffer#slice()->FloatBuffer:::Creates a new float buffer whose content is a shared subsequence of this buffer's content
java.nio.FloatBuffer#duplicate()->FloatBuffer:::Creates a new float buffer that shares this buffer's content
java.nio.FloatBuffer#asReadOnlyBuffer()->FloatBuffer:::Creates a new, read-only float buffer that shares this buffer's content
java.nio.FloatBuffer#get()->float:::Relative get method
java.nio.FloatBuffer#put(float)->FloatBuffer:::Relative put method&nbsp;&nbsp;(optional operation)
java.nio.FloatBuffer#get(int)->float:::Absolute get method
java.nio.FloatBuffer#put(int, float)->FloatBuffer:::Absolute put method&nbsp;&nbsp;(optional operation)
java.nio.FloatBuffer#get(float[], int, int)->FloatBuffer:::Relative bulk get method
java.nio.FloatBuffer#get(float[])->FloatBuffer:::Relative bulk get method
java.nio.FloatBuffer#put(FloatBuffer)->FloatBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.FloatBuffer#put(float[], int, int)->FloatBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.FloatBuffer#put(float[])->FloatBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.FloatBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible float array
java.nio.FloatBuffer#array()->float[]:::Returns the float array that backs this buffer&nbsp;&nbsp;(optional operation)
java.nio.FloatBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
java.nio.FloatBuffer#position(int)->FloatBuffer::: float buffer position
java.nio.FloatBuffer#limit(int)->FloatBuffer::: float buffer limit
java.nio.FloatBuffer#mark()->FloatBuffer::: float buffer mark
java.nio.FloatBuffer#reset()->FloatBuffer::: float buffer reset
java.nio.FloatBuffer#clear()->FloatBuffer::: float buffer clear
java.nio.FloatBuffer#flip()->FloatBuffer::: float buffer flip
java.nio.FloatBuffer#rewind()->FloatBuffer::: float buffer rewind
java.nio.FloatBuffer#compact()->FloatBuffer:::Compacts this buffer&nbsp;&nbsp;(optional operation)
java.nio.FloatBuffer#isDirect()->boolean:::Tells whether or not this float buffer is direct.
java.nio.FloatBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.FloatBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.FloatBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.FloatBuffer#compareTo(FloatBuffer)->int:::Compares this buffer to another
java.nio.FloatBuffer#mismatch(FloatBuffer)->int:::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
java.nio.FloatBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.HeapByteBuffer#slice()->ByteBuffer::: heap byte buffer slice
java.nio.HeapByteBuffer#slice(int, int)->ByteBuffer::: heap byte buffer slice
java.nio.HeapByteBuffer#duplicate()->ByteBuffer::: heap byte buffer duplicate
java.nio.HeapByteBuffer#asReadOnlyBuffer()->ByteBuffer::: heap byte buffer as read only buffer
java.nio.HeapByteBuffer#ix(int)->int::: heap byte buffer ix
java.nio.HeapByteBuffer#get()->byte::: heap byte buffer get
java.nio.HeapByteBuffer#get(int)->byte::: heap byte buffer get
java.nio.HeapByteBuffer#get(byte[], int, int)->ByteBuffer::: heap byte buffer get
java.nio.HeapByteBuffer#isDirect()->boolean::: heap byte buffer is direct
java.nio.HeapByteBuffer#isReadOnly()->boolean::: heap byte buffer is read only
java.nio.HeapByteBuffer#put(byte)->ByteBuffer::: heap byte buffer put
java.nio.HeapByteBuffer#put(int, byte)->ByteBuffer::: heap byte buffer put
java.nio.HeapByteBuffer#put(byte[], int, int)->ByteBuffer::: heap byte buffer put
java.nio.HeapByteBuffer#put(ByteBuffer)->ByteBuffer::: heap byte buffer put
java.nio.HeapByteBuffer#compact()->ByteBuffer::: heap byte buffer compact
java.nio.HeapByteBuffer#_get(int)->byte::: heap byte buffer _get
java.nio.HeapByteBuffer#_put(int, byte)->void::: heap byte buffer _put
java.nio.HeapByteBuffer#getChar()->char::: heap byte buffer get char
java.nio.HeapByteBuffer#getChar(int)->char::: heap byte buffer get char
java.nio.HeapByteBuffer#putChar(char)->ByteBuffer::: heap byte buffer put char
java.nio.HeapByteBuffer#putChar(int, char)->ByteBuffer::: heap byte buffer put char
java.nio.HeapByteBuffer#asCharBuffer()->CharBuffer::: heap byte buffer as char buffer
java.nio.HeapByteBuffer#getShort()->short::: heap byte buffer get short
java.nio.HeapByteBuffer#getShort(int)->short::: heap byte buffer get short
java.nio.HeapByteBuffer#putShort(short)->ByteBuffer::: heap byte buffer put short
java.nio.HeapByteBuffer#putShort(int, short)->ByteBuffer::: heap byte buffer put short
java.nio.HeapByteBuffer#asShortBuffer()->ShortBuffer::: heap byte buffer as short buffer
java.nio.HeapByteBuffer#getInt()->int::: heap byte buffer get int
java.nio.HeapByteBuffer#getInt(int)->int::: heap byte buffer get int
java.nio.HeapByteBuffer#putInt(int)->ByteBuffer::: heap byte buffer put int
java.nio.HeapByteBuffer#putInt(int, int)->ByteBuffer::: heap byte buffer put int
java.nio.HeapByteBuffer#asIntBuffer()->IntBuffer::: heap byte buffer as int buffer
java.nio.HeapByteBuffer#getLong()->long::: heap byte buffer get long
java.nio.HeapByteBuffer#getLong(int)->long::: heap byte buffer get long
java.nio.HeapByteBuffer#putLong(long)->ByteBuffer::: heap byte buffer put long
java.nio.HeapByteBuffer#putLong(int, long)->ByteBuffer::: heap byte buffer put long
java.nio.HeapByteBuffer#asLongBuffer()->LongBuffer::: heap byte buffer as long buffer
java.nio.HeapByteBuffer#getFloat()->float::: heap byte buffer get float
java.nio.HeapByteBuffer#getFloat(int)->float::: heap byte buffer get float
java.nio.HeapByteBuffer#putFloat(float)->ByteBuffer::: heap byte buffer put float
java.nio.HeapByteBuffer#putFloat(int, float)->ByteBuffer::: heap byte buffer put float
java.nio.HeapByteBuffer#asFloatBuffer()->FloatBuffer::: heap byte buffer as float buffer
java.nio.HeapByteBuffer#getDouble()->double::: heap byte buffer get double
java.nio.HeapByteBuffer#getDouble(int)->double::: heap byte buffer get double
java.nio.HeapByteBuffer#putDouble(double)->ByteBuffer::: heap byte buffer put double
java.nio.HeapByteBuffer#putDouble(int, double)->ByteBuffer::: heap byte buffer put double
java.nio.HeapByteBuffer#asDoubleBuffer()->DoubleBuffer::: heap byte buffer as double buffer
java.nio.HeapByteBufferR#slice()->ByteBuffer::: heap byte buffer r slice
java.nio.HeapByteBufferR#slice(int, int)->ByteBuffer::: heap byte buffer r slice
java.nio.HeapByteBufferR#duplicate()->ByteBuffer::: heap byte buffer r duplicate
java.nio.HeapByteBufferR#asReadOnlyBuffer()->ByteBuffer::: heap byte buffer r as read only buffer
java.nio.HeapByteBufferR#isReadOnly()->boolean::: heap byte buffer r is read only
java.nio.HeapByteBufferR#put(byte)->ByteBuffer::: heap byte buffer r put
java.nio.HeapByteBufferR#put(int, byte)->ByteBuffer::: heap byte buffer r put
java.nio.HeapByteBufferR#put(byte[], int, int)->ByteBuffer::: heap byte buffer r put
java.nio.HeapByteBufferR#put(ByteBuffer)->ByteBuffer::: heap byte buffer r put
java.nio.HeapByteBufferR#compact()->ByteBuffer::: heap byte buffer r compact
java.nio.HeapByteBufferR#_get(int)->byte::: heap byte buffer r _get
java.nio.HeapByteBufferR#_put(int, byte)->void::: heap byte buffer r _put
java.nio.HeapByteBufferR#putChar(char)->ByteBuffer::: heap byte buffer r put char
java.nio.HeapByteBufferR#putChar(int, char)->ByteBuffer::: heap byte buffer r put char
java.nio.HeapByteBufferR#asCharBuffer()->CharBuffer::: heap byte buffer r as char buffer
java.nio.HeapByteBufferR#putShort(short)->ByteBuffer::: heap byte buffer r put short
java.nio.HeapByteBufferR#putShort(int, short)->ByteBuffer::: heap byte buffer r put short
java.nio.HeapByteBufferR#asShortBuffer()->ShortBuffer::: heap byte buffer r as short buffer
java.nio.HeapByteBufferR#putInt(int)->ByteBuffer::: heap byte buffer r put int
java.nio.HeapByteBufferR#putInt(int, int)->ByteBuffer::: heap byte buffer r put int
java.nio.HeapByteBufferR#asIntBuffer()->IntBuffer::: heap byte buffer r as int buffer
java.nio.HeapByteBufferR#putLong(long)->ByteBuffer::: heap byte buffer r put long
java.nio.HeapByteBufferR#putLong(int, long)->ByteBuffer::: heap byte buffer r put long
java.nio.HeapByteBufferR#asLongBuffer()->LongBuffer::: heap byte buffer r as long buffer
java.nio.HeapByteBufferR#putFloat(float)->ByteBuffer::: heap byte buffer r put float
java.nio.HeapByteBufferR#putFloat(int, float)->ByteBuffer::: heap byte buffer r put float
java.nio.HeapByteBufferR#asFloatBuffer()->FloatBuffer::: heap byte buffer r as float buffer
java.nio.HeapByteBufferR#putDouble(double)->ByteBuffer::: heap byte buffer r put double
java.nio.HeapByteBufferR#putDouble(int, double)->ByteBuffer::: heap byte buffer r put double
java.nio.HeapByteBufferR#asDoubleBuffer()->DoubleBuffer::: heap byte buffer r as double buffer
java.nio.HeapCharBuffer#slice()->CharBuffer::: heap char buffer slice
java.nio.HeapCharBuffer#duplicate()->CharBuffer::: heap char buffer duplicate
java.nio.HeapCharBuffer#asReadOnlyBuffer()->CharBuffer::: heap char buffer as read only buffer
java.nio.HeapCharBuffer#ix(int)->int::: heap char buffer ix
java.nio.HeapCharBuffer#get()->char::: heap char buffer get
java.nio.HeapCharBuffer#get(int)->char::: heap char buffer get
java.nio.HeapCharBuffer#getUnchecked(int)->char::: heap char buffer get unchecked
java.nio.HeapCharBuffer#get(char[], int, int)->CharBuffer::: heap char buffer get
java.nio.HeapCharBuffer#isDirect()->boolean::: heap char buffer is direct
java.nio.HeapCharBuffer#isReadOnly()->boolean::: heap char buffer is read only
java.nio.HeapCharBuffer#put(char)->CharBuffer::: heap char buffer put
java.nio.HeapCharBuffer#put(int, char)->CharBuffer::: heap char buffer put
java.nio.HeapCharBuffer#put(char[], int, int)->CharBuffer::: heap char buffer put
java.nio.HeapCharBuffer#put(CharBuffer)->CharBuffer::: heap char buffer put
java.nio.HeapCharBuffer#compact()->CharBuffer::: heap char buffer compact
java.nio.HeapCharBuffer#toString(int, int)->String::: heap char buffer to string
java.nio.HeapCharBuffer#subSequence(int, int)->CharBuffer::: heap char buffer sub sequence
java.nio.HeapCharBuffer#order()->ByteOrder::: heap char buffer order
java.nio.HeapCharBuffer#charRegionOrder()->ByteOrder::: heap char buffer char region order
java.nio.HeapCharBufferR#slice()->CharBuffer::: heap char buffer r slice
java.nio.HeapCharBufferR#duplicate()->CharBuffer::: heap char buffer r duplicate
java.nio.HeapCharBufferR#asReadOnlyBuffer()->CharBuffer::: heap char buffer r as read only buffer
java.nio.HeapCharBufferR#isReadOnly()->boolean::: heap char buffer r is read only
java.nio.HeapCharBufferR#put(char)->CharBuffer::: heap char buffer r put
java.nio.HeapCharBufferR#put(int, char)->CharBuffer::: heap char buffer r put
java.nio.HeapCharBufferR#put(char[], int, int)->CharBuffer::: heap char buffer r put
java.nio.HeapCharBufferR#put(CharBuffer)->CharBuffer::: heap char buffer r put
java.nio.HeapCharBufferR#compact()->CharBuffer::: heap char buffer r compact
java.nio.HeapCharBufferR#toString(int, int)->String::: heap char buffer r to string
java.nio.HeapCharBufferR#subSequence(int, int)->CharBuffer::: heap char buffer r sub sequence
java.nio.HeapCharBufferR#order()->ByteOrder::: heap char buffer r order
java.nio.HeapCharBufferR#charRegionOrder()->ByteOrder::: heap char buffer r char region order
java.nio.HeapDoubleBuffer#slice()->DoubleBuffer::: heap double buffer slice
java.nio.HeapDoubleBuffer#duplicate()->DoubleBuffer::: heap double buffer duplicate
java.nio.HeapDoubleBuffer#asReadOnlyBuffer()->DoubleBuffer::: heap double buffer as read only buffer
java.nio.HeapDoubleBuffer#ix(int)->int::: heap double buffer ix
java.nio.HeapDoubleBuffer#get()->double::: heap double buffer get
java.nio.HeapDoubleBuffer#get(int)->double::: heap double buffer get
java.nio.HeapDoubleBuffer#get(double[], int, int)->DoubleBuffer::: heap double buffer get
java.nio.HeapDoubleBuffer#isDirect()->boolean::: heap double buffer is direct
java.nio.HeapDoubleBuffer#isReadOnly()->boolean::: heap double buffer is read only
java.nio.HeapDoubleBuffer#put(double)->DoubleBuffer::: heap double buffer put
java.nio.HeapDoubleBuffer#put(int, double)->DoubleBuffer::: heap double buffer put
java.nio.HeapDoubleBuffer#put(double[], int, int)->DoubleBuffer::: heap double buffer put
java.nio.HeapDoubleBuffer#put(DoubleBuffer)->DoubleBuffer::: heap double buffer put
java.nio.HeapDoubleBuffer#compact()->DoubleBuffer::: heap double buffer compact
java.nio.HeapDoubleBuffer#order()->ByteOrder::: heap double buffer order
java.nio.HeapDoubleBufferR#slice()->DoubleBuffer::: heap double buffer r slice
java.nio.HeapDoubleBufferR#duplicate()->DoubleBuffer::: heap double buffer r duplicate
java.nio.HeapDoubleBufferR#asReadOnlyBuffer()->DoubleBuffer::: heap double buffer r as read only buffer
java.nio.HeapDoubleBufferR#isReadOnly()->boolean::: heap double buffer r is read only
java.nio.HeapDoubleBufferR#put(double)->DoubleBuffer::: heap double buffer r put
java.nio.HeapDoubleBufferR#put(int, double)->DoubleBuffer::: heap double buffer r put
java.nio.HeapDoubleBufferR#put(double[], int, int)->DoubleBuffer::: heap double buffer r put
java.nio.HeapDoubleBufferR#put(DoubleBuffer)->DoubleBuffer::: heap double buffer r put
java.nio.HeapDoubleBufferR#compact()->DoubleBuffer::: heap double buffer r compact
java.nio.HeapDoubleBufferR#order()->ByteOrder::: heap double buffer r order
java.nio.HeapFloatBuffer#slice()->FloatBuffer::: heap float buffer slice
java.nio.HeapFloatBuffer#duplicate()->FloatBuffer::: heap float buffer duplicate
java.nio.HeapFloatBuffer#asReadOnlyBuffer()->FloatBuffer::: heap float buffer as read only buffer
java.nio.HeapFloatBuffer#ix(int)->int::: heap float buffer ix
java.nio.HeapFloatBuffer#get()->float::: heap float buffer get
java.nio.HeapFloatBuffer#get(int)->float::: heap float buffer get
java.nio.HeapFloatBuffer#get(float[], int, int)->FloatBuffer::: heap float buffer get
java.nio.HeapFloatBuffer#isDirect()->boolean::: heap float buffer is direct
java.nio.HeapFloatBuffer#isReadOnly()->boolean::: heap float buffer is read only
java.nio.HeapFloatBuffer#put(float)->FloatBuffer::: heap float buffer put
java.nio.HeapFloatBuffer#put(int, float)->FloatBuffer::: heap float buffer put
java.nio.HeapFloatBuffer#put(float[], int, int)->FloatBuffer::: heap float buffer put
java.nio.HeapFloatBuffer#put(FloatBuffer)->FloatBuffer::: heap float buffer put
java.nio.HeapFloatBuffer#compact()->FloatBuffer::: heap float buffer compact
java.nio.HeapFloatBuffer#order()->ByteOrder::: heap float buffer order
java.nio.HeapFloatBufferR#slice()->FloatBuffer::: heap float buffer r slice
java.nio.HeapFloatBufferR#duplicate()->FloatBuffer::: heap float buffer r duplicate
java.nio.HeapFloatBufferR#asReadOnlyBuffer()->FloatBuffer::: heap float buffer r as read only buffer
java.nio.HeapFloatBufferR#isReadOnly()->boolean::: heap float buffer r is read only
java.nio.HeapFloatBufferR#put(float)->FloatBuffer::: heap float buffer r put
java.nio.HeapFloatBufferR#put(int, float)->FloatBuffer::: heap float buffer r put
java.nio.HeapFloatBufferR#put(float[], int, int)->FloatBuffer::: heap float buffer r put
java.nio.HeapFloatBufferR#put(FloatBuffer)->FloatBuffer::: heap float buffer r put
java.nio.HeapFloatBufferR#compact()->FloatBuffer::: heap float buffer r compact
java.nio.HeapFloatBufferR#order()->ByteOrder::: heap float buffer r order
java.nio.HeapIntBuffer#slice()->IntBuffer::: heap int buffer slice
java.nio.HeapIntBuffer#duplicate()->IntBuffer::: heap int buffer duplicate
java.nio.HeapIntBuffer#asReadOnlyBuffer()->IntBuffer::: heap int buffer as read only buffer
java.nio.HeapIntBuffer#ix(int)->int::: heap int buffer ix
java.nio.HeapIntBuffer#get()->int::: heap int buffer get
java.nio.HeapIntBuffer#get(int)->int::: heap int buffer get
java.nio.HeapIntBuffer#get(int[], int, int)->IntBuffer::: heap int buffer get
java.nio.HeapIntBuffer#isDirect()->boolean::: heap int buffer is direct
java.nio.HeapIntBuffer#isReadOnly()->boolean::: heap int buffer is read only
java.nio.HeapIntBuffer#put(int)->IntBuffer::: heap int buffer put
java.nio.HeapIntBuffer#put(int, int)->IntBuffer::: heap int buffer put
java.nio.HeapIntBuffer#put(int[], int, int)->IntBuffer::: heap int buffer put
java.nio.HeapIntBuffer#put(IntBuffer)->IntBuffer::: heap int buffer put
java.nio.HeapIntBuffer#compact()->IntBuffer::: heap int buffer compact
java.nio.HeapIntBuffer#order()->ByteOrder::: heap int buffer order
java.nio.HeapIntBufferR#slice()->IntBuffer::: heap int buffer r slice
java.nio.HeapIntBufferR#duplicate()->IntBuffer::: heap int buffer r duplicate
java.nio.HeapIntBufferR#asReadOnlyBuffer()->IntBuffer::: heap int buffer r as read only buffer
java.nio.HeapIntBufferR#isReadOnly()->boolean::: heap int buffer r is read only
java.nio.HeapIntBufferR#put(int)->IntBuffer::: heap int buffer r put
java.nio.HeapIntBufferR#put(int, int)->IntBuffer::: heap int buffer r put
java.nio.HeapIntBufferR#put(int[], int, int)->IntBuffer::: heap int buffer r put
java.nio.HeapIntBufferR#put(IntBuffer)->IntBuffer::: heap int buffer r put
java.nio.HeapIntBufferR#compact()->IntBuffer::: heap int buffer r compact
java.nio.HeapIntBufferR#order()->ByteOrder::: heap int buffer r order
java.nio.HeapLongBuffer#slice()->LongBuffer::: heap long buffer slice
java.nio.HeapLongBuffer#duplicate()->LongBuffer::: heap long buffer duplicate
java.nio.HeapLongBuffer#asReadOnlyBuffer()->LongBuffer::: heap long buffer as read only buffer
java.nio.HeapLongBuffer#ix(int)->int::: heap long buffer ix
java.nio.HeapLongBuffer#get()->long::: heap long buffer get
java.nio.HeapLongBuffer#get(int)->long::: heap long buffer get
java.nio.HeapLongBuffer#get(long[], int, int)->LongBuffer::: heap long buffer get
java.nio.HeapLongBuffer#isDirect()->boolean::: heap long buffer is direct
java.nio.HeapLongBuffer#isReadOnly()->boolean::: heap long buffer is read only
java.nio.HeapLongBuffer#put(long)->LongBuffer::: heap long buffer put
java.nio.HeapLongBuffer#put(int, long)->LongBuffer::: heap long buffer put
java.nio.HeapLongBuffer#put(long[], int, int)->LongBuffer::: heap long buffer put
java.nio.HeapLongBuffer#put(LongBuffer)->LongBuffer::: heap long buffer put
java.nio.HeapLongBuffer#compact()->LongBuffer::: heap long buffer compact
java.nio.HeapLongBuffer#order()->ByteOrder::: heap long buffer order
java.nio.HeapLongBufferR#slice()->LongBuffer::: heap long buffer r slice
java.nio.HeapLongBufferR#duplicate()->LongBuffer::: heap long buffer r duplicate
java.nio.HeapLongBufferR#asReadOnlyBuffer()->LongBuffer::: heap long buffer r as read only buffer
java.nio.HeapLongBufferR#isReadOnly()->boolean::: heap long buffer r is read only
java.nio.HeapLongBufferR#put(long)->LongBuffer::: heap long buffer r put
java.nio.HeapLongBufferR#put(int, long)->LongBuffer::: heap long buffer r put
java.nio.HeapLongBufferR#put(long[], int, int)->LongBuffer::: heap long buffer r put
java.nio.HeapLongBufferR#put(LongBuffer)->LongBuffer::: heap long buffer r put
java.nio.HeapLongBufferR#compact()->LongBuffer::: heap long buffer r compact
java.nio.HeapLongBufferR#order()->ByteOrder::: heap long buffer r order
java.nio.HeapShortBuffer#slice()->ShortBuffer::: heap short buffer slice
java.nio.HeapShortBuffer#duplicate()->ShortBuffer::: heap short buffer duplicate
java.nio.HeapShortBuffer#asReadOnlyBuffer()->ShortBuffer::: heap short buffer as read only buffer
java.nio.HeapShortBuffer#ix(int)->int::: heap short buffer ix
java.nio.HeapShortBuffer#get()->short::: heap short buffer get
java.nio.HeapShortBuffer#get(int)->short::: heap short buffer get
java.nio.HeapShortBuffer#get(short[], int, int)->ShortBuffer::: heap short buffer get
java.nio.HeapShortBuffer#isDirect()->boolean::: heap short buffer is direct
java.nio.HeapShortBuffer#isReadOnly()->boolean::: heap short buffer is read only
java.nio.HeapShortBuffer#put(short)->ShortBuffer::: heap short buffer put
java.nio.HeapShortBuffer#put(int, short)->ShortBuffer::: heap short buffer put
java.nio.HeapShortBuffer#put(short[], int, int)->ShortBuffer::: heap short buffer put
java.nio.HeapShortBuffer#put(ShortBuffer)->ShortBuffer::: heap short buffer put
java.nio.HeapShortBuffer#compact()->ShortBuffer::: heap short buffer compact
java.nio.HeapShortBuffer#order()->ByteOrder::: heap short buffer order
java.nio.HeapShortBufferR#slice()->ShortBuffer::: heap short buffer r slice
java.nio.HeapShortBufferR#duplicate()->ShortBuffer::: heap short buffer r duplicate
java.nio.HeapShortBufferR#asReadOnlyBuffer()->ShortBuffer::: heap short buffer r as read only buffer
java.nio.HeapShortBufferR#isReadOnly()->boolean::: heap short buffer r is read only
java.nio.HeapShortBufferR#put(short)->ShortBuffer::: heap short buffer r put
java.nio.HeapShortBufferR#put(int, short)->ShortBuffer::: heap short buffer r put
java.nio.HeapShortBufferR#put(short[], int, int)->ShortBuffer::: heap short buffer r put
java.nio.HeapShortBufferR#put(ShortBuffer)->ShortBuffer::: heap short buffer r put
java.nio.HeapShortBufferR#compact()->ShortBuffer::: heap short buffer r compact
java.nio.HeapShortBufferR#order()->ByteOrder::: heap short buffer r order
java.nio.IntBuffer#base()->Object::: int buffer base
java.nio.IntBuffer#allocate(int)->IntBuffer:::Allocates a new int buffer
java.nio.IntBuffer#wrap(int[], int, int)->IntBuffer:::Wraps an int array into a buffer
java.nio.IntBuffer#wrap(int[])->IntBuffer:::Wraps an int array into a buffer
java.nio.IntBuffer#slice()->IntBuffer:::Creates a new int buffer whose content is a shared subsequence of this buffer's content
java.nio.IntBuffer#duplicate()->IntBuffer:::Creates a new int buffer that shares this buffer's content
java.nio.IntBuffer#asReadOnlyBuffer()->IntBuffer:::Creates a new, read-only int buffer that shares this buffer's content
java.nio.IntBuffer#get()->int:::Relative get method
java.nio.IntBuffer#put(int)->IntBuffer:::Relative put method&nbsp;&nbsp;(optional operation)
java.nio.IntBuffer#get(int)->int:::Absolute get method
java.nio.IntBuffer#put(int, int)->IntBuffer:::Absolute put method&nbsp;&nbsp;(optional operation)
java.nio.IntBuffer#get(int[], int, int)->IntBuffer:::Relative bulk get method
java.nio.IntBuffer#get(int[])->IntBuffer:::Relative bulk get method
java.nio.IntBuffer#put(IntBuffer)->IntBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.IntBuffer#put(int[], int, int)->IntBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.IntBuffer#put(int[])->IntBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.IntBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible int array
java.nio.IntBuffer#array()->int[]:::Returns the int array that backs this buffer&nbsp;&nbsp;(optional operation)
java.nio.IntBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
java.nio.IntBuffer#position(int)->IntBuffer::: int buffer position
java.nio.IntBuffer#limit(int)->IntBuffer::: int buffer limit
java.nio.IntBuffer#mark()->IntBuffer::: int buffer mark
java.nio.IntBuffer#reset()->IntBuffer::: int buffer reset
java.nio.IntBuffer#clear()->IntBuffer::: int buffer clear
java.nio.IntBuffer#flip()->IntBuffer::: int buffer flip
java.nio.IntBuffer#rewind()->IntBuffer::: int buffer rewind
java.nio.IntBuffer#compact()->IntBuffer:::Compacts this buffer&nbsp;&nbsp;(optional operation)
java.nio.IntBuffer#isDirect()->boolean:::Tells whether or not this int buffer is direct.
java.nio.IntBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.IntBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.IntBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.IntBuffer#compareTo(IntBuffer)->int:::Compares this buffer to another
java.nio.IntBuffer#mismatch(IntBuffer)->int:::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
java.nio.IntBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.LongBuffer#base()->Object::: long buffer base
java.nio.LongBuffer#allocate(int)->LongBuffer:::Allocates a new long buffer
java.nio.LongBuffer#wrap(long[], int, int)->LongBuffer:::Wraps a long array into a buffer
java.nio.LongBuffer#wrap(long[])->LongBuffer:::Wraps a long array into a buffer
java.nio.LongBuffer#slice()->LongBuffer:::Creates a new long buffer whose content is a shared subsequence of this buffer's content
java.nio.LongBuffer#duplicate()->LongBuffer:::Creates a new long buffer that shares this buffer's content
java.nio.LongBuffer#asReadOnlyBuffer()->LongBuffer:::Creates a new, read-only long buffer that shares this buffer's content
java.nio.LongBuffer#get()->long:::Relative get method
java.nio.LongBuffer#put(long)->LongBuffer:::Relative put method&nbsp;&nbsp;(optional operation)
java.nio.LongBuffer#get(int)->long:::Absolute get method
java.nio.LongBuffer#put(int, long)->LongBuffer:::Absolute put method&nbsp;&nbsp;(optional operation)
java.nio.LongBuffer#get(long[], int, int)->LongBuffer:::Relative bulk get method
java.nio.LongBuffer#get(long[])->LongBuffer:::Relative bulk get method
java.nio.LongBuffer#put(LongBuffer)->LongBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.LongBuffer#put(long[], int, int)->LongBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.LongBuffer#put(long[])->LongBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.LongBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible long array
java.nio.LongBuffer#array()->long[]:::Returns the long array that backs this buffer&nbsp;&nbsp;(optional operation)
java.nio.LongBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
java.nio.LongBuffer#position(int)->LongBuffer::: long buffer position
java.nio.LongBuffer#limit(int)->LongBuffer::: long buffer limit
java.nio.LongBuffer#mark()->LongBuffer::: long buffer mark
java.nio.LongBuffer#reset()->LongBuffer::: long buffer reset
java.nio.LongBuffer#clear()->LongBuffer::: long buffer clear
java.nio.LongBuffer#flip()->LongBuffer::: long buffer flip
java.nio.LongBuffer#rewind()->LongBuffer::: long buffer rewind
java.nio.LongBuffer#compact()->LongBuffer:::Compacts this buffer&nbsp;&nbsp;(optional operation)
java.nio.LongBuffer#isDirect()->boolean:::Tells whether or not this long buffer is direct.
java.nio.LongBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.LongBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.LongBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.LongBuffer#compareTo(LongBuffer)->int:::Compares this buffer to another
java.nio.LongBuffer#mismatch(LongBuffer)->int:::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
java.nio.LongBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.MappedByteBuffer#isLoaded()->boolean:::Tells whether or not this buffer's content is resident in physical memory
java.nio.MappedByteBuffer#load()->MappedByteBuffer:::Loads this buffer's content into physical memory
java.nio.MappedByteBuffer#force()->MappedByteBuffer:::Forces any changes made to this buffer's content to be written to the storage device containing the mapped file
java.nio.MappedByteBuffer#position(int)->MappedByteBuffer::: mapped byte buffer position
java.nio.MappedByteBuffer#limit(int)->MappedByteBuffer::: mapped byte buffer limit
java.nio.MappedByteBuffer#mark()->MappedByteBuffer::: mapped byte buffer mark
java.nio.MappedByteBuffer#reset()->MappedByteBuffer::: mapped byte buffer reset
java.nio.MappedByteBuffer#clear()->MappedByteBuffer::: mapped byte buffer clear
java.nio.MappedByteBuffer#flip()->MappedByteBuffer::: mapped byte buffer flip
java.nio.MappedByteBuffer#rewind()->MappedByteBuffer::: mapped byte buffer rewind
java.nio.ShortBuffer#base()->Object::: short buffer base
java.nio.ShortBuffer#allocate(int)->ShortBuffer:::Allocates a new short buffer
java.nio.ShortBuffer#wrap(short[], int, int)->ShortBuffer:::Wraps a short array into a buffer
java.nio.ShortBuffer#wrap(short[])->ShortBuffer:::Wraps a short array into a buffer
java.nio.ShortBuffer#slice()->ShortBuffer:::Creates a new short buffer whose content is a shared subsequence of this buffer's content
java.nio.ShortBuffer#duplicate()->ShortBuffer:::Creates a new short buffer that shares this buffer's content
java.nio.ShortBuffer#asReadOnlyBuffer()->ShortBuffer:::Creates a new, read-only short buffer that shares this buffer's content
java.nio.ShortBuffer#get()->short:::Relative get method
java.nio.ShortBuffer#put(short)->ShortBuffer:::Relative put method&nbsp;&nbsp;(optional operation)
java.nio.ShortBuffer#get(int)->short:::Absolute get method
java.nio.ShortBuffer#put(int, short)->ShortBuffer:::Absolute put method&nbsp;&nbsp;(optional operation)
java.nio.ShortBuffer#get(short[], int, int)->ShortBuffer:::Relative bulk get method
java.nio.ShortBuffer#get(short[])->ShortBuffer:::Relative bulk get method
java.nio.ShortBuffer#put(ShortBuffer)->ShortBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.ShortBuffer#put(short[], int, int)->ShortBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.ShortBuffer#put(short[])->ShortBuffer:::Relative bulk put method&nbsp;&nbsp;(optional operation)
java.nio.ShortBuffer#hasArray()->boolean:::Tells whether or not this buffer is backed by an accessible short array
java.nio.ShortBuffer#array()->short[]:::Returns the short array that backs this buffer&nbsp;&nbsp;(optional operation)
java.nio.ShortBuffer#arrayOffset()->int:::Returns the offset within this buffer's backing array of the first element of the buffer&nbsp;&nbsp;(optional operation)
java.nio.ShortBuffer#position(int)->ShortBuffer::: short buffer position
java.nio.ShortBuffer#limit(int)->ShortBuffer::: short buffer limit
java.nio.ShortBuffer#mark()->ShortBuffer::: short buffer mark
java.nio.ShortBuffer#reset()->ShortBuffer::: short buffer reset
java.nio.ShortBuffer#clear()->ShortBuffer::: short buffer clear
java.nio.ShortBuffer#flip()->ShortBuffer::: short buffer flip
java.nio.ShortBuffer#rewind()->ShortBuffer::: short buffer rewind
java.nio.ShortBuffer#compact()->ShortBuffer:::Compacts this buffer&nbsp;&nbsp;(optional operation)
java.nio.ShortBuffer#isDirect()->boolean:::Tells whether or not this short buffer is direct.
java.nio.ShortBuffer#toString()->String:::Returns a string summarizing the state of this buffer.
java.nio.ShortBuffer#hashCode()->int:::Returns the current hash code of this buffer
java.nio.ShortBuffer#equals(Object)->boolean:::Tells whether or not this buffer is equal to another object
java.nio.ShortBuffer#compareTo(ShortBuffer)->int:::Compares this buffer to another
java.nio.ShortBuffer#mismatch(ShortBuffer)->int:::Finds and returns the relative index of the first mismatch between this buffer and a given buffer
java.nio.ShortBuffer#order()->ByteOrder:::Retrieves this buffer's byte order
java.nio.StringCharBuffer#slice()->CharBuffer::: string char buffer slice
java.nio.StringCharBuffer#duplicate()->CharBuffer::: string char buffer duplicate
java.nio.StringCharBuffer#asReadOnlyBuffer()->CharBuffer::: string char buffer as read only buffer
java.nio.StringCharBuffer#get()->char::: string char buffer get
java.nio.StringCharBuffer#get(int)->char::: string char buffer get
java.nio.StringCharBuffer#getUnchecked(int)->char::: string char buffer get unchecked
java.nio.StringCharBuffer#put(char)->CharBuffer::: string char buffer put
java.nio.StringCharBuffer#put(int, char)->CharBuffer::: string char buffer put
java.nio.StringCharBuffer#compact()->CharBuffer::: string char buffer compact
java.nio.StringCharBuffer#isReadOnly()->boolean::: string char buffer is read only
java.nio.StringCharBuffer#toString(int, int)->String::: string char buffer to string
java.nio.StringCharBuffer#subSequence(int, int)->CharBuffer::: string char buffer sub sequence
java.nio.StringCharBuffer#isDirect()->boolean::: string char buffer is direct
java.nio.StringCharBuffer#order()->ByteOrder::: string char buffer order
java.nio.StringCharBuffer#charRegionOrder()->ByteOrder::: string char buffer char region order
java.nio.StringCharBuffer#equals(Object)->boolean::: string char buffer equals
java.nio.StringCharBuffer#compareTo(CharBuffer)->int::: string char buffer compare to
