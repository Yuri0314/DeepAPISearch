com.sun.org.apache.xml.internal.security.signature.Manifest#addDocument(String, String, Transforms, String, String, String)->void:::This addDocument method is used to add a new resource to the signed info
com.sun.org.apache.xml.internal.security.signature.Manifest#generateDigestValues()->void:::The calculation of the DigestValues in the References must be after the References are already added to the document and during the signing process
com.sun.org.apache.xml.internal.security.signature.Manifest#getLength()->int:::Return the nonnegative number of added references.
com.sun.org.apache.xml.internal.security.signature.Manifest#item(int)->Reference:::Return the i^th reference
com.sun.org.apache.xml.internal.security.signature.Manifest#setId(String)->void:::Sets the Id attribute
com.sun.org.apache.xml.internal.security.signature.Manifest#getId()->String:::Returns the Id attribute
com.sun.org.apache.xml.internal.security.signature.Manifest#verifyReferences()->boolean:::Used to do a <A HREF="http://www.w3.org/TR/xmldsig-core/#def-ValidationReference">reference validation</A> of all enclosed references using the Reference#verify method
com.sun.org.apache.xml.internal.security.signature.Manifest#verifyReferences(boolean)->boolean:::Used to do a <A HREF="http://www.w3.org/TR/xmldsig-core/#def-ValidationReference">reference validation</A> of all enclosed references using the Reference#verify method
com.sun.org.apache.xml.internal.security.signature.Manifest#getVerificationResult(int)->boolean:::After verifying a Manifest or a SignedInfo using the Manifest#verifyReferences() or SignedInfo#verify() methods, the individual results can be retrieved with this method.
com.sun.org.apache.xml.internal.security.signature.Manifest#getVerificationResults()->List:::Get the list of verification result objects
com.sun.org.apache.xml.internal.security.signature.Manifest#addResourceResolver(ResourceResolver)->void:::Adds Resource Resolver for retrieving resources at specified URI attribute in reference element
com.sun.org.apache.xml.internal.security.signature.Manifest#addResourceResolver(ResourceResolverSpi)->void:::Adds Resource Resolver for retrieving resources at specified URI attribute in reference element
com.sun.org.apache.xml.internal.security.signature.Manifest#getPerManifestResolvers()->List:::Get the Per-Manifest Resolver List
com.sun.org.apache.xml.internal.security.signature.Manifest#getResolverProperties()->Map:::Get the resolver property map
com.sun.org.apache.xml.internal.security.signature.Manifest#setResolverProperty(String, String)->void:::Used to pass parameters like proxy servers etc to the ResourceResolver implementation.
com.sun.org.apache.xml.internal.security.signature.Manifest#getResolverProperty(String)->String:::Returns the value at specified key
com.sun.org.apache.xml.internal.security.signature.Manifest#getSignedContentItem(int)->byte[]:::Method getSignedContentItem
com.sun.org.apache.xml.internal.security.signature.Manifest#getReferencedContentBeforeTransformsItem(int)->XMLSignatureInput:::Method getReferencedContentPriorTransformsItem
com.sun.org.apache.xml.internal.security.signature.Manifest#getReferencedContentAfterTransformsItem(int)->XMLSignatureInput:::Method getReferencedContentAfterTransformsItem
com.sun.org.apache.xml.internal.security.signature.Manifest#getSignedContentLength()->int:::Method getSignedContentLength
com.sun.org.apache.xml.internal.security.signature.Manifest#getBaseLocalName()->String:::Method getBaseLocalName  
com.sun.org.apache.xml.internal.security.signature.Manifest#isSecureValidation()->boolean::: manifest is secure validation
com.sun.org.apache.xml.internal.security.signature.MissingResourceFailureException#setReference(Reference)->void:::used to set the uninitialized com.sun.org.apache.xml.internal.security.signature.Reference
com.sun.org.apache.xml.internal.security.signature.MissingResourceFailureException#getReference()->Reference:::used to get the uninitialized com.sun.org.apache.xml.internal.security.signature.Reference  This allows to supply the correct com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput to the com.sun.org.apache.xml.internal.security.signature.Reference to try again verification.
com.sun.org.apache.xml.internal.security.signature.NodeFilter#isNodeInclude(Node)->int:::Tells if a node must be output in c14n.
com.sun.org.apache.xml.internal.security.signature.NodeFilter#isNodeIncludeDO(Node, int)->int:::Tells if a node must be output in a c14n
com.sun.org.apache.xml.internal.security.signature.ObjectContainer#setId(String)->void:::Sets the Id attribute
com.sun.org.apache.xml.internal.security.signature.ObjectContainer#getId()->String:::Returns the Id attribute
com.sun.org.apache.xml.internal.security.signature.ObjectContainer#setMimeType(String)->void:::Sets the MimeType attribute
com.sun.org.apache.xml.internal.security.signature.ObjectContainer#getMimeType()->String:::Returns the MimeType attribute
com.sun.org.apache.xml.internal.security.signature.ObjectContainer#setEncoding(String)->void:::Sets the Encoding attribute
com.sun.org.apache.xml.internal.security.signature.ObjectContainer#getEncoding()->String:::Returns the Encoding attribute
com.sun.org.apache.xml.internal.security.signature.ObjectContainer#appendChild(Node)->Node:::Adds child Node
com.sun.org.apache.xml.internal.security.signature.ObjectContainer#getBaseLocalName()->String::: object container get base local name
com.sun.org.apache.xml.internal.security.signature.Reference#getMessageDigestAlgorithm()->MessageDigestAlgorithm:::Returns MessageDigestAlgorithm
com.sun.org.apache.xml.internal.security.signature.Reference#setURI(String)->void:::Sets the URI of this Reference element
com.sun.org.apache.xml.internal.security.signature.Reference#getURI()->String:::Returns the URI of this Reference element
com.sun.org.apache.xml.internal.security.signature.Reference#setId(String)->void:::Sets the Id attribute of this Reference element
com.sun.org.apache.xml.internal.security.signature.Reference#getId()->String:::Returns the Id attribute of this Reference element
com.sun.org.apache.xml.internal.security.signature.Reference#setType(String)->void:::Sets the type atttibute of the Reference indicate whether an ds:Object, ds:SignatureProperty, or ds:Manifest element.
com.sun.org.apache.xml.internal.security.signature.Reference#getType()->String:::Return the type atttibute of the Reference indicate whether an ds:Object, ds:SignatureProperty, or ds:Manifest element
com.sun.org.apache.xml.internal.security.signature.Reference#typeIsReferenceToObject()->boolean:::Method isReferenceToObject  This returns true if the Type attribute of the Reference element points to a #Object element
com.sun.org.apache.xml.internal.security.signature.Reference#typeIsReferenceToManifest()->boolean:::Method isReferenceToManifest  This returns true if the Type attribute of the Reference element points to a #Manifest element
com.sun.org.apache.xml.internal.security.signature.Reference#generateDigestValue()->void:::Method generateDigestValue
com.sun.org.apache.xml.internal.security.signature.Reference#getContentsBeforeTransformation()->XMLSignatureInput:::Returns the XMLSignatureInput which is created by de-referencing the URI attribute.
com.sun.org.apache.xml.internal.security.signature.Reference#getContentsAfterTransformation()->XMLSignatureInput:::Returns the XMLSignatureInput which is the result of the Transforms.
com.sun.org.apache.xml.internal.security.signature.Reference#getNodesetBeforeFirstCanonicalization()->XMLSignatureInput:::This method returns the XMLSignatureInput which represents the node set before some kind of canonicalization is applied for the first time.
com.sun.org.apache.xml.internal.security.signature.Reference#getHTMLRepresentation()->String:::Method getHTMLRepresentation
com.sun.org.apache.xml.internal.security.signature.Reference#getTransformsOutput()->XMLSignatureInput:::This method only works after a call to verify.
com.sun.org.apache.xml.internal.security.signature.Reference#getReferenceData()->ReferenceData:::Get the ReferenceData that corresponds to the cached representation of the dereferenced object before transformation.
com.sun.org.apache.xml.internal.security.signature.Reference#dereferenceURIandPerformTransforms(OutputStream)->XMLSignatureInput:::This method returns the XMLSignatureInput which is referenced by the URI Attribute.
com.sun.org.apache.xml.internal.security.signature.Reference#getTransforms()->Transforms:::Method getTransforms
com.sun.org.apache.xml.internal.security.signature.Reference#getReferencedBytes()->byte[]:::Method getReferencedBytes
com.sun.org.apache.xml.internal.security.signature.Reference#getDigestValue()->byte[]:::Returns the digest value.
com.sun.org.apache.xml.internal.security.signature.Reference#verify()->boolean:::Tests reference validation is success or false
com.sun.org.apache.xml.internal.security.signature.Reference#getBaseLocalName()->String:::Method getBaseLocalName 
com.sun.org.apache.xml.internal.security.signature.SignatureProperties#getLength()->int:::Return the nonnegative number of added SignatureProperty elements.
com.sun.org.apache.xml.internal.security.signature.SignatureProperties#item(int)->SignatureProperty:::Return the i^th SignatureProperty
com.sun.org.apache.xml.internal.security.signature.SignatureProperties#setId(String)->void:::Sets the Id attribute
com.sun.org.apache.xml.internal.security.signature.SignatureProperties#getId()->String:::Returns the Id attribute
com.sun.org.apache.xml.internal.security.signature.SignatureProperties#addSignatureProperty(SignatureProperty)->void:::Method addSignatureProperty
com.sun.org.apache.xml.internal.security.signature.SignatureProperties#getBaseLocalName()->String::: signature properties get base local name
com.sun.org.apache.xml.internal.security.signature.SignatureProperty#setId(String)->void:::  Sets the id attribute
com.sun.org.apache.xml.internal.security.signature.SignatureProperty#getId()->String:::Returns the id attribute
com.sun.org.apache.xml.internal.security.signature.SignatureProperty#setTarget(String)->void:::Sets the target attribute
com.sun.org.apache.xml.internal.security.signature.SignatureProperty#getTarget()->String:::Returns the target attribute
com.sun.org.apache.xml.internal.security.signature.SignatureProperty#appendChild(Node)->Node:::Method appendChild
com.sun.org.apache.xml.internal.security.signature.SignatureProperty#getBaseLocalName()->String::: signature property get base local name
com.sun.org.apache.xml.internal.security.signature.SignedInfo#verify()->boolean:::Tests core validation process
com.sun.org.apache.xml.internal.security.signature.SignedInfo#verify(boolean)->boolean:::Tests core validation process
com.sun.org.apache.xml.internal.security.signature.SignedInfo#getCanonicalizedOctetStream()->byte[]:::Returns getCanonicalizedOctetStream
com.sun.org.apache.xml.internal.security.signature.SignedInfo#signInOctetStream(OutputStream)->void:::Output the C14n stream to the given OutputStream.
com.sun.org.apache.xml.internal.security.signature.SignedInfo#getCanonicalizationMethodURI()->String:::Returns the Canonicalization method URI
com.sun.org.apache.xml.internal.security.signature.SignedInfo#getSignatureMethodURI()->String:::Returns the Signature method URI
com.sun.org.apache.xml.internal.security.signature.SignedInfo#getSignatureMethodElement()->Element:::Method getSignatureMethodElement
com.sun.org.apache.xml.internal.security.signature.SignedInfo#createSecretKey(byte[])->SecretKey:::Creates a SecretKey for the appropriate Mac algorithm based on a byte[] array password.
com.sun.org.apache.xml.internal.security.signature.SignedInfo#getSignatureAlgorithm()->SignatureAlgorithm::: signed info get signature algorithm
com.sun.org.apache.xml.internal.security.signature.SignedInfo#getBaseLocalName()->String:::Method getBaseLocalName 
com.sun.org.apache.xml.internal.security.signature.SignedInfo#getInclusiveNamespaces()->String::: signed info get inclusive namespaces
com.sun.org.apache.xml.internal.security.signature.VerifiedReference#isValid()->boolean::: verified reference is valid
com.sun.org.apache.xml.internal.security.signature.VerifiedReference#getUri()->String::: verified reference get uri
com.sun.org.apache.xml.internal.security.signature.VerifiedReference#getManifestReferences()->List::: verified reference get manifest references
com.sun.org.apache.xml.internal.security.signature.XMLSignature#setId(String)->void:::Sets the Id attribute
com.sun.org.apache.xml.internal.security.signature.XMLSignature#getId()->String:::Returns the Id attribute
com.sun.org.apache.xml.internal.security.signature.XMLSignature#getSignedInfo()->SignedInfo:::Returns the completely parsed SignedInfo object.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#getSignatureValue()->byte[]:::Returns the octet value of the SignatureValue element
com.sun.org.apache.xml.internal.security.signature.XMLSignature#getKeyInfo()->KeyInfo:::Returns the KeyInfo child
com.sun.org.apache.xml.internal.security.signature.XMLSignature#appendObject(ObjectContainer)->void:::Appends an Object (not a java.lang.Object but an Object element) to the Signature
com.sun.org.apache.xml.internal.security.signature.XMLSignature#getObjectItem(int)->ObjectContainer:::Returns the ith ds:Object child of the signature or null if no such ds:Object element exists.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#getObjectLength()->int:::Returns the number of all ds:Object elements.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#sign(Key)->void:::Digests all References in the SignedInfo, calculates the signature value and sets it in the SignatureValue Element.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#addResourceResolver(ResourceResolver)->void:::Adds a ResourceResolver to enable the retrieval of resources.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#addResourceResolver(ResourceResolverSpi)->void:::Adds a ResourceResolverSpi to enable the retrieval of resources.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#checkSignatureValue(X509Certificate)->boolean:::Extracts the public key from the certificate and verifies if the signature is valid by re-digesting all References, comparing those against the stored DigestValues and then checking to see if the Signatures match on the SignedInfo.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#checkSignatureValue(Key)->boolean:::Verifies if the signature is valid by redigesting all References, comparing those against the stored DigestValues and then checking to see if the Signatures match on the SignedInfo.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#addDocument(String, Transforms, String, String, String)->void:::Add a Reference with full parameters to this Signature
com.sun.org.apache.xml.internal.security.signature.XMLSignature#addDocument(String, Transforms, String)->void:::This method is a proxy method for the Manifest#addDocument method.
com.sun.org.apache.xml.internal.security.signature.XMLSignature#addDocument(String, Transforms)->void:::Adds a Reference with just the URI and the transforms
com.sun.org.apache.xml.internal.security.signature.XMLSignature#addDocument(String)->void:::Add a Reference with just this URI
com.sun.org.apache.xml.internal.security.signature.XMLSignature#addKeyInfo(X509Certificate)->void:::Add an X509 Certificate to the KeyInfo
com.sun.org.apache.xml.internal.security.signature.XMLSignature#addKeyInfo(PublicKey)->void:::Add this public key to the KeyInfo
com.sun.org.apache.xml.internal.security.signature.XMLSignature#createSecretKey(byte[])->SecretKey:::Proxy method for SignedInfo#createSecretKey(byte[])
com.sun.org.apache.xml.internal.security.signature.XMLSignature#setFollowNestedManifests(boolean)->void:::Signal whether Manifest should be automatically validated
com.sun.org.apache.xml.internal.security.signature.XMLSignature#getBaseLocalName()->String:::Get the local name of this element
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isNeedsToBeExpanded()->boolean:::Check if the structure needs to be expanded.
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#setNeedsToBeExpanded(boolean)->void:::Set if the structure needs to be expanded.
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getNodeSet()->Set:::Returns the node set from input which was specified as the parameter of XMLSignatureInput constructor
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getInputNodeSet()->Set:::Get the Input NodeSet.
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getNodeSet(boolean)->Set:::Returns the node set from input which was specified as the parameter of XMLSignatureInput constructor
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getOctetStream()->InputStream:::Returns the Octet stream(byte Stream) from input which was specified as the parameter of XMLSignatureInput constructor
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getOctetStreamReal()->InputStream::: signature input get octet stream real
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getBytes()->byte[]:::Returns the byte array from input which was specified as the parameter of XMLSignatureInput constructor
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isNodeSet()->boolean:::Determines if the object has been set up with a Node set
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isElement()->boolean:::Determines if the object has been set up with an Element
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isOctetStream()->boolean:::Determines if the object has been set up with an octet stream
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isOutputStreamSet()->boolean:::Determines if #setOutputStream has been called with a non-null OutputStream.
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isByteArray()->boolean:::Determines if the object has been set up with a ByteArray
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isPreCalculatedDigest()->boolean:::Determines if the object has been set up with a pre-calculated digest.
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isInitialized()->boolean:::Is the object correctly set up?
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getMIMEType()->String:::Returns mimeType
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#setMIMEType(String)->void:::Sets mimeType
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getSourceURI()->String:::Return SourceURI
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#setSourceURI(String)->void:::Sets SourceURI
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#toString()->String:::Method toString 
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getHTMLRepresentation()->String:::Method getHTMLRepresentation
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getHTMLRepresentation(Set)->String:::Method getHTMLRepresentation
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getExcludeNode()->Node:::Gets the exclude node of this XMLSignatureInput
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#setExcludeNode(Node)->void:::Sets the exclude node of this XMLSignatureInput
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getSubNode()->Node:::Gets the node of this XMLSignatureInput
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isExcludeComments()->boolean::: signature input is exclude comments
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#setExcludeComments(boolean)->void::: signature input set exclude comments
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#updateOutputStream(OutputStream)->void::: signature input update output stream
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#updateOutputStream(OutputStream, boolean)->void::: signature input update output stream
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#setOutputStream(OutputStream)->void::: signature input set output stream
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#addNodeFilter(NodeFilter)->void::: signature input add node filter
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getNodeFilters()->List::: signature input get node filters
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#setNodeSet(boolean)->void::: signature input set node set
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#convertToNodes()->void::: signature input convert to nodes
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#isSecureValidation()->boolean::: signature input is secure validation
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#setSecureValidation(boolean)->void::: signature input set secure validation
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInput#getPreCalculatedDigest()->String::: signature input get pre calculated digest
com.sun.org.apache.xml.internal.security.signature.XMLSignatureInputDebugger#getHTMLRepresentation()->String:::Method getHTMLRepresentation
