ECDSAUtils#convertASN1toXMLDSIG(byte[]):::Converts an ASN.1 ECDSA value to a XML Signature ECDSA Value:::if->throw->new->IOException->offset->if->else->if->else->throw->new->IOException->rLength->i->for->sLength->j->for->rawLen->Math->max->if->throw->new->IOException->xmldsigBytes->new->byteArr->System->arraycopy->System->arraycopy->return
ECDSAUtils#convertXMLDSIGtoASN1(byte[]):::Converts a XML Signature ECDSA Value to an ASN.1 DSA value:::rawLen->i->for->j->if->k->for->l->if->len->if->throw->new->IOException->offset->asn1Bytes->if->new->byteArr->else->new->byteArr->System->arraycopy->System->arraycopy->return
ECDSAUtils#getOIDFromPublicKey(ECPublicKey)::: utils get from public key:::ecParameterSpec->ecPublicKey->getParams->order->ecParameterSpec->getOrder->affineX->ecParameterSpec->getGenerator->getAffineX->affineY->ecParameterSpec->getGenerator->getAffineY->a->ecParameterSpec->getCurve->getA->b->ecParameterSpec->getCurve->getB->h->ecParameterSpec->getCofactor->ecField->ecParameterSpec->getCurve->getField->field->if->ecFieldFp->ecFieldFp->getP->else->ecFieldF2m->ecFieldF2m->getReductionPolynomial->ecCurveDefinitionIterator->ecCurveDefinitions->iterator->while->ecCurveDefinitionIterator->hasNext->ecCurveDefinition->ecCurveDefinitionIterator->next->oid->ecCurveDefinition->equals->if->return->return
ECDSAUtils#getECCurveDefinition(String)::: utils get curve definition:::ecCurveDefinitionIterator->ecCurveDefinitions->iterator->while->ecCurveDefinitionIterator->hasNext->ecCurveDefinition->ecCurveDefinitionIterator->next->if->ecCurveDefinition->getOid->equals->return->return
ECDSAUtils.ECCurveDefinition#equals(BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, int):::returns the ec oid if parameter are equal to this definition:::if->field->toString->equals->a->toString->equals->b->toString->equals->x->toString->equals->y->toString->equals->n->toString->equals->return->return
ECDSAUtils.ECCurveDefinition#getName()::: curve definition get name:::return
ECDSAUtils.ECCurveDefinition#getOid()::: curve definition get oid:::return
ECDSAUtils.ECCurveDefinition#getField()::: curve definition get field:::return
ECDSAUtils.ECCurveDefinition#getA()::: curve definition get a:::return
ECDSAUtils.ECCurveDefinition#getB()::: curve definition get b:::return
ECDSAUtils.ECCurveDefinition#getX()::: curve definition get x:::return
ECDSAUtils.ECCurveDefinition#getY()::: curve definition get y:::return
ECDSAUtils.ECCurveDefinition#getN()::: curve definition get n:::return
ECDSAUtils.ECCurveDefinition#getH()::: curve definition get h:::return
ECDSAUtils#encodePoint(ECPoint, EllipticCurve)::: utils encode point:::size->ellipticCurve->getField->getFieldSize->affineXBytes->ecPoint->getAffineX->toByteArray->stripLeadingZeros->affineYBytes->ecPoint->getAffineY->toByteArray->stripLeadingZeros->encodedBytes->new->byteArr->System->arraycopy->System->arraycopy->return
ECDSAUtils#decodePoint(byte[], EllipticCurve)::: utils decode point:::if->throw->new->IllegalArgumentException->size->elliptiCcurve->getField->getFieldSize->affineXBytes->new->byteArr->affineYBytes->new->byteArr->System->arraycopy->System->arraycopy->return->new->BigInteger->new->BigInteger->new->ECPoint
ECDSAUtils#stripLeadingZeros(byte[])::: utils strip leading zeros:::i->for->if->return->else->stripped->new->byteArr->System->arraycopy->return
IntegrityHmac#engineGetURI():::Method engineGetURI  :::
IntegrityHmac#getDigestLength():::Returns the output length of the hash/digest.:::
IntegrityHmac#engineSetParameter(AlgorithmParameterSpec):::Proxy method for java.security.Signature#setParameter( java.security.spec.AlgorithmParameterSpec) which is executed on the internal java.security.Signature object.:::throw->new->ObjectArr->new->XMLSignatureException
IntegrityHmac#reset()::: integrity hmac reset:::reset
IntegrityHmac#engineVerify(byte[]):::Proxy method for java.security.Signature#verify(byte[]) which is executed on the internal java.security.Signature object.:::try->if->getDigestLength->LOG->getDigestLength->debug->exArgs->String->getDigestLength->valueOf->throw->new->XMLSignatureException->else->completeResult->doFinal->return->MessageDigestAlgorithm->isEqual->catch->throw->new->XMLSignatureException->finally
IntegrityHmac#engineInitVerify(Key):::Proxy method for java.security.Signature#initVerify(java.security.PublicKey) which is executed on the internal java.security.Signature object.:::if->supplied->if->secretKey->getClass->getName->needed->getName->exArgs->throw->new->XMLSignatureException->try->init->catch->mac->try->Mac->macAlgorithm->getAlgorithm->getInstance->catch->LOG->debug->finally->throw->new->XMLSignatureException->finally
IntegrityHmac#engineSign():::Proxy method for java.security.Signature#sign() which is executed on the internal java.security.Signature object.:::try->if->getDigestLength->LOG->getDigestLength->debug->exArgs->String->getDigestLength->valueOf->throw->new->XMLSignatureException->else->return->doFinal->catch->throw->new->XMLSignatureException->finally
IntegrityHmac#engineInitSign(Key):::Method engineInitSign:::engineInitSign
IntegrityHmac#engineInitSign(Key, AlgorithmParameterSpec):::Method engineInitSign:::if->supplied->if->secretKey->getClass->getName->needed->getName->exArgs->throw->new->XMLSignatureException->try->if->init->else->init->catch->throw->new->XMLSignatureException->throw->new->XMLSignatureException->finally
IntegrityHmac#engineInitSign(Key, SecureRandom):::Method engineInitSign:::throw->new->XMLSignatureException
IntegrityHmac#engineUpdate(byte[]):::Proxy method for java.security.Signature#update(byte[]) which is executed on the internal java.security.Signature object.:::try->update->catch->throw->new->XMLSignatureException->finally
IntegrityHmac#engineUpdate(byte):::Proxy method for java.security.Signature#update(byte) which is executed on the internal java.security.Signature object.:::try->update->catch->throw->new->XMLSignatureException->finally
IntegrityHmac#engineUpdate(byte[], int, int):::Proxy method for java.security.Signature#update(byte[], int, int) which is executed on the internal java.security.Signature object.:::try->update->catch->throw->new->XMLSignatureException->finally
IntegrityHmac#engineGetJCEAlgorithmString():::Method engineGetJCEAlgorithmString :::return->getAlgorithm
IntegrityHmac#engineGetJCEProviderName():::Method engineGetJCEAlgorithmString  :::return->getProvider->getName
IntegrityHmac#engineSetHMACOutputLength(int):::Method engineSetHMACOutputLength:::
IntegrityHmac#engineGetContextFromElement(Element):::Method engineGetContextFromElement:::super->engineGetContextFromElement->if->throw->new->IllegalArgumentException->n->XMLUtils->element->getFirstChild->selectDsNode->if->hmacLength->XMLUtils->getFullTextChildrenFromNode->if->equals->Integer->parseInt
IntegrityHmac#engineAddContextToElement(Element):::Method engineAddContextToElement:::if->throw->new->IllegalArgumentException->if->doc->element->getOwnerDocument->HMElem->XMLUtils->createElementInSignatureSpace->HMText->doc->createTextNode->HMElem->appendChild->XMLUtils->addReturnToElement->element->appendChild->XMLUtils->addReturnToElement
IntegrityHmac.IntegrityHmacSHA1#engineGetURI():::Method engineGetURI :::return
IntegrityHmac.IntegrityHmacSHA1#getDigestLength()::: integrity hmac a1 get digest length:::return
IntegrityHmac.IntegrityHmacSHA224#engineGetURI():::Method engineGetURI  :::return
IntegrityHmac.IntegrityHmacSHA224#getDigestLength()::: integrity hmac a224 get digest length:::return
IntegrityHmac.IntegrityHmacSHA256#engineGetURI():::Method engineGetURI  :::return
IntegrityHmac.IntegrityHmacSHA256#getDigestLength()::: integrity hmac a256 get digest length:::return
IntegrityHmac.IntegrityHmacSHA384#engineGetURI():::Method engineGetURI :::return
IntegrityHmac.IntegrityHmacSHA384#getDigestLength()::: integrity hmac a384 get digest length:::return
IntegrityHmac.IntegrityHmacSHA512#engineGetURI():::Method engineGetURI :::return
IntegrityHmac.IntegrityHmacSHA512#getDigestLength()::: integrity hmac a512 get digest length:::return
IntegrityHmac.IntegrityHmacRIPEMD160#engineGetURI():::Method engineGetURI  :::return
IntegrityHmac.IntegrityHmacRIPEMD160#getDigestLength()::: integrity hmac d160 get digest length:::return
IntegrityHmac.IntegrityHmacMD5#engineGetURI():::Method engineGetURI  :::return
IntegrityHmac.IntegrityHmacMD5#getDigestLength()::: integrity hmac d5 get digest length:::return
SignatureBaseRSA#engineGetURI()::: signature base a engine get i:::
SignatureBaseRSA#engineSetParameter(AlgorithmParameterSpec)::: signature base a engine set parameter:::try->setParameter->catch->throw->new->XMLSignatureException->finally
SignatureBaseRSA#engineVerify(byte[])::: signature base a engine verify:::try->return->verify->catch->throw->new->XMLSignatureException->finally
SignatureBaseRSA#engineInitVerify(Key)::: signature base a engine init verify:::if->supplied->if->publicKey->getClass->getName->needed->getName->exArgs->throw->new->XMLSignatureException->try->initVerify->catch->sig->try->Signature->signatureAlgorithm->getAlgorithm->getInstance->catch->LOG->debug->finally->throw->new->XMLSignatureException->finally
SignatureBaseRSA#engineSign()::: signature base a engine sign:::try->return->sign->catch->throw->new->XMLSignatureException->finally
SignatureBaseRSA#engineInitSign(Key, SecureRandom)::: signature base a engine init sign:::if->supplied->if->privateKey->getClass->getName->needed->getName->exArgs->throw->new->XMLSignatureException->try->if->initSign->else->initSign->catch->throw->new->XMLSignatureException->finally
SignatureBaseRSA#engineInitSign(Key)::: signature base a engine init sign:::engineInitSign
SignatureBaseRSA#engineUpdate(byte[])::: signature base a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureBaseRSA#engineUpdate(byte)::: signature base a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureBaseRSA#engineUpdate(byte[], int, int)::: signature base a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureBaseRSA#engineGetJCEAlgorithmString()::: signature base a engine get algorithm string:::return->getAlgorithm
SignatureBaseRSA#engineGetJCEProviderName()::: signature base a engine get provider name:::return->getProvider->getName
SignatureBaseRSA#engineSetHMACOutputLength(int)::: signature base a engine set output length:::throw->new->XMLSignatureException
SignatureBaseRSA#engineInitSign(Key, AlgorithmParameterSpec)::: signature base a engine init sign:::throw->new->XMLSignatureException
SignatureBaseRSA.SignatureRSASHA1#engineGetURI()::: signature a1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA224#engineGetURI()::: signature a224 engine get i:::return
SignatureBaseRSA.SignatureRSASHA256#engineGetURI()::: signature a256 engine get i:::return
SignatureBaseRSA.SignatureRSASHA384#engineGetURI()::: signature a384 engine get i:::return
SignatureBaseRSA.SignatureRSASHA512#engineGetURI()::: signature a512 engine get i:::return
SignatureBaseRSA.SignatureRSARIPEMD160#engineGetURI()::: signature d160 engine get i:::return
SignatureBaseRSA.SignatureRSAMD5#engineGetURI()::: signature d5 engine get i:::return
SignatureBaseRSA.SignatureRSASHA1MGF1#engineGetURI()::: signature a1 f1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA224MGF1#engineGetURI()::: signature a224 f1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA256MGF1#engineGetURI()::: signature a256 f1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA384MGF1#engineGetURI()::: signature a384 f1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA512MGF1#engineGetURI()::: signature a512 f1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA3_224MGF1#engineGetURI()::: signature a3_224 f1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA3_256MGF1#engineGetURI()::: signature a3_256 f1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA3_384MGF1#engineGetURI()::: signature a3_384 f1 engine get i:::return
SignatureBaseRSA.SignatureRSASHA3_512MGF1#engineGetURI()::: signature a3_512 f1 engine get i:::return
SignatureDSA#engineGetURI():::Method engineGetURI  :::return
SignatureDSA#engineSetParameter(AlgorithmParameterSpec)::: signature a engine set parameter:::try->setParameter->catch->throw->new->XMLSignatureException->finally
SignatureDSA#engineVerify(byte[])::: signature a engine verify:::try->if->LOG->isDebugEnabled->LOG->XMLUtils->encodeToString->debug->jcebytes->JavaUtils->convertDsaXMLDSIGtoASN1->return->verify->catch->throw->new->XMLSignatureException->throw->new->XMLSignatureException->finally
SignatureDSA#engineInitVerify(Key)::: signature a engine init verify:::if->supplied->if->publicKey->getClass->getName->needed->getName->exArgs->throw->new->XMLSignatureException->try->initVerify->catch->sig->try->Signature->signatureAlgorithm->getAlgorithm->getInstance->catch->LOG->debug->finally->throw->new->XMLSignatureException->finally->getParams->getQ->bitLength
SignatureDSA#engineSign()::: signature a engine sign:::try->jcebytes->sign->return->JavaUtils->convertDsaASN1toXMLDSIG->catch->throw->new->XMLSignatureException->throw->new->XMLSignatureException->finally
SignatureDSA#engineInitSign(Key, SecureRandom)::: signature a engine init sign:::if->supplied->if->privateKey->getClass->getName->needed->getName->exArgs->throw->new->XMLSignatureException->try->if->initSign->else->initSign->catch->throw->new->XMLSignatureException->finally->getParams->getQ->bitLength
SignatureDSA#engineInitSign(Key)::: signature a engine init sign:::engineInitSign
SignatureDSA#engineUpdate(byte[])::: signature a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureDSA#engineUpdate(byte)::: signature a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureDSA#engineUpdate(byte[], int, int)::: signature a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureDSA#engineGetJCEAlgorithmString():::Method engineGetJCEAlgorithmString  :::return->getAlgorithm
SignatureDSA#engineGetJCEProviderName():::Method engineGetJCEProviderName  :::return->getProvider->getName
SignatureDSA#engineSetHMACOutputLength(int):::Method engineSetHMACOutputLength:::throw->new->XMLSignatureException
SignatureDSA#engineInitSign(Key, AlgorithmParameterSpec):::Method engineInitSign:::throw->new->XMLSignatureException
SignatureDSA.SHA256#engineGetURI()::: a256 engine get i:::return
SignatureECDSA#engineGetURI()::: signature a engine get i:::
SignatureECDSA#convertASN1toXMLDSIG(byte[]):::Converts an ASN.1 ECDSA value to a XML Signature ECDSA Value:::return->ECDSAUtils->convertASN1toXMLDSIG
SignatureECDSA#convertXMLDSIGtoASN1(byte[]):::Converts a XML Signature ECDSA Value to an ASN.1 DSA value:::return->ECDSAUtils->convertXMLDSIGtoASN1
SignatureECDSA#engineSetParameter(AlgorithmParameterSpec)::: signature a engine set parameter:::try->setParameter->catch->throw->new->XMLSignatureException->finally
SignatureECDSA#engineVerify(byte[])::: signature a engine verify:::try->jcebytes->SignatureECDSA->convertXMLDSIGtoASN1->if->LOG->isDebugEnabled->LOG->XMLUtils->encodeToString->debug->return->verify->catch->throw->new->XMLSignatureException->throw->new->XMLSignatureException->finally
SignatureECDSA#engineInitVerify(Key)::: signature a engine init verify:::if->supplied->if->publicKey->getClass->getName->needed->getName->exArgs->throw->new->XMLSignatureException->try->initVerify->catch->sig->try->Signature->signatureAlgorithm->getAlgorithm->getInstance->catch->LOG->debug->finally->throw->new->XMLSignatureException->finally
SignatureECDSA#engineSign()::: signature a engine sign:::try->jcebytes->sign->return->SignatureECDSA->convertASN1toXMLDSIG->catch->throw->new->XMLSignatureException->throw->new->XMLSignatureException->finally
SignatureECDSA#engineInitSign(Key, SecureRandom)::: signature a engine init sign:::if->supplied->if->privateKey->getClass->getName->needed->getName->exArgs->throw->new->XMLSignatureException->try->if->initSign->else->initSign->catch->throw->new->XMLSignatureException->finally
SignatureECDSA#engineInitSign(Key)::: signature a engine init sign:::engineInitSign
SignatureECDSA#engineUpdate(byte[])::: signature a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureECDSA#engineUpdate(byte)::: signature a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureECDSA#engineUpdate(byte[], int, int)::: signature a engine update:::try->update->catch->throw->new->XMLSignatureException->finally
SignatureECDSA#engineGetJCEAlgorithmString()::: signature a engine get algorithm string:::return->getAlgorithm
SignatureECDSA#engineGetJCEProviderName()::: signature a engine get provider name:::return->getProvider->getName
SignatureECDSA#engineSetHMACOutputLength(int)::: signature a engine set output length:::throw->new->XMLSignatureException
SignatureECDSA#engineInitSign(Key, AlgorithmParameterSpec)::: signature a engine init sign:::throw->new->XMLSignatureException
SignatureECDSA.SignatureECDSASHA1#engineGetURI()::: signature a1 engine get i:::return
SignatureECDSA.SignatureECDSASHA224#engineGetURI()::: signature a224 engine get i:::return
SignatureECDSA.SignatureECDSASHA256#engineGetURI()::: signature a256 engine get i:::return
SignatureECDSA.SignatureECDSASHA384#engineGetURI()::: signature a384 engine get i:::return
SignatureECDSA.SignatureECDSASHA512#engineGetURI()::: signature a512 engine get i:::return
SignatureECDSA.SignatureECDSARIPEMD160#engineGetURI()::: signature d160 engine get i:::return
