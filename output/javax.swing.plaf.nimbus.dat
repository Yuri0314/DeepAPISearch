AbstractRegionPainter#getExtendedCacheKeys(JComponent):::Get any extra attributes which the painter implementation would like to include in the image cache lookups:::return
AbstractRegionPainter#getPaintContext():::Gets the PaintContext for this painting operation:::
AbstractRegionPainter#configureGraphics(Graphics2D):::Configures the given Graphics2D:::g->setRenderingHint
AbstractRegionPainter#doPaint(Graphics2D, JComponent, int, int, Object[]):::Actually performs the painting operation:::
AbstractRegionPainter#decodeX(float):::Decodes and returns a float value representing the actual pixel location for the given encoded X value.:::if->return->else->if->return->else->if->return->else->throw->new->IllegalArgumentException
AbstractRegionPainter#decodeY(float):::Decodes and returns a float value representing the actual pixel location for the given encoded y value.:::if->return->else->if->return->else->if->return->else->throw->new->IllegalArgumentException
AbstractRegionPainter#decodeAnchorX(float, float):::Decodes and returns a float value representing the actual pixel location for the anchor point given the encoded X value of the control point, and the offset distance to the anchor from that control point.:::if->return->decodeX->else->if->return->decodeX->else->if->return->decodeX->else->throw->new->IllegalArgumentException
AbstractRegionPainter#decodeAnchorY(float, float):::Decodes and returns a float value representing the actual pixel location for the anchor point given the encoded Y value of the control point, and the offset distance to the anchor from that control point.:::if->return->decodeY->else->if->return->decodeY->else->if->return->decodeY->else->throw->new->IllegalArgumentException
AbstractRegionPainter#decodeColor(String, float, float, float, int):::Decodes and returns a color, which is derived from a base color in UI defaults.:::if->UIManager->getLookAndFeel->laf->UIManager->getLookAndFeel->return->laf->getDerivedColor->else->return->Color->getHSBColor
AbstractRegionPainter#decodeColor(Color, Color, float):::Decodes and returns a color, which is derived from a offset between two other colors.:::return->NimbusLookAndFeel->deriveARGB->new->Color
AbstractRegionPainter#decodeGradient(float, float, float, float, float[], Color[]):::Given parameters for creating a LinearGradientPaint, this method will create and return a linear gradient paint:::if->return->new->LinearGradientPaint
AbstractRegionPainter#decodeRadialGradient(float, float, float, float[], Color[]):::Given parameters for creating a RadialGradientPaint, this method will create and return a radial gradient paint:::if->return->new->RadialGradientPaint
AbstractRegionPainter#getComponentColor(JComponent, String, Color, float, float, int):::Get a color property from the given JComponent:::color->if->if->equals->c->getBackground->else->if->equals->c->getForeground->else->if->equals->getSelectionForeground->else->if->equals->getSelectionBackground->else->if->equals->getSelectionForeground->else->if->equals->getSelectionBackground->else->s->Character->property->charAt->toUpperCase->property->substring->try->method->MethodUtil->c->getClass->getMethod->MethodUtil->invoke->catch->finally->if->value->c->getClientProperty->if->if->return->else->if->tmp->Color->color->getRed->color->getGreen->color->getBlue->RGBtoHSB->clamp->clamp->alpha->color->getAlpha->clamp->return->Color->HSBtoRGB->new->Color->else->return
DerivedColor#rederiveColor():::Recalculate the derived color from the UIManager parent color and offsets:::src->UIManager->getColor->if->tmp->Color->src->getRed->src->getGreen->src->getBlue->RGBtoHSB->clamp->clamp->clamp->alpha->src->getAlpha->clamp->Color->HSBtoRGB->else->tmp->new->floatArr->clamp->clamp->clamp->alpha->clamp->Color->HSBtoRGB
DerivedColor#getRGB():::Returns the RGB value representing the color in the default sRGB java.awt.image.ColorModel:::return
DerivedColor#toString():::Returns a string representation of this Color:::src->UIManager->getColor->s->getRed->getGreen->getBlue->getHueOffset->getSaturationOffset->getBrightnessOffset->getAlphaOffset->return->src->getRed->src->getGreen->src->getBlue
DropShadowEffect#getEffectType():::Get the type of this effect, one of UNDER,BLENDED,OVER:::return
DropShadowEffect#applyEffect(BufferedImage, BufferedImage, int, int):::Apply the effect to the src image generating the result :::if->src->getType->throw->new->IllegalArgumentException->if->dst->getType->throw->new->IllegalArgumentException->trangleAngle->Math->toRadians->offsetX->Math->sin->offsetY->Math->cos->tmpOffX->tmpOffY->tmpW->tmpH->lineBuf->getArrayCache->getTmpIntArray->tmpBuf1->getArrayCache->getTmpByteArray1->Arrays->fill->tmpBuf2->getArrayCache->getTmpByteArray2->srcRaster->src->getRaster->for->y->kernel->EffectUtils->createGaussianKernel->EffectUtils->blur->EffectUtils->blur->spread->Math->min->for->i->if->new->BufferedImage->shadowRaster->dst->getRaster->red->color->getRed->green->color->getGreen->blue->color->getBlue->for->y->return
Effect#getEffectType():::Get the type of this effect, one of UNDER,BLENDED,OVER:::
Effect#getOpacity():::Get the opacity to use to paint the result effected image if the EffectType is UNDER or OVER.:::
Effect#applyEffect(BufferedImage, BufferedImage, int, int):::Apply the effect to the src image generating the result :::
EffectUtils#clearImage(BufferedImage):::Clear a transparent image to 100% transparent:::g2->img->createGraphics->g2->setComposite->g2->img->getWidth->img->getHeight->fillRect->g2->dispose
EffectUtils#gaussianBlur(BufferedImage, BufferedImage, int):::Apply Gaussian Blur to Image:::width->src->getWidth->height->src->getHeight->if->dst->getWidth->dst->getHeight->src->getType->dst->getType->createColorModelCompatibleImage->kernel->createGaussianKernel->if->src->getType->srcPixels->new->intArr->dstPixels->new->intArr->getPixels->blur->blur->setPixels->else->if->src->getType->srcPixels->new->byteArr->dstPixels->new->byteArr->getPixels->blur->blur->setPixels->else->throw->src->getType->new->IllegalArgumentException->return
EffectUtils#blur(byte[], byte[], int, int, float[], int):::Blurs the source pixels into the destination pixels:::p->cp->for->y
EffectUtils#getPixels(BufferedImage, int, int, int, int, byte[]):::Returns an array of pixels, stored as integers, from a BufferedImage:::if->return->new->byteArr->if->new->byteArr->else->if->throw->new->IllegalArgumentException->imageType->img->getType->if->raster->img->getRaster->return->raster->getDataElements->else->throw->new->IllegalArgumentException
EffectUtils#setPixels(BufferedImage, int, int, int, int, byte[]):::Writes a rectangular area of pixels in the destination BufferedImage:::if->return->else->if->throw->new->IllegalArgumentException->imageType->img->getType->if->raster->img->getRaster->raster->setDataElements->else->throw->new->IllegalArgumentException
EffectUtils#getPixels(BufferedImage, int, int, int, int, int[]):::Returns an array of pixels, stored as integers, from a BufferedImage:::if->return->new->intArr->if->new->intArr->else->if->throw->new->IllegalArgumentException->imageType->img->getType->if->raster->img->getRaster->return->raster->getDataElements->return->img->getRGB
EffectUtils#setPixels(BufferedImage, int, int, int, int, int[]):::Writes a rectangular area of pixels in the destination BufferedImage:::if->return->else->if->throw->new->IllegalArgumentException->imageType->img->getType->if->raster->img->getRaster->raster->setDataElements->else->img->setRGB
EffectUtils#createColorModelCompatibleImage(BufferedImage):::Returns a new BufferedImage using the same color model as the image passed as a parameter:::cm->image->getColorModel->return->cm->image->getWidth->image->getHeight->createCompatibleWritableRaster->cm->isAlphaPremultiplied->new->BufferedImage
EffectUtils#createCompatibleTranslucentImage(int, int):::Returns a new translucent compatible image of the specified width and height:::return->isHeadless->new->BufferedImage->getGraphicsConfiguration->createCompatibleImage
ImageCache#getInstance():::Get static singleton instance:::return
ImageCache#flush():::Clear the cache:::lock->readLock->lock->try->map->clear->catch->finally->lock->readLock->unlock
ImageCache#isImageCachable(int, int):::Check if the image size is to big to be stored in the cache:::return
ImageCache#getImage(GraphicsConfiguration, int, int, Object...):::Get the cached image for given keys:::lock->readLock->lock->try->ref->map->hash->get->if->ref->equals->return->ref->get->else->return->catch->finally->lock->readLock->unlock
ImageCache#setImage(Image, GraphicsConfiguration, int, int, Object...):::Sets the cached image for the specified constraints.:::if->isImageCachable->return->hash->hash->lock->writeLock->lock->try->ref->map->get->if->ref->get->return->if->map->remove->newPixelCount->image->getWidth->image->getHeight->if->while->referenceQueue->poll->map->remove->if->mapIter->map->entrySet->iterator->while->mapIter->hasNext->entry->mapIter->next->mapIter->remove->img->entry->getValue->get->if->img->flush->entry->getValue->map->new->PixelCountSoftReference->put->return->catch->finally->lock->writeLock->unlock
ImageScalingHelper#paint(Graphics, int, int, int, int, Image, Insets, Insets, PaintType, int):::Paints using the algorightm specified by paintType.:::if->image->getWidth->image->getHeight->return->if->if->iw->image->getWidth->ih->image->getHeight->if->g->drawImage->else->if->lastIY->for->yCounter->maxY->else->st->sl->sb->sr->dt->dl->db->dr->if->Math->max->if->Math->max->if->Math->max->if->Math->max->stretch->if->if->drawChunk->if->drawImage->if->drawChunk->if->drawImage->if->drawChunk->if->drawImage->if->drawChunk->if->drawImage->if->drawImage
InnerShadowEffect#getEffectType():::Get the type of this effect, one of UNDER,BLENDED,OVER:::return
InnerShadowEffect#applyEffect(BufferedImage, BufferedImage, int, int):::Apply the effect to the src image generating the result :::if->src->getType->throw->new->IllegalArgumentException->if->dst->getType->throw->new->IllegalArgumentException->trangleAngle->Math->toRadians->offsetX->Math->sin->offsetY->Math->cos->tmpOffX->tmpOffY->tmpW->tmpH->lineBuf->getArrayCache->getTmpIntArray->srcAlphaBuf->getArrayCache->getTmpByteArray1->Arrays->fill->tmpBuf1->getArrayCache->getTmpByteArray2->tmpBuf2->getArrayCache->getTmpByteArray3->srcRaster->src->getRaster->for->y->kernel->EffectUtils->createGaussianKernel->EffectUtils->blur->EffectUtils->blur->spread->Math->min->for->i->if->new->BufferedImage->shadowRaster->dst->getRaster->red->color->getRed->green->color->getGreen->blue->color->getBlue->for->y->return
LoweredBorder#doPaint(Graphics2D, JComponent, int, int, Object[]):::Actually performs the painting operation:::color->c->getBackground->img1->new->BufferedImage->img2->new->BufferedImage->g2->img1->getGraphics->g2->setRenderingHint->g2->setColor->g2->fillRoundRect->g2->dispose->effect->new->InnerShadowEffect->effect->setDistance->effect->setSize->effect->getLighter->setColor->effect->setAngle->effect->applyEffect->img2->getGraphics->g2->setRenderingHint->g2->setClip->g2->getLighter->setColor->g2->drawRoundRect->g2->dispose->if->ImageScalingHelper->paint->else->g->drawImage
LoweredBorder#getPaintContext():::Gets the PaintContext for this painting operation:::return
LoweredBorder#getBorderInsets(Component):::Returns the insets of the border.:::return->INSETS->clone
LoweredBorder#isBorderOpaque():::Returns whether or not the border is opaque:::return
LoweredBorder#paintBorder(Component, Graphics, int, int, int, int):::Paints the border for the specified component with the specified position and size.:::comp->if->g2->g2->translate->paint->g2->translate->else->img->new->BufferedImage->g2->img->getGraphics->paint->g2->dispose->ImageScalingHelper->paint
NimbusDefaults#initialize():::Called by UIManager when this look and feel is installed.:::UIManager->addPropertyChangeListener->UIManager->getDefaults->addPropertyChangeListener
NimbusDefaults#uninitialize():::Called by UIManager when this look and feel is uninstalled.:::UIManager->removePropertyChangeListener->UIManager->getDefaults->removePropertyChangeListener
NimbusDefaults#initializeDefaults(UIDefaults):::Called from NimbusLookAndFeel to initialize the UIDefaults.:::addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->addColor->d->new->FontUIResource->put->d->new->DerivedFont->put->addColor->addColor->addColor->d->put->d->put->d->new->InsetsUIResource->put->d->Integer->valueOf->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->addColor->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->put->d->new->ComboBoxEditableState->put->d->put->d->put->d->put->d->put->d->put->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->ComboBoxArrowButtonEditableState->put->d->Integer->valueOf->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->addColor->addColor->addColor->addColor->d->new->InsetsUIResource->put->addColor->addColor->addColor->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->put->d->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->d->new->DimensionUIResource->put->d->new->InsetsUIResource->put->d->put->d->new->InternalFrameWindowFocusedState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->InternalFrameTitlePaneWindowFocusedState->put->d->put->addColor->d->new->InsetsUIResource->put->d->put->d->new->InternalFrameTitlePaneMenuButtonWindowNotFocusedState->put->d->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->d->put->d->new->InternalFrameTitlePaneIconifyButtonWindowNotFocusedState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->InternalFrameTitlePaneMaximizeButtonWindowNotFocusedState->put->d->new->InternalFrameTitlePaneMaximizeButtonWindowMaximizedState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->InternalFrameTitlePaneCloseButtonWindowNotFocusedState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->d->new->InsetsUIResource->put->d->put->addColor->d->put->d->put->d->BorderFactory->createEmptyBorder->new->BorderUIResource->put->d->new->Insets->new->PainterBorder->new->BorderUIResource->put->addColor->addColor->addColor->addColor->addColor->d->new->InsetsUIResource->put->d->put->addColor->addColor->addColor->addColor->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->Integer->valueOf->put->addColor->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->addColor->d->new->InsetsUIResource->put->d->Integer->valueOf->put->addColor->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->addColor->d->new->InsetsUIResource->put->d->Integer->valueOf->put->addColor->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->addColor->d->new->InsetsUIResource->put->d->Integer->valueOf->put->addColor->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->addColor->d->new->InsetsUIResource->put->d->put->d->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->put->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->d->put->d->new->InsetsUIResource->put->d->put->d->new->ProgressBarIndeterminateState->put->d->new->ProgressBarFinishedState->put->d->put->d->Integer->valueOf->put->d->put->d->put->d->new->DimensionUIResource->put->d->new->DimensionUIResource->put->d->Integer->valueOf->put->d->new->DimensionUIResource->put->d->Integer->valueOf->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->Integer->valueOf->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->Integer->valueOf->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->new->DimensionUIResource->put->d->new->DimensionUIResource->put->d->new->InsetsUIResource->put->d->Integer->valueOf->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->InsetsUIResource->put->d->put->d->new->SliderArrowShapeState->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->put->addColor->d->new->InsetsUIResource->put->d->put->d->new->SliderThumbArrowShapeState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->SliderTrackArrowShapeState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->Integer->valueOf->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->Integer->valueOf->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->SplitPaneVerticalState->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->put->d->Integer->valueOf->put->d->put->d->put->d->new->InsetsUIResource->put->d->put->d->new->SplitPaneDividerVerticalState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->put->d->put->addColor->addColor->addColor->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->InsetsUIResource->put->d->put->addColor->addColor->d->put->d->new->DimensionUIResource->put->addColor->d->put->d->put->d->BorderFactory->createEmptyBorder->new->BorderUIResource->put->d->new->Insets->new->PainterBorder->new->BorderUIResource->put->addColor->addColor->addColor->addColor->addColor->d->new->InsetsUIResource->put->d->put->addColor->d->new->InsetsUIResource->put->d->put->d->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->d->put->d->put->d->new->TableHeaderRendererSortedState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->InsetsUIResource->put->d->put->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->InsetsUIResource->put->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->new->TextAreaNotInScrollPaneState->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->d->put->d->new->ToolBarNorthState->put->d->new->ToolBarEastState->put->d->new->ToolBarWestState->put->d->new->ToolBarSouthState->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->d->new->InsetsUIResource->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->d->put->addColor->addColor->addColor->d->put->d->Integer->valueOf->put->d->Integer->valueOf->put->d->put->d->put->d->put->d->put->d->put->d->Integer->valueOf->put->d->new->InsetsUIResource->put->addColor->addColor->addColor->d->new->InsetsUIResource->put->addColor->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->InsetsUIResource->put->addColor->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->Insets->new->Dimension->new->LazyPainter->put->d->new->NimbusIcon->put->d->new->InsetsUIResource->put->d->put->addColor
NimbusDefaults#register(Region, String):::Registers the given region and prefix:::if->throw->new->IllegalArgumentException->styles->m->get->if->new->LinkedList<LazyStyle>->styles->new->LazyStyle->add->m->put->else->foreach->if->prefix->equals->return->styles->new->LazyStyle->add->registeredRegions->region->getName->put
NimbusDefaults#getStyle(JComponent, Region):::Locate the style associated with the given region, and component:::if->throw->new->IllegalArgumentException->styles->m->get->if->styles->size->return->foundStyle->foreach->if->s->matches->if->return->foundStyle->getStyle
NimbusDefaults#getDerivedColor(String, float, float, float, int, boolean):::Get a derived color, derived colors are shared instances and will be updated when its parent UIDefault color changes.:::return->getDerivedColor
NimbusIcon#paintIcon(Component, Graphics, int, int):::Implements the standard Icon interface's paintIcon method as the standard synth stub passes null for the context and this will cause us to not paint any thing, so we override here so that we can paint the enabled state if no synth context is available:::painter->UIManager->get->paintFilter->if->jc->gfx->gfx->translate->painter->paint->gfx->translate
NimbusLookAndFeel#initialize():::Called by UIManager when this look and feel is installed.:::super->initialize->defaults->initialize->new->SynthStyleFactory->setStyleFactory
NimbusLookAndFeel#uninitialize():::Called by UIManager when this look and feel is uninstalled.:::super->uninitialize->defaults->uninitialize->ImageCache->getInstance->flush->UIManager->getDefaults->removePropertyChangeListener
NimbusLookAndFeel#getStyle(JComponent, Region):::Gets the style associated with the given component and region:::return->SynthLookAndFeel->getStyle
NimbusLookAndFeel#getName():::Return a short string that identifies this look and feel:::return
NimbusLookAndFeel#getID():::Return a string that identifies this look and feel:::return
NimbusLookAndFeel#getDescription():::Returns a textual description of this look and feel.:::return
NimbusLookAndFeel#shouldUpdateStyleOnEvent(PropertyChangeEvent):::Overridden to return {@code true when one of the following properties change: <ul>   <li>"Nimbus.Overrides"   <li>"Nimbus.Overrides.InheritDefaults"   <li>"JComponent.sizeVariant" </ul>:::eName->ev->getPropertyName->if->c->ev->getSource->defaults->clearOverridesCache->return->return->super->shouldUpdateStyleOnEvent
NimbusLookAndFeel#register(Region, String):::Registers a third party component with the NimbusLookAndFeel.  Regions represent Components and areas within Components that act as independent painting areas:::defaults->register
NimbusLookAndFeel#getDerivedColor(String, float, float, float, int, boolean):::Get a derived color, derived colors are shared instances and is color value will change when its parent UIDefault color changes.:::return->defaults->getDerivedColor
NimbusLookAndFeel#getDerivedColor(Color, Color, float, boolean):::Decodes and returns a color, which is derived from an offset between two other colors.:::argb->deriveARGB->if->return->new->ColorUIResource->else->return->new->Color
NimbusLookAndFeel#getDerivedColor(Color, Color, float):::Decodes and returns a color, which is derived from a offset between two other colors.:::return->getDerivedColor
NimbusLookAndFeel#resolveToolbarConstraint(JToolBar):::Package private method which returns either BorderLayout.NORTH, BorderLayout.SOUTH, BorderLayout.EAST, or BorderLayout.WEST depending on the location of the toolbar in its parent:::if->parent->toolbar->getParent->if->m->parent->getLayout->if->b->con->b->getConstraints->if->return->return->return
NimbusLookAndFeel#deriveARGB(Color, Color, float):::Derives the ARGB value for a color based on an offset between two other colors.:::r->color1->getRed->Math->color2->getRed->color1->getRed->round->g->color1->getGreen->Math->color2->getGreen->color1->getGreen->round->b->color1->getBlue->Math->color2->getBlue->color1->getBlue->round->a->color1->getAlpha->Math->color2->getAlpha->color1->getAlpha->round->return
NimbusStyle#installDefaults(SynthContext):::  Overridden to cause this style to populate itself with data from UIDefaults, if necessary.:::validate->super->installDefaults
NimbusStyle#getInsets(SynthContext, Insets):::  Overridden to cause this style to populate itself with data from UIDefaults, if necessary.:::if->new->Insets->v->getValues->if->return->else->scaleKey->ctx->getComponent->getClientProperty->if->if->LARGE_KEY->equals->else->if->SMALL_KEY->equals->else->if->MINI_KEY->equals->return
NimbusStyle#getColorForState(SynthContext, ColorType):::  Overridden to cause this style to populate itself with data from UIDefaults, if necessary.  In addition, NimbusStyle handles ColorTypes slightly differently from Synth. <ul>  <li>ColorType.BACKGROUND will equate to the color stored in UIDefaults      named "background".</li>  <li>ColorType.TEXT_BACKGROUND will equate to the color stored in      UIDefaults named "textBackground".</li>  <li>ColorType.FOREGROUND will equate to the color stored in UIDefaults      named "textForeground".</li>  <li>ColorType.TEXT_FOREGROUND will equate to the color stored in      UIDefaults named "textForeground".</li> </ul>:::key->if->else->if->else->if->else->if->else->if->else->if->type->toString->else->return->c->get->if->return
NimbusStyle#getFontForState(SynthContext):::  Overridden to cause this style to populate itself with data from UIDefaults, if necessary:::f->get->if->UIManager->getFont->scaleKey->ctx->getComponent->getClientProperty->if->if->LARGE_KEY->equals->f->Math->f->getSize2D->round->deriveFont->else->if->SMALL_KEY->equals->f->Math->f->getSize2D->round->deriveFont->else->if->MINI_KEY->equals->f->Math->f->getSize2D->round->deriveFont->return
NimbusStyle#getPainter(SynthContext):::  Returns the SynthPainter for this style, which ends up delegating to the Painters installed in this style.:::return
NimbusStyle#isOpaque(SynthContext):::  Overridden to cause this style to populate itself with data from UIDefaults, if necessary:::if->ctx->getComponent->getName->equals->return->opaque->get->return
NimbusStyle#get(SynthContext, Object):::  Overridden to cause this style to populate itself with data from UIDefaults, if necessary.  Properties in UIDefaults may be specified in a chained manner:::v->getValues->fullKey->key->toString->partialKey->fullKey->fullKey->indexOf->substring->obj->xstate->getExtendedState->tmpKey->init->get->wasInCache->if->s->lastIndex->new->intArr->while->getNextState->get->if->get->if->UIManager->get->if->partialKey->equals->super->get->new->CacheKey->put->return
NimbusStyle#getBackgroundPainter(SynthContext):::Gets the appropriate background Painter, if there is one, for the state specified in the given SynthContext:::v->getValues->xstate->getExtendedState->p->tmpKey->init->get->paintFilter->if->return->s->lastIndex->new->intArr->while->getNextState->if->paintFilter->break->if->get->paintFilter->if->new->CacheKey->put->return
NimbusStyle#getForegroundPainter(SynthContext):::Gets the appropriate foreground Painter, if there is one, for the state specified in the given SynthContext:::v->getValues->xstate->getExtendedState->p->tmpKey->init->get->paintFilter->if->return->s->lastIndex->new->intArr->while->getNextState->if->paintFilter->break->if->get->paintFilter->if->new->CacheKey->put->return
NimbusStyle#getBorderPainter(SynthContext):::Gets the appropriate border Painter, if there is one, for the state specified in the given SynthContext:::v->getValues->xstate->getExtendedState->p->tmpKey->init->get->paintFilter->if->return->s->lastIndex->new->intArr->while->getNextState->if->paintFilter->break->if->get->paintFilter->if->new->CacheKey->put->return
State#isInState(T, int):::This is the main entry point, called by NimbusStyle.  There are both custom states and standard states:::return->isInState
State#isInState(T):::Gets whether the specified JComponent is in the custom state represented by this class:::
SynthPainterImpl#paintArrowButtonBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of an arrow button:::if->context->getComponent->getComponentOrientation->isLeftToRight->paintBackground->else->transform->new->AffineTransform->transform->translate->transform->scale->transform->translate->paintBackground
SynthPainterImpl#paintArrowButtonBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of an arrow button:::paintBorder
SynthPainterImpl#paintArrowButtonForeground(SynthContext, Graphics, int, int, int, int, int):::Paints the foreground of an arrow button:::compName->context->getComponent->getName->ltr->context->getComponent->getComponentOrientation->isLeftToRight->if->equals->equals->if->paintForeground->else->transform->new->AffineTransform->transform->translate->transform->scale->paintForeground->else->if->paintForeground->else->if->if->transform->new->AffineTransform->transform->scale->transform->Math->toRadians->rotate->paintForeground->else->transform->new->AffineTransform->transform->Math->toRadians->rotate->transform->translate->paintForeground->else->if->transform->new->AffineTransform->transform->translate->transform->scale->paintForeground->else->if->if->transform->new->AffineTransform->transform->Math->toRadians->rotate->transform->translate->paintForeground->else->transform->new->AffineTransform->transform->scale->transform->Math->toRadians->rotate->transform->translate->paintForeground
SynthPainterImpl#paintButtonBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a button.:::paintBackground
SynthPainterImpl#paintButtonBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a button.:::paintBorder
SynthPainterImpl#paintCheckBoxMenuItemBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a check box menu item.:::paintBackground
SynthPainterImpl#paintCheckBoxMenuItemBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a check box menu item.:::paintBorder
SynthPainterImpl#paintCheckBoxBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a check box.:::paintBackground
SynthPainterImpl#paintCheckBoxBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a check box.:::paintBorder
SynthPainterImpl#paintColorChooserBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a color chooser.:::paintBackground
SynthPainterImpl#paintColorChooserBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a color chooser.:::paintBorder
SynthPainterImpl#paintComboBoxBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a combo box.:::if->context->getComponent->getComponentOrientation->isLeftToRight->paintBackground->else->transform->new->AffineTransform->transform->translate->transform->scale->transform->translate->paintBackground
SynthPainterImpl#paintComboBoxBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a combo box.:::paintBorder
SynthPainterImpl#paintDesktopIconBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a desktop icon.:::paintBackground
SynthPainterImpl#paintDesktopIconBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a desktop icon.:::paintBorder
SynthPainterImpl#paintDesktopPaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a desktop pane.:::paintBackground
SynthPainterImpl#paintDesktopPaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the background of a desktop pane.:::paintBorder
SynthPainterImpl#paintEditorPaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of an editor pane.:::paintBackground
SynthPainterImpl#paintEditorPaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of an editor pane.:::paintBorder
SynthPainterImpl#paintFileChooserBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a file chooser.:::paintBackground
SynthPainterImpl#paintFileChooserBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a file chooser.:::paintBorder
SynthPainterImpl#paintFormattedTextFieldBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a formatted text field.:::if->context->getComponent->getComponentOrientation->isLeftToRight->paintBackground->else->transform->new->AffineTransform->transform->translate->transform->scale->transform->translate->paintBackground
SynthPainterImpl#paintFormattedTextFieldBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a formatted text field.:::if->context->getComponent->getComponentOrientation->isLeftToRight->paintBorder->else->transform->new->AffineTransform->transform->translate->transform->scale->transform->translate->paintBorder
SynthPainterImpl#paintInternalFrameTitlePaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of an internal frame title pane.:::paintBackground
SynthPainterImpl#paintInternalFrameTitlePaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of an internal frame title pane.:::paintBorder
SynthPainterImpl#paintInternalFrameBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of an internal frame.:::paintBackground
SynthPainterImpl#paintInternalFrameBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of an internal frame.:::paintBorder
SynthPainterImpl#paintLabelBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a label.:::paintBackground
SynthPainterImpl#paintLabelBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a label.:::paintBorder
SynthPainterImpl#paintListBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a list.:::paintBackground
SynthPainterImpl#paintListBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a list.:::paintBorder
SynthPainterImpl#paintMenuBarBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a menu bar.:::paintBackground
SynthPainterImpl#paintMenuBarBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a menu bar.:::paintBorder
SynthPainterImpl#paintMenuItemBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a menu item.:::paintBackground
SynthPainterImpl#paintMenuItemBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a menu item.:::paintBorder
SynthPainterImpl#paintMenuBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a menu.:::paintBackground
SynthPainterImpl#paintMenuBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a menu.:::paintBorder
SynthPainterImpl#paintOptionPaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of an option pane.:::paintBackground
SynthPainterImpl#paintOptionPaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of an option pane.:::paintBorder
SynthPainterImpl#paintPanelBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a panel.:::paintBackground
SynthPainterImpl#paintPanelBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a panel.:::paintBorder
SynthPainterImpl#paintPasswordFieldBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a password field.:::paintBackground
SynthPainterImpl#paintPasswordFieldBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a password field.:::paintBorder
SynthPainterImpl#paintPopupMenuBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a popup menu.:::paintBackground
SynthPainterImpl#paintPopupMenuBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a popup menu.:::paintBorder
SynthPainterImpl#paintProgressBarBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a progress bar.:::paintBackground
SynthPainterImpl#paintProgressBarBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of a progress bar:::paintBackground
SynthPainterImpl#paintProgressBarBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a progress bar.:::paintBorder
SynthPainterImpl#paintProgressBarBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of a progress bar:::paintBorder
SynthPainterImpl#paintProgressBarForeground(SynthContext, Graphics, int, int, int, int, int):::Paints the foreground of a progress bar:::paintForeground
SynthPainterImpl#paintRadioButtonMenuItemBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a radio button menu item.:::paintBackground
SynthPainterImpl#paintRadioButtonMenuItemBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a radio button menu item.:::paintBorder
SynthPainterImpl#paintRadioButtonBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a radio button.:::paintBackground
SynthPainterImpl#paintRadioButtonBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a radio button.:::paintBorder
SynthPainterImpl#paintRootPaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a root pane.:::paintBackground
SynthPainterImpl#paintRootPaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a root pane.:::paintBorder
SynthPainterImpl#paintScrollBarBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a scrollbar.:::paintBackground
SynthPainterImpl#paintScrollBarBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of a scrollbar:::paintBackground
SynthPainterImpl#paintScrollBarBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a scrollbar.:::paintBorder
SynthPainterImpl#paintScrollBarBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of a scrollbar:::paintBorder
SynthPainterImpl#paintScrollBarThumbBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of the thumb of a scrollbar:::paintBackground
SynthPainterImpl#paintScrollBarThumbBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of the thumb of a scrollbar:::paintBorder
SynthPainterImpl#paintScrollBarTrackBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the track of a scrollbar:::paintBackground
SynthPainterImpl#paintScrollBarTrackBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of the track of a scrollbar:::paintBackground
SynthPainterImpl#paintScrollBarTrackBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of the track of a scrollbar:::paintBorder
SynthPainterImpl#paintScrollBarTrackBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of the track of a scrollbar:::paintBorder
SynthPainterImpl#paintScrollPaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a scroll pane.:::paintBackground
SynthPainterImpl#paintScrollPaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a scroll pane.:::paintBorder
SynthPainterImpl#paintSeparatorBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a separator.:::paintBackground
SynthPainterImpl#paintSeparatorBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of a separator:::paintBackground
SynthPainterImpl#paintSeparatorBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a separator.:::paintBorder
SynthPainterImpl#paintSeparatorBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of a separator:::paintBorder
SynthPainterImpl#paintSeparatorForeground(SynthContext, Graphics, int, int, int, int, int):::Paints the foreground of a separator.:::paintForeground
SynthPainterImpl#paintSliderBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a slider.:::paintBackground
SynthPainterImpl#paintSliderBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of a slider:::paintBackground
SynthPainterImpl#paintSliderBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a slider.:::paintBorder
SynthPainterImpl#paintSliderBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of a slider:::paintBorder
SynthPainterImpl#paintSliderThumbBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of the thumb of a slider.:::if->context->getComponent->getClientProperty->if->else->paintBackground->else->paintBackground
SynthPainterImpl#paintSliderThumbBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of the thumb of a slider.:::paintBorder
SynthPainterImpl#paintSliderTrackBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the track of a slider.:::paintBackground
SynthPainterImpl#paintSliderTrackBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of the track of a slider:::paintBackground
SynthPainterImpl#paintSliderTrackBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of the track of a slider.:::paintBorder
SynthPainterImpl#paintSliderTrackBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of the track of a slider:::paintBorder
SynthPainterImpl#paintSpinnerBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a spinner.:::paintBackground
SynthPainterImpl#paintSpinnerBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a spinner.:::paintBorder
SynthPainterImpl#paintSplitPaneDividerBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the divider of a split pane.:::paintBackground
SynthPainterImpl#paintSplitPaneDividerBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of the divider of a split pane:::if->transform->new->AffineTransform->transform->scale->transform->Math->toRadians->rotate->paintBackground->else->paintBackground
SynthPainterImpl#paintSplitPaneDividerForeground(SynthContext, Graphics, int, int, int, int, int):::Paints the foreground of the divider of a split pane.:::paintForeground
SynthPainterImpl#paintSplitPaneDragDivider(SynthContext, Graphics, int, int, int, int, int):::Paints the divider, when the user is dragging the divider, of a split pane.:::paintBackground
SynthPainterImpl#paintSplitPaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a split pane.:::paintBackground
SynthPainterImpl#paintSplitPaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a split pane.:::paintBorder
SynthPainterImpl#paintTabbedPaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a tabbed pane.:::paintBackground
SynthPainterImpl#paintTabbedPaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a tabbed pane.:::paintBorder
SynthPainterImpl#paintTabbedPaneTabAreaBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the area behind the tabs of a tabbed pane.:::paintBackground
SynthPainterImpl#paintTabbedPaneTabAreaBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of the area behind the tabs of a tabbed pane:::if->transform->new->AffineTransform->transform->scale->transform->Math->toRadians->rotate->paintBackground->else->if->transform->new->AffineTransform->transform->Math->toRadians->rotate->transform->translate->paintBackground->else->if->transform->new->AffineTransform->transform->translate->transform->scale->transform->translate->paintBackground->else->paintBackground
SynthPainterImpl#paintTabbedPaneTabAreaBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of the area behind the tabs of a tabbed pane.:::paintBorder
SynthPainterImpl#paintTabbedPaneTabAreaBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of the area behind the tabs of a tabbed pane:::paintBorder
SynthPainterImpl#paintTabbedPaneTabBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of a tab of a tabbed pane.:::paintBackground
SynthPainterImpl#paintTabbedPaneTabBackground(SynthContext, Graphics, int, int, int, int, int, int):::Paints the background of a tab of a tabbed pane:::if->transform->new->AffineTransform->transform->scale->transform->Math->toRadians->rotate->paintBackground->else->if->transform->new->AffineTransform->transform->Math->toRadians->rotate->transform->translate->paintBackground->else->if->transform->new->AffineTransform->transform->translate->transform->scale->transform->translate->paintBackground->else->paintBackground
SynthPainterImpl#paintTabbedPaneTabBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of a tab of a tabbed pane.:::paintBorder
SynthPainterImpl#paintTabbedPaneTabBorder(SynthContext, Graphics, int, int, int, int, int, int):::Paints the border of a tab of a tabbed pane:::paintBorder
SynthPainterImpl#paintTabbedPaneContentBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the area that contains the content of the selected tab of a tabbed pane.:::paintBackground
SynthPainterImpl#paintTabbedPaneContentBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of the area that contains the content of the selected tab of a tabbed pane.:::paintBorder
SynthPainterImpl#paintTableHeaderBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the header of a table.:::paintBackground
SynthPainterImpl#paintTableHeaderBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of the header of a table.:::paintBorder
SynthPainterImpl#paintTableBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a table.:::paintBackground
SynthPainterImpl#paintTableBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a table.:::paintBorder
SynthPainterImpl#paintTextAreaBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a text area.:::paintBackground
SynthPainterImpl#paintTextAreaBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a text area.:::paintBorder
SynthPainterImpl#paintTextPaneBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a text pane.:::paintBackground
SynthPainterImpl#paintTextPaneBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a text pane.:::paintBorder
SynthPainterImpl#paintTextFieldBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a text field.:::if->context->getComponent->getComponentOrientation->isLeftToRight->paintBackground->else->transform->new->AffineTransform->transform->translate->transform->scale->transform->translate->paintBackground
SynthPainterImpl#paintTextFieldBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a text field.:::if->context->getComponent->getComponentOrientation->isLeftToRight->paintBorder->else->transform->new->AffineTransform->transform->translate->transform->scale->transform->translate->paintBorder
SynthPainterImpl#paintToggleButtonBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a toggle button.:::paintBackground
SynthPainterImpl#paintToggleButtonBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a toggle button.:::paintBorder
SynthPainterImpl#paintToolBarBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a tool bar.:::paintBackground
SynthPainterImpl#paintToolBarBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of a tool bar:::paintBackground
SynthPainterImpl#paintToolBarBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a tool bar.:::paintBorder
SynthPainterImpl#paintToolBarBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of a tool bar:::paintBorder
SynthPainterImpl#paintToolBarContentBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the tool bar's content area.:::paintBackground
SynthPainterImpl#paintToolBarContentBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of the tool bar's content area:::paintBackground
SynthPainterImpl#paintToolBarContentBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of the content area of a tool bar.:::paintBorder
SynthPainterImpl#paintToolBarContentBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of the content area of a tool bar:::paintBorder
SynthPainterImpl#paintToolBarDragWindowBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the window containing the tool bar when it has been detached from its primary frame.:::paintBackground
SynthPainterImpl#paintToolBarDragWindowBackground(SynthContext, Graphics, int, int, int, int, int):::Paints the background of the window containing the tool bar when it has been detached from its primary frame:::paintBackground
SynthPainterImpl#paintToolBarDragWindowBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of the window containing the tool bar when it has been detached from it's primary frame.:::paintBorder
SynthPainterImpl#paintToolBarDragWindowBorder(SynthContext, Graphics, int, int, int, int, int):::Paints the border of the window containing the tool bar when it has been detached from it's primary frame:::paintBorder
SynthPainterImpl#paintToolTipBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a tool tip.:::paintBackground
SynthPainterImpl#paintToolTipBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a tool tip.:::paintBorder
SynthPainterImpl#paintTreeBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of a tree.:::paintBackground
SynthPainterImpl#paintTreeBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a tree.:::paintBorder
SynthPainterImpl#paintTreeCellBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the row containing a cell in a tree.:::paintBackground
SynthPainterImpl#paintTreeCellBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of the row containing a cell in a tree.:::paintBorder
SynthPainterImpl#paintTreeCellFocus(SynthContext, Graphics, int, int, int, int):::Paints the focus indicator for a cell in a tree when it has focus.:::
SynthPainterImpl#paintViewportBackground(SynthContext, Graphics, int, int, int, int):::Paints the background of the viewport.:::paintBackground
SynthPainterImpl#paintViewportBorder(SynthContext, Graphics, int, int, int, int):::Paints the border of a viewport.:::paintBorder
TableScrollPaneCorner#paintComponent(Graphics):::Paint the component using the Nimbus Table Header Background Painter:::painter->UIManager->get->if->if->painter->getWidth->getHeight->paint->else->img->getWidth->getHeight->new->BufferedImage->g2->img->getGraphics->painter->getWidth->getHeight->paint->g2->dispose->g->drawImage
