DocumentTraversal#createNodeIterator(Node, int, NodeFilter, boolean):::Create a new NodeIterator over the subtree rooted at the specified node.:::
DocumentTraversal#createTreeWalker(Node, int, NodeFilter, boolean):::Create a new TreeWalker over the subtree rooted at the specified node.:::
NodeFilter#acceptNode(Node):::Test whether a specified node is visible in the logical view of a TreeWalker or NodeIterator:::
NodeIterator#getRoot():::The root node of the NodeIterator, as specified when it was created.:::
NodeIterator#getWhatToShow():::This attribute determines which node types are presented via the NodeIterator:::
NodeIterator#getFilter():::The NodeFilter used to screen nodes.:::
NodeIterator#getExpandEntityReferences()::: The value of this flag determines whether the children of entity reference nodes are visible to the NodeIterator:::
NodeIterator#nextNode():::Returns the next node in the set and advances the position of the NodeIterator in the set:::
NodeIterator#previousNode():::Returns the previous node in the set and moves the position of the NodeIterator backwards in the set.:::
NodeIterator#detach():::Detaches the NodeIterator from the set which it iterated over, releasing any computational resources and placing the NodeIterator in the INVALID state:::
TreeWalker#getRoot():::The root node of the TreeWalker, as specified when it was created.:::
TreeWalker#getWhatToShow():::This attribute determines which node types are presented via the TreeWalker:::
TreeWalker#getFilter():::The filter used to screen nodes.:::
TreeWalker#getExpandEntityReferences():::The value of this flag determines whether the children of entity reference nodes are visible to the TreeWalker:::
TreeWalker#getCurrentNode():::The node at which the TreeWalker is currently positioned:::
TreeWalker#setCurrentNode(Node):::The node at which the TreeWalker is currently positioned:::
TreeWalker#parentNode():::Moves to and returns the closest visible ancestor node of the current node:::
TreeWalker#firstChild():::Moves the TreeWalker to the first visible child of the current node, and returns the new node:::
TreeWalker#lastChild():::Moves the TreeWalker to the last visible child of the current node, and returns the new node:::
TreeWalker#previousSibling():::Moves the TreeWalker to the previous sibling of the current node, and returns the new node:::
TreeWalker#nextSibling():::Moves the TreeWalker to the next sibling of the current node, and returns the new node:::
TreeWalker#previousNode():::Moves the TreeWalker to the previous visible node in document order relative to the current node, and returns the new node:::
TreeWalker#nextNode():::Moves the TreeWalker to the next visible node in document order relative to the current node, and returns the new node:::
