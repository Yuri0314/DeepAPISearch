com.sun.tools.sjavac.options.ArgumentIterator#hasNext()->boolean::: argument iterator has next
com.sun.tools.sjavac.options.ArgumentIterator#next()->String::: argument iterator next
com.sun.tools.sjavac.options.ArgumentIterator#current()->String::: argument iterator current
com.sun.tools.sjavac.options.ArgumentIterator#remove()->void:::Can't remove current element, since we may have buffered it.
com.sun.tools.sjavac.options.ArgumentIterator#peek()->String::: argument iterator peek
com.sun.tools.sjavac.options.OptionHelper#reportError(String)->void:::Handle error
com.sun.tools.sjavac.options.OptionHelper#exclude(String)->void:::Record a package exclusion pattern
com.sun.tools.sjavac.options.OptionHelper#include(String)->void:::Record a package inclusion pattern
com.sun.tools.sjavac.options.OptionHelper#sourceRoots(List)->void:::Record a root of sources to be compiled
com.sun.tools.sjavac.options.OptionHelper#addTransformer(String, Transformer)->void:::Record a suffix + transformer
com.sun.tools.sjavac.options.OptionHelper#sourcepath(List)->void:::Record a sourcepath to be used
com.sun.tools.sjavac.options.OptionHelper#modulepath(List)->void:::Record a modulepath to be used
com.sun.tools.sjavac.options.OptionHelper#classpath(List)->void:::Record a classpath to be used
com.sun.tools.sjavac.options.OptionHelper#numCores(int)->void:::Record the number of cores
com.sun.tools.sjavac.options.OptionHelper#logLevel(String)->void:::Record desired log level
com.sun.tools.sjavac.options.OptionHelper#compareFoundSources(Path)->void:::Record path for reference source list
com.sun.tools.sjavac.options.OptionHelper#permitArtifact(String)->void:::Record a single permitted artifact
com.sun.tools.sjavac.options.OptionHelper#permitUnidentifiedArtifacts()->void:::Record the fact that unidentified artifacts are permitted
com.sun.tools.sjavac.options.OptionHelper#permitDefaultPackage()->void:::Record the fact that sources in the default package are permitted
com.sun.tools.sjavac.options.OptionHelper#serverConf(String)->void:::Record server configuration parameters
com.sun.tools.sjavac.options.OptionHelper#startServerConf(String)->void:::Record server launch configuration parameters
com.sun.tools.sjavac.options.OptionHelper#javacArg(String...)->void:::Record some arguments to be passed on to javac
com.sun.tools.sjavac.options.OptionHelper#destDir(Path)->void:::Sets the destination directory for the compilation
com.sun.tools.sjavac.options.OptionHelper#generatedSourcesDir(Path)->void:::Sets the directory for generated sources
com.sun.tools.sjavac.options.OptionHelper#headerDir(Path)->void:::Sets the directory for generated headers
com.sun.tools.sjavac.options.OptionHelper#stateDir(Path)->void:::Sets the directory for state and log files generated by sjavac
com.sun.tools.sjavac.options.OptionHelper#implicit(String)->void:::Sets the implicit policy
com.sun.tools.sjavac.options.OptionHelper#traverse(String[])->void:::Traverses an array of arguments and performs the appropriate callbacks.
com.sun.tools.sjavac.options.OptionHelper#unescapeCmdArg(String)->String::: option helper unescape cmd arg
com.sun.tools.sjavac.options.Options#getImplicitPolicy()->String:::Get the policy for implicit classes
com.sun.tools.sjavac.options.Options#getGenSrcDir()->Path:::Get the path for generated sources (or null if no such path is set)
com.sun.tools.sjavac.options.Options#getDestDir()->Path:::Get the path for the destination directory
com.sun.tools.sjavac.options.Options#getHeaderDir()->Path:::Get the path for the header directory (or null if no such path is set)
com.sun.tools.sjavac.options.Options#getStateDir()->Path:::Get the path for the state directory, defaults to destDir.
com.sun.tools.sjavac.options.Options#getSources()->List:::Get all source locations for files to be compiled
com.sun.tools.sjavac.options.Options#getSourceSearchPaths()->List:::Get all paths to search for classes in .java format
com.sun.tools.sjavac.options.Options#getClassSearchPath()->List:::Get all paths to search for classes in.
com.sun.tools.sjavac.options.Options#getModuleSearchPaths()->List:::Get all paths to search for modules in.
com.sun.tools.sjavac.options.Options#getLogLevel()->String:::Get the log level.
com.sun.tools.sjavac.options.Options#isUnidentifiedArtifactPermitted(String)->boolean:::Returns true iff the artifact is permitted in the output dir.
com.sun.tools.sjavac.options.Options#areUnidentifiedArtifactsPermitted()->boolean:::Returns true iff artifacts in the output directories should be kept, even if they would not be generated in a clean build.
com.sun.tools.sjavac.options.Options#isDefaultPackagePermitted()->boolean:::Returns true iff sources in the default package should be permitted.
com.sun.tools.sjavac.options.Options#getSourceReferenceList()->Path:::Get the path to the list of reference sources (or null if none is set)
com.sun.tools.sjavac.options.Options#getNumCores()->int:::Get the number of cores to be used by sjavac
com.sun.tools.sjavac.options.Options#getJavacArgs()->List:::Returns all arguments relevant to javac but irrelevant to sjavac.
com.sun.tools.sjavac.options.Options#getTranslationRules()->Map:::Get a map which maps suffixes to transformers (for example ".java" -> CompileJavaPackages)
com.sun.tools.sjavac.options.Options#startServerFlag()->boolean:::Return true iff a new server should be started
com.sun.tools.sjavac.options.Options#getServerConf()->String:::Return the server configuration string.
com.sun.tools.sjavac.options.Options#parseArgs(String...)->Options:::Parses the given argument array and returns a corresponding Options instance.
com.sun.tools.sjavac.options.Options#isJavaFilesAmongJavacArgs()->boolean:::Returns true iff a .java file is among the javac arguments
com.sun.tools.sjavac.options.Options#getStateArgsString()->String:::Returns a string representation of the options that affect the result of the compilation
com.sun.tools.sjavac.options.Options#prepJavacArgs()->String[]:::Extract the arguments to be passed on to javac.
com.sun.tools.sjavac.options.SourceLocation#findSourceFiles(Set, Map, Map, Module, boolean, boolean)->void:::Finds all files with the given suffix that pass the include / exclude filters in this source location.
com.sun.tools.sjavac.options.SourceLocation#getPath()->Path:::Get the root directory of this source location
com.sun.tools.sjavac.options.SourceLocation#getIncludes()->List:::Get the package include patterns
com.sun.tools.sjavac.options.SourceLocation#getExcludes()->List:::Get the package exclude patterns
com.sun.tools.sjavac.options.SourceLocation#toString()->String::: source location to string
