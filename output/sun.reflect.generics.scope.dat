AbstractScope#getRecvr():::Accessor for the receiver - the object whose scope this Scope object represents.:::return
AbstractScope#computeEnclosingScope():::This method must be implemented by any concrete subclass:::
AbstractScope#getEnclosingScope():::Accessor for the enclosing scope, which is computed lazily and cached.:::value->if->computeEnclosingScope->return
AbstractScope#lookup(String):::Lookup a type variable in the scope, using its name:::tas->getRecvr->getTypeParameters->foreach->if->tv->getName->equals->return->return->getEnclosingScope->lookup
ClassScope#computeEnclosingScope():::Overrides the abstract method in the superclass.:::receiver->getRecvr->m->receiver->getEnclosingMethod->if->return->MethodScope->make->cnstr->receiver->getEnclosingConstructor->if->return->ConstructorScope->make->c->receiver->getEnclosingClass->if->return->ClassScope->make->return->DummyScope->make
ClassScope#make(Class):::Factory method:::return->new->ClassScope
ConstructorScope#computeEnclosingScope():::Overrides the abstract method in the superclass.:::return->ClassScope->getEnclosingClass->make
ConstructorScope#make(Constructor):::Factory method:::return->new->ConstructorScope
DummyScope#make():::Factory method:::return
DummyScope#lookup(String):::Lookup a type variable in the scope, using its name:::return
MethodScope#computeEnclosingScope():::Overrides the abstract method in the superclass.:::return->ClassScope->getEnclosingClass->make
MethodScope#make(Method):::Factory method:::return->new->MethodScope
