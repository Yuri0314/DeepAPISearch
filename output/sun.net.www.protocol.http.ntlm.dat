sun.net.www.protocol.http.ntlm.NTLMAuthentication#useAuthCache()->boolean::: authentication use auth cache
sun.net.www.protocol.http.ntlm.NTLMAuthentication#supportsPreemptiveAuthorization()->boolean::: authentication supports preemptive authorization
sun.net.www.protocol.http.ntlm.NTLMAuthentication#supportsTransparentAuth()->boolean::: authentication supports transparent auth
sun.net.www.protocol.http.ntlm.NTLMAuthentication#isTrustedSite(URL)->boolean:::Returns true if the given site is trusted, i.e
sun.net.www.protocol.http.ntlm.NTLMAuthentication#getHeaderValue(URL, String)->String:::Not supported
sun.net.www.protocol.http.ntlm.NTLMAuthentication#isAuthorizationStale(String)->boolean:::Check if the header indicates that the current auth
sun.net.www.protocol.http.ntlm.NTLMAuthentication#setHeaders(HttpURLConnection, HeaderParser, String)->boolean:::Set header(s) on the given connection.
sun.net.www.protocol.http.ntlm.NTLMAuthenticationCallback#setNTLMAuthenticationCallback(NTLMAuthenticationCallback)->void::: authentication callback set authentication callback
sun.net.www.protocol.http.ntlm.NTLMAuthenticationCallback#getNTLMAuthenticationCallback()->NTLMAuthenticationCallback::: authentication callback get authentication callback
sun.net.www.protocol.http.ntlm.NTLMAuthenticationCallback#isTrustedSite(URL)->boolean:::Returns true if the given site is trusted, i.e
sun.net.www.protocol.http.ntlm.NTLMAuthSequence#getAuthHeader(String)->String::: auth sequence get auth header
sun.net.www.protocol.http.ntlm.NTLMAuthSequence#isComplete()->boolean::: auth sequence is complete
