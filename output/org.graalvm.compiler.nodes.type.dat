StampTool#meetOrNull(Iterable, ValueNode):::Meet a collection of ValueNodes optionally excluding selfValue:::iterator->values->iterator->stamp->while->iterator->hasNext->nextValue->iterator->next->if->if->nextValue->stamp->else->stamp->nextValue->stamp->meet->return
StampTool#unsignedCompare(Stamp, Stamp):::Compute the stamp resulting from the unsigned comparison being true.:::x->y->if->x->isUnrestricted->y->isUnrestricted->return->if->x->lowerBound->x->upperBound->if->y->isPositive->if->x->lowerBound->x->getBits->return->if->x->lowerBound->y->lowerBound->return->return->StampFactory->x->getBits->x->lowerBound->y->upperBound->forInteger->return->if->y->lowerBound->y->upperBound->y->isStrictlyPositive->return->StampFactory->y->getBits->y->lowerBound->forInteger->return
StampTool#isPointerAlwaysNull(ValueNode):::Checks whether this ValueNode represents a Stamp#hasValues() legal pointer value which is known to be always null.:::return->node->stamp->isPointerAlwaysNull
StampTool#isPointerAlwaysNull(Stamp):::Checks whether this Stamp represents a Stamp#hasValues() legal pointer stamp whose values are known to be always null.:::if->stamp->hasValues->return->alwaysNull->return
StampTool#isPointerNonNull(ValueNode):::Checks whether this ValueNode represents a Stamp#hasValues() legal pointer value which is known to never be null.:::return->node->stamp->isPointerNonNull
StampTool#isPointerNonNull(Stamp):::Checks whether this Stamp represents a Stamp#hasValues() legal pointer stamp whose values are known to never be null.:::if->return->nonNull->return
StampTool#typeReferenceOrNull(ValueNode):::Returns the ResolvedJavaType Java type this ValueNode has if it is a Stamp#hasValues() legal Object value.:::return->node->stamp->typeReferenceOrNull
StampTool#typeReferenceOrNull(Stamp):::Returns the ResolvedJavaType Java type this Stamp has if it is a Stamp#hasValues() legal Object stamp.:::if->stamp->hasValues->abstractObjectStamp->if->abstractObjectStamp->isExactType->return->TypeReference->abstractObjectStamp->type->createExactTrusted->else->return->TypeReference->abstractObjectStamp->type->createTrustedWithoutAssumptions->return
StampTool#isExactType(ValueNode):::Checks whether this ValueNode represents a Stamp#hasValues() legal Object value whose Java type is known exactly:::return->node->stamp->isExactType
StampTool#isExactType(Stamp):::Checks whether this Stamp represents a Stamp#hasValues() legal Object stamp whose ResolvedJavaType Java type is known exactly:::if->stamp->hasValues->return->isExactType->return
