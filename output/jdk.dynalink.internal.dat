jdk.dynalink.internal.AccessControlContextFactory#createAccessControlContext()->AccessControlContext:::Creates an access control context with no permissions.
jdk.dynalink.internal.AccessControlContextFactory#createAccessControlContext(Permission...)->AccessControlContext:::Creates an access control context limited to only the specified permissions.
jdk.dynalink.internal.AccessControlContextFactory#createAccessControlContext(String...)->AccessControlContext:::Creates an access control context limited to only the RuntimePermissions of the given names.
jdk.dynalink.internal.InternalTypeUtilities#areAssignable(Class, Class)->boolean:::Returns true if either of the types is assignable from the other.
jdk.dynalink.internal.InternalTypeUtilities#canReferenceDirectly(ClassLoader, ClassLoader)->boolean:::Return true if it is safe to strongly reference a class from the referred class loader from a class associated with the referring class loader without risking a class loader memory leak
jdk.dynalink.internal.InternalTypeUtilities#getCommonLosslessConversionType(Class, Class)->Class:::Given two types represented by c1 and c2, returns a type that is their most specific common supertype for purposes of lossless conversions.
