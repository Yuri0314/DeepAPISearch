AccessControlContextFactory#createAccessControlContext():::Creates an access control context with no permissions.:::return->new->PermissionArr->createAccessControlContext
AccessControlContextFactory#createAccessControlContext(Permission...):::Creates an access control context limited to only the specified permissions.:::perms->new->Permissions->foreach->perms->add->return->new->ProtectionDomainArr->new->ProtectionDomain->new->AccessControlContext
AccessControlContextFactory#createAccessControlContext(String...):::Creates an access control context limited to only the RuntimePermissions of the given names.:::return->makeRuntimePermissions->createAccessControlContext
InternalTypeUtilities#areAssignable(Class, Class):::Returns true if either of the types is assignable from the other.:::return->c1->isAssignableFrom->c2->isAssignableFrom
InternalTypeUtilities#canReferenceDirectly(ClassLoader, ClassLoader):::Return true if it is safe to strongly reference a class from the referred class loader from a class associated with the referring class loader without risking a class loader memory leak:::if->return->if->return->referrer->do->if->return->referrer->getParent->while->return
InternalTypeUtilities#getCommonLosslessConversionType(Class, Class):::Given two types represented by c1 and c2, returns a type that is their most specific common supertype for purposes of lossless conversions.:::if->return->else->if->return->else->if->TypeUtilities->isConvertibleWithoutLoss->return->else->if->TypeUtilities->isConvertibleWithoutLoss->return->else->if->c1->isPrimitive->c2->isPrimitive->if->return->else->if->return->else->if->return->return->getMostSpecificCommonTypeUnequalNonprimitives
