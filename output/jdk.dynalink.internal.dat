AccessControlContextFactory#createAccessControlContext():::Creates an access control context with no permissions.:::return->new->PermissionArr->createAccessControlContext
AccessControlContextFactory#createAccessControlContext(Permission...):::Creates an access control context limited to only the specified permissions.:::perms->new->Permissions->foreach->perms->add->return->new->ProtectionDomainArr->new->ProtectionDomain->new->AccessControlContext
AccessControlContextFactory#createAccessControlContext(String...):::Creates an access control context limited to only the RuntimePermissions of the given names.:::return->makeRuntimePermissions->createAccessControlContext
AccessControlContextFactory#makeRuntimePermissions(String...)::: access control context factory make runtime permissions:::return->Stream->of->RuntimePermission->new->map->Permission[]->new->toArray
InternalTypeUtilities#areAssignable(Class, Class):::Returns true if either of the types is assignable from the other.:::return->c1->isAssignableFrom->c2->isAssignableFrom
InternalTypeUtilities#canReferenceDirectly(ClassLoader, ClassLoader):::Return true if it is safe to strongly reference a class from the referred class loader from a class associated with the referring class loader without risking a class loader memory leak:::if->return->if->return->referrer->do->if->return->referrer->getParent->while->return
InternalTypeUtilities#getCommonLosslessConversionType(Class, Class):::Given two types represented by c1 and c2, returns a type that is their most specific common supertype for purposes of lossless conversions.:::if->return->else->if->return->else->if->TypeUtilities->isConvertibleWithoutLoss->return->else->if->TypeUtilities->isConvertibleWithoutLoss->return->else->if->c1->isPrimitive->c2->isPrimitive->if->return->else->if->return->else->if->return->return->getMostSpecificCommonTypeUnequalNonprimitives
InternalTypeUtilities#getMostSpecificCommonTypeUnequalNonprimitives(Class, Class)::: internal type utilities get most specific common type unequal nonprimitives:::npc1->c1->isPrimitive->TypeUtilities->getWrapperType->npc2->c2->isPrimitive->TypeUtilities->getWrapperType->a1->getAssignables->a2->getAssignables->a1->retainAll->if->a1->isEmpty->return->max->new->ArrayList<>->foreach->for->maxiter->max->iterator->maxiter->hasNext->max->add->if->max->size->return->return->max->get
InternalTypeUtilities#getAssignables(Class, Class)::: internal type utilities get assignables:::s->new->HashSet<>->collectAssignables->return
InternalTypeUtilities#collectAssignables(Class, Class, Set>)::: internal type utilities collect assignables:::if->c1->isAssignableFrom->s->add->sc->c1->getSuperclass->if->collectAssignables->itf->c1->getInterfaces->for->i
