jdk.internal.math.FDBigInteger#valueOfPow52(int, int)->FDBigInteger::: big integer value of pow52
jdk.internal.math.FDBigInteger#valueOfMulPow52(long, int, int)->FDBigInteger::: big integer value of mul pow52
jdk.internal.math.FDBigInteger#getNormalizationBias()->int::: big integer get normalization bias
jdk.internal.math.FDBigInteger#leftShift(int)->FDBigInteger::: big integer left shift
jdk.internal.math.FDBigInteger#quoRemIteration(FDBigInteger)->int::: big integer quo rem iteration
jdk.internal.math.FDBigInteger#multBy10()->FDBigInteger::: big integer mult by10
jdk.internal.math.FDBigInteger#multByPow52(int, int)->FDBigInteger::: big integer mult by pow52
jdk.internal.math.FDBigInteger#leftInplaceSub(FDBigInteger)->FDBigInteger::: big integer left inplace sub
jdk.internal.math.FDBigInteger#rightInplaceSub(FDBigInteger)->FDBigInteger::: big integer right inplace sub
jdk.internal.math.FDBigInteger#cmp(FDBigInteger)->int::: big integer cmp
jdk.internal.math.FDBigInteger#cmpPow52(int, int)->int::: big integer cmp pow52
jdk.internal.math.FDBigInteger#addAndCmp(FDBigInteger, FDBigInteger)->int::: big integer add and cmp
jdk.internal.math.FDBigInteger#makeImmutable()->void::: big integer make immutable
jdk.internal.math.FDBigInteger#toHexString()->String:::Converts this FDBigInteger to a hexadecimal string.
jdk.internal.math.FDBigInteger#toBigInteger()->BigInteger:::Converts this FDBigInteger to a BigInteger.
jdk.internal.math.FDBigInteger#toString()->String:::Converts this FDBigInteger to a string.
jdk.internal.math.FloatingDecimal#toJavaFormatString(double)->String:::Converts a double precision floating point value to a String.
jdk.internal.math.FloatingDecimal#toJavaFormatString(float)->String:::Converts a single precision floating point value to a String.
jdk.internal.math.FloatingDecimal#appendTo(double, Appendable)->void:::Appends a double precision floating point value to an Appendable.
jdk.internal.math.FloatingDecimal#appendTo(float, Appendable)->void:::Appends a single precision floating point value to an Appendable.
jdk.internal.math.FloatingDecimal#parseDouble(String)->double:::Converts a String to a double precision floating point value.
jdk.internal.math.FloatingDecimal#parseFloat(String)->float:::Converts a String to a single precision floating point value.
jdk.internal.math.FloatingDecimal.BinaryToASCIIConverter#toJavaFormatString()->String:::Converts a floating point value into an ASCII String.
jdk.internal.math.FloatingDecimal.BinaryToASCIIConverter#appendTo(Appendable)->void:::Appends a floating point value to an Appendable.
jdk.internal.math.FloatingDecimal.BinaryToASCIIConverter#getDecimalExponent()->int:::Retrieves the decimal exponent most closely corresponding to this value.
jdk.internal.math.FloatingDecimal.BinaryToASCIIConverter#getDigits(char[])->int:::Retrieves the value as an array of digits.
jdk.internal.math.FloatingDecimal.BinaryToASCIIConverter#isNegative()->boolean:::Indicates the sign of the value.
jdk.internal.math.FloatingDecimal.BinaryToASCIIConverter#isExceptional()->boolean:::Indicates whether the value is either infinite or not a number.
jdk.internal.math.FloatingDecimal.BinaryToASCIIConverter#digitsRoundedUp()->boolean:::Indicates whether the value was rounded up during the binary to ASCII conversion.
jdk.internal.math.FloatingDecimal.BinaryToASCIIConverter#decimalDigitsExact()->boolean:::Indicates whether the binary to ASCII conversion was exact.
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#toJavaFormatString()->String::: binary to buffer to java format string
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#appendTo(Appendable)->void::: binary to buffer append to
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#getDecimalExponent()->int::: binary to buffer get decimal exponent
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#getDigits(char[])->int::: binary to buffer get digits
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#isNegative()->boolean::: binary to buffer is negative
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#isExceptional()->boolean::: binary to buffer is exceptional
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#digitsRoundedUp()->boolean::: binary to buffer digits rounded up
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#decimalDigitsExact()->boolean::: binary to buffer decimal digits exact
jdk.internal.math.FloatingDecimal.BinaryToASCIIBuffer#estimateDecExp(long, int)->int:::Estimate decimal exponent
jdk.internal.math.FloatingDecimal.ASCIIToBinaryConverter#doubleValue()->double::: to binary converter double value
jdk.internal.math.FloatingDecimal.ASCIIToBinaryConverter#floatValue()->float::: to binary converter float value
jdk.internal.math.FloatingDecimal.PreparedASCIIToBinaryBuffer#doubleValue()->double::: prepared to binary buffer double value
jdk.internal.math.FloatingDecimal.PreparedASCIIToBinaryBuffer#floatValue()->float::: prepared to binary buffer float value
jdk.internal.math.FloatingDecimal.ASCIIToBinaryBuffer#doubleValue()->double:::Takes a FloatingDecimal, which we presumably just scanned in, and finds out what its value is, as a double
jdk.internal.math.FloatingDecimal.ASCIIToBinaryBuffer#floatValue()->float:::Takes a FloatingDecimal, which we presumably just scanned in, and finds out what its value is, as a float
jdk.internal.math.FloatingDecimal#getBinaryToASCIIConverter(double)->BinaryToASCIIConverter:::Returns a BinaryToASCIIConverter for a double
jdk.internal.math.FloatingDecimal#getBinaryToASCIIConverter(double, boolean)->BinaryToASCIIConverter:::Returns a BinaryToASCIIConverter for a double
jdk.internal.math.FloatingDecimal#readJavaFormatString(String)->ASCIIToBinaryConverter::: floating decimal read java format string
jdk.internal.math.FloatingDecimal#parseHexString(String)->ASCIIToBinaryConverter:::Converts string s to a suitable floating decimal; uses the double constructor and sets the roundDir variable appropriately in case the value is later converted to a float.
jdk.internal.math.FloatingDecimal#stripLeadingZeros(String)->String:::Returns s with any leading zeros removed.
jdk.internal.math.FloatingDecimal#getHexDigit(String, int)->int:::Extracts a hexadecimal digit from position position of string s.
jdk.internal.math.FormattedFloatingDecimal#valueOf(double, int, Form)->FormattedFloatingDecimal::: formatted floating decimal value of
jdk.internal.math.FormattedFloatingDecimal#getExponentRounded()->int::: formatted floating decimal get exponent rounded
jdk.internal.math.FormattedFloatingDecimal#getMantissa()->char[]:::Returns the mantissa as a char[]
jdk.internal.math.FormattedFloatingDecimal#getExponent()->char[]:::Returns the exponent as a char[]
