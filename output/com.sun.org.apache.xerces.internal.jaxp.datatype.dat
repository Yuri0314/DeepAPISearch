com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDuration(String)->Duration:::Obtain a new instance of a Duration specifying the Duration as its string representation, "PnYnMnDTnHnMnS", as defined in XML Schema 1.0 section 3.2.6.1.  XML Schema Part 2: Datatypes, 3.2.6 duration, defines duration as:  duration represents a duration of time
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDuration(long)->Duration:::Obtain a new instance of a Duration specifying the Duration as milliseconds.  XML Schema Part 2: Datatypes, 3.2.6 duration, defines duration as:  duration represents a duration of time
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDuration(boolean, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, BigDecimal)->Duration:::Obtain a new instance of a Duration specifying the Duration as isPositive, years, months, days, hours, minutes, seconds.  The XML Schema specification states that values can be of an arbitrary size
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDurationYearMonth(boolean, BigInteger, BigInteger)->Duration:::Create a Duration of type xdt:yearMonthDuration using the specified year and month as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration.  The XML Schema specification states that values can be of an arbitrary size
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDurationYearMonth(boolean, int, int)->Duration:::Create a Duration of type xdt:yearMonthDuration using the specified year and month as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration.  A DatatypeConstants#FIELD_UNDEFINED value indicates that field is not set.
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDurationYearMonth(String)->Duration:::Create a Duration of type xdt:yearMonthDuration by parsing its String representation, "PnYnM",    XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration.  The datatype xdt:yearMonthDuration is a subtype of xs:duration whose lexical representation contains only year and month components
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDurationYearMonth(long)->Duration:::Create a Duration of type xdt:yearMonthDuration using the specified milliseconds as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration.  The datatype xdt:yearMonthDuration is a subtype of xs:duration whose lexical representation contains only year and month components
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDurationDayTime(String)->Duration:::Create a Duration of type xdt:dayTimeDuration by parsing its String representation, "PnDTnHnMnS",    XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration.  The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDurationDayTime(long)->Duration:::Create a Duration of type xdt:dayTimeDuration using the specified milliseconds as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration.  The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDurationDayTime(boolean, BigInteger, BigInteger, BigInteger, BigInteger)->Duration:::Create a Duration of type xdt:dayTimeDuration using the specified day, hour, minute and second as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration.  The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newDurationDayTime(boolean, int, int, int, int)->Duration:::Create a Duration of type xdt:dayTimeDuration using the specified day, hour, minute and second as defined in    XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration.  The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newXMLGregorianCalendar()->XMLGregorianCalendar:::Create a new instance of an XMLGregorianCalendar.  All date/time datatype fields set to DatatypeConstants#FIELD_UNDEFINED or null.
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newXMLGregorianCalendar(String)->XMLGregorianCalendar:::Create a new XMLGregorianCalendar by parsing the String as a lexical representation.  Parsing the lexical string representation is defined in XML Schema 1.0 Part 2, Section 3.2.[7-14].1, Lexical Representation.  The string representation may not have any leading and trailing whitespaces.  The parsing is done field by field so that the following holds for any lexically correct String x:  newXMLGregorianCalendar(x).toXMLFormat().equals(x)  Except for the noted lexical/canonical representation mismatches listed in  XML Schema 1.0 errata, Section 3.2.7.2.
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newXMLGregorianCalendar(GregorianCalendar)->XMLGregorianCalendar:::Create an XMLGregorianCalendar from a GregorianCalendar.  <table border="2" rules="all" cellpadding="2">   <thead>     <tr>       <th align="center" colspan="2">          Field by Field Conversion from          GregorianCalendar to an XMLGregorianCalendar       </th>     </tr>     <tr>        <th>java.util.GregorianCalendar field</th>        <th>javax.xml.datatype.XMLGregorianCalendar field</th>     </tr>   </thead>   <tbody>     <tr>       <td>ERA == GregorianCalendar.BC ? -YEAR : YEAR</td>       <td>XMLGregorianCalendar#setYear(int year)</td>     </tr>     <tr>       <td>MONTH + 1</td>       <td>XMLGregorianCalendar#setMonth(int month)</td>     </tr>     <tr>       <td>DAY_OF_MONTH</td>       <td>XMLGregorianCalendar#setDay(int day)</td>     </tr>     <tr>       <td>HOUR_OF_DAY, MINUTE, SECOND, MILLISECOND</td>       <td>XMLGregorianCalendar#setTime(int hour, int minute, int second, BigDecimal fractional)</td>     </tr>     <tr>       <td>         (ZONE_OFFSET + DST_OFFSET) / (60*1000)<br/>         (in minutes)       </td>       <td>XMLGregorianCalendar#setTimezone(int offset)^*       </td>     </tr>   </tbody> </table> *conversion loss of information
com.sun.org.apache.xerces.internal.jaxp.datatype.DatatypeFactoryImpl#newXMLGregorianCalendar(BigInteger, int, int, int, int, int, BigDecimal, int)->XMLGregorianCalendar:::Constructor allowing for complete value spaces allowed by W3C XML Schema 1.0 recommendation for xsd:dateTime and related builtin datatypes
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationDayTimeImpl#getValue()->float:::The value space of xs:dayTimeDuration is the set of fractional second values.
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getSign()->int:::Returns the sign of this duration in -1,0, or 1.
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#calcSignum(boolean)->int:::Determine the sign of the duration.
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#testNonNegative(BigInteger, DatatypeConstants.Field)->void:::Makes sure that the given number is non-negative
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#testNonNegative(BigDecimal, DatatypeConstants.Field)->void:::Makes sure that the given number is non-negative
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#wrap(int)->BigInteger:::TODO: Javadoc
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#compare(Duration)->int:::Partial order relation comparison with this Duration instance.  Comparison result must be in accordance with W3C XML Schema 1.0 Part 2, Section 3.2.7.6.2, Order relation on duration.  Return: <ul>   <li>DatatypeConstants#LESSER if this Duration is shorter than duration parameter</li>   <li>DatatypeConstants#EQUAL if this Duration is equal to duration parameter</li>   <li>DatatypeConstants#GREATER if this Duration is longer than duration parameter</li>   <li>DatatypeConstants#INDETERMINATE if a conclusive partial order relation cannot be determined</li> </ul>
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#hashCode()->int:::Returns a hash code consistent with the definition of the equals method.
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#toString()->String:::Returns a string representation of this duration object
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#isSet(DatatypeConstants.Field)->boolean:::Checks if a field is set
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getField(DatatypeConstants.Field)->Number:::Gets the value of a field
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getYears()->int:::Obtains the value of the YEARS field as an integer value, or 0 if not present
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getMonths()->int:::Obtains the value of the MONTHS field as an integer value, or 0 if not present
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getDays()->int:::Obtains the value of the DAYS field as an integer value, or 0 if not present
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getHours()->int:::Obtains the value of the HOURS field as an integer value, or 0 if not present
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getMinutes()->int:::Obtains the value of the MINUTES field as an integer value, or 0 if not present
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getSeconds()->int:::Obtains the value of the SECONDS field as an integer value, or 0 if not present
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getTimeInMillis(Calendar)->long:::Returns the length of the duration in milli-seconds.  If the seconds field carries more digits than milli-second order, those will be simply discarded (or in other words, rounded to zero.) For example, for any Calendar value x,  new Duration("PT10.00099S").getTimeInMills(x) == 10000
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#getTimeInMillis(Date)->long:::Returns the length of the duration in milli-seconds.  If the seconds field carries more digits than milli-second order, those will be simply discarded (or in other words, rounded to zero.) For example, for any Date value x,  new Duration("PT10.00099S").getTimeInMills(x) == 10000
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#normalizeWith(Calendar)->Duration:::Converts the years and months fields into the days field by using a specific time instant as the reference point.  For example, duration of one month normalizes to 31 days given the start time instance "July 8th 2003, 17:40:32".  Formally, the computation is done as follows: <ol>  <li>The given Calendar object is cloned
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#multiply(int)->Duration:::Computes a new duration whose value is factor times longer than the value of this duration.  This method is provided for the convenience
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#multiply(BigDecimal)->Duration:::Computes a new duration whose value is factor times longer than the value of this duration
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#add(Duration)->Duration:::Computes a new duration whose value is this+rhs.  For example,  "1 day" + "-3 days" = "-2 days" "1 year" + "1 day" = "1 year and 1 day" "-(1 hour,50 minutes)" + "-20 minutes" = "-(1 hours,70 minutes)" "15 hours" + "-3 days" = "-(2 days,9 hours)" "1 year" + "-1 day" = IllegalStateException   Since there's no way to meaningfully subtract 1 day from 1 month, there are cases where the operation fails in IllegalStateException.   Formally, the computation is defined as follows.  Firstly, we can assume that two Durations to be added are both positive without losing generality (i.e., (-X)+Y=Y-X, X+(-Y)=X-Y, (-X)+(-Y)=-(X+Y))   Addition of two positive Durations are simply defined as field by field addition where missing fields are treated as 0
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#sanitize(BigDecimal, int)->BigDecimal:::Compute value*signum where value==null is treated as value==0.
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#subtract(Duration)->Duration:::Computes a new duration whose value is this-rhs.  For example:  "1 day" - "-3 days" = "4 days" "1 year" - "1 day" = IllegalStateException "-(1 hour,50 minutes)" - "-20 minutes" = "-(1hours,30 minutes)" "15 hours" - "-3 days" = "3 days and 15 hours" "1 year" - "-1 day" = "1 year and 1 day"   Since there's no way to meaningfully subtract 1 day from 1 month, there are cases where the operation fails in IllegalStateException.  Formally the computation is defined as follows
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#negate()->Duration:::Returns a new Duration object whose value is -this
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#signum()->int:::Returns the sign of this duration in -1,0, or 1.
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#addTo(Calendar)->void:::Adds this duration to a Calendar object
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationImpl#addTo(Date)->void:::Adds this duration to a Date object
com.sun.org.apache.xerces.internal.jaxp.datatype.DurationYearMonthImpl#getValue()->int:::The value space of xs:yearMonthDuration is the set of xs:integer month values.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#createDateTime(BigInteger, int, int, int, int, int, BigDecimal, int)->XMLGregorianCalendar:::Create a Java representation of XML Schema builtin datatype dateTime
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#createDateTime(int, int, int, int, int, int)->XMLGregorianCalendar:::Create a Java instance of XML Schema builtin datatype dateTime.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#createDateTime(int, int, int, int, int, int, int, int)->XMLGregorianCalendar:::Create a Java representation of XML Schema builtin datatype dateTime
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#createDate(int, int, int, int)->XMLGregorianCalendar:::Create a Java representation of XML Schema builtin datatype date or g*.  For example, an instance of gYear can be created invoking this factory with month and day parameters set to DatatypeConstants#FIELD_UNDEFINED.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#createTime(int, int, int, int)->XMLGregorianCalendar:::Create a Java instance of XML Schema builtin datatype time.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#createTime(int, int, int, BigDecimal, int)->XMLGregorianCalendar:::Create a Java instance of XML Schema builtin datatype time.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#createTime(int, int, int, int, int)->XMLGregorianCalendar:::Create a Java instance of XML Schema builtin datatype time.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getEon()->BigInteger:::Return high order component for XML Schema 1.0 dateTime datatype field for year
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getYear()->int:::Return low order component for XML Schema 1.0 dateTime datatype field for year or DatatypeConstants#FIELD_UNDEFINED.  Value constraints for this value are summarized in year field of date/time field mapping table.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getEonAndYear()->BigInteger:::Return XML Schema 1.0 dateTime datatype field for year.  Value constraints for this value are summarized in year field of date/time field mapping table.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getMonth()->int:::Return number of month or DatatypeConstants#FIELD_UNDEFINED.  Value constraints for this value are summarized in month field of date/time field mapping table.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getDay()->int:::Return day in month or DatatypeConstants#FIELD_UNDEFINED.  Value constraints for this value are summarized in day field of date/time field mapping table.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getTimezone()->int:::Return timezone offset in minutes or DatatypeConstants#FIELD_UNDEFINED if this optional field is not defined
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getHour()->int:::Return hours or DatatypeConstants#FIELD_UNDEFINED
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getMinute()->int:::Return minutes or DatatypeConstants#FIELD_UNDEFINED.<\p> Returns DatatypeConstants#FIELD_UNDEFINED if this field is not defined
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getSecond()->int:::Return seconds or DatatypeConstants#FIELD_UNDEFINED.<\p>  Returns DatatypeConstants#FIELD_UNDEFINED if this field is not defined
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getMillisecond()->int:::Return millisecond precision of #getFractionalSecond().<\p>  This method represents a convenience accessor to infinite precision fractional second value returned by #getFractionalSecond()
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getFractionalSecond()->BigDecimal:::Return fractional seconds.  null is returned when this optional field is not defined.  Value constraints are detailed in second field of date/time field mapping table.  This optional field can only have a defined value when the xs:dateTime second field, represented by (#getSecond(), does not return DatatypeConstants#FIELD_UNDEFINED).
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setYear(BigInteger)->void:::Set low and high order component of XSD dateTime year field.  Unset this field by invoking the setter with a parameter value of null.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setYear(int)->void:::Set year of XSD dateTime year field.  Unset this field by invoking the setter with a parameter value of DatatypeConstants#FIELD_UNDEFINED.  Note: if the absolute value of the year parameter is less than 10^9, the eon component of the XSD year field is set to null by this method.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setMonth(int)->void:::Set month.  Unset this field by invoking the setter with a parameter value of DatatypeConstants#FIELD_UNDEFINED.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setDay(int)->void:::Set days in month.  Unset this field by invoking the setter with a parameter value of DatatypeConstants#FIELD_UNDEFINED.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setTimezone(int)->void:::Set the number of minutes in the timezone offset.  Unset this field by invoking the setter with a parameter value of DatatypeConstants#FIELD_UNDEFINED.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setTime(int, int, int)->void:::Set time as one unit.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setHour(int)->void::: gregorian calendar impl set hour
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setMinute(int)->void::: gregorian calendar impl set minute
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setSecond(int)->void::: gregorian calendar impl set second
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setTime(int, int, int, BigDecimal)->void:::Set time as one unit, including the optional infinite precison fractional seconds.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setTime(int, int, int, int)->void:::Set time as one unit, including optional milliseconds.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#compare(XMLGregorianCalendar)->int:::Compare two instances of W3C XML Schema 1.0 date/time datatypes according to partial order relation defined in W3C XML Schema 1.0 Part 2, Section 3.2.7.3, Order relation on dateTime.  xsd:dateTime datatype field mapping to accessors of this class are defined in date/time field mapping table.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#normalize()->XMLGregorianCalendar:::Normalize this instance to UTC.  2000-03-04T23:00:00+03:00 normalizes to 2000-03-04T20:00:00Z Implements W3C XML Schema Part 2, Section 3.2.7.3 (A).
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#equals(Object)->boolean:::Indicates whether parameter obj is "equal to" this one.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#hashCode()->int:::Returns a hash code consistent with the definition of the equals method.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#parse(String)->XMLGregorianCalendar:::Constructs a new XMLGregorianCalendar object by parsing its lexical string representation as defined in XML Schema 1.0 Part 2, Section 3.2.[7-14].1, Lexical Representation.  The string representation may not have any leading and trailing whitespaces.  The parsing is done field by field so that the following holds for any lexically correct string x:  new XMLGregorianCalendar(x).toXMLFormat().equals(x)  Except for the noted lexical/canonical representation mismatches listed in  XML Schema 1.0 errata, Section 3.2.7.2
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#toXMLFormat()->String:::Return the lexical representation of this instance
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getXMLSchemaType()->QName:::Return the name of the XML Schema date/time type that this instance maps to
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#isValid()->boolean:::Validate instance by getXMLSchemaType() constraints.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#add(Duration)->void:::Add duration to this instance.<\p>  The computation is specified in XML Schema 1.0 Part 2, Appendix E, Adding durations to dateTimes>
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#toGregorianCalendar()->java.util.GregorianCalendar:::Convert this to java.util.GregorianCalendar.  When this instance has an undefined field, this conversion relies on the java.util.GregorianCalendar default for its corresponding field
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#toGregorianCalendar(TimeZone, Locale, XMLGregorianCalendar)->GregorianCalendar:::Convert this along with provided parameters to java.util.GregorianCalendar instance.   Since XML Schema 1.0 date/time datetypes has no concept of timezone ids or daylight savings timezone ids, this conversion operation allows the user to explicitly specify one with timezone parameter.  To compute the return value's TimeZone field, <ul> <li>when parameter timeZone is non-null, it is the timezone field.</li> <li>else when this.getTimezone() != DatatypeConstants.FIELD_UNDEFINED, create a java.util.TimeZone with a custom timezone id using the this.getTimezone().</li> <li>else when defaults.getTimezone() != DatatypeConstants.FIELD_UNDEFINED, create a java.util.TimeZone with a custom timezone id using defaults.getTimezone().</li> <li>else use the GregorianCalendar default timezone value for the host is definedas specified by java.util.TimeZone.getDefault().</li>  To ensure consistency in conversion implementations, the new GregorianCalendar should be instantiated in following manner
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#getTimeZone(int)->TimeZone:::Returns a java.util.TimeZone for this class.  If timezone field is defined for this instance, returns TimeZone initialized with custom timezone id of zoneoffset
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#clone()->Object:::Creates and returns a copy of this object.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#clear()->void:::Unset all fields to undefined.  Set all int fields to DatatypeConstants#FIELD_UNDEFINED and reference fields to null.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setMillisecond(int)->void::: gregorian calendar impl set millisecond
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#setFractionalSecond(BigDecimal)->void::: gregorian calendar impl set fractional second
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#sanitize(Number, int)->BigInteger:::Compute value*signum where value==null is treated as value==0.
com.sun.org.apache.xerces.internal.jaxp.datatype.XMLGregorianCalendarImpl#reset()->void:::reset() is designed to allow the reuse of existing XMLGregorianCalendars thus saving resources associated  with the creation of new XMLGregorianCalendars.
