java.awt.color.ColorSpace#getInstance(int)->ColorSpace::: color space get instance
java.awt.color.ColorSpace#isCS_sRGB()->boolean:::Returns true if the ColorSpace is CS_sRGB.
java.awt.color.ColorSpace#toRGB(float[])->float[]:::Transforms a color value assumed to be in this ColorSpace into a value in the default CS_sRGB color space
java.awt.color.ColorSpace#fromRGB(float[])->float[]:::Transforms a color value assumed to be in the default CS_sRGB color space into this ColorSpace
java.awt.color.ColorSpace#toCIEXYZ(float[])->float[]:::Transforms a color value assumed to be in this ColorSpace into the CS_CIEXYZ conversion color space
java.awt.color.ColorSpace#fromCIEXYZ(float[])->float[]:::Transforms a color value assumed to be in the CS_CIEXYZ conversion color space into this ColorSpace
java.awt.color.ColorSpace#getType()->int:::Returns the color space type of this ColorSpace (for example TYPE_RGB, TYPE_XYZ, ...)
java.awt.color.ColorSpace#getNumComponents()->int:::Returns the number of components of this ColorSpace.
java.awt.color.ColorSpace#getName(int)->String:::Returns the name of the component given the component index.
java.awt.color.ColorSpace#getMinValue(int)->float:::Returns the minimum normalized color component value for the specified component
java.awt.color.ColorSpace#getMaxValue(int)->float:::Returns the maximum normalized color component value for the specified component
java.awt.color.ColorSpace#isCS_CIEXYZ(ColorSpace)->boolean::: color space is s_ z
java.awt.color.ICC_ColorSpace#getProfile()->ICC_Profile:::Returns the ICC_Profile for this ICC_ColorSpace.
java.awt.color.ICC_ColorSpace#toRGB(float[])->float[]:::Transforms a color value assumed to be in this ColorSpace into a value in the default CS_sRGB color space
java.awt.color.ICC_ColorSpace#fromRGB(float[])->float[]:::Transforms a color value assumed to be in the default CS_sRGB color space into this ColorSpace
java.awt.color.ICC_ColorSpace#toCIEXYZ(float[])->float[]:::Transforms a color value assumed to be in this ColorSpace into the CS_CIEXYZ conversion color space
java.awt.color.ICC_ColorSpace#fromCIEXYZ(float[])->float[]:::Transforms a color value assumed to be in the CS_CIEXYZ conversion color space into this ColorSpace
java.awt.color.ICC_ColorSpace#getMinValue(int)->float:::Returns the minimum normalized color component value for the specified component
java.awt.color.ICC_ColorSpace#getMaxValue(int)->float:::Returns the maximum normalized color component value for the specified component
java.awt.color.ICC_Profile#finalize()->void:::Frees the resources associated with an ICC_Profile object.
java.awt.color.ICC_Profile#getInstance(byte[])->ICC_Profile:::Constructs an ICC_Profile object corresponding to the data in a byte array
java.awt.color.ICC_Profile#getInstance(int)->ICC_Profile:::Constructs an ICC_Profile corresponding to one of the specific color spaces defined by the ColorSpace class (for example CS_sRGB)
java.awt.color.ICC_Profile#getInstance(String)->ICC_Profile:::Constructs an ICC_Profile corresponding to the data in a file
java.awt.color.ICC_Profile#getInstance(InputStream)->ICC_Profile:::Constructs an ICC_Profile corresponding to the data in an InputStream
java.awt.color.ICC_Profile#getProfileDataFromStream(InputStream)->byte[]::: c_ profile get profile data from stream
java.awt.color.ICC_Profile#getDeferredInstance(ProfileDeferralInfo)->ICC_Profile:::Constructs an ICC_Profile for which the actual loading of the profile data from a file and the initialization of the CMM should be deferred as long as possible
java.awt.color.ICC_Profile#activateDeferredProfile()->void::: c_ profile activate deferred profile
java.awt.color.ICC_Profile#getMajorVersion()->int:::Returns profile major version.
java.awt.color.ICC_Profile#getMinorVersion()->int:::Returns profile minor version.
java.awt.color.ICC_Profile#getProfileClass()->int:::Returns the profile class.
java.awt.color.ICC_Profile#getColorSpaceType()->int:::Returns the color space type
java.awt.color.ICC_Profile#getColorSpaceType(Profile)->int::: c_ profile get color space type
java.awt.color.ICC_Profile#getPCSType()->int:::Returns the color space type of the Profile Connection Space (PCS)
java.awt.color.ICC_Profile#getPCSType(Profile)->int::: c_ profile get type
java.awt.color.ICC_Profile#write(String)->void:::Write this ICC_Profile to a file.
java.awt.color.ICC_Profile#write(OutputStream)->void:::Write this ICC_Profile to an OutputStream.
java.awt.color.ICC_Profile#getData()->byte[]:::Returns a byte array corresponding to the data of this ICC_Profile.
java.awt.color.ICC_Profile#getData(int)->byte[]:::Returns a particular tagged data element from the profile as a byte array
java.awt.color.ICC_Profile#getData(Profile, int)->byte[]::: c_ profile get data
java.awt.color.ICC_Profile#setData(int, byte[])->void:::Sets a particular tagged data element in the profile from a byte array
java.awt.color.ICC_Profile#setRenderingIntent(int)->void:::Sets the rendering intent of the profile
java.awt.color.ICC_Profile#getRenderingIntent()->int:::Returns the rendering intent of the profile
java.awt.color.ICC_Profile#getNumComponents()->int:::Returns the number of color components in the "input" color space of this profile
java.awt.color.ICC_Profile#getMediaWhitePoint()->float[]:::Returns a float array of length 3 containing the X, Y, and Z components of the mediaWhitePointTag in the ICC profile.
java.awt.color.ICC_Profile#getXYZTag(int)->float[]:::Returns a float array of length 3 containing the X, Y, and Z components encoded in an XYZType tag.
java.awt.color.ICC_Profile#getGamma(int)->float:::Returns a gamma value representing a tone reproduction curve (TRC)
java.awt.color.ICC_Profile#getTRC(int)->short[]:::Returns the TRC as an array of shorts
java.awt.color.ICC_Profile#iccCStoJCS(int)->int::: c_ profile icc sto s
java.awt.color.ICC_Profile#intFromBigEndian(byte[], int)->int::: c_ profile int from big endian
java.awt.color.ICC_Profile#intToBigEndian(int, byte[], int)->void::: c_ profile int to big endian
java.awt.color.ICC_Profile#shortFromBigEndian(byte[], int)->short::: c_ profile short from big endian
java.awt.color.ICC_Profile#shortToBigEndian(short, byte[], int)->void::: c_ profile short to big endian
java.awt.color.ICC_Profile#readResolve()->Object:::Resolves instances being deserialized into instances registered with CMM.
java.awt.color.ICC_ProfileGray#getMediaWhitePoint()->float[]:::Returns a float array of length 3 containing the X, Y, and Z components of the mediaWhitePointTag in the ICC profile.
java.awt.color.ICC_ProfileGray#getGamma()->float:::Returns a gamma value representing the tone reproduction curve (TRC)
java.awt.color.ICC_ProfileGray#getTRC()->short[]:::Returns the TRC as an array of shorts
java.awt.color.ICC_ProfileRGB#getMediaWhitePoint()->float[]:::Returns an array that contains the components of the profile's mediaWhitePointTag.
java.awt.color.ICC_ProfileRGB#getMatrix()->float[][]:::Returns a 3x3 float matrix constructed from the X, Y, and Z components of the profile's redColorantTag, greenColorantTag, and blueColorantTag
java.awt.color.ICC_ProfileRGB#getGamma(int)->float:::Returns a gamma value representing the tone reproduction curve (TRC) for a particular component
java.awt.color.ICC_ProfileRGB#getTRC(int)->short[]:::Returns the TRC for a particular component as an array
