com.sun.org.apache.bcel.internal.Const#getAccessName(int)->String::: const get access name
com.sun.org.apache.bcel.internal.Const#getConstantName(int)->String::: const get constant name
com.sun.org.apache.bcel.internal.Const#getInterfacesImplementedByArrays()->Iterable::: const get interfaces implemented by arrays
com.sun.org.apache.bcel.internal.Const#getTypeName(int)->String:::The primitive type names corresponding to the T_XX constants, e.g., TYPE_NAMES[T_INT] = "int"
com.sun.org.apache.bcel.internal.Const#getClassTypeName(int)->String:::The primitive class names corresponding to the T_XX constants, e.g., CLASS_TYPE_NAMES[T_INT] = "java.lang.Integer"
com.sun.org.apache.bcel.internal.Const#getShortTypeName(int)->String::: const get short type name
com.sun.org.apache.bcel.internal.Const#getNoOfOperands(int)->short::: const get no of operands
com.sun.org.apache.bcel.internal.Const#getOperandType(int, int)->short::: const get operand type
com.sun.org.apache.bcel.internal.Const#getOperandTypeCount(int)->long::: const get operand type count
com.sun.org.apache.bcel.internal.Const#getOpcodeName(int)->String::: const get opcode name
com.sun.org.apache.bcel.internal.Const#getConsumeStack(int)->int::: const get consume stack
com.sun.org.apache.bcel.internal.Const#getProduceStack(int)->int::: const get produce stack
com.sun.org.apache.bcel.internal.Const#getAttributeName(int)->String::: const get attribute name
com.sun.org.apache.bcel.internal.Const#getItemName(int)->String::: const get item name
com.sun.org.apache.bcel.internal.Const#getMethodHandleName(int)->String::: const get method handle name
com.sun.org.apache.bcel.internal.ExceptionConst#createExceptions(EXCS, Class...)->Class[]:::Creates a copy of the specified Exception Class array combined with any additional Exception classes.
com.sun.org.apache.bcel.internal.Repository#getRepository()->com.sun.org.apache.bcel.internal.util.Repository::: repository get repository
com.sun.org.apache.bcel.internal.Repository#setRepository(com.sun.org.apache.bcel.internal.util.Repository)->void:::Set repository instance to be used for class loading
com.sun.org.apache.bcel.internal.Repository#lookupClass(String)->JavaClass:::Lookup class somewhere found on your CLASSPATH, or whereever the repository instance looks for it.
com.sun.org.apache.bcel.internal.Repository#lookupClass(Class)->JavaClass:::Try to find class source using the internal repository instance.
com.sun.org.apache.bcel.internal.Repository#clearCache()->void:::Clear the repository.
com.sun.org.apache.bcel.internal.Repository#addClass(JavaClass)->JavaClass:::Add clazz to repository if there isn't an equally named class already in there.
com.sun.org.apache.bcel.internal.Repository#removeClass(String)->void:::Remove class with given (fully qualified) name from repository.
com.sun.org.apache.bcel.internal.Repository#removeClass(JavaClass)->void:::Remove given class from repository.
com.sun.org.apache.bcel.internal.Repository#getSuperClasses(JavaClass)->JavaClass[]::: repository get super classes
com.sun.org.apache.bcel.internal.Repository#getSuperClasses(String)->JavaClass[]::: repository get super classes
com.sun.org.apache.bcel.internal.Repository#getInterfaces(JavaClass)->JavaClass[]::: repository get interfaces
com.sun.org.apache.bcel.internal.Repository#getInterfaces(String)->JavaClass[]::: repository get interfaces
com.sun.org.apache.bcel.internal.Repository#instanceOf(JavaClass, JavaClass)->boolean:::Equivalent to runtime "instanceof" operator.
com.sun.org.apache.bcel.internal.Repository#instanceOf(String, String)->boolean::: repository instance of
com.sun.org.apache.bcel.internal.Repository#instanceOf(JavaClass, String)->boolean::: repository instance of
com.sun.org.apache.bcel.internal.Repository#instanceOf(String, JavaClass)->boolean::: repository instance of
com.sun.org.apache.bcel.internal.Repository#implementationOf(JavaClass, JavaClass)->boolean::: repository implementation of
com.sun.org.apache.bcel.internal.Repository#implementationOf(String, String)->boolean::: repository implementation of
com.sun.org.apache.bcel.internal.Repository#implementationOf(JavaClass, String)->boolean::: repository implementation of
com.sun.org.apache.bcel.internal.Repository#implementationOf(String, JavaClass)->boolean::: repository implementation of
