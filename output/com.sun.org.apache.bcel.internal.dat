Const#getTypeName(int):::The primitive type names corresponding to the T_XX constants, e.g., TYPE_NAMES[T_INT] = "int":::return
Const#getClassTypeName(int):::The primitive class names corresponding to the T_XX constants, e.g., CLASS_TYPE_NAMES[T_INT] = "java.lang.Integer":::return
ExceptionConst#createExceptions(EXCS, Class...):::Creates a copy of the specified Exception Class array combined with any additional Exception classes.:::switch->return->mergeExceptions->return->mergeExceptions->return->mergeExceptions->return->mergeExceptions->return->mergeExceptions->throw->new->AssertionError
Repository#setRepository(com.sun.org.apache.bcel.internal.util.Repository):::Set repository instance to be used for class loading:::
Repository#lookupClass(String):::Lookup class somewhere found on your CLASSPATH, or whereever the repository instance looks for it.:::return->repository->loadClass
Repository#lookupClass(Class):::Try to find class source using the internal repository instance.:::return->repository->loadClass
Repository#clearCache():::Clear the repository.:::repository->clear
Repository#addClass(JavaClass):::Add clazz to repository if there isn't an equally named class already in there.:::old->repository->clazz->getClassName->findClass->repository->storeClass->return
Repository#removeClass(String):::Remove class with given (fully qualified) name from repository.:::repository->repository->findClass->removeClass
Repository#removeClass(JavaClass):::Remove given class from repository.:::repository->removeClass
Repository#instanceOf(JavaClass, JavaClass):::Equivalent to runtime "instanceof" operator.:::return->clazz->instanceOf
