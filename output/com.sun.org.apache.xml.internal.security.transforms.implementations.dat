FuncHere#execute(XPathContext):::The here function returns a node-set containing the attribute or processing instruction node or the parent element of the text node that directly bears the XPath expression:::xpathOwnerNode->xctxt->getOwnerObject->if->return->xpathOwnerNodeDTM->xctxt->getDTMHandleFromNode->currentNode->xctxt->getCurrentNode->dtm->xctxt->getDTM->docContext->dtm->getDocument->if->error->currentDoc->XMLUtils->dtm->getNode->getOwnerDocument->xpathOwnerDoc->XMLUtils->getOwnerDocument->if->throw->I18n->translate->new->TransformerException->nodes->xctxt->getDTMManager->new->XNodeSet->nodeSet->nodes->mutableNodeset->hereNode->switch->dtm->getNodeType->nodeSet->addNode->break->dtm->getParent->nodeSet->addNode->break->break->nodeSet->detach->return
FuncHere#fixupVariables(List, int):::No arguments to process, so this does nothing.:::
TransformBase64Decode#engineGetURI():::Method engineGetURI  :::return
TransformBase64Decode#enginePerformTransform(XMLSignatureInput, Transform):::Method enginePerformTransform:::return->enginePerformTransform
TransformBase64Decode#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform base64 decode engine perform transform:::if->input->isElement->el->input->getSubNode->if->input->getSubNode->getNodeType->el->getParentNode->sb->new->StringBuilder->traverseElement->if->decodedBytes->XMLUtils->sb->toString->decode->output->new->XMLSignatureInput->output->setSecureValidation->return->bytes->XMLUtils->sb->toString->decode->os->write->output->new->XMLSignatureInput->output->setSecureValidation->output->setOutputStream->return->if->input->isOctetStream->input->isNodeSet->if->base64Bytes->input->getBytes->decodedBytes->XMLUtils->decode->output->new->XMLSignatureInput->output->setSecureValidation->return->if->input->isByteArray->input->isNodeSet->bytes->XMLUtils->input->getBytes->decode->os->write->else->inputBytes->JavaUtils->input->getOctetStreamReal->getBytesFromStream->bytes->XMLUtils->decode->os->write->output->new->XMLSignatureInput->output->setSecureValidation->output->setOutputStream->return->try->doc->XMLUtils->createDocumentBuilder->input->getOctetStream->parse->rootNode->doc->getDocumentElement->sb->new->StringBuilder->traverseElement->decodedBytes->XMLUtils->sb->toString->decode->output->new->XMLSignatureInput->output->setSecureValidation->return->catch->throw->new->TransformationException->throw->new->TransformationException->finally
TransformBase64Decode#traverseElement(Element, StringBuilder)::: transform base64 decode traverse element:::sibling->node->getFirstChild->while->switch->sibling->getNodeType->traverseElement->break->sb->getData->append->sibling->getNextSibling
TransformC14N#engineGetURI()::: transform c14 n engine get i:::return
TransformC14N#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform c14 n engine perform transform:::c14n->new->Canonicalizer20010315OmitComments->c14n->setSecureValidation->if->c14n->setWriter->result->c14n->engineCanonicalize->output->new->XMLSignatureInput->output->setSecureValidation->if->output->setOutputStream->return
TransformC14N11#engineGetURI()::: transform c14 n11 engine get i:::return
TransformC14N11#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform c14 n11 engine perform transform:::c14n->new->Canonicalizer11_OmitComments->c14n->setSecureValidation->if->c14n->setWriter->result->c14n->engineCanonicalize->output->new->XMLSignatureInput->output->setSecureValidation->if->output->setOutputStream->return
TransformC14N11_WithComments#engineGetURI()::: transform c14 n11_ with comments engine get i:::return
TransformC14N11_WithComments#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform c14 n11_ with comments engine perform transform:::c14n->new->Canonicalizer11_WithComments->c14n->setSecureValidation->if->c14n->setWriter->result->c14n->engineCanonicalize->output->new->XMLSignatureInput->output->setSecureValidation->if->output->setOutputStream->return
TransformC14NExclusive#engineGetURI():::Method engineGetURI  :::return
TransformC14NExclusive#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform c14 exclusive engine perform transform:::try->inclusiveNamespaces->if->transformObject->length->inclusiveElement->XMLUtils->transformObject->getElement->getFirstChild->selectNode->transformObject->getBaseURI->new->InclusiveNamespaces->getInclusiveNamespaces->c14n->new->Canonicalizer20010315ExclOmitComments->c14n->setSecureValidation->if->c14n->setWriter->result->c14n->engineCanonicalize->output->new->XMLSignatureInput->output->setSecureValidation->if->output->setOutputStream->return->catch->throw->new->CanonicalizationException->finally
TransformC14NExclusiveWithComments#engineGetURI():::Method engineGetURI :::return
TransformC14NExclusiveWithComments#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform c14 exclusive with comments engine perform transform:::try->inclusiveNamespaces->if->transformObject->length->inclusiveElement->XMLUtils->transformObject->getElement->getFirstChild->selectNode->transformObject->getBaseURI->new->InclusiveNamespaces->getInclusiveNamespaces->c14n->new->Canonicalizer20010315ExclWithComments->c14n->setSecureValidation->if->c14n->setWriter->result->c14n->engineCanonicalize->output->new->XMLSignatureInput->output->setSecureValidation->return->catch->throw->new->CanonicalizationException->finally
TransformC14NWithComments#engineGetURI()::: transform c14 with comments engine get i:::return
TransformC14NWithComments#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform c14 with comments engine perform transform:::c14n->new->Canonicalizer20010315WithComments->c14n->setSecureValidation->if->c14n->setWriter->result->c14n->engineCanonicalize->output->new->XMLSignatureInput->output->setSecureValidation->if->output->setOutputStream->return
TransformEnvelopedSignature#engineGetURI():::Method engineGetURI  :::return
TransformEnvelopedSignature#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform enveloped signature engine perform transform:::signatureElement->transformObject->getElement->searchSignatureElement->input->setExcludeNode->input->new->EnvelopedNodeFilter->addNodeFilter->return
TransformEnvelopedSignature#searchSignatureElement(Node)::: transform enveloped signature search signature element:::found->while->if->signatureElement->getNodeType->break->el->if->el->getNamespaceURI->equals->el->getLocalName->equals->break->signatureElement->getParentNode->if->throw->new->TransformationException->return
TransformEnvelopedSignature.EnvelopedNodeFilter#isNodeIncludeDO(Node, int)::: enveloped node filter is node include o:::if->return->return
TransformEnvelopedSignature.EnvelopedNodeFilter#isNodeInclude(Node)::: enveloped node filter is node include:::if->XMLUtils->isDescendantOrSelf->return->return
TransformXPath#engineGetURI():::Method engineGetURI  :::return
TransformXPath#enginePerformTransform(XMLSignatureInput, OutputStream, Transform):::Method enginePerformTransform :::try->xpathElement->XMLUtils->transformObject->getElement->getFirstChild->selectDsNode->if->exArgs->throw->new->TransformationException->xpathnode->xpathElement->getFirstChild->if->throw->new->DOMException->str->XMLUtils->getStrFromNode->input->needsCircumvent->setNeedsToBeExpanded->xpathFactory->XPathFactory->newInstance->xpathAPIInstance->xpathFactory->newXPathAPI->input->new->XPathNodeFilter->addNodeFilter->input->setNodeSet->return->catch->throw->new->TransformationException->finally
TransformXPath#needsCircumvent(String)::: transform path needs circumvent:::return->str->indexOf->str->indexOf
TransformXPath.XPathNodeFilter#isNodeInclude(Node)::: path node filter is node include:::try->include->xPathAPI->evaluate->if->return->return->catch->eArgs->throw->new->XMLSecurityRuntimeException->eArgs->currentNode->getNodeType->throw->new->XMLSecurityRuntimeException->finally
TransformXPath.XPathNodeFilter#isNodeIncludeDO(Node, int)::: path node filter is node include o:::return->isNodeInclude
TransformXPath2Filter#engineGetURI():::Method engineGetURI  :::return
TransformXPath2Filter#enginePerformTransform(XMLSignatureInput, OutputStream, Transform):::Method enginePerformTransform :::try->unionNodes->new->ArrayList<>->subtractNodes->new->ArrayList<>->intersectNodes->new->ArrayList<>->xpathElements->XMLUtils->transformObject->getElement->getFirstChild->selectNodes->if->exArgs->throw->new->TransformationException->inputDoc->if->input->getSubNode->XMLUtils->input->getSubNode->getOwnerDocument->else->XMLUtils->input->getNodeSet->getOwnerDocument->for->i->input->new->XPath2NodeFilter->addNodeFilter->input->setNodeSet->return->catch->throw->new->TransformationException->throw->new->TransformationException->throw->new->TransformationException->throw->new->TransformationException->throw->new->TransformationException->throw->new->TransformationException->throw->new->TransformationException->throw->new->TransformationException->finally
XPath2NodeFilter#isNodeInclude(Node)::: path2 node filter is node include:::result->if->rooted->else->if->rooted->if->return->if->if->rooted->return->return
XPath2NodeFilter#isNodeIncludeDO(Node, int)::: path2 node filter is node include o:::result->if->if->if->inList->else->if->if->if->inList->else->if->if->return->if->if->inList->if->return->return
XPath2NodeFilter#rooted(Node, Set):::Method rooted:::if->nodeList->isEmpty->return->if->nodeList->contains->return->foreach->if->XMLUtils->isDescendantOrSelf->return->return
XPath2NodeFilter#inList(Node, Set):::Method rooted:::return->nodeList->contains
XPath2NodeFilter#convertNodeListToSet(List)::: path2 node filter convert node list to set:::result->new->HashSet<>->foreach->length->rootNodes->getLength->for->i->return
TransformXPointer#engineGetURI()::: transform pointer engine get i:::return
TransformXPointer#enginePerformTransform(XMLSignatureInput, OutputStream, Transform):::Method enginePerformTransform:::exArgs->throw->new->TransformationException
TransformXSLT#engineGetURI():::Method engineGetURI  :::return
TransformXSLT#enginePerformTransform(XMLSignatureInput, OutputStream, Transform)::: transform t engine perform transform:::try->transformElement->transformObject->getElement->xsltElement->XMLUtils->transformElement->getFirstChild->selectNode->if->XMLUtils->transformElement->getFirstChild->selectNode->if->exArgs->throw->new->TransformationException->tFactory->TransformerFactory->newInstance->tFactory->setFeature->stylesheet->try->os->new->ByteArrayOutputStream->transformer->tFactory->newTransformer->source->new->DOMSource->result->new->StreamResult->transformer->transform->os->toByteArray->new->ByteArrayInputStream->new->StreamSource->catch->finally->transformer->tFactory->newTransformer->try->transformer->setOutputProperty->catch->LOG->e->getMessage->warn->finally->try->is->input->getBytes->new->ByteArrayInputStream->xmlSource->new->StreamSource->if->try->baos1->new->ByteArrayOutputStream->outputTarget->new->StreamResult->transformer->transform->output->baos1->toByteArray->new->XMLSignatureInput->output->setSecureValidation->return->catch->finally->outputTarget->new->StreamResult->transformer->transform->catch->finally->output->new->XMLSignatureInput->output->setSecureValidation->output->setOutputStream->return->catch->throw->new->TransformationException->throw->new->TransformationException->throw->new->TransformationException->finally
