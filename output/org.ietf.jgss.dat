org.ietf.jgss.ChannelBinding#getInitiatorAddress()->InetAddress:::Get the initiator's address for this channel binding.
org.ietf.jgss.ChannelBinding#getAcceptorAddress()->InetAddress:::Get the acceptor's address for this channel binding.
org.ietf.jgss.ChannelBinding#getApplicationData()->byte[]:::Get the application specified data for this channel binding.
org.ietf.jgss.ChannelBinding#equals(Object)->boolean:::Compares two instances of ChannelBinding.
org.ietf.jgss.ChannelBinding#hashCode()->int:::Returns a hashcode value for this ChannelBinding object.
org.ietf.jgss.GSSContext#initSecContext(byte[], int, int)->byte[]:::Called by the context initiator to start the context creation phase and process any tokens generated by the peer's acceptSecContext method
org.ietf.jgss.GSSContext#initSecContext(InputStream, OutputStream)->int:::Called by the context initiator to start the context creation phase and process any tokens generated by the peer's acceptSecContext method using streams
org.ietf.jgss.GSSContext#acceptSecContext(byte[], int, int)->byte[]:::Called by the context acceptor upon receiving a token from the peer
org.ietf.jgss.GSSContext#acceptSecContext(InputStream, OutputStream)->void::: context accept sec context
org.ietf.jgss.GSSContext#isEstablished()->boolean:::Used during context establishment to determine the state of the context.
org.ietf.jgss.GSSContext#dispose()->void:::Releases any system resources and cryptographic information stored in the context object and invalidates the context.
org.ietf.jgss.GSSContext#getWrapSizeLimit(int, boolean, int)->int:::Used to determine limits on the size of the message that can be passed to wrap
org.ietf.jgss.GSSContext#wrap(byte[], int, int, MessageProp)->byte[]:::Applies per-message security services over the established security context
org.ietf.jgss.GSSContext#wrap(InputStream, OutputStream, MessageProp)->void:::Applies per-message security services over the established security context using streams
org.ietf.jgss.GSSContext#unwrap(byte[], int, int, MessageProp)->byte[]:::Used to process tokens generated by the wrap method on the other side of the context
org.ietf.jgss.GSSContext#unwrap(InputStream, OutputStream, MessageProp)->void:::Uses streams to process tokens generated by the wrap method on the other side of the context
org.ietf.jgss.GSSContext#getMIC(byte[], int, int, MessageProp)->byte[]:::Returns a token containing a cryptographic Message Integrity Code (MIC) for the supplied message,  for transfer to the peer application
org.ietf.jgss.GSSContext#getMIC(InputStream, OutputStream, MessageProp)->void:::Uses streams to produce a token containing a cryptographic MIC for the supplied message, for transfer to the peer application
org.ietf.jgss.GSSContext#verifyMIC(byte[], int, int, byte[], int, int, MessageProp)->void:::Verifies the cryptographic MIC, contained in the token parameter, over the supplied message.  The MessageProp object is instantiated by the application and is used by the underlying mechanism to return information to the caller such as the QOP indicating the strength of protection that was applied to the message and other supplementary message state information.  Since some application-level protocols may wish to use tokens emitted by getMIC to provide "secure framing", implementations should support the calculation and verification of MICs over zero-length messages.
org.ietf.jgss.GSSContext#verifyMIC(InputStream, InputStream, MessageProp)->void:::Uses streams to verify the cryptographic MIC, contained in the token parameter, over the supplied message
org.ietf.jgss.GSSContext#export()->byte[]:::Exports this context so that another process may import it.
org.ietf.jgss.GSSContext#requestMutualAuth(boolean)->void:::Requests that mutual authentication be done during context establishment
org.ietf.jgss.GSSContext#requestReplayDet(boolean)->void:::Requests that replay detection be enabled for the per-message security services after context establishment
org.ietf.jgss.GSSContext#requestSequenceDet(boolean)->void:::Requests that sequence checking be enabled for the per-message security services after context establishment
org.ietf.jgss.GSSContext#requestCredDeleg(boolean)->void:::Requests that the initiator's credentials be delegated to the acceptor during context establishment
org.ietf.jgss.GSSContext#requestAnonymity(boolean)->void:::Requests that the initiator's identity not be disclosed to the acceptor
org.ietf.jgss.GSSContext#requestConf(boolean)->void:::Requests that data confidentiality be enabled for the wrap method
org.ietf.jgss.GSSContext#requestInteg(boolean)->void:::Requests that data integrity be enabled for the wrap and getMICmethods
org.ietf.jgss.GSSContext#requestLifetime(int)->void:::Requests a lifetime in seconds for the context
org.ietf.jgss.GSSContext#setChannelBinding(ChannelBinding)->void:::Sets the channel bindings to be used during context establishment
org.ietf.jgss.GSSContext#getCredDelegState()->boolean:::Determines if credential delegation is enabled on this context
org.ietf.jgss.GSSContext#getMutualAuthState()->boolean:::Determines if mutual authentication is enabled on this context
org.ietf.jgss.GSSContext#getReplayDetState()->boolean:::Determines if replay detection is enabled for the per-message security services from this context
org.ietf.jgss.GSSContext#getSequenceDetState()->boolean:::Determines if sequence checking is enabled for the per-message security services from this context
org.ietf.jgss.GSSContext#getAnonymityState()->boolean:::Determines if the context initiator is anonymously authenticated to the context acceptor
org.ietf.jgss.GSSContext#isTransferable()->boolean:::Determines if the context is transferable to other processes through the use of the #export() export method
org.ietf.jgss.GSSContext#isProtReady()->boolean:::Determines if the context is ready for per message operations to be used over it
org.ietf.jgss.GSSContext#getConfState()->boolean:::Determines if data confidentiality is available over the context
org.ietf.jgss.GSSContext#getIntegState()->boolean:::Determines if data integrity is available over the context
org.ietf.jgss.GSSContext#getLifetime()->int:::Determines what the remaining lifetime for this context is
org.ietf.jgss.GSSContext#getSrcName()->GSSName:::Returns the name of the context initiator
org.ietf.jgss.GSSContext#getTargName()->GSSName:::Returns the name of the context acceptor
org.ietf.jgss.GSSContext#getMech()->Oid:::Determines what mechanism is being used for this context
org.ietf.jgss.GSSContext#getDelegCred()->GSSCredential:::Obtains the credentials delegated by the context initiator to the context acceptor
org.ietf.jgss.GSSContext#isInitiator()->boolean:::Determines if this is the context initiator
org.ietf.jgss.GSSCredential#dispose()->void:::Releases any sensitive information that the GSSCredential object may be containing
org.ietf.jgss.GSSCredential#getName()->GSSName::: Retrieves the name of the entity that the credential asserts.
org.ietf.jgss.GSSCredential#getName(Oid)->GSSName:::Retrieves a Mechanism Name of the entity that the credential asserts
org.ietf.jgss.GSSCredential#getRemainingLifetime()->int:::Returns the remaining lifetime in seconds for a credential
org.ietf.jgss.GSSCredential#getRemainingInitLifetime(Oid)->int:::Returns the lifetime in seconds for the credential to remain capable of initiating security contexts using the specified mechanism
org.ietf.jgss.GSSCredential#getRemainingAcceptLifetime(Oid)->int:::Returns the lifetime in seconds for the credential to remain capable of accepting security contexts using the specified mechanism
org.ietf.jgss.GSSCredential#getUsage()->int:::Returns the credential usage mode
org.ietf.jgss.GSSCredential#getUsage(Oid)->int:::Returns the credential usage mode for a specific mechanism
org.ietf.jgss.GSSCredential#getMechs()->Oid[]:::Returns a list of mechanisms supported by this credential
org.ietf.jgss.GSSCredential#add(GSSName, int, int, Oid, int)->void:::Adds a mechanism specific credential-element to an existing credential
org.ietf.jgss.GSSCredential#equals(Object)->boolean:::Tests if this GSSCredential asserts the same entity as the supplied object
org.ietf.jgss.GSSCredential#hashCode()->int:::Returns a hashcode value for this GSSCredential.
org.ietf.jgss.GSSException#getMajor()->int:::Returns the GSS-API level major error code for the problem causing this exception to be thrown
org.ietf.jgss.GSSException#getMinor()->int:::Returns the mechanism level error code for the problem causing this exception to be thrown
org.ietf.jgss.GSSException#getMajorString()->String:::Returns a string explaining the GSS-API level major error code in this exception.
org.ietf.jgss.GSSException#getMinorString()->String:::Returns a string explaining the mechanism specific error code
org.ietf.jgss.GSSException#setMinor(int, String)->void:::Used by the exception thrower to set the mechanism level minor error code and its string explanation
org.ietf.jgss.GSSException#toString()->String:::Returns a textual representation of both the major and the minor status codes.
org.ietf.jgss.GSSException#getMessage()->String:::Returns a textual representation of both the major and the minor status codes.
org.ietf.jgss.GSSManager#getInstance()->GSSManager:::Returns the default GSSManager implementation.
org.ietf.jgss.GSSManager#getMechs()->Oid[]:::Returns a list of mechanisms that are available to GSS-API callers through this GSSManager
org.ietf.jgss.GSSManager#getNamesForMech(Oid)->Oid[]:::Returns then name types supported by the indicated mechanism.  The default GSSManager instance includes support for the Kerberos v5 mechanism
org.ietf.jgss.GSSManager#getMechsForName(Oid)->Oid[]:::Returns a list of mechanisms that support the indicated name type.  The Kerberos v5 mechanism ("1.2.840.113554.1.2.2") will always be returned in this list when the indicated nametype is one of GSSName#NT_HOSTBASED_SERVICE GSSName.NT_HOSTBASED_SERVICE, GSSName#NT_EXPORT_NAME GSSName.NT_EXPORT_NAME, or "1.2.840.113554.1.2.2.1".
org.ietf.jgss.GSSManager#createName(String, Oid)->GSSName:::Factory method to convert a string name from the specified namespace to a GSSName object
org.ietf.jgss.GSSManager#createName(byte[], Oid)->GSSName:::Factory method to convert a byte array containing a name from the specified namespace to a GSSName object
org.ietf.jgss.GSSManager#createName(String, Oid, Oid)->GSSName::: Factory method to convert a string name from the specified namespace to a GSSName object and canonicalize it at the same time for a mechanism
org.ietf.jgss.GSSManager#createName(byte[], Oid, Oid)->GSSName::: Factory method to convert a byte array containing a name from the specified namespace to a GSSName object and canonicalize it at the same time for a mechanism
org.ietf.jgss.GSSManager#createCredential(int)->GSSCredential:::Factory method for acquiring default credentials
org.ietf.jgss.GSSManager#createCredential(GSSName, int, Oid, int)->GSSCredential:::Factory method for acquiring a single mechanism credential.  GSS-API mechanism providers must impose a local access-control policy on callers to prevent unauthorized callers from acquiring credentials to which they are not entitled
org.ietf.jgss.GSSManager#createCredential(GSSName, int, Oid[], int)->GSSCredential:::Factory method for acquiring credentials over a set of mechanisms
org.ietf.jgss.GSSManager#createContext(GSSName, Oid, GSSCredential, int)->GSSContext:::Factory method for creating a context on the initiator's side
org.ietf.jgss.GSSManager#createContext(GSSCredential)->GSSContext:::Factory method for creating a context on the acceptor' side
org.ietf.jgss.GSSManager#createContext(byte[])->GSSContext:::Factory method for creating a previously exported context
org.ietf.jgss.GSSManager#addProviderAtFront(Provider, Oid)->void:::This method is used to indicate to the GSSManager that the application would like a particular provider to be used ahead of all others when support is desired for the given mechanism
org.ietf.jgss.GSSManager#addProviderAtEnd(Provider, Oid)->void:::This method is used to indicate to the GSSManager that the application would like a particular provider to be used if no other provider can be found that supports the given mechanism
org.ietf.jgss.GSSName#equals(GSSName)->boolean:::Compares two GSSName objects to determine if they refer to the same entity.
org.ietf.jgss.GSSName#equals(Object)->boolean:::Compares this GSSName object to another Object that might be a GSSName
org.ietf.jgss.GSSName#hashCode()->int:::Returns a hashcode value for this GSSName.
org.ietf.jgss.GSSName#canonicalize(Oid)->GSSName:::Creates a name that is canonicalized for some mechanism.
org.ietf.jgss.GSSName#export()->byte[]:::Returns a canonical contiguous byte representation of a mechanism name (MN), suitable for direct, byte by byte comparison by authorization functions
org.ietf.jgss.GSSName#toString()->String:::Returns a textual representation of the GSSName object
org.ietf.jgss.GSSName#getStringNameType()->Oid:::Returns the name type of the printable representation of this name that can be obtained from the  toString method.
org.ietf.jgss.GSSName#isAnonymous()->boolean:::Tests if this name object represents an anonymous entity.
org.ietf.jgss.GSSName#isMN()->boolean:::Tests if this name object represents a Mechanism Name (MN)
org.ietf.jgss.MessageProp#getQOP()->int:::Retrieves the QOP value.
org.ietf.jgss.MessageProp#getPrivacy()->boolean:::Retrieves the privacy state.
org.ietf.jgss.MessageProp#setQOP(int)->void:::Sets the QOP value.
org.ietf.jgss.MessageProp#setPrivacy(boolean)->void:::Sets the privacy state.
org.ietf.jgss.MessageProp#isDuplicateToken()->boolean:::Tests if this is a duplicate of an earlier token.
org.ietf.jgss.MessageProp#isOldToken()->boolean:::Tests if this token's validity period has expired, i.e., the token is too old to be checked for duplication.
org.ietf.jgss.MessageProp#isUnseqToken()->boolean:::Tests if a later token had already been processed.
org.ietf.jgss.MessageProp#isGapToken()->boolean:::Tests if an expected token was not received, i.e., one or more predecessor tokens have not yet been successfully processed.
org.ietf.jgss.MessageProp#getMinorStatus()->int:::Retrieves the minor status code that the underlying mechanism might have set for this per-message operation.
org.ietf.jgss.MessageProp#getMinorString()->String:::Retrieves a string explaining the minor status code.
org.ietf.jgss.MessageProp#setSupplementaryStates(boolean, boolean, boolean, boolean, int, String)->void:::This method sets the state for the supplementary information flags and the minor status in MessageProp
org.ietf.jgss.Oid#getInstance(String)->Oid:::Only for calling by initializators used with declarations.
org.ietf.jgss.Oid#toString()->String:::Returns a string representation of the oid's integer components in dot separated notation.
org.ietf.jgss.Oid#equals(Object)->boolean:::Tests if two Oid objects represent the same Object identifier value.
org.ietf.jgss.Oid#getDER()->byte[]:::Returns the full ASN.1 DER encoding for this oid object, which includes the tag and length.
org.ietf.jgss.Oid#containedIn(Oid[])->boolean:::A utility method to test if this Oid value is contained within the supplied Oid array.
org.ietf.jgss.Oid#hashCode()->int:::Returns a hashcode value for this Oid.
