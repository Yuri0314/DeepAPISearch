RemoteX86Thread#getContext()::: remote x86 thread get context:::context->new->RemoteX86ThreadContext->regs->debugger->getThreadIntegerRegisterSet->debugger->getThreadIntegerRegisterSet->if->Assert->that->for->i->return
RemoteX86ThreadContext#setRegisterAsAddress(int, Address):::This can't be implemented in this class since we would have to       tie the implementation to, for example, the debugging system:::debugger->getAddressValue->setRegister
RemoteX86ThreadContext#getRegisterAsAddress(int):::This can't be implemented in this class since we would have to       tie the implementation to, for example, the debugging system:::return->debugger->getRegister->newAddress
RemoteX86ThreadFactory#createThreadWrapper(Address)::: remote x86 thread factory create thread wrapper:::return->new->RemoteX86Thread
RemoteX86ThreadFactory#createThreadWrapper(long)::: remote x86 thread factory create thread wrapper:::return->new->RemoteX86Thread
