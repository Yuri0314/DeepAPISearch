AbstractTranslet#printInternalState():::********************************************************************* Debugging **********************************************************************:::println->println->println->println->paramsStack->size->println->println->println->println->Runtime->getRuntime->totalMemory->println
AbstractTranslet#makeDOMAdapter(DOM):::Wrap the initial input DOM in a dom adapter:::dom->getDocument->setRootForKeys->return->new->DOMAdapter
AbstractTranslet#pushParamFrame():::Push a new parameter frame.:::paramsStack->add
AbstractTranslet#popParamFrame():::Pop the topmost parameter frame.:::if->oldpbase->paramsStack->get->for->i
AbstractTranslet#addParameter(String, Object):::Add a new global parameter if not already in the current frame:::BasisLibrary->mapQNameToJavaName->return->addParameter
AbstractTranslet#addParameter(String, Object, boolean):::Add a new global or local parameter if not already in the current frame:::for->i->paramsStack->new->Parameter->add->return
AbstractTranslet#clearParameters():::Clears the parameter stack.:::paramsStack->clear
AbstractTranslet#getParameter(String):::Get the value of a parameter from the current frame or <tt>null</tt> if undefined.:::BasisLibrary->mapQNameToJavaName->for->i->return
AbstractTranslet#setMessageHandler(MessageHandler):::Set the translet's message handler - must implement MessageHandler:::
AbstractTranslet#displayMessage(String):::Pass a message to the message handler - used by Message class.:::if->println->else->_msgHandler->displayMessage
AbstractTranslet#addDecimalFormat(String, DecimalFormatSymbols):::Adds a DecimalFormat object to the _formatSymbols map:::if->new->HashMap<>->if->df->new->DecimalFormat->if->df->setDecimalFormatSymbols->_formatSymbols->put
AbstractTranslet#getDecimalFormat(String):::Retrieves a named DecimalFormat object from the _formatSymbols map.:::if->if->df->_formatSymbols->get->if->_formatSymbols->get->return->return
AbstractTranslet#prepassDocument(DOM):::Give the translet an opportunity to perform a prepass on the document to extract any information that it can store in an optimized form:::document->getSize->setIndexSize->buildIDIndex
AbstractTranslet#postInitialization():::After constructing the translet object, this method must be called to perform any version-specific post-initialization that's required.:::if->arraySize->newURIsArray->new->StringArr->newNamesArray->new->StringArr->newTypesArray->new->intArr->for->i->if->BasisLibrary->this->getClass->getName->runTimeError
AbstractTranslet#setIndexSize(int):::This method is used to pass the largest DOM size to the translet:::if
AbstractTranslet#createKeyIndex():::Creates a KeyIndex object of the desired size - don't want to resize!!!:::return->new->KeyIndex
AbstractTranslet#buildKeyIndex(String, int, String):::Adds a value to a key/id index:::index->buildKeyIndexHelper->index->add
AbstractTranslet#buildKeyIndex(String, DOM):::Create an empty KeyIndex in the DOM case:::index->buildKeyIndexHelper->index->dom->getDocument->setDom
AbstractTranslet#getKeyIndex(String):::Returns the index for a given key (or id):::if->return->new->KeyIndex->index->_keyIndexes->get->if->return->new->KeyIndex->return
AbstractTranslet#buildKeys(DOM, DTMAxisIterator, SerializationHandler, int):::This method builds key indexes - it is overridden in the compiled translet in cases where the <xsl:key> element is used:::
AbstractTranslet#setKeyIndexDom(String, DOM):::This method builds key indexes - it is overridden in the compiled translet in cases where the <xsl:key> element is used:::getKeyIndex->document->getDocument->setDom
AbstractTranslet#setDOMCache(DOMCache):::Sets the DOM cache used for additional documents loaded using the document() function.:::
AbstractTranslet#getDOMCache():::Returns the DOM cache used for this translet:::return
AbstractTranslet#transform(DOM, DTMAxisIterator, SerializationHandler):::Main transform() method - this is overridden by the compiled translet:::
AbstractTranslet#transform(DOM, SerializationHandler):::Calls transform() with a given output handler:::try->document->getIterator->transform->catch->finally
AbstractTranslet#characters(String, SerializationHandler):::Used by some compiled code as a shortcut for passing strings to the output handler:::if->try->handler->characters->catch->throw->new->TransletException->finally
AbstractTranslet#addCdataElement(String):::Add's a name of an element whose text contents should be output as CDATA:::if->new->ArrayList<>->lastColon->name->lastIndexOf->if->uri->name->substring->localName->name->substring->_cdata->add->_cdata->add->else->_cdata->add->_cdata->add
AbstractTranslet#transferOutputSettings(SerializationHandler):::Transfer the output settings to the output post-processor:::if->if->_method->equals->if->handler->setStandalone->if->handler->setOmitXMLDeclaration->handler->setCdataSectionElements->if->handler->setVersion->handler->setIndent->if->handler->setIndentAmount->if->handler->setDoctype->handler->setIsStandalone->else->if->_method->equals->handler->setIndent->handler->setDoctype->if->handler->setMediaType->else->handler->setCdataSectionElements->if->handler->setVersion->if->handler->setStandalone->if->handler->setOmitXMLDeclaration->handler->setIndent->handler->setDoctype->handler->setIsStandalone
AbstractTranslet#overrideDefaultParser():::Return the state of the services mechanism feature.:::return
AbstractTranslet#setOverrideDefaultParser(boolean):::Set the state of the services mechanism feature.:::
AbstractTranslet#getAllowedProtocols():::Return allowed protocols for accessing external stylesheet.:::return
AbstractTranslet#setAllowedProtocols(String):::Set allowed protocols for accessing external stylesheet.:::
BasisLibrary#countF(DTMAxisIterator):::Standard function count(node-set):::return->iterator->getLast
BasisLibrary#positionF(DTMAxisIterator):::Standard function position():::return->iterator->isReverse->iterator->getLast->iterator->getPosition->iterator->getPosition
BasisLibrary#sumF(DTMAxisIterator, DOM):::XSLT Standard function sum(node-set):::try->result->node->while->iterator->next->Double->dom->getStringValueX->parseDouble->return->catch->return->finally
BasisLibrary#stringF(int, DOM):::XSLT Standard function string():::return->dom->getStringValueX
BasisLibrary#stringF(Object, DOM):::XSLT Standard function string(value):::if->return->dom->reset->next->getStringValueX->else->if->return->dom->getStringValueX->else->if->return->getStringValue->else->return->obj->toString
BasisLibrary#stringF(Object, int, DOM):::XSLT Standard function string(value):::if->return->dom->reset->next->getStringValueX->else->if->return->dom->getStringValueX->else->if->return->getStringValue->else->if->d->result->d->toString->length->result->length->if->result->charAt->result->charAt->return->result->substring->else->return->else->return->obj->toString
BasisLibrary#numberF(int, DOM):::XSLT Standard function number():::return->dom->getStringValueX->stringToReal
BasisLibrary#numberF(Object, DOM):::XSLT Standard function number(value):::if->return->doubleValue->else->if->return->doubleValue->else->if->return->booleanValue->else->if->return->stringToReal->else->if->iter->return->dom->iter->reset->next->getStringValueX->stringToReal->else->if->return->dom->getStringValueX->stringToReal->else->if->return->getStringValue->stringToReal->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#roundF(double):::XSLT Standard function round():::return->Math->floor->Double->isNaN
BasisLibrary#booleanF(Object):::XSLT Standard function boolean():::if->temp->doubleValue->return->Double->isNaN->else->if->return->doubleValue->else->if->return->booleanValue->else->if->return->equals->else->if->iter->return->iter->reset->next->else->if->return->else->if->temp->getStringValue->return->temp->equals->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#substringF(String, double):::XSLT Standard function substring():::if->Double->isNaN->return->strlen->getStringLength->istart->Math->round->if->return->if->try->value->offsetByCodePoints->return->value->substring->catch->runTimeError->return->finally
BasisLibrary#substringF(String, double, double):::XSLT Standard function substring():::if->Double->isInfinite->Double->isNaN->Double->isNaN->return->istart->Math->round->ilength->Math->round->isum->if->Double->isInfinite->else->strlen->getStringLength->if->return->if->try->value->offsetByCodePoints->if->return->value->substring->else->offset->value->offsetByCodePoints->return->value->substring->catch->runTimeError->return->finally
BasisLibrary#substring_afterF(String, String):::XSLT Standard function substring-after().:::index->value->indexOf->if->return->value->substring->length->substring->else->return
BasisLibrary#substring_beforeF(String, String):::XSLT Standard function substring-before().:::index->value->indexOf->if->return->value->substring->else->return
BasisLibrary#translateF(String, String, String):::XSLT Standard function translate().:::tol->to->length->froml->from->length->valuel->value->length->result->threadLocalStringBuilder->get->result->setLength->for->j->i->return->result->toString
BasisLibrary#normalize_spaceF(int, DOM):::XSLT Standard function normalize-space().:::return->dom->getStringValueX->normalize_spaceF
BasisLibrary#normalize_spaceF(String):::XSLT Standard function normalize-space(string).:::i->n->value->length->result->threadLocalStringBuilder->get->result->setLength->while->value->charAt->isWhiteSpace->while->while->value->charAt->isWhiteSpace->result->value->charAt->append->if->break->while->value->charAt->isWhiteSpace->if->result->append->return->result->toString
BasisLibrary#generate_idF(int):::XSLT Standard function generate-id().:::if->return->else->return
BasisLibrary#getLocalName(String):::utility function for calls to local-name().:::idx->value->lastIndexOf->if->value->substring->value->lastIndexOf->if->value->substring->return
BasisLibrary#unresolved_externalF(String):::External functions that cannot be resolved are replaced with a call to this method:::runTimeError
BasisLibrary#unallowed_extension_functionF(String):::Utility function to throw a runtime error on the use of an extension function when the secure processing feature is set to true.:::runTimeError
BasisLibrary#unallowed_extension_elementF(String):::Utility function to throw a runtime error on the use of an extension element when the secure processing feature is set to true.:::runTimeError
BasisLibrary#unsupported_ElementF(String, boolean):::Utility function to throw a runtime error for an unsupported element:::if->runTimeError->else->runTimeError
BasisLibrary#namespace_uriF(DTMAxisIterator, DOM):::XSLT Standard function namespace-uri(node-set).:::return->iter->next->namespace_uriF
BasisLibrary#system_propertyF(String):::XSLT Standard function system-property(name):::if->name->equals->return->if->name->equals->return->if->name->equals->return->runTimeError->return
BasisLibrary#namespace_uriF(int, DOM):::XSLT Standard function namespace-uri().:::value->dom->getNodeName->colon->value->lastIndexOf->if->return->value->substring->else->return
BasisLibrary#objectTypeF(Object):::Implements the object-type() extension function.:::if->return->else->if->return->else->if->return->else->if->return->else->if->return->else->return
BasisLibrary#nodesetF(Object):::Implements the nodeset() extension function.:::if->dom->return->dom->getDocument->new->SingletonIterator->else->if->return->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#compare(DTMAxisIterator, DTMAxisIterator, int, DOM):::Utility function: node-set/node-set compare.:::lnode->left->reset->while->left->next->lvalue->dom->getStringValueX->rnode->right->reset->while->right->next->if->if->return->else->if->continue->if->dom->getStringValueX->compareStrings->return->return
BasisLibrary#compare(DTMAxisIterator, double, int, DOM):::Utility function: node-set/number compare.:::node->switch->while->left->next->if->dom->getStringValueX->numberF->return->break->while->left->next->if->dom->getStringValueX->numberF->return->break->while->left->next->if->dom->getStringValueX->numberF->return->break->while->left->next->if->dom->getStringValueX->numberF->return->break->while->left->next->if->dom->getStringValueX->numberF->return->break->while->left->next->if->dom->getStringValueX->numberF->return->break->runTimeError->return
BasisLibrary#compare(DTMAxisIterator, String, int, DOM):::Utility function: node-set/string comparison.:::node->while->left->next->if->dom->getStringValueX->compareStrings->return->return
BasisLibrary#testLanguage(String, DOM, int):::Utility function: used to test context node's language:::nodeLang->dom->getLanguage->if->return->else->nodeLang->toLowerCase->testLang->toLowerCase->if->testLang->length->return->nodeLang->startsWith->else->return->nodeLang->equals
BasisLibrary#stringToReal(String):::Utility function: used in StringType to convert a string to a real.:::try->return->Double->valueOf->doubleValue->catch->return->finally
BasisLibrary#stringToInt(String):::Utility function: used in StringType to convert a string to an int.:::try->return->Integer->parseInt->catch->return->finally
BasisLibrary#realToString(double):::Utility function: used in RealType to convert a real to a string:::m->Math->abs->if->result->Double->toString->length->result->length->if->result->charAt->result->charAt->return->result->substring->else->return->else->if->Double->isNaN->Double->isInfinite->return->Double->toString->result->threadLocalStringBuffer->get->result->setLength->xpathFormatter->format->return->result->toString
BasisLibrary#realToInt(double):::Utility function: used in RealType to convert a real to an integer:::return
BasisLibrary#referenceToNodeSet(Object):::Utility function: used to convert references to node-sets:::if->return->new->SingletonIterator->else->if->return->cloneIterator->reset->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#referenceToNodeList(Object, DOM):::Utility function: used to convert reference to org.w3c.dom.NodeList.:::if->iter->referenceToNodeSet->return->dom->makeNodeList->else->if->return->dom->makeNodeList->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#referenceToNode(Object, DOM):::Utility function: used to convert reference to org.w3c.dom.Node.:::if->iter->referenceToNodeSet->return->dom->makeNode->else->if->iter->dom->getChildren->return->dom->makeNode->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#referenceToLong(Object):::Utility function: used to convert reference to long.:::if->return->longValue->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#referenceToDouble(Object):::Utility function: used to convert reference to double.:::if->return->doubleValue->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#referenceToBoolean(Object):::Utility function: used to convert reference to boolean.:::if->return->booleanValue->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#referenceToString(Object, DOM):::Utility function: used to convert reference to String.:::if->return->else->if->return->dom->reset->next->getStringValueX->else->if->return->dom->getStringValueX->else->if->return->getStringValue->else->className->obj->getClass->getName->runTimeError->return
BasisLibrary#node2Iterator(org.w3c.dom.Node, Translet, DOM):::Utility function used to convert a w3c Node into an internal DOM iterator.:::inNode->nodelist->new->org.w3c.dom.NodeList->return->nodeList2Iterator
BasisLibrary#nodeList2Iterator(org.w3c.dom.NodeList, Translet, DOM):::Utility function used to convert a w3c NodeList into a internal DOM iterator.:::n->doc->dtmManager->proxyNodes->nodeList->getLength->new->intArr->if->getDTMManager->for->i->nodeList->getLength->iter->childIter->attrIter->if->multiDOM->idom->dtmManager->new->DOMSource->getDTM->domAdapter->translet->getNamesArray->translet->getUrisArray->translet->getTypesArray->translet->getNamespaceArray->new->DOMAdapter->multiDOM->addDOMAdapter->iter1->idom->getAxisIterator->iter2->idom->getAxisIterator->new->StepIterator->new->AbsoluteIterator->iter->setStartNode->idom->getAxisIterator->idom->getAxisIterator->dtmHandles->new->intArr->for->i->nodeList->getLength->if->throw->new->InternalRuntimeError->return->new->ArrayNodeListIterator
BasisLibrary#referenceToResultTree(Object):::Utility function used to convert references to DOMs.:::try->return->catch->className->obj->getClass->getName->runTimeError->return->finally
BasisLibrary#getSingleNode(DTMAxisIterator):::Utility function: used with nth position filters to convert a sequence of nodes to just one single node (the one at position n).:::node->iterator->next->return->new->SingletonIterator
BasisLibrary#checkAttribQName(String):::Utility function to check if xsl:attribute has a valid qname This method should only be invoked if the name attribute is an AVT:::firstOccur->name->indexOf->lastOccur->name->lastIndexOf->localName->name->substring->if->newPrefix->name->substring->if->oriPrefix->name->substring->if->XML11Char->isXML11ValidNCName->runTimeError->if->XML11Char->isXML11ValidNCName->runTimeError->if->XML11Char->isXML11ValidNCName->localName->equals->runTimeError
BasisLibrary#checkNCName(String):::Utility function to check if a name is a valid ncname This method should only be invoked if the attribute value is an AVT:::if->XML11Char->isXML11ValidNCName->runTimeError
BasisLibrary#checkQName(String):::Utility function to check if a name is a valid qname This method should only be invoked if the attribute value is an AVT:::if->XML11Char->isXML11ValidQName->runTimeError
BasisLibrary#startXslElement(String, String, SerializationHandler, DOM, int):::Utility function for the implementation of xsl:element.:::try->prefix->index->qname->indexOf->if->qname->substring->if->namespace->length->try->dom->lookupNamespace->catch->handler->flushPending->nm->handler->getNamespaceMappings->nm->lookupNamespace->if->runTimeError->finally->handler->qname->substring->startElement->handler->namespaceAfterStartElement->else->if->namespace->length->generatePrefix->handler->startElement->handler->namespaceAfterStartElement->else->handler->startElement->catch->throw->e->getMessage->new->RuntimeException->finally->return
BasisLibrary#getPrefix(String):::This function is used in the execution of xsl:element:::index->qname->indexOf->return->qname->substring
BasisLibrary#generatePrefix():::These functions are used in the execution of xsl:element to generate and reset namespace prefix index local to current transformation process:::return->threadLocalPrefixIndex->get->getAndIncrement
BasisLibrary#runTimeError(String):::Print a run-time error message.:::throw->m_bundle->getString->new->RuntimeException
BasisLibrary#replace(String, char, String):::Replace a certain character in a string with a new substring.:::return->base->indexOf->String->valueOf->new->StringArr->replace
BasisLibrary#mapQNameToJavaName(String):::Utility method to allow setting parameters of the form {namespaceuri}localName which get mapped to an instance variable in the class Hence  a parameter of the form "{http://foo.bar}xyz" will be replaced with the corresponding values by the BasisLibrary's utility method mapQNametoJavaName and thus get mapped to legal java variable names:::return->new->StringArr->replace
BasisLibrary#getStringLength(String)::: Utility method to calculate string-length as a number of code points,  to avoid possible errors with string that contains  complementary characters:::return->str->str->length->codePointCount
ErrorMessages#getContents():::Get the lookup table for error messages.:::return->new->ObjectArrs
ErrorMessages_ja#getContents():::Get the lookup table for error messages.:::return->new->ObjectArrs
ErrorMessages_zh_CN#getContents():::Get the lookup table for error messages.:::return->new->ObjectArrs
StringValueHandler#getValueOfPI():::The value of a PI must not contain the substring "?>":::value->getValue->if->value->indexOf->n->value->length->valueOfPI->new->StringBuilder->for->i->return->valueOfPI->toString->return
