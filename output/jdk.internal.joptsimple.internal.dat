AbbreviationMap#contains(String):::Tells whether the given key is in the map, or whether the given key is a unique abbreviation of a key that is in the map.:::return->get
AbbreviationMap#get(String):::Answers the value associated with the given key:::chars->charsOf->child->foreach->get->if->return->return
AbbreviationMap#put(String, V):::Associates a given value with a given key:::if->throw->new->NullPointerException->if->key->length->throw->new->IllegalArgumentException->chars->charsOf->add
AbbreviationMap#putAll(Iterable, V):::Associates a given value with a given set of keys:::foreach->put
AbbreviationMap#remove(String):::If the map contains the given key, dissociates the key from its value.:::if->key->length->throw->new->IllegalArgumentException->keyChars->charsOf->remove
AbbreviationMap#toJavaUtilMap():::Gives a Java map representation of this abbreviation map.:::mappings->new->TreeMap<>->addToMappings->return
Classes#shortNameOf(String):::Gives the "short version" of the given class name:::return->className->className->lastIndexOf->substring
Classes#wrapperOf(Class):::Gives the primitive wrapper class for the given class:::return->clazz->isPrimitive->WRAPPERS->get
Reflection#findConverter(Class):::Finds an appropriate value converter for the given class.:::maybeWrapper->wrapperOf->valueOf->valueOfConverter->if->return->constructor->constructorConverter->if->return->throw->new->IllegalArgumentException
Reflection#instantiate(Constructor, Object...):::Invokes the given constructor with the given arguments.:::try->return->constructor->newInstance->catch->throw->reflectionException->finally
Reflection#invoke(Method, Object...):::Invokes the given static method with the given arguments.:::try->return->method->invoke->catch->throw->reflectionException->finally
Strings#repeat(char, int):::Gives a string consisting of the given character repeated the given number of times.:::buffer->new->StringBuilder->for->i->return->buffer->toString
Strings#isNullOrEmpty(String):::Tells whether the given string is either  or consists solely of whitespace characters.:::return->target->isEmpty
Strings#surround(String, char, char):::Gives a string consisting of a given string prepended and appended with surrounding characters.:::return
Strings#join(String[], String):::Gives a string consisting of the elements of a given array of strings, each separated by a given separator string.:::return->asList->join
Strings#join(Iterable, String):::Gives a string consisting of the string representations of the elements of a given array of objects, each separated by a given separator string.:::buffer->new->StringBuilder->for->iter->pieces->iterator->iter->hasNext->return->buffer->toString
