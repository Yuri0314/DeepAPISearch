com.sun.security.sasl.ntlm.FactoryImpl#createSaslClient(String[], String, String, String, Map, CallbackHandler)->SaslClient:::Returns a new instance of the NTLM SASL client mechanism
com.sun.security.sasl.ntlm.FactoryImpl#createSaslServer(String, String, String, Map, CallbackHandler)->SaslServer:::Returns a new instance of the NTLM SASL server mechanism
com.sun.security.sasl.ntlm.FactoryImpl#getMechanismNames(Map)->String[]:::Returns the authentication mechanisms that this factory can produce.
com.sun.security.sasl.ntlm.NTLMClient#getMechanismName()->String::: client get mechanism name
com.sun.security.sasl.ntlm.NTLMClient#isComplete()->boolean::: client is complete
com.sun.security.sasl.ntlm.NTLMClient#unwrap(byte[], int, int)->byte[]::: client unwrap
com.sun.security.sasl.ntlm.NTLMClient#wrap(byte[], int, int)->byte[]::: client wrap
com.sun.security.sasl.ntlm.NTLMClient#getNegotiatedProperty(String)->Object::: client get negotiated property
com.sun.security.sasl.ntlm.NTLMClient#dispose()->void::: client dispose
com.sun.security.sasl.ntlm.NTLMClient#hasInitialResponse()->boolean::: client has initial response
com.sun.security.sasl.ntlm.NTLMClient#evaluateChallenge(byte[])->byte[]::: client evaluate challenge
com.sun.security.sasl.ntlm.NTLMServer#getMechanismName()->String::: server get mechanism name
com.sun.security.sasl.ntlm.NTLMServer#evaluateResponse(byte[])->byte[]::: server evaluate response
com.sun.security.sasl.ntlm.NTLMServer#isComplete()->boolean::: server is complete
com.sun.security.sasl.ntlm.NTLMServer#getAuthorizationID()->String::: server get authorization d
com.sun.security.sasl.ntlm.NTLMServer#unwrap(byte[], int, int)->byte[]::: server unwrap
com.sun.security.sasl.ntlm.NTLMServer#wrap(byte[], int, int)->byte[]::: server wrap
com.sun.security.sasl.ntlm.NTLMServer#getNegotiatedProperty(String)->Object::: server get negotiated property
com.sun.security.sasl.ntlm.NTLMServer#dispose()->void::: server dispose
