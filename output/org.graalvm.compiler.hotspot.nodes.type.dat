org.graalvm.compiler.hotspot.nodes.type.HotSpotNarrowOopStamp#copyWith(ResolvedJavaType, boolean, boolean, boolean)->AbstractObjectStamp::: hot spot narrow oop stamp copy with
org.graalvm.compiler.hotspot.nodes.type.HotSpotNarrowOopStamp#compressed(AbstractObjectStamp, CompressEncoding)->Stamp::: hot spot narrow oop stamp compressed
org.graalvm.compiler.hotspot.nodes.type.HotSpotNarrowOopStamp#readConstant(MemoryAccessProvider, Constant, long)->Constant::: hot spot narrow oop stamp read constant
org.graalvm.compiler.hotspot.nodes.type.HotSpotNarrowOopStamp#nullConstant()->JavaConstant::: hot spot narrow oop stamp null constant
org.graalvm.compiler.hotspot.nodes.type.HotSpotNarrowOopStamp#isCompatible(Constant)->boolean::: hot spot narrow oop stamp is compatible
org.graalvm.compiler.hotspot.nodes.type.HotSpotNarrowOopStamp#mkStamp(CompressionOp, Stamp, CompressEncoding)->Stamp::: hot spot narrow oop stamp mk stamp
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#klass()->KlassPointerStamp::: klass pointer stamp klass
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#klassNonNull()->KlassPointerStamp::: klass pointer stamp klass non null
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#klassAlwaysNull()->KlassPointerStamp::: klass pointer stamp klass always null
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#accept(Visitor)->void::: klass pointer stamp accept
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#copyWith(boolean, boolean)->AbstractPointerStamp::: klass pointer stamp copy with
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#isCompatible(Stamp)->boolean::: klass pointer stamp is compatible
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#isCompatible(Constant)->boolean::: klass pointer stamp is compatible
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#constant(Constant, MetaAccessProvider)->Stamp::: klass pointer stamp constant
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#nullConstant()->JavaConstant::: klass pointer stamp null constant
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#getLIRKind(LIRKindTool)->LIRKind::: klass pointer stamp get kind
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#isCompressed()->boolean::: klass pointer stamp is compressed
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#getEncoding()->CompressEncoding::: klass pointer stamp get encoding
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#compressed(CompressEncoding)->KlassPointerStamp::: klass pointer stamp compressed
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#uncompressed()->KlassPointerStamp::: klass pointer stamp uncompressed
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#readConstant(MemoryAccessProvider, Constant, long)->Constant::: klass pointer stamp read constant
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#hashCode()->int::: klass pointer stamp hash code
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#equals(Object)->boolean::: klass pointer stamp equals
org.graalvm.compiler.hotspot.nodes.type.KlassPointerStamp#toString()->String::: klass pointer stamp to string
org.graalvm.compiler.hotspot.nodes.type.MetaspacePointerStamp#getLIRKind(LIRKindTool)->LIRKind::: metaspace pointer stamp get kind
org.graalvm.compiler.hotspot.nodes.type.MetaspacePointerStamp#empty()->Stamp::: metaspace pointer stamp empty
org.graalvm.compiler.hotspot.nodes.type.MetaspacePointerStamp#isCompatible(Constant)->boolean::: metaspace pointer stamp is compatible
org.graalvm.compiler.hotspot.nodes.type.MetaspacePointerStamp#hasValues()->boolean::: metaspace pointer stamp has values
org.graalvm.compiler.hotspot.nodes.type.MetaspacePointerStamp#join(Stamp)->Stamp::: metaspace pointer stamp join
org.graalvm.compiler.hotspot.nodes.type.MetaspacePointerStamp#javaType(MetaAccessProvider)->ResolvedJavaType::: metaspace pointer stamp java type
org.graalvm.compiler.hotspot.nodes.type.MetaspacePointerStamp#appendString(StringBuilder)->void::: metaspace pointer stamp append string
org.graalvm.compiler.hotspot.nodes.type.MethodCountersPointerStamp#methodCounters()->MethodCountersPointerStamp::: method counters pointer stamp method counters
org.graalvm.compiler.hotspot.nodes.type.MethodCountersPointerStamp#methodCountersNonNull()->MethodCountersPointerStamp::: method counters pointer stamp method counters non null
org.graalvm.compiler.hotspot.nodes.type.MethodCountersPointerStamp#copyWith(boolean, boolean)->AbstractPointerStamp::: method counters pointer stamp copy with
org.graalvm.compiler.hotspot.nodes.type.MethodCountersPointerStamp#isCompatible(Stamp)->boolean::: method counters pointer stamp is compatible
org.graalvm.compiler.hotspot.nodes.type.MethodCountersPointerStamp#constant(Constant, MetaAccessProvider)->Stamp::: method counters pointer stamp constant
org.graalvm.compiler.hotspot.nodes.type.MethodCountersPointerStamp#readConstant(MemoryAccessProvider, Constant, long)->Constant::: method counters pointer stamp read constant
org.graalvm.compiler.hotspot.nodes.type.MethodCountersPointerStamp#toString()->String::: method counters pointer stamp to string
org.graalvm.compiler.hotspot.nodes.type.MethodPointerStamp#method()->MethodPointerStamp::: method pointer stamp method
org.graalvm.compiler.hotspot.nodes.type.MethodPointerStamp#methodNonNull()->MethodPointerStamp::: method pointer stamp method non null
org.graalvm.compiler.hotspot.nodes.type.MethodPointerStamp#copyWith(boolean, boolean)->AbstractPointerStamp::: method pointer stamp copy with
org.graalvm.compiler.hotspot.nodes.type.MethodPointerStamp#isCompatible(Stamp)->boolean::: method pointer stamp is compatible
org.graalvm.compiler.hotspot.nodes.type.MethodPointerStamp#isCompatible(Constant)->boolean::: method pointer stamp is compatible
org.graalvm.compiler.hotspot.nodes.type.MethodPointerStamp#constant(Constant, MetaAccessProvider)->Stamp::: method pointer stamp constant
org.graalvm.compiler.hotspot.nodes.type.MethodPointerStamp#readConstant(MemoryAccessProvider, Constant, long)->Constant::: method pointer stamp read constant
org.graalvm.compiler.hotspot.nodes.type.MethodPointerStamp#toString()->String::: method pointer stamp to string
