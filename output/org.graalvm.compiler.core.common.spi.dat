org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider_OptionDescriptors#get(String)->OptionDescriptor::: java constant field provider_ option descriptors get
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider_OptionDescriptors#iterator()->Iterator::: java constant field provider_ option descriptors iterator
org.graalvm.compiler.core.common.spi.CodeGenProviders#getMetaAccess()->MetaAccessProvider::: code gen providers get meta access
org.graalvm.compiler.core.common.spi.CodeGenProviders#getCodeCache()->CodeCacheProvider::: code gen providers get code cache
org.graalvm.compiler.core.common.spi.CodeGenProviders#getForeignCalls()->ForeignCallsProvider::: code gen providers get foreign calls
org.graalvm.compiler.core.common.spi.CodeGenProviders#getConstantReflection()->ConstantReflectionProvider::: code gen providers get constant reflection
org.graalvm.compiler.core.common.spi.ConstantFieldProvider.ConstantFieldTool#getOptions()->OptionValues::: constant field tool get options
org.graalvm.compiler.core.common.spi.ConstantFieldProvider.ConstantFieldTool#readValue()->JavaConstant::: constant field tool read value
org.graalvm.compiler.core.common.spi.ConstantFieldProvider.ConstantFieldTool#getReceiver()->JavaConstant::: constant field tool get receiver
org.graalvm.compiler.core.common.spi.ConstantFieldProvider.ConstantFieldTool#foldConstant(JavaConstant)->T::: constant field tool fold constant
org.graalvm.compiler.core.common.spi.ConstantFieldProvider.ConstantFieldTool#foldStableArray(JavaConstant, int, boolean)->T::: constant field tool fold stable array
org.graalvm.compiler.core.common.spi.ConstantFieldProvider#readConstantField(ResolvedJavaField, ConstantFieldTool)->T:::Decide whether a read from the field should be constant folded
org.graalvm.compiler.core.common.spi.ForeignCallDescriptor#getName()->String:::Gets the name of this foreign call.
org.graalvm.compiler.core.common.spi.ForeignCallDescriptor#getResultType()->Class:::Gets the return type of this foreign call.
org.graalvm.compiler.core.common.spi.ForeignCallDescriptor#getArgumentTypes()->Class[]:::Gets the argument types of this foreign call.
org.graalvm.compiler.core.common.spi.ForeignCallDescriptor#hashCode()->int::: foreign call descriptor hash code
org.graalvm.compiler.core.common.spi.ForeignCallDescriptor#equals(Object)->boolean::: foreign call descriptor equals
org.graalvm.compiler.core.common.spi.ForeignCallDescriptor#toString()->String::: foreign call descriptor to string
org.graalvm.compiler.core.common.spi.ForeignCallLinkage#getOutgoingCallingConvention()->CallingConvention:::Gets the details of where parameters are passed and value(s) are returned from the caller's perspective.
org.graalvm.compiler.core.common.spi.ForeignCallLinkage#getIncomingCallingConvention()->CallingConvention:::Gets the details of where parameters are passed and value(s) are returned from the callee's perspective.
org.graalvm.compiler.core.common.spi.ForeignCallLinkage#getMaxCallTargetOffset()->long:::Returns the maximum absolute offset of a PC relative call to this stub from any position in the code cache or -1 when not applicable
org.graalvm.compiler.core.common.spi.ForeignCallLinkage#getDescriptor()->ForeignCallDescriptor::: foreign call linkage get descriptor
org.graalvm.compiler.core.common.spi.ForeignCallLinkage#getTemporaries()->Value[]:::Gets the values used/killed by this foreign call.
org.graalvm.compiler.core.common.spi.ForeignCallLinkage#destroysRegisters()->boolean:::Determines if the foreign call target destroys all registers.
org.graalvm.compiler.core.common.spi.ForeignCallLinkage#needsDebugInfo()->boolean:::Determines if debug info needs to be associated with this call
org.graalvm.compiler.core.common.spi.ForeignCallsProvider#isReexecutable(ForeignCallDescriptor)->boolean:::Determines if a given foreign call is side-effect free
org.graalvm.compiler.core.common.spi.ForeignCallsProvider#getKilledLocations(ForeignCallDescriptor)->LocationIdentity[]:::Gets the set of memory locations killed by a given foreign call
org.graalvm.compiler.core.common.spi.ForeignCallsProvider#canDeoptimize(ForeignCallDescriptor)->boolean:::Determines if deoptimization can occur during a given foreign call.
org.graalvm.compiler.core.common.spi.ForeignCallsProvider#isGuaranteedSafepoint(ForeignCallDescriptor)->boolean:::Identifies foreign calls which are guaranteed to include a safepoint check.
org.graalvm.compiler.core.common.spi.ForeignCallsProvider#lookupForeignCall(ForeignCallDescriptor)->ForeignCallLinkage:::Gets the linkage for a foreign call.
org.graalvm.compiler.core.common.spi.ForeignCallsProvider#isAvailable(ForeignCallDescriptor)->boolean:::Return true if the foreign call has a binding.
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#readConstantField(ResolvedJavaField, ConstantFieldTool)->T::: java constant field provider read constant field
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#foldStableArray(JavaConstant, ResolvedJavaField, ConstantFieldTool)->T::: java constant field provider fold stable array
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#isStableFieldValueConstant(ResolvedJavaField, JavaConstant, ConstantFieldTool)->boolean::: java constant field provider is stable field value constant
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#isFinalFieldValueConstant(ResolvedJavaField, JavaConstant, ConstantFieldTool)->boolean::: java constant field provider is final field value constant
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#isStableField(ResolvedJavaField, ConstantFieldTool)->boolean::: java constant field provider is stable field
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#isDefaultStableField(ResolvedJavaField, ConstantFieldTool)->boolean::: java constant field provider is default stable field
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#isFinalField(ResolvedJavaField, ConstantFieldTool)->boolean::: java constant field provider is final field
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#isSyntheticEnumSwitchMap(ResolvedJavaField)->boolean::: java constant field provider is synthetic enum switch map
org.graalvm.compiler.core.common.spi.JavaConstantFieldProvider#isWellKnownImplicitStableField(ResolvedJavaField)->boolean::: java constant field provider is well known implicit stable field
org.graalvm.compiler.core.common.spi.LIRKindTool#getIntegerKind(int)->LIRKind:::Get an architecture specific integer kind of a certain size.
org.graalvm.compiler.core.common.spi.LIRKindTool#getFloatingKind(int)->LIRKind:::Get an architecture specific floating point kind of a certain size.
org.graalvm.compiler.core.common.spi.LIRKindTool#getObjectKind()->LIRKind:::Get the architecture specific kind used to represent Java objects.
org.graalvm.compiler.core.common.spi.LIRKindTool#getWordKind()->LIRKind:::Get the architecture specific kind pointer-sized integer kind.
org.graalvm.compiler.core.common.spi.LIRKindTool#getNarrowOopKind()->LIRKind:::Get the platform specific kind used to represent compressed oops.
org.graalvm.compiler.core.common.spi.LIRKindTool#getNarrowPointerKind()->LIRKind:::Gets the platform specific kind used to represent compressed metaspace pointers.
