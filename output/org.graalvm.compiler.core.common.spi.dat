ConstantFieldProvider#readConstantField(ResolvedJavaField, ConstantFieldTool):::Decide whether a read from the field should be constant folded:::
ForeignCallDescriptor#getName():::Gets the name of this foreign call.:::return
ForeignCallDescriptor#getResultType():::Gets the return type of this foreign call.:::return
ForeignCallDescriptor#getArgumentTypes():::Gets the argument types of this foreign call.:::return->argumentTypes->clone
ForeignCallLinkage#getOutgoingCallingConvention():::Gets the details of where parameters are passed and value(s) are returned from the caller's perspective.:::
ForeignCallLinkage#getIncomingCallingConvention():::Gets the details of where parameters are passed and value(s) are returned from the callee's perspective.:::
ForeignCallLinkage#getMaxCallTargetOffset():::Returns the maximum absolute offset of a PC relative call to this stub from any position in the code cache or -1 when not applicable:::
ForeignCallLinkage#getTemporaries():::Gets the values used/killed by this foreign call.:::
ForeignCallLinkage#destroysRegisters():::Determines if the foreign call target destroys all registers.:::
ForeignCallLinkage#needsDebugInfo():::Determines if debug info needs to be associated with this call:::
ForeignCallsProvider#isReexecutable(ForeignCallDescriptor):::Determines if a given foreign call is side-effect free:::
ForeignCallsProvider#getKilledLocations(ForeignCallDescriptor):::Gets the set of memory locations killed by a given foreign call:::
ForeignCallsProvider#canDeoptimize(ForeignCallDescriptor):::Determines if deoptimization can occur during a given foreign call.:::
ForeignCallsProvider#isGuaranteedSafepoint(ForeignCallDescriptor):::Identifies foreign calls which are guaranteed to include a safepoint check.:::
ForeignCallsProvider#lookupForeignCall(ForeignCallDescriptor):::Gets the linkage for a foreign call.:::
ForeignCallsProvider#isAvailable(ForeignCallDescriptor):::Return true if the foreign call has a binding.:::
LIRKindTool#getIntegerKind(int):::Get an architecture specific integer kind of a certain size.:::
LIRKindTool#getFloatingKind(int):::Get an architecture specific floating point kind of a certain size.:::
LIRKindTool#getObjectKind():::Get the architecture specific kind used to represent Java objects.:::
LIRKindTool#getWordKind():::Get the architecture specific kind pointer-sized integer kind.:::
LIRKindTool#getNarrowOopKind():::Get the platform specific kind used to represent compressed oops.:::
LIRKindTool#getNarrowPointerKind():::Gets the platform specific kind used to represent compressed metaspace pointers.:::
