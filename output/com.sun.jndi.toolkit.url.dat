GenericURLContext#close()::: generic context close:::
GenericURLContext#getNameInNamespace()::: generic context get name in namespace:::return
GenericURLContext#getRootURLContext(String, Hashtable):::Resolves 'name' into a target context with remaining name:::
GenericURLContext#getURLSuffix(String, String):::Returns the suffix of the url:::suffix->url->prefix->length->substring->if->suffix->length->return->new->CompositeName->if->suffix->charAt->suffix->substring->try->return->new->CompositeName->UrlUtil->decode->add->catch->throw->e->getMessage->new->InvalidNameException->finally
GenericURLContext#getURLPrefix(String):::Finds the prefix of a URL:::start->url->indexOf->if->throw->new->OperationNotSupportedException->if->url->startsWith->posn->url->indexOf->if->else->url->length->return->url->substring
GenericURLContext#urlEquals(String, String):::Determines whether two URLs are the same:::return->url1->equals
GenericURLContext#getContinuationContext(Name):::Gets the context in which to continue the operation:::obj->n->get->lookup->cpe->new->CannotProceedException->cpe->setResolvedObj->cpe->setEnvironment->return->NamingManager->getContinuationContext
GenericURLContext#lookup(String)::: generic context lookup:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->lookup->catch->finally->ctx->close
GenericURLContext#lookup(Name)::: generic context lookup:::if->name->size->return->name->get->lookup->else->ctx->getContinuationContext->try->return->ctx->name->getSuffix->lookup->catch->finally->ctx->close
GenericURLContext#bind(String, Object)::: generic context bind:::res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->bind->catch->finally->ctx->close
GenericURLContext#bind(Name, Object)::: generic context bind:::if->name->size->name->get->bind->else->ctx->getContinuationContext->try->ctx->name->getSuffix->bind->catch->finally->ctx->close
GenericURLContext#rebind(String, Object)::: generic context rebind:::res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->rebind->catch->finally->ctx->close
GenericURLContext#rebind(Name, Object)::: generic context rebind:::if->name->size->name->get->rebind->else->ctx->getContinuationContext->try->ctx->name->getSuffix->rebind->catch->finally->ctx->close
GenericURLContext#unbind(String)::: generic context unbind:::res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->unbind->catch->finally->ctx->close
GenericURLContext#unbind(Name)::: generic context unbind:::if->name->size->name->get->unbind->else->ctx->getContinuationContext->try->ctx->name->getSuffix->unbind->catch->finally->ctx->close
GenericURLContext#rename(String, String)::: generic context rename:::oldPrefix->getURLPrefix->newPrefix->getURLPrefix->if->urlEquals->throw->new->OperationNotSupportedException->res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->getURLSuffix->rename->catch->finally->ctx->close
GenericURLContext#rename(Name, Name)::: generic context rename:::if->name->size->if->newName->size->throw->new->OperationNotSupportedException->name->get->newName->get->rename->else->if->name->get->newName->get->urlEquals->throw->new->OperationNotSupportedException->ctx->getContinuationContext->try->ctx->name->getSuffix->newName->getSuffix->rename->catch->finally->ctx->close
GenericURLContext#list(String)::: generic context list:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->list->catch->finally->ctx->close
GenericURLContext#list(Name)::: generic context list:::if->name->size->return->name->get->list->else->ctx->getContinuationContext->try->return->ctx->name->getSuffix->list->catch->finally->ctx->close
GenericURLContext#listBindings(String)::: generic context list bindings:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->listBindings->catch->finally->ctx->close
GenericURLContext#listBindings(Name)::: generic context list bindings:::if->name->size->return->name->get->listBindings->else->ctx->getContinuationContext->try->return->ctx->name->getSuffix->listBindings->catch->finally->ctx->close
GenericURLContext#destroySubcontext(String)::: generic context destroy subcontext:::res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->destroySubcontext->catch->finally->ctx->close
GenericURLContext#destroySubcontext(Name)::: generic context destroy subcontext:::if->name->size->name->get->destroySubcontext->else->ctx->getContinuationContext->try->ctx->name->getSuffix->destroySubcontext->catch->finally->ctx->close
GenericURLContext#createSubcontext(String)::: generic context create subcontext:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->createSubcontext->catch->finally->ctx->close
GenericURLContext#createSubcontext(Name)::: generic context create subcontext:::if->name->size->return->name->get->createSubcontext->else->ctx->getContinuationContext->try->return->ctx->name->getSuffix->createSubcontext->catch->finally->ctx->close
GenericURLContext#lookupLink(String)::: generic context lookup link:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->lookupLink->catch->finally->ctx->close
GenericURLContext#lookupLink(Name)::: generic context lookup link:::if->name->size->return->name->get->lookupLink->else->ctx->getContinuationContext->try->return->ctx->name->getSuffix->lookupLink->catch->finally->ctx->close
GenericURLContext#getNameParser(String)::: generic context get name parser:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->getNameParser->catch->finally->ctx->close
GenericURLContext#getNameParser(Name)::: generic context get name parser:::if->name->size->return->name->get->getNameParser->else->ctx->getContinuationContext->try->return->ctx->name->getSuffix->getNameParser->catch->finally->ctx->close
GenericURLContext#composeName(String, String)::: generic context compose name:::if->prefix->equals->return->else->if->name->equals->return->else->return
GenericURLContext#composeName(Name, Name)::: generic context compose name:::result->prefix->clone->result->addAll->return
GenericURLContext#removeFromEnvironment(String)::: generic context remove from environment:::if->return->return->myEnv->remove
GenericURLContext#addToEnvironment(String, Object)::: generic context add to environment:::if->new->Hashtable<String,Object>->return->myEnv->put
GenericURLContext#getEnvironment()::: generic context get environment:::if->return->new->Hashtable<>->else->return->myEnv->clone
GenericURLDirContext#getContinuationDirContext(Name):::Gets the context in which to continue the operation:::obj->n->get->lookup->cpe->new->CannotProceedException->cpe->setResolvedObj->cpe->setEnvironment->return->DirectoryManager->getContinuationDirContext
GenericURLDirContext#getAttributes(String)::: generic dir context get attributes:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->getAttributes->catch->finally->ctx->close
GenericURLDirContext#getAttributes(Name)::: generic dir context get attributes:::if->name->size->return->name->get->getAttributes->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->getAttributes->catch->finally->ctx->close
GenericURLDirContext#getAttributes(String, String[])::: generic dir context get attributes:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->getAttributes->catch->finally->ctx->close
GenericURLDirContext#getAttributes(Name, String[])::: generic dir context get attributes:::if->name->size->return->name->get->getAttributes->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->getAttributes->catch->finally->ctx->close
GenericURLDirContext#modifyAttributes(String, int, Attributes)::: generic dir context modify attributes:::res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->modifyAttributes->catch->finally->ctx->close
GenericURLDirContext#modifyAttributes(Name, int, Attributes)::: generic dir context modify attributes:::if->name->size->name->get->modifyAttributes->else->ctx->getContinuationDirContext->try->ctx->name->getSuffix->modifyAttributes->catch->finally->ctx->close
GenericURLDirContext#modifyAttributes(String, ModificationItem[])::: generic dir context modify attributes:::res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->modifyAttributes->catch->finally->ctx->close
GenericURLDirContext#modifyAttributes(Name, ModificationItem[])::: generic dir context modify attributes:::if->name->size->name->get->modifyAttributes->else->ctx->getContinuationDirContext->try->ctx->name->getSuffix->modifyAttributes->catch->finally->ctx->close
GenericURLDirContext#bind(String, Object, Attributes)::: generic dir context bind:::res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->bind->catch->finally->ctx->close
GenericURLDirContext#bind(Name, Object, Attributes)::: generic dir context bind:::if->name->size->name->get->bind->else->ctx->getContinuationDirContext->try->ctx->name->getSuffix->bind->catch->finally->ctx->close
GenericURLDirContext#rebind(String, Object, Attributes)::: generic dir context rebind:::res->getRootURLContext->ctx->res->getResolvedObj->try->ctx->res->getRemainingName->rebind->catch->finally->ctx->close
GenericURLDirContext#rebind(Name, Object, Attributes)::: generic dir context rebind:::if->name->size->name->get->rebind->else->ctx->getContinuationDirContext->try->ctx->name->getSuffix->rebind->catch->finally->ctx->close
GenericURLDirContext#createSubcontext(String, Attributes)::: generic dir context create subcontext:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->createSubcontext->catch->finally->ctx->close
GenericURLDirContext#createSubcontext(Name, Attributes)::: generic dir context create subcontext:::if->name->size->return->name->get->createSubcontext->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->createSubcontext->catch->finally->ctx->close
GenericURLDirContext#getSchema(String)::: generic dir context get schema:::res->getRootURLContext->ctx->res->getResolvedObj->return->ctx->res->getRemainingName->getSchema
GenericURLDirContext#getSchema(Name)::: generic dir context get schema:::if->name->size->return->name->get->getSchema->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->getSchema->catch->finally->ctx->close
GenericURLDirContext#getSchemaClassDefinition(String)::: generic dir context get schema class definition:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->getSchemaClassDefinition->catch->finally->ctx->close
GenericURLDirContext#getSchemaClassDefinition(Name)::: generic dir context get schema class definition:::if->name->size->return->name->get->getSchemaClassDefinition->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->getSchemaClassDefinition->catch->finally->ctx->close
GenericURLDirContext#search(String, Attributes)::: generic dir context search:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->search->catch->finally->ctx->close
GenericURLDirContext#search(Name, Attributes)::: generic dir context search:::if->name->size->return->name->get->search->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->search->catch->finally->ctx->close
GenericURLDirContext#search(String, Attributes, String[])::: generic dir context search:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->search->catch->finally->ctx->close
GenericURLDirContext#search(Name, Attributes, String[])::: generic dir context search:::if->name->size->return->name->get->search->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->search->catch->finally->ctx->close
GenericURLDirContext#search(String, String, SearchControls)::: generic dir context search:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->search->catch->finally->ctx->close
GenericURLDirContext#search(Name, String, SearchControls)::: generic dir context search:::if->name->size->return->name->get->search->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->search->catch->finally->ctx->close
GenericURLDirContext#search(String, String, Object[], SearchControls)::: generic dir context search:::res->getRootURLContext->ctx->res->getResolvedObj->try->return->ctx->res->getRemainingName->search->catch->finally->ctx->close
GenericURLDirContext#search(Name, String, Object[], SearchControls)::: generic dir context search:::if->name->size->return->name->get->search->else->ctx->getContinuationDirContext->try->return->ctx->name->getSuffix->search->catch->finally->ctx->close
Uri#init(String):::Initializes a Uri object given a URI string:::parse
Uri#getScheme():::Returns the URI's scheme.:::return
Uri#getHost():::Returns the host from the URI's authority part, or null if no host is provided:::return
Uri#getPort():::Returns the port from the URI's authority part, or -1 if no port is provided.:::return
Uri#getPath():::Returns the URI's path:::return
Uri#getQuery():::Returns the URI's query part, or null if no query is provided:::return
Uri#toString():::Returns the URI as a string.:::return
Uri#parse(String)::: uri parse:::i->uri->indexOf->if->throw->new->MalformedURLException->uri->substring->uri->startsWith->if->slash->uri->indexOf->if->uri->length->if->uri->startsWith->brac->uri->indexOf->if->throw->new->MalformedURLException->uri->substring->else->colon->uri->indexOf->hostEnd->if->uri->substring->if->uri->startsWith->Integer->uri->substring->parseInt->qmark->uri->indexOf->if->uri->substring->else->uri->substring->uri->substring
UrlUtil#decode(String):::Decode a URI string (according to RFC 2396).:::try->return->decode->catch->throw->new->MalformedURLException->finally
UrlUtil#decode(String, String):::Decode a URI string (according to RFC 2396):::try->return->URLDecoder->decode->catch->mue->new->MalformedURLException->mue->initCause->throw->finally
UrlUtil#encode(String, String):::Encode a string for inclusion in a URI (according to RFC 2396):::bytes->s->getBytes->count->allowed->buf->new->charArr->j->for->i->return->new->String
