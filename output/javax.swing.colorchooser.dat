AbstractColorChooserPanel#updateChooser():::Invoked automatically when the model's state changes:::
AbstractColorChooserPanel#buildChooser():::Builds a new chooser panel.:::
AbstractColorChooserPanel#getDisplayName():::Returns a string containing the display name of the panel.:::
AbstractColorChooserPanel#getMnemonic():::Provides a hint to the look and feel as to the KeyEvent.VK constant that can be used as a mnemonic to access the panel:::return
AbstractColorChooserPanel#getDisplayedMnemonicIndex():::Provides a hint to the look and feel as to the index of the character in getDisplayName that should be visually identified as the mnemonic:::return
AbstractColorChooserPanel#getSmallDisplayIcon():::Returns the small display icon for the panel.:::
AbstractColorChooserPanel#getLargeDisplayIcon():::Returns the large display icon for the panel.:::
AbstractColorChooserPanel#installChooserPanel(JColorChooser):::Invoked when the panel is added to the chooser:::if->throw->new->RuntimeException->chooser->addPropertyChangeListener->chooser->isEnabled->setEnabled->buildChooser->updateChooser
AbstractColorChooserPanel#uninstallChooserPanel(JColorChooser):::Invoked when the panel is removed from the chooser:::chooser->removePropertyChangeListener
AbstractColorChooserPanel#getColorSelectionModel():::Returns the model that the chooser panel is editing.:::return->getSelectionModel
AbstractColorChooserPanel#getColorFromModel():::Returns the color that is currently selected.:::model->getColorSelectionModel->return->model->getSelectedColor
AbstractColorChooserPanel#setColorTransparencySelectionEnabled(boolean):::Sets whether color chooser panel allows to select the transparency (alpha value) of a color:::
AbstractColorChooserPanel#isColorTransparencySelectionEnabled():::Gets whether color chooser panel allows to select the transparency (alpha value) of a color.:::return
AbstractColorChooserPanel#paint(Graphics):::Draws the panel.:::super->paint
AbstractColorChooserPanel#getInt(Object, int):::Returns an integer from the defaults table:::value->UIManager->getLocale->get->if->return->intValue->if->try->return->Integer->parseInt->catch->finally->return
ColorChooserComponentFactory#getDefaultChooserPanels():::Returns the default chooser panels.:::return->new->AbstractColorChooserPanelArr->new->DefaultSwatchChooserPanel->new->ColorModelHSV->new->ColorChooserPanel->new->ColorModelHSL->new->ColorChooserPanel->new->ColorModel->new->ColorChooserPanel->new->ColorModelCMYK->new->ColorChooserPanel
ColorChooserComponentFactory#getPreviewPanel():::Returns the preview panel.:::return->new->DefaultPreviewPanel
ColorModelHSL#min(float, float, float):::Returns the smaller of three color components.:::min->return
ColorModelHSL#max(float, float, float):::Returns the larger of three color components.:::max->return
ColorModelHSL#getHue(float, float, float, float, float):::Calculates the hue component for HSL and HSV color spaces.:::hue->if->if->if->else->if->else->return
ColorSelectionModel#getSelectedColor():::Returns the selected Color which should be non-null.:::
ColorSelectionModel#setSelectedColor(Color):::Sets the selected color to color:::
ColorSelectionModel#addChangeListener(ChangeListener):::Adds listener as a listener to changes in the model.:::
ColorSelectionModel#removeChangeListener(ChangeListener):::Removes listener as a listener to changes in the model.:::
DefaultColorSelectionModel#getSelectedColor():::Returns the selected Color which should be non-null.:::return
DefaultColorSelectionModel#setSelectedColor(Color):::Sets the selected color to color:::if->selectedColor->equals->fireStateChanged
DefaultColorSelectionModel#addChangeListener(ChangeListener):::Adds a ChangeListener to the model.:::listenerList->add
DefaultColorSelectionModel#removeChangeListener(ChangeListener):::Removes a ChangeListener from the model.:::listenerList->remove
DefaultColorSelectionModel#getChangeListeners():::Returns an array of all the ChangeListeners added to this DefaultColorSelectionModel with addChangeListener.:::return->listenerList->getListeners
DefaultColorSelectionModel#fireStateChanged():::Runs each ChangeListener's stateChanged method:::listeners->listenerList->getListenerList->for->i
DefaultSwatchChooserPanel#getMnemonic():::Provides a hint to the look and feel as to the KeyEvent.VK constant that can be used as a mnemonic to access the panel:::return->getInt
DefaultSwatchChooserPanel#getDisplayedMnemonicIndex():::Provides a hint to the look and feel as to the index of the character in getDisplayName that should be visually identified as the mnemonic:::return->getInt
DefaultSwatchChooserPanel#installChooserPanel(JColorChooser):::The background color, foreground color, and font are already set to the defaults from the defaults table before this method is called.:::super->installChooserPanel
