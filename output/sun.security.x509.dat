sun.security.x509.AccessDescription#getAccessMethod()->ObjectIdentifier::: access description get access method
sun.security.x509.AccessDescription#getAccessLocation()->GeneralName::: access description get access location
sun.security.x509.AccessDescription#encode(DerOutputStream)->void::: access description encode
sun.security.x509.AccessDescription#hashCode()->int::: access description hash code
sun.security.x509.AccessDescription#equals(Object)->boolean::: access description equals
sun.security.x509.AccessDescription#toString()->String::: access description to string
sun.security.x509.AlgIdDSA#getP()->BigInteger:::Returns the DSS/DSA parameter "P"
sun.security.x509.AlgIdDSA#getQ()->BigInteger:::Returns the DSS/DSA parameter "Q"
sun.security.x509.AlgIdDSA#getG()->BigInteger:::Returns the DSS/DSA parameter "G"
sun.security.x509.AlgIdDSA#getName()->String:::Returns "DSA", indicating the Digital Signature Algorithm (DSA) as defined by the Digital Signature Standard (DSS), FIPS 186.
sun.security.x509.AlgIdDSA#decodeParams()->void:::Parses algorithm parameters P, Q, and G
sun.security.x509.AlgIdDSA#toString()->String::: alg id a to string
sun.security.x509.AlgIdDSA#paramsToString()->String::: alg id a params to string
sun.security.x509.AlgorithmId#decodeParams()->void::: algorithm id decode params
sun.security.x509.AlgorithmId#encode(DerOutputStream)->void:::Marshal a DER-encoded "AlgorithmID" sequence on the DER stream.
sun.security.x509.AlgorithmId#derEncode(OutputStream)->void:::DER encode this object onto an output stream
sun.security.x509.AlgorithmId#encode()->byte[]:::Returns the DER-encoded X.509 AlgorithmId as a byte array.
sun.security.x509.AlgorithmId#getOID()->ObjectIdentifier:::Returns the ISO OID for this algorithm
sun.security.x509.AlgorithmId#getName()->String:::Returns a name for the algorithm which may be more intelligible to humans than the algorithm's OID, but which won't necessarily be comprehensible on other systems
sun.security.x509.AlgorithmId#getParameters()->AlgorithmParameters::: algorithm id get parameters
sun.security.x509.AlgorithmId#getEncodedParams()->byte[]:::Returns the DER encoded parameter, which can then be used to initialize java.security.AlgorithmParamters.
sun.security.x509.AlgorithmId#equals(AlgorithmId)->boolean:::Returns true iff the argument indicates the same algorithm with the same parameters.
sun.security.x509.AlgorithmId#equals(Object)->boolean:::Compares this AlgorithmID to another
sun.security.x509.AlgorithmId#equals(ObjectIdentifier)->boolean:::Compares two algorithm IDs for equality
sun.security.x509.AlgorithmId#hashCode()->int:::Returns a hashcode for this AlgorithmId.
sun.security.x509.AlgorithmId#paramsToString()->String:::Provides a human-readable description of the algorithm parameters
sun.security.x509.AlgorithmId#toString()->String:::Returns a string describing the algorithm and its parameters.
sun.security.x509.AlgorithmId#parse(DerValue)->AlgorithmId:::Parse (unmarshal) an ID from a DER sequence input value
sun.security.x509.AlgorithmId#getAlgorithmId(String)->AlgorithmId:::Returns one of the algorithm IDs most commonly associated with this algorithm name.
sun.security.x509.AlgorithmId#get(String)->AlgorithmId:::Returns one of the algorithm IDs most commonly associated with this algorithm name.
sun.security.x509.AlgorithmId#get(AlgorithmParameters)->AlgorithmId:::Returns one of the algorithm IDs most commonly associated with this algorithm parameters.
sun.security.x509.AlgorithmId#makeSigAlg(String, String)->String:::Creates a signature algorithm name from a digest algorithm name and a encryption algorithm name.
sun.security.x509.AlgorithmId#getEncAlgFromSigAlg(String)->String:::Extracts the encryption algorithm name from a signature algorithm name.
sun.security.x509.AlgorithmId#getDigAlgFromSigAlg(String)->String:::Extracts the digest algorithm name from a signature algorithm name.
sun.security.x509.AlgorithmId#checkKeyAndSigAlgMatch(String, String)->void:::Checks if a signature algorithm matches a key algorithm, i.e
sun.security.x509.AlgorithmId#getDefaultSigAlgForKey(PrivateKey)->String:::Returns the default signature algorithm for a private key
sun.security.x509.AuthorityInfoAccessExtension#getAccessDescriptions()->List:::Return the list of AccessDescription objects.
sun.security.x509.AuthorityInfoAccessExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.AuthorityInfoAccessExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.AuthorityInfoAccessExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.AuthorityInfoAccessExtension#get(String)->List:::Get the attribute value.
sun.security.x509.AuthorityInfoAccessExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.AuthorityInfoAccessExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.AuthorityInfoAccessExtension#toString()->String:::Return the extension as user readable string.
sun.security.x509.AuthorityKeyIdentifierExtension#toString()->String:::Return the object as a string.
sun.security.x509.AuthorityKeyIdentifierExtension#encode(OutputStream)->void:::Write the extension to the OutputStream.
sun.security.x509.AuthorityKeyIdentifierExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.AuthorityKeyIdentifierExtension#get(String)->Object:::Get the attribute value.
sun.security.x509.AuthorityKeyIdentifierExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.AuthorityKeyIdentifierExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.AuthorityKeyIdentifierExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.AuthorityKeyIdentifierExtension#getEncodedKeyIdentifier()->byte[]:::Return the encoded key identifier, or null if not specified.
sun.security.x509.AVA#getObjectIdentifier()->ObjectIdentifier:::Get the ObjectIdentifier of this AVA.
sun.security.x509.AVA#getDerValue()->DerValue:::Get the value of this AVA as a DerValue.
sun.security.x509.AVA#getValueString()->String:::Get the value of this AVA as a String.
sun.security.x509.AVA#equals(Object)->boolean::: a equals
sun.security.x509.AVA#hashCode()->int:::Returns a hashcode for this AVA.
sun.security.x509.AVA#encode(DerOutputStream)->void::: a encode
sun.security.x509.AVA#derEncode(OutputStream)->void:::DER encode this object onto an output stream
sun.security.x509.AVA#toString()->String:::Returns a printable form of this attribute, using RFC 1779 syntax for individual attribute/value assertions.
sun.security.x509.AVA#toRFC1779String()->String:::Returns a printable form of this attribute, using RFC 1779 syntax for individual attribute/value assertions
sun.security.x509.AVA#toRFC1779String(Map)->String:::Returns a printable form of this attribute, using RFC 1779 syntax for individual attribute/value assertions
sun.security.x509.AVA#toRFC2253String()->String:::Returns a printable form of this attribute, using RFC 2253 syntax for individual attribute/value assertions
sun.security.x509.AVA#toRFC2253String(Map)->String:::Returns a printable form of this attribute, using RFC 2253 syntax for individual attribute/value assertions
sun.security.x509.AVA#toRFC2253CanonicalString()->String::: a to c2253 canonical string
sun.security.x509.AVA#hasRFC2253Keyword()->boolean::: a has c2253 keyword
sun.security.x509.AVAKeyword#getOID(String, int, Map)->ObjectIdentifier:::Get an object identifier representing the specified keyword (or string encoded object identifier) in the given standard.
sun.security.x509.AVAKeyword#getKeyword(ObjectIdentifier, int)->String:::Get a keyword for the given ObjectIdentifier according to standard
sun.security.x509.AVAKeyword#getKeyword(ObjectIdentifier, int, Map)->String:::Get a keyword for the given ObjectIdentifier according to standard
sun.security.x509.AVAKeyword#hasKeyword(ObjectIdentifier, int)->boolean:::Test if oid has an associated keyword in standard.
sun.security.x509.BasicConstraintsExtension#toString()->String:::Return user readable form of extension.
sun.security.x509.BasicConstraintsExtension#encode(OutputStream)->void:::Encode this extension value to the output stream.
sun.security.x509.BasicConstraintsExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.BasicConstraintsExtension#get(String)->Object:::Get the attribute value.
sun.security.x509.BasicConstraintsExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.BasicConstraintsExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.BasicConstraintsExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.CertAttrSet#toString()->String:::Returns a short string describing this certificate attribute.
sun.security.x509.CertAttrSet#encode(OutputStream)->void:::Encodes the attribute to the output stream in a format that can be parsed by the decode method.
sun.security.x509.CertAttrSet#set(String, Object)->void:::Sets an attribute value within this CertAttrSet.
sun.security.x509.CertAttrSet#get(String)->Object:::Gets an attribute value for this CertAttrSet.
sun.security.x509.CertAttrSet#delete(String)->void:::Deletes an attribute value from this CertAttrSet.
sun.security.x509.CertAttrSet#getElements()->Enumeration:::Returns an enumeration of the names of the attributes existing within this attribute.
sun.security.x509.CertAttrSet#getName()->String:::Returns the name (identifier) of this CertAttrSet.
sun.security.x509.CertException#getVerfCode()->int:::Returns the error code with which the exception was created.
sun.security.x509.CertException#getMoreData()->String:::Returns a string describing the context in which the exception was reported.
sun.security.x509.CertException#getVerfDescription()->String:::Return a string corresponding to the error code used to create this exception.
sun.security.x509.CertException#toString()->String:::Returns a string describing the certificate exception.
sun.security.x509.CertException#getMessage()->String:::Returns a string describing the certificate exception.
sun.security.x509.CertificateAlgorithmId#toString()->String:::Return the algorithm identifier as user readable string.
sun.security.x509.CertificateAlgorithmId#encode(OutputStream)->void:::Encode the algorithm identifier in DER form to the stream.
sun.security.x509.CertificateAlgorithmId#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateAlgorithmId#get(String)->AlgorithmId:::Get the attribute value.
sun.security.x509.CertificateAlgorithmId#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificateAlgorithmId#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateAlgorithmId#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificateExtensions#encode(OutputStream)->void:::Encode the extensions in DER form to the stream, setting the context specific tag as needed in the X.509 v3 certificate.
sun.security.x509.CertificateExtensions#encode(OutputStream, boolean)->void:::Encode the extensions in DER form to the stream.
sun.security.x509.CertificateExtensions#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateExtensions#get(String)->Extension:::Get the attribute value.
sun.security.x509.CertificateExtensions#getExtension(String)->Extension::: certificate extensions get extension
sun.security.x509.CertificateExtensions#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificateExtensions#getNameByOid(ObjectIdentifier)->String::: certificate extensions get name by oid
sun.security.x509.CertificateExtensions#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateExtensions#getAllExtensions()->Collection:::Return a collection view of the extensions.
sun.security.x509.CertificateExtensions#getUnparseableExtensions()->Map::: certificate extensions get unparseable extensions
sun.security.x509.CertificateExtensions#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificateExtensions#hasUnsupportedCriticalExtension()->boolean:::Return true if a critical extension is found that is not supported, otherwise return false.
sun.security.x509.CertificateExtensions#equals(Object)->boolean:::Compares this CertificateExtensions for equality with the specified object
sun.security.x509.CertificateExtensions#hashCode()->int:::Returns a hashcode value for this CertificateExtensions.
sun.security.x509.CertificateExtensions#toString()->String:::Returns a string representation of this CertificateExtensions object in the form of a set of entries, enclosed in braces and separated by the ASCII characters ",&nbsp;" (comma and space)
sun.security.x509.UnparseableExtension#toString()->String::: unparseable extension to string
sun.security.x509.CertificateIssuerExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateIssuerExtension#get(String)->GeneralNames:::Gets the attribute value.
sun.security.x509.CertificateIssuerExtension#delete(String)->void:::Deletes the attribute value.
sun.security.x509.CertificateIssuerExtension#toString()->String:::Returns a printable representation of the certificate issuer.
sun.security.x509.CertificateIssuerExtension#encode(OutputStream)->void:::Write the extension to the OutputStream.
sun.security.x509.CertificateIssuerExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateIssuerExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificateIssuerName#toString()->String:::Return the name as user readable string.
sun.security.x509.CertificateIssuerName#encode(OutputStream)->void:::Encode the name in DER form to the stream.
sun.security.x509.CertificateIssuerName#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateIssuerName#get(String)->Object:::Get the attribute value.
sun.security.x509.CertificateIssuerName#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificateIssuerName#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateIssuerName#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificatePoliciesExtension#toString()->String:::Return the extension as user readable string.
sun.security.x509.CertificatePoliciesExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.CertificatePoliciesExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificatePoliciesExtension#get(String)->List:::Get the attribute value.
sun.security.x509.CertificatePoliciesExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificatePoliciesExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificatePoliciesExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificatePolicyId#getIdentifier()->ObjectIdentifier:::Return the value of the CertificatePolicyId as an ObjectIdentifier.
sun.security.x509.CertificatePolicyId#toString()->String:::Returns a printable representation of the CertificatePolicyId.
sun.security.x509.CertificatePolicyId#encode(DerOutputStream)->void:::Write the CertificatePolicyId to the DerOutputStream.
sun.security.x509.CertificatePolicyId#equals(Object)->boolean:::Compares this CertificatePolicyId with another, for equality
sun.security.x509.CertificatePolicyId#hashCode()->int:::Returns a hash code value for this object.
sun.security.x509.CertificatePolicyMap#getIssuerIdentifier()->CertificatePolicyId:::Return the issuer CA part of the policy map.
sun.security.x509.CertificatePolicyMap#getSubjectIdentifier()->CertificatePolicyId:::Return the subject CA part of the policy map.
sun.security.x509.CertificatePolicyMap#toString()->String:::Returns a printable representation of the CertificatePolicyId.
sun.security.x509.CertificatePolicyMap#encode(DerOutputStream)->void:::Write the CertificatePolicyMap to the DerOutputStream.
sun.security.x509.CertificatePolicySet#toString()->String:::Return printable form of the object.
sun.security.x509.CertificatePolicySet#encode(DerOutputStream)->void:::Encode the policy set to the output stream.
sun.security.x509.CertificatePolicySet#getCertPolicyIds()->List:::Return the sequence of CertificatePolicyIds.
sun.security.x509.CertificateSerialNumber#toString()->String:::Return the serial number as user readable string.
sun.security.x509.CertificateSerialNumber#encode(OutputStream)->void:::Encode the serial number in DER form to the stream.
sun.security.x509.CertificateSerialNumber#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateSerialNumber#get(String)->SerialNumber:::Get the attribute value.
sun.security.x509.CertificateSerialNumber#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificateSerialNumber#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateSerialNumber#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificateSubjectName#toString()->String:::Return the name as user readable string.
sun.security.x509.CertificateSubjectName#encode(OutputStream)->void:::Encode the name in DER form to the stream.
sun.security.x509.CertificateSubjectName#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateSubjectName#get(String)->Object:::Get the attribute value.
sun.security.x509.CertificateSubjectName#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificateSubjectName#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateSubjectName#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificateValidity#toString()->String:::Return the validity period as user readable string.
sun.security.x509.CertificateValidity#encode(OutputStream)->void:::Encode the CertificateValidity period in DER form to the stream.
sun.security.x509.CertificateValidity#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateValidity#get(String)->Date:::Get the attribute value.
sun.security.x509.CertificateValidity#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificateValidity#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateValidity#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificateValidity#valid()->void:::Verify that the current time is within the validity period.
sun.security.x509.CertificateValidity#valid(Date)->void:::Verify that the passed time is within the validity period.
sun.security.x509.CertificateVersion#toString()->String:::Return the version number of the certificate.
sun.security.x509.CertificateVersion#encode(OutputStream)->void:::Encode the CertificateVersion period in DER form to the stream.
sun.security.x509.CertificateVersion#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateVersion#get(String)->Integer:::Get the attribute value.
sun.security.x509.CertificateVersion#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificateVersion#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateVersion#getName()->String:::Return the name of this attribute.
sun.security.x509.CertificateVersion#compare(int)->int:::Compare versions.
sun.security.x509.CertificateX509Key#toString()->String:::Return the key as printable string.
sun.security.x509.CertificateX509Key#encode(OutputStream)->void:::Encode the key in DER form to the stream.
sun.security.x509.CertificateX509Key#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CertificateX509Key#get(String)->PublicKey:::Get the attribute value.
sun.security.x509.CertificateX509Key#delete(String)->void:::Delete the attribute value.
sun.security.x509.CertificateX509Key#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CertificateX509Key#getName()->String:::Return the name of this attribute.
sun.security.x509.CRLDistributionPointsExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.CRLDistributionPointsExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.CRLDistributionPointsExtension#encode(OutputStream, ObjectIdentifier, boolean)->void:::Write the extension to the DerOutputStream
sun.security.x509.CRLDistributionPointsExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CRLDistributionPointsExtension#get(String)->List:::Get the attribute value.
sun.security.x509.CRLDistributionPointsExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.CRLDistributionPointsExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CRLDistributionPointsExtension#toString()->String:::Return the extension as user readable string.
sun.security.x509.CRLExtensions#encode(OutputStream, boolean)->void:::Encode the extensions in DER form to the stream.
sun.security.x509.CRLExtensions#get(String)->Extension:::Get the extension with this alias.
sun.security.x509.CRLExtensions#set(String, Object)->void:::Set the extension value with this alias.
sun.security.x509.CRLExtensions#delete(String)->void:::Delete the extension value with this alias.
sun.security.x509.CRLExtensions#getElements()->Enumeration:::Return an enumeration of the extensions.
sun.security.x509.CRLExtensions#getAllExtensions()->Collection:::Return a collection view of the extensions.
sun.security.x509.CRLExtensions#hasUnsupportedCriticalExtension()->boolean:::Return true if a critical extension is found that is not supported, otherwise return false.
sun.security.x509.CRLExtensions#equals(Object)->boolean:::Compares this CRLExtensions for equality with the specified object
sun.security.x509.CRLExtensions#hashCode()->int:::Returns a hashcode value for this CRLExtensions.
sun.security.x509.CRLExtensions#toString()->String:::Returns a string representation of this CRLExtensions object in the form of a set of entries, enclosed in braces and separated by the ASCII characters ",&nbsp;" (comma and space)
sun.security.x509.CRLNumberExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CRLNumberExtension#get(String)->BigInteger:::Get the attribute value.
sun.security.x509.CRLNumberExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.CRLNumberExtension#toString()->String:::Returns a printable representation of the CRLNumberExtension.
sun.security.x509.CRLNumberExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.CRLNumberExtension#encode(OutputStream, ObjectIdentifier, boolean)->void:::Write the extension to the DerOutputStream
sun.security.x509.CRLNumberExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CRLNumberExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.CRLReasonCodeExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.CRLReasonCodeExtension#get(String)->Integer:::Get the attribute value.
sun.security.x509.CRLReasonCodeExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.CRLReasonCodeExtension#toString()->String:::Returns a printable representation of the Reason code.
sun.security.x509.CRLReasonCodeExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.CRLReasonCodeExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.CRLReasonCodeExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.CRLReasonCodeExtension#getReasonCode()->CRLReason:::Return the reason as a CRLReason enum.
sun.security.x509.DeltaCRLIndicatorExtension#encode(OutputStream)->void:::Writes the extension to the DerOutputStream.
sun.security.x509.DistributionPoint#getFullName()->GeneralNames:::Return the full distribution point name or null if not set.
sun.security.x509.DistributionPoint#getRelativeName()->RDN:::Return the relative distribution point name or null if not set.
sun.security.x509.DistributionPoint#getReasonFlags()->boolean[]:::Return the reason flags or null if not set.
sun.security.x509.DistributionPoint#getCRLIssuer()->GeneralNames:::Return the CRL issuer name or null if not set.
sun.security.x509.DistributionPoint#encode(DerOutputStream)->void:::Write the DistributionPoint value to the DerOutputStream.
sun.security.x509.DistributionPoint#equals(Object)->boolean:::Compare an object to this DistributionPoint for equality.
sun.security.x509.DistributionPoint#hashCode()->int::: distribution point hash code
sun.security.x509.DistributionPoint#toString()->String:::Return a printable string of the Distribution Point.
sun.security.x509.DistributionPointName#getFullName()->GeneralNames:::Returns the full name for the distribution point or null if not set.
sun.security.x509.DistributionPointName#getRelativeName()->RDN:::Returns the relative name for the distribution point or null if not set.
sun.security.x509.DistributionPointName#encode(DerOutputStream)->void:::Encodes the distribution point name and writes it to the DerOutputStream.
sun.security.x509.DistributionPointName#equals(Object)->boolean:::Compare an object to this distribution point name for equality.
sun.security.x509.DistributionPointName#hashCode()->int:::Returns the hash code for this distribution point name.
sun.security.x509.DistributionPointName#toString()->String:::Returns a printable string of the distribution point name.
sun.security.x509.DNSName#getType()->int:::Return the type of the GeneralName.
sun.security.x509.DNSName#getName()->String:::Return the actual name value of the GeneralName.
sun.security.x509.DNSName#encode(DerOutputStream)->void:::Encode the DNSName into the DerOutputStream.
sun.security.x509.DNSName#toString()->String:::Convert the name into user readable string.
sun.security.x509.DNSName#equals(Object)->boolean:::Compares this name with another, for equality.
sun.security.x509.DNSName#hashCode()->int:::Returns the hash code value for this object.
sun.security.x509.DNSName#constrains(GeneralNameInterface)->int:::Return type of constraint inputName places on this name:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name (i.e
sun.security.x509.DNSName#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds and for calculating path lengths in name subtrees.
sun.security.x509.EDIPartyName#getType()->int:::Return the type of the GeneralName.
sun.security.x509.EDIPartyName#encode(DerOutputStream)->void:::Encode the EDI party name into the DerOutputStream.
sun.security.x509.EDIPartyName#getAssignerName()->String:::Return the assignerName
sun.security.x509.EDIPartyName#getPartyName()->String:::Return the partyName
sun.security.x509.EDIPartyName#equals(Object)->boolean:::Compare this EDIPartyName with another
sun.security.x509.EDIPartyName#hashCode()->int:::Returns the hash code value for this EDIPartyName.
sun.security.x509.EDIPartyName#toString()->String:::Return the printable string.
sun.security.x509.EDIPartyName#constrains(GeneralNameInterface)->int:::Return constraint type:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name (i.e
sun.security.x509.EDIPartyName#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds and for calculating path lengths in name subtrees.
sun.security.x509.ExtendedKeyUsageExtension#toString()->String:::Return the extension as user readable string.
sun.security.x509.ExtendedKeyUsageExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.ExtendedKeyUsageExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.ExtendedKeyUsageExtension#get(String)->Vector:::Get the attribute value.
sun.security.x509.ExtendedKeyUsageExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.ExtendedKeyUsageExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.ExtendedKeyUsageExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.ExtendedKeyUsageExtension#getExtendedKeyUsage()->List::: extended key usage extension get extended key usage
sun.security.x509.Extension#newExtension(ObjectIdentifier, boolean, byte[])->Extension:::Constructs an Extension from individual components of ObjectIdentifier, criticality and the raw encoded extension value.
sun.security.x509.Extension#encode(OutputStream)->void::: extension encode
sun.security.x509.Extension#encode(DerOutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.Extension#isCritical()->boolean:::Returns true if extension is critical.
sun.security.x509.Extension#getExtensionId()->ObjectIdentifier:::Returns the ObjectIdentifier of the extension.
sun.security.x509.Extension#getValue()->byte[]::: extension get value
sun.security.x509.Extension#getExtensionValue()->byte[]:::Returns the extension value as an byte array for further processing
sun.security.x509.Extension#getId()->String::: extension get id
sun.security.x509.Extension#toString()->String:::Returns the Extension in user readable form.
sun.security.x509.Extension#hashCode()->int:::Returns a hashcode value for this Extension.
sun.security.x509.Extension#equals(Object)->boolean:::Compares this Extension for equality with the specified object
sun.security.x509.FreshestCRLExtension#encode(OutputStream)->void:::Writes the extension to the DerOutputStream.
sun.security.x509.GeneralName#getType()->int:::Return the type of the general name.
sun.security.x509.GeneralName#getName()->GeneralNameInterface:::Return the GeneralNameInterface name.
sun.security.x509.GeneralName#toString()->String:::Return the name as user readable string
sun.security.x509.GeneralName#equals(Object)->boolean:::Compare this GeneralName with another
sun.security.x509.GeneralName#hashCode()->int:::Returns the hash code for this GeneralName.
sun.security.x509.GeneralName#encode(DerOutputStream)->void:::Encode the name to the specified DerOutputStream.
sun.security.x509.GeneralNameInterface#getType()->int:::Return the type of the general name, as defined above.
sun.security.x509.GeneralNameInterface#encode(DerOutputStream)->void:::Encode the name to the specified DerOutputStream.
sun.security.x509.GeneralNameInterface#constrains(GeneralNameInterface)->int:::Return type of constraint inputName places on this name:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name (i.e
sun.security.x509.GeneralNameInterface#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds and for calculating path lengths in name subtrees.
sun.security.x509.GeneralNames#add(GeneralName)->GeneralNames::: general names add
sun.security.x509.GeneralNames#get(int)->GeneralName::: general names get
sun.security.x509.GeneralNames#isEmpty()->boolean::: general names is empty
sun.security.x509.GeneralNames#size()->int::: general names size
sun.security.x509.GeneralNames#iterator()->Iterator::: general names iterator
sun.security.x509.GeneralNames#names()->List::: general names names
sun.security.x509.GeneralNames#encode(DerOutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.GeneralNames#equals(Object)->boolean:::compare this GeneralNames to other object for equality
sun.security.x509.GeneralNames#hashCode()->int::: general names hash code
sun.security.x509.GeneralNames#toString()->String::: general names to string
sun.security.x509.GeneralSubtree#getName()->GeneralName:::Return the GeneralName.
sun.security.x509.GeneralSubtree#getMinimum()->int:::Return the minimum BaseDistance.
sun.security.x509.GeneralSubtree#getMaximum()->int:::Return the maximum BaseDistance.
sun.security.x509.GeneralSubtree#toString()->String:::Return a printable string of the GeneralSubtree.
sun.security.x509.GeneralSubtree#equals(Object)->boolean:::Compare this GeneralSubtree with another
sun.security.x509.GeneralSubtree#hashCode()->int:::Returns the hash code for this GeneralSubtree.
sun.security.x509.GeneralSubtree#encode(DerOutputStream)->void:::Encode the GeneralSubtree.
sun.security.x509.GeneralSubtrees#get(int)->GeneralSubtree::: general subtrees get
sun.security.x509.GeneralSubtrees#remove(int)->void::: general subtrees remove
sun.security.x509.GeneralSubtrees#add(GeneralSubtree)->void::: general subtrees add
sun.security.x509.GeneralSubtrees#contains(GeneralSubtree)->boolean::: general subtrees contains
sun.security.x509.GeneralSubtrees#size()->int::: general subtrees size
sun.security.x509.GeneralSubtrees#iterator()->Iterator::: general subtrees iterator
sun.security.x509.GeneralSubtrees#trees()->List::: general subtrees trees
sun.security.x509.GeneralSubtrees#clone()->Object::: general subtrees clone
sun.security.x509.GeneralSubtrees#toString()->String:::Return a printable string of the GeneralSubtree.
sun.security.x509.GeneralSubtrees#encode(DerOutputStream)->void:::Encode the GeneralSubtrees.
sun.security.x509.GeneralSubtrees#equals(Object)->boolean:::Compare two general subtrees by comparing the subtrees of each.
sun.security.x509.GeneralSubtrees#hashCode()->int::: general subtrees hash code
sun.security.x509.GeneralSubtrees#intersect(GeneralSubtrees)->GeneralSubtrees:::intersect this GeneralSubtrees with other
sun.security.x509.GeneralSubtrees#union(GeneralSubtrees)->void:::construct union of this GeneralSubtrees with other.
sun.security.x509.GeneralSubtrees#reduce(GeneralSubtrees)->void:::reduce this GeneralSubtrees by contents of another
sun.security.x509.InhibitAnyPolicyExtension#toString()->String:::Return user readable form of extension.
sun.security.x509.InhibitAnyPolicyExtension#encode(OutputStream)->void:::Encode this extension value to the output stream.
sun.security.x509.InhibitAnyPolicyExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.InhibitAnyPolicyExtension#get(String)->Integer:::Get the attribute value.
sun.security.x509.InhibitAnyPolicyExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.InhibitAnyPolicyExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.InhibitAnyPolicyExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.InvalidityDateExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.InvalidityDateExtension#get(String)->Date:::Get the attribute value.
sun.security.x509.InvalidityDateExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.InvalidityDateExtension#toString()->String:::Returns a printable representation of the Invalidity Date.
sun.security.x509.InvalidityDateExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.InvalidityDateExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.InvalidityDateExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.InvalidityDateExtension#toImpl(java.security.cert.Extension)->InvalidityDateExtension::: invalidity date extension to impl
sun.security.x509.IPAddressName#getType()->int:::Return the type of the GeneralName.
sun.security.x509.IPAddressName#encode(DerOutputStream)->void:::Encode the IPAddress name into the DerOutputStream.
sun.security.x509.IPAddressName#toString()->String:::Return a printable string of IPaddress
sun.security.x509.IPAddressName#getName()->String:::Return a standard String representation of IPAddress
sun.security.x509.IPAddressName#getBytes()->byte[]:::Returns this IPAddress name as a byte array.
sun.security.x509.IPAddressName#equals(Object)->boolean:::Compares this name with another, for equality.
sun.security.x509.IPAddressName#hashCode()->int:::Returns the hash code value for this object.
sun.security.x509.IPAddressName#constrains(GeneralNameInterface)->int:::Return type of constraint inputName places on this name:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name       (i.e
sun.security.x509.IPAddressName#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds and for calculating path lengths in name subtrees.
sun.security.x509.IssuerAlternativeNameExtension#toString()->String:::Returns a printable representation of the IssuerAlternativeName.
sun.security.x509.IssuerAlternativeNameExtension#encode(OutputStream)->void:::Write the extension to the OutputStream.
sun.security.x509.IssuerAlternativeNameExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.IssuerAlternativeNameExtension#get(String)->GeneralNames:::Get the attribute value.
sun.security.x509.IssuerAlternativeNameExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.IssuerAlternativeNameExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.IssuerAlternativeNameExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.IssuingDistributionPointExtension#getName()->String:::Returns the name of this attribute.
sun.security.x509.IssuingDistributionPointExtension#encode(OutputStream)->void:::Encodes the issuing distribution point extension and writes it to the DerOutputStream.
sun.security.x509.IssuingDistributionPointExtension#set(String, Object)->void:::Sets the attribute value.
sun.security.x509.IssuingDistributionPointExtension#get(String)->Object:::Gets the attribute value.
sun.security.x509.IssuingDistributionPointExtension#delete(String)->void:::Deletes the attribute value.
sun.security.x509.IssuingDistributionPointExtension#getElements()->Enumeration:::Returns an enumeration of names of attributes existing within this attribute.
sun.security.x509.IssuingDistributionPointExtension#toString()->String:::Returns the extension as user readable string.
sun.security.x509.KeyIdentifier#getIdentifier()->byte[]:::Return the value of the KeyIdentifier as byte array.
sun.security.x509.KeyIdentifier#toString()->String:::Returns a printable representation of the KeyUsage.
sun.security.x509.KeyIdentifier#encode(DerOutputStream)->void:::Write the KeyIdentifier to the DerOutputStream.
sun.security.x509.KeyIdentifier#hashCode()->int:::Returns a hash code value for this object
sun.security.x509.KeyIdentifier#equals(Object)->boolean:::Indicates whether some other object is "equal to" this one.
sun.security.x509.KeyUsageExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.KeyUsageExtension#get(String)->Boolean:::Get the attribute value.
sun.security.x509.KeyUsageExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.KeyUsageExtension#toString()->String:::Returns a printable representation of the KeyUsage.
sun.security.x509.KeyUsageExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.KeyUsageExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.KeyUsageExtension#getBits()->boolean[]::: key usage extension get bits
sun.security.x509.KeyUsageExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.NameConstraintsExtension#toString()->String:::Return the printable string.
sun.security.x509.NameConstraintsExtension#encode(OutputStream)->void:::Write the extension to the OutputStream.
sun.security.x509.NameConstraintsExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.NameConstraintsExtension#get(String)->GeneralSubtrees:::Get the attribute value.
sun.security.x509.NameConstraintsExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.NameConstraintsExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.NameConstraintsExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.NameConstraintsExtension#merge(NameConstraintsExtension)->void:::Merge additional name constraints with existing ones
sun.security.x509.NameConstraintsExtension#verify(X509Certificate)->boolean:::check whether a certificate conforms to these NameConstraints
sun.security.x509.NameConstraintsExtension#verify(GeneralNameInterface)->boolean:::check whether a name conforms to these NameConstraints
sun.security.x509.NameConstraintsExtension#clone()->Object:::Clone all objects that may be modified during certificate validation.
sun.security.x509.NetscapeCertTypeExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.NetscapeCertTypeExtension#get(String)->Boolean:::Get the attribute value.
sun.security.x509.NetscapeCertTypeExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.NetscapeCertTypeExtension#toString()->String:::Returns a printable representation of the NetscapeCertType.
sun.security.x509.NetscapeCertTypeExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.NetscapeCertTypeExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.NetscapeCertTypeExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.NetscapeCertTypeExtension#getKeyUsageMappedBits()->boolean[]:::Get a boolean array representing the bits of this extension, as it maps to the KeyUsage extension.
sun.security.x509.OCSPNoCheckExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.OCSPNoCheckExtension#get(String)->Object:::Get the attribute value.
sun.security.x509.OCSPNoCheckExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.OCSPNoCheckExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.OCSPNoCheckExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.OIDMap#addAttribute(String, String, Class)->void:::Add a name to lookup table.
sun.security.x509.OIDMap#getName(ObjectIdentifier)->String:::Return user friendly name associated with the OID.
sun.security.x509.OIDMap#getOID(String)->ObjectIdentifier:::Return Object identifier for user friendly name.
sun.security.x509.OIDMap#getClass(String)->Class:::Return the java class object associated with the user friendly name.
sun.security.x509.OIDMap#getClass(ObjectIdentifier)->Class:::Return the java class object associated with the object identifier.
sun.security.x509.OIDName#getType()->int:::Return the type of the GeneralName.
sun.security.x509.OIDName#encode(DerOutputStream)->void:::Encode the OID name into the DerOutputStream.
sun.security.x509.OIDName#toString()->String:::Convert the name into user readable string.
sun.security.x509.OIDName#getOID()->ObjectIdentifier:::Returns this OID name.
sun.security.x509.OIDName#equals(Object)->boolean:::Compares this name with another, for equality.
sun.security.x509.OIDName#hashCode()->int:::Returns the hash code value for this object.
sun.security.x509.OIDName#constrains(GeneralNameInterface)->int:::Return type of constraint inputName places on this name:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name (i.e
sun.security.x509.OIDName#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds and for calculating path lengths in name subtrees.
sun.security.x509.OtherName#getOID()->ObjectIdentifier:::Get ObjectIdentifier
sun.security.x509.OtherName#getNameValue()->byte[]:::Get name value
sun.security.x509.OtherName#getType()->int:::Return the type of the GeneralName.
sun.security.x509.OtherName#encode(DerOutputStream)->void:::Encode the Other name into the DerOutputStream.
sun.security.x509.OtherName#equals(Object)->boolean:::Compares this name with another, for equality.
sun.security.x509.OtherName#hashCode()->int:::Returns the hash code for this OtherName.
sun.security.x509.OtherName#toString()->String:::Convert the name into user readable string.
sun.security.x509.OtherName#constrains(GeneralNameInterface)->int:::Return type of constraint inputName places on this name:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name       (i.e
sun.security.x509.OtherName#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds.
sun.security.x509.PolicyConstraintsExtension#toString()->String:::Return the extension as user readable string.
sun.security.x509.PolicyConstraintsExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.PolicyConstraintsExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.PolicyConstraintsExtension#get(String)->Integer:::Get the attribute value.
sun.security.x509.PolicyConstraintsExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.PolicyConstraintsExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.PolicyConstraintsExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.PolicyInformation#equals(Object)->boolean:::Compare this PolicyInformation with another object for equality
sun.security.x509.PolicyInformation#hashCode()->int:::Returns the hash code for this PolicyInformation.
sun.security.x509.PolicyInformation#getPolicyIdentifier()->CertificatePolicyId:::Return the policyIdentifier value
sun.security.x509.PolicyInformation#getPolicyQualifiers()->Set:::Return the policyQualifiers value
sun.security.x509.PolicyInformation#get(String)->Object:::Get the attribute value.
sun.security.x509.PolicyInformation#set(String, Object)->void:::Set the attribute value.
sun.security.x509.PolicyInformation#delete(String)->void:::Delete the attribute value.
sun.security.x509.PolicyInformation#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.PolicyInformation#getName()->String:::Return the name of this attribute.
sun.security.x509.PolicyInformation#toString()->String:::Return a printable representation of the PolicyInformation.
sun.security.x509.PolicyInformation#encode(DerOutputStream)->void:::Write the PolicyInformation to the DerOutputStream.
sun.security.x509.PolicyMappingsExtension#toString()->String:::Returns a printable representation of the policy map.
sun.security.x509.PolicyMappingsExtension#encode(OutputStream)->void:::Write the extension to the OutputStream.
sun.security.x509.PolicyMappingsExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.PolicyMappingsExtension#get(String)->List:::Get the attribute value.
sun.security.x509.PolicyMappingsExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.PolicyMappingsExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.PolicyMappingsExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.PrivateKeyUsageExtension#toString()->String:::Return the printable string.
sun.security.x509.PrivateKeyUsageExtension#valid()->void:::Verify that the current time is within the validity period.
sun.security.x509.PrivateKeyUsageExtension#valid(Date)->void:::Verify that the passed time is within the validity period.
sun.security.x509.PrivateKeyUsageExtension#encode(OutputStream)->void:::Write the extension to the OutputStream.
sun.security.x509.PrivateKeyUsageExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.PrivateKeyUsageExtension#get(String)->Date:::Get the attribute value.
sun.security.x509.PrivateKeyUsageExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.PrivateKeyUsageExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.PrivateKeyUsageExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.RDN#avas()->List:::Return an immutable List of the AVAs in this RDN.
sun.security.x509.RDN#size()->int:::Return the number of AVAs in this RDN.
sun.security.x509.RDN#equals(Object)->boolean::: n equals
sun.security.x509.RDN#hashCode()->int::: n hash code
sun.security.x509.RDN#findAttribute(ObjectIdentifier)->DerValue::: n find attribute
sun.security.x509.RDN#encode(DerOutputStream)->void::: n encode
sun.security.x509.RDN#toString()->String::: n to string
sun.security.x509.RDN#toRFC1779String()->String::: n to c1779 string
sun.security.x509.RDN#toRFC1779String(Map)->String::: n to c1779 string
sun.security.x509.RDN#toRFC2253String()->String::: n to c2253 string
sun.security.x509.RDN#toRFC2253String(Map)->String::: n to c2253 string
sun.security.x509.RDN#toRFC2253String(boolean)->String::: n to c2253 string
sun.security.x509.AVAComparator#getInstance()->Comparator::: comparator get instance
sun.security.x509.AVAComparator#compare(AVA, AVA)->int:::AVA's containing a standard keyword are ordered alphabetically, followed by AVA's containing an OID keyword, ordered numerically
sun.security.x509.ReasonFlags#getFlags()->boolean[]:::Returns the reason flags as a boolean array.
sun.security.x509.ReasonFlags#set(String, Object)->void:::Set the attribute value.
sun.security.x509.ReasonFlags#get(String)->Object:::Get the attribute value.
sun.security.x509.ReasonFlags#delete(String)->void:::Delete the attribute value.
sun.security.x509.ReasonFlags#toString()->String:::Returns a printable representation of the ReasonFlags.
sun.security.x509.ReasonFlags#encode(DerOutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.ReasonFlags#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.RFC822Name#parseName(String)->void:::Parse an RFC822Name string to see if it is a valid addr-spec according to IETF RFC822 and RFC2459: [local-part@]domain  local-part@ could be empty for an RFC822Name NameConstraint, but the domain at least must be non-empty
sun.security.x509.RFC822Name#getType()->int:::Return the type of the GeneralName.
sun.security.x509.RFC822Name#getName()->String:::Return the actual name value of the GeneralName.
sun.security.x509.RFC822Name#encode(DerOutputStream)->void:::Encode the RFC822 name into the DerOutputStream.
sun.security.x509.RFC822Name#toString()->String:::Convert the name into user readable string.
sun.security.x509.RFC822Name#equals(Object)->boolean:::Compares this name with another, for equality.
sun.security.x509.RFC822Name#hashCode()->int:::Returns the hash code value for this object.
sun.security.x509.RFC822Name#constrains(GeneralNameInterface)->int:::Return constraint type:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name (i.e
sun.security.x509.RFC822Name#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds.
sun.security.x509.SerialNumber#toString()->String:::Return the SerialNumber as user readable string.
sun.security.x509.SerialNumber#encode(DerOutputStream)->void:::Encode the SerialNumber in DER form to the stream.
sun.security.x509.SerialNumber#getNumber()->BigInteger:::Return the serial number.
sun.security.x509.SubjectAlternativeNameExtension#toString()->String:::Returns a printable representation of the SubjectAlternativeName.
sun.security.x509.SubjectAlternativeNameExtension#encode(OutputStream)->void:::Write the extension to the OutputStream.
sun.security.x509.SubjectAlternativeNameExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.SubjectAlternativeNameExtension#get(String)->GeneralNames:::Get the attribute value.
sun.security.x509.SubjectAlternativeNameExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.SubjectAlternativeNameExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.SubjectAlternativeNameExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.SubjectInfoAccessExtension#getAccessDescriptions()->List:::Return the list of AccessDescription objects.
sun.security.x509.SubjectInfoAccessExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.SubjectInfoAccessExtension#encode(OutputStream)->void:::Write the extension to the DerOutputStream.
sun.security.x509.SubjectInfoAccessExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.SubjectInfoAccessExtension#get(String)->List:::Get the attribute value.
sun.security.x509.SubjectInfoAccessExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.SubjectInfoAccessExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.SubjectInfoAccessExtension#toString()->String:::Return the extension as user readable string.
sun.security.x509.SubjectKeyIdentifierExtension#toString()->String:::Returns a printable representation.
sun.security.x509.SubjectKeyIdentifierExtension#encode(OutputStream)->void:::Write the extension to the OutputStream.
sun.security.x509.SubjectKeyIdentifierExtension#set(String, Object)->void:::Set the attribute value.
sun.security.x509.SubjectKeyIdentifierExtension#get(String)->KeyIdentifier:::Get the attribute value.
sun.security.x509.SubjectKeyIdentifierExtension#delete(String)->void:::Delete the attribute value.
sun.security.x509.SubjectKeyIdentifierExtension#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.SubjectKeyIdentifierExtension#getName()->String:::Return the name of this attribute.
sun.security.x509.UniqueIdentity#toString()->String:::Return the UniqueIdentity as a printable string.
sun.security.x509.UniqueIdentity#encode(DerOutputStream, byte)->void:::Encode the UniqueIdentity in DER form to the stream.
sun.security.x509.UniqueIdentity#getId()->boolean[]:::Return the unique id.
sun.security.x509.URIName#nameConstraint(DerValue)->URIName:::Create the URIName object with the specified name constraint
sun.security.x509.URIName#getType()->int:::Return the type of the GeneralName.
sun.security.x509.URIName#encode(DerOutputStream)->void:::Encode the URI name into the DerOutputStream.
sun.security.x509.URIName#toString()->String:::Convert the name into user readable string.
sun.security.x509.URIName#equals(Object)->boolean:::Compares this name with another, for equality.
sun.security.x509.URIName#getURI()->URI:::Returns the URIName as a java.net.URI object
sun.security.x509.URIName#getName()->String:::Returns this URI name.
sun.security.x509.URIName#getScheme()->String:::Return the scheme name portion of a URIName
sun.security.x509.URIName#getHost()->String:::Return the host name or IP address portion of the URIName
sun.security.x509.URIName#getHostObject()->Object:::Return the host object type; if host name is a DNSName, then this host object does not include any initial "." on the name.
sun.security.x509.URIName#hashCode()->int:::Returns the hash code value for this object.
sun.security.x509.URIName#constrains(GeneralNameInterface)->int:::Return type of constraint inputName places on this name:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name       (i.e
sun.security.x509.URIName#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds and for calculating path lengths in name subtrees.
sun.security.x509.X400Address#getType()->int:::Return the type of the GeneralName.
sun.security.x509.X400Address#encode(DerOutputStream)->void:::Encode the X400 name into the DerOutputStream.
sun.security.x509.X400Address#toString()->String:::Return the printable string.
sun.security.x509.X400Address#constrains(GeneralNameInterface)->int:::Return type of constraint inputName places on this name:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from name (i.e
sun.security.x509.X400Address#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds and for calculating path lengths in name subtrees.
sun.security.x509.X500Name#rdns()->List:::Return an immutable List of all RDNs in this X500Name.
sun.security.x509.X500Name#size()->int:::Return the number of RDNs in this X500Name.
sun.security.x509.X500Name#allAvas()->List:::Return an immutable List of the AVAs contained in all the RDNs of this X500Name.
sun.security.x509.X500Name#avaSize()->int:::Return the total number of AVAs contained in all the RDNs of this X500Name.
sun.security.x509.X500Name#isEmpty()->boolean:::Return whether this X500Name is empty
sun.security.x509.X500Name#hashCode()->int:::Calculates a hash code value for the object
sun.security.x509.X500Name#equals(Object)->boolean:::Compares this name with another, for equality.
sun.security.x509.X500Name#getType()->int:::Return type of GeneralName.
sun.security.x509.X500Name#getCountry()->String:::Returns a "Country" name component
sun.security.x509.X500Name#getOrganization()->String:::Returns an "Organization" name component
sun.security.x509.X500Name#getOrganizationalUnit()->String:::Returns an "Organizational Unit" name component
sun.security.x509.X500Name#getCommonName()->String:::Returns a "Common Name" component
sun.security.x509.X500Name#getLocality()->String:::Returns a "Locality" name component
sun.security.x509.X500Name#getState()->String:::Returns a "State" name component
sun.security.x509.X500Name#getDomain()->String:::Returns a "Domain" name component
sun.security.x509.X500Name#getDNQualifier()->String:::Returns a "DN Qualifier" name component
sun.security.x509.X500Name#getSurname()->String:::Returns a "Surname" name component
sun.security.x509.X500Name#getGivenName()->String:::Returns a "Given Name" name component
sun.security.x509.X500Name#getInitials()->String:::Returns an "Initials" name component
sun.security.x509.X500Name#getGeneration()->String:::Returns a "Generation Qualifier" name component
sun.security.x509.X500Name#getIP()->String:::Returns an "IP address" name component
sun.security.x509.X500Name#toString()->String:::Returns a string form of the X.500 distinguished name
sun.security.x509.X500Name#getRFC1779Name()->String:::Returns a string form of the X.500 distinguished name using the algorithm defined in RFC 1779
sun.security.x509.X500Name#getRFC1779Name(Map)->String:::Returns a string form of the X.500 distinguished name using the algorithm defined in RFC 1779
sun.security.x509.X500Name#getRFC2253Name()->String:::Returns a string form of the X.500 distinguished name using the algorithm defined in RFC 2253
sun.security.x509.X500Name#getRFC2253Name(Map)->String:::Returns a string form of the X.500 distinguished name using the algorithm defined in RFC 2253
sun.security.x509.X500Name#getRFC2253CanonicalName()->String::: x500 name get c2253 canonical name
sun.security.x509.X500Name#getName()->String:::Returns the value of toString()
sun.security.x509.X500Name#findMostSpecificAttribute(ObjectIdentifier)->DerValue:::Find the most specific ("last") attribute of the given type.
sun.security.x509.X500Name#emit(DerOutputStream)->void:::Encodes the name in DER-encoded form.
sun.security.x509.X500Name#encode(DerOutputStream)->void:::Encodes the name in DER-encoded form.
sun.security.x509.X500Name#getEncodedInternal()->byte[]:::Returned the encoding as an uncloned byte array
sun.security.x509.X500Name#getEncoded()->byte[]:::Gets the name in DER-encoded form.
sun.security.x509.X500Name#countQuotes(String, int, int)->int::: x500 name count quotes
sun.security.x509.X500Name#constrains(GeneralNameInterface)->int:::Return constraint type:<ul>   <li>NAME_DIFF_TYPE = -1: input name is different type from this name       (i.e
sun.security.x509.X500Name#subtreeDepth()->int:::Return subtree depth of this name for purposes of determining NameConstraints minimum and maximum bounds and for calculating path lengths in name subtrees.
sun.security.x509.X500Name#commonAncestor(X500Name)->X500Name:::Return lowest common ancestor of this name and other name
sun.security.x509.X500Name#asX500Principal()->X500Principal:::Get an X500Principal backed by this X500Name
sun.security.x509.X500Name#asX500Name(X500Principal)->X500Name:::Get the X500Name contained in the given X500Principal
sun.security.x509.X509AttributeName#getPrefix()->String:::Return the prefix of the name.
sun.security.x509.X509AttributeName#getSuffix()->String:::Return the suffix of the name.
sun.security.x509.X509CertImpl#encode(OutputStream)->void:::Appends the certificate to an output stream.
sun.security.x509.X509CertImpl#derEncode(OutputStream)->void:::DER encode this object onto an output stream
sun.security.x509.X509CertImpl#getEncoded()->byte[]:::Returns the encoded form of this certificate
sun.security.x509.X509CertImpl#getEncodedInternal()->byte[]:::Returned the encoding as an uncloned byte array
sun.security.x509.X509CertImpl#verify(PublicKey)->void:::Throws an exception if the certificate was not signed using the verification key provided
sun.security.x509.X509CertImpl#verify(PublicKey, String)->void:::Throws an exception if the certificate was not signed using the verification key provided
sun.security.x509.X509CertImpl#verify(PublicKey, Provider)->void:::Throws an exception if the certificate was not signed using the verification key provided
sun.security.x509.X509CertImpl#sign(PrivateKey, String)->void:::Creates an X.509 certificate, and signs it using the given key (associating a signature algorithm and an X.500 name)
sun.security.x509.X509CertImpl#sign(PrivateKey, String, String)->void:::Creates an X.509 certificate, and signs it using the given key (associating a signature algorithm and an X.500 name)
sun.security.x509.X509CertImpl#sign(PrivateKey, AlgorithmParameterSpec, String, String)->void:::Creates an X.509 certificate, and signs it using the given key (associating a signature algorithm and an X.500 name), signature parameters, and security provider
sun.security.x509.X509CertImpl#checkValidity()->void:::Checks that the certificate is currently valid, i.e
sun.security.x509.X509CertImpl#checkValidity(Date)->void:::Checks that the specified date is within the certificate's validity period, or basically if the certificate would be valid at the specified date/time.
sun.security.x509.X509CertImpl#get(String)->Object:::Return the requested attribute from the certificate
sun.security.x509.X509CertImpl#set(String, Object)->void:::Set the requested attribute in the certificate.
sun.security.x509.X509CertImpl#delete(String)->void:::Delete the requested attribute from the certificate.
sun.security.x509.X509CertImpl#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.X509CertImpl#getName()->String:::Return the name of this attribute.
sun.security.x509.X509CertImpl#toString()->String:::Returns a printable representation of the certificate
sun.security.x509.X509CertImpl#getPublicKey()->PublicKey:::Gets the publickey from this certificate.
sun.security.x509.X509CertImpl#getVersion()->int:::Gets the version number from the certificate.
sun.security.x509.X509CertImpl#getSerialNumber()->BigInteger:::Gets the serial number from the certificate.
sun.security.x509.X509CertImpl#getSerialNumberObject()->SerialNumber:::Gets the serial number from the certificate as a SerialNumber object.
sun.security.x509.X509CertImpl#getSubjectDN()->Principal:::Gets the subject distinguished name from the certificate.
sun.security.x509.X509CertImpl#getSubjectX500Principal()->X500Principal:::Get subject name as X500Principal
sun.security.x509.X509CertImpl#getIssuerDN()->Principal:::Gets the issuer distinguished name from the certificate.
sun.security.x509.X509CertImpl#getIssuerX500Principal()->X500Principal:::Get issuer name as X500Principal
sun.security.x509.X509CertImpl#getNotBefore()->Date:::Gets the notBefore date from the validity period of the certificate.
sun.security.x509.X509CertImpl#getNotAfter()->Date:::Gets the notAfter date from the validity period of the certificate.
sun.security.x509.X509CertImpl#getTBSCertificate()->byte[]:::Gets the DER encoded certificate informations, the tbsCertificate from this certificate
sun.security.x509.X509CertImpl#getSignature()->byte[]:::Gets the raw Signature bits from the certificate.
sun.security.x509.X509CertImpl#getSigAlgName()->String:::Gets the signature algorithm name for the certificate signature algorithm
sun.security.x509.X509CertImpl#getSigAlgOID()->String:::Gets the signature algorithm OID string from the certificate
sun.security.x509.X509CertImpl#getSigAlgParams()->byte[]:::Gets the DER encoded signature algorithm parameters from this certificate's signature algorithm.
sun.security.x509.X509CertImpl#getIssuerUniqueID()->boolean[]:::Gets the Issuer Unique Identity from the certificate.
sun.security.x509.X509CertImpl#getSubjectUniqueID()->boolean[]:::Gets the Subject Unique Identity from the certificate.
sun.security.x509.X509CertImpl#getAuthKeyId()->KeyIdentifier::: x509 cert impl get auth key id
sun.security.x509.X509CertImpl#getSubjectKeyId()->KeyIdentifier:::Returns the subject's key identifier, or null
sun.security.x509.X509CertImpl#getAuthorityKeyIdentifierExtension()->AuthorityKeyIdentifierExtension:::Get AuthorityKeyIdentifier extension
sun.security.x509.X509CertImpl#getBasicConstraintsExtension()->BasicConstraintsExtension:::Get BasicConstraints extension
sun.security.x509.X509CertImpl#getCertificatePoliciesExtension()->CertificatePoliciesExtension:::Get CertificatePoliciesExtension
sun.security.x509.X509CertImpl#getExtendedKeyUsageExtension()->ExtendedKeyUsageExtension:::Get ExtendedKeyUsage extension
sun.security.x509.X509CertImpl#getIssuerAlternativeNameExtension()->IssuerAlternativeNameExtension:::Get IssuerAlternativeName extension
sun.security.x509.X509CertImpl#getNameConstraintsExtension()->NameConstraintsExtension:::Get NameConstraints extension
sun.security.x509.X509CertImpl#getPolicyConstraintsExtension()->PolicyConstraintsExtension:::Get PolicyConstraints extension
sun.security.x509.X509CertImpl#getPolicyMappingsExtension()->PolicyMappingsExtension:::Get PolicyMappingsExtension extension
sun.security.x509.X509CertImpl#getPrivateKeyUsageExtension()->PrivateKeyUsageExtension:::Get PrivateKeyUsage extension
sun.security.x509.X509CertImpl#getSubjectAlternativeNameExtension()->SubjectAlternativeNameExtension:::Get SubjectAlternativeName extension
sun.security.x509.X509CertImpl#getSubjectKeyIdentifierExtension()->SubjectKeyIdentifierExtension:::Get SubjectKeyIdentifier extension
sun.security.x509.X509CertImpl#getCRLDistributionPointsExtension()->CRLDistributionPointsExtension:::Get CRLDistributionPoints extension
sun.security.x509.X509CertImpl#hasUnsupportedCriticalExtension()->boolean:::Return true if a critical extension is found that is not supported, otherwise return false.
sun.security.x509.X509CertImpl#getCriticalExtensionOIDs()->Set:::Gets a Set of the extension(s) marked CRITICAL in the certificate
sun.security.x509.X509CertImpl#getNonCriticalExtensionOIDs()->Set:::Gets a Set of the extension(s) marked NON-CRITICAL in the certificate
sun.security.x509.X509CertImpl#getExtension(ObjectIdentifier)->Extension:::Gets the extension identified by the given ObjectIdentifier
sun.security.x509.X509CertImpl#getUnparseableExtension(ObjectIdentifier)->Extension::: x509 cert impl get unparseable extension
sun.security.x509.X509CertImpl#getExtensionValue(String)->byte[]:::Gets the DER encoded extension identified by the given oid String.
sun.security.x509.X509CertImpl#getKeyUsage()->boolean[]:::Get a boolean array representing the bits of the KeyUsage extension, (oid = 2.5.29.15).
sun.security.x509.X509CertImpl#getExtendedKeyUsage()->List:::This method are the overridden implementation of getExtendedKeyUsage method in X509Certificate in the Sun provider
sun.security.x509.X509CertImpl#getExtendedKeyUsage(X509Certificate)->List:::This static method is the default implementation of the getExtendedKeyUsage method in X509Certificate
sun.security.x509.X509CertImpl#getBasicConstraints()->int:::Get the certificate constraints path length from the critical BasicConstraints extension, (oid = 2.5.29.19).
sun.security.x509.X509CertImpl#getSubjectAlternativeNames()->Collection>:::This method are the overridden implementation of getSubjectAlternativeNames method in X509Certificate in the Sun provider
sun.security.x509.X509CertImpl#getSubjectAlternativeNames(X509Certificate)->Collection>:::This static method is the default implementation of the getSubjectAlternaitveNames method in X509Certificate
sun.security.x509.X509CertImpl#getIssuerAlternativeNames()->Collection>:::This method are the overridden implementation of getIssuerAlternativeNames method in X509Certificate in the Sun provider
sun.security.x509.X509CertImpl#getIssuerAlternativeNames(X509Certificate)->Collection>:::This static method is the default implementation of the getIssuerAlternaitveNames method in X509Certificate
sun.security.x509.X509CertImpl#getAuthorityInfoAccessExtension()->AuthorityInfoAccessExtension::: x509 cert impl get authority info access extension
sun.security.x509.X509CertImpl#getSubjectX500Principal(X509Certificate)->X500Principal:::Extract the subject X500Principal from an X509Certificate
sun.security.x509.X509CertImpl#getIssuerX500Principal(X509Certificate)->X500Principal:::Extract the issuer X500Principal from an X509Certificate
sun.security.x509.X509CertImpl#getEncodedInternal(Certificate)->byte[]:::Returned the encoding of the given certificate for internal use
sun.security.x509.X509CertImpl#toImpl(X509Certificate)->X509CertImpl:::Utility method to convert an arbitrary instance of X509Certificate to a X509CertImpl
sun.security.x509.X509CertImpl#isSelfIssued(X509Certificate)->boolean:::Utility method to test if a certificate is self-issued
sun.security.x509.X509CertImpl#isSelfSigned(X509Certificate, String)->boolean:::Utility method to test if a certificate is self-signed
sun.security.x509.X509CertImpl#getFingerprint(String)->String::: x509 cert impl get fingerprint
sun.security.x509.X509CertImpl#getFingerprint(String, X509Certificate)->String:::Gets the requested finger print of the certificate
sun.security.x509.X509CertInfo#encode(OutputStream)->void:::Appends the certificate to an output stream.
sun.security.x509.X509CertInfo#getElements()->Enumeration:::Return an enumeration of names of attributes existing within this attribute.
sun.security.x509.X509CertInfo#getName()->String:::Return the name of this attribute.
sun.security.x509.X509CertInfo#getEncodedInfo()->byte[]:::Returns the encoded certificate info.
sun.security.x509.X509CertInfo#equals(Object)->boolean:::Compares two X509CertInfo objects
sun.security.x509.X509CertInfo#equals(X509CertInfo)->boolean:::Compares two certificates, returning false if any data differs between the two.
sun.security.x509.X509CertInfo#hashCode()->int:::Calculates a hash code value for the object
sun.security.x509.X509CertInfo#toString()->String:::Returns a printable representation of the certificate.
sun.security.x509.X509CertInfo#set(String, Object)->void:::Set the certificate attribute.
sun.security.x509.X509CertInfo#delete(String)->void:::Delete the certificate attribute.
sun.security.x509.X509CertInfo#get(String)->Object:::Get the certificate attribute.
sun.security.x509.X509CRLEntryImpl#hasExtensions()->boolean:::Returns true if this revoked certificate entry has extensions, otherwise false.
sun.security.x509.X509CRLEntryImpl#encode(DerOutputStream)->void:::Encodes the revoked certificate to an output stream.
sun.security.x509.X509CRLEntryImpl#getEncoded()->byte[]:::Returns the ASN.1 DER-encoded form of this CRL Entry, which corresponds to the inner SEQUENCE.
sun.security.x509.X509CRLEntryImpl#getCertificateIssuer()->X500Principal::: x509 entry impl get certificate issuer
sun.security.x509.X509CRLEntryImpl#setCertificateIssuer(X500Principal, X500Principal)->void::: x509 entry impl set certificate issuer
sun.security.x509.X509CRLEntryImpl#getSerialNumber()->BigInteger:::Gets the serial number from this X509CRLEntry, i.e
sun.security.x509.X509CRLEntryImpl#getRevocationDate()->Date:::Gets the revocation date from this X509CRLEntry, the revocationDate.
sun.security.x509.X509CRLEntryImpl#getRevocationReason()->CRLReason:::This method is the overridden implementation of the getRevocationReason method in X509CRLEntry
sun.security.x509.X509CRLEntryImpl#getRevocationReason(X509CRLEntry)->CRLReason:::This static method is the default implementation of the getRevocationReason method in X509CRLEntry.
sun.security.x509.X509CRLEntryImpl#getReasonCode()->Integer:::get Reason Code from CRL entry.
sun.security.x509.X509CRLEntryImpl#toString()->String:::Returns a printable string of this revoked certificate.
sun.security.x509.X509CRLEntryImpl#hasUnsupportedCriticalExtension()->boolean:::Return true if a critical extension is found that is not supported, otherwise return false.
sun.security.x509.X509CRLEntryImpl#getCriticalExtensionOIDs()->Set:::Gets a Set of the extension(s) marked CRITICAL in this X509CRLEntry
sun.security.x509.X509CRLEntryImpl#getNonCriticalExtensionOIDs()->Set:::Gets a Set of the extension(s) marked NON-CRITICAL in this X509CRLEntry
sun.security.x509.X509CRLEntryImpl#getExtensionValue(String)->byte[]:::Gets the DER encoded OCTET string for the extension value (extnValue) identified by the passed in oid String
sun.security.x509.X509CRLEntryImpl#getExtension(ObjectIdentifier)->Extension:::get an extension
sun.security.x509.X509CRLEntryImpl#toImpl(X509CRLEntry)->X509CRLEntryImpl:::Utility method to convert an arbitrary instance of X509CRLEntry to a X509CRLEntryImpl
sun.security.x509.X509CRLEntryImpl#getCertificateIssuerExtension()->CertificateIssuerExtension:::Returns the CertificateIssuerExtension
sun.security.x509.X509CRLEntryImpl#getExtensions()->Map:::Returns all extensions for this entry in a map
sun.security.x509.X509CRLEntryImpl#compareTo(X509CRLEntryImpl)->int::: x509 entry impl compare to
sun.security.x509.X509CRLImpl#getEncodedInternal()->byte[]:::Returned the encoding as an uncloned byte array
sun.security.x509.X509CRLImpl#getEncoded()->byte[]:::Returns the ASN.1 DER encoded form of this CRL.
sun.security.x509.X509CRLImpl#encodeInfo(OutputStream)->void:::Encodes the "to-be-signed" CRL to the OutputStream.
sun.security.x509.X509CRLImpl#verify(PublicKey)->void:::Verifies that this CRL was signed using the private key that corresponds to the given public key.
sun.security.x509.X509CRLImpl#verify(PublicKey, String)->void:::Verifies that this CRL was signed using the private key that corresponds to the given public key, and that the signature verification was computed by the given provider.
sun.security.x509.X509CRLImpl#verify(PublicKey, Provider)->void:::Verifies that this CRL was signed using the private key that corresponds to the given public key, and that the signature verification was computed by the given provider
sun.security.x509.X509CRLImpl#sign(PrivateKey, String)->void:::Encodes an X.509 CRL, and signs it using the given key.
sun.security.x509.X509CRLImpl#sign(PrivateKey, String, String)->void:::Encodes an X.509 CRL, and signs it using the given key.
sun.security.x509.X509CRLImpl#toString()->String:::Returns a printable string of this CRL.
sun.security.x509.X509CRLImpl#toStringWithAlgName(String)->String::: x509 impl to string with alg name
sun.security.x509.X509CRLImpl#isRevoked(Certificate)->boolean:::Checks whether the given certificate is on this CRL.
sun.security.x509.X509CRLImpl#getVersion()->int:::Gets the version number from this CRL
sun.security.x509.X509CRLImpl#getIssuerDN()->Principal:::Gets the issuer distinguished name from this CRL
sun.security.x509.X509CRLImpl#getIssuerX500Principal()->X500Principal:::Return the issuer as X500Principal
sun.security.x509.X509CRLImpl#getThisUpdate()->Date:::Gets the thisUpdate date from the CRL
sun.security.x509.X509CRLImpl#getNextUpdate()->Date:::Gets the nextUpdate date from the CRL.
sun.security.x509.X509CRLImpl#getRevokedCertificate(BigInteger)->X509CRLEntry:::Gets the CRL entry with the given serial number from this CRL.
sun.security.x509.X509CRLImpl#getRevokedCertificate(X509Certificate)->X509CRLEntry:::Gets the CRL entry for the given certificate.
sun.security.x509.X509CRLImpl#getRevokedCertificates()->Set:::Gets all the revoked certificates from the CRL
sun.security.x509.X509CRLImpl#getTBSCertList()->byte[]:::Gets the DER encoded CRL information, the tbsCertList from this CRL
sun.security.x509.X509CRLImpl#getSignature()->byte[]:::Gets the raw Signature bits from the CRL.
sun.security.x509.X509CRLImpl#getSigAlgName()->String:::Gets the signature algorithm name for the CRL signature algorithm
sun.security.x509.X509CRLImpl#getSigAlgOID()->String:::Gets the signature algorithm OID string from the CRL
sun.security.x509.X509CRLImpl#getSigAlgParams()->byte[]:::Gets the DER encoded signature algorithm parameters from this CRL's signature algorithm
sun.security.x509.X509CRLImpl#getSigAlgId()->AlgorithmId:::Gets the signature AlgorithmId from the CRL.
sun.security.x509.X509CRLImpl#getAuthKeyId()->KeyIdentifier:::return the AuthorityKeyIdentifier, if any.
sun.security.x509.X509CRLImpl#getAuthKeyIdExtension()->AuthorityKeyIdentifierExtension:::return the AuthorityKeyIdentifierExtension, if any.
sun.security.x509.X509CRLImpl#getCRLNumberExtension()->CRLNumberExtension:::return the CRLNumberExtension, if any.
sun.security.x509.X509CRLImpl#getCRLNumber()->BigInteger:::return the CRL number from the CRLNumberExtension, if any.
sun.security.x509.X509CRLImpl#getDeltaCRLIndicatorExtension()->DeltaCRLIndicatorExtension:::return the DeltaCRLIndicatorExtension, if any.
sun.security.x509.X509CRLImpl#getBaseCRLNumber()->BigInteger:::return the base CRL number from the DeltaCRLIndicatorExtension, if any.
sun.security.x509.X509CRLImpl#getIssuerAltNameExtension()->IssuerAlternativeNameExtension:::return the IssuerAlternativeNameExtension, if any.
sun.security.x509.X509CRLImpl#getIssuingDistributionPointExtension()->IssuingDistributionPointExtension:::return the IssuingDistributionPointExtension, if any.
sun.security.x509.X509CRLImpl#hasUnsupportedCriticalExtension()->boolean:::Return true if a critical extension is found that is not supported, otherwise return false.
sun.security.x509.X509CRLImpl#getCriticalExtensionOIDs()->Set:::Gets a Set of the extension(s) marked CRITICAL in the CRL
sun.security.x509.X509CRLImpl#getNonCriticalExtensionOIDs()->Set:::Gets a Set of the extension(s) marked NON-CRITICAL in the CRL
sun.security.x509.X509CRLImpl#getExtensionValue(String)->byte[]:::Gets the DER encoded OCTET string for the extension value (extnValue) identified by the passed in oid String
sun.security.x509.X509CRLImpl#getExtension(ObjectIdentifier)->Object:::get an extension
sun.security.x509.X509CRLImpl#getIssuerX500Principal(X509CRL)->X500Principal:::Extract the issuer X500Principal from an X509CRL
sun.security.x509.X509CRLImpl#getEncodedInternal(X509CRL)->byte[]:::Returned the encoding of the given certificate for internal use
sun.security.x509.X509CRLImpl#toImpl(X509CRL)->X509CRLImpl:::Utility method to convert an arbitrary instance of X509CRL to a X509CRLImpl
sun.security.x509.X509CRLImpl#derEncode(OutputStream)->void::: x509 impl der encode
sun.security.x509.X509Key#setKey(BitArray)->void:::Sets the key in the BitArray form.
sun.security.x509.X509Key#getKey()->BitArray:::Gets the key
sun.security.x509.X509Key#parse(DerValue)->PublicKey:::Construct X.509 subject public key from a DER value
sun.security.x509.X509Key#parseKeyBits()->void:::Parse the key bits
sun.security.x509.X509Key#buildX509Key(AlgorithmId, BitArray)->PublicKey::: x509 key build x509 key
sun.security.x509.X509Key#getAlgorithm()->String:::Returns the algorithm to be used with this key.
sun.security.x509.X509Key#getAlgorithmId()->AlgorithmId:::Returns the algorithm ID to be used with this key.
sun.security.x509.X509Key#encode(DerOutputStream)->void:::Encode SubjectPublicKeyInfo sequence on the DER output stream.
sun.security.x509.X509Key#getEncoded()->byte[]:::Returns the DER-encoded form of the key as a byte array.
sun.security.x509.X509Key#getEncodedInternal()->byte[]::: x509 key get encoded internal
sun.security.x509.X509Key#getFormat()->String:::Returns the format for this key: "X.509"
sun.security.x509.X509Key#encode()->byte[]:::Returns the DER-encoded form of the key as a byte array.
sun.security.x509.X509Key#toString()->String::: x509 key to string
sun.security.x509.X509Key#decode(InputStream)->void:::Initialize an X509Key object from an input stream
sun.security.x509.X509Key#decode(byte[])->void::: x509 key decode
sun.security.x509.X509Key#equals(Object)->boolean::: x509 key equals
sun.security.x509.X509Key#hashCode()->int:::Calculates a hash code value for the object
sun.security.x509.X509Key#encode(DerOutputStream, AlgorithmId, BitArray)->void::: x509 key encode
