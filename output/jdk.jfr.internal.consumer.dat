jdk.jfr.internal.consumer.ChunkHeader#nextHeader()->ChunkHeader::: chunk header next header
jdk.jfr.internal.consumer.ChunkHeader#readMetadata()->MetadataDescriptor::: chunk header read metadata
jdk.jfr.internal.consumer.ChunkHeader#isLastChunk()->boolean::: chunk header is last chunk
jdk.jfr.internal.consumer.ChunkHeader#getMajor()->short::: chunk header get major
jdk.jfr.internal.consumer.ChunkHeader#getMinor()->short::: chunk header get minor
jdk.jfr.internal.consumer.ChunkHeader#getAbsoluteChunkStart()->long::: chunk header get absolute chunk start
jdk.jfr.internal.consumer.ChunkHeader#getConstantPoolPosition()->long::: chunk header get constant pool position
jdk.jfr.internal.consumer.ChunkHeader#getStartTicks()->long::: chunk header get start ticks
jdk.jfr.internal.consumer.ChunkHeader#getTicksPerSecond()->double::: chunk header get ticks per second
jdk.jfr.internal.consumer.ChunkHeader#getStartNanos()->long::: chunk header get start nanos
jdk.jfr.internal.consumer.ChunkHeader#getEnd()->long::: chunk header get end
jdk.jfr.internal.consumer.ChunkHeader#getSize()->long::: chunk header get size
jdk.jfr.internal.consumer.ChunkHeader#getDurationNanos()->long::: chunk header get duration nanos
jdk.jfr.internal.consumer.ChunkHeader#getInput()->RecordingInput::: chunk header get input
jdk.jfr.internal.consumer.ChunkHeader#getEventStart()->long::: chunk header get event start
jdk.jfr.internal.consumer.RecordingInput#readByte()->byte::: recording input read byte
jdk.jfr.internal.consumer.RecordingInput#readFully(byte[], int, int)->void::: recording input read fully
jdk.jfr.internal.consumer.RecordingInput#readFully(byte[])->void::: recording input read fully
jdk.jfr.internal.consumer.RecordingInput#readRawShort()->short::: recording input read raw short
jdk.jfr.internal.consumer.RecordingInput#readDouble()->double::: recording input read double
jdk.jfr.internal.consumer.RecordingInput#readFloat()->float::: recording input read float
jdk.jfr.internal.consumer.RecordingInput#readRawInt()->int::: recording input read raw int
jdk.jfr.internal.consumer.RecordingInput#readRawLong()->long::: recording input read raw long
jdk.jfr.internal.consumer.RecordingInput#position()->long::: recording input position
jdk.jfr.internal.consumer.RecordingInput#position(long)->void::: recording input position
jdk.jfr.internal.consumer.RecordingInput#size()->long::: recording input size
jdk.jfr.internal.consumer.RecordingInput#close()->void::: recording input close
jdk.jfr.internal.consumer.RecordingInput#skipBytes(int)->int::: recording input skip bytes
jdk.jfr.internal.consumer.RecordingInput#readBoolean()->boolean::: recording input read boolean
jdk.jfr.internal.consumer.RecordingInput#readUnsignedByte()->int::: recording input read unsigned byte
jdk.jfr.internal.consumer.RecordingInput#readUnsignedShort()->int::: recording input read unsigned short
jdk.jfr.internal.consumer.RecordingInput#readLine()->String::: recording input read line
jdk.jfr.internal.consumer.RecordingInput#readUTF()->String::: recording input read f
jdk.jfr.internal.consumer.RecordingInput#readEncodedString(byte)->String::: recording input read encoded string
jdk.jfr.internal.consumer.RecordingInput#readChar()->char::: recording input read char
jdk.jfr.internal.consumer.RecordingInput#readShort()->short::: recording input read short
jdk.jfr.internal.consumer.RecordingInput#readInt()->int::: recording input read int
jdk.jfr.internal.consumer.RecordingInput#readLong()->long::: recording input read long
jdk.jfr.internal.consumer.RecordingInternals#isLastEventInChunk(RecordingFile)->boolean::: recording internals is last event in chunk
jdk.jfr.internal.consumer.RecordingInternals#getOffsetDataTime(RecordedObject, String)->Object::: recording internals get offset data time
jdk.jfr.internal.consumer.RecordingInternals#readTypes(RecordingFile)->List::: recording internals read types
jdk.jfr.internal.consumer.RecordingInternals#sort(List)->void::: recording internals sort
