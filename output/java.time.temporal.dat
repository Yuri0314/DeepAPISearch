java.time.temporal.IsoFields#isIso(TemporalAccessor)->boolean:::
java.time.temporal.Temporal#isSupported(TemporalUnit)->boolean:::Checks if the specified unit is supported
java.time.temporal.Temporal#with(TemporalAdjuster)->Temporal:::Returns an adjusted object of the same type as this object with the adjustment made
java.time.temporal.Temporal#with(TemporalField, long)->Temporal:::Returns an object of the same type as this object with the specified field altered
java.time.temporal.Temporal#plus(TemporalAmount)->Temporal:::Returns an object of the same type as this object with an amount added
java.time.temporal.Temporal#plus(long, TemporalUnit)->Temporal:::Returns an object of the same type as this object with the specified period added
java.time.temporal.Temporal#minus(TemporalAmount)->Temporal:::Returns an object of the same type as this object with an amount subtracted
java.time.temporal.Temporal#minus(long, TemporalUnit)->Temporal:::Returns an object of the same type as this object with the specified period subtracted
java.time.temporal.Temporal#until(Temporal, TemporalUnit)->long:::Calculates the amount of time until another temporal in terms of the specified unit
java.time.temporal.TemporalAccessor#isSupported(TemporalField)->boolean:::Checks if the specified field is supported
java.time.temporal.TemporalAccessor#range(TemporalField)->ValueRange:::Gets the range of valid values for the specified field
java.time.temporal.TemporalAccessor#get(TemporalField)->int:::Gets the value of the specified field as an {@code int}
java.time.temporal.TemporalAccessor#getLong(TemporalField)->long:::Gets the value of the specified field as a {@code long}
java.time.temporal.TemporalAccessor#query(TemporalQuery<R>)->R:::Queries this date-time
java.time.temporal.TemporalAdjuster#adjustInto(Temporal)->Temporal:::Adjusts the specified temporal object
java.time.temporal.TemporalAdjusters#ofDateAdjuster(UnaryOperator<LocalDate>)->TemporalAdjuster:::Obtains a {@code TemporalAdjuster} that wraps a date adjuster
java.time.temporal.TemporalAdjusters#firstDayOfMonth()->TemporalAdjuster:::Returns the "first day of month" adjuster, which returns a new date set to  the first day of the current month
java.time.temporal.TemporalAdjusters#lastDayOfMonth()->TemporalAdjuster:::Returns the "last day of month" adjuster, which returns a new date set to  the last day of the current month
java.time.temporal.TemporalAdjusters#firstDayOfNextMonth()->TemporalAdjuster:::Returns the "first day of next month" adjuster, which returns a new date set to  the first day of the next month
java.time.temporal.TemporalAdjusters#firstDayOfYear()->TemporalAdjuster:::Returns the "first day of year" adjuster, which returns a new date set to  the first day of the current year
java.time.temporal.TemporalAdjusters#lastDayOfYear()->TemporalAdjuster:::Returns the "last day of year" adjuster, which returns a new date set to  the last day of the current year
java.time.temporal.TemporalAdjusters#firstDayOfNextYear()->TemporalAdjuster:::Returns the "first day of next year" adjuster, which returns a new date set to  the first day of the next year
java.time.temporal.TemporalAdjusters#firstInMonth(DayOfWeek)->TemporalAdjuster:::Returns the first in month adjuster, which returns a new date  in the same month with the first matching day-of-week
java.time.temporal.TemporalAdjusters#lastInMonth(DayOfWeek)->TemporalAdjuster:::Returns the last in month adjuster, which returns a new date  in the same month with the last matching day-of-week
java.time.temporal.TemporalAdjusters#dayOfWeekInMonth(int, DayOfWeek)->TemporalAdjuster:::Returns the day-of-week in month adjuster, which returns a new date  with the ordinal day-of-week based on the month
java.time.temporal.TemporalAdjusters#next(DayOfWeek)->TemporalAdjuster:::Returns the next day-of-week adjuster, which adjusts the date to the  first occurrence of the specified day-of-week after the date being adjusted
java.time.temporal.TemporalAdjusters#nextOrSame(DayOfWeek)->TemporalAdjuster:::Returns the next-or-same day-of-week adjuster, which adjusts the date to the  first occurrence of the specified day-of-week after the date being adjusted  unless it is already on that day in which case the same object is returned
java.time.temporal.TemporalAdjusters#previous(DayOfWeek)->TemporalAdjuster:::Returns the previous day-of-week adjuster, which adjusts the date to the  first occurrence of the specified day-of-week before the date being adjusted
java.time.temporal.TemporalAdjusters#previousOrSame(DayOfWeek)->TemporalAdjuster:::Returns the previous-or-same day-of-week adjuster, which adjusts the date to the  first occurrence of the specified day-of-week before the date being adjusted  unless it is already on that day in which case the same object is returned
java.time.temporal.TemporalAmount#get(TemporalUnit)->long:::Returns the value of the requested unit
java.time.temporal.TemporalAmount#getUnits()->List<TemporalUnit>:::Returns the list of units uniquely defining the value of this TemporalAmount
java.time.temporal.TemporalAmount#addTo(Temporal)->Temporal:::Adds to the specified temporal object
java.time.temporal.TemporalAmount#subtractFrom(Temporal)->Temporal:::Subtracts this object from the specified temporal object
java.time.temporal.TemporalField#getDisplayName(Locale)->String:::Gets the display name for the field in the requested locale
java.time.temporal.TemporalField#getBaseUnit()->TemporalUnit:::Gets the unit that the field is measured in
java.time.temporal.TemporalField#getRangeUnit()->TemporalUnit:::Gets the range that the field is bound by
java.time.temporal.TemporalField#range()->ValueRange:::Gets the range of valid values for the field
java.time.temporal.TemporalField#isDateBased()->boolean:::Checks if this field represents a component of a date
java.time.temporal.TemporalField#isTimeBased()->boolean:::Checks if this field represents a component of a time
java.time.temporal.TemporalField#isSupportedBy(TemporalAccessor)->boolean:::Checks if this field is supported by the temporal object
java.time.temporal.TemporalField#rangeRefinedBy(TemporalAccessor)->ValueRange:::Get the range of valid values for this field using the temporal object to  refine the result
java.time.temporal.TemporalField#getFrom(TemporalAccessor)->long:::Gets the value of this field from the specified temporal object
java.time.temporal.TemporalField#adjustInto(R, long)->R:::Returns a copy of the specified temporal object with the value of this field set
java.time.temporal.TemporalField#resolve(Map<TemporalField, Long>, TemporalAccessor, ResolverStyle)->TemporalAccessor:::Resolves this field to provide a simpler alternative or a date
java.time.temporal.TemporalField#toString()->String:::Gets a descriptive name for the field
java.time.temporal.TemporalQueries#zoneId()->TemporalQuery<ZoneId>:::A strict query for the {@code ZoneId}
java.time.temporal.TemporalQueries#chronology()->TemporalQuery<Chronology>:::A query for the {@code Chronology}
java.time.temporal.TemporalQueries#precision()->TemporalQuery<TemporalUnit>:::A query for the smallest supported unit
java.time.temporal.TemporalQueries#zone()->TemporalQuery<ZoneId>:::A lenient query for the {@code ZoneId}, falling back to the {@code ZoneOffset}
java.time.temporal.TemporalQueries#offset()->TemporalQuery<ZoneOffset>:::A query for {@code ZoneOffset} returning null if not found
java.time.temporal.TemporalQueries#localDate()->TemporalQuery<LocalDate>:::A query for {@code LocalDate} returning null if not found
java.time.temporal.TemporalQueries#localTime()->TemporalQuery<LocalTime>:::A query for {@code LocalTime} returning null if not found
java.time.temporal.TemporalQuery#queryFrom(TemporalAccessor)->R:::Queries the specified temporal object
java.time.temporal.TemporalUnit#getDuration()->Duration:::Gets the duration of this unit, which may be an estimate
java.time.temporal.TemporalUnit#isDurationEstimated()->boolean:::Checks if the duration of the unit is an estimate
java.time.temporal.TemporalUnit#isDateBased()->boolean:::Checks if this unit represents a component of a date
java.time.temporal.TemporalUnit#isTimeBased()->boolean:::Checks if this unit represents a component of a time
java.time.temporal.TemporalUnit#isSupportedBy(Temporal)->boolean:::Checks if this unit is supported by the specified temporal object
java.time.temporal.TemporalUnit#addTo(R, long)->R:::Returns a copy of the specified temporal object with the specified period added
java.time.temporal.TemporalUnit#between(Temporal, Temporal)->long:::Calculates the amount of time between two temporal objects
java.time.temporal.TemporalUnit#toString()->String:::Gets a descriptive name for the unit
java.time.temporal.ValueRange#of(long, long)->ValueRange:::Obtains a fixed value range
java.time.temporal.ValueRange#of(long, long, long)->ValueRange:::Obtains a variable value range
java.time.temporal.ValueRange#of(long, long, long, long)->ValueRange:::Obtains a fully variable value range
java.time.temporal.ValueRange#isFixed()->boolean:::Is the value range fixed and fully known
java.time.temporal.ValueRange#getMinimum()->long:::Gets the minimum value that the field can take
java.time.temporal.ValueRange#getLargestMinimum()->long:::Gets the largest possible minimum value that the field can take
java.time.temporal.ValueRange#getSmallestMaximum()->long:::Gets the smallest possible maximum value that the field can take
java.time.temporal.ValueRange#getMaximum()->long:::Gets the maximum value that the field can take
java.time.temporal.ValueRange#isIntValue()->boolean:::Checks if all values in the range fit in an {@code int}
java.time.temporal.ValueRange#isValidValue(long)->boolean:::Checks if the value is within the valid range
java.time.temporal.ValueRange#isValidIntValue(long)->boolean:::Checks if the value is within the valid range and that all values  in the range fit in an {@code int}
java.time.temporal.ValueRange#checkValidValue(long, TemporalField)->long:::Checks that the specified value is valid
java.time.temporal.ValueRange#checkValidIntValue(long, TemporalField)->int:::Checks that the specified value is valid and fits in an {@code int}
java.time.temporal.ValueRange#equals(Object)->boolean:::Checks if this range is equal to another range
java.time.temporal.ValueRange#hashCode()->int:::A hash code for this range.
java.time.temporal.ValueRange#toString()->String:::Outputs this range as a {@code String}
java.time.temporal.WeekFields#of(Locale)->WeekFields:::Obtains an instance of {@code WeekFields} appropriate for a locale
java.time.temporal.WeekFields#of(DayOfWeek, int)->WeekFields:::Obtains an instance of {@code WeekFields} from the first day-of-week and minimal days
java.time.temporal.WeekFields#getFirstDayOfWeek()->DayOfWeek:::Gets the first day-of-week
java.time.temporal.WeekFields#getMinimalDaysInFirstWeek()->int:::Gets the minimal number of days in the first week
java.time.temporal.WeekFields#dayOfWeek()->TemporalField:::Returns a field to access the day of week based on this {@code WeekFields}
java.time.temporal.WeekFields#weekOfMonth()->TemporalField:::Returns a field to access the week of month based on this {@code WeekFields}
java.time.temporal.WeekFields#weekOfYear()->TemporalField:::Returns a field to access the week of year based on this {@code WeekFields}
java.time.temporal.WeekFields#weekOfWeekBasedYear()->TemporalField:::Returns a field to access the week of a week-based-year based on this {@code WeekFields}
java.time.temporal.WeekFields#weekBasedYear()->TemporalField:::Returns a field to access the year of a week-based-year based on this {@code WeekFields}
java.time.temporal.WeekFields#equals(Object)->boolean:::Checks if this {@code WeekFields} is equal to the specified object
java.time.temporal.WeekFields#hashCode()->int:::A hash code for this {@code WeekFields}.
java.time.temporal.WeekFields#toString()->String:::A string representation of this {@code WeekFields} instance.
java.time.temporal.WeekFields.ComputedDayOfField#ofDayOfWeekField(WeekFields)->ComputedDayOfField:::Returns a field to access the day of week,  computed based on a WeekFields
java.time.temporal.WeekFields.ComputedDayOfField#ofWeekOfMonthField(WeekFields)->ComputedDayOfField:::Returns a field to access the week of month,  computed based on a WeekFields.
java.time.temporal.WeekFields.ComputedDayOfField#ofWeekOfYearField(WeekFields)->ComputedDayOfField:::Returns a field to access the week of year,  computed based on a WeekFields.
java.time.temporal.WeekFields.ComputedDayOfField#ofWeekOfWeekBasedYearField(WeekFields)->ComputedDayOfField:::Returns a field to access the week of week-based-year,  computed based on a WeekFields.
java.time.temporal.WeekFields.ComputedDayOfField#ofWeekBasedYearField(WeekFields)->ComputedDayOfField:::Returns a field to access the week of week-based-year,  computed based on a WeekFields.
java.time.temporal.WeekFields.ComputedDayOfField#getFrom(TemporalAccessor)->long:::
java.time.temporal.WeekFields.ComputedDayOfField#adjustInto(R, long)->R:::
java.time.temporal.WeekFields.ComputedDayOfField#resolve(Map<TemporalField, Long>, TemporalAccessor, ResolverStyle)->ChronoLocalDate:::
java.time.temporal.WeekFields.ComputedDayOfField#getDisplayName(Locale)->String:::
java.time.temporal.WeekFields.ComputedDayOfField#getBaseUnit()->TemporalUnit:::
java.time.temporal.WeekFields.ComputedDayOfField#getRangeUnit()->TemporalUnit:::
java.time.temporal.WeekFields.ComputedDayOfField#isDateBased()->boolean:::
java.time.temporal.WeekFields.ComputedDayOfField#isTimeBased()->boolean:::
java.time.temporal.WeekFields.ComputedDayOfField#range()->ValueRange:::
java.time.temporal.WeekFields.ComputedDayOfField#isSupportedBy(TemporalAccessor)->boolean:::
java.time.temporal.WeekFields.ComputedDayOfField#rangeRefinedBy(TemporalAccessor)->ValueRange:::
java.time.temporal.WeekFields.ComputedDayOfField#toString()->String:::
