com.sun.jdi.Accessible#modifiers()->int:::Returns the Java&trade; programming language modifiers, encoded in an integer
com.sun.jdi.Accessible#isPrivate()->boolean:::Determines if this object mirrors a private item
com.sun.jdi.Accessible#isPackagePrivate()->boolean:::Determines if this object mirrors a package private item
com.sun.jdi.Accessible#isProtected()->boolean:::Determines if this object mirrors a protected item
com.sun.jdi.Accessible#isPublic()->boolean:::Determines if this object mirrors a public item
com.sun.jdi.ArrayReference#length()->int:::Returns the number of components in this array.
com.sun.jdi.ArrayReference#getValue(int)->Value:::Returns an array component value.
com.sun.jdi.ArrayReference#getValues()->List:::Returns all of the components in this array.
com.sun.jdi.ArrayReference#getValues(int, int)->List:::Returns a range of array components.
com.sun.jdi.ArrayReference#setValue(int, Value)->void:::Replaces an array component with another value
com.sun.jdi.ArrayReference#setValues(List)->void:::Replaces all array components with other values
com.sun.jdi.ArrayReference#setValues(int, List, int, int)->void:::Replaces a range of array components with other values
com.sun.jdi.ArrayType#newInstance(int)->ArrayReference:::Creates a new instance of this array class in the target VM
com.sun.jdi.ArrayType#componentSignature()->String:::Gets the JNI signature of the components of this array class
com.sun.jdi.ArrayType#componentTypeName()->String:::Returns a text representation of the component type of this array.
com.sun.jdi.ArrayType#componentType()->Type:::Returns the component type of this array, as specified in the array declaration
com.sun.jdi.BooleanValue#value()->boolean:::Returns this BooleanValue as a boolean.
com.sun.jdi.BooleanValue#equals(Object)->boolean:::Compares the specified Object with this BooleanValue for equality.
com.sun.jdi.BooleanValue#hashCode()->int:::Returns the hash code value for this BooleanValue.
com.sun.jdi.Bootstrap#virtualMachineManager()->VirtualMachineManager:::Returns the virtual machine manager
com.sun.jdi.ByteValue#value()->byte:::Returns this ByteValue as a byte.
com.sun.jdi.ByteValue#equals(Object)->boolean:::Compares the specified Object with this ByteValue for equality.
com.sun.jdi.ByteValue#hashCode()->int:::Returns the hash code value for this BooleanValue.
com.sun.jdi.CharValue#value()->char:::Returns this CharValue as a char.
com.sun.jdi.CharValue#equals(Object)->boolean:::Compares the specified Object with this CharValue for equality.
com.sun.jdi.CharValue#hashCode()->int:::Returns the hash code value for this CharValue.
com.sun.jdi.ClassLoaderReference#definedClasses()->List:::Returns a list of all loaded classes that were defined by this class loader
com.sun.jdi.ClassLoaderReference#visibleClasses()->List:::Returns a list of all classes for which this class loader has been recorded as the initiating loader in the target VM
com.sun.jdi.ClassNotLoadedException#className()->String::: class not loaded exception class name
com.sun.jdi.ClassObjectReference#reflectedType()->ReferenceType:::Returns the ReferenceType corresponding to this class object
com.sun.jdi.ClassType#superclass()->ClassType:::Gets the superclass of this class.
com.sun.jdi.ClassType#interfaces()->List:::Gets the interfaces directly implemented by this class
com.sun.jdi.ClassType#allInterfaces()->List:::Gets the interfaces directly and indirectly implemented by this class
com.sun.jdi.ClassType#subclasses()->List:::Gets the currently loaded, direct subclasses of this class
com.sun.jdi.ClassType#isEnum()->boolean:::Determine if this class was declared as an enum.
com.sun.jdi.ClassType#setValue(Field, Value)->void:::Assigns a value to a static field
com.sun.jdi.ClassType#invokeMethod(ThreadReference, Method, List, int)->Value:::Invokes the specified static Method in the target VM
com.sun.jdi.ClassType#newInstance(ThreadReference, Method, List, int)->ObjectReference:::Constructs a new instance of this type, using the given constructor Method in the target VM
com.sun.jdi.ClassType#concreteMethodByName(String, String)->Method:::Returns a the single non-abstract Method visible from this class that has the given name and signature
com.sun.jdi.DoubleValue#value()->double:::Returns this DoubleValue as a double.
com.sun.jdi.DoubleValue#equals(Object)->boolean:::Compares the specified Object with this DoubleValue for equality.
com.sun.jdi.DoubleValue#hashCode()->int:::Returns the hash code value for this DoubleValue.
com.sun.jdi.Field#typeName()->String:::Returns a text representation of the type of this field
com.sun.jdi.Field#type()->Type:::Returns the type of this field
com.sun.jdi.Field#isTransient()->boolean:::Determine if this is a transient field.
com.sun.jdi.Field#isVolatile()->boolean:::Determine if this is a volatile field.
com.sun.jdi.Field#isEnumConstant()->boolean:::Determine if this is a field that represents an enum constant.
com.sun.jdi.Field#equals(Object)->boolean:::Compares the specified Object with this field for equality.
com.sun.jdi.Field#hashCode()->int:::Returns the hash code value for this Field.
com.sun.jdi.FloatValue#value()->float:::Returns this FloatValue as a float.
com.sun.jdi.FloatValue#equals(Object)->boolean:::Compares the specified Object with this FloatValue for equality.
com.sun.jdi.FloatValue#hashCode()->int:::Returns the hash code value for this FloatValue.
com.sun.jdi.IntegerValue#value()->int:::Returns this IntegerValue as an int.
com.sun.jdi.IntegerValue#equals(Object)->boolean:::Compares the specified Object with this IntegerValue for equality.
com.sun.jdi.IntegerValue#hashCode()->int:::Returns the hash code value for this IntegerValue.
com.sun.jdi.InterfaceType#superinterfaces()->List:::Gets the interfaces directly extended by this interface
com.sun.jdi.InterfaceType#subinterfaces()->List:::Gets the currently prepared interfaces which directly extend this interface
com.sun.jdi.InterfaceType#implementors()->List:::Gets the currently prepared classes which directly implement this interface
com.sun.jdi.InterfaceType#invokeMethod(ThreadReference, Method, List, int)->Value:::Invokes the specified static Method in the target VM
com.sun.jdi.InternalException#errorCode()->int::: internal exception error code
com.sun.jdi.InvocationException#exception()->ObjectReference::: invocation exception exception
com.sun.jdi.LocalVariable#name()->String:::Gets the name of the local variable.
com.sun.jdi.LocalVariable#typeName()->String:::Returns a text representation of the type of this variable
com.sun.jdi.LocalVariable#type()->Type:::Returns the type of this variable
com.sun.jdi.LocalVariable#signature()->String:::Gets the JNI signature of the local variable.
com.sun.jdi.LocalVariable#genericSignature()->String:::Gets the generic signature for this variable if there is one
com.sun.jdi.LocalVariable#isVisible(StackFrame)->boolean:::Determines whether this variable can be accessed from the given StackFrame
com.sun.jdi.LocalVariable#isArgument()->boolean:::Determines if this variable is an argument to its method.
com.sun.jdi.LocalVariable#equals(Object)->boolean:::Compares the specified Object with this LocalVariable for equality.
com.sun.jdi.LocalVariable#hashCode()->int:::Returns the hash code value for this LocalVariable.
com.sun.jdi.Locatable#location()->Location:::Returns the Location of this mirror, if there is executable code associated with it
com.sun.jdi.Location#declaringType()->ReferenceType:::Gets the type to which this Location belongs
com.sun.jdi.Location#method()->Method:::Gets the method containing this Location.
com.sun.jdi.Location#codeIndex()->long:::Gets the code position within this location's method.
com.sun.jdi.Location#sourceName()->String:::Gets an identifing name for the source corresponding to this location
com.sun.jdi.Location#sourceName(String)->String:::Gets an identifing name for the source corresponding to this location
com.sun.jdi.Location#sourcePath()->String:::Gets the path to the source corresponding to this location
com.sun.jdi.Location#sourcePath(String)->String:::Gets the path to the source corresponding to this location
com.sun.jdi.Location#lineNumber()->int:::Gets the line number of this Location
com.sun.jdi.Location#lineNumber(String)->int:::The line number of this Location
com.sun.jdi.Location#equals(Object)->boolean:::Compares the specified Object with this Location for equality.
com.sun.jdi.Location#hashCode()->int:::Returns the hash code value for this Location.
com.sun.jdi.LongValue#value()->long:::Returns this LongValue as a long.
com.sun.jdi.LongValue#equals(Object)->boolean:::Compares the specified Object with this LongValue for equality.
com.sun.jdi.LongValue#hashCode()->int:::Returns the hash code value for this LongValue.
com.sun.jdi.Method#returnTypeName()->String:::Returns a text representation of the return type, as specified in the declaration of this method
com.sun.jdi.Method#returnType()->Type:::Returns the return type, as specified in the declaration of this method
com.sun.jdi.Method#argumentTypeNames()->List:::Returns a list containing a text representation of the type of each formal parameter of this method
com.sun.jdi.Method#argumentTypes()->List:::Returns a list containing the type of each formal parameter of this method
com.sun.jdi.Method#isAbstract()->boolean:::Determine if this method is abstract.
com.sun.jdi.Method#isDefault()->boolean:::Determine if this method is a default method
com.sun.jdi.Method#isSynchronized()->boolean:::Determine if this method is synchronized.
com.sun.jdi.Method#isNative()->boolean:::Determine if this method is native.
com.sun.jdi.Method#isVarArgs()->boolean:::Determine if this method accepts a variable number of arguments.
com.sun.jdi.Method#isBridge()->boolean:::Determine if this method is a bridge method
com.sun.jdi.Method#isConstructor()->boolean:::Determine if this method is a constructor.
com.sun.jdi.Method#isStaticInitializer()->boolean:::Determine if this method is a static initializer.
com.sun.jdi.Method#isObsolete()->boolean:::Determine if this method is obsolete.
com.sun.jdi.Method#allLineLocations()->List:::Returns a list containing a Location object for each executable source line in this method
com.sun.jdi.Method#allLineLocations(String, String)->List:::Returns a list containing a Location object for each executable source line in this method
com.sun.jdi.Method#locationsOfLine(int)->List:::Returns a List containing all Location objects that map to the given line number
com.sun.jdi.Method#locationsOfLine(String, String, int)->List:::Returns a List containing all Location objects that map to the given line number and source name
com.sun.jdi.Method#locationOfCodeIndex(long)->Location:::Returns a Location for the given code index.
com.sun.jdi.Method#variables()->List:::Returns a list containing each LocalVariable declared in this method
com.sun.jdi.Method#variablesByName(String)->List:::Returns a list containing each LocalVariable of a given name in this method
com.sun.jdi.Method#arguments()->List:::Returns a list containing each LocalVariable that is declared as an argument of this method
com.sun.jdi.Method#bytecodes()->byte[]:::Returns an array containing the bytecodes for this method
com.sun.jdi.Method#location()->Location:::Returns the Location of this method, if there is executable code associated with it.
com.sun.jdi.Method#equals(Object)->boolean:::Compares the specified Object with this method for equality.
com.sun.jdi.Method#hashCode()->int:::Returns the hash code value for this Method.
com.sun.jdi.Mirror#virtualMachine()->VirtualMachine:::Gets the VirtualMachine to which this Mirror belongs
com.sun.jdi.Mirror#toString()->String:::Returns a String describing this mirror
com.sun.jdi.ModuleReference#name()->String:::Returns the module name
com.sun.jdi.ModuleReference#classLoader()->ClassLoaderReference:::Returns the ClassLoaderReference object for this module.
com.sun.jdi.MonitorInfo#monitor()->ObjectReference:::Returns the ObjectReference object for the monitor.
com.sun.jdi.MonitorInfo#stackDepth()->int:::Returns the stack depth at which this monitor was acquired by the owning thread
com.sun.jdi.MonitorInfo#thread()->ThreadReference:::Returns a ThreadReference object for the thread that owns the monitor.
com.sun.jdi.ObjectReference#referenceType()->ReferenceType:::Gets the ReferenceType that mirrors the type of this object
com.sun.jdi.ObjectReference#getValue(Field)->Value:::Gets the value of a given instance or static field in this object
com.sun.jdi.ObjectReference#getValues(List)->Map:::Gets the value of multiple instance and/or static fields in this object
com.sun.jdi.ObjectReference#setValue(Field, Value)->void:::Sets the value of a given instance or static field in this object
com.sun.jdi.ObjectReference#invokeMethod(ThreadReference, Method, List, int)->Value:::Invokes the specified Method on this object in the target VM
com.sun.jdi.ObjectReference#disableCollection()->void:::Prevents garbage collection for this object
com.sun.jdi.ObjectReference#enableCollection()->void:::Permits garbage collection for this object
com.sun.jdi.ObjectReference#isCollected()->boolean:::Determines if this object has been garbage collected in the target VM.
com.sun.jdi.ObjectReference#uniqueID()->long:::Returns a unique identifier for this ObjectReference
com.sun.jdi.ObjectReference#waitingThreads()->List:::Returns a List containing a ThreadReference for each thread currently waiting for this object's monitor
com.sun.jdi.ObjectReference#owningThread()->ThreadReference:::Returns an ThreadReference for the thread, if any, which currently owns this object's monitor
com.sun.jdi.ObjectReference#entryCount()->int:::Returns the number times this object's monitor has been entered by the current owning thread
com.sun.jdi.ObjectReference#referringObjects(long)->List:::Returns objects that directly reference this object
com.sun.jdi.ObjectReference#equals(Object)->boolean:::Compares the specified Object with this ObjectReference for equality.
com.sun.jdi.ObjectReference#hashCode()->int:::Returns the hash code value for this ObjectReference.
com.sun.jdi.PathSearchingVirtualMachine#classPath()->List:::Get the class path for this virtual machine.
com.sun.jdi.PathSearchingVirtualMachine#bootClassPath()->List:::Get the boot class path for this virtual machine.
com.sun.jdi.PathSearchingVirtualMachine#baseDirectory()->String:::Get the base directory used for path searching
com.sun.jdi.PrimitiveValue#booleanValue()->boolean:::Converts this value to a BooleanValue and returns the result as a boolean.
com.sun.jdi.PrimitiveValue#byteValue()->byte:::Converts this value to a ByteValue and returns the result as a byte
com.sun.jdi.PrimitiveValue#charValue()->char:::Converts this value to a CharValue and returns the result as a char
com.sun.jdi.PrimitiveValue#shortValue()->short:::Converts this value to a ShortValue and returns the result as a short
com.sun.jdi.PrimitiveValue#intValue()->int:::Converts this value to an IntegerValue and returns the result as an int
com.sun.jdi.PrimitiveValue#longValue()->long:::Converts this value to a LongValue and returns the result as a long
com.sun.jdi.PrimitiveValue#floatValue()->float:::Converts this value to a FloatValue and returns the result as a float
com.sun.jdi.PrimitiveValue#doubleValue()->double:::Converts this value to a DoubleValue and returns the result as a double
com.sun.jdi.ReferenceType#name()->String:::Gets the fully qualified name of this type
com.sun.jdi.ReferenceType#genericSignature()->String:::Gets the generic signature for this type if there is one
com.sun.jdi.ReferenceType#classLoader()->ClassLoaderReference:::Gets the classloader object which loaded the class corresponding to this type.
com.sun.jdi.ReferenceType#module()->ModuleReference:::Gets the module object which contains the class corresponding to this type
com.sun.jdi.ReferenceType#sourceName()->String:::Gets an identifying name for the source corresponding to the declaration of this type
com.sun.jdi.ReferenceType#sourceNames(String)->List:::Gets the identifying names for all the source corresponding to the declaration of this type
com.sun.jdi.ReferenceType#sourcePaths(String)->List:::Gets the paths to the source corresponding to the declaration of this type
com.sun.jdi.ReferenceType#sourceDebugExtension()->String:::Get the source debug extension of this type
com.sun.jdi.ReferenceType#isStatic()->boolean:::Determines if this type was declared static
com.sun.jdi.ReferenceType#isAbstract()->boolean:::Determines if this type was declared abstract
com.sun.jdi.ReferenceType#isFinal()->boolean:::Determines if this type was declared final
com.sun.jdi.ReferenceType#isPrepared()->boolean:::Determines if this type has been prepared
com.sun.jdi.ReferenceType#isVerified()->boolean:::Determines if this type has been verified
com.sun.jdi.ReferenceType#isInitialized()->boolean:::Determines if this type has been initialized
com.sun.jdi.ReferenceType#failedToInitialize()->boolean:::Determines if initialization failed for this class
com.sun.jdi.ReferenceType#fields()->List:::Returns a list containing each Field declared in this type
com.sun.jdi.ReferenceType#visibleFields()->List:::Returns a list containing each unhidden and unambiguous Field in this type
com.sun.jdi.ReferenceType#allFields()->List:::Returns a list containing each Field declared in this type, and its superclasses, implemented interfaces, and/or superinterfaces
com.sun.jdi.ReferenceType#fieldByName(String)->Field:::Finds the visible Field with the given non-ambiguous name
com.sun.jdi.ReferenceType#methods()->List:::Returns a list containing each Method declared directly in this type
com.sun.jdi.ReferenceType#visibleMethods()->List:::Returns a list containing each Method declared or inherited by this type
com.sun.jdi.ReferenceType#allMethods()->List:::Returns a list containing each Method declared in this type, and its superclasses, implemented interfaces, and/or superinterfaces
com.sun.jdi.ReferenceType#methodsByName(String)->List:::Returns a List containing each visible Method that has the given name
com.sun.jdi.ReferenceType#methodsByName(String, String)->List:::Returns a List containing each visible Method that has the given name and signature
com.sun.jdi.ReferenceType#nestedTypes()->List:::Returns a List containing ReferenceType objects that are declared within this type and are currently loaded into the Virtual Machine
com.sun.jdi.ReferenceType#getValue(Field)->Value:::Gets the Value of a given static Field in this type
com.sun.jdi.ReferenceType#getValues(List)->Map:::Returns a map containing the Value of each static Field in the given list
com.sun.jdi.ReferenceType#classObject()->ClassObjectReference:::Returns the class object that corresponds to this type in the target VM
com.sun.jdi.ReferenceType#allLineLocations()->List:::Returns a list containing a Location object for each executable source line in this reference type
com.sun.jdi.ReferenceType#allLineLocations(String, String)->List:::Returns a list containing a Location object for each executable source line in this reference type
com.sun.jdi.ReferenceType#locationsOfLine(int)->List:::Returns a List containing all Location objects that map to the given line number
com.sun.jdi.ReferenceType#locationsOfLine(String, String, int)->List:::Returns a List containing all Location objects that map to the given line number
com.sun.jdi.ReferenceType#availableStrata()->List:::Return the available strata for this reference type
com.sun.jdi.ReferenceType#defaultStratum()->String:::Returns the default stratum for this reference type
com.sun.jdi.ReferenceType#instances(long)->List:::Returns instances of this ReferenceType
com.sun.jdi.ReferenceType#equals(Object)->boolean:::Compares the specified Object with this ReferenceType for equality.
com.sun.jdi.ReferenceType#hashCode()->int:::Returns the hash code value for this ObjectReference.
com.sun.jdi.ReferenceType#majorVersion()->int:::Returns the class major version number, as defined in the class file format of the Java Virtual Machine Specification
com.sun.jdi.ReferenceType#minorVersion()->int:::Returns the class minor version number, as defined in the class file format of the Java Virtual Machine Specification
com.sun.jdi.ReferenceType#constantPoolCount()->int:::Returns the number of entries in the constant pool plus one
com.sun.jdi.ReferenceType#constantPool()->byte[]:::Returns the raw bytes of the constant pool in the format of the constant_pool item of the Class File Format in the Java Virtual Machine Specification
com.sun.jdi.ShortValue#value()->short:::Returns this ShortValue as a short.
com.sun.jdi.ShortValue#equals(Object)->boolean:::Compares the specified Object with this ShortValue for equality.
com.sun.jdi.ShortValue#hashCode()->int:::Returns the hash code value for this ShortValue.
com.sun.jdi.StackFrame#location()->Location:::Returns the Location of the current instruction in the frame
com.sun.jdi.StackFrame#thread()->ThreadReference:::Returns the thread under which this frame's method is running.
com.sun.jdi.StackFrame#thisObject()->ObjectReference:::Returns the value of 'this' for the current frame
com.sun.jdi.StackFrame#visibleVariables()->List:::Returns a list containing each LocalVariable that can be accessed from this frame's location
com.sun.jdi.StackFrame#visibleVariableByName(String)->LocalVariable:::Finds a LocalVariable that matches the given name and is visible at the current frame location
com.sun.jdi.StackFrame#getValue(LocalVariable)->Value:::Gets the Value of a LocalVariable in this frame
com.sun.jdi.StackFrame#getValues(List)->Map:::Returns the values of multiple local variables in this frame
com.sun.jdi.StackFrame#setValue(LocalVariable, Value)->void:::Sets the Value of a LocalVariable in this frame
com.sun.jdi.StackFrame#getArgumentValues()->List:::Returns the values of all arguments in this frame
com.sun.jdi.StringReference#value()->String:::Returns the StringReference as a String
com.sun.jdi.ThreadGroupReference#name()->String:::Returns the name of this thread group.
com.sun.jdi.ThreadGroupReference#parent()->ThreadGroupReference:::Returns the parent of this thread group.
com.sun.jdi.ThreadGroupReference#suspend()->void:::Suspends all threads in this thread group
com.sun.jdi.ThreadGroupReference#resume()->void:::Resumes all threads in this thread group
com.sun.jdi.ThreadGroupReference#threads()->List:::Returns a List containing a ThreadReference for each live thread in this thread group
com.sun.jdi.ThreadGroupReference#threadGroups()->List:::Returns a List containing each active ThreadGroupReference in this thread group
com.sun.jdi.ThreadReference#name()->String:::Returns the name of this thread.
com.sun.jdi.ThreadReference#suspend()->void:::Suspends this thread
com.sun.jdi.ThreadReference#resume()->void:::Resumes this thread
com.sun.jdi.ThreadReference#suspendCount()->int:::Returns the number of pending suspends for this thread
com.sun.jdi.ThreadReference#stop(ObjectReference)->void:::Stops this thread with an asynchronous exception
com.sun.jdi.ThreadReference#interrupt()->void:::Interrupts this thread unless the thread has been suspended by the debugger.
com.sun.jdi.ThreadReference#status()->int:::Returns the thread's status
com.sun.jdi.ThreadReference#isSuspended()->boolean:::Determines whether the thread has been suspended by the the debugger.
com.sun.jdi.ThreadReference#isAtBreakpoint()->boolean:::Determines whether the thread is suspended at a breakpoint.
com.sun.jdi.ThreadReference#threadGroup()->ThreadGroupReference:::Returns this thread's thread group.
com.sun.jdi.ThreadReference#frameCount()->int:::Returns the number of stack frames in the thread's current call stack
com.sun.jdi.ThreadReference#frames()->List:::Returns a List containing each StackFrame in the thread's current call stack
com.sun.jdi.ThreadReference#frame(int)->StackFrame:::Returns the StackFrame at the given index in the thread's current call stack
com.sun.jdi.ThreadReference#frames(int, int)->List:::Returns a List containing a range of StackFrame mirrors from the thread's current call stack
com.sun.jdi.ThreadReference#ownedMonitors()->List:::Returns a List containing an ObjectReference for each monitor owned by the thread
com.sun.jdi.ThreadReference#ownedMonitorsAndFrames()->List:::Returns a List containing a MonitorInfo object for each monitor owned by the thread
com.sun.jdi.ThreadReference#currentContendedMonitor()->ObjectReference:::Returns an ObjectReference for the monitor, if any, for which this thread is currently waiting
com.sun.jdi.ThreadReference#popFrames(StackFrame)->void:::Pop stack frames
com.sun.jdi.ThreadReference#forceEarlyReturn(Value)->void:::Force a method to return before it reaches a return statement
com.sun.jdi.Type#signature()->String:::Returns the JNI-style signature for this type
com.sun.jdi.Type#name()->String::: type name
com.sun.jdi.TypeComponent#name()->String:::Gets the name of this type component
com.sun.jdi.TypeComponent#signature()->String:::Gets the JNI-style signature for this type component
com.sun.jdi.TypeComponent#genericSignature()->String:::Gets the generic signature for this TypeComponent if there is one
com.sun.jdi.TypeComponent#declaringType()->ReferenceType:::Returns the type in which this component was declared
com.sun.jdi.TypeComponent#isStatic()->boolean:::Determines if this TypeComponent is static
com.sun.jdi.TypeComponent#isFinal()->boolean:::Determines if this TypeComponent is final
com.sun.jdi.TypeComponent#isSynthetic()->boolean:::Determines if this TypeComponent is synthetic
com.sun.jdi.Value#type()->Type:::Returns the run-time type of this value.
com.sun.jdi.VirtualMachine#allModules()->List:::Returns all modules
com.sun.jdi.VirtualMachine#classesByName(String)->List:::Returns the loaded reference types that match a given name
com.sun.jdi.VirtualMachine#allClasses()->List:::Returns all loaded types
com.sun.jdi.VirtualMachine#redefineClasses(Map)->void:::All classes given are redefined according to the definitions supplied
com.sun.jdi.VirtualMachine#allThreads()->List:::Returns a list of the currently running threads
com.sun.jdi.VirtualMachine#suspend()->void:::Suspends the execution of the application running in this virtual machine
com.sun.jdi.VirtualMachine#resume()->void:::Continues the execution of the application running in this virtual machine
com.sun.jdi.VirtualMachine#topLevelThreadGroups()->List:::Returns each thread group which does not have a parent
com.sun.jdi.VirtualMachine#eventQueue()->EventQueue:::Returns the event queue for this virtual machine
com.sun.jdi.VirtualMachine#eventRequestManager()->EventRequestManager:::Returns the event request manager for this virtual machine
com.sun.jdi.VirtualMachine#mirrorOf(boolean)->BooleanValue:::Creates a BooleanValue for the given value
com.sun.jdi.VirtualMachine#mirrorOf(byte)->ByteValue:::Creates a ByteValue for the given value
com.sun.jdi.VirtualMachine#mirrorOf(char)->CharValue:::Creates a CharValue for the given value
com.sun.jdi.VirtualMachine#mirrorOf(short)->ShortValue:::Creates a ShortValue for the given value
com.sun.jdi.VirtualMachine#mirrorOf(int)->IntegerValue:::Creates an IntegerValue for the given value
com.sun.jdi.VirtualMachine#mirrorOf(long)->LongValue:::Creates a LongValue for the given value
com.sun.jdi.VirtualMachine#mirrorOf(float)->FloatValue:::Creates a FloatValue for the given value
com.sun.jdi.VirtualMachine#mirrorOf(double)->DoubleValue:::Creates a DoubleValue for the given value
com.sun.jdi.VirtualMachine#mirrorOf(String)->StringReference:::Creates a string in this virtual machine
com.sun.jdi.VirtualMachine#mirrorOfVoid()->VoidValue:::Creates a VoidValue
com.sun.jdi.VirtualMachine#process()->Process:::Returns the java.lang.Process object for this virtual machine if launched by a LaunchingConnector
com.sun.jdi.VirtualMachine#dispose()->void:::Invalidates this virtual machine mirror
com.sun.jdi.VirtualMachine#exit(int)->void:::Causes the mirrored VM to terminate with the given error code
com.sun.jdi.VirtualMachine#canWatchFieldModification()->boolean:::Determines if the target VM supports watchpoints for field modification.
com.sun.jdi.VirtualMachine#canWatchFieldAccess()->boolean:::Determines if the target VM supports watchpoints for field access.
com.sun.jdi.VirtualMachine#canGetBytecodes()->boolean:::Determines if the target VM supports the retrieval of a method's bytecodes.
com.sun.jdi.VirtualMachine#canGetSyntheticAttribute()->boolean:::Determines if the target VM supports the query of the synthetic attribute of a method or field.
com.sun.jdi.VirtualMachine#canGetOwnedMonitorInfo()->boolean:::Determines if the target VM supports the retrieval of the monitors owned by a thread.
com.sun.jdi.VirtualMachine#canGetCurrentContendedMonitor()->boolean:::Determines if the target VM supports the retrieval of the monitor for which a thread is currently waiting.
com.sun.jdi.VirtualMachine#canGetMonitorInfo()->boolean:::Determines if the target VM supports the retrieval of the monitor information for an object.
com.sun.jdi.VirtualMachine#canUseInstanceFilters()->boolean:::Determines if the target VM supports filtering events by specific instance object
com.sun.jdi.VirtualMachine#canRedefineClasses()->boolean:::Determines if the target VM supports any level of class redefinition.
com.sun.jdi.VirtualMachine#canAddMethod()->boolean:::Determines if the target VM supports the addition of methods when performing class redefinition.
com.sun.jdi.VirtualMachine#canUnrestrictedlyRedefineClasses()->boolean:::Determines if the target VM supports changes when performing class redefinition that are otherwise restricted by #redefineClasses.
com.sun.jdi.VirtualMachine#canPopFrames()->boolean:::Determines if the target VM supports popping frames of a threads stack.
com.sun.jdi.VirtualMachine#canGetSourceDebugExtension()->boolean:::Determines if the target VM supports getting the source debug extension.
com.sun.jdi.VirtualMachine#canRequestVMDeathEvent()->boolean:::Determines if the target VM supports the creation of VMDeathRequests.
com.sun.jdi.VirtualMachine#canGetMethodReturnValues()->boolean:::Determines if the target VM supports the inclusion of return values in MethodExitEvents.
com.sun.jdi.VirtualMachine#canGetInstanceInfo()->boolean:::Determines if the target VM supports the accessing of class instances, instance counts, and referring objects.
com.sun.jdi.VirtualMachine#canUseSourceNameFilters()->boolean:::Determines if the target VM supports the filtering of class prepare events by source name
com.sun.jdi.VirtualMachine#canForceEarlyReturn()->boolean:::Determines if the target VM supports the forcing of a method to return early.
com.sun.jdi.VirtualMachine#canBeModified()->boolean::: virtual machine can be modified
com.sun.jdi.VirtualMachine#canRequestMonitorEvents()->boolean::: virtual machine can request monitor events
com.sun.jdi.VirtualMachine#canGetMonitorFrameInfo()->boolean::: virtual machine can get monitor frame info
com.sun.jdi.VirtualMachine#canGetClassFileVersion()->boolean:::Determines if the target VM supports reading class file major and minor versions.
com.sun.jdi.VirtualMachine#canGetConstantPool()->boolean:::Determines if the target VM supports getting constant pool information of a class.
com.sun.jdi.VirtualMachine#canGetModuleInfo()->boolean:::Determines if the target VM supports getting information about modules.
com.sun.jdi.VirtualMachine#setDefaultStratum(String)->void:::Set this VM's default stratum (see Location for a discussion of strata)
com.sun.jdi.VirtualMachine#getDefaultStratum()->String:::Return this VM's default stratum.
com.sun.jdi.VirtualMachine#instanceCounts(List)->long[]:::Returns the number of instances of each ReferenceType in the 'refTypes' list
com.sun.jdi.VirtualMachine#description()->String:::Returns text information on the target VM and the debugger support that mirrors it
com.sun.jdi.VirtualMachine#version()->String:::Returns the version of the Java Runtime Environment in the target VM as reported by the property java.version
com.sun.jdi.VirtualMachine#name()->String:::Returns the name of the target VM as reported by the property java.vm.name.
com.sun.jdi.VirtualMachine#setDebugTraceMode(int)->void:::Traces the activities performed by the com.sun.jdi implementation
com.sun.jdi.VirtualMachineManager#defaultConnector()->LaunchingConnector:::Identifies the default connector
com.sun.jdi.VirtualMachineManager#launchingConnectors()->List:::Returns the list of known LaunchingConnector objects
com.sun.jdi.VirtualMachineManager#attachingConnectors()->List:::Returns the list of known AttachingConnector objects
com.sun.jdi.VirtualMachineManager#listeningConnectors()->List:::Returns the list of known ListeningConnector objects
com.sun.jdi.VirtualMachineManager#allConnectors()->List:::Returns the list of all known Connector objects.
com.sun.jdi.VirtualMachineManager#connectedVirtualMachines()->List:::Lists all target VMs which are connected to the debugger
com.sun.jdi.VirtualMachineManager#majorInterfaceVersion()->int:::Returns the major version number of the JDI interface
com.sun.jdi.VirtualMachineManager#minorInterfaceVersion()->int:::Returns the minor version number of the JDI interface
com.sun.jdi.VirtualMachineManager#createVirtualMachine(Connection, Process)->VirtualMachine:::Create a virtual machine mirror for a target VM
com.sun.jdi.VirtualMachineManager#createVirtualMachine(Connection)->VirtualMachine:::Creates a new virtual machine
com.sun.jdi.VoidValue#equals(Object)->boolean:::Compares the specified Object with this VoidValue for equality.
com.sun.jdi.VoidValue#hashCode()->int:::Returns the hash code value for this VoidValue.
