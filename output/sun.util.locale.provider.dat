AuxLocaleProviderAdapter#getLocaleServiceProvider(Class):::Getter method for Locale Service Providers:::lsp->providersMap->get->if->findInstalledProvider->providersMap->putIfAbsent->return
AuxLocaleProviderAdapter#findInstalledProvider(Class):::Real body to find an implementation for each SPI.:::
AuxLocaleProviderAdapter#getCurrencyNameProvider():::Getter methods for java.util.spi.* providers:::return->getLocaleServiceProvider
AuxLocaleProviderAdapter#getCalendarProvider():::Getter methods for sun.util.spi.* providers:::return->getLocaleServiceProvider
AvailableLanguageTags#getAvailableLanguageTags():::Returns a set of available language tags of a LocaleServiceProvider:::
BreakIteratorProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
BreakIteratorProviderImpl#getWordInstance(Locale):::Returns a new BreakIterator instance for word breaks for the given locale.:::return->getBreakInstance
BreakIteratorProviderImpl#getLineInstance(Locale):::Returns a new BreakIterator instance for line breaks for the given locale.:::return->getBreakInstance
BreakIteratorProviderImpl#getCharacterInstance(Locale):::Returns a new BreakIterator instance for character breaks for the given locale.:::return->getBreakInstance
BreakIteratorProviderImpl#getSentenceInstance(Locale):::Returns a new BreakIterator instance for sentence breaks for the given locale.:::return->getBreakInstance
CalendarDataUtility#findRegionOverride(Locale):::Utility to look for a region override extension:::rg->l->getUnicodeLocaleType->override->if->rg->length->rg->toUpperCase->if->rg->charAt->rg->charAt->rg->charAt->rg->charAt->rg->substring->equals->new->Locale.Builder->setLocale->rg->substring->setRegion->build->return
CalendarProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
CalendarProviderImpl#getInstance(TimeZone, Locale):::Returns a new Calendar instance for the specified locale.:::return->new->Calendar.Builder->setLocale->setTimeZone->System->currentTimeMillis->setInstant->build
CollatorProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
CollatorProviderImpl#getInstance(Locale):::Returns a new Collator instance for the specified locale.:::if->throw->new->NullPointerException->result->colString->LocaleProviderAdapter->forType->getLocaleResources->getCollationData->try->new->RuleBasedCollator->catch->try->new->RuleBasedCollator->catch->throw->new->InternalError->finally->finally->result->setDecomposition->return->result->clone
CurrencyNameProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
CurrencyNameProviderImpl#getSymbol(String, Locale):::Gets the symbol of the given currency code for the specified locale:::return->currencyCode->toUpperCase->getString
CurrencyNameProviderImpl#getDisplayName(String, Locale):::Returns a name for the currency that is appropriate for display to the user:::return->currencyCode->toLowerCase->getString
DateFormatProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
DateFormatProviderImpl#getTimeInstance(int, Locale):::Returns a new DateFormat instance which formats time with the given formatting style for the specified locale.:::return->getInstance
DateFormatProviderImpl#getDateInstance(int, Locale):::Returns a new DateFormat instance which formats date with the given formatting style for the specified locale.:::return->getInstance
DateFormatProviderImpl#getDateTimeInstance(int, int, Locale):::Returns a new DateFormat instance which formats date and time with the given formatting style for the specified locale.:::return->getInstance
DateFormatSymbolsProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
DateFormatSymbolsProviderImpl#getInstance(Locale):::Returns a new DateFormatSymbols instance for the specified locale.:::if->throw->new->NullPointerException->return->new->DateFormatSymbols
DecimalFormatSymbolsProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
DecimalFormatSymbolsProviderImpl#getInstance(Locale):::Returns a new DecimalFormatSymbols instance for the specified locale.:::if->throw->new->NullPointerException->return->new->DecimalFormatSymbols
FallbackLocaleProviderAdapter#getAdapterType():::Returns the type of this LocaleProviderAdapter:::return
HostLocaleProviderAdapter#getAdapterType():::Returns the type of this LocaleProviderAdapter:::return
JavaTimeDateTimePatternImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
JRELocaleProviderAdapter#getAdapterType():::Returns the type of this LocaleProviderAdapter:::return
JRELocaleProviderAdapter#getLocaleServiceProvider(Class):::Getter method for Locale Service Providers:::switch->c->getSimpleName->return->getBreakIteratorProvider->return->getCollatorProvider->return->getDateFormatProvider->return->getDateFormatSymbolsProvider->return->getDecimalFormatSymbolsProvider->return->getNumberFormatProvider->return->getCurrencyNameProvider->return->getLocaleNameProvider->return->getTimeZoneNameProvider->return->getCalendarDataProvider->return->getCalendarNameProvider->return->getCalendarProvider->return->getJavaTimeDateTimePatternProvider->throw->new->InternalError
JRELocaleProviderAdapter#getCurrencyNameProvider():::Getter methods for java.util.spi.* providers:::if->provider->AccessController->getAdapterType->getLanguageTagSet->new->CurrencyNameProviderImpl->doPrivileged->synchronized->if->return
JRELocaleProviderAdapter#getCalendarProvider():::Getter methods for sun.util.spi.* providers:::if->provider->AccessController->getAdapterType->getLanguageTagSet->new->CalendarProviderImpl->doPrivileged->synchronized->if->return
JRELocaleProviderAdapter#getJavaTimeDateTimePatternProvider():::Getter methods for sun.text.spi.JavaTimeDateTimePatternProvider provider:::if->provider->AccessController->getAdapterType->getLanguageTagSet->new->JavaTimeDateTimePatternImpl->doPrivileged->synchronized->if->return
JRELocaleProviderAdapter#getAvailableLocales():::Returns a list of the installed locales:::return->clone
LocaleDataMetaInfo#getType():::Returns the type of LocaleProviderAdapter for which this LocaleData provides the data.:::
LocaleDataMetaInfo#availableLanguageTags(String):::Returns the string concatenation of the supported language tags in this LocaleData instance:::
LocaleDataMetaInfo#tzCanonicalIDs():::Returns a map for time zone ids to their canonical ids:::return
LocaleDataMetaInfo#getLanguageAliasMap():::Returns a map for  language aliases which specifies mapping from source language to from which it should be replaced.:::return
LocaleNameProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
LocaleNameProviderImpl#getDisplayLanguage(String, Locale):::Returns a localized name for the given ISO 639 language code and the given locale that is appropriate for display to the user:::return->getDisplayString
LocaleNameProviderImpl#getDisplayScript(String, Locale):::Returns a localized name for the given  IETF BCP47 script code and the given locale that is appropriate for display to the user:::return->getDisplayString
LocaleNameProviderImpl#getDisplayCountry(String, Locale):::Returns a localized name for the given ISO 3166 country code and the given locale that is appropriate for display to the user:::return->getDisplayString
LocaleNameProviderImpl#getDisplayVariant(String, Locale):::Returns a localized name for the given variant code and the given locale that is appropriate for display to the user:::return->getDisplayString
LocaleProviderAdapter#forType(Type):::Returns the singleton instance for each adapter type:::switch->adapter->cached->adapterInstances->get->if->try->tmp->Class->type->getAdapterClassName->forName->newInstance->adapterInstances->putIfAbsent->if->catch->LocaleServiceProviderPool->e->toString->config->adapterInstances->putIfAbsent->if->finally->else->if->return->throw->new->InternalError
LocaleProviderAdapter#getAdapterPreference():::Returns the preference order of LocaleProviderAdapter.Type:::return
LocaleProviderAdapter#getAdapter(Class, Locale):::Returns a LocaleProviderAdapter for the given locale service provider that best matches the given locale:::adapter->adapterMap->adapterCache->get->if->if->adapterMap->get->return->else->new->ConcurrentHashMap<>->adapterCache->putIfAbsent->findAdapter->if->adapterMap->putIfAbsent->return->lookupLocales->getControl->getCandidateLocales->foreach->if->loc->equals->continue->findAdapter->if->adapterMap->putIfAbsent->return->adapterMap->forType->putIfAbsent->return->forType
LocaleProviderAdapter#isSupportedProviderLocale(Locale, Set):::A utility method for implementing the default LocaleServiceProvider.isSupportedLocale for the JRE, CLDR, and FALLBACK adapters.:::type->getAdapterType->return
LocaleProviderAdapter#getAdapterType():::Returns the type of this LocaleProviderAdapter:::
LocaleProviderAdapter#getLocaleServiceProvider(Class):::Getter method for Locale Service Providers.:::
LocaleProviderAdapter#getBreakIteratorProvider():::Returns a BreakIteratorProvider for this LocaleProviderAdapter, or null if no BreakIteratorProvider is available.:::
LocaleProviderAdapter#getCollatorProvider():::Returns a ollatorProvider for this LocaleProviderAdapter, or null if no ollatorProvider is available.:::
LocaleProviderAdapter#getDateFormatProvider():::Returns a DateFormatProvider for this LocaleProviderAdapter, or null if no DateFormatProvider is available.:::
LocaleProviderAdapter#getDateFormatSymbolsProvider():::Returns a DateFormatSymbolsProvider for this LocaleProviderAdapter, or null if no DateFormatSymbolsProvider is available.:::
LocaleProviderAdapter#getDecimalFormatSymbolsProvider():::Returns a DecimalFormatSymbolsProvider for this LocaleProviderAdapter, or null if no DecimalFormatSymbolsProvider is available.:::
LocaleProviderAdapter#getNumberFormatProvider():::Returns a NumberFormatProvider for this LocaleProviderAdapter, or null if no NumberFormatProvider is available.:::
LocaleProviderAdapter#getCurrencyNameProvider():::Returns a CurrencyNameProvider for this LocaleProviderAdapter, or null if no CurrencyNameProvider is available.:::
LocaleProviderAdapter#getLocaleNameProvider():::Returns a LocaleNameProvider for this LocaleProviderAdapter, or null if no LocaleNameProvider is available.:::
LocaleProviderAdapter#getTimeZoneNameProvider():::Returns a TimeZoneNameProvider for this LocaleProviderAdapter, or null if no TimeZoneNameProvider is available.:::
LocaleProviderAdapter#getCalendarDataProvider():::Returns a CalendarDataProvider for this LocaleProviderAdapter, or null if no CalendarDataProvider is available.:::
LocaleProviderAdapter#getCalendarNameProvider():::Returns a CalendarNameProvider for this LocaleProviderAdapter, or null if no CalendarNameProvider is available.:::
LocaleProviderAdapter#getCalendarProvider():::Returns a CalendarProvider for this LocaleProviderAdapter, or null if no CalendarProvider is available.:::
LocaleProviderAdapter#getJavaTimeDateTimePatternProvider():::Returns a JavaTimeDateTimePatternProvider for this LocaleProviderAdapter, or null if no JavaTimeDateTimePatternProvider is available.:::
LocaleResources#getJavaTimeDateTimePattern(int, int, String):::Returns a date-time format pattern:::CalendarDataUtility->normalizeCalendarType->pattern->getDateTimePattern->if->getDateTimePattern->return
LocaleResources#getJavaTimeFormatData():::Returns the FormatData resource bundle of this LocaleResources:::rb->localeData->getDateFormatData->if->localeData->setSupplementary->return
LocaleServiceProviderPool#getPool(Class):::A factory method that returns a singleton instance:::pool->poolOfPools->get->if->newPool->new->LocaleServiceProviderPool->poolOfPools->putIfAbsent->if->return
LocaleServiceProviderPool#getAllAvailableLocales():::Returns an array of available locales for all the provider classes:::return->clone
LocaleServiceProviderPool#getAvailableLocales():::Returns an array of available locales:::locList->new->HashSet<>->locList->getAvailableLocaleSet->addAll->locList->Arrays->LocaleProviderAdapter->forJRE->getAvailableLocales->asList->addAll->tmp->locList->size->new->LocaleArr->locList->toArray->return
LocaleServiceProviderPool#getLocalizedObject(LocalizedObjectGetter, Locale, Object...):::Returns the provider's localized object for the specified locale.:::return->getLocalizedObjectImpl
LocaleServiceProviderPool#getLocalizedObject(LocalizedObjectGetter, Locale, String, Object...):::Returns the provider's localized name for the specified locale.:::return->getLocalizedObjectImpl
LocaleServiceProviderPool#getLocalizedObject(LocalizedObjectGetter, Locale, Boolean, String, Object...):::Returns the provider's localized name for the specified locale.:::return->getLocalizedObjectImpl
LocaleServiceProviderPool#getLookupLocales(Locale):::Returns a list of candidate locales for service look up.:::lookupLocales->Control->getNoFallbackControl->getCandidateLocales->return
LocaleServiceProviderPool#getLookupLocale(Locale):::Returns an instance of Locale used for service look up:::lookupLocale->if->locale->hasExtensions->locale->equals->locale->equals->locbld->new->Builder->try->locbld->setLocale->locbld->clearExtensions->locbld->build->catch->config->locale->getLanguage->locale->getCountry->locale->getVariant->new->Locale->finally->return
LocaleServiceProviderPool.LocalizedObjectGetter#getObject(P, Locale, String, Object...):::Returns an object from the provider:::
NumberFormatProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->forType->getAvailableLocales
NumberFormatProviderImpl#getCurrencyInstance(Locale):::Returns a new NumberFormat instance which formats monetary values for the specified locale.:::return->getInstance
NumberFormatProviderImpl#getIntegerInstance(Locale):::Returns a new NumberFormat instance which formats integer values for the specified locale:::return->getInstance
NumberFormatProviderImpl#getNumberInstance(Locale):::Returns a new general-purpose NumberFormat instance for the specified locale.:::return->getInstance
NumberFormatProviderImpl#getPercentInstance(Locale):::Returns a new NumberFormat instance which formats percentage values for the specified locale.:::return->getInstance
ResourceBundleBasedAdapter#getCandidateLocales(String, Locale):::candidate locales customization:::
SPILocaleProviderAdapter#getAdapterType():::Returns the type of this LocaleProviderAdapter:::return
TimeZoneNameProviderImpl#getAvailableLocales():::Returns an array of all locales for which this locale service provider can provide localized objects or names.:::return->LocaleProviderAdapter->toLocaleArray
TimeZoneNameProviderImpl#getDisplayName(String, boolean, int, Locale):::Returns a name for the given time zone ID that's suitable for presentation to the user in the specified locale:::names->getDisplayNameArray->if->Objects->nonNull->index->if->return->return
TimeZoneNameProviderImpl#getZoneStrings(Locale):::Returns a String[][] as the DateFormatSymbols.getZoneStrings() value for the given locale.:::return->LocaleProviderAdapter->forType->getLocaleResources->getZoneStrings
TimeZoneNameUtility#getZoneStrings(Locale):::get time zone localized strings:::zones->data->cachedZoneData->get->if->data->get->loadZoneStrings->new->SoftReference<>->cachedZoneData->put->return
TimeZoneNameUtility#retrieveDisplayNames(String, Locale):::Retrieve display names for a time zone ID.:::Objects->requireNonNull->Objects->requireNonNull->return->retrieveDisplayNamesImpl
TimeZoneNameUtility#retrieveGenericDisplayName(String, int, Locale):::Retrieves a generic time zone display name for a time zone ID.:::names->retrieveDisplayNamesImpl->if->Objects->nonNull->return->else->return
TimeZoneNameUtility#retrieveDisplayName(String, boolean, int, Locale):::Retrieves a standard or daylight-saving time name for the given time zone ID.:::names->retrieveDisplayNamesImpl->if->Objects->nonNull->return->else->return
TimeZoneNameUtility#convertLDMLShortID(String):::Converts the time zone id from LDML's 5-letter id to tzdb's id:::return->canonicalTZID
TimeZoneNameUtility#canonicalTZID(String):::Returns the canonical ID for the given ID:::return->LocaleProviderAdapter->forType->canonicalTZID
