sun.java2d.windows.GDIBlitLoops#register()->void:::Note that we do not register loops to 8-byte destinations
sun.java2d.windows.GDIBlitLoops#nativeBlit(SurfaceData, SurfaceData, Region, int, int, int, int, int, int, int, int, int, boolean)->void:::nativeBlit This native method is where all of the work happens in the accelerated Blit.
sun.java2d.windows.GDIBlitLoops#Blit(SurfaceData, SurfaceData, Composite, Region, int, int, int, int, int, int)->void:::Blit This method wraps the nativeBlit call, sending in additional info on whether the native method needs to get LUT info from the source image
sun.java2d.windows.GDIRenderer#doDrawLine(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: renderer do draw line
sun.java2d.windows.GDIRenderer#drawLine(SunGraphics2D, int, int, int, int)->void::: renderer draw line
sun.java2d.windows.GDIRenderer#doDrawRect(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: renderer do draw rect
sun.java2d.windows.GDIRenderer#drawRect(SunGraphics2D, int, int, int, int)->void::: renderer draw rect
sun.java2d.windows.GDIRenderer#doDrawRoundRect(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int, int, int)->void::: renderer do draw round rect
sun.java2d.windows.GDIRenderer#drawRoundRect(SunGraphics2D, int, int, int, int, int, int)->void::: renderer draw round rect
sun.java2d.windows.GDIRenderer#doDrawOval(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: renderer do draw oval
sun.java2d.windows.GDIRenderer#drawOval(SunGraphics2D, int, int, int, int)->void::: renderer draw oval
sun.java2d.windows.GDIRenderer#doDrawArc(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int, int, int)->void::: renderer do draw arc
sun.java2d.windows.GDIRenderer#drawArc(SunGraphics2D, int, int, int, int, int, int)->void::: renderer draw arc
sun.java2d.windows.GDIRenderer#doDrawPoly(GDIWindowSurfaceData, Region, Composite, int, int, int, int[], int[], int, boolean)->void::: renderer do draw poly
sun.java2d.windows.GDIRenderer#drawPolyline(SunGraphics2D, int[], int[], int)->void::: renderer draw polyline
sun.java2d.windows.GDIRenderer#drawPolygon(SunGraphics2D, int[], int[], int)->void::: renderer draw polygon
sun.java2d.windows.GDIRenderer#doFillRect(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: renderer do fill rect
sun.java2d.windows.GDIRenderer#fillRect(SunGraphics2D, int, int, int, int)->void::: renderer fill rect
sun.java2d.windows.GDIRenderer#doFillRoundRect(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int, int, int)->void::: renderer do fill round rect
sun.java2d.windows.GDIRenderer#fillRoundRect(SunGraphics2D, int, int, int, int, int, int)->void::: renderer fill round rect
sun.java2d.windows.GDIRenderer#doFillOval(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: renderer do fill oval
sun.java2d.windows.GDIRenderer#fillOval(SunGraphics2D, int, int, int, int)->void::: renderer fill oval
sun.java2d.windows.GDIRenderer#doFillArc(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int, int, int)->void::: renderer do fill arc
sun.java2d.windows.GDIRenderer#fillArc(SunGraphics2D, int, int, int, int, int, int)->void::: renderer fill arc
sun.java2d.windows.GDIRenderer#doFillPoly(GDIWindowSurfaceData, Region, Composite, int, int, int, int[], int[], int)->void::: renderer do fill poly
sun.java2d.windows.GDIRenderer#fillPolygon(SunGraphics2D, int[], int[], int)->void::: renderer fill polygon
sun.java2d.windows.GDIRenderer#doShape(GDIWindowSurfaceData, Region, Composite, int, int, int, Path2D.Float, boolean)->void::: renderer do shape
sun.java2d.windows.GDIRenderer#doShape(SunGraphics2D, Shape, boolean)->void::: renderer do shape
sun.java2d.windows.GDIRenderer#doFillSpans(SunGraphics2D, SpanIterator)->void::: renderer do fill spans
sun.java2d.windows.GDIRenderer#draw(SunGraphics2D, Shape)->void::: renderer draw
sun.java2d.windows.GDIRenderer#fill(SunGraphics2D, Shape)->void::: renderer fill
sun.java2d.windows.GDIRenderer#devCopyArea(GDIWindowSurfaceData, int, int, int, int, int, int)->void::: renderer dev copy area
sun.java2d.windows.GDIRenderer#traceWrap()->GDIRenderer::: renderer trace wrap
sun.java2d.windows.GDIRenderer.Tracer#doDrawLine(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: tracer do draw line
sun.java2d.windows.GDIRenderer.Tracer#doDrawRect(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: tracer do draw rect
sun.java2d.windows.GDIRenderer.Tracer#doDrawRoundRect(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int, int, int)->void::: tracer do draw round rect
sun.java2d.windows.GDIRenderer.Tracer#doDrawOval(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: tracer do draw oval
sun.java2d.windows.GDIRenderer.Tracer#doDrawArc(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int, int, int)->void::: tracer do draw arc
sun.java2d.windows.GDIRenderer.Tracer#doDrawPoly(GDIWindowSurfaceData, Region, Composite, int, int, int, int[], int[], int, boolean)->void::: tracer do draw poly
sun.java2d.windows.GDIRenderer.Tracer#doFillRect(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: tracer do fill rect
sun.java2d.windows.GDIRenderer.Tracer#doFillRoundRect(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int, int, int)->void::: tracer do fill round rect
sun.java2d.windows.GDIRenderer.Tracer#doFillOval(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int)->void::: tracer do fill oval
sun.java2d.windows.GDIRenderer.Tracer#doFillArc(GDIWindowSurfaceData, Region, Composite, int, int, int, int, int, int, int)->void::: tracer do fill arc
sun.java2d.windows.GDIRenderer.Tracer#doFillPoly(GDIWindowSurfaceData, Region, Composite, int, int, int, int[], int[], int)->void::: tracer do fill poly
sun.java2d.windows.GDIRenderer.Tracer#doShape(GDIWindowSurfaceData, Region, Composite, int, int, int, Path2D.Float, boolean)->void::: tracer do shape
sun.java2d.windows.GDIRenderer.Tracer#devCopyArea(GDIWindowSurfaceData, int, int, int, int, int, int)->void::: tracer dev copy area
sun.java2d.windows.GDIWindowSurfaceData#getSurfaceType(ColorModel)->SurfaceType::: window surface data get surface type
sun.java2d.windows.GDIWindowSurfaceData#createData(WComponentPeer)->GDIWindowSurfaceData::: window surface data create data
sun.java2d.windows.GDIWindowSurfaceData#makeProxyFor(SurfaceData)->SurfaceDataProxy::: window surface data make proxy for
sun.java2d.windows.GDIWindowSurfaceData#getRaster(int, int, int, int)->Raster::: window surface data get raster
sun.java2d.windows.GDIWindowSurfaceData#validatePipe(SunGraphics2D)->void::: window surface data validate pipe
sun.java2d.windows.GDIWindowSurfaceData#getRenderLoops(SunGraphics2D)->RenderLoops::: window surface data get render loops
sun.java2d.windows.GDIWindowSurfaceData#getDeviceConfiguration()->GraphicsConfiguration::: window surface data get device configuration
sun.java2d.windows.GDIWindowSurfaceData#getDefaultScaleX()->double::: window surface data get default scale x
sun.java2d.windows.GDIWindowSurfaceData#getDefaultScaleY()->double::: window surface data get default scale y
sun.java2d.windows.GDIWindowSurfaceData#getReplacement()->SurfaceData:::  Overridden to use ScreenUpdateManager to obtain the replacement surface.
sun.java2d.windows.GDIWindowSurfaceData#getBounds()->Rectangle::: window surface data get bounds
sun.java2d.windows.GDIWindowSurfaceData#copyArea(SunGraphics2D, int, int, int, int, int, int)->boolean::: window surface data copy area
sun.java2d.windows.GDIWindowSurfaceData#invalidate()->void::: window surface data invalidate
sun.java2d.windows.GDIWindowSurfaceData#getDestination()->Object:::Returns destination Component associated with this SurfaceData.
sun.java2d.windows.GDIWindowSurfaceData#getPeer()->WComponentPeer::: window surface data get peer
sun.java2d.windows.WindowsFlags#initFlags()->void::: windows flags init flags
sun.java2d.windows.WindowsFlags#isD3DEnabled()->boolean::: windows flags is d3 enabled
sun.java2d.windows.WindowsFlags#isD3DSet()->boolean::: windows flags is d3 set
sun.java2d.windows.WindowsFlags#isD3DOnScreenEnabled()->boolean::: windows flags is d3 on screen enabled
sun.java2d.windows.WindowsFlags#isD3DVerbose()->boolean::: windows flags is d3 verbose
sun.java2d.windows.WindowsFlags#isGdiBlitEnabled()->boolean::: windows flags is gdi blit enabled
sun.java2d.windows.WindowsFlags#isOffscreenSharingEnabled()->boolean::: windows flags is offscreen sharing enabled
sun.java2d.windows.WindowsFlags#isMagPresent()->boolean::: windows flags is mag present
sun.java2d.windows.WindowsFlags#isOGLEnabled()->boolean::: windows flags is enabled
sun.java2d.windows.WindowsFlags#isOGLVerbose()->boolean::: windows flags is verbose
