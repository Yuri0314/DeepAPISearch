com.sun.tools.jdi.AbstractLauncher#launch(Map)->VirtualMachine::: abstract launcher launch
com.sun.tools.jdi.AbstractLauncher#name()->String::: abstract launcher name
com.sun.tools.jdi.AbstractLauncher#description()->String::: abstract launcher description
com.sun.tools.jdi.AbstractLauncher#tokenizeCommand(String, char)->String[]::: abstract launcher tokenize command
com.sun.tools.jdi.AbstractLauncher#launch(String[], String, TransportService.ListenKey, TransportService)->VirtualMachine::: abstract launcher launch
com.sun.tools.jdi.ArrayReferenceImpl#invokableReferenceType(Method)->ClassTypeImpl::: array reference impl invokable reference type
com.sun.tools.jdi.ArrayReferenceImpl#arrayType()->ArrayTypeImpl::: array reference impl array type
com.sun.tools.jdi.ArrayReferenceImpl#length()->int:::Return array length
com.sun.tools.jdi.ArrayReferenceImpl#getValue(int)->Value::: array reference impl get value
com.sun.tools.jdi.ArrayReferenceImpl#getValues()->List::: array reference impl get values
com.sun.tools.jdi.ArrayReferenceImpl#getValues(int, int)->List::: array reference impl get values
com.sun.tools.jdi.ArrayReferenceImpl#setValue(int, Value)->void::: array reference impl set value
com.sun.tools.jdi.ArrayReferenceImpl#setValues(List)->void::: array reference impl set values
com.sun.tools.jdi.ArrayReferenceImpl#setValues(int, List, int, int)->void::: array reference impl set values
com.sun.tools.jdi.ArrayReferenceImpl#toString()->String::: array reference impl to string
com.sun.tools.jdi.ArrayReferenceImpl#typeValueKey()->byte::: array reference impl type value key
com.sun.tools.jdi.ArrayReferenceImpl#validateAssignment(ValueContainer)->void::: array reference impl validate assignment
com.sun.tools.jdi.ArrayReferenceImpl.Component#type()->Type::: component type
com.sun.tools.jdi.ArrayReferenceImpl.Component#typeName()->String::: component type name
com.sun.tools.jdi.ArrayReferenceImpl.Component#signature()->String::: component signature
com.sun.tools.jdi.ArrayReferenceImpl.Component#findType(String)->Type::: component find type
com.sun.tools.jdi.ArrayTypeImpl#newInstance(int)->ArrayReference::: array type impl new instance
com.sun.tools.jdi.ArrayTypeImpl#componentSignature()->String::: array type impl component signature
com.sun.tools.jdi.ArrayTypeImpl#componentTypeName()->String::: array type impl component type name
com.sun.tools.jdi.ArrayTypeImpl#type()->Type::: array type impl type
com.sun.tools.jdi.ArrayTypeImpl#addVisibleMethods(Map, Set)->void::: array type impl add visible methods
com.sun.tools.jdi.ArrayTypeImpl#allMethods()->List::: array type impl all methods
com.sun.tools.jdi.ArrayTypeImpl#findComponentType(String)->Type::: array type impl find component type
com.sun.tools.jdi.ArrayTypeImpl#componentType()->Type::: array type impl component type
com.sun.tools.jdi.ArrayTypeImpl#isComponentAssignable(Type, Type)->boolean::: array type impl is component assignable
com.sun.tools.jdi.ArrayTypeImpl#isAssignableTo(ReferenceType)->boolean::: array type impl is assignable to
com.sun.tools.jdi.ArrayTypeImpl#inheritedTypes()->List::: array type impl inherited types
com.sun.tools.jdi.ArrayTypeImpl#getModifiers()->void::: array type impl get modifiers
com.sun.tools.jdi.ArrayTypeImpl#toString()->String::: array type impl to string
com.sun.tools.jdi.ArrayTypeImpl#isPrepared()->boolean::: array type impl is prepared
com.sun.tools.jdi.ArrayTypeImpl#isVerified()->boolean::: array type impl is verified
com.sun.tools.jdi.ArrayTypeImpl#isInitialized()->boolean::: array type impl is initialized
com.sun.tools.jdi.ArrayTypeImpl#failedToInitialize()->boolean::: array type impl failed to initialize
com.sun.tools.jdi.ArrayTypeImpl#isAbstract()->boolean::: array type impl is abstract
com.sun.tools.jdi.ArrayTypeImpl#isFinal()->boolean::: array type impl is final
com.sun.tools.jdi.ArrayTypeImpl#isStatic()->boolean::: array type impl is static
com.sun.tools.jdi.BaseLineInfo#liStratum()->String::: base line info li stratum
com.sun.tools.jdi.BaseLineInfo#liLineNumber()->int::: base line info li line number
com.sun.tools.jdi.BaseLineInfo#liSourceName()->String::: base line info li source name
com.sun.tools.jdi.BaseLineInfo#liSourcePath()->String::: base line info li source path
com.sun.tools.jdi.BooleanTypeImpl#signature()->String::: boolean type impl signature
com.sun.tools.jdi.BooleanTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: boolean type impl convert
com.sun.tools.jdi.BooleanValueImpl#equals(Object)->boolean::: boolean value impl equals
com.sun.tools.jdi.BooleanValueImpl#hashCode()->int::: boolean value impl hash code
com.sun.tools.jdi.BooleanValueImpl#type()->Type::: boolean value impl type
com.sun.tools.jdi.BooleanValueImpl#value()->boolean::: boolean value impl value
com.sun.tools.jdi.BooleanValueImpl#booleanValue()->boolean::: boolean value impl boolean value
com.sun.tools.jdi.BooleanValueImpl#byteValue()->byte::: boolean value impl byte value
com.sun.tools.jdi.BooleanValueImpl#charValue()->char::: boolean value impl char value
com.sun.tools.jdi.BooleanValueImpl#shortValue()->short::: boolean value impl short value
com.sun.tools.jdi.BooleanValueImpl#intValue()->int::: boolean value impl int value
com.sun.tools.jdi.BooleanValueImpl#longValue()->long::: boolean value impl long value
com.sun.tools.jdi.BooleanValueImpl#floatValue()->float::: boolean value impl float value
com.sun.tools.jdi.BooleanValueImpl#doubleValue()->double::: boolean value impl double value
com.sun.tools.jdi.BooleanValueImpl#toString()->String::: boolean value impl to string
com.sun.tools.jdi.BooleanValueImpl#typeValueKey()->byte::: boolean value impl type value key
com.sun.tools.jdi.ByteTypeImpl#signature()->String::: byte type impl signature
com.sun.tools.jdi.ByteTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: byte type impl convert
com.sun.tools.jdi.ByteValueImpl#equals(Object)->boolean::: byte value impl equals
com.sun.tools.jdi.ByteValueImpl#hashCode()->int::: byte value impl hash code
com.sun.tools.jdi.ByteValueImpl#compareTo(ByteValue)->int::: byte value impl compare to
com.sun.tools.jdi.ByteValueImpl#type()->Type::: byte value impl type
com.sun.tools.jdi.ByteValueImpl#value()->byte::: byte value impl value
com.sun.tools.jdi.ByteValueImpl#booleanValue()->boolean::: byte value impl boolean value
com.sun.tools.jdi.ByteValueImpl#byteValue()->byte::: byte value impl byte value
com.sun.tools.jdi.ByteValueImpl#charValue()->char::: byte value impl char value
com.sun.tools.jdi.ByteValueImpl#shortValue()->short::: byte value impl short value
com.sun.tools.jdi.ByteValueImpl#intValue()->int::: byte value impl int value
com.sun.tools.jdi.ByteValueImpl#longValue()->long::: byte value impl long value
com.sun.tools.jdi.ByteValueImpl#floatValue()->float::: byte value impl float value
com.sun.tools.jdi.ByteValueImpl#doubleValue()->double::: byte value impl double value
com.sun.tools.jdi.ByteValueImpl#checkedCharValue()->char::: byte value impl checked char value
com.sun.tools.jdi.ByteValueImpl#toString()->String::: byte value impl to string
com.sun.tools.jdi.ByteValueImpl#typeValueKey()->byte::: byte value impl type value key
com.sun.tools.jdi.CharTypeImpl#signature()->String::: char type impl signature
com.sun.tools.jdi.CharTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: char type impl convert
com.sun.tools.jdi.CharValueImpl#equals(Object)->boolean::: char value impl equals
com.sun.tools.jdi.CharValueImpl#hashCode()->int::: char value impl hash code
com.sun.tools.jdi.CharValueImpl#compareTo(CharValue)->int::: char value impl compare to
com.sun.tools.jdi.CharValueImpl#type()->Type::: char value impl type
com.sun.tools.jdi.CharValueImpl#value()->char::: char value impl value
com.sun.tools.jdi.CharValueImpl#booleanValue()->boolean::: char value impl boolean value
com.sun.tools.jdi.CharValueImpl#byteValue()->byte::: char value impl byte value
com.sun.tools.jdi.CharValueImpl#charValue()->char::: char value impl char value
com.sun.tools.jdi.CharValueImpl#shortValue()->short::: char value impl short value
com.sun.tools.jdi.CharValueImpl#intValue()->int::: char value impl int value
com.sun.tools.jdi.CharValueImpl#longValue()->long::: char value impl long value
com.sun.tools.jdi.CharValueImpl#floatValue()->float::: char value impl float value
com.sun.tools.jdi.CharValueImpl#doubleValue()->double::: char value impl double value
com.sun.tools.jdi.CharValueImpl#toString()->String::: char value impl to string
com.sun.tools.jdi.CharValueImpl#checkedByteValue()->byte::: char value impl checked byte value
com.sun.tools.jdi.CharValueImpl#checkedShortValue()->short::: char value impl checked short value
com.sun.tools.jdi.CharValueImpl#typeValueKey()->byte::: char value impl type value key
com.sun.tools.jdi.ClassLoaderReferenceImpl#newCache()->ObjectReferenceImpl.Cache::: class loader reference impl new cache
com.sun.tools.jdi.ClassLoaderReferenceImpl#description()->String::: class loader reference impl description
com.sun.tools.jdi.ClassLoaderReferenceImpl#definedClasses()->List::: class loader reference impl defined classes
com.sun.tools.jdi.ClassLoaderReferenceImpl#visibleClasses()->List::: class loader reference impl visible classes
com.sun.tools.jdi.ClassLoaderReferenceImpl#findType(String)->Type::: class loader reference impl find type
com.sun.tools.jdi.ClassLoaderReferenceImpl#typeValueKey()->byte::: class loader reference impl type value key
com.sun.tools.jdi.ClassObjectReferenceImpl#reflectedType()->ReferenceType::: class object reference impl reflected type
com.sun.tools.jdi.ClassObjectReferenceImpl#typeValueKey()->byte::: class object reference impl type value key
com.sun.tools.jdi.ClassObjectReferenceImpl#toString()->String::: class object reference impl to string
com.sun.tools.jdi.ClassTypeImpl#superclass()->ClassType::: class type impl superclass
com.sun.tools.jdi.ClassTypeImpl#interfaces()->List::: class type impl interfaces
com.sun.tools.jdi.ClassTypeImpl#allInterfaces()->List::: class type impl all interfaces
com.sun.tools.jdi.ClassTypeImpl#subclasses()->List::: class type impl subclasses
com.sun.tools.jdi.ClassTypeImpl#isEnum()->boolean::: class type impl is enum
com.sun.tools.jdi.ClassTypeImpl#setValue(Field, Value)->void::: class type impl set value
com.sun.tools.jdi.ClassTypeImpl#sendNewInstanceCommand(ThreadReferenceImpl, MethodImpl, ValueImpl[], int)->PacketStream::: class type impl send new instance command
com.sun.tools.jdi.ClassTypeImpl#newInstance(ThreadReference, Method, List, int)->ObjectReference::: class type impl new instance
com.sun.tools.jdi.ClassTypeImpl#concreteMethodByName(String, String)->Method::: class type impl concrete method by name
com.sun.tools.jdi.ClassTypeImpl#validateConstructorInvocation(Method)->void::: class type impl validate constructor invocation
com.sun.tools.jdi.ClassTypeImpl#toString()->String::: class type impl to string
com.sun.tools.jdi.ClassTypeImpl#getInvokeMethodSender(ThreadReferenceImpl, MethodImpl, ValueImpl[], int)->CommandSender::: class type impl get invoke method sender
com.sun.tools.jdi.ClassTypeImpl#waitForReply(PacketStream)->InvocationResult::: class type impl wait for reply
com.sun.tools.jdi.ClassTypeImpl#canInvoke(Method)->boolean::: class type impl can invoke
com.sun.tools.jdi.CommandSender#send()->PacketStream::: command sender send
com.sun.tools.jdi.ConcreteMethodImpl#location()->Location::: concrete method impl location
com.sun.tools.jdi.ConcreteMethodImpl#sourceNameFilter(List, SDE.Stratum, String)->List::: concrete method impl source name filter
com.sun.tools.jdi.ConcreteMethodImpl#allLineLocations(SDE.Stratum, String)->List::: concrete method impl all line locations
com.sun.tools.jdi.ConcreteMethodImpl#locationsOfLine(SDE.Stratum, String, int)->List::: concrete method impl locations of line
com.sun.tools.jdi.ConcreteMethodImpl#locationOfCodeIndex(long)->Location::: concrete method impl location of code index
com.sun.tools.jdi.ConcreteMethodImpl#codeIndexToLineInfo(SDE.Stratum, long)->LineInfo::: concrete method impl code index to line info
com.sun.tools.jdi.ConcreteMethodImpl#variables()->List::: concrete method impl variables
com.sun.tools.jdi.ConcreteMethodImpl#variablesByName(String)->List::: concrete method impl variables by name
com.sun.tools.jdi.ConcreteMethodImpl#arguments()->List::: concrete method impl arguments
com.sun.tools.jdi.ConcreteMethodImpl#bytecodes()->byte[]::: concrete method impl bytecodes
com.sun.tools.jdi.ConcreteMethodImpl#argSlotCount()->int::: concrete method impl arg slot count
com.sun.tools.jdi.ConnectorImpl#defaultArguments()->Map::: connector impl default arguments
com.sun.tools.jdi.ConnectorImpl#addStringArgument(String, String, String, String, boolean)->void::: connector impl add string argument
com.sun.tools.jdi.ConnectorImpl#addBooleanArgument(String, String, String, boolean, boolean)->void::: connector impl add boolean argument
com.sun.tools.jdi.ConnectorImpl#addIntegerArgument(String, String, String, String, boolean, int, int)->void::: connector impl add integer argument
com.sun.tools.jdi.ConnectorImpl#addSelectedArgument(String, String, String, String, boolean, List)->void::: connector impl add selected argument
com.sun.tools.jdi.ConnectorImpl#argument(String, Map)->ArgumentImpl::: connector impl argument
com.sun.tools.jdi.ConnectorImpl#getString(String)->String::: connector impl get string
com.sun.tools.jdi.ConnectorImpl#toString()->String::: connector impl to string
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#isValid(String)->boolean::: argument impl is valid
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#name()->String::: argument impl name
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#label()->String::: argument impl label
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#description()->String::: argument impl description
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#value()->String::: argument impl value
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#setValue(String)->void::: argument impl set value
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#mustSpecify()->boolean::: argument impl must specify
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#equals(Object)->boolean::: argument impl equals
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#hashCode()->int::: argument impl hash code
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#clone()->Object::: argument impl clone
com.sun.tools.jdi.ConnectorImpl.ArgumentImpl#toString()->String::: argument impl to string
com.sun.tools.jdi.ConnectorImpl.BooleanArgumentImpl#setValue(boolean)->void:::Sets the value of the argument.
com.sun.tools.jdi.ConnectorImpl.BooleanArgumentImpl#isValid(String)->boolean:::Performs basic sanity check of argument.
com.sun.tools.jdi.ConnectorImpl.BooleanArgumentImpl#stringValueOf(boolean)->String:::Return the string representation of the value parameter
com.sun.tools.jdi.ConnectorImpl.BooleanArgumentImpl#booleanValue()->boolean:::Return the value of the argument as a boolean
com.sun.tools.jdi.ConnectorImpl.IntegerArgumentImpl#setValue(int)->void:::Sets the value of the argument
com.sun.tools.jdi.ConnectorImpl.IntegerArgumentImpl#isValid(String)->boolean:::Performs basic sanity check of argument.
com.sun.tools.jdi.ConnectorImpl.IntegerArgumentImpl#isValid(int)->boolean:::Performs basic sanity check of argument.
com.sun.tools.jdi.ConnectorImpl.IntegerArgumentImpl#stringValueOf(int)->String:::Return the string representation of the value parameter
com.sun.tools.jdi.ConnectorImpl.IntegerArgumentImpl#intValue()->int:::Return the value of the argument as a int
com.sun.tools.jdi.ConnectorImpl.IntegerArgumentImpl#max()->int:::The upper bound for the value.
com.sun.tools.jdi.ConnectorImpl.IntegerArgumentImpl#min()->int:::The lower bound for the value.
com.sun.tools.jdi.ConnectorImpl.StringArgumentImpl#isValid(String)->boolean:::Performs basic sanity check of argument.
com.sun.tools.jdi.ConnectorImpl.SelectedArgumentImpl#choices()->List:::Return the possible values for the argument
com.sun.tools.jdi.ConnectorImpl.SelectedArgumentImpl#isValid(String)->boolean:::Performs basic sanity check of argument.
com.sun.tools.jdi.DoubleTypeImpl#signature()->String::: double type impl signature
com.sun.tools.jdi.DoubleTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: double type impl convert
com.sun.tools.jdi.DoubleValueImpl#equals(Object)->boolean::: double value impl equals
com.sun.tools.jdi.DoubleValueImpl#compareTo(DoubleValue)->int::: double value impl compare to
com.sun.tools.jdi.DoubleValueImpl#hashCode()->int::: double value impl hash code
com.sun.tools.jdi.DoubleValueImpl#type()->Type::: double value impl type
com.sun.tools.jdi.DoubleValueImpl#value()->double::: double value impl value
com.sun.tools.jdi.DoubleValueImpl#booleanValue()->boolean::: double value impl boolean value
com.sun.tools.jdi.DoubleValueImpl#byteValue()->byte::: double value impl byte value
com.sun.tools.jdi.DoubleValueImpl#charValue()->char::: double value impl char value
com.sun.tools.jdi.DoubleValueImpl#shortValue()->short::: double value impl short value
com.sun.tools.jdi.DoubleValueImpl#intValue()->int::: double value impl int value
com.sun.tools.jdi.DoubleValueImpl#longValue()->long::: double value impl long value
com.sun.tools.jdi.DoubleValueImpl#floatValue()->float::: double value impl float value
com.sun.tools.jdi.DoubleValueImpl#doubleValue()->double::: double value impl double value
com.sun.tools.jdi.DoubleValueImpl#checkedByteValue()->byte::: double value impl checked byte value
com.sun.tools.jdi.DoubleValueImpl#checkedCharValue()->char::: double value impl checked char value
com.sun.tools.jdi.DoubleValueImpl#checkedShortValue()->short::: double value impl checked short value
com.sun.tools.jdi.DoubleValueImpl#checkedIntValue()->int::: double value impl checked int value
com.sun.tools.jdi.DoubleValueImpl#checkedLongValue()->long::: double value impl checked long value
com.sun.tools.jdi.DoubleValueImpl#checkedFloatValue()->float::: double value impl checked float value
com.sun.tools.jdi.DoubleValueImpl#toString()->String::: double value impl to string
com.sun.tools.jdi.DoubleValueImpl#typeValueKey()->byte::: double value impl type value key
com.sun.tools.jdi.EventQueueImpl#equals(Object)->boolean::: event queue impl equals
com.sun.tools.jdi.EventQueueImpl#hashCode()->int::: event queue impl hash code
com.sun.tools.jdi.EventQueueImpl#enqueue(EventSet)->void::: event queue impl enqueue
com.sun.tools.jdi.EventQueueImpl#size()->int::: event queue impl size
com.sun.tools.jdi.EventQueueImpl#close()->void::: event queue impl close
com.sun.tools.jdi.EventQueueImpl#remove()->EventSet::: event queue impl remove
com.sun.tools.jdi.EventQueueImpl#remove(long)->EventSet:::Filter out events not for user's eyes
com.sun.tools.jdi.EventQueueImpl#removeInternal()->EventSet::: event queue impl remove internal
com.sun.tools.jdi.EventRequestManagerImpl#JDWPtoJDISuspendPolicy(byte)->int::: event request manager impl  pto suspend policy
com.sun.tools.jdi.EventRequestManagerImpl#JDItoJDWPSuspendPolicy(int)->byte::: event request manager impl  ito suspend policy
com.sun.tools.jdi.EventRequestManagerImpl#equals(Object)->boolean::: event request manager impl equals
com.sun.tools.jdi.EventRequestManagerImpl#hashCode()->int::: event request manager impl hash code
com.sun.tools.jdi.EventRequestManagerImpl.ThreadVisibleEventRequestImpl#addThreadFilter(ThreadReference)->void::: thread visible event request impl add thread filter
com.sun.tools.jdi.EventRequestManagerImpl.ClassVisibleEventRequestImpl#addClassFilter(ReferenceType)->void::: class visible event request impl add class filter
com.sun.tools.jdi.EventRequestManagerImpl.ClassVisibleEventRequestImpl#addClassFilter(String)->void::: class visible event request impl add class filter
com.sun.tools.jdi.EventRequestManagerImpl.ClassVisibleEventRequestImpl#addClassExclusionFilter(String)->void::: class visible event request impl add class exclusion filter
com.sun.tools.jdi.EventRequestManagerImpl.ClassVisibleEventRequestImpl#addInstanceFilter(ObjectReference)->void::: class visible event request impl add instance filter
com.sun.tools.jdi.EventRequestManagerImpl.BreakpointRequestImpl#location()->Location::: breakpoint request impl location
com.sun.tools.jdi.EventRequestManagerImpl.BreakpointRequestImpl#eventCmd()->int::: breakpoint request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.BreakpointRequestImpl#toString()->String::: breakpoint request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.ClassPrepareRequestImpl#eventCmd()->int::: class prepare request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.ClassPrepareRequestImpl#addSourceNameFilter(String)->void::: class prepare request impl add source name filter
com.sun.tools.jdi.EventRequestManagerImpl.ClassPrepareRequestImpl#toString()->String::: class prepare request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.ClassUnloadRequestImpl#eventCmd()->int::: class unload request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.ClassUnloadRequestImpl#toString()->String::: class unload request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.ExceptionRequestImpl#exception()->ReferenceType::: exception request impl exception
com.sun.tools.jdi.EventRequestManagerImpl.ExceptionRequestImpl#notifyCaught()->boolean::: exception request impl notify caught
com.sun.tools.jdi.EventRequestManagerImpl.ExceptionRequestImpl#notifyUncaught()->boolean::: exception request impl notify uncaught
com.sun.tools.jdi.EventRequestManagerImpl.ExceptionRequestImpl#eventCmd()->int::: exception request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.ExceptionRequestImpl#toString()->String::: exception request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.MethodEntryRequestImpl#eventCmd()->int::: method entry request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.MethodEntryRequestImpl#toString()->String::: method entry request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.MethodExitRequestImpl#eventCmd()->int::: method exit request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.MethodExitRequestImpl#toString()->String::: method exit request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.MonitorContendedEnterRequestImpl#eventCmd()->int::: monitor contended enter request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.MonitorContendedEnterRequestImpl#toString()->String::: monitor contended enter request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.MonitorContendedEnteredRequestImpl#eventCmd()->int::: monitor contended entered request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.MonitorContendedEnteredRequestImpl#toString()->String::: monitor contended entered request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.MonitorWaitRequestImpl#eventCmd()->int::: monitor wait request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.MonitorWaitRequestImpl#toString()->String::: monitor wait request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.MonitorWaitedRequestImpl#eventCmd()->int::: monitor waited request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.MonitorWaitedRequestImpl#toString()->String::: monitor waited request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.StepRequestImpl#depth()->int::: step request impl depth
com.sun.tools.jdi.EventRequestManagerImpl.StepRequestImpl#size()->int::: step request impl size
com.sun.tools.jdi.EventRequestManagerImpl.StepRequestImpl#thread()->ThreadReference::: step request impl thread
com.sun.tools.jdi.EventRequestManagerImpl.StepRequestImpl#eventCmd()->int::: step request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.StepRequestImpl#toString()->String::: step request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.ThreadDeathRequestImpl#eventCmd()->int::: thread death request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.ThreadDeathRequestImpl#toString()->String::: thread death request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.ThreadStartRequestImpl#eventCmd()->int::: thread start request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.ThreadStartRequestImpl#toString()->String::: thread start request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.WatchpointRequestImpl#field()->Field::: watchpoint request impl field
com.sun.tools.jdi.EventRequestManagerImpl.AccessWatchpointRequestImpl#eventCmd()->int::: access watchpoint request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.AccessWatchpointRequestImpl#toString()->String::: access watchpoint request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.ModificationWatchpointRequestImpl#eventCmd()->int::: modification watchpoint request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.ModificationWatchpointRequestImpl#toString()->String::: modification watchpoint request impl to string
com.sun.tools.jdi.EventRequestManagerImpl.VMDeathRequestImpl#eventCmd()->int::: death request impl event cmd
com.sun.tools.jdi.EventRequestManagerImpl.VMDeathRequestImpl#toString()->String::: death request impl to string
com.sun.tools.jdi.EventRequestManagerImpl#createClassPrepareRequest()->ClassPrepareRequest::: event request manager impl create class prepare request
com.sun.tools.jdi.EventRequestManagerImpl#createClassUnloadRequest()->ClassUnloadRequest::: event request manager impl create class unload request
com.sun.tools.jdi.EventRequestManagerImpl#createExceptionRequest(ReferenceType, boolean, boolean)->ExceptionRequest::: event request manager impl create exception request
com.sun.tools.jdi.EventRequestManagerImpl#createStepRequest(ThreadReference, int, int)->StepRequest::: event request manager impl create step request
com.sun.tools.jdi.EventRequestManagerImpl#createThreadDeathRequest()->ThreadDeathRequest::: event request manager impl create thread death request
com.sun.tools.jdi.EventRequestManagerImpl#createThreadStartRequest()->ThreadStartRequest::: event request manager impl create thread start request
com.sun.tools.jdi.EventRequestManagerImpl#createMethodEntryRequest()->MethodEntryRequest::: event request manager impl create method entry request
com.sun.tools.jdi.EventRequestManagerImpl#createMethodExitRequest()->MethodExitRequest::: event request manager impl create method exit request
com.sun.tools.jdi.EventRequestManagerImpl#createMonitorContendedEnterRequest()->MonitorContendedEnterRequest::: event request manager impl create monitor contended enter request
com.sun.tools.jdi.EventRequestManagerImpl#createMonitorContendedEnteredRequest()->MonitorContendedEnteredRequest::: event request manager impl create monitor contended entered request
com.sun.tools.jdi.EventRequestManagerImpl#createMonitorWaitRequest()->MonitorWaitRequest::: event request manager impl create monitor wait request
com.sun.tools.jdi.EventRequestManagerImpl#createMonitorWaitedRequest()->MonitorWaitedRequest::: event request manager impl create monitor waited request
com.sun.tools.jdi.EventRequestManagerImpl#createBreakpointRequest(Location)->BreakpointRequest::: event request manager impl create breakpoint request
com.sun.tools.jdi.EventRequestManagerImpl#createAccessWatchpointRequest(Field)->AccessWatchpointRequest::: event request manager impl create access watchpoint request
com.sun.tools.jdi.EventRequestManagerImpl#createModificationWatchpointRequest(Field)->ModificationWatchpointRequest::: event request manager impl create modification watchpoint request
com.sun.tools.jdi.EventRequestManagerImpl#createVMDeathRequest()->VMDeathRequest::: event request manager impl create death request
com.sun.tools.jdi.EventRequestManagerImpl#deleteEventRequest(EventRequest)->void::: event request manager impl delete event request
com.sun.tools.jdi.EventRequestManagerImpl#deleteEventRequests(List)->void::: event request manager impl delete event requests
com.sun.tools.jdi.EventRequestManagerImpl#deleteAllBreakpoints()->void::: event request manager impl delete all breakpoints
com.sun.tools.jdi.EventRequestManagerImpl#stepRequests()->List::: event request manager impl step requests
com.sun.tools.jdi.EventRequestManagerImpl#classPrepareRequests()->List::: event request manager impl class prepare requests
com.sun.tools.jdi.EventRequestManagerImpl#classUnloadRequests()->List::: event request manager impl class unload requests
com.sun.tools.jdi.EventRequestManagerImpl#threadStartRequests()->List::: event request manager impl thread start requests
com.sun.tools.jdi.EventRequestManagerImpl#threadDeathRequests()->List::: event request manager impl thread death requests
com.sun.tools.jdi.EventRequestManagerImpl#exceptionRequests()->List::: event request manager impl exception requests
com.sun.tools.jdi.EventRequestManagerImpl#breakpointRequests()->List::: event request manager impl breakpoint requests
com.sun.tools.jdi.EventRequestManagerImpl#accessWatchpointRequests()->List::: event request manager impl access watchpoint requests
com.sun.tools.jdi.EventRequestManagerImpl#modificationWatchpointRequests()->List::: event request manager impl modification watchpoint requests
com.sun.tools.jdi.EventRequestManagerImpl#methodEntryRequests()->List::: event request manager impl method entry requests
com.sun.tools.jdi.EventRequestManagerImpl#methodExitRequests()->List::: event request manager impl method exit requests
com.sun.tools.jdi.EventRequestManagerImpl#monitorContendedEnterRequests()->List::: event request manager impl monitor contended enter requests
com.sun.tools.jdi.EventRequestManagerImpl#monitorContendedEnteredRequests()->List::: event request manager impl monitor contended entered requests
com.sun.tools.jdi.EventRequestManagerImpl#monitorWaitRequests()->List::: event request manager impl monitor wait requests
com.sun.tools.jdi.EventRequestManagerImpl#monitorWaitedRequests()->List::: event request manager impl monitor waited requests
com.sun.tools.jdi.EventRequestManagerImpl#vmDeathRequests()->List::: event request manager impl vm death requests
com.sun.tools.jdi.EventRequestManagerImpl#unmodifiableRequestList(int)->List::: event request manager impl unmodifiable request list
com.sun.tools.jdi.EventRequestManagerImpl#request(int, int)->EventRequest::: event request manager impl request
com.sun.tools.jdi.EventSetImpl#toString()->String::: event set impl to string
com.sun.tools.jdi.EventSetImpl.EventImpl#equals(Object)->boolean::: event impl equals
com.sun.tools.jdi.EventSetImpl.EventImpl#hashCode()->int::: event impl hash code
com.sun.tools.jdi.EventSetImpl.EventImpl#request()->EventRequest::: event impl request
com.sun.tools.jdi.EventSetImpl.EventImpl#requestID()->int::: event impl request d
com.sun.tools.jdi.EventSetImpl.EventImpl#destination()->EventDestination::: event impl destination
com.sun.tools.jdi.EventSetImpl.EventImpl#eventName()->String::: event impl event name
com.sun.tools.jdi.EventSetImpl.EventImpl#toString()->String::: event impl to string
com.sun.tools.jdi.EventSetImpl.ThreadedEventImpl#thread()->ThreadReference::: threaded event impl thread
com.sun.tools.jdi.EventSetImpl.ThreadedEventImpl#toString()->String::: threaded event impl to string
com.sun.tools.jdi.EventSetImpl.LocatableEventImpl#location()->Location::: locatable event impl location
com.sun.tools.jdi.EventSetImpl.LocatableEventImpl#method()->Method:::For MethodEntry and MethodExit
com.sun.tools.jdi.EventSetImpl.LocatableEventImpl#toString()->String::: locatable event impl to string
com.sun.tools.jdi.EventSetImpl.BreakpointEventImpl#eventName()->String::: breakpoint event impl event name
com.sun.tools.jdi.EventSetImpl.StepEventImpl#eventName()->String::: step event impl event name
com.sun.tools.jdi.EventSetImpl.MethodEntryEventImpl#eventName()->String::: method entry event impl event name
com.sun.tools.jdi.EventSetImpl.MethodExitEventImpl#eventName()->String::: method exit event impl event name
com.sun.tools.jdi.EventSetImpl.MethodExitEventImpl#returnValue()->Value::: method exit event impl return value
com.sun.tools.jdi.EventSetImpl.MonitorContendedEnterEventImpl#eventName()->String::: monitor contended enter event impl event name
com.sun.tools.jdi.EventSetImpl.MonitorContendedEnterEventImpl#monitor()->ObjectReference::: monitor contended enter event impl monitor
com.sun.tools.jdi.EventSetImpl.MonitorContendedEnteredEventImpl#eventName()->String::: monitor contended entered event impl event name
com.sun.tools.jdi.EventSetImpl.MonitorContendedEnteredEventImpl#monitor()->ObjectReference::: monitor contended entered event impl monitor
com.sun.tools.jdi.EventSetImpl.MonitorWaitEventImpl#eventName()->String::: monitor wait event impl event name
com.sun.tools.jdi.EventSetImpl.MonitorWaitEventImpl#monitor()->ObjectReference::: monitor wait event impl monitor
com.sun.tools.jdi.EventSetImpl.MonitorWaitEventImpl#timeout()->long::: monitor wait event impl timeout
com.sun.tools.jdi.EventSetImpl.MonitorWaitedEventImpl#eventName()->String::: monitor waited event impl event name
com.sun.tools.jdi.EventSetImpl.MonitorWaitedEventImpl#monitor()->ObjectReference::: monitor waited event impl monitor
com.sun.tools.jdi.EventSetImpl.MonitorWaitedEventImpl#timedout()->boolean::: monitor waited event impl timedout
com.sun.tools.jdi.EventSetImpl.ClassPrepareEventImpl#referenceType()->ReferenceType::: class prepare event impl reference type
com.sun.tools.jdi.EventSetImpl.ClassPrepareEventImpl#eventName()->String::: class prepare event impl event name
com.sun.tools.jdi.EventSetImpl.ClassUnloadEventImpl#className()->String::: class unload event impl class name
com.sun.tools.jdi.EventSetImpl.ClassUnloadEventImpl#classSignature()->String::: class unload event impl class signature
com.sun.tools.jdi.EventSetImpl.ClassUnloadEventImpl#eventName()->String::: class unload event impl event name
com.sun.tools.jdi.EventSetImpl.ExceptionEventImpl#exception()->ObjectReference::: exception event impl exception
com.sun.tools.jdi.EventSetImpl.ExceptionEventImpl#catchLocation()->Location::: exception event impl catch location
com.sun.tools.jdi.EventSetImpl.ExceptionEventImpl#eventName()->String::: exception event impl event name
com.sun.tools.jdi.EventSetImpl.ThreadDeathEventImpl#eventName()->String::: thread death event impl event name
com.sun.tools.jdi.EventSetImpl.ThreadStartEventImpl#eventName()->String::: thread start event impl event name
com.sun.tools.jdi.EventSetImpl.VMStartEventImpl#eventName()->String::: start event impl event name
com.sun.tools.jdi.EventSetImpl.VMDeathEventImpl#eventName()->String::: death event impl event name
com.sun.tools.jdi.EventSetImpl.VMDisconnectEventImpl#eventName()->String::: disconnect event impl event name
com.sun.tools.jdi.EventSetImpl.WatchpointEventImpl#field()->Field::: watchpoint event impl field
com.sun.tools.jdi.EventSetImpl.WatchpointEventImpl#object()->ObjectReference::: watchpoint event impl object
com.sun.tools.jdi.EventSetImpl.WatchpointEventImpl#valueCurrent()->Value::: watchpoint event impl value current
com.sun.tools.jdi.EventSetImpl.AccessWatchpointEventImpl#eventName()->String::: access watchpoint event impl event name
com.sun.tools.jdi.EventSetImpl.ModificationWatchpointEventImpl#valueToBe()->Value::: modification watchpoint event impl value to be
com.sun.tools.jdi.EventSetImpl.ModificationWatchpointEventImpl#eventName()->String::: modification watchpoint event impl event name
com.sun.tools.jdi.EventSetImpl#build()->void::: event set impl build
com.sun.tools.jdi.EventSetImpl#userFilter()->EventSet:::Filter out internal events
com.sun.tools.jdi.EventSetImpl#internalFilter()->EventSet:::Filter out user events.
com.sun.tools.jdi.EventSetImpl#createEvent(JDWP.Event.Composite.Events)->EventImpl::: event set impl create event
com.sun.tools.jdi.EventSetImpl#virtualMachine()->VirtualMachine::: event set impl virtual machine
com.sun.tools.jdi.EventSetImpl#suspendPolicy()->int::: event set impl suspend policy
com.sun.tools.jdi.EventSetImpl#resume()->void::: event set impl resume
com.sun.tools.jdi.EventSetImpl#iterator()->Iterator::: event set impl iterator
com.sun.tools.jdi.EventSetImpl#eventIterator()->EventIterator::: event set impl event iterator
com.sun.tools.jdi.EventSetImpl.Itr#hasNext()->boolean::: itr has next
com.sun.tools.jdi.EventSetImpl.Itr#next()->Event::: itr next
com.sun.tools.jdi.EventSetImpl.Itr#nextEvent()->Event::: itr next event
com.sun.tools.jdi.EventSetImpl.Itr#remove()->void::: itr remove
com.sun.tools.jdi.EventSetImpl#spliterator()->Spliterator::: event set impl spliterator
com.sun.tools.jdi.EventSetImpl#add(Event)->boolean::: event set impl add
com.sun.tools.jdi.EventSetImpl#remove(Object)->boolean::: event set impl remove
com.sun.tools.jdi.EventSetImpl#addAll(Collection)->boolean::: event set impl add all
com.sun.tools.jdi.EventSetImpl#removeAll(Collection)->boolean::: event set impl remove all
com.sun.tools.jdi.EventSetImpl#retainAll(Collection)->boolean::: event set impl retain all
com.sun.tools.jdi.EventSetImpl#clear()->void::: event set impl clear
com.sun.tools.jdi.FieldImpl#equals(Object)->boolean::: field impl equals
com.sun.tools.jdi.FieldImpl#hashCode()->int::: field impl hash code
com.sun.tools.jdi.FieldImpl#compareTo(Field)->int::: field impl compare to
com.sun.tools.jdi.FieldImpl#type()->Type::: field impl type
com.sun.tools.jdi.FieldImpl#findType(String)->Type::: field impl find type
com.sun.tools.jdi.FieldImpl#typeName()->String::: field impl type name
com.sun.tools.jdi.FieldImpl#isTransient()->boolean::: field impl is transient
com.sun.tools.jdi.FieldImpl#isVolatile()->boolean::: field impl is volatile
com.sun.tools.jdi.FieldImpl#isEnumConstant()->boolean::: field impl is enum constant
com.sun.tools.jdi.FieldImpl#toString()->String::: field impl to string
com.sun.tools.jdi.FloatTypeImpl#signature()->String::: float type impl signature
com.sun.tools.jdi.FloatTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: float type impl convert
com.sun.tools.jdi.FloatValueImpl#equals(Object)->boolean::: float value impl equals
com.sun.tools.jdi.FloatValueImpl#hashCode()->int::: float value impl hash code
com.sun.tools.jdi.FloatValueImpl#compareTo(FloatValue)->int::: float value impl compare to
com.sun.tools.jdi.FloatValueImpl#type()->Type::: float value impl type
com.sun.tools.jdi.FloatValueImpl#value()->float::: float value impl value
com.sun.tools.jdi.FloatValueImpl#booleanValue()->boolean::: float value impl boolean value
com.sun.tools.jdi.FloatValueImpl#byteValue()->byte::: float value impl byte value
com.sun.tools.jdi.FloatValueImpl#charValue()->char::: float value impl char value
com.sun.tools.jdi.FloatValueImpl#shortValue()->short::: float value impl short value
com.sun.tools.jdi.FloatValueImpl#intValue()->int::: float value impl int value
com.sun.tools.jdi.FloatValueImpl#longValue()->long::: float value impl long value
com.sun.tools.jdi.FloatValueImpl#floatValue()->float::: float value impl float value
com.sun.tools.jdi.FloatValueImpl#doubleValue()->double::: float value impl double value
com.sun.tools.jdi.FloatValueImpl#checkedByteValue()->byte::: float value impl checked byte value
com.sun.tools.jdi.FloatValueImpl#checkedCharValue()->char::: float value impl checked char value
com.sun.tools.jdi.FloatValueImpl#checkedShortValue()->short::: float value impl checked short value
com.sun.tools.jdi.FloatValueImpl#checkedIntValue()->int::: float value impl checked int value
com.sun.tools.jdi.FloatValueImpl#checkedLongValue()->long::: float value impl checked long value
com.sun.tools.jdi.FloatValueImpl#toString()->String::: float value impl to string
com.sun.tools.jdi.FloatValueImpl#typeValueKey()->byte::: float value impl type value key
com.sun.tools.jdi.GenericAttachingConnector#create(TransportService)->GenericAttachingConnector::: generic attaching connector create
com.sun.tools.jdi.GenericAttachingConnector#attach(String, Map)->VirtualMachine:::Attach to a target VM using the specified address and Connector arguments.
com.sun.tools.jdi.GenericAttachingConnector#attach(Map)->VirtualMachine:::Attach to a target VM using the specified arguments - the address of the target VM is specified by the address connector argument.
com.sun.tools.jdi.GenericAttachingConnector#name()->String::: generic attaching connector name
com.sun.tools.jdi.GenericAttachingConnector#description()->String::: generic attaching connector description
com.sun.tools.jdi.GenericAttachingConnector#transport()->Transport::: generic attaching connector transport
com.sun.tools.jdi.GenericListeningConnector#create(TransportService)->GenericListeningConnector:::Create an instance of this Connector
com.sun.tools.jdi.GenericListeningConnector#startListening(String, Map)->String::: generic listening connector start listening
com.sun.tools.jdi.GenericListeningConnector#startListening(Map)->String::: generic listening connector start listening
com.sun.tools.jdi.GenericListeningConnector#stopListening(Map)->void::: generic listening connector stop listening
com.sun.tools.jdi.GenericListeningConnector#accept(Map)->VirtualMachine::: generic listening connector accept
com.sun.tools.jdi.GenericListeningConnector#supportsMultipleConnections()->boolean::: generic listening connector supports multiple connections
com.sun.tools.jdi.GenericListeningConnector#name()->String::: generic listening connector name
com.sun.tools.jdi.GenericListeningConnector#description()->String::: generic listening connector description
com.sun.tools.jdi.GenericListeningConnector#transport()->Transport::: generic listening connector transport
com.sun.tools.jdi.GenericListeningConnector#updateArgumentMapIfRequired(Map, TransportService.ListenKey)->void::: generic listening connector update argument map if required
com.sun.tools.jdi.IntegerTypeImpl#signature()->String::: integer type impl signature
com.sun.tools.jdi.IntegerTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: integer type impl convert
com.sun.tools.jdi.IntegerValueImpl#equals(Object)->boolean::: integer value impl equals
com.sun.tools.jdi.IntegerValueImpl#hashCode()->int::: integer value impl hash code
com.sun.tools.jdi.IntegerValueImpl#compareTo(IntegerValue)->int::: integer value impl compare to
com.sun.tools.jdi.IntegerValueImpl#type()->Type::: integer value impl type
com.sun.tools.jdi.IntegerValueImpl#value()->int::: integer value impl value
com.sun.tools.jdi.IntegerValueImpl#booleanValue()->boolean::: integer value impl boolean value
com.sun.tools.jdi.IntegerValueImpl#byteValue()->byte::: integer value impl byte value
com.sun.tools.jdi.IntegerValueImpl#charValue()->char::: integer value impl char value
com.sun.tools.jdi.IntegerValueImpl#shortValue()->short::: integer value impl short value
com.sun.tools.jdi.IntegerValueImpl#intValue()->int::: integer value impl int value
com.sun.tools.jdi.IntegerValueImpl#longValue()->long::: integer value impl long value
com.sun.tools.jdi.IntegerValueImpl#floatValue()->float::: integer value impl float value
com.sun.tools.jdi.IntegerValueImpl#doubleValue()->double::: integer value impl double value
com.sun.tools.jdi.IntegerValueImpl#checkedByteValue()->byte::: integer value impl checked byte value
com.sun.tools.jdi.IntegerValueImpl#checkedCharValue()->char::: integer value impl checked char value
com.sun.tools.jdi.IntegerValueImpl#checkedShortValue()->short::: integer value impl checked short value
com.sun.tools.jdi.IntegerValueImpl#toString()->String::: integer value impl to string
com.sun.tools.jdi.IntegerValueImpl#typeValueKey()->byte::: integer value impl type value key
com.sun.tools.jdi.InterfaceTypeImpl#superinterfaces()->List::: interface type impl superinterfaces
com.sun.tools.jdi.InterfaceTypeImpl#subinterfaces()->List::: interface type impl subinterfaces
com.sun.tools.jdi.InterfaceTypeImpl#implementors()->List::: interface type impl implementors
com.sun.tools.jdi.InterfaceTypeImpl#isInitialized()->boolean::: interface type impl is initialized
com.sun.tools.jdi.InterfaceTypeImpl#toString()->String::: interface type impl to string
com.sun.tools.jdi.InterfaceTypeImpl#waitForReply(PacketStream)->InvocationResult::: interface type impl wait for reply
com.sun.tools.jdi.InterfaceTypeImpl#getInvokeMethodSender(ThreadReferenceImpl, MethodImpl, ValueImpl[], int)->CommandSender::: interface type impl get invoke method sender
com.sun.tools.jdi.InterfaceTypeImpl#superclass()->ClassType::: interface type impl superclass
com.sun.tools.jdi.InterfaceTypeImpl#isAssignableTo(ReferenceType)->boolean::: interface type impl is assignable to
com.sun.tools.jdi.InterfaceTypeImpl#interfaces()->List::: interface type impl interfaces
com.sun.tools.jdi.InterfaceTypeImpl#canInvoke(Method)->boolean::: interface type impl can invoke
com.sun.tools.jdi.InternalEventHandler#run()->void::: internal event handler run
com.sun.tools.jdi.InvokableTypeImpl.InvocationResult#getException()->ObjectReferenceImpl::: invocation result get exception
com.sun.tools.jdi.InvokableTypeImpl.InvocationResult#getResult()->ValueImpl::: invocation result get result
com.sun.tools.jdi.InvokableTypeImpl#invokeMethod(ThreadReference, Method, List, int)->Value:::Method invocation support
com.sun.tools.jdi.InvokableTypeImpl#isAssignableTo(ReferenceType)->boolean::: invokable type impl is assignable to
com.sun.tools.jdi.InvokableTypeImpl#addVisibleMethods(Map, Set)->void::: invokable type impl add visible methods
com.sun.tools.jdi.InvokableTypeImpl#addInterfaces(List)->void::: invokable type impl add interfaces
com.sun.tools.jdi.InvokableTypeImpl#getAllInterfaces()->List:::Returns all the implemented interfaces recursively
com.sun.tools.jdi.InvokableTypeImpl#allMethods()->List:::Shared implementation of ClassType#allMethods() and InterfaceType#allMethods()
com.sun.tools.jdi.InvokableTypeImpl#inheritedTypes()->List::: invokable type impl inherited types
com.sun.tools.jdi.InvokableTypeImpl#getInvokeMethodSender(ThreadReferenceImpl, MethodImpl, ValueImpl[], int)->CommandSender:::A subclass will provide specific CommandSender
com.sun.tools.jdi.InvokableTypeImpl#waitForReply(PacketStream)->InvocationResult:::Waits for the reply to the last sent command
com.sun.tools.jdi.InvokableTypeImpl#superclass()->ClassType:::Get the ReferenceType superclass
com.sun.tools.jdi.InvokableTypeImpl#interfaces()->List:::Get the implemented/extended interfaces
com.sun.tools.jdi.InvokableTypeImpl#canInvoke(Method)->boolean:::Checks the provided method whether it can be invoked
com.sun.tools.jdi.JDWP.VirtualMachine.Version#process(VirtualMachineImpl)->Version::: version process
com.sun.tools.jdi.JDWP.VirtualMachine.Version#enqueueCommand(VirtualMachineImpl)->PacketStream::: version enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.Version#waitForReply(VirtualMachineImpl, PacketStream)->Version::: version wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.ClassesBySignature#process(VirtualMachineImpl, String)->ClassesBySignature::: classes by signature process
com.sun.tools.jdi.JDWP.VirtualMachine.ClassesBySignature#enqueueCommand(VirtualMachineImpl, String)->PacketStream::: classes by signature enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.ClassesBySignature#waitForReply(VirtualMachineImpl, PacketStream)->ClassesBySignature::: classes by signature wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.AllClasses#process(VirtualMachineImpl)->AllClasses::: all classes process
com.sun.tools.jdi.JDWP.VirtualMachine.AllClasses#enqueueCommand(VirtualMachineImpl)->PacketStream::: all classes enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.AllClasses#waitForReply(VirtualMachineImpl, PacketStream)->AllClasses::: all classes wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.AllThreads#process(VirtualMachineImpl)->AllThreads::: all threads process
com.sun.tools.jdi.JDWP.VirtualMachine.AllThreads#enqueueCommand(VirtualMachineImpl)->PacketStream::: all threads enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.AllThreads#waitForReply(VirtualMachineImpl, PacketStream)->AllThreads::: all threads wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.TopLevelThreadGroups#process(VirtualMachineImpl)->TopLevelThreadGroups::: top level thread groups process
com.sun.tools.jdi.JDWP.VirtualMachine.TopLevelThreadGroups#enqueueCommand(VirtualMachineImpl)->PacketStream::: top level thread groups enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.TopLevelThreadGroups#waitForReply(VirtualMachineImpl, PacketStream)->TopLevelThreadGroups::: top level thread groups wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.Dispose#process(VirtualMachineImpl)->Dispose::: dispose process
com.sun.tools.jdi.JDWP.VirtualMachine.Dispose#enqueueCommand(VirtualMachineImpl)->PacketStream::: dispose enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.Dispose#waitForReply(VirtualMachineImpl, PacketStream)->Dispose::: dispose wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.IDSizes#process(VirtualMachineImpl)->IDSizes::: sizes process
com.sun.tools.jdi.JDWP.VirtualMachine.IDSizes#enqueueCommand(VirtualMachineImpl)->PacketStream::: sizes enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.IDSizes#waitForReply(VirtualMachineImpl, PacketStream)->IDSizes::: sizes wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.Suspend#process(VirtualMachineImpl)->Suspend::: suspend process
com.sun.tools.jdi.JDWP.VirtualMachine.Suspend#enqueueCommand(VirtualMachineImpl)->PacketStream::: suspend enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.Suspend#waitForReply(VirtualMachineImpl, PacketStream)->Suspend::: suspend wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.Resume#process(VirtualMachineImpl)->Resume::: resume process
com.sun.tools.jdi.JDWP.VirtualMachine.Resume#enqueueCommand(VirtualMachineImpl)->PacketStream::: resume enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.Resume#waitForReply(VirtualMachineImpl, PacketStream)->Resume::: resume wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.Exit#process(VirtualMachineImpl, int)->Exit::: exit process
com.sun.tools.jdi.JDWP.VirtualMachine.Exit#enqueueCommand(VirtualMachineImpl, int)->PacketStream::: exit enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.Exit#waitForReply(VirtualMachineImpl, PacketStream)->Exit::: exit wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.CreateString#process(VirtualMachineImpl, String)->CreateString::: create string process
com.sun.tools.jdi.JDWP.VirtualMachine.CreateString#enqueueCommand(VirtualMachineImpl, String)->PacketStream::: create string enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.CreateString#waitForReply(VirtualMachineImpl, PacketStream)->CreateString::: create string wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.Capabilities#process(VirtualMachineImpl)->Capabilities::: capabilities process
com.sun.tools.jdi.JDWP.VirtualMachine.Capabilities#enqueueCommand(VirtualMachineImpl)->PacketStream::: capabilities enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.Capabilities#waitForReply(VirtualMachineImpl, PacketStream)->Capabilities::: capabilities wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.ClassPaths#process(VirtualMachineImpl)->ClassPaths::: class paths process
com.sun.tools.jdi.JDWP.VirtualMachine.ClassPaths#enqueueCommand(VirtualMachineImpl)->PacketStream::: class paths enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.ClassPaths#waitForReply(VirtualMachineImpl, PacketStream)->ClassPaths::: class paths wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.DisposeObjects#process(VirtualMachineImpl, Request[])->DisposeObjects::: dispose objects process
com.sun.tools.jdi.JDWP.VirtualMachine.DisposeObjects#enqueueCommand(VirtualMachineImpl, Request[])->PacketStream::: dispose objects enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.DisposeObjects#waitForReply(VirtualMachineImpl, PacketStream)->DisposeObjects::: dispose objects wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.HoldEvents#process(VirtualMachineImpl)->HoldEvents::: hold events process
com.sun.tools.jdi.JDWP.VirtualMachine.HoldEvents#enqueueCommand(VirtualMachineImpl)->PacketStream::: hold events enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.HoldEvents#waitForReply(VirtualMachineImpl, PacketStream)->HoldEvents::: hold events wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.ReleaseEvents#process(VirtualMachineImpl)->ReleaseEvents::: release events process
com.sun.tools.jdi.JDWP.VirtualMachine.ReleaseEvents#enqueueCommand(VirtualMachineImpl)->PacketStream::: release events enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.ReleaseEvents#waitForReply(VirtualMachineImpl, PacketStream)->ReleaseEvents::: release events wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.CapabilitiesNew#process(VirtualMachineImpl)->CapabilitiesNew::: capabilities new process
com.sun.tools.jdi.JDWP.VirtualMachine.CapabilitiesNew#enqueueCommand(VirtualMachineImpl)->PacketStream::: capabilities new enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.CapabilitiesNew#waitForReply(VirtualMachineImpl, PacketStream)->CapabilitiesNew::: capabilities new wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.RedefineClasses#process(VirtualMachineImpl, ClassDef[])->RedefineClasses::: redefine classes process
com.sun.tools.jdi.JDWP.VirtualMachine.RedefineClasses#enqueueCommand(VirtualMachineImpl, ClassDef[])->PacketStream::: redefine classes enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.RedefineClasses#waitForReply(VirtualMachineImpl, PacketStream)->RedefineClasses::: redefine classes wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.SetDefaultStratum#process(VirtualMachineImpl, String)->SetDefaultStratum::: set default stratum process
com.sun.tools.jdi.JDWP.VirtualMachine.SetDefaultStratum#enqueueCommand(VirtualMachineImpl, String)->PacketStream::: set default stratum enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.SetDefaultStratum#waitForReply(VirtualMachineImpl, PacketStream)->SetDefaultStratum::: set default stratum wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.AllClassesWithGeneric#process(VirtualMachineImpl)->AllClassesWithGeneric::: all classes with generic process
com.sun.tools.jdi.JDWP.VirtualMachine.AllClassesWithGeneric#enqueueCommand(VirtualMachineImpl)->PacketStream::: all classes with generic enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.AllClassesWithGeneric#waitForReply(VirtualMachineImpl, PacketStream)->AllClassesWithGeneric::: all classes with generic wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.InstanceCounts#process(VirtualMachineImpl, ReferenceTypeImpl[])->InstanceCounts::: instance counts process
com.sun.tools.jdi.JDWP.VirtualMachine.InstanceCounts#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl[])->PacketStream::: instance counts enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.InstanceCounts#waitForReply(VirtualMachineImpl, PacketStream)->InstanceCounts::: instance counts wait for reply
com.sun.tools.jdi.JDWP.VirtualMachine.AllModules#process(VirtualMachineImpl)->AllModules::: all modules process
com.sun.tools.jdi.JDWP.VirtualMachine.AllModules#enqueueCommand(VirtualMachineImpl)->PacketStream::: all modules enqueue command
com.sun.tools.jdi.JDWP.VirtualMachine.AllModules#waitForReply(VirtualMachineImpl, PacketStream)->AllModules::: all modules wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.Signature#process(VirtualMachineImpl, ReferenceTypeImpl)->Signature::: signature process
com.sun.tools.jdi.JDWP.ReferenceType.Signature#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: signature enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.Signature#waitForReply(VirtualMachineImpl, PacketStream)->Signature::: signature wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.ClassLoader#process(VirtualMachineImpl, ReferenceTypeImpl)->ClassLoader::: class loader process
com.sun.tools.jdi.JDWP.ReferenceType.ClassLoader#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: class loader enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.ClassLoader#waitForReply(VirtualMachineImpl, PacketStream)->ClassLoader::: class loader wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.Modifiers#process(VirtualMachineImpl, ReferenceTypeImpl)->Modifiers::: modifiers process
com.sun.tools.jdi.JDWP.ReferenceType.Modifiers#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: modifiers enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.Modifiers#waitForReply(VirtualMachineImpl, PacketStream)->Modifiers::: modifiers wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.Fields#process(VirtualMachineImpl, ReferenceTypeImpl)->Fields::: fields process
com.sun.tools.jdi.JDWP.ReferenceType.Fields#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: fields enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.Fields#waitForReply(VirtualMachineImpl, PacketStream)->Fields::: fields wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.Methods#process(VirtualMachineImpl, ReferenceTypeImpl)->Methods::: methods process
com.sun.tools.jdi.JDWP.ReferenceType.Methods#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: methods enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.Methods#waitForReply(VirtualMachineImpl, PacketStream)->Methods::: methods wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.GetValues#process(VirtualMachineImpl, ReferenceTypeImpl, Field[])->GetValues::: get values process
com.sun.tools.jdi.JDWP.ReferenceType.GetValues#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl, Field[])->PacketStream::: get values enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.GetValues#waitForReply(VirtualMachineImpl, PacketStream)->GetValues::: get values wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.SourceFile#process(VirtualMachineImpl, ReferenceTypeImpl)->SourceFile::: source file process
com.sun.tools.jdi.JDWP.ReferenceType.SourceFile#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: source file enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.SourceFile#waitForReply(VirtualMachineImpl, PacketStream)->SourceFile::: source file wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.NestedTypes#process(VirtualMachineImpl, ReferenceTypeImpl)->NestedTypes::: nested types process
com.sun.tools.jdi.JDWP.ReferenceType.NestedTypes#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: nested types enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.NestedTypes#waitForReply(VirtualMachineImpl, PacketStream)->NestedTypes::: nested types wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.Status#process(VirtualMachineImpl, ReferenceTypeImpl)->Status::: status process
com.sun.tools.jdi.JDWP.ReferenceType.Status#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: status enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.Status#waitForReply(VirtualMachineImpl, PacketStream)->Status::: status wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.Interfaces#process(VirtualMachineImpl, ReferenceTypeImpl)->Interfaces::: interfaces process
com.sun.tools.jdi.JDWP.ReferenceType.Interfaces#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: interfaces enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.Interfaces#waitForReply(VirtualMachineImpl, PacketStream)->Interfaces::: interfaces wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.ClassObject#process(VirtualMachineImpl, ReferenceTypeImpl)->ClassObject::: class object process
com.sun.tools.jdi.JDWP.ReferenceType.ClassObject#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: class object enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.ClassObject#waitForReply(VirtualMachineImpl, PacketStream)->ClassObject::: class object wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.SourceDebugExtension#process(VirtualMachineImpl, ReferenceTypeImpl)->SourceDebugExtension::: source debug extension process
com.sun.tools.jdi.JDWP.ReferenceType.SourceDebugExtension#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: source debug extension enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.SourceDebugExtension#waitForReply(VirtualMachineImpl, PacketStream)->SourceDebugExtension::: source debug extension wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.SignatureWithGeneric#process(VirtualMachineImpl, ReferenceTypeImpl)->SignatureWithGeneric::: signature with generic process
com.sun.tools.jdi.JDWP.ReferenceType.SignatureWithGeneric#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: signature with generic enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.SignatureWithGeneric#waitForReply(VirtualMachineImpl, PacketStream)->SignatureWithGeneric::: signature with generic wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.FieldsWithGeneric#process(VirtualMachineImpl, ReferenceTypeImpl)->FieldsWithGeneric::: fields with generic process
com.sun.tools.jdi.JDWP.ReferenceType.FieldsWithGeneric#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: fields with generic enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.FieldsWithGeneric#waitForReply(VirtualMachineImpl, PacketStream)->FieldsWithGeneric::: fields with generic wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.MethodsWithGeneric#process(VirtualMachineImpl, ReferenceTypeImpl)->MethodsWithGeneric::: methods with generic process
com.sun.tools.jdi.JDWP.ReferenceType.MethodsWithGeneric#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: methods with generic enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.MethodsWithGeneric#waitForReply(VirtualMachineImpl, PacketStream)->MethodsWithGeneric::: methods with generic wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.Instances#process(VirtualMachineImpl, ReferenceTypeImpl, int)->Instances::: instances process
com.sun.tools.jdi.JDWP.ReferenceType.Instances#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl, int)->PacketStream::: instances enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.Instances#waitForReply(VirtualMachineImpl, PacketStream)->Instances::: instances wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.ClassFileVersion#process(VirtualMachineImpl, ReferenceTypeImpl)->ClassFileVersion::: class file version process
com.sun.tools.jdi.JDWP.ReferenceType.ClassFileVersion#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: class file version enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.ClassFileVersion#waitForReply(VirtualMachineImpl, PacketStream)->ClassFileVersion::: class file version wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.ConstantPool#process(VirtualMachineImpl, ReferenceTypeImpl)->ConstantPool::: constant pool process
com.sun.tools.jdi.JDWP.ReferenceType.ConstantPool#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: constant pool enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.ConstantPool#waitForReply(VirtualMachineImpl, PacketStream)->ConstantPool::: constant pool wait for reply
com.sun.tools.jdi.JDWP.ReferenceType.Module#process(VirtualMachineImpl, ReferenceTypeImpl)->Module::: module process
com.sun.tools.jdi.JDWP.ReferenceType.Module#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl)->PacketStream::: module enqueue command
com.sun.tools.jdi.JDWP.ReferenceType.Module#waitForReply(VirtualMachineImpl, PacketStream)->Module::: module wait for reply
com.sun.tools.jdi.JDWP.ClassType.Superclass#process(VirtualMachineImpl, ClassTypeImpl)->Superclass::: superclass process
com.sun.tools.jdi.JDWP.ClassType.Superclass#enqueueCommand(VirtualMachineImpl, ClassTypeImpl)->PacketStream::: superclass enqueue command
com.sun.tools.jdi.JDWP.ClassType.Superclass#waitForReply(VirtualMachineImpl, PacketStream)->Superclass::: superclass wait for reply
com.sun.tools.jdi.JDWP.ClassType.SetValues#process(VirtualMachineImpl, ClassTypeImpl, FieldValue[])->SetValues::: set values process
com.sun.tools.jdi.JDWP.ClassType.SetValues#enqueueCommand(VirtualMachineImpl, ClassTypeImpl, FieldValue[])->PacketStream::: set values enqueue command
com.sun.tools.jdi.JDWP.ClassType.SetValues#waitForReply(VirtualMachineImpl, PacketStream)->SetValues::: set values wait for reply
com.sun.tools.jdi.JDWP.ClassType.InvokeMethod#process(VirtualMachineImpl, ClassTypeImpl, ThreadReferenceImpl, long, ValueImpl[], int)->InvokeMethod::: invoke method process
com.sun.tools.jdi.JDWP.ClassType.InvokeMethod#enqueueCommand(VirtualMachineImpl, ClassTypeImpl, ThreadReferenceImpl, long, ValueImpl[], int)->PacketStream::: invoke method enqueue command
com.sun.tools.jdi.JDWP.ClassType.InvokeMethod#waitForReply(VirtualMachineImpl, PacketStream)->InvokeMethod::: invoke method wait for reply
com.sun.tools.jdi.JDWP.ClassType.NewInstance#process(VirtualMachineImpl, ClassTypeImpl, ThreadReferenceImpl, long, ValueImpl[], int)->NewInstance::: new instance process
com.sun.tools.jdi.JDWP.ClassType.NewInstance#enqueueCommand(VirtualMachineImpl, ClassTypeImpl, ThreadReferenceImpl, long, ValueImpl[], int)->PacketStream::: new instance enqueue command
com.sun.tools.jdi.JDWP.ClassType.NewInstance#waitForReply(VirtualMachineImpl, PacketStream)->NewInstance::: new instance wait for reply
com.sun.tools.jdi.JDWP.ArrayType.NewInstance#process(VirtualMachineImpl, ArrayTypeImpl, int)->NewInstance::: new instance process
com.sun.tools.jdi.JDWP.ArrayType.NewInstance#enqueueCommand(VirtualMachineImpl, ArrayTypeImpl, int)->PacketStream::: new instance enqueue command
com.sun.tools.jdi.JDWP.ArrayType.NewInstance#waitForReply(VirtualMachineImpl, PacketStream)->NewInstance::: new instance wait for reply
com.sun.tools.jdi.JDWP.InterfaceType.InvokeMethod#process(VirtualMachineImpl, InterfaceTypeImpl, ThreadReferenceImpl, long, ValueImpl[], int)->InvokeMethod::: invoke method process
com.sun.tools.jdi.JDWP.InterfaceType.InvokeMethod#enqueueCommand(VirtualMachineImpl, InterfaceTypeImpl, ThreadReferenceImpl, long, ValueImpl[], int)->PacketStream::: invoke method enqueue command
com.sun.tools.jdi.JDWP.InterfaceType.InvokeMethod#waitForReply(VirtualMachineImpl, PacketStream)->InvokeMethod::: invoke method wait for reply
com.sun.tools.jdi.JDWP.Method.LineTable#process(VirtualMachineImpl, ReferenceTypeImpl, long)->LineTable::: line table process
com.sun.tools.jdi.JDWP.Method.LineTable#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl, long)->PacketStream::: line table enqueue command
com.sun.tools.jdi.JDWP.Method.LineTable#waitForReply(VirtualMachineImpl, PacketStream)->LineTable::: line table wait for reply
com.sun.tools.jdi.JDWP.Method.VariableTable#process(VirtualMachineImpl, ReferenceTypeImpl, long)->VariableTable::: variable table process
com.sun.tools.jdi.JDWP.Method.VariableTable#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl, long)->PacketStream::: variable table enqueue command
com.sun.tools.jdi.JDWP.Method.VariableTable#waitForReply(VirtualMachineImpl, PacketStream)->VariableTable::: variable table wait for reply
com.sun.tools.jdi.JDWP.Method.Bytecodes#process(VirtualMachineImpl, ReferenceTypeImpl, long)->Bytecodes::: bytecodes process
com.sun.tools.jdi.JDWP.Method.Bytecodes#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl, long)->PacketStream::: bytecodes enqueue command
com.sun.tools.jdi.JDWP.Method.Bytecodes#waitForReply(VirtualMachineImpl, PacketStream)->Bytecodes::: bytecodes wait for reply
com.sun.tools.jdi.JDWP.Method.IsObsolete#process(VirtualMachineImpl, ReferenceTypeImpl, long)->IsObsolete::: is obsolete process
com.sun.tools.jdi.JDWP.Method.IsObsolete#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl, long)->PacketStream::: is obsolete enqueue command
com.sun.tools.jdi.JDWP.Method.IsObsolete#waitForReply(VirtualMachineImpl, PacketStream)->IsObsolete::: is obsolete wait for reply
com.sun.tools.jdi.JDWP.Method.VariableTableWithGeneric#process(VirtualMachineImpl, ReferenceTypeImpl, long)->VariableTableWithGeneric::: variable table with generic process
com.sun.tools.jdi.JDWP.Method.VariableTableWithGeneric#enqueueCommand(VirtualMachineImpl, ReferenceTypeImpl, long)->PacketStream::: variable table with generic enqueue command
com.sun.tools.jdi.JDWP.Method.VariableTableWithGeneric#waitForReply(VirtualMachineImpl, PacketStream)->VariableTableWithGeneric::: variable table with generic wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.ReferenceType#process(VirtualMachineImpl, ObjectReferenceImpl)->ReferenceType::: reference type process
com.sun.tools.jdi.JDWP.ObjectReference.ReferenceType#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl)->PacketStream::: reference type enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.ReferenceType#waitForReply(VirtualMachineImpl, PacketStream)->ReferenceType::: reference type wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.GetValues#process(VirtualMachineImpl, ObjectReferenceImpl, Field[])->GetValues::: get values process
com.sun.tools.jdi.JDWP.ObjectReference.GetValues#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl, Field[])->PacketStream::: get values enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.GetValues#waitForReply(VirtualMachineImpl, PacketStream)->GetValues::: get values wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.SetValues#process(VirtualMachineImpl, ObjectReferenceImpl, FieldValue[])->SetValues::: set values process
com.sun.tools.jdi.JDWP.ObjectReference.SetValues#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl, FieldValue[])->PacketStream::: set values enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.SetValues#waitForReply(VirtualMachineImpl, PacketStream)->SetValues::: set values wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.MonitorInfo#process(VirtualMachineImpl, ObjectReferenceImpl)->MonitorInfo::: monitor info process
com.sun.tools.jdi.JDWP.ObjectReference.MonitorInfo#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl)->PacketStream::: monitor info enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.MonitorInfo#waitForReply(VirtualMachineImpl, PacketStream)->MonitorInfo::: monitor info wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.InvokeMethod#process(VirtualMachineImpl, ObjectReferenceImpl, ThreadReferenceImpl, ClassTypeImpl, long, ValueImpl[], int)->InvokeMethod::: invoke method process
com.sun.tools.jdi.JDWP.ObjectReference.InvokeMethod#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl, ThreadReferenceImpl, ClassTypeImpl, long, ValueImpl[], int)->PacketStream::: invoke method enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.InvokeMethod#waitForReply(VirtualMachineImpl, PacketStream)->InvokeMethod::: invoke method wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.DisableCollection#process(VirtualMachineImpl, ObjectReferenceImpl)->DisableCollection::: disable collection process
com.sun.tools.jdi.JDWP.ObjectReference.DisableCollection#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl)->PacketStream::: disable collection enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.DisableCollection#waitForReply(VirtualMachineImpl, PacketStream)->DisableCollection::: disable collection wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.EnableCollection#process(VirtualMachineImpl, ObjectReferenceImpl)->EnableCollection::: enable collection process
com.sun.tools.jdi.JDWP.ObjectReference.EnableCollection#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl)->PacketStream::: enable collection enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.EnableCollection#waitForReply(VirtualMachineImpl, PacketStream)->EnableCollection::: enable collection wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.IsCollected#process(VirtualMachineImpl, ObjectReferenceImpl)->IsCollected::: is collected process
com.sun.tools.jdi.JDWP.ObjectReference.IsCollected#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl)->PacketStream::: is collected enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.IsCollected#waitForReply(VirtualMachineImpl, PacketStream)->IsCollected::: is collected wait for reply
com.sun.tools.jdi.JDWP.ObjectReference.ReferringObjects#process(VirtualMachineImpl, ObjectReferenceImpl, int)->ReferringObjects::: referring objects process
com.sun.tools.jdi.JDWP.ObjectReference.ReferringObjects#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl, int)->PacketStream::: referring objects enqueue command
com.sun.tools.jdi.JDWP.ObjectReference.ReferringObjects#waitForReply(VirtualMachineImpl, PacketStream)->ReferringObjects::: referring objects wait for reply
com.sun.tools.jdi.JDWP.StringReference.Value#process(VirtualMachineImpl, ObjectReferenceImpl)->Value::: value process
com.sun.tools.jdi.JDWP.StringReference.Value#enqueueCommand(VirtualMachineImpl, ObjectReferenceImpl)->PacketStream::: value enqueue command
com.sun.tools.jdi.JDWP.StringReference.Value#waitForReply(VirtualMachineImpl, PacketStream)->Value::: value wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.Name#process(VirtualMachineImpl, ThreadReferenceImpl)->Name::: name process
com.sun.tools.jdi.JDWP.ThreadReference.Name#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: name enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.Name#waitForReply(VirtualMachineImpl, PacketStream)->Name::: name wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.Suspend#process(VirtualMachineImpl, ThreadReferenceImpl)->Suspend::: suspend process
com.sun.tools.jdi.JDWP.ThreadReference.Suspend#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: suspend enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.Suspend#waitForReply(VirtualMachineImpl, PacketStream)->Suspend::: suspend wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.Resume#process(VirtualMachineImpl, ThreadReferenceImpl)->Resume::: resume process
com.sun.tools.jdi.JDWP.ThreadReference.Resume#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: resume enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.Resume#waitForReply(VirtualMachineImpl, PacketStream)->Resume::: resume wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.Status#process(VirtualMachineImpl, ThreadReferenceImpl)->Status::: status process
com.sun.tools.jdi.JDWP.ThreadReference.Status#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: status enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.Status#waitForReply(VirtualMachineImpl, PacketStream)->Status::: status wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.ThreadGroup#process(VirtualMachineImpl, ThreadReferenceImpl)->ThreadGroup::: thread group process
com.sun.tools.jdi.JDWP.ThreadReference.ThreadGroup#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: thread group enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.ThreadGroup#waitForReply(VirtualMachineImpl, PacketStream)->ThreadGroup::: thread group wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.Frames#process(VirtualMachineImpl, ThreadReferenceImpl, int, int)->Frames::: frames process
com.sun.tools.jdi.JDWP.ThreadReference.Frames#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl, int, int)->PacketStream::: frames enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.Frames#waitForReply(VirtualMachineImpl, PacketStream)->Frames::: frames wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.FrameCount#process(VirtualMachineImpl, ThreadReferenceImpl)->FrameCount::: frame count process
com.sun.tools.jdi.JDWP.ThreadReference.FrameCount#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: frame count enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.FrameCount#waitForReply(VirtualMachineImpl, PacketStream)->FrameCount::: frame count wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.OwnedMonitors#process(VirtualMachineImpl, ThreadReferenceImpl)->OwnedMonitors::: owned monitors process
com.sun.tools.jdi.JDWP.ThreadReference.OwnedMonitors#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: owned monitors enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.OwnedMonitors#waitForReply(VirtualMachineImpl, PacketStream)->OwnedMonitors::: owned monitors wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.CurrentContendedMonitor#process(VirtualMachineImpl, ThreadReferenceImpl)->CurrentContendedMonitor::: current contended monitor process
com.sun.tools.jdi.JDWP.ThreadReference.CurrentContendedMonitor#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: current contended monitor enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.CurrentContendedMonitor#waitForReply(VirtualMachineImpl, PacketStream)->CurrentContendedMonitor::: current contended monitor wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.Stop#process(VirtualMachineImpl, ThreadReferenceImpl, ObjectReferenceImpl)->Stop::: stop process
com.sun.tools.jdi.JDWP.ThreadReference.Stop#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl, ObjectReferenceImpl)->PacketStream::: stop enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.Stop#waitForReply(VirtualMachineImpl, PacketStream)->Stop::: stop wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.Interrupt#process(VirtualMachineImpl, ThreadReferenceImpl)->Interrupt::: interrupt process
com.sun.tools.jdi.JDWP.ThreadReference.Interrupt#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: interrupt enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.Interrupt#waitForReply(VirtualMachineImpl, PacketStream)->Interrupt::: interrupt wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.SuspendCount#process(VirtualMachineImpl, ThreadReferenceImpl)->SuspendCount::: suspend count process
com.sun.tools.jdi.JDWP.ThreadReference.SuspendCount#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: suspend count enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.SuspendCount#waitForReply(VirtualMachineImpl, PacketStream)->SuspendCount::: suspend count wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.OwnedMonitorsStackDepthInfo#process(VirtualMachineImpl, ThreadReferenceImpl)->OwnedMonitorsStackDepthInfo::: owned monitors stack depth info process
com.sun.tools.jdi.JDWP.ThreadReference.OwnedMonitorsStackDepthInfo#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl)->PacketStream::: owned monitors stack depth info enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.OwnedMonitorsStackDepthInfo#waitForReply(VirtualMachineImpl, PacketStream)->OwnedMonitorsStackDepthInfo::: owned monitors stack depth info wait for reply
com.sun.tools.jdi.JDWP.ThreadReference.ForceEarlyReturn#process(VirtualMachineImpl, ThreadReferenceImpl, ValueImpl)->ForceEarlyReturn::: force early return process
com.sun.tools.jdi.JDWP.ThreadReference.ForceEarlyReturn#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl, ValueImpl)->PacketStream::: force early return enqueue command
com.sun.tools.jdi.JDWP.ThreadReference.ForceEarlyReturn#waitForReply(VirtualMachineImpl, PacketStream)->ForceEarlyReturn::: force early return wait for reply
com.sun.tools.jdi.JDWP.ThreadGroupReference.Name#process(VirtualMachineImpl, ThreadGroupReferenceImpl)->Name::: name process
com.sun.tools.jdi.JDWP.ThreadGroupReference.Name#enqueueCommand(VirtualMachineImpl, ThreadGroupReferenceImpl)->PacketStream::: name enqueue command
com.sun.tools.jdi.JDWP.ThreadGroupReference.Name#waitForReply(VirtualMachineImpl, PacketStream)->Name::: name wait for reply
com.sun.tools.jdi.JDWP.ThreadGroupReference.Parent#process(VirtualMachineImpl, ThreadGroupReferenceImpl)->Parent::: parent process
com.sun.tools.jdi.JDWP.ThreadGroupReference.Parent#enqueueCommand(VirtualMachineImpl, ThreadGroupReferenceImpl)->PacketStream::: parent enqueue command
com.sun.tools.jdi.JDWP.ThreadGroupReference.Parent#waitForReply(VirtualMachineImpl, PacketStream)->Parent::: parent wait for reply
com.sun.tools.jdi.JDWP.ThreadGroupReference.Children#process(VirtualMachineImpl, ThreadGroupReferenceImpl)->Children::: children process
com.sun.tools.jdi.JDWP.ThreadGroupReference.Children#enqueueCommand(VirtualMachineImpl, ThreadGroupReferenceImpl)->PacketStream::: children enqueue command
com.sun.tools.jdi.JDWP.ThreadGroupReference.Children#waitForReply(VirtualMachineImpl, PacketStream)->Children::: children wait for reply
com.sun.tools.jdi.JDWP.ArrayReference.Length#process(VirtualMachineImpl, ArrayReferenceImpl)->Length::: length process
com.sun.tools.jdi.JDWP.ArrayReference.Length#enqueueCommand(VirtualMachineImpl, ArrayReferenceImpl)->PacketStream::: length enqueue command
com.sun.tools.jdi.JDWP.ArrayReference.Length#waitForReply(VirtualMachineImpl, PacketStream)->Length::: length wait for reply
com.sun.tools.jdi.JDWP.ArrayReference.GetValues#process(VirtualMachineImpl, ArrayReferenceImpl, int, int)->GetValues::: get values process
com.sun.tools.jdi.JDWP.ArrayReference.GetValues#enqueueCommand(VirtualMachineImpl, ArrayReferenceImpl, int, int)->PacketStream::: get values enqueue command
com.sun.tools.jdi.JDWP.ArrayReference.GetValues#waitForReply(VirtualMachineImpl, PacketStream)->GetValues::: get values wait for reply
com.sun.tools.jdi.JDWP.ArrayReference.SetValues#process(VirtualMachineImpl, ArrayReferenceImpl, int, ValueImpl[])->SetValues::: set values process
com.sun.tools.jdi.JDWP.ArrayReference.SetValues#enqueueCommand(VirtualMachineImpl, ArrayReferenceImpl, int, ValueImpl[])->PacketStream::: set values enqueue command
com.sun.tools.jdi.JDWP.ArrayReference.SetValues#waitForReply(VirtualMachineImpl, PacketStream)->SetValues::: set values wait for reply
com.sun.tools.jdi.JDWP.ClassLoaderReference.VisibleClasses#process(VirtualMachineImpl, ClassLoaderReferenceImpl)->VisibleClasses::: visible classes process
com.sun.tools.jdi.JDWP.ClassLoaderReference.VisibleClasses#enqueueCommand(VirtualMachineImpl, ClassLoaderReferenceImpl)->PacketStream::: visible classes enqueue command
com.sun.tools.jdi.JDWP.ClassLoaderReference.VisibleClasses#waitForReply(VirtualMachineImpl, PacketStream)->VisibleClasses::: visible classes wait for reply
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ModifierCommon#write(PacketStream)->void::: modifier common write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.Count#create(int)->Modifier::: count create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.Count#write(PacketStream)->void::: count write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.Conditional#create(int)->Modifier::: conditional create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.Conditional#write(PacketStream)->void::: conditional write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ThreadOnly#create(ThreadReferenceImpl)->Modifier::: thread only create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ThreadOnly#write(PacketStream)->void::: thread only write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ClassOnly#create(ReferenceTypeImpl)->Modifier::: class only create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ClassOnly#write(PacketStream)->void::: class only write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ClassMatch#create(String)->Modifier::: class match create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ClassMatch#write(PacketStream)->void::: class match write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ClassExclude#create(String)->Modifier::: class exclude create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ClassExclude#write(PacketStream)->void::: class exclude write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.LocationOnly#create(Location)->Modifier::: location only create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.LocationOnly#write(PacketStream)->void::: location only write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ExceptionOnly#create(ReferenceTypeImpl, boolean, boolean)->Modifier::: exception only create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.ExceptionOnly#write(PacketStream)->void::: exception only write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.FieldOnly#create(ReferenceTypeImpl, long)->Modifier::: field only create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.FieldOnly#write(PacketStream)->void::: field only write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.Step#create(ThreadReferenceImpl, int, int)->Modifier::: step create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.Step#write(PacketStream)->void::: step write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.InstanceOnly#create(ObjectReferenceImpl)->Modifier::: instance only create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.InstanceOnly#write(PacketStream)->void::: instance only write
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.SourceNameMatch#create(String)->Modifier::: source name match create
com.sun.tools.jdi.JDWP.EventRequest.Set.Modifier.SourceNameMatch#write(PacketStream)->void::: source name match write
com.sun.tools.jdi.JDWP.EventRequest.Set#process(VirtualMachineImpl, byte, byte, Modifier[])->Set::: set process
com.sun.tools.jdi.JDWP.EventRequest.Set#enqueueCommand(VirtualMachineImpl, byte, byte, Modifier[])->PacketStream::: set enqueue command
com.sun.tools.jdi.JDWP.EventRequest.Set#waitForReply(VirtualMachineImpl, PacketStream)->Set::: set wait for reply
com.sun.tools.jdi.JDWP.EventRequest.Clear#process(VirtualMachineImpl, byte, int)->Clear::: clear process
com.sun.tools.jdi.JDWP.EventRequest.Clear#enqueueCommand(VirtualMachineImpl, byte, int)->PacketStream::: clear enqueue command
com.sun.tools.jdi.JDWP.EventRequest.Clear#waitForReply(VirtualMachineImpl, PacketStream)->Clear::: clear wait for reply
com.sun.tools.jdi.JDWP.EventRequest.ClearAllBreakpoints#process(VirtualMachineImpl)->ClearAllBreakpoints::: clear all breakpoints process
com.sun.tools.jdi.JDWP.EventRequest.ClearAllBreakpoints#enqueueCommand(VirtualMachineImpl)->PacketStream::: clear all breakpoints enqueue command
com.sun.tools.jdi.JDWP.EventRequest.ClearAllBreakpoints#waitForReply(VirtualMachineImpl, PacketStream)->ClearAllBreakpoints::: clear all breakpoints wait for reply
com.sun.tools.jdi.JDWP.StackFrame.GetValues#process(VirtualMachineImpl, ThreadReferenceImpl, long, SlotInfo[])->GetValues::: get values process
com.sun.tools.jdi.JDWP.StackFrame.GetValues#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl, long, SlotInfo[])->PacketStream::: get values enqueue command
com.sun.tools.jdi.JDWP.StackFrame.GetValues#waitForReply(VirtualMachineImpl, PacketStream)->GetValues::: get values wait for reply
com.sun.tools.jdi.JDWP.StackFrame.SetValues#process(VirtualMachineImpl, ThreadReferenceImpl, long, SlotInfo[])->SetValues::: set values process
com.sun.tools.jdi.JDWP.StackFrame.SetValues#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl, long, SlotInfo[])->PacketStream::: set values enqueue command
com.sun.tools.jdi.JDWP.StackFrame.SetValues#waitForReply(VirtualMachineImpl, PacketStream)->SetValues::: set values wait for reply
com.sun.tools.jdi.JDWP.StackFrame.ThisObject#process(VirtualMachineImpl, ThreadReferenceImpl, long)->ThisObject::: this object process
com.sun.tools.jdi.JDWP.StackFrame.ThisObject#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl, long)->PacketStream::: this object enqueue command
com.sun.tools.jdi.JDWP.StackFrame.ThisObject#waitForReply(VirtualMachineImpl, PacketStream)->ThisObject::: this object wait for reply
com.sun.tools.jdi.JDWP.StackFrame.PopFrames#process(VirtualMachineImpl, ThreadReferenceImpl, long)->PopFrames::: pop frames process
com.sun.tools.jdi.JDWP.StackFrame.PopFrames#enqueueCommand(VirtualMachineImpl, ThreadReferenceImpl, long)->PacketStream::: pop frames enqueue command
com.sun.tools.jdi.JDWP.StackFrame.PopFrames#waitForReply(VirtualMachineImpl, PacketStream)->PopFrames::: pop frames wait for reply
com.sun.tools.jdi.JDWP.ClassObjectReference.ReflectedType#process(VirtualMachineImpl, ClassObjectReferenceImpl)->ReflectedType::: reflected type process
com.sun.tools.jdi.JDWP.ClassObjectReference.ReflectedType#enqueueCommand(VirtualMachineImpl, ClassObjectReferenceImpl)->PacketStream::: reflected type enqueue command
com.sun.tools.jdi.JDWP.ClassObjectReference.ReflectedType#waitForReply(VirtualMachineImpl, PacketStream)->ReflectedType::: reflected type wait for reply
com.sun.tools.jdi.JDWP.ModuleReference.Name#process(VirtualMachineImpl, ModuleReferenceImpl)->Name::: name process
com.sun.tools.jdi.JDWP.ModuleReference.Name#enqueueCommand(VirtualMachineImpl, ModuleReferenceImpl)->PacketStream::: name enqueue command
com.sun.tools.jdi.JDWP.ModuleReference.Name#waitForReply(VirtualMachineImpl, PacketStream)->Name::: name wait for reply
com.sun.tools.jdi.JDWP.ModuleReference.ClassLoader#process(VirtualMachineImpl, ModuleReferenceImpl)->ClassLoader::: class loader process
com.sun.tools.jdi.JDWP.ModuleReference.ClassLoader#enqueueCommand(VirtualMachineImpl, ModuleReferenceImpl)->PacketStream::: class loader enqueue command
com.sun.tools.jdi.JDWP.ModuleReference.ClassLoader#waitForReply(VirtualMachineImpl, PacketStream)->ClassLoader::: class loader wait for reply
com.sun.tools.jdi.JDWP.Event.Composite.Events.EventsCommon#eventKind()->byte::: events common event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.VMStart#eventKind()->byte::: start event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.SingleStep#eventKind()->byte::: single step event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.Breakpoint#eventKind()->byte::: breakpoint event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.MethodEntry#eventKind()->byte::: method entry event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.MethodExit#eventKind()->byte::: method exit event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.MethodExitWithReturnValue#eventKind()->byte::: method exit with return value event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.MonitorContendedEnter#eventKind()->byte::: monitor contended enter event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.MonitorContendedEntered#eventKind()->byte::: monitor contended entered event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.MonitorWait#eventKind()->byte::: monitor wait event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.MonitorWaited#eventKind()->byte::: monitor waited event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.Exception#eventKind()->byte::: exception event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.ThreadStart#eventKind()->byte::: thread start event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.ThreadDeath#eventKind()->byte::: thread death event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.ClassPrepare#eventKind()->byte::: class prepare event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.ClassUnload#eventKind()->byte::: class unload event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.FieldAccess#eventKind()->byte::: field access event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.FieldModification#eventKind()->byte::: field modification event kind
com.sun.tools.jdi.JDWP.Event.Composite.Events.VMDeath#eventKind()->byte::: death event kind
com.sun.tools.jdi.JDWPException#errorCode()->short::: exception error code
com.sun.tools.jdi.JDWPException#toJDIException()->RuntimeException::: exception to exception
com.sun.tools.jdi.JNITypeParser#typeNameToSignature(String)->String::: type parser type name to signature
com.sun.tools.jdi.JNITypeParser#typeName()->String::: type parser type name
com.sun.tools.jdi.JNITypeParser#argumentTypeNames()->List::: type parser argument type names
com.sun.tools.jdi.JNITypeParser#signature()->String::: type parser signature
com.sun.tools.jdi.JNITypeParser#argumentSignatures()->List::: type parser argument signatures
com.sun.tools.jdi.JNITypeParser#dimensionCount()->int::: type parser dimension count
com.sun.tools.jdi.JNITypeParser#componentSignature(int)->String::: type parser component signature
com.sun.tools.jdi.LineInfo#liStratum()->String::: line info li stratum
com.sun.tools.jdi.LineInfo#liLineNumber()->int::: line info li line number
com.sun.tools.jdi.LineInfo#liSourceName()->String::: line info li source name
com.sun.tools.jdi.LineInfo#liSourcePath()->String::: line info li source path
com.sun.tools.jdi.LocalVariableImpl#equals(Object)->boolean::: local variable impl equals
com.sun.tools.jdi.LocalVariableImpl#hashCode()->int::: local variable impl hash code
com.sun.tools.jdi.LocalVariableImpl#compareTo(LocalVariable)->int::: local variable impl compare to
com.sun.tools.jdi.LocalVariableImpl#name()->String::: local variable impl name
com.sun.tools.jdi.LocalVariableImpl#typeName()->String::: local variable impl type name
com.sun.tools.jdi.LocalVariableImpl#type()->Type::: local variable impl type
com.sun.tools.jdi.LocalVariableImpl#findType(String)->Type::: local variable impl find type
com.sun.tools.jdi.LocalVariableImpl#signature()->String::: local variable impl signature
com.sun.tools.jdi.LocalVariableImpl#genericSignature()->String::: local variable impl generic signature
com.sun.tools.jdi.LocalVariableImpl#isVisible(StackFrame)->boolean::: local variable impl is visible
com.sun.tools.jdi.LocalVariableImpl#isArgument()->boolean::: local variable impl is argument
com.sun.tools.jdi.LocalVariableImpl#slot()->int::: local variable impl slot
com.sun.tools.jdi.LocalVariableImpl#hides(LocalVariable)->boolean::: local variable impl hides
com.sun.tools.jdi.LocalVariableImpl#toString()->String::: local variable impl to string
com.sun.tools.jdi.LocationImpl#equals(Object)->boolean::: location impl equals
com.sun.tools.jdi.LocationImpl#hashCode()->int::: location impl hash code
com.sun.tools.jdi.LocationImpl#compareTo(Location)->int::: location impl compare to
com.sun.tools.jdi.LocationImpl#declaringType()->ReferenceType::: location impl declaring type
com.sun.tools.jdi.LocationImpl#method()->Method::: location impl method
com.sun.tools.jdi.LocationImpl#codeIndex()->long::: location impl code index
com.sun.tools.jdi.LocationImpl#getBaseLineInfo(SDE.Stratum)->LineInfo::: location impl get base line info
com.sun.tools.jdi.LocationImpl#getLineInfo(SDE.Stratum)->LineInfo::: location impl get line info
com.sun.tools.jdi.LocationImpl#addStratumLineInfo(LineInfo)->void::: location impl add stratum line info
com.sun.tools.jdi.LocationImpl#addBaseLineInfo(LineInfo)->void::: location impl add base line info
com.sun.tools.jdi.LocationImpl#sourceName()->String::: location impl source name
com.sun.tools.jdi.LocationImpl#sourceName(String)->String::: location impl source name
com.sun.tools.jdi.LocationImpl#sourceName(SDE.Stratum)->String::: location impl source name
com.sun.tools.jdi.LocationImpl#sourcePath()->String::: location impl source path
com.sun.tools.jdi.LocationImpl#sourcePath(String)->String::: location impl source path
com.sun.tools.jdi.LocationImpl#sourcePath(SDE.Stratum)->String::: location impl source path
com.sun.tools.jdi.LocationImpl#lineNumber()->int::: location impl line number
com.sun.tools.jdi.LocationImpl#lineNumber(String)->int::: location impl line number
com.sun.tools.jdi.LocationImpl#lineNumber(SDE.Stratum)->int::: location impl line number
com.sun.tools.jdi.LocationImpl#toString()->String::: location impl to string
com.sun.tools.jdi.LongTypeImpl#signature()->String::: long type impl signature
com.sun.tools.jdi.LongTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: long type impl convert
com.sun.tools.jdi.LongValueImpl#equals(Object)->boolean::: long value impl equals
com.sun.tools.jdi.LongValueImpl#hashCode()->int::: long value impl hash code
com.sun.tools.jdi.LongValueImpl#compareTo(LongValue)->int::: long value impl compare to
com.sun.tools.jdi.LongValueImpl#type()->Type::: long value impl type
com.sun.tools.jdi.LongValueImpl#value()->long::: long value impl value
com.sun.tools.jdi.LongValueImpl#booleanValue()->boolean::: long value impl boolean value
com.sun.tools.jdi.LongValueImpl#byteValue()->byte::: long value impl byte value
com.sun.tools.jdi.LongValueImpl#charValue()->char::: long value impl char value
com.sun.tools.jdi.LongValueImpl#shortValue()->short::: long value impl short value
com.sun.tools.jdi.LongValueImpl#intValue()->int::: long value impl int value
com.sun.tools.jdi.LongValueImpl#longValue()->long::: long value impl long value
com.sun.tools.jdi.LongValueImpl#floatValue()->float::: long value impl float value
com.sun.tools.jdi.LongValueImpl#doubleValue()->double::: long value impl double value
com.sun.tools.jdi.LongValueImpl#checkedByteValue()->byte::: long value impl checked byte value
com.sun.tools.jdi.LongValueImpl#checkedCharValue()->char::: long value impl checked char value
com.sun.tools.jdi.LongValueImpl#checkedShortValue()->short::: long value impl checked short value
com.sun.tools.jdi.LongValueImpl#checkedIntValue()->int::: long value impl checked int value
com.sun.tools.jdi.LongValueImpl#toString()->String::: long value impl to string
com.sun.tools.jdi.LongValueImpl#typeValueKey()->byte::: long value impl type value key
com.sun.tools.jdi.MethodImpl#argSlotCount()->int::: method impl arg slot count
com.sun.tools.jdi.MethodImpl#allLineLocations(SDE.Stratum, String)->List::: method impl all line locations
com.sun.tools.jdi.MethodImpl#locationsOfLine(SDE.Stratum, String, int)->List::: method impl locations of line
com.sun.tools.jdi.MethodImpl#createMethodImpl(VirtualMachine, ReferenceTypeImpl, long, String, String, String, int)->MethodImpl::: method impl create method impl
com.sun.tools.jdi.MethodImpl#equals(Object)->boolean::: method impl equals
com.sun.tools.jdi.MethodImpl#hashCode()->int::: method impl hash code
com.sun.tools.jdi.MethodImpl#allLineLocations()->List::: method impl all line locations
com.sun.tools.jdi.MethodImpl#allLineLocations(String, String)->List::: method impl all line locations
com.sun.tools.jdi.MethodImpl#locationsOfLine(int)->List::: method impl locations of line
com.sun.tools.jdi.MethodImpl#locationsOfLine(String, String, int)->List::: method impl locations of line
com.sun.tools.jdi.MethodImpl#codeIndexToLineInfo(SDE.Stratum, long)->LineInfo::: method impl code index to line info
com.sun.tools.jdi.MethodImpl#returnTypeName()->String::: method impl return type name
com.sun.tools.jdi.MethodImpl#returnType()->Type::: method impl return type
com.sun.tools.jdi.MethodImpl#findType(String)->Type::: method impl find type
com.sun.tools.jdi.MethodImpl#argumentTypeNames()->List::: method impl argument type names
com.sun.tools.jdi.MethodImpl#argumentSignatures()->List::: method impl argument signatures
com.sun.tools.jdi.MethodImpl#argumentType(int)->Type::: method impl argument type
com.sun.tools.jdi.MethodImpl#argumentTypes()->List::: method impl argument types
com.sun.tools.jdi.MethodImpl#compareTo(Method)->int::: method impl compare to
com.sun.tools.jdi.MethodImpl#isAbstract()->boolean::: method impl is abstract
com.sun.tools.jdi.MethodImpl#isDefault()->boolean::: method impl is default
com.sun.tools.jdi.MethodImpl#isSynchronized()->boolean::: method impl is synchronized
com.sun.tools.jdi.MethodImpl#isNative()->boolean::: method impl is native
com.sun.tools.jdi.MethodImpl#isVarArgs()->boolean::: method impl is var args
com.sun.tools.jdi.MethodImpl#isBridge()->boolean::: method impl is bridge
com.sun.tools.jdi.MethodImpl#isConstructor()->boolean::: method impl is constructor
com.sun.tools.jdi.MethodImpl#isStaticInitializer()->boolean::: method impl is static initializer
com.sun.tools.jdi.MethodImpl#isObsolete()->boolean::: method impl is obsolete
com.sun.tools.jdi.MethodImpl.ReturnContainer#type()->Type::: return container type
com.sun.tools.jdi.MethodImpl.ReturnContainer#typeName()->String::: return container type name
com.sun.tools.jdi.MethodImpl.ReturnContainer#signature()->String::: return container signature
com.sun.tools.jdi.MethodImpl.ReturnContainer#findType(String)->Type::: return container find type
com.sun.tools.jdi.MethodImpl#getReturnValueContainer()->ReturnContainer::: method impl get return value container
com.sun.tools.jdi.MethodImpl.ArgumentContainer#type()->Type::: argument container type
com.sun.tools.jdi.MethodImpl.ArgumentContainer#typeName()->String::: argument container type name
com.sun.tools.jdi.MethodImpl.ArgumentContainer#signature()->String::: argument container signature
com.sun.tools.jdi.MethodImpl.ArgumentContainer#findType(String)->Type::: argument container find type
com.sun.tools.jdi.MethodImpl#handleVarArgs(List)->void::: method impl handle var args
com.sun.tools.jdi.MethodImpl#validateAndPrepareArgumentsForInvoke(List)->List::: method impl validate and prepare arguments for invoke
com.sun.tools.jdi.MethodImpl#toString()->String::: method impl to string
com.sun.tools.jdi.MirrorImpl#virtualMachine()->VirtualMachine::: mirror impl virtual machine
com.sun.tools.jdi.MirrorImpl#equals(Object)->boolean::: mirror impl equals
com.sun.tools.jdi.MirrorImpl#hashCode()->int::: mirror impl hash code
com.sun.tools.jdi.MirrorImpl#validateMirror(Mirror)->void:::Throw NullPointerException on null mirror
com.sun.tools.jdi.MirrorImpl#validateMirrorOrNull(Mirror)->void:::Allow null mirror
com.sun.tools.jdi.MirrorImpl#validateMirrors(Collection)->void:::Throw NullPointerException on null mirrors
com.sun.tools.jdi.MirrorImpl#validateMirrorsOrNulls(Collection)->void:::Allow null mirrors
com.sun.tools.jdi.ModuleReferenceImpl#description()->String::: module reference impl description
com.sun.tools.jdi.ModuleReferenceImpl#name()->String::: module reference impl name
com.sun.tools.jdi.ModuleReferenceImpl#classLoader()->ClassLoaderReference::: module reference impl class loader
com.sun.tools.jdi.MonitorInfoImpl#threadResumable(ThreadAction)->boolean::: monitor info impl thread resumable
com.sun.tools.jdi.MonitorInfoImpl#monitor()->ObjectReference::: monitor info impl monitor
com.sun.tools.jdi.MonitorInfoImpl#stackDepth()->int::: monitor info impl stack depth
com.sun.tools.jdi.MonitorInfoImpl#thread()->ThreadReference::: monitor info impl thread
com.sun.tools.jdi.NonConcreteMethodImpl#location()->Location::: non concrete method impl location
com.sun.tools.jdi.NonConcreteMethodImpl#allLineLocations(String, String)->List::: non concrete method impl all line locations
com.sun.tools.jdi.NonConcreteMethodImpl#allLineLocations(SDE.Stratum, String)->List::: non concrete method impl all line locations
com.sun.tools.jdi.NonConcreteMethodImpl#locationsOfLine(String, String, int)->List::: non concrete method impl locations of line
com.sun.tools.jdi.NonConcreteMethodImpl#locationsOfLine(SDE.Stratum, String, int)->List::: non concrete method impl locations of line
com.sun.tools.jdi.NonConcreteMethodImpl#locationOfCodeIndex(long)->Location::: non concrete method impl location of code index
com.sun.tools.jdi.NonConcreteMethodImpl#variables()->List::: non concrete method impl variables
com.sun.tools.jdi.NonConcreteMethodImpl#variablesByName(String)->List::: non concrete method impl variables by name
com.sun.tools.jdi.NonConcreteMethodImpl#arguments()->List::: non concrete method impl arguments
com.sun.tools.jdi.NonConcreteMethodImpl#bytecodes()->byte[]::: non concrete method impl bytecodes
com.sun.tools.jdi.NonConcreteMethodImpl#argSlotCount()->int::: non concrete method impl arg slot count
com.sun.tools.jdi.ObjectReferenceImpl#newCache()->Cache::: object reference impl new cache
com.sun.tools.jdi.ObjectReferenceImpl#getCache()->Cache::: object reference impl get cache
com.sun.tools.jdi.ObjectReferenceImpl#invokableReferenceType(Method)->ClassTypeImpl::: object reference impl invokable reference type
com.sun.tools.jdi.ObjectReferenceImpl#description()->String::: object reference impl description
com.sun.tools.jdi.ObjectReferenceImpl#vmSuspended(VMAction)->boolean::: object reference impl vm suspended
com.sun.tools.jdi.ObjectReferenceImpl#vmNotSuspended(VMAction)->boolean::: object reference impl vm not suspended
com.sun.tools.jdi.ObjectReferenceImpl#equals(Object)->boolean::: object reference impl equals
com.sun.tools.jdi.ObjectReferenceImpl#hashCode()->int::: object reference impl hash code
com.sun.tools.jdi.ObjectReferenceImpl#type()->Type::: object reference impl type
com.sun.tools.jdi.ObjectReferenceImpl#referenceType()->ReferenceType::: object reference impl reference type
com.sun.tools.jdi.ObjectReferenceImpl#getValue(Field)->Value::: object reference impl get value
com.sun.tools.jdi.ObjectReferenceImpl#getValues(List)->Map::: object reference impl get values
com.sun.tools.jdi.ObjectReferenceImpl#setValue(Field, Value)->void::: object reference impl set value
com.sun.tools.jdi.ObjectReferenceImpl#validateMethodInvocation(Method, int)->void::: object reference impl validate method invocation
com.sun.tools.jdi.ObjectReferenceImpl#validateClassMethodInvocation(Method, int)->void::: object reference impl validate class method invocation
com.sun.tools.jdi.ObjectReferenceImpl#validateIfaceMethodInvocation(Method, int)->void::: object reference impl validate iface method invocation
com.sun.tools.jdi.ObjectReferenceImpl#sendInvokeCommand(ThreadReferenceImpl, ClassTypeImpl, MethodImpl, ValueImpl[], int)->PacketStream::: object reference impl send invoke command
com.sun.tools.jdi.ObjectReferenceImpl#invokeMethod(ThreadReference, Method, List, int)->Value::: object reference impl invoke method
com.sun.tools.jdi.ObjectReferenceImpl#disableCollection()->void::: object reference impl disable collection
com.sun.tools.jdi.ObjectReferenceImpl#enableCollection()->void::: object reference impl enable collection
com.sun.tools.jdi.ObjectReferenceImpl#isCollected()->boolean::: object reference impl is collected
com.sun.tools.jdi.ObjectReferenceImpl#uniqueID()->long::: object reference impl unique d
com.sun.tools.jdi.ObjectReferenceImpl#jdwpMonitorInfo()->JDWP.ObjectReference.MonitorInfo::: object reference impl jdwp monitor info
com.sun.tools.jdi.ObjectReferenceImpl#waitingThreads()->List::: object reference impl waiting threads
com.sun.tools.jdi.ObjectReferenceImpl#owningThread()->ThreadReference::: object reference impl owning thread
com.sun.tools.jdi.ObjectReferenceImpl#entryCount()->int::: object reference impl entry count
com.sun.tools.jdi.ObjectReferenceImpl#referringObjects(long)->List::: object reference impl referring objects
com.sun.tools.jdi.ObjectReferenceImpl#ref()->long::: object reference impl ref
com.sun.tools.jdi.ObjectReferenceImpl#isClassObject()->boolean::: object reference impl is class object
com.sun.tools.jdi.ObjectReferenceImpl#prepareForAssignmentTo(ValueContainer)->ValueImpl::: object reference impl prepare for assignment to
com.sun.tools.jdi.ObjectReferenceImpl#validateAssignment(ValueContainer)->void::: object reference impl validate assignment
com.sun.tools.jdi.ObjectReferenceImpl#toString()->String::: object reference impl to string
com.sun.tools.jdi.ObjectReferenceImpl#typeValueKey()->byte::: object reference impl type value key
com.sun.tools.jdi.ObsoleteMethodImpl#isObsolete()->boolean::: obsolete method impl is obsolete
com.sun.tools.jdi.ObsoleteMethodImpl#returnTypeName()->String::: obsolete method impl return type name
com.sun.tools.jdi.ObsoleteMethodImpl#returnType()->Type::: obsolete method impl return type
com.sun.tools.jdi.ObsoleteMethodImpl#argumentTypeNames()->List::: obsolete method impl argument type names
com.sun.tools.jdi.ObsoleteMethodImpl#argumentSignatures()->List::: obsolete method impl argument signatures
com.sun.tools.jdi.ObsoleteMethodImpl#argumentType(int)->Type::: obsolete method impl argument type
com.sun.tools.jdi.ObsoleteMethodImpl#argumentTypes()->List::: obsolete method impl argument types
com.sun.tools.jdi.Packet#toByteArray()->byte[]:::Return byte representation of the packet
com.sun.tools.jdi.Packet#fromByteArray(byte[])->Packet:::Create a packet from its byte array representation
com.sun.tools.jdi.PacketStream#id()->int::: packet stream id
com.sun.tools.jdi.PacketStream#send()->void::: packet stream send
com.sun.tools.jdi.PacketStream#waitForReply()->void::: packet stream wait for reply
com.sun.tools.jdi.PacketStream#writeBoolean(boolean)->void::: packet stream write boolean
com.sun.tools.jdi.PacketStream#writeByte(byte)->void::: packet stream write byte
com.sun.tools.jdi.PacketStream#writeChar(char)->void::: packet stream write char
com.sun.tools.jdi.PacketStream#writeShort(short)->void::: packet stream write short
com.sun.tools.jdi.PacketStream#writeInt(int)->void::: packet stream write int
com.sun.tools.jdi.PacketStream#writeLong(long)->void::: packet stream write long
com.sun.tools.jdi.PacketStream#writeFloat(float)->void::: packet stream write float
com.sun.tools.jdi.PacketStream#writeDouble(double)->void::: packet stream write double
com.sun.tools.jdi.PacketStream#writeID(int, long)->void::: packet stream write d
com.sun.tools.jdi.PacketStream#writeNullObjectRef()->void::: packet stream write null object ref
com.sun.tools.jdi.PacketStream#writeObjectRef(long)->void::: packet stream write object ref
com.sun.tools.jdi.PacketStream#writeClassRef(long)->void::: packet stream write class ref
com.sun.tools.jdi.PacketStream#writeMethodRef(long)->void::: packet stream write method ref
com.sun.tools.jdi.PacketStream#writeModuleRef(long)->void::: packet stream write module ref
com.sun.tools.jdi.PacketStream#writeFieldRef(long)->void::: packet stream write field ref
com.sun.tools.jdi.PacketStream#writeFrameRef(long)->void::: packet stream write frame ref
com.sun.tools.jdi.PacketStream#writeByteArray(byte[])->void::: packet stream write byte array
com.sun.tools.jdi.PacketStream#writeString(String)->void::: packet stream write string
com.sun.tools.jdi.PacketStream#writeLocation(Location)->void::: packet stream write location
com.sun.tools.jdi.PacketStream#writeValue(Value)->void::: packet stream write value
com.sun.tools.jdi.PacketStream#writeValueChecked(Value)->void::: packet stream write value checked
com.sun.tools.jdi.PacketStream#writeUntaggedValue(Value)->void::: packet stream write untagged value
com.sun.tools.jdi.PacketStream#writeUntaggedValueChecked(Value)->void::: packet stream write untagged value checked
com.sun.tools.jdi.PacketStream#readByte()->byte:::Read byte represented as one bytes.
com.sun.tools.jdi.PacketStream#readBoolean()->boolean:::Read boolean represented as one byte.
com.sun.tools.jdi.PacketStream#readChar()->char:::Read char represented as two bytes.
com.sun.tools.jdi.PacketStream#readShort()->short:::Read short represented as two bytes.
com.sun.tools.jdi.PacketStream#readInt()->int:::Read int represented as four bytes.
com.sun.tools.jdi.PacketStream#readLong()->long:::Read long represented as eight bytes.
com.sun.tools.jdi.PacketStream#readFloat()->float:::Read float represented as four bytes.
com.sun.tools.jdi.PacketStream#readDouble()->double:::Read double represented as eight bytes.
com.sun.tools.jdi.PacketStream#readString()->String:::Read string represented as four byte length followed by characters of the string.
com.sun.tools.jdi.PacketStream#readObjectRef()->long:::Read object represented as vm specific byte sequence.
com.sun.tools.jdi.PacketStream#readClassRef()->long::: packet stream read class ref
com.sun.tools.jdi.PacketStream#readTaggedObjectReference()->ObjectReferenceImpl::: packet stream read tagged object reference
com.sun.tools.jdi.PacketStream#readObjectReference()->ObjectReferenceImpl::: packet stream read object reference
com.sun.tools.jdi.PacketStream#readStringReference()->StringReferenceImpl::: packet stream read string reference
com.sun.tools.jdi.PacketStream#readArrayReference()->ArrayReferenceImpl::: packet stream read array reference
com.sun.tools.jdi.PacketStream#readThreadReference()->ThreadReferenceImpl::: packet stream read thread reference
com.sun.tools.jdi.PacketStream#readThreadGroupReference()->ThreadGroupReferenceImpl::: packet stream read thread group reference
com.sun.tools.jdi.PacketStream#readClassLoaderReference()->ClassLoaderReferenceImpl::: packet stream read class loader reference
com.sun.tools.jdi.PacketStream#readClassObjectReference()->ClassObjectReferenceImpl::: packet stream read class object reference
com.sun.tools.jdi.PacketStream#readReferenceType()->ReferenceTypeImpl::: packet stream read reference type
com.sun.tools.jdi.PacketStream#readModule()->ModuleReferenceImpl::: packet stream read module
com.sun.tools.jdi.PacketStream#readMethodRef()->long:::Read method reference represented as vm specific byte sequence.
com.sun.tools.jdi.PacketStream#readModuleRef()->long:::Read module reference represented as vm specific byte sequence.
com.sun.tools.jdi.PacketStream#readFieldRef()->long:::Read field reference represented as vm specific byte sequence.
com.sun.tools.jdi.PacketStream#readField()->Field:::Read field represented as vm specific byte sequence.
com.sun.tools.jdi.PacketStream#readFrameRef()->long:::Read frame represented as vm specific byte sequence.
com.sun.tools.jdi.PacketStream#readValue()->ValueImpl:::Read a value, first byte describes type of value to read.
com.sun.tools.jdi.PacketStream#readUntaggedValue(byte)->ValueImpl::: packet stream read untagged value
com.sun.tools.jdi.PacketStream#readLocation()->Location:::Read location represented as vm specific byte sequence.
com.sun.tools.jdi.PacketStream#readByteArray(int)->byte[]::: packet stream read byte array
com.sun.tools.jdi.PacketStream#readArrayRegion()->List::: packet stream read array region
com.sun.tools.jdi.PacketStream#writeArrayRegion(List)->void::: packet stream write array region
com.sun.tools.jdi.PacketStream#skipBytes(int)->int::: packet stream skip bytes
com.sun.tools.jdi.PacketStream#command()->byte::: packet stream command
com.sun.tools.jdi.PacketStream#isObjectTag(byte)->boolean::: packet stream is object tag
com.sun.tools.jdi.PrimitiveTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: primitive type impl convert
com.sun.tools.jdi.PrimitiveTypeImpl#toString()->String::: primitive type impl to string
com.sun.tools.jdi.PrimitiveValueImpl#booleanValue()->boolean::: primitive value impl boolean value
com.sun.tools.jdi.PrimitiveValueImpl#byteValue()->byte::: primitive value impl byte value
com.sun.tools.jdi.PrimitiveValueImpl#charValue()->char::: primitive value impl char value
com.sun.tools.jdi.PrimitiveValueImpl#shortValue()->short::: primitive value impl short value
com.sun.tools.jdi.PrimitiveValueImpl#intValue()->int::: primitive value impl int value
com.sun.tools.jdi.PrimitiveValueImpl#longValue()->long::: primitive value impl long value
com.sun.tools.jdi.PrimitiveValueImpl#floatValue()->float::: primitive value impl float value
com.sun.tools.jdi.PrimitiveValueImpl#doubleValue()->double::: primitive value impl double value
com.sun.tools.jdi.PrimitiveValueImpl#checkedByteValue()->byte::: primitive value impl checked byte value
com.sun.tools.jdi.PrimitiveValueImpl#checkedCharValue()->char::: primitive value impl checked char value
com.sun.tools.jdi.PrimitiveValueImpl#checkedShortValue()->short::: primitive value impl checked short value
com.sun.tools.jdi.PrimitiveValueImpl#checkedIntValue()->int::: primitive value impl checked int value
com.sun.tools.jdi.PrimitiveValueImpl#checkedLongValue()->long::: primitive value impl checked long value
com.sun.tools.jdi.PrimitiveValueImpl#checkedFloatValue()->float::: primitive value impl checked float value
com.sun.tools.jdi.PrimitiveValueImpl#checkedBooleanValue()->boolean::: primitive value impl checked boolean value
com.sun.tools.jdi.PrimitiveValueImpl#checkedDoubleValue()->double::: primitive value impl checked double value
com.sun.tools.jdi.PrimitiveValueImpl#prepareForAssignmentTo(ValueContainer)->ValueImpl::: primitive value impl prepare for assignment to
com.sun.tools.jdi.PrimitiveValueImpl#convertForAssignmentTo(ValueContainer)->ValueImpl::: primitive value impl convert for assignment to
com.sun.tools.jdi.ProcessAttachingConnector#attach(Map)->VirtualMachine:::Attach to a target VM using the specified address and Connector arguments.
com.sun.tools.jdi.ProcessAttachingConnector#name()->String::: process attaching connector name
com.sun.tools.jdi.ProcessAttachingConnector#description()->String::: process attaching connector description
com.sun.tools.jdi.ProcessAttachingConnector#transport()->Transport::: process attaching connector transport
com.sun.tools.jdi.RawCommandLineLauncher#transportService()->TransportService::: raw command line launcher transport service
com.sun.tools.jdi.RawCommandLineLauncher#transport()->Transport::: raw command line launcher transport
com.sun.tools.jdi.RawCommandLineLauncher#launch(Map)->VirtualMachine::: raw command line launcher launch
com.sun.tools.jdi.RawCommandLineLauncher#name()->String::: raw command line launcher name
com.sun.tools.jdi.RawCommandLineLauncher#description()->String::: raw command line launcher description
com.sun.tools.jdi.ReferenceTypeImpl#noticeRedefineClass()->void::: reference type impl notice redefine class
com.sun.tools.jdi.ReferenceTypeImpl#getMethodMirror(long)->Method::: reference type impl get method mirror
com.sun.tools.jdi.ReferenceTypeImpl#getFieldMirror(long)->Field::: reference type impl get field mirror
com.sun.tools.jdi.ReferenceTypeImpl#equals(Object)->boolean::: reference type impl equals
com.sun.tools.jdi.ReferenceTypeImpl#hashCode()->int::: reference type impl hash code
com.sun.tools.jdi.ReferenceTypeImpl#compareTo(ReferenceType)->int::: reference type impl compare to
com.sun.tools.jdi.ReferenceTypeImpl#signature()->String::: reference type impl signature
com.sun.tools.jdi.ReferenceTypeImpl#genericSignature()->String::: reference type impl generic signature
com.sun.tools.jdi.ReferenceTypeImpl#classLoader()->ClassLoaderReference::: reference type impl class loader
com.sun.tools.jdi.ReferenceTypeImpl#module()->ModuleReference::: reference type impl module
com.sun.tools.jdi.ReferenceTypeImpl#isPublic()->boolean::: reference type impl is public
com.sun.tools.jdi.ReferenceTypeImpl#isProtected()->boolean::: reference type impl is protected
com.sun.tools.jdi.ReferenceTypeImpl#isPrivate()->boolean::: reference type impl is private
com.sun.tools.jdi.ReferenceTypeImpl#isPackagePrivate()->boolean::: reference type impl is package private
com.sun.tools.jdi.ReferenceTypeImpl#isAbstract()->boolean::: reference type impl is abstract
com.sun.tools.jdi.ReferenceTypeImpl#isFinal()->boolean::: reference type impl is final
com.sun.tools.jdi.ReferenceTypeImpl#isStatic()->boolean::: reference type impl is static
com.sun.tools.jdi.ReferenceTypeImpl#isPrepared()->boolean::: reference type impl is prepared
com.sun.tools.jdi.ReferenceTypeImpl#isVerified()->boolean::: reference type impl is verified
com.sun.tools.jdi.ReferenceTypeImpl#isInitialized()->boolean::: reference type impl is initialized
com.sun.tools.jdi.ReferenceTypeImpl#failedToInitialize()->boolean::: reference type impl failed to initialize
com.sun.tools.jdi.ReferenceTypeImpl#fields()->List::: reference type impl fields
com.sun.tools.jdi.ReferenceTypeImpl#inheritedTypes()->List::: reference type impl inherited types
com.sun.tools.jdi.ReferenceTypeImpl#addVisibleFields(List, Map, List)->void::: reference type impl add visible fields
com.sun.tools.jdi.ReferenceTypeImpl#visibleFields()->List::: reference type impl visible fields
com.sun.tools.jdi.ReferenceTypeImpl#addAllFields(List, Set)->void::: reference type impl add all fields
com.sun.tools.jdi.ReferenceTypeImpl#allFields()->List::: reference type impl all fields
com.sun.tools.jdi.ReferenceTypeImpl#fieldByName(String)->Field::: reference type impl field by name
com.sun.tools.jdi.ReferenceTypeImpl#methods()->List::: reference type impl methods
com.sun.tools.jdi.ReferenceTypeImpl#addToMethodMap(Map, List)->void::: reference type impl add to method map
com.sun.tools.jdi.ReferenceTypeImpl#addVisibleMethods(Map, Set)->void::: reference type impl add visible methods
com.sun.tools.jdi.ReferenceTypeImpl#visibleMethods()->List::: reference type impl visible methods
com.sun.tools.jdi.ReferenceTypeImpl#allMethods()->List::: reference type impl all methods
com.sun.tools.jdi.ReferenceTypeImpl#methodsByName(String)->List::: reference type impl methods by name
com.sun.tools.jdi.ReferenceTypeImpl#methodsByName(String, String)->List::: reference type impl methods by name
com.sun.tools.jdi.ReferenceTypeImpl#getInterfaces()->List::: reference type impl get interfaces
com.sun.tools.jdi.ReferenceTypeImpl#nestedTypes()->List::: reference type impl nested types
com.sun.tools.jdi.ReferenceTypeImpl#getValue(Field)->Value::: reference type impl get value
com.sun.tools.jdi.ReferenceTypeImpl#validateFieldAccess(Field)->void::: reference type impl validate field access
com.sun.tools.jdi.ReferenceTypeImpl#validateFieldSet(Field)->void::: reference type impl validate field set
com.sun.tools.jdi.ReferenceTypeImpl#getValues(List)->Map:::Returns a map of field values
com.sun.tools.jdi.ReferenceTypeImpl#classObject()->ClassObjectReference::: reference type impl class object
com.sun.tools.jdi.ReferenceTypeImpl#stratum(String)->SDE.Stratum::: reference type impl stratum
com.sun.tools.jdi.ReferenceTypeImpl#sourceName()->String::: reference type impl source name
com.sun.tools.jdi.ReferenceTypeImpl#sourceNames(String)->List::: reference type impl source names
com.sun.tools.jdi.ReferenceTypeImpl#sourcePaths(String)->List::: reference type impl source paths
com.sun.tools.jdi.ReferenceTypeImpl#baseSourceName()->String::: reference type impl base source name
com.sun.tools.jdi.ReferenceTypeImpl#baseSourcePath()->String::: reference type impl base source path
com.sun.tools.jdi.ReferenceTypeImpl#baseSourceDir()->String::: reference type impl base source dir
com.sun.tools.jdi.ReferenceTypeImpl#sourceDebugExtension()->String::: reference type impl source debug extension
com.sun.tools.jdi.ReferenceTypeImpl#availableStrata()->List::: reference type impl available strata
com.sun.tools.jdi.ReferenceTypeImpl#defaultStratum()->String:::Always returns non-null stratumID
com.sun.tools.jdi.ReferenceTypeImpl#modifiers()->int::: reference type impl modifiers
com.sun.tools.jdi.ReferenceTypeImpl#allLineLocations()->List::: reference type impl all line locations
com.sun.tools.jdi.ReferenceTypeImpl#allLineLocations(String, String)->List::: reference type impl all line locations
com.sun.tools.jdi.ReferenceTypeImpl#locationsOfLine(int)->List::: reference type impl locations of line
com.sun.tools.jdi.ReferenceTypeImpl#locationsOfLine(String, String, int)->List::: reference type impl locations of line
com.sun.tools.jdi.ReferenceTypeImpl#instances(long)->List::: reference type impl instances
com.sun.tools.jdi.ReferenceTypeImpl#majorVersion()->int::: reference type impl major version
com.sun.tools.jdi.ReferenceTypeImpl#minorVersion()->int::: reference type impl minor version
com.sun.tools.jdi.ReferenceTypeImpl#constantPoolCount()->int::: reference type impl constant pool count
com.sun.tools.jdi.ReferenceTypeImpl#constantPool()->byte[]::: reference type impl constant pool
com.sun.tools.jdi.ReferenceTypeImpl#getModifiers()->void::: reference type impl get modifiers
com.sun.tools.jdi.ReferenceTypeImpl#decodeStatus(int)->void::: reference type impl decode status
com.sun.tools.jdi.ReferenceTypeImpl#updateStatus()->void::: reference type impl update status
com.sun.tools.jdi.ReferenceTypeImpl#markPrepared()->void::: reference type impl mark prepared
com.sun.tools.jdi.ReferenceTypeImpl#ref()->long::: reference type impl ref
com.sun.tools.jdi.ReferenceTypeImpl#indexOf(Method)->int::: reference type impl index of
com.sun.tools.jdi.ReferenceTypeImpl#indexOf(Field)->int::: reference type impl index of
com.sun.tools.jdi.ReferenceTypeImpl#isAssignableTo(ReferenceType)->boolean::: reference type impl is assignable to
com.sun.tools.jdi.ReferenceTypeImpl#isAssignableFrom(ReferenceType)->boolean::: reference type impl is assignable from
com.sun.tools.jdi.ReferenceTypeImpl#isAssignableFrom(ObjectReference)->boolean::: reference type impl is assignable from
com.sun.tools.jdi.ReferenceTypeImpl#setStatus(int)->void::: reference type impl set status
com.sun.tools.jdi.ReferenceTypeImpl#setSignature(String)->void::: reference type impl set signature
com.sun.tools.jdi.ReferenceTypeImpl#setGenericSignature(String)->void::: reference type impl set generic signature
com.sun.tools.jdi.ReferenceTypeImpl#findType(String)->Type::: reference type impl find type
com.sun.tools.jdi.ReferenceTypeImpl#loaderString()->String::: reference type impl loader string
com.sun.tools.jdi.SDE.Stratum#id()->String::: stratum id
com.sun.tools.jdi.SDE.Stratum#isJava()->boolean::: stratum is java
com.sun.tools.jdi.SDE.Stratum#sourceNames(ReferenceTypeImpl)->List:::Return all the sourceNames for this stratum
com.sun.tools.jdi.SDE.Stratum#sourcePaths(ReferenceTypeImpl)->List:::Return all the sourcePaths for this stratum
com.sun.tools.jdi.SDE.Stratum#lineStratum(ReferenceTypeImpl, int)->LineStratum::: stratum line stratum
com.sun.tools.jdi.SDE.LineStratum#equals(Object)->boolean::: line stratum equals
com.sun.tools.jdi.SDE.LineStratum#hashCode()->int::: line stratum hash code
com.sun.tools.jdi.SDE.LineStratum#lineNumber()->int::: line stratum line number
com.sun.tools.jdi.SDE.LineStratum#getSourceInfo()->void:::Fetch the source name and source path for this line, converting or constructing the source path if needed.
com.sun.tools.jdi.SDE.LineStratum#sourceName()->String::: line stratum source name
com.sun.tools.jdi.SDE.LineStratum#sourcePath()->String::: line stratum source path
com.sun.tools.jdi.SDE#sdePeek()->char::: e sde peek
com.sun.tools.jdi.SDE#sdeRead()->char::: e sde read
com.sun.tools.jdi.SDE#sdeAdvance()->void::: e sde advance
com.sun.tools.jdi.SDE#syntax()->void::: e syntax
com.sun.tools.jdi.SDE#syntax(String)->void::: e syntax
com.sun.tools.jdi.SDE#assureLineTableSize()->void::: e assure line table size
com.sun.tools.jdi.SDE#assureFileTableSize()->void::: e assure file table size
com.sun.tools.jdi.SDE#assureStratumTableSize()->void::: e assure stratum table size
com.sun.tools.jdi.SDE#readLine()->String::: e read line
com.sun.tools.jdi.SDE#stratumTableIndex(String)->int::: e stratum table index
com.sun.tools.jdi.SDE#stratum(String)->Stratum::: e stratum
com.sun.tools.jdi.SDE#availableStrata()->List::: e available strata
com.sun.tools.jdi.SDE#ignoreWhite()->void::: e ignore white
com.sun.tools.jdi.SDE#ignoreLine()->void::: e ignore line
com.sun.tools.jdi.SDE#readNumber()->int::: e read number
com.sun.tools.jdi.SDE#storeFile(int, String, String)->void::: e store file
com.sun.tools.jdi.SDE#fileLine()->void::: e file line
com.sun.tools.jdi.SDE#storeLine(int, int, int, int, int, int)->void::: e store line
com.sun.tools.jdi.SDE#lineLine()->void:::Parse line translation info
com.sun.tools.jdi.SDE#storeStratum(String)->void:::Until the next stratum section, everything after this is in stratumId - so, store the current indicies.
com.sun.tools.jdi.SDE#stratumSection()->void:::The beginning of a stratum's info
com.sun.tools.jdi.SDE#fileSection()->void::: e file section
com.sun.tools.jdi.SDE#lineSection()->void::: e line section
com.sun.tools.jdi.SDE#ignoreSection()->void:::Ignore a section we don't know about.
com.sun.tools.jdi.SDE#createJavaStratum()->void:::A base "Java" stratum is always available, though it is not in the SourceDebugExtension
com.sun.tools.jdi.SDE#decode()->void:::Decode a SourceDebugExtension which is in SourceMap format
com.sun.tools.jdi.SDE#createProxyForAbsentSDE()->void::: e create proxy for absent e
com.sun.tools.jdi.SDE#isValid()->boolean::: e is valid
com.sun.tools.jdi.SharedMemoryAttachingConnector#attach(Map)->VirtualMachine::: shared memory attaching connector attach
com.sun.tools.jdi.SharedMemoryAttachingConnector#name()->String::: shared memory attaching connector name
com.sun.tools.jdi.SharedMemoryAttachingConnector#description()->String::: shared memory attaching connector description
com.sun.tools.jdi.SharedMemoryConnection#handshake(long)->void::: shared memory connection handshake
com.sun.tools.jdi.SharedMemoryConnection#close()->void::: shared memory connection close
com.sun.tools.jdi.SharedMemoryConnection#isOpen()->boolean::: shared memory connection is open
com.sun.tools.jdi.SharedMemoryConnection#readPacket()->byte[]::: shared memory connection read packet
com.sun.tools.jdi.SharedMemoryConnection#writePacket(byte[])->void::: shared memory connection write packet
com.sun.tools.jdi.SharedMemoryListeningConnector#startListening(Map)->String::: shared memory listening connector start listening
com.sun.tools.jdi.SharedMemoryListeningConnector#name()->String::: shared memory listening connector name
com.sun.tools.jdi.SharedMemoryListeningConnector#description()->String::: shared memory listening connector description
com.sun.tools.jdi.SharedMemoryTransportService.SharedMemoryListenKey#id()->long::: shared memory listen key id
com.sun.tools.jdi.SharedMemoryTransportService.SharedMemoryListenKey#setId(long)->void::: shared memory listen key set id
com.sun.tools.jdi.SharedMemoryTransportService.SharedMemoryListenKey#address()->String::: shared memory listen key address
com.sun.tools.jdi.SharedMemoryTransportService.SharedMemoryListenKey#toString()->String::: shared memory listen key to string
com.sun.tools.jdi.SharedMemoryTransportService#name()->String::: shared memory transport service name
com.sun.tools.jdi.SharedMemoryTransportService#defaultAddress()->String::: shared memory transport service default address
com.sun.tools.jdi.SharedMemoryTransportService#description()->String:::Return localized description of this transport service
com.sun.tools.jdi.SharedMemoryTransportService#capabilities()->Capabilities::: shared memory transport service capabilities
com.sun.tools.jdi.SharedMemoryTransportService#attach(String, long, long)->Connection::: shared memory transport service attach
com.sun.tools.jdi.SharedMemoryTransportService#startListening(String)->TransportService.ListenKey::: shared memory transport service start listening
com.sun.tools.jdi.SharedMemoryTransportService#startListening()->ListenKey::: shared memory transport service start listening
com.sun.tools.jdi.SharedMemoryTransportService#stopListening(ListenKey)->void::: shared memory transport service stop listening
com.sun.tools.jdi.SharedMemoryTransportService#accept(ListenKey, long, long)->Connection::: shared memory transport service accept
com.sun.tools.jdi.SharedMemoryTransportServiceCapabilities#supportsMultipleConnections()->boolean::: shared memory transport service capabilities supports multiple connections
com.sun.tools.jdi.SharedMemoryTransportServiceCapabilities#supportsAttachTimeout()->boolean::: shared memory transport service capabilities supports attach timeout
com.sun.tools.jdi.SharedMemoryTransportServiceCapabilities#supportsAcceptTimeout()->boolean::: shared memory transport service capabilities supports accept timeout
com.sun.tools.jdi.SharedMemoryTransportServiceCapabilities#supportsHandshakeTimeout()->boolean::: shared memory transport service capabilities supports handshake timeout
com.sun.tools.jdi.ShortTypeImpl#signature()->String::: short type impl signature
com.sun.tools.jdi.ShortTypeImpl#convert(PrimitiveValue)->PrimitiveValue::: short type impl convert
com.sun.tools.jdi.ShortValueImpl#equals(Object)->boolean::: short value impl equals
com.sun.tools.jdi.ShortValueImpl#hashCode()->int::: short value impl hash code
com.sun.tools.jdi.ShortValueImpl#compareTo(ShortValue)->int::: short value impl compare to
com.sun.tools.jdi.ShortValueImpl#type()->Type::: short value impl type
com.sun.tools.jdi.ShortValueImpl#value()->short::: short value impl value
com.sun.tools.jdi.ShortValueImpl#booleanValue()->boolean::: short value impl boolean value
com.sun.tools.jdi.ShortValueImpl#byteValue()->byte::: short value impl byte value
com.sun.tools.jdi.ShortValueImpl#charValue()->char::: short value impl char value
com.sun.tools.jdi.ShortValueImpl#shortValue()->short::: short value impl short value
com.sun.tools.jdi.ShortValueImpl#intValue()->int::: short value impl int value
com.sun.tools.jdi.ShortValueImpl#longValue()->long::: short value impl long value
com.sun.tools.jdi.ShortValueImpl#floatValue()->float::: short value impl float value
com.sun.tools.jdi.ShortValueImpl#doubleValue()->double::: short value impl double value
com.sun.tools.jdi.ShortValueImpl#checkedByteValue()->byte::: short value impl checked byte value
com.sun.tools.jdi.ShortValueImpl#checkedCharValue()->char::: short value impl checked char value
com.sun.tools.jdi.ShortValueImpl#toString()->String::: short value impl to string
com.sun.tools.jdi.ShortValueImpl#typeValueKey()->byte::: short value impl type value key
com.sun.tools.jdi.SocketAttachingConnector#attach(Map)->VirtualMachine::: socket attaching connector attach
com.sun.tools.jdi.SocketAttachingConnector#name()->String::: socket attaching connector name
com.sun.tools.jdi.SocketAttachingConnector#description()->String::: socket attaching connector description
com.sun.tools.jdi.SocketConnection#close()->void::: socket connection close
com.sun.tools.jdi.SocketConnection#isOpen()->boolean::: socket connection is open
com.sun.tools.jdi.SocketConnection#readPacket()->byte[]::: socket connection read packet
com.sun.tools.jdi.SocketConnection#writePacket(byte[])->void::: socket connection write packet
com.sun.tools.jdi.SocketListeningConnector#startListening(Map)->String::: socket listening connector start listening
com.sun.tools.jdi.SocketListeningConnector#name()->String::: socket listening connector name
com.sun.tools.jdi.SocketListeningConnector#description()->String::: socket listening connector description
com.sun.tools.jdi.SocketListeningConnector#updateArgumentMapIfRequired(Map, TransportService.ListenKey)->void::: socket listening connector update argument map if required
com.sun.tools.jdi.SocketTransportService.SocketListenKey#socket()->ServerSocket::: socket listen key socket
com.sun.tools.jdi.SocketTransportService.SocketListenKey#address()->String::: socket listen key address
com.sun.tools.jdi.SocketTransportService.SocketListenKey#toString()->String::: socket listen key to string
com.sun.tools.jdi.SocketTransportService#handshake(Socket, long)->void:::Handshake with the debuggee
com.sun.tools.jdi.SocketTransportService#name()->String:::The name of this transport service
com.sun.tools.jdi.SocketTransportService#description()->String:::Return localized description of this transport service
com.sun.tools.jdi.SocketTransportService#capabilities()->Capabilities:::Return the capabilities of this transport service
com.sun.tools.jdi.SocketTransportService#attach(String, long, long)->Connection:::Attach to the specified address with optional attach and handshake timeout.
com.sun.tools.jdi.SocketTransportService#startListening(String, int)->ListenKey::: socket transport service start listening
com.sun.tools.jdi.SocketTransportService#startListening(String)->ListenKey:::Listen on the specified address
com.sun.tools.jdi.SocketTransportService#startListening()->ListenKey:::Listen on the default address
com.sun.tools.jdi.SocketTransportService#stopListening(ListenKey)->void:::Stop the listener
com.sun.tools.jdi.SocketTransportService#accept(ListenKey, long, long)->Connection:::Accept a connection from a debuggee and handshake with it.
com.sun.tools.jdi.SocketTransportService#toString()->String::: socket transport service to string
com.sun.tools.jdi.StackFrameImpl#threadResumable(ThreadAction)->boolean::: stack frame impl thread resumable
com.sun.tools.jdi.StackFrameImpl#validateStackFrame()->void::: stack frame impl validate stack frame
com.sun.tools.jdi.StackFrameImpl#location()->Location:::Return the frame location
com.sun.tools.jdi.StackFrameImpl#thread()->ThreadReference:::Return the thread holding the frame
com.sun.tools.jdi.StackFrameImpl#equals(Object)->boolean::: stack frame impl equals
com.sun.tools.jdi.StackFrameImpl#hashCode()->int::: stack frame impl hash code
com.sun.tools.jdi.StackFrameImpl#thisObject()->ObjectReference::: stack frame impl this object
com.sun.tools.jdi.StackFrameImpl#visibleVariables()->List:::Return the list of visible variable in the frame
com.sun.tools.jdi.StackFrameImpl#visibleVariableByName(String)->LocalVariable:::Return a particular variable in the frame
com.sun.tools.jdi.StackFrameImpl#getValue(LocalVariable)->Value::: stack frame impl get value
com.sun.tools.jdi.StackFrameImpl#getValues(List)->Map::: stack frame impl get values
com.sun.tools.jdi.StackFrameImpl#setValue(LocalVariable, Value)->void::: stack frame impl set value
com.sun.tools.jdi.StackFrameImpl#getArgumentValues()->List::: stack frame impl get argument values
com.sun.tools.jdi.StackFrameImpl#pop()->void::: stack frame impl pop
com.sun.tools.jdi.StackFrameImpl#toString()->String::: stack frame impl to string
com.sun.tools.jdi.StratumLineInfo#liStratum()->String::: stratum line info li stratum
com.sun.tools.jdi.StratumLineInfo#liLineNumber()->int::: stratum line info li line number
com.sun.tools.jdi.StratumLineInfo#liSourceName()->String::: stratum line info li source name
com.sun.tools.jdi.StratumLineInfo#liSourcePath()->String::: stratum line info li source path
com.sun.tools.jdi.StringReferenceImpl#value()->String::: string reference impl value
com.sun.tools.jdi.StringReferenceImpl#toString()->String::: string reference impl to string
com.sun.tools.jdi.StringReferenceImpl#typeValueKey()->byte::: string reference impl type value key
com.sun.tools.jdi.SunCommandLineLauncher#transportService()->TransportService::: sun command line launcher transport service
com.sun.tools.jdi.SunCommandLineLauncher#transport()->Transport::: sun command line launcher transport
com.sun.tools.jdi.SunCommandLineLauncher#hasWhitespace(String)->boolean::: sun command line launcher has whitespace
com.sun.tools.jdi.SunCommandLineLauncher#launch(Map)->VirtualMachine::: sun command line launcher launch
com.sun.tools.jdi.SunCommandLineLauncher#name()->String::: sun command line launcher name
com.sun.tools.jdi.SunCommandLineLauncher#description()->String::: sun command line launcher description
com.sun.tools.jdi.SunSDK#home()->String:::Returns the home directory of a Java 2 SDK if the current JRE is embedded in one.
com.sun.tools.jdi.TargetVM#start()->void::: target m start
com.sun.tools.jdi.TargetVM#run()->void::: target m run
com.sun.tools.jdi.TargetVM#handleVMCommand(Packet)->void::: target m handle command
com.sun.tools.jdi.TargetVM#handleEventCmdSet(Packet)->void::: target m handle event cmd set
com.sun.tools.jdi.TargetVM#notifyDequeueEventSet()->void::: target m notify dequeue event set
com.sun.tools.jdi.TargetVM#send(Packet)->void::: target m send
com.sun.tools.jdi.TargetVM#waitForReply(Packet)->void::: target m wait for reply
com.sun.tools.jdi.TargetVM#addEventQueue(EventQueueImpl)->void::: target m add event queue
com.sun.tools.jdi.TargetVM#stopListening()->void::: target m stop listening
com.sun.tools.jdi.ThreadAction#thread()->ThreadReference::: thread action thread
com.sun.tools.jdi.ThreadAction#id()->int::: thread action id
com.sun.tools.jdi.ThreadGroupReferenceImpl#newCache()->ObjectReferenceImpl.Cache::: thread group reference impl new cache
com.sun.tools.jdi.ThreadGroupReferenceImpl#description()->String::: thread group reference impl description
com.sun.tools.jdi.ThreadGroupReferenceImpl#name()->String::: thread group reference impl name
com.sun.tools.jdi.ThreadGroupReferenceImpl#parent()->ThreadGroupReference::: thread group reference impl parent
com.sun.tools.jdi.ThreadGroupReferenceImpl#suspend()->void::: thread group reference impl suspend
com.sun.tools.jdi.ThreadGroupReferenceImpl#resume()->void::: thread group reference impl resume
com.sun.tools.jdi.ThreadGroupReferenceImpl#threads()->List::: thread group reference impl threads
com.sun.tools.jdi.ThreadGroupReferenceImpl#threadGroups()->List::: thread group reference impl thread groups
com.sun.tools.jdi.ThreadGroupReferenceImpl#toString()->String::: thread group reference impl to string
com.sun.tools.jdi.ThreadGroupReferenceImpl#typeValueKey()->byte::: thread group reference impl type value key
com.sun.tools.jdi.ThreadListener#threadResumable(ThreadAction)->boolean::: thread listener thread resumable
com.sun.tools.jdi.ThreadReferenceImpl#newCache()->ObjectReferenceImpl.Cache::: thread reference impl new cache
com.sun.tools.jdi.ThreadReferenceImpl#description()->String::: thread reference impl description
com.sun.tools.jdi.ThreadReferenceImpl#vmNotSuspended(VMAction)->boolean::: thread reference impl vm not suspended
com.sun.tools.jdi.ThreadReferenceImpl#name()->String:::Note that we only cache the name string while the entire VM is suspended because the name can change via Thread.setName arbitrarily while this thread is running.
com.sun.tools.jdi.ThreadReferenceImpl#sendResumingCommand(CommandSender)->PacketStream::: thread reference impl send resuming command
com.sun.tools.jdi.ThreadReferenceImpl#suspend()->void::: thread reference impl suspend
com.sun.tools.jdi.ThreadReferenceImpl#resume()->void::: thread reference impl resume
com.sun.tools.jdi.ThreadReferenceImpl#suspendCount()->int::: thread reference impl suspend count
com.sun.tools.jdi.ThreadReferenceImpl#stop(ObjectReference)->void::: thread reference impl stop
com.sun.tools.jdi.ThreadReferenceImpl#interrupt()->void::: thread reference impl interrupt
com.sun.tools.jdi.ThreadReferenceImpl#status()->int::: thread reference impl status
com.sun.tools.jdi.ThreadReferenceImpl#isSuspended()->boolean::: thread reference impl is suspended
com.sun.tools.jdi.ThreadReferenceImpl#isAtBreakpoint()->boolean::: thread reference impl is at breakpoint
com.sun.tools.jdi.ThreadReferenceImpl#threadGroup()->ThreadGroupReference::: thread reference impl thread group
com.sun.tools.jdi.ThreadReferenceImpl#frameCount()->int::: thread reference impl frame count
com.sun.tools.jdi.ThreadReferenceImpl#frames()->List::: thread reference impl frames
com.sun.tools.jdi.ThreadReferenceImpl#frame(int)->StackFrame::: thread reference impl frame
com.sun.tools.jdi.ThreadReferenceImpl#frames(int, int)->List::: thread reference impl frames
com.sun.tools.jdi.ThreadReferenceImpl#ownedMonitors()->List::: thread reference impl owned monitors
com.sun.tools.jdi.ThreadReferenceImpl#currentContendedMonitor()->ObjectReference::: thread reference impl current contended monitor
com.sun.tools.jdi.ThreadReferenceImpl#ownedMonitorsAndFrames()->List::: thread reference impl owned monitors and frames
com.sun.tools.jdi.ThreadReferenceImpl#popFrames(StackFrame)->void::: thread reference impl pop frames
com.sun.tools.jdi.ThreadReferenceImpl#forceEarlyReturn(Value)->void::: thread reference impl force early return
com.sun.tools.jdi.ThreadReferenceImpl#toString()->String::: thread reference impl to string
com.sun.tools.jdi.ThreadReferenceImpl#typeValueKey()->byte::: thread reference impl type value key
com.sun.tools.jdi.ThreadReferenceImpl#addListener(ThreadListener)->void::: thread reference impl add listener
com.sun.tools.jdi.ThreadReferenceImpl#removeListener(ThreadListener)->void::: thread reference impl remove listener
com.sun.tools.jdi.TypeComponentImpl#name()->String::: type component impl name
com.sun.tools.jdi.TypeComponentImpl#signature()->String::: type component impl signature
com.sun.tools.jdi.TypeComponentImpl#genericSignature()->String::: type component impl generic signature
com.sun.tools.jdi.TypeComponentImpl#modifiers()->int::: type component impl modifiers
com.sun.tools.jdi.TypeComponentImpl#declaringType()->ReferenceType::: type component impl declaring type
com.sun.tools.jdi.TypeComponentImpl#isStatic()->boolean::: type component impl is static
com.sun.tools.jdi.TypeComponentImpl#isFinal()->boolean::: type component impl is final
com.sun.tools.jdi.TypeComponentImpl#isPrivate()->boolean::: type component impl is private
com.sun.tools.jdi.TypeComponentImpl#isPackagePrivate()->boolean::: type component impl is package private
com.sun.tools.jdi.TypeComponentImpl#isProtected()->boolean::: type component impl is protected
com.sun.tools.jdi.TypeComponentImpl#isPublic()->boolean::: type component impl is public
com.sun.tools.jdi.TypeComponentImpl#isSynthetic()->boolean::: type component impl is synthetic
com.sun.tools.jdi.TypeComponentImpl#ref()->long::: type component impl ref
com.sun.tools.jdi.TypeComponentImpl#isModifierSet(int)->boolean::: type component impl is modifier set
com.sun.tools.jdi.TypeImpl#signature()->String::: type impl signature
com.sun.tools.jdi.TypeImpl#name()->String::: type impl name
com.sun.tools.jdi.TypeImpl#equals(Object)->boolean::: type impl equals
com.sun.tools.jdi.TypeImpl#hashCode()->int::: type impl hash code
com.sun.tools.jdi.ValueContainer#type()->Type::: value container type
com.sun.tools.jdi.ValueContainer#findType(String)->Type::: value container find type
com.sun.tools.jdi.ValueContainer#typeName()->String::: value container type name
com.sun.tools.jdi.ValueContainer#signature()->String::: value container signature
com.sun.tools.jdi.ValueImpl#prepareForAssignment(Value, ValueContainer)->ValueImpl::: value impl prepare for assignment
com.sun.tools.jdi.ValueImpl#typeValueKey(Value)->byte::: value impl type value key
com.sun.tools.jdi.ValueImpl#prepareForAssignmentTo(ValueContainer)->ValueImpl::: value impl prepare for assignment to
com.sun.tools.jdi.ValueImpl#typeValueKey()->byte::: value impl type value key
com.sun.tools.jdi.VirtualMachineImpl#waitInitCompletion()->void::: virtual machine impl wait init completion
com.sun.tools.jdi.VirtualMachineImpl#state()->VMState::: virtual machine impl state
com.sun.tools.jdi.VirtualMachineImpl#threadResumable(ThreadAction)->boolean::: virtual machine impl thread resumable
com.sun.tools.jdi.VirtualMachineImpl#getInternalEventRequestManager()->EventRequestManagerImpl::: virtual machine impl get internal event request manager
com.sun.tools.jdi.VirtualMachineImpl#validateVM()->void::: virtual machine impl validate m
com.sun.tools.jdi.VirtualMachineImpl#equals(Object)->boolean::: virtual machine impl equals
com.sun.tools.jdi.VirtualMachineImpl#hashCode()->int::: virtual machine impl hash code
com.sun.tools.jdi.VirtualMachineImpl#allModules()->List::: virtual machine impl all modules
com.sun.tools.jdi.VirtualMachineImpl#classesByName(String)->List::: virtual machine impl classes by name
com.sun.tools.jdi.VirtualMachineImpl#allClasses()->List::: virtual machine impl all classes
com.sun.tools.jdi.VirtualMachineImpl#redefineClasses(Map)->void::: virtual machine impl redefine classes
com.sun.tools.jdi.VirtualMachineImpl#allThreads()->List::: virtual machine impl all threads
com.sun.tools.jdi.VirtualMachineImpl#topLevelThreadGroups()->List::: virtual machine impl top level thread groups
com.sun.tools.jdi.VirtualMachineImpl#sendResumingCommand(CommandSender)->PacketStream::: virtual machine impl send resuming command
com.sun.tools.jdi.VirtualMachineImpl#notifySuspend()->void::: virtual machine impl notify suspend
com.sun.tools.jdi.VirtualMachineImpl#suspend()->void::: virtual machine impl suspend
com.sun.tools.jdi.VirtualMachineImpl#resume()->void::: virtual machine impl resume
com.sun.tools.jdi.VirtualMachineImpl#eventQueue()->EventQueue::: virtual machine impl event queue
com.sun.tools.jdi.VirtualMachineImpl#eventRequestManager()->EventRequestManager::: virtual machine impl event request manager
com.sun.tools.jdi.VirtualMachineImpl#eventRequestManagerImpl()->EventRequestManagerImpl::: virtual machine impl event request manager impl
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(boolean)->BooleanValue::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(byte)->ByteValue::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(char)->CharValue::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(short)->ShortValue::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(int)->IntegerValue::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(long)->LongValue::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(float)->FloatValue::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(double)->DoubleValue::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOf(String)->StringReference::: virtual machine impl mirror of
com.sun.tools.jdi.VirtualMachineImpl#mirrorOfVoid()->VoidValue::: virtual machine impl mirror of void
com.sun.tools.jdi.VirtualMachineImpl#instanceCounts(List)->long[]::: virtual machine impl instance counts
com.sun.tools.jdi.VirtualMachineImpl#dispose()->void::: virtual machine impl dispose
com.sun.tools.jdi.VirtualMachineImpl#exit(int)->void::: virtual machine impl exit
com.sun.tools.jdi.VirtualMachineImpl#process()->Process::: virtual machine impl process
com.sun.tools.jdi.VirtualMachineImpl#description()->String::: virtual machine impl description
com.sun.tools.jdi.VirtualMachineImpl#version()->String::: virtual machine impl version
com.sun.tools.jdi.VirtualMachineImpl#name()->String::: virtual machine impl name
com.sun.tools.jdi.VirtualMachineImpl#canWatchFieldModification()->boolean::: virtual machine impl can watch field modification
com.sun.tools.jdi.VirtualMachineImpl#canWatchFieldAccess()->boolean::: virtual machine impl can watch field access
com.sun.tools.jdi.VirtualMachineImpl#canGetBytecodes()->boolean::: virtual machine impl can get bytecodes
com.sun.tools.jdi.VirtualMachineImpl#canGetSyntheticAttribute()->boolean::: virtual machine impl can get synthetic attribute
com.sun.tools.jdi.VirtualMachineImpl#canGetOwnedMonitorInfo()->boolean::: virtual machine impl can get owned monitor info
com.sun.tools.jdi.VirtualMachineImpl#canGetCurrentContendedMonitor()->boolean::: virtual machine impl can get current contended monitor
com.sun.tools.jdi.VirtualMachineImpl#canGetMonitorInfo()->boolean::: virtual machine impl can get monitor info
com.sun.tools.jdi.VirtualMachineImpl#canGet1_5LanguageFeatures()->boolean::: virtual machine impl can get1_5 language features
com.sun.tools.jdi.VirtualMachineImpl#canUseInstanceFilters()->boolean::: virtual machine impl can use instance filters
com.sun.tools.jdi.VirtualMachineImpl#canRedefineClasses()->boolean::: virtual machine impl can redefine classes
com.sun.tools.jdi.VirtualMachineImpl#canAddMethod()->boolean::: virtual machine impl can add method
com.sun.tools.jdi.VirtualMachineImpl#canUnrestrictedlyRedefineClasses()->boolean::: virtual machine impl can unrestrictedly redefine classes
com.sun.tools.jdi.VirtualMachineImpl#canPopFrames()->boolean::: virtual machine impl can pop frames
com.sun.tools.jdi.VirtualMachineImpl#canGetMethodReturnValues()->boolean::: virtual machine impl can get method return values
com.sun.tools.jdi.VirtualMachineImpl#canGetInstanceInfo()->boolean::: virtual machine impl can get instance info
com.sun.tools.jdi.VirtualMachineImpl#canUseSourceNameFilters()->boolean::: virtual machine impl can use source name filters
com.sun.tools.jdi.VirtualMachineImpl#canForceEarlyReturn()->boolean::: virtual machine impl can force early return
com.sun.tools.jdi.VirtualMachineImpl#canBeModified()->boolean::: virtual machine impl can be modified
com.sun.tools.jdi.VirtualMachineImpl#canGetSourceDebugExtension()->boolean::: virtual machine impl can get source debug extension
com.sun.tools.jdi.VirtualMachineImpl#canGetClassFileVersion()->boolean::: virtual machine impl can get class file version
com.sun.tools.jdi.VirtualMachineImpl#canGetConstantPool()->boolean::: virtual machine impl can get constant pool
com.sun.tools.jdi.VirtualMachineImpl#canRequestVMDeathEvent()->boolean::: virtual machine impl can request death event
com.sun.tools.jdi.VirtualMachineImpl#canRequestMonitorEvents()->boolean::: virtual machine impl can request monitor events
com.sun.tools.jdi.VirtualMachineImpl#canGetMonitorFrameInfo()->boolean::: virtual machine impl can get monitor frame info
com.sun.tools.jdi.VirtualMachineImpl#canGetModuleInfo()->boolean::: virtual machine impl can get module info
com.sun.tools.jdi.VirtualMachineImpl#setDebugTraceMode(int)->void::: virtual machine impl set debug trace mode
com.sun.tools.jdi.VirtualMachineImpl#printTrace(String)->void::: virtual machine impl print trace
com.sun.tools.jdi.VirtualMachineImpl#printReceiveTrace(int, String)->void::: virtual machine impl print receive trace
com.sun.tools.jdi.VirtualMachineImpl#removeReferenceType(String)->void::: virtual machine impl remove reference type
com.sun.tools.jdi.VirtualMachineImpl#referenceType(long, byte)->ReferenceTypeImpl::: virtual machine impl reference type
com.sun.tools.jdi.VirtualMachineImpl#classType(long)->ClassTypeImpl::: virtual machine impl class type
com.sun.tools.jdi.VirtualMachineImpl#interfaceType(long)->InterfaceTypeImpl::: virtual machine impl interface type
com.sun.tools.jdi.VirtualMachineImpl#arrayType(long)->ArrayTypeImpl::: virtual machine impl array type
com.sun.tools.jdi.VirtualMachineImpl#referenceType(long, int, String)->ReferenceTypeImpl::: virtual machine impl reference type
com.sun.tools.jdi.VirtualMachineImpl#getModule(long)->ModuleReference::: virtual machine impl get module
com.sun.tools.jdi.VirtualMachineImpl#sendToTarget(Packet)->void::: virtual machine impl send to target
com.sun.tools.jdi.VirtualMachineImpl#waitForTargetReply(Packet)->void::: virtual machine impl wait for target reply
com.sun.tools.jdi.VirtualMachineImpl#findBootType(String)->Type::: virtual machine impl find boot type
com.sun.tools.jdi.VirtualMachineImpl#theBooleanType()->BooleanType::: virtual machine impl the boolean type
com.sun.tools.jdi.VirtualMachineImpl#theByteType()->ByteType::: virtual machine impl the byte type
com.sun.tools.jdi.VirtualMachineImpl#theCharType()->CharType::: virtual machine impl the char type
com.sun.tools.jdi.VirtualMachineImpl#theShortType()->ShortType::: virtual machine impl the short type
com.sun.tools.jdi.VirtualMachineImpl#theIntegerType()->IntegerType::: virtual machine impl the integer type
com.sun.tools.jdi.VirtualMachineImpl#theLongType()->LongType::: virtual machine impl the long type
com.sun.tools.jdi.VirtualMachineImpl#theFloatType()->FloatType::: virtual machine impl the float type
com.sun.tools.jdi.VirtualMachineImpl#theDoubleType()->DoubleType::: virtual machine impl the double type
com.sun.tools.jdi.VirtualMachineImpl#theVoidType()->VoidType::: virtual machine impl the void type
com.sun.tools.jdi.VirtualMachineImpl#primitiveTypeMirror(byte)->PrimitiveType::: virtual machine impl primitive type mirror
com.sun.tools.jdi.VirtualMachineImpl#objectMirror(long, int)->ObjectReferenceImpl::: virtual machine impl object mirror
com.sun.tools.jdi.VirtualMachineImpl#removeObjectMirror(ObjectReferenceImpl)->void::: virtual machine impl remove object mirror
com.sun.tools.jdi.VirtualMachineImpl#removeObjectMirror(SoftObjectReference)->void::: virtual machine impl remove object mirror
com.sun.tools.jdi.VirtualMachineImpl#objectMirror(long)->ObjectReferenceImpl::: virtual machine impl object mirror
com.sun.tools.jdi.VirtualMachineImpl#stringMirror(long)->StringReferenceImpl::: virtual machine impl string mirror
com.sun.tools.jdi.VirtualMachineImpl#arrayMirror(long)->ArrayReferenceImpl::: virtual machine impl array mirror
com.sun.tools.jdi.VirtualMachineImpl#threadMirror(long)->ThreadReferenceImpl::: virtual machine impl thread mirror
com.sun.tools.jdi.VirtualMachineImpl#threadGroupMirror(long)->ThreadGroupReferenceImpl::: virtual machine impl thread group mirror
com.sun.tools.jdi.VirtualMachineImpl#classLoaderMirror(long)->ClassLoaderReferenceImpl::: virtual machine impl class loader mirror
com.sun.tools.jdi.VirtualMachineImpl#classObjectMirror(long)->ClassObjectReferenceImpl::: virtual machine impl class object mirror
com.sun.tools.jdi.VirtualMachineImpl#moduleMirror(long)->ModuleReferenceImpl::: virtual machine impl module mirror
com.sun.tools.jdi.VirtualMachineImpl#classPath()->List::: virtual machine impl class path
com.sun.tools.jdi.VirtualMachineImpl#bootClassPath()->List::: virtual machine impl boot class path
com.sun.tools.jdi.VirtualMachineImpl#baseDirectory()->String::: virtual machine impl base directory
com.sun.tools.jdi.VirtualMachineImpl#setDefaultStratum(String)->void::: virtual machine impl set default stratum
com.sun.tools.jdi.VirtualMachineImpl#getDefaultStratum()->String::: virtual machine impl get default stratum
com.sun.tools.jdi.VirtualMachineImpl#threadGroupForJDI()->ThreadGroup::: virtual machine impl thread group for i
com.sun.tools.jdi.VirtualMachineManagerImpl#virtualMachineManager()->VirtualMachineManager::: virtual machine manager impl virtual machine manager
com.sun.tools.jdi.VirtualMachineManagerImpl#defaultConnector()->LaunchingConnector::: virtual machine manager impl default connector
com.sun.tools.jdi.VirtualMachineManagerImpl#setDefaultConnector(LaunchingConnector)->void::: virtual machine manager impl set default connector
com.sun.tools.jdi.VirtualMachineManagerImpl#launchingConnectors()->List::: virtual machine manager impl launching connectors
com.sun.tools.jdi.VirtualMachineManagerImpl#attachingConnectors()->List::: virtual machine manager impl attaching connectors
com.sun.tools.jdi.VirtualMachineManagerImpl#listeningConnectors()->List::: virtual machine manager impl listening connectors
com.sun.tools.jdi.VirtualMachineManagerImpl#allConnectors()->List::: virtual machine manager impl all connectors
com.sun.tools.jdi.VirtualMachineManagerImpl#connectedVirtualMachines()->List::: virtual machine manager impl connected virtual machines
com.sun.tools.jdi.VirtualMachineManagerImpl#addConnector(Connector)->void::: virtual machine manager impl add connector
com.sun.tools.jdi.VirtualMachineManagerImpl#removeConnector(Connector)->void::: virtual machine manager impl remove connector
com.sun.tools.jdi.VirtualMachineManagerImpl#createVirtualMachine(Connection, Process)->VirtualMachine::: virtual machine manager impl create virtual machine
com.sun.tools.jdi.VirtualMachineManagerImpl#createVirtualMachine(Connection)->VirtualMachine::: virtual machine manager impl create virtual machine
com.sun.tools.jdi.VirtualMachineManagerImpl#addVirtualMachine(VirtualMachine)->void::: virtual machine manager impl add virtual machine
com.sun.tools.jdi.VirtualMachineManagerImpl#disposeVirtualMachine(VirtualMachine)->void::: virtual machine manager impl dispose virtual machine
com.sun.tools.jdi.VirtualMachineManagerImpl#majorInterfaceVersion()->int::: virtual machine manager impl major interface version
com.sun.tools.jdi.VirtualMachineManagerImpl#minorInterfaceVersion()->int::: virtual machine manager impl minor interface version
com.sun.tools.jdi.VirtualMachineManagerImpl#mainGroupForJDI()->ThreadGroup::: virtual machine manager impl main group for i
com.sun.tools.jdi.VirtualMachineManagerImpl#getString(String)->String::: virtual machine manager impl get string
com.sun.tools.jdi.VirtualMachineManagerService#setDefaultConnector(LaunchingConnector)->void:::Replaces the default connector.
com.sun.tools.jdi.VirtualMachineManagerService#addConnector(Connector)->void:::Adds a connector to the list of known connectors.
com.sun.tools.jdi.VirtualMachineManagerService#removeConnector(Connector)->void:::Removes a connector from the list of known connectors.
com.sun.tools.jdi.VMAction#vm()->VirtualMachine::: action vm
com.sun.tools.jdi.VMAction#id()->int::: action id
com.sun.tools.jdi.VMAction#resumingThread()->ThreadReference::: action resuming thread
com.sun.tools.jdi.VMListener#vmSuspended(VMAction)->boolean::: listener vm suspended
com.sun.tools.jdi.VMListener#vmNotSuspended(VMAction)->boolean::: listener vm not suspended
com.sun.tools.jdi.VMState#isSuspended()->boolean:::Is the VM currently suspended, for the purpose of caching? Must be called synchronized on vm.state()
com.sun.tools.jdi.VMState#notifyCommandComplete(int)->void::: state notify command complete
com.sun.tools.jdi.VMState#freeze()->void::: state freeze
com.sun.tools.jdi.VMState#thawCommand(CommandSender)->PacketStream::: state thaw command
com.sun.tools.jdi.VMState#thaw()->void:::All threads are resuming
com.sun.tools.jdi.VMState#thaw(ThreadReference)->void:::Tell listeners to invalidate suspend-sensitive caches
com.sun.tools.jdi.VMState#addListener(VMListener)->void::: state add listener
com.sun.tools.jdi.VMState#hasListener(VMListener)->boolean::: state has listener
com.sun.tools.jdi.VMState#removeListener(VMListener)->void::: state remove listener
com.sun.tools.jdi.VMState#allThreads()->List::: state all threads
com.sun.tools.jdi.VMState#topLevelThreadGroups()->List::: state top level thread groups
com.sun.tools.jdi.VoidTypeImpl#signature()->String::: void type impl signature
com.sun.tools.jdi.VoidTypeImpl#toString()->String::: void type impl to string
com.sun.tools.jdi.VoidValueImpl#equals(Object)->boolean::: void value impl equals
com.sun.tools.jdi.VoidValueImpl#hashCode()->int::: void value impl hash code
com.sun.tools.jdi.VoidValueImpl#type()->Type::: void value impl type
com.sun.tools.jdi.VoidValueImpl#prepareForAssignmentTo(ValueContainer)->ValueImpl::: void value impl prepare for assignment to
com.sun.tools.jdi.VoidValueImpl#toString()->String::: void value impl to string
com.sun.tools.jdi.VoidValueImpl#typeValueKey()->byte::: void value impl type value key
