GraphTest#getOptions()::: graph test get options:::return->Graal->getRequiredCapability
GraphTest#getDebug(OptionValues)::: graph test get debug:::cached->cachedDebug->get->if->if->cached->getOptions->return->throw->getName->new->AssertionError->debug->DebugContext->create->cachedDebug->set->return
GraphTest#getDebug()::: graph test get debug:::return->getOptions->getDebug
GraphTest#afterTest()::: graph test after test:::cached->cachedDebug->get->if->cached->closeDumpHandlers
NodeBitMapTest#before()::: node bit map test before:::Graal->getRuntime->options->getOptions->getDebug->new->Graph->for->i->graph->createNodeBitMap
NodeBitMapTest#iterateEmpty()::: node bit map test iterate empty:::foreach->Assert->fail
NodeBitMapTest#iterateMarkedNodes()::: node bit map test iterate marked nodes:::map->mark->map->mark->map->mark->map->mark->map->mark->iter->map->iterator->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertFalse
NodeBitMapTest#deleteNodeWhileIterating()::: node bit map test delete node while iterating:::map->mark->map->mark->map->mark->map->mark->map->mark->iter->map->iterator->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->markDeleted->markDeleted->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertFalse
NodeBitMapTest#deleteAllNodesBeforeIterating()::: node bit map test delete all nodes before iterating:::for->i->iter->map->iterator->Assert->iter->hasNext->assertFalse
NodeBitMapTest#multipleHasNextInvocations()::: node bit map test multiple has next invocations:::map->mark->iter->map->iterator->Assert->iter->hasNext->assertTrue->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertFalse
NodeBitMapTest#noSuchElement()::: node bit map test no such element:::map->iterator->next
NodeBitMapTest#concurrentModification()::: node bit map test concurrent modification:::map->mark->map->mark->map->mark->map->mark->map->mark->map->mark->iter->map->iterator->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertTrue->markDeleted->iter->next
NodeBitMapTest#nextWithoutHasNext()::: node bit map test next without has next:::map->mark->map->mark->map->mark->map->mark->map->mark->iter->map->iterator->Assert->iter->next->assertEquals->Assert->iter->next->assertEquals->Assert->iter->next->assertEquals->Assert->iter->next->assertEquals->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertFalse
NodeBitMapTest#markWhileIterating()::: node bit map test mark while iterating:::map->mark->iter->map->iterator->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->map->mark->Assert->iter->hasNext->assertTrue->map->mark->Assert->iter->next->assertEquals->map->mark->map->mark->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertTrue->Assert->iter->next->assertEquals->Assert->iter->hasNext->assertFalse
NodeMapTest#before()::: node map test before:::Graal->getRuntime->options->getOptions->getDebug->new->Graph->for->i->new->NodeMap<>->for->i
NodeMapTest#testEmpty()::: node map test test empty:::emptyMap->new->NodeMap<>->foreach->emptyMap->get->assertEquals
NodeMapTest#testSimple()::: node map test test simple:::for->i
NodeMapTest#testSimpleChanged()::: node map test test simple changed:::foreach->map->set->foreach->map->set->for->i->for->i
NodeMapTest#testNewGet()::: node map test test new get:::newNode->graph->new->TestNode->add->try->map->get->Assertions->assertionsEnabled->getSimpleName->getSimpleName->fail->catch->finally
NodeMapTest#testNewSet()::: node map test test new set:::newNode->graph->new->TestNode->add->try->map->set->Assertions->assertionsEnabled->getSimpleName->getSimpleName->fail->catch->finally
NodeMapTest#testNewGetAndGrow()::: node map test test new get and grow:::newNode->graph->new->TestNode->add->map->getAndGrow->assertEquals
NodeMapTest#testNewSetAndGrow()::: node map test test new set and grow:::newNode->graph->new->TestNode->add->map->setAndGrow->map->get->assertEquals
NodeUsagesTests#testReplaceAtUsages()::: node usages tests test replace at usages:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtUsages->def0->usages->isEmpty->assertThat->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicateAll()::: node usages tests test replace at usages with predicate all:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def0->usages->isEmpty->assertThat->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicateNone()::: node usages tests test replace at usages with predicate none:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def1->usages->isEmpty->assertThat->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate1()::: node usages tests test replace at usages with predicate1:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate2()::: node usages tests test replace at usages with predicate2:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate0()::: node usages tests test replace at usages with predicate0:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate02()::: node usages tests test replace at usages with predicate02:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate023()::: node usages tests test replace at usages with predicate023:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->use3->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate013()::: node usages tests test replace at usages with predicate013:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->use3->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate203()::: node usages tests test replace at usages with predicate203:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->use3->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate01()::: node usages tests test replace at usages with predicate01:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat
NodeUsagesTests#testReplaceAtUsagesWithPredicate12()::: node usages tests test replace at usages with predicate12:::options->getOptions->graph->getDebug->new->Graph->def0->graph->new->Def->add->def1->graph->new->Def->add->use0->graph->new->Use->add->use1->graph->new->Use->add->use2->graph->new->Use->add->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->usages->isEmpty->assertThat->def0->replaceAtMatchingUsages->def0->getUsageCount->assertEquals->def0->usages->contains->assertThat->def0->usages->isNotEmpty->assertThat->def1->getUsageCount->assertEquals->def1->usages->contains->assertThat->def1->usages->contains->assertThat->def1->usages->isNotEmpty->assertThat
NodeValidationChecksTest#testInputNotAlive()::: node validation checks test test input not alive:::graph->getOptions->getDebug->new->Graph->node->new->TestNode->try->graph->new->TestNode->add->Assert->fail->catch->Assert->e->getMessage->contains->assertTrue->Assert->e->getMessage->contains->assertTrue->finally
NodeValidationChecksTest#testSuccessorNotAlive()::: node validation checks test test successor not alive:::graph->getOptions->getDebug->new->Graph->node->new->TestNode->try->graph->new->TestNode->add->Assert->fail->catch->Assert->e->getMessage->contains->assertTrue->Assert->e->getMessage->contains->assertTrue->finally
TestNodeInterface#getName()::: test node interface get name:::
TypedNodeIteratorTest.TestNode#getName()::: test node get name:::return
TypedNodeIteratorTest#singleNodeTest()::: typed node iterator test single node test:::options->getOptions->graph->getDebug->new->Graph->graph->new->TestNode->add->graph->hasNode->assertTrue->graph->getNodes->toString->assertEquals
TypedNodeIteratorTest#getOptions()::: typed node iterator test get options:::return->Graal->getRequiredCapability
TypedNodeIteratorTest#deletingNodeTest()::: typed node iterator test deleting node test:::testNode->new->TestNode->options->getOptions->graph->getDebug->new->Graph->graph->add->testNode->safeDelete->graph->getNodes->toString->assertEquals
TypedNodeIteratorTest#deleteAndAddTest()::: typed node iterator test delete and add test:::testNode->new->TestNode->options->getOptions->graph->getDebug->new->Graph->graph->new->TestNode->add->graph->add->testNode->safeDelete->graph->getNodes->toString->assertEquals->graph->new->TestNode->add->graph->getNodes->toString->assertEquals
TypedNodeIteratorTest#iteratorBehaviorTest()::: typed node iterator test iterator behavior test:::options->getOptions->graph->getDebug->new->Graph->graph->new->TestNode->add->iterator->graph->getNodes->iterator->iterator->hasNext->assertTrue->iterator->next->getName->assertEquals->iterator->hasNext->assertFalse->graph->new->TestNode->add->iterator->hasNext->assertTrue->iterator->next->getName->assertEquals->iterator->hasNext->assertFalse->c->new->TestNode->graph->add->iterator->hasNext->assertTrue->c->safeDelete->iterator->hasNext->assertFalse
TypedNodeIteratorTest#complicatedIterationTest()::: typed node iterator test complicated iteration test:::options->getOptions->graph->getDebug->new->Graph->graph->new->TestNode->add->foreach->graph->getNodes->name->tn->getName->for->i->name->length->graph->getNodes->toString->assertEquals
TypedNodeIteratorTest#addingNodeDuringIterationTest()::: typed node iterator test adding node during iteration test:::options->getOptions->graph->getDebug->new->Graph->graph->new->TestNode->add->sb->new->StringBuilder->z->foreach->graph->getNodes->if->graph->new->TestNode->add->sb->tn->getName->append->assertEquals->sb->toString->assertEquals->foreach->graph->getNodes->if->graph->new->TestNode->add->assertNotNull->assertEquals
TypedNodeIteratorTest#toString(Iterable)::: typed node iterator test to string:::sb->new->StringBuilder->foreach->sb->tn->getName->append->return->sb->toString
TypedNodeIteratorTest2.NodeA#getName()::: node a get name:::return
TypedNodeIteratorTest2#simpleSubclassTest()::: typed node iterator test2 simple subclass test:::graph->getOptions->getDebug->new->Graph->graph->new->NodeB->add->graph->new->NodeD->add->Assert->TypedNodeIteratorTest->graph->getNodes->toString->assertEquals->Assert->TypedNodeIteratorTest->graph->getNodes->toString->assertEquals
TypedNodeIteratorTest2#addingNodeDuringIterationTest()::: typed node iterator test2 adding node during iteration test:::graph->getOptions->getDebug->new->Graph->graph->new->NodeB->add->d1->graph->new->NodeD->add->sb->new->StringBuilder->foreach->graph->getNodes->if->graph->new->NodeB->add->sb->tn->getName->append->sb->toString->assertEquals->foreach->graph->getNodes->if->graph->new->NodeB->add->assertNotNull->graph->getNodes->count->assertEquals->graph->getNodes->count->assertEquals
