javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#getThreshold()->Number::: counter monitor observed object get threshold
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#setThreshold(Number)->void::: counter monitor observed object set threshold
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#getPreviousScanCounter()->Number::: counter monitor observed object get previous scan counter
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#setPreviousScanCounter(Number)->void::: counter monitor observed object set previous scan counter
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#getModulusExceeded()->boolean::: counter monitor observed object get modulus exceeded
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#setModulusExceeded(boolean)->void::: counter monitor observed object set modulus exceeded
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#getDerivedGaugeExceeded()->Number::: counter monitor observed object get derived gauge exceeded
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#setDerivedGaugeExceeded(Number)->void::: counter monitor observed object set derived gauge exceeded
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#getDerivedGaugeValid()->boolean::: counter monitor observed object get derived gauge valid
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#setDerivedGaugeValid(boolean)->void::: counter monitor observed object set derived gauge valid
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#getEventAlreadyNotified()->boolean::: counter monitor observed object get event already notified
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#setEventAlreadyNotified(boolean)->void::: counter monitor observed object set event already notified
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#getType()->NumericalType::: counter monitor observed object get type
javax.management.monitor.CounterMonitor.CounterMonitorObservedObject#setType(NumericalType)->void::: counter monitor observed object set type
javax.management.monitor.CounterMonitor#start()->void:::Starts the counter monitor.
javax.management.monitor.CounterMonitor#stop()->void:::Stops the counter monitor.
javax.management.monitor.CounterMonitor#getDerivedGauge(ObjectName)->Number:::Gets the derived gauge of the specified object, if this object is contained in the set of observed MBeans, or null otherwise.
javax.management.monitor.CounterMonitor#getDerivedGaugeTimeStamp(ObjectName)->long:::Gets the derived gauge timestamp of the specified object, if this object is contained in the set of observed MBeans, or 0 otherwise.
javax.management.monitor.CounterMonitor#getThreshold(ObjectName)->Number:::Gets the current threshold value of the specified object, if this object is contained in the set of observed MBeans, or null otherwise.
javax.management.monitor.CounterMonitor#getInitThreshold()->Number:::Gets the initial threshold value common to all observed objects.
javax.management.monitor.CounterMonitor#setInitThreshold(Number)->void:::Sets the initial threshold value common to all observed objects
javax.management.monitor.CounterMonitor#getDerivedGauge()->Number:::Returns the derived gauge of the first object in the set of observed MBeans.
javax.management.monitor.CounterMonitor#getDerivedGaugeTimeStamp()->long:::Gets the derived gauge timestamp of the first object in the set of observed MBeans.
javax.management.monitor.CounterMonitor#getThreshold()->Number:::Gets the threshold value of the first object in the set of observed MBeans.
javax.management.monitor.CounterMonitor#setThreshold(Number)->void:::Sets the initial threshold value.
javax.management.monitor.CounterMonitor#getOffset()->Number:::Gets the offset value common to all observed MBeans.
javax.management.monitor.CounterMonitor#setOffset(Number)->void:::Sets the offset value common to all observed MBeans.
javax.management.monitor.CounterMonitor#getModulus()->Number:::Gets the modulus value common to all observed MBeans.
javax.management.monitor.CounterMonitor#setModulus(Number)->void:::Sets the modulus value common to all observed MBeans.
javax.management.monitor.CounterMonitor#getNotify()->boolean:::Gets the notification's on/off switch value common to all observed MBeans.
javax.management.monitor.CounterMonitor#setNotify(boolean)->void:::Sets the notification's on/off switch value common to all observed MBeans.
javax.management.monitor.CounterMonitor#getDifferenceMode()->boolean:::Gets the difference mode flag value common to all observed MBeans.
javax.management.monitor.CounterMonitor#setDifferenceMode(boolean)->void:::Sets the difference mode flag value common to all observed MBeans.
javax.management.monitor.CounterMonitor#getNotificationInfo()->MBeanNotificationInfo[]:::Returns a <CODE>NotificationInfo</CODE> object containing the name of the Java class of the notification and the notification types sent by the counter monitor.
javax.management.monitor.CounterMonitor#createObservedObject(ObjectName)->ObservedObject:::Factory method for ObservedObject creation.
javax.management.monitor.CounterMonitor#isComparableTypeValid(ObjectName, String, Comparable)->boolean:::This method globally sets the derived gauge type for the given "object" and "attribute" after checking that the type of the supplied observed attribute value is one of the value types supported by this monitor.
javax.management.monitor.CounterMonitor#getDerivedGaugeFromComparable(ObjectName, String, Comparable)->Comparable::: counter monitor get derived gauge from comparable
javax.management.monitor.CounterMonitor#onErrorNotification(MonitorNotification)->void::: counter monitor on error notification
javax.management.monitor.CounterMonitor#buildAlarmNotification(ObjectName, String, Comparable)->MonitorNotification::: counter monitor build alarm notification
javax.management.monitor.CounterMonitor#isThresholdTypeValid(ObjectName, String, Comparable)->boolean:::Tests if the threshold, offset and modulus of the specified observed object are of the same type as the counter
javax.management.monitor.CounterMonitorMBean#getDerivedGauge()->Number:::Gets the derived gauge.
javax.management.monitor.CounterMonitorMBean#getDerivedGaugeTimeStamp()->long:::Gets the derived gauge timestamp.
javax.management.monitor.CounterMonitorMBean#getThreshold()->Number:::Gets the threshold value.
javax.management.monitor.CounterMonitorMBean#setThreshold(Number)->void:::Sets the threshold value.
javax.management.monitor.CounterMonitorMBean#getDerivedGauge(ObjectName)->Number:::Gets the derived gauge for the specified MBean.
javax.management.monitor.CounterMonitorMBean#getDerivedGaugeTimeStamp(ObjectName)->long:::Gets the derived gauge timestamp for the specified MBean.
javax.management.monitor.CounterMonitorMBean#getThreshold(ObjectName)->Number:::Gets the threshold value for the specified MBean.
javax.management.monitor.CounterMonitorMBean#getInitThreshold()->Number:::Gets the initial threshold value common to all observed objects.
javax.management.monitor.CounterMonitorMBean#setInitThreshold(Number)->void:::Sets the initial threshold value common to all observed MBeans.
javax.management.monitor.CounterMonitorMBean#getOffset()->Number:::Gets the offset value.
javax.management.monitor.CounterMonitorMBean#setOffset(Number)->void:::Sets the offset value.
javax.management.monitor.CounterMonitorMBean#getModulus()->Number:::Gets the modulus value.
javax.management.monitor.CounterMonitorMBean#setModulus(Number)->void:::Sets the modulus value.
javax.management.monitor.CounterMonitorMBean#getNotify()->boolean:::Gets the notification's on/off switch value.
javax.management.monitor.CounterMonitorMBean#setNotify(boolean)->void:::Sets the notification's on/off switch value.
javax.management.monitor.CounterMonitorMBean#getDifferenceMode()->boolean:::Gets the difference mode flag value.
javax.management.monitor.CounterMonitorMBean#setDifferenceMode(boolean)->void:::Sets the difference mode flag value.
javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject#getDerivedGaugeValid()->boolean::: gauge monitor observed object get derived gauge valid
javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject#setDerivedGaugeValid(boolean)->void::: gauge monitor observed object set derived gauge valid
javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject#getType()->NumericalType::: gauge monitor observed object get type
javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject#setType(NumericalType)->void::: gauge monitor observed object set type
javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject#getPreviousScanGauge()->Number::: gauge monitor observed object get previous scan gauge
javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject#setPreviousScanGauge(Number)->void::: gauge monitor observed object set previous scan gauge
javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject#getStatus()->int::: gauge monitor observed object get status
javax.management.monitor.GaugeMonitor.GaugeMonitorObservedObject#setStatus(int)->void::: gauge monitor observed object set status
javax.management.monitor.GaugeMonitor#start()->void:::Starts the gauge monitor.
javax.management.monitor.GaugeMonitor#stop()->void:::Stops the gauge monitor.
javax.management.monitor.GaugeMonitor#getDerivedGauge(ObjectName)->Number:::Gets the derived gauge of the specified object, if this object is contained in the set of observed MBeans, or null otherwise.
javax.management.monitor.GaugeMonitor#getDerivedGaugeTimeStamp(ObjectName)->long:::Gets the derived gauge timestamp of the specified object, if this object is contained in the set of observed MBeans, or 0 otherwise.
javax.management.monitor.GaugeMonitor#getDerivedGauge()->Number:::Returns the derived gauge of the first object in the set of observed MBeans.
javax.management.monitor.GaugeMonitor#getDerivedGaugeTimeStamp()->long:::Gets the derived gauge timestamp of the first object in the set of observed MBeans.
javax.management.monitor.GaugeMonitor#getHighThreshold()->Number:::Gets the high threshold value common to all observed MBeans.
javax.management.monitor.GaugeMonitor#getLowThreshold()->Number:::Gets the low threshold value common to all observed MBeans.
javax.management.monitor.GaugeMonitor#setThresholds(Number, Number)->void:::Sets the high and the low threshold values common to all observed MBeans.
javax.management.monitor.GaugeMonitor#getNotifyHigh()->boolean:::Gets the high notification's on/off switch value common to all observed MBeans.
javax.management.monitor.GaugeMonitor#setNotifyHigh(boolean)->void:::Sets the high notification's on/off switch value common to all observed MBeans.
javax.management.monitor.GaugeMonitor#getNotifyLow()->boolean:::Gets the low notification's on/off switch value common to all observed MBeans.
javax.management.monitor.GaugeMonitor#setNotifyLow(boolean)->void:::Sets the low notification's on/off switch value common to all observed MBeans.
javax.management.monitor.GaugeMonitor#getDifferenceMode()->boolean:::Gets the difference mode flag value common to all observed MBeans.
javax.management.monitor.GaugeMonitor#setDifferenceMode(boolean)->void:::Sets the difference mode flag value common to all observed MBeans.
javax.management.monitor.GaugeMonitor#getNotificationInfo()->MBeanNotificationInfo[]:::Returns a <CODE>NotificationInfo</CODE> object containing the name of the Java class of the notification and the notification types sent by the gauge monitor.
javax.management.monitor.GaugeMonitor#createObservedObject(ObjectName)->ObservedObject:::Factory method for ObservedObject creation.
javax.management.monitor.GaugeMonitor#isComparableTypeValid(ObjectName, String, Comparable)->boolean:::This method globally sets the derived gauge type for the given "object" and "attribute" after checking that the type of the supplied observed attribute value is one of the value types supported by this monitor.
javax.management.monitor.GaugeMonitor#getDerivedGaugeFromComparable(ObjectName, String, Comparable)->Comparable::: gauge monitor get derived gauge from comparable
javax.management.monitor.GaugeMonitor#onErrorNotification(MonitorNotification)->void::: gauge monitor on error notification
javax.management.monitor.GaugeMonitor#buildAlarmNotification(ObjectName, String, Comparable)->MonitorNotification::: gauge monitor build alarm notification
javax.management.monitor.GaugeMonitor#isThresholdTypeValid(ObjectName, String, Comparable)->boolean:::Tests if the threshold high and threshold low are both of the same type as the gauge
javax.management.monitor.GaugeMonitorMBean#getDerivedGauge()->Number:::Gets the derived gauge.
javax.management.monitor.GaugeMonitorMBean#getDerivedGaugeTimeStamp()->long:::Gets the derived gauge timestamp.
javax.management.monitor.GaugeMonitorMBean#getDerivedGauge(ObjectName)->Number:::Gets the derived gauge for the specified MBean.
javax.management.monitor.GaugeMonitorMBean#getDerivedGaugeTimeStamp(ObjectName)->long:::Gets the derived gauge timestamp for the specified MBean.
javax.management.monitor.GaugeMonitorMBean#getHighThreshold()->Number:::Gets the high threshold value.
javax.management.monitor.GaugeMonitorMBean#getLowThreshold()->Number:::Gets the low threshold value.
javax.management.monitor.GaugeMonitorMBean#setThresholds(Number, Number)->void:::Sets the high and the low threshold values.
javax.management.monitor.GaugeMonitorMBean#getNotifyHigh()->boolean:::Gets the high notification's on/off switch value.
javax.management.monitor.GaugeMonitorMBean#setNotifyHigh(boolean)->void:::Sets the high notification's on/off switch value.
javax.management.monitor.GaugeMonitorMBean#getNotifyLow()->boolean:::Gets the low notification's on/off switch value.
javax.management.monitor.GaugeMonitorMBean#setNotifyLow(boolean)->void:::Sets the low notification's on/off switch value.
javax.management.monitor.GaugeMonitorMBean#getDifferenceMode()->boolean:::Gets the difference mode flag value.
javax.management.monitor.GaugeMonitorMBean#setDifferenceMode(boolean)->void:::Sets the difference mode flag value.
javax.management.monitor.Monitor.ObservedObject#getObservedObject()->ObjectName::: observed object get observed object
javax.management.monitor.Monitor.ObservedObject#getAlreadyNotified()->int::: observed object get already notified
javax.management.monitor.Monitor.ObservedObject#setAlreadyNotified(int)->void::: observed object set already notified
javax.management.monitor.Monitor.ObservedObject#getDerivedGauge()->Object::: observed object get derived gauge
javax.management.monitor.Monitor.ObservedObject#setDerivedGauge(Object)->void::: observed object set derived gauge
javax.management.monitor.Monitor.ObservedObject#getDerivedGaugeTimeStamp()->long::: observed object get derived gauge time stamp
javax.management.monitor.Monitor.ObservedObject#setDerivedGaugeTimeStamp(long)->void::: observed object set derived gauge time stamp
javax.management.monitor.Monitor#preRegister(MBeanServer, ObjectName)->ObjectName:::Allows the monitor MBean to perform any operations it needs before being registered in the MBean server
javax.management.monitor.Monitor#postRegister(Boolean)->void:::Allows the monitor MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed
javax.management.monitor.Monitor#preDeregister()->void:::Allows the monitor MBean to perform any operations it needs before being unregistered by the MBean server
javax.management.monitor.Monitor#postDeregister()->void:::Allows the monitor MBean to perform any operations needed after having been unregistered by the MBean server
javax.management.monitor.Monitor#start()->void:::Starts the monitor.
javax.management.monitor.Monitor#stop()->void:::Stops the monitor.
javax.management.monitor.Monitor#getObservedObject()->ObjectName:::Returns the object name of the first object in the set of observed MBeans, or null if there is no such object.
javax.management.monitor.Monitor#setObservedObject(ObjectName)->void:::Removes all objects from the set of observed objects, and then adds the specified object.
javax.management.monitor.Monitor#addObservedObject(ObjectName)->void:::Adds the specified object in the set of observed MBeans, if this object is not already present.
javax.management.monitor.Monitor#removeObservedObject(ObjectName)->void:::Removes the specified object from the set of observed MBeans.
javax.management.monitor.Monitor#containsObservedObject(ObjectName)->boolean:::Tests whether the specified object is in the set of observed MBeans.
javax.management.monitor.Monitor#getObservedObjects()->ObjectName[]:::Returns an array containing the objects being observed.
javax.management.monitor.Monitor#getObservedAttribute()->String:::Gets the attribute being observed
javax.management.monitor.Monitor#setObservedAttribute(String)->void:::Sets the attribute to observe
javax.management.monitor.Monitor#getGranularityPeriod()->long:::Gets the granularity period (in milliseconds)
javax.management.monitor.Monitor#setGranularityPeriod(long)->void:::Sets the granularity period (in milliseconds)
javax.management.monitor.Monitor#isActive()->boolean::: monitor is active
javax.management.monitor.Monitor#doStart()->void:::Starts the monitor.
javax.management.monitor.Monitor#doStop()->void:::Stops the monitor.
javax.management.monitor.Monitor#getDerivedGauge(ObjectName)->Object:::Gets the derived gauge of the specified object, if this object is contained in the set of observed MBeans, or null otherwise.
javax.management.monitor.Monitor#getDerivedGaugeTimeStamp(ObjectName)->long:::Gets the derived gauge timestamp of the specified object, if this object is contained in the set of observed MBeans, or 0 otherwise.
javax.management.monitor.Monitor#getAttribute(MBeanServerConnection, ObjectName, String)->Object::: monitor get attribute
javax.management.monitor.Monitor#getComparableFromAttribute(ObjectName, String, Object)->Comparable::: monitor get comparable from attribute
javax.management.monitor.Monitor#isComparableTypeValid(ObjectName, String, Comparable)->boolean::: monitor is comparable type valid
javax.management.monitor.Monitor#buildErrorNotification(ObjectName, String, Comparable)->String::: monitor build error notification
javax.management.monitor.Monitor#onErrorNotification(MonitorNotification)->void::: monitor on error notification
javax.management.monitor.Monitor#getDerivedGaugeFromComparable(ObjectName, String, Comparable)->Comparable::: monitor get derived gauge from comparable
javax.management.monitor.Monitor#buildAlarmNotification(ObjectName, String, Comparable)->MonitorNotification::: monitor build alarm notification
javax.management.monitor.Monitor#isThresholdTypeValid(ObjectName, String, Comparable)->boolean::: monitor is threshold type valid
javax.management.monitor.Monitor#classForType(NumericalType)->Class::: monitor class for type
javax.management.monitor.Monitor#isValidForType(Object, Class)->boolean::: monitor is valid for type
javax.management.monitor.Monitor#getObservedObject(ObjectName)->ObservedObject:::Get the specified ObservedObject if this object is contained in the set of observed MBeans, or null otherwise.
javax.management.monitor.Monitor#createObservedObject(ObjectName)->ObservedObject:::Factory method for ObservedObject creation.
javax.management.monitor.Monitor#createAlreadyNotified()->void:::Create the #alreadyNotified array from the ObservedObject array list.
javax.management.monitor.Monitor#updateDeprecatedAlreadyNotified()->void:::Update the deprecated #alreadyNotified field.
javax.management.monitor.Monitor#updateAlreadyNotified(ObservedObject, int)->void:::Update the #alreadyNotifieds array element at the given index with the already notified flag in the given ObservedObject
javax.management.monitor.Monitor#isAlreadyNotified(ObservedObject, int)->boolean:::Check if the given bits in the given element of #alreadyNotifieds are set.
javax.management.monitor.Monitor#setAlreadyNotified(ObservedObject, int, int, int[])->void:::Set the given bits in the given element of #alreadyNotifieds
javax.management.monitor.Monitor#resetAlreadyNotified(ObservedObject, int, int)->void:::Reset the given bits in the given element of #alreadyNotifieds
javax.management.monitor.Monitor#resetAllAlreadyNotified(ObservedObject, int, int[])->void:::Reset all bits in the given element of #alreadyNotifieds
javax.management.monitor.Monitor#computeAlreadyNotifiedIndex(ObservedObject, int, int[])->int:::Check if the #alreadyNotifieds array has been modified
javax.management.monitor.MonitorMBean#start()->void:::Starts the monitor.
javax.management.monitor.MonitorMBean#stop()->void:::Stops the monitor.
javax.management.monitor.MonitorMBean#addObservedObject(ObjectName)->void:::Adds the specified object in the set of observed MBeans.
javax.management.monitor.MonitorMBean#removeObservedObject(ObjectName)->void:::Removes the specified object from the set of observed MBeans.
javax.management.monitor.MonitorMBean#containsObservedObject(ObjectName)->boolean:::Tests whether the specified object is in the set of observed MBeans.
javax.management.monitor.MonitorMBean#getObservedObjects()->ObjectName[]:::Returns an array containing the objects being observed.
javax.management.monitor.MonitorMBean#getObservedObject()->ObjectName:::Gets the object name of the object being observed.
javax.management.monitor.MonitorMBean#setObservedObject(ObjectName)->void:::Sets the object to observe identified by its object name.
javax.management.monitor.MonitorMBean#getObservedAttribute()->String:::Gets the attribute being observed.
javax.management.monitor.MonitorMBean#setObservedAttribute(String)->void:::Sets the attribute to observe.
javax.management.monitor.MonitorMBean#getGranularityPeriod()->long:::Gets the granularity period (in milliseconds).
javax.management.monitor.MonitorMBean#setGranularityPeriod(long)->void:::Sets the granularity period (in milliseconds).
javax.management.monitor.MonitorMBean#isActive()->boolean:::Tests if the monitor MBean is active
javax.management.monitor.MonitorNotification#getObservedObject()->ObjectName:::Gets the observed object of this monitor notification.
javax.management.monitor.MonitorNotification#getObservedAttribute()->String:::Gets the observed attribute of this monitor notification.
javax.management.monitor.MonitorNotification#getDerivedGauge()->Object:::Gets the derived gauge of this monitor notification.
javax.management.monitor.MonitorNotification#getTrigger()->Object:::Gets the threshold/string (depending on the monitor type) that triggered off this monitor notification.
javax.management.monitor.StringMonitor.StringMonitorObservedObject#getStatus()->int::: string monitor observed object get status
javax.management.monitor.StringMonitor.StringMonitorObservedObject#setStatus(int)->void::: string monitor observed object set status
javax.management.monitor.StringMonitor#start()->void:::Starts the string monitor.
javax.management.monitor.StringMonitor#stop()->void:::Stops the string monitor.
javax.management.monitor.StringMonitor#getDerivedGauge(ObjectName)->String:::Gets the derived gauge of the specified object, if this object is contained in the set of observed MBeans, or null otherwise.
javax.management.monitor.StringMonitor#getDerivedGaugeTimeStamp(ObjectName)->long:::Gets the derived gauge timestamp of the specified object, if this object is contained in the set of observed MBeans, or 0 otherwise.
javax.management.monitor.StringMonitor#getDerivedGauge()->String:::Returns the derived gauge of the first object in the set of observed MBeans.
javax.management.monitor.StringMonitor#getDerivedGaugeTimeStamp()->long:::Gets the derived gauge timestamp of the first object in the set of observed MBeans.
javax.management.monitor.StringMonitor#getStringToCompare()->String:::Gets the string to compare with the observed attribute common to all observed MBeans.
javax.management.monitor.StringMonitor#setStringToCompare(String)->void:::Sets the string to compare with the observed attribute common to all observed MBeans.
javax.management.monitor.StringMonitor#getNotifyMatch()->boolean:::Gets the matching notification's on/off switch value common to all observed MBeans.
javax.management.monitor.StringMonitor#setNotifyMatch(boolean)->void:::Sets the matching notification's on/off switch value common to all observed MBeans.
javax.management.monitor.StringMonitor#getNotifyDiffer()->boolean:::Gets the differing notification's on/off switch value common to all observed MBeans.
javax.management.monitor.StringMonitor#setNotifyDiffer(boolean)->void:::Sets the differing notification's on/off switch value common to all observed MBeans.
javax.management.monitor.StringMonitor#getNotificationInfo()->MBeanNotificationInfo[]:::Returns a <CODE>NotificationInfo</CODE> object containing the name of the Java class of the notification and the notification types sent by the string monitor.
javax.management.monitor.StringMonitor#createObservedObject(ObjectName)->ObservedObject:::Factory method for ObservedObject creation.
javax.management.monitor.StringMonitor#isComparableTypeValid(ObjectName, String, Comparable)->boolean:::Check that the type of the supplied observed attribute value is one of the value types supported by this monitor.
javax.management.monitor.StringMonitor#onErrorNotification(MonitorNotification)->void::: string monitor on error notification
javax.management.monitor.StringMonitor#buildAlarmNotification(ObjectName, String, Comparable)->MonitorNotification::: string monitor build alarm notification
javax.management.monitor.StringMonitorMBean#getDerivedGauge()->String:::Gets the derived gauge.
javax.management.monitor.StringMonitorMBean#getDerivedGaugeTimeStamp()->long:::Gets the derived gauge timestamp.
javax.management.monitor.StringMonitorMBean#getDerivedGauge(ObjectName)->String:::Gets the derived gauge for the specified MBean.
javax.management.monitor.StringMonitorMBean#getDerivedGaugeTimeStamp(ObjectName)->long:::Gets the derived gauge timestamp for the specified MBean.
javax.management.monitor.StringMonitorMBean#getStringToCompare()->String:::Gets the string to compare with the observed attribute.
javax.management.monitor.StringMonitorMBean#setStringToCompare(String)->void:::Sets the string to compare with the observed attribute.
javax.management.monitor.StringMonitorMBean#getNotifyMatch()->boolean:::Gets the matching notification's on/off switch value.
javax.management.monitor.StringMonitorMBean#setNotifyMatch(boolean)->void:::Sets the matching notification's on/off switch value.
javax.management.monitor.StringMonitorMBean#getNotifyDiffer()->boolean:::Gets the differing notification's on/off switch value.
javax.management.monitor.StringMonitorMBean#setNotifyDiffer(boolean)->void:::Sets the differing notification's on/off switch value.
