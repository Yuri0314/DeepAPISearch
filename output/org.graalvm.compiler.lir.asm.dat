org.graalvm.compiler.lir.asm.CompilationResultBuilder_OptionDescriptors#get(String)->OptionDescriptor::: compilation result builder_ option descriptors get
org.graalvm.compiler.lir.asm.CompilationResultBuilder_OptionDescriptors#iterator()->Iterator::: compilation result builder_ option descriptors iterator
org.graalvm.compiler.lir.asm.ArrayDataPointerConstant#isDefaultForKind()->boolean::: array data pointer constant is default for kind
org.graalvm.compiler.lir.asm.ArrayDataPointerConstant#serialize(ByteBuffer)->void::: array data pointer constant serialize
org.graalvm.compiler.lir.asm.ArrayDataPointerConstant#getSerializedSize()->int::: array data pointer constant get serialized size
org.graalvm.compiler.lir.asm.ArrayDataPointerConstant#toValueString()->String::: array data pointer constant to value string
org.graalvm.compiler.lir.asm.CompilationResultBuilder.AssemblerAnnotation#equals(Object)->boolean::: assembler annotation equals
org.graalvm.compiler.lir.asm.CompilationResultBuilder.AssemblerAnnotation#toString()->String::: assembler annotation to string
org.graalvm.compiler.lir.asm.CompilationResultBuilder#mustReplaceWithUncompressedNullRegister(JavaConstant)->boolean::: compilation result builder must replace with uncompressed null register
org.graalvm.compiler.lir.asm.CompilationResultBuilder#setTotalFrameSize(int)->void::: compilation result builder set total frame size
org.graalvm.compiler.lir.asm.CompilationResultBuilder#setMaxInterpreterFrameSize(int)->void::: compilation result builder set max interpreter frame size
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordMark(Object)->Mark::: compilation result builder record mark
org.graalvm.compiler.lir.asm.CompilationResultBuilder#blockComment(String)->void::: compilation result builder block comment
org.graalvm.compiler.lir.asm.CompilationResultBuilder#finish()->void:::Sets the CompilationResult#setTargetCode(byte[], int) code and CompilationResult#recordExceptionHandler(int, int) exception handler fields of the compilation result and then #closeCompilationResult() closes it.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#closeCompilationResult()->void:::Calls CompilationResult#close() on #compilationResult.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordExceptionHandlers(int, LIRFrameState)->void::: compilation result builder record exception handlers
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordImplicitException(int, LIRFrameState)->void::: compilation result builder record implicit exception
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordDirectCall(int, int, InvokeTarget, LIRFrameState)->void::: compilation result builder record direct call
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordIndirectCall(int, int, InvokeTarget, LIRFrameState)->void::: compilation result builder record indirect call
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordInfopoint(int, LIRFrameState, InfopointReason)->void::: compilation result builder record infopoint
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordInfopoint(int, DebugInfo, InfopointReason)->void::: compilation result builder record infopoint
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordSourceMapping(int, int, NodeSourcePosition)->void::: compilation result builder record source mapping
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordInlineDataInCode(Constant)->void::: compilation result builder record inline data in code
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordInlineDataInCodeWithNote(Constant, Object)->void::: compilation result builder record inline data in code with note
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordDataSectionReference(Data)->AbstractAddress::: compilation result builder record data section reference
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordDataReferenceInCode(DataPointerConstant)->AbstractAddress::: compilation result builder record data reference in code
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordDataReferenceInCode(Constant, int)->AbstractAddress::: compilation result builder record data reference in code
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordDataReferenceInCode(Data, int)->AbstractAddress::: compilation result builder record data reference in code
org.graalvm.compiler.lir.asm.CompilationResultBuilder#createDataItem(Constant)->Data::: compilation result builder create data item
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordDataReferenceInCode(byte[], int)->AbstractAddress::: compilation result builder record data reference in code
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordBranch(int, boolean)->void:::Notifies this object of a branch instruction at offset pcOffset in the code.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordInvokeVirtualOrInterfaceCallOp(int, NodeSourcePosition)->void:::Notifies this object of a call instruction belonging to an INVOKEVIRTUAL or INVOKEINTERFACE at offset pcOffset in the code.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#recordInlineInvokeCallOp(int, NodeSourcePosition)->void:::Notifies this object of a call instruction belonging to an INLINE_INVOKE at offset pcOffset in the code.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asIntConst(Value)->int:::Returns the integer value of any constant that can be represented by a 32-bit integer value, including long constants that fit into the 32-bit range.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asFloatConst(Value)->float:::Returns the float value of any constant that can be represented by a 32-bit float value.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asLongConst(Value)->long:::Returns the long value of any constant that can be represented by a 64-bit long value.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asDoubleConst(Value)->double:::Returns the double value of any constant that can be represented by a 64-bit float value.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asFloatConstRef(JavaConstant)->AbstractAddress:::Returns the address of a float constant that is embedded as a data reference into the code.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asFloatConstRef(JavaConstant, int)->AbstractAddress::: compilation result builder as float const ref
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asDoubleConstRef(JavaConstant)->AbstractAddress:::Returns the address of a double constant that is embedded as a data reference into the code.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asDoubleConstRef(JavaConstant, int)->AbstractAddress::: compilation result builder as double const ref
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asLongConstRef(JavaConstant)->AbstractAddress:::Returns the address of a long constant that is embedded as a data reference into the code.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asObjectConstRef(JavaConstant)->AbstractAddress:::Returns the address of an object constant that is embedded as a data reference into the code.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asByteAddr(Value)->AbstractAddress::: compilation result builder as byte addr
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asShortAddr(Value)->AbstractAddress::: compilation result builder as short addr
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asIntAddr(Value)->AbstractAddress::: compilation result builder as int addr
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asLongAddr(Value)->AbstractAddress::: compilation result builder as long addr
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asFloatAddr(Value)->AbstractAddress::: compilation result builder as float addr
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asDoubleAddr(Value)->AbstractAddress::: compilation result builder as double addr
org.graalvm.compiler.lir.asm.CompilationResultBuilder#asAddress(Value)->AbstractAddress::: compilation result builder as address
org.graalvm.compiler.lir.asm.CompilationResultBuilder#isSuccessorEdge(LabelRef)->boolean:::Determines if a given edge from the block currently being emitted goes to its lexical successor.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#emit(LIR)->void:::Emits code for lir in its LIR#codeEmittingOrder() code emitting order.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#resetForEmittingCode()->void::: compilation result builder reset for emitting code
org.graalvm.compiler.lir.asm.CompilationResultBuilder#setOpCallback(Consumer, Consumer)->void::: compilation result builder set op callback
org.graalvm.compiler.lir.asm.CompilationResultBuilder#getOptions()->OptionValues::: compilation result builder get options
org.graalvm.compiler.lir.asm.CompilationResultBuilder#buildLabelOffsets(LIR)->void:::Builds up a map for label and LIR instruction positions where labels are or labels pointing to.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#labelWithinRange(LIRInstruction, Label, int)->boolean:::Answers the code generator whether the jump from instruction to label is within disp LIR instructions.
org.graalvm.compiler.lir.asm.CompilationResultBuilder#setConservativeLabelRanges()->void:::Sets this CompilationResultBuilder into conservative mode
org.graalvm.compiler.lir.asm.CompilationResultBuilderFactory#createBuilder(CodeCacheProvider, ForeignCallsProvider, FrameMap, Assembler, DataBuilder, FrameContext, OptionValues, DebugContext, CompilationResult, Register)->CompilationResultBuilder:::Creates a new CompilationResultBuilder.
org.graalvm.compiler.lir.asm.DataBuilder#createDataItem(Constant)->Data::: data builder create data item
org.graalvm.compiler.lir.asm.FrameContext#enter(CompilationResultBuilder)->void:::Emits code common to all entry points of a method
org.graalvm.compiler.lir.asm.FrameContext#leave(CompilationResultBuilder)->void:::Emits code to be executed just prior to returning from a method
org.graalvm.compiler.lir.asm.FrameContext#hasFrame()->boolean:::Determines if a frame is set up and torn down by this object.
