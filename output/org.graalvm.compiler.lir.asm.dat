CompilationResultBuilder#finish():::Sets the CompilationResult#setTargetCode(byte[], int) code and CompilationResult#recordExceptionHandler(int, int) exception handler fields of the compilation result and then #closeCompilationResult() closes it.:::position->asm->position->compilationResult->asm->close->setTargetCode->if->foreach->codeOffset->compilationResult->label->position->recordExceptionHandler->closeCompilationResult
CompilationResultBuilder#closeCompilationResult():::Calls CompilationResult#close() on #compilationResult.:::compilationResult->close
CompilationResultBuilder#recordBranch(int, boolean):::Notifies this object of a branch instruction at offset pcOffset in the code.:::
CompilationResultBuilder#recordInvokeVirtualOrInterfaceCallOp(int, NodeSourcePosition):::Notifies this object of a call instruction belonging to an INVOKEVIRTUAL or INVOKEINTERFACE at offset pcOffset in the code.:::
CompilationResultBuilder#recordInlineInvokeCallOp(int, NodeSourcePosition):::Notifies this object of a call instruction belonging to an INLINE_INVOKE at offset pcOffset in the code.:::
CompilationResultBuilder#asIntConst(Value):::Returns the integer value of any constant that can be represented by a 32-bit integer value, including long constants that fit into the 32-bit range.:::constant->asJavaConstant->c->constant->asLong->if->NumUtil->isInt->throw->GraalError->shouldNotReachHere->return
CompilationResultBuilder#asFloatConst(Value):::Returns the float value of any constant that can be represented by a 32-bit float value.:::constant->asJavaConstant->return->constant->asFloat
CompilationResultBuilder#asLongConst(Value):::Returns the long value of any constant that can be represented by a 64-bit long value.:::constant->asJavaConstant->return->constant->asLong
CompilationResultBuilder#asDoubleConst(Value):::Returns the double value of any constant that can be represented by a 64-bit float value.:::constant->asJavaConstant->return->constant->asDouble
CompilationResultBuilder#asFloatConstRef(JavaConstant):::Returns the address of a float constant that is embedded as a data reference into the code.:::return->asFloatConstRef
CompilationResultBuilder#asDoubleConstRef(JavaConstant):::Returns the address of a double constant that is embedded as a data reference into the code.:::return->asDoubleConstRef
CompilationResultBuilder#asLongConstRef(JavaConstant):::Returns the address of a long constant that is embedded as a data reference into the code.:::return->recordDataReferenceInCode
CompilationResultBuilder#asObjectConstRef(JavaConstant):::Returns the address of an object constant that is embedded as a data reference into the code.:::return->recordDataReferenceInCode
CompilationResultBuilder#isSuccessorEdge(LabelRef):::Determines if a given edge from the block currently being emitted goes to its lexical successor.:::order->lir->codeEmittingOrder->nextBlock->LIR->getNextBlock->return->edge->getTargetBlock
CompilationResultBuilder#emit(LIR):::Emits code for lir in its LIR#codeEmittingOrder() code emitting order.:::frameContext->enter->foreach->lir->codeEmittingOrder->emitBlock
CompilationResultBuilder#buildLabelOffsets(LIR):::Builds up a map for label and LIR instruction positions where labels are or labels pointing to.:::EconomicMap->create->EconomicMap->create->instructionPosition->foreach->generatedLIR->codeEmittingOrder->if->foreach->generatedLIR->getLIRforBlock->if->label->getLabel->if->labelBindLirPositions->put->lirPositions->put
CompilationResultBuilder#labelWithinRange(LIRInstruction, Label, int):::Answers the code generator whether the jump from instruction to label is within disp LIR instructions.:::if->return->labelPosition->labelBindLirPositions->get->instructionPosition->lirPositions->get->result->if->Math->abs->else->return
CompilationResultBuilder#setConservativeLabelRanges():::Sets this CompilationResultBuilder into conservative mode:::
CompilationResultBuilderFactory#createBuilder(CodeCacheProvider, ForeignCallsProvider, FrameMap, Assembler, DataBuilder, FrameContext, OptionValues, DebugContext, CompilationResult, Register):::Creates a new CompilationResultBuilder.:::
FrameContext#enter(CompilationResultBuilder):::Emits code common to all entry points of a method:::
FrameContext#leave(CompilationResultBuilder):::Emits code to be executed just prior to returning from a method:::
FrameContext#hasFrame():::Determines if a frame is set up and torn down by this object.:::
