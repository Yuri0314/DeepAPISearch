HttpTimestamper#generateTimestamp(TSRequest):::Connects to the TSA and requests a timestamp.:::connection->tsaURI->toURL->openConnection->connection->setDoOutput->connection->setUseCaches->connection->setRequestProperty->connection->setRequestMethod->connection->setConnectTimeout->if->headers->connection->getRequestProperties->entrySet->debug->connection->getRequestMethod->println->foreach->debug->println->debug->println->connection->connect->output->try->connection->getOutputStream->new->DataOutputStream->request->tsQuery->encode->output->write->output->flush->if->debug->println->catch->finally->if->output->close->input->replyBuffer->try->connection->getInputStream->new->BufferedInputStream->if->header->connection->getHeaderField->debug->println->i->while->connection->getHeaderField->key->connection->getHeaderFieldKey->debug->println->debug->println->connection->getContentType->verifyMimeType->clen->connection->getContentLength->input->readAllBytes->if->throw->new->EOFException->if->debug->println->catch->finally->if->input->close->return->new->TSResponse
TimestampToken#getDate():::Extract the date and time from the timestamp token.:::return
TSRequest#setVersion(int):::Sets the Time-Stamp Protocol version.:::
TSRequest#setPolicyId(String):::Sets an object identifier for the Time-Stamp Protocol policy.:::
TSRequest#setNonce(BigInteger):::Sets a nonce:::
TSRequest#requestCertificate(boolean):::Request that the TSA include its signing certificate in the response.:::
TSRequest#setExtensions(X509Extension[]):::Sets the Time-Stamp Protocol extensions.:::
TSResponse#getStatusCode():::Retrieve the status code returned by the TSA.:::return
TSResponse#getStatusMessages():::Retrieve the status messages returned by the TSA.:::return
TSResponse#getFailureInfo():::Retrieve the failure info returned by the TSA.:::return
TSResponse#getToken():::Retrieve the timestamp token returned by the TSA.:::return
TSResponse#getEncodedToken():::Retrieve the ASN.1 BER encoded timestamp token returned by the TSA.:::return
