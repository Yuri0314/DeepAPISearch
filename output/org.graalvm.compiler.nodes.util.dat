GraphUtil#removeNewNodes(Graph, Graph.Mark):::Removes all nodes created after the mark, assuming no "old" nodes point to "new" nodes.:::foreach->graph->getNewNodes->n->markDeleted->foreach->n->inputs->in->removeUsage
GraphUtil#normalizeLoops(StructuredGraph):::Remove loop header without loop ends:::loopRemoved->foreach->graph->getNodes->if->begin->loopEnds->isEmpty->graph->reduceDegenerateLoopBegin->else->normalizeLoopBegin->if->foreach->graph->getNodes->if->checkRedundantPhi
GraphUtil#approxSourceStackTraceElement(Node):::Gets an approximate source code location for a node if possible.:::position->node->getNodeSourcePosition->if->return->approxSourceStackTraceElement->elements->new->ArrayList<>->n->while->if->elements->targetMethod->asStackTraceElement->add->invoke->asNode->if->state->stateAfter->elements->Arrays->approxSourceStackTraceElement->asList->addAll->break->n->predecessor->return->elements->elements->size->new->StackTraceElementArr->toArray
GraphUtil#approxSourceStackTraceElement(FrameState):::Gets an approximate source code location for frame state.:::elements->new->ArrayList<>->state->while->code->state->getCode->if->elements->code->asStackTraceElement->add->state->outerFrameState->return->elements->new->StackTraceElementArr->toArray
GraphUtil#approxSourceStackTraceElement(BytecodePosition):::Gets approximate stack trace elements for a bytecode position.:::elements->new->ArrayList<>->position->while->method->position->getMethod->if->elements->method->position->getBCI->asStackTraceElement->add->position->getCaller->return->elements->new->StackTraceElementArr->toArray
GraphUtil#approxSourceException(Node, Throwable):::Gets an approximate source code location for a node, encoded as an exception, if possible.:::elements->approxSourceStackTraceElement->return->cause->getMessage->createBailoutException
GraphUtil#createBailoutException(String, Throwable, StackTraceElement[]):::Creates a bailout exception with the given stack trace elements and message.:::return->SourceStackTraceBailoutException->create
GraphUtil#approxSourceLocation(Node):::Gets an approximate source code location for a node if possible.:::stackTraceElements->approxSourceStackTraceElement->if->top->if->top->getFileName->top->getLineNumber->return->top->getFileName->top->getLineNumber->return
GraphUtil#toString(Iterable):::Returns a string representation of the given collection of objects.:::str->new->StringBuilder->str->append->foreach->str->append->append->if->str->length->str->str->length->setLength->str->append->return->str->toString
GraphUtil#unproxify(ValueNode):::Gets the original value by iterating through all ValueProxy ValueProxies.:::if->return->unproxify->else->return
GraphUtil#unproxify(ValueProxy):::Gets the original value by iterating through all ValueProxy ValueProxies.:::if->result->value->getOriginalNode->while->getOriginalNode->return->else->return
GraphUtil#arrayLength(ValueNode, FindLengthMode, ConstantReflectionProvider):::Returns the length of the array described by the value parameter, or null if it is not available:::Objects->requireNonNull->current->do->if->return->findLength->else->if->return->phiArrayLength->else->if->proxy->length->proxy->getOriginalNode->arrayLength->if->length->isConstant->proxy->proxyPoint->new->ValueProxyNode->return->else->if->getOriginalNode->else->return->while
GraphUtil#originalValue(ValueNode):::Tries to find an original value of the given node by traversing through proxies and unambiguous phis:::result->originalValueSimple->return
GraphUtil#predecessorIterable(FixedNode):::Returns an iterator that will return the given node followed by all its predecessors, up until the point where Node#predecessor() returns null.:::return->new->NodeIterable<FixedNode>
GraphUtil#virtualizeArrayCopy(VirtualizerTool, ValueNode, ValueNode, ValueNode, ValueNode, ResolvedJavaType, JavaKind, StructuredGraph, BiFunction):::Virtualize an array copy.:::sourceAlias->tool->getAlias->replacedSourceLength->tool->getAlias->replacedNewLength->tool->getAlias->replacedFrom->tool->getAlias->if->replacedNewLength->isConstant->replacedFrom->isConstant->replacedSourceLength->isConstant->return->fromInt->replacedFrom->asJavaConstant->asInt->newLengthInt->replacedNewLength->asJavaConstant->asInt->sourceLengthInt->replacedSourceLength->asJavaConstant->asInt->if->sourceVirtual->if->return->if->tool->getMaximumEntryCount->return->newEntryState->new->ValueNodeArr->readLength->Math->min->if->sourceVirtual->alwaysAssignable->newComponentType->getJavaKind->newComponentType->isJavaLangObject->for->i->else->sourceType->StampTool->tool->getMetaAccess->typeOrNull->if->sourceType->isArray->newComponentType->sourceType->getElementalType->isAssignableFrom->return->for->i->if->defaultValue->ConstantNode->defaultForKind->for->i->newVirtualArray->virtualArrayProvider->apply->tool->Collections->emptyList->createVirtualObject->tool->replaceWithVirtual
