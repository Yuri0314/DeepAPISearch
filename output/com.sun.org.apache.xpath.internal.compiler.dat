com.sun.org.apache.xpath.internal.compiler.Compiler#compileExpression(int)->Expression:::Execute the XPath object from a given opcode position
com.sun.org.apache.xpath.internal.compiler.Compiler#or(int)->Expression:::Compile an 'or' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#and(int)->Expression:::Compile an 'and' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#notequals(int)->Expression:::Compile a '!=' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#equals(int)->Expression:::Compile a '=' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#lte(int)->Expression:::Compile a '<=' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#lt(int)->Expression:::Compile a '<' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#gte(int)->Expression:::Compile a '>=' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#gt(int)->Expression:::Compile a '>' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#plus(int)->Expression:::Compile a '+' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#minus(int)->Expression:::Compile a '-' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#mult(int)->Expression:::Compile a '*' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#div(int)->Expression:::Compile a 'div' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#mod(int)->Expression:::Compile a 'mod' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#neg(int)->Expression:::Compile a unary '-' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#string(int)->Expression:::Compile a 'string(...)' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#bool(int)->Expression:::Compile a 'boolean(...)' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#number(int)->Expression:::Compile a 'number(...)' operation.
com.sun.org.apache.xpath.internal.compiler.Compiler#literal(int)->Expression:::Compile a literal string value.
com.sun.org.apache.xpath.internal.compiler.Compiler#numberlit(int)->Expression:::Compile a literal number value.
com.sun.org.apache.xpath.internal.compiler.Compiler#variable(int)->Expression:::Compile a variable reference.
com.sun.org.apache.xpath.internal.compiler.Compiler#group(int)->Expression:::Compile an expression group.
com.sun.org.apache.xpath.internal.compiler.Compiler#arg(int)->Expression:::Compile a function argument.
com.sun.org.apache.xpath.internal.compiler.Compiler#union(int)->Expression:::Compile a location path union
com.sun.org.apache.xpath.internal.compiler.Compiler#getLocationPathDepth()->int:::Get the level of the location path or union being constructed.
com.sun.org.apache.xpath.internal.compiler.Compiler#getFunctionTable()->FunctionTable:::Get the function table
com.sun.org.apache.xpath.internal.compiler.Compiler#locationPath(int)->Expression:::Compile a location path
com.sun.org.apache.xpath.internal.compiler.Compiler#predicate(int)->Expression:::Compile a location step predicate expression.
com.sun.org.apache.xpath.internal.compiler.Compiler#matchPattern(int)->Expression:::Compile an entire match pattern expression.
com.sun.org.apache.xpath.internal.compiler.Compiler#locationPathPattern(int)->Expression:::Compile a location match pattern unit expression.
com.sun.org.apache.xpath.internal.compiler.Compiler#getWhatToShow(int)->int:::Get a org.w3c.dom.traversal.NodeFilter bit set that tells what to show for a given node test.
com.sun.org.apache.xpath.internal.compiler.Compiler#stepPattern(int, int, StepPattern)->StepPattern:::Compile a step pattern unit expression, used for both location paths and match patterns.
com.sun.org.apache.xpath.internal.compiler.Compiler#getCompiledPredicates(int)->Expression[]:::Compile a zero or more predicates for a given match pattern.
com.sun.org.apache.xpath.internal.compiler.Compiler#countPredicates(int)->int:::Count the number of predicates in the step.
com.sun.org.apache.xpath.internal.compiler.Compiler#compileFunction(int)->Expression:::Compile a built-in XPath function.
com.sun.org.apache.xpath.internal.compiler.Compiler#warn(String, Object[])->void:::Warn the user of an problem.
com.sun.org.apache.xpath.internal.compiler.Compiler#assertion(boolean, java.lang.String)->void:::Tell the user of an assertion error, and probably throw an exception.
com.sun.org.apache.xpath.internal.compiler.Compiler#error(String, Object[])->void:::Tell the user of an error, and probably throw an exception.
com.sun.org.apache.xpath.internal.compiler.Compiler#getNamespaceContext()->PrefixResolver:::Get the current namespace context for the xpath.
com.sun.org.apache.xpath.internal.compiler.Compiler#setNamespaceContext(PrefixResolver)->void:::Set the current namespace context for the xpath.
com.sun.org.apache.xpath.internal.compiler.FuncLoader#getName()->String:::Get the local class name of the function class
com.sun.org.apache.xpath.internal.compiler.FuncLoader#getFunction()->Function:::Get a Function instance that this instance is liaisoning for.
com.sun.org.apache.xpath.internal.compiler.FunctionTable#getFunctionName(int)->String:::Return the name of the a function in the static table
com.sun.org.apache.xpath.internal.compiler.FunctionTable#getFunction(int)->Function:::Obtain a new Function object from a function ID.
com.sun.org.apache.xpath.internal.compiler.FunctionTable#getFunctionID(String)->Integer:::Obtain a function ID from a given function name
com.sun.org.apache.xpath.internal.compiler.FunctionTable#installFunction(String, Class)->int:::Install a built-in function.
com.sun.org.apache.xpath.internal.compiler.FunctionTable#functionAvailable(String)->boolean:::Tell if a built-in, non-namespaced function is available.
com.sun.org.apache.xpath.internal.compiler.Keywords#getAxisName(String)->Integer::: keywords get axis name
com.sun.org.apache.xpath.internal.compiler.Keywords#lookupNodeTest(String)->Integer::: keywords lookup node test
com.sun.org.apache.xpath.internal.compiler.Keywords#getKeyWord(String)->Integer::: keywords get key word
com.sun.org.apache.xpath.internal.compiler.Keywords#getNodeType(String)->Integer::: keywords get node type
com.sun.org.apache.xpath.internal.compiler.Lexer#tokenize(String)->void:::Walk through the expression and build a token queue, and a map of the top-level elements.
com.sun.org.apache.xpath.internal.compiler.Lexer#tokenize(String, List)->void:::Walk through the expression and build a token queue, and a map of the top-level elements.
com.sun.org.apache.xpath.internal.compiler.Lexer#getKeywordToken(String)->int:::Given a string, return the corresponding keyword token.
com.sun.org.apache.xpath.internal.compiler.OpMap#toString()->String:::Return the expression as a string for diagnostics.
com.sun.org.apache.xpath.internal.compiler.OpMap#getPatternString()->String:::Return the expression as a string for diagnostics.
com.sun.org.apache.xpath.internal.compiler.OpMap#getTokenQueue()->ObjectVector:::Get the XPath as a list of tokens.
com.sun.org.apache.xpath.internal.compiler.OpMap#getToken(int)->Object:::Get the XPath as a list of tokens.
com.sun.org.apache.xpath.internal.compiler.OpMap#getTokenQueueSize()->int:::Get size of the token queue.
com.sun.org.apache.xpath.internal.compiler.OpMap#getOpMap()->OpMapVector:::Get the opcode list that describes the XPath operations
com.sun.org.apache.xpath.internal.compiler.OpMap#shrink()->void:::Replace the large arrays with a small array.
com.sun.org.apache.xpath.internal.compiler.OpMap#getOp(int)->int:::Given an operation position, return the current op.
com.sun.org.apache.xpath.internal.compiler.OpMap#setOp(int, int)->void:::Set the op at index to the given int.
com.sun.org.apache.xpath.internal.compiler.OpMap#getNextOpPos(int)->int:::Given an operation position, return the end position, i.e
com.sun.org.apache.xpath.internal.compiler.OpMap#getNextStepPos(int)->int:::Given a location step position, return the end position, i.e
com.sun.org.apache.xpath.internal.compiler.OpMap#getNextOpPos(int[], int)->int:::Given an operation position, return the end position, i.e
com.sun.org.apache.xpath.internal.compiler.OpMap#getFirstPredicateOpPos(int)->int:::Given an FROM_stepType position, return the position of the first predicate, if there is one, or else this will point to the end of the FROM_stepType
com.sun.org.apache.xpath.internal.compiler.OpMap#error(String, Object[])->void:::Tell the user of an error, and probably throw an exception.
com.sun.org.apache.xpath.internal.compiler.OpMap#getFirstChildPos(int)->int:::Go to the first child of a given operation.
com.sun.org.apache.xpath.internal.compiler.OpMap#getArgLength(int)->int:::Get the length of an operation.
com.sun.org.apache.xpath.internal.compiler.OpMap#getArgLengthOfStep(int)->int:::Given a location step, get the length of that step.
com.sun.org.apache.xpath.internal.compiler.OpMap#getFirstChildPosOfStep(int)->int:::Get the first child position of a given location step.
com.sun.org.apache.xpath.internal.compiler.OpMap#getStepTestType(int)->int:::Get the test type of the step, i.e
com.sun.org.apache.xpath.internal.compiler.OpMap#getStepNS(int)->String:::Get the namespace of the step.
com.sun.org.apache.xpath.internal.compiler.OpMap#getStepLocalName(int)->String:::Get the local name of the step.
com.sun.org.apache.xpath.internal.compiler.OpMapVector#elementAt(int)->int:::Get the nth element.
com.sun.org.apache.xpath.internal.compiler.OpMapVector#setElementAt(int, int)->void:::Sets the component at the specified index of this vector to be the specified object
com.sun.org.apache.xpath.internal.compiler.OpMapVector#setToSize(int)->void::: op map vector set to size
com.sun.org.apache.xpath.internal.compiler.XPathParser#initXPath(Compiler, String, PrefixResolver)->void:::Given an string, init an XPath object for selections, in order that a parse doesn't have to be done each time the expression is evaluated.
com.sun.org.apache.xpath.internal.compiler.XPathParser#initMatchPattern(Compiler, String, PrefixResolver)->void:::Given an string, init an XPath object for pattern matches, in order that a parse doesn't have to be done each time the expression is evaluated.
com.sun.org.apache.xpath.internal.compiler.XPathParser#setErrorHandler(ErrorListener)->void:::Allow an application to register an error event handler, where syntax errors will be sent
com.sun.org.apache.xpath.internal.compiler.XPathParser#getErrorListener()->ErrorListener:::Return the current error listener.
com.sun.org.apache.xpath.internal.compiler.XPathParser#tokenIs(String)->boolean:::Check whether m_token matches the target string.
com.sun.org.apache.xpath.internal.compiler.XPathParser#tokenIs(char)->boolean:::Check whether m_tokenChar==c.
com.sun.org.apache.xpath.internal.compiler.XPathParser#lookahead(char, int)->boolean:::Look ahead of the current token in order to make a branching decision.
com.sun.org.apache.xpath.internal.compiler.XPathParser#warn(String, Object[])->void:::Warn the user of a problem.
com.sun.org.apache.xpath.internal.compiler.XPathParser#error(String, Object[])->void:::Notify the user of an error, and probably throw an exception.
com.sun.org.apache.xpath.internal.compiler.XPathParser#dumpRemainingTokenQueue()->String:::Dump the remaining token queue
com.sun.org.apache.xpath.internal.compiler.XPathParser#getFunctionToken(String)->int:::Given a string, return the corresponding function token.
com.sun.org.apache.xpath.internal.compiler.XPathParser#insertOp(int, int, int)->void:::Insert room for operation
com.sun.org.apache.xpath.internal.compiler.XPathParser#appendOp(int, int)->void:::Insert room for operation
com.sun.org.apache.xpath.internal.compiler.XPathParser#Expr()->void:::Expr  ::=  OrExpr
com.sun.org.apache.xpath.internal.compiler.XPathParser#OrExpr()->void:::OrExpr  ::=  AndExpr | OrExpr 'or' AndExpr
com.sun.org.apache.xpath.internal.compiler.XPathParser#AndExpr()->void:::AndExpr  ::=  EqualityExpr | AndExpr 'and' EqualityExpr
com.sun.org.apache.xpath.internal.compiler.XPathParser#EqualityExpr(int)->int::: path parser  equality expr
com.sun.org.apache.xpath.internal.compiler.XPathParser#RelationalExpr(int)->int:::.
com.sun.org.apache.xpath.internal.compiler.XPathParser#AdditiveExpr(int)->int:::This has to handle construction of the operations so that they are evaluated in pre-fix order
com.sun.org.apache.xpath.internal.compiler.XPathParser#MultiplicativeExpr(int)->int:::This has to handle construction of the operations so that they are evaluated in pre-fix order
com.sun.org.apache.xpath.internal.compiler.XPathParser#UnaryExpr()->void:::UnaryExpr  ::=  UnionExpr | '-' UnaryExpr
com.sun.org.apache.xpath.internal.compiler.XPathParser#StringExpr()->void:::StringExpr  ::=  Expr
com.sun.org.apache.xpath.internal.compiler.XPathParser#BooleanExpr()->void:::StringExpr  ::=  Expr
com.sun.org.apache.xpath.internal.compiler.XPathParser#NumberExpr()->void:::NumberExpr  ::=  Expr
com.sun.org.apache.xpath.internal.compiler.XPathParser#UnionExpr()->void:::The context of the right hand side expressions is the context of the left hand side expression
com.sun.org.apache.xpath.internal.compiler.XPathParser#PathExpr()->void:::PathExpr  ::=  LocationPath | FilterExpr | FilterExpr '/' RelativeLocationPath | FilterExpr '//' RelativeLocationPath
com.sun.org.apache.xpath.internal.compiler.XPathParser#FilterExpr()->int:::FilterExpr  ::=  PrimaryExpr | FilterExpr Predicate
com.sun.org.apache.xpath.internal.compiler.XPathParser#PrimaryExpr()->boolean:::PrimaryExpr  ::=  VariableReference | '(' Expr ')' | Literal | Number | FunctionCall
com.sun.org.apache.xpath.internal.compiler.XPathParser#Argument()->void:::Argument    ::=    Expr
com.sun.org.apache.xpath.internal.compiler.XPathParser#FunctionCall()->boolean:::FunctionCall    ::=    FunctionName '(' ( Argument ( ',' Argument)*)? ')'
com.sun.org.apache.xpath.internal.compiler.XPathParser#LocationPath()->void:::LocationPath ::= RelativeLocationPath | AbsoluteLocationPath
com.sun.org.apache.xpath.internal.compiler.XPathParser#RelativeLocationPath()->boolean:::RelativeLocationPath ::= Step | RelativeLocationPath '/' Step | AbbreviatedRelativeLocationPath
com.sun.org.apache.xpath.internal.compiler.XPathParser#Step()->boolean:::Step    ::=    Basis Predicate | AbbreviatedStep
com.sun.org.apache.xpath.internal.compiler.XPathParser#Basis()->void:::Basis    ::=    AxisName '::' NodeTest | AbbreviatedBasis
com.sun.org.apache.xpath.internal.compiler.XPathParser#AxisName()->int:::Basis    ::=    AxisName '::' NodeTest | AbbreviatedBasis
com.sun.org.apache.xpath.internal.compiler.XPathParser#NodeTest(int)->void:::NodeTest    ::=    WildcardName | NodeType '(' ')' | 'processing-instruction' '(' Literal ')'
com.sun.org.apache.xpath.internal.compiler.XPathParser#Predicate()->void:::Predicate ::= '[' PredicateExpr ']'
com.sun.org.apache.xpath.internal.compiler.XPathParser#PredicateExpr()->void:::PredicateExpr ::= Expr
com.sun.org.apache.xpath.internal.compiler.XPathParser#QName()->void:::QName ::=  (Prefix ':')? LocalPart Prefix ::=  NCName LocalPart ::=  NCName
com.sun.org.apache.xpath.internal.compiler.XPathParser#NCName()->void:::NCName ::=  (Letter | '_') (NCNameChar) NCNameChar ::=  Letter | Digit | '.' | '-' | '_' | CombiningChar | Extender
com.sun.org.apache.xpath.internal.compiler.XPathParser#Literal()->void:::The value of the Literal is the sequence of characters inside the " or ' characters>
com.sun.org.apache.xpath.internal.compiler.XPathParser#Number()->void:::Number ::= [0-9]+('.'[0-9]+)? | '.'[0-9]+
com.sun.org.apache.xpath.internal.compiler.XPathParser#Pattern()->void:::Pattern  ::=  LocationPathPattern | Pattern '|' LocationPathPattern
com.sun.org.apache.xpath.internal.compiler.XPathParser#LocationPathPattern()->void:::LocationPathPattern  ::=  '/' RelativePathPattern? | IdKeyPattern (('/' | '//') RelativePathPattern)? | '//'? RelativePathPattern
com.sun.org.apache.xpath.internal.compiler.XPathParser#IdKeyPattern()->void:::IdKeyPattern  ::=  'id' '(' Literal ')' | 'key' '(' Literal ',' Literal ')' (Also handle doc())
com.sun.org.apache.xpath.internal.compiler.XPathParser#RelativePathPattern()->void:::RelativePathPattern  ::=  StepPattern | RelativePathPattern '/' StepPattern | RelativePathPattern '//' StepPattern
com.sun.org.apache.xpath.internal.compiler.XPathParser#StepPattern(boolean)->boolean:::StepPattern  ::=  AbbreviatedNodeTestStep
com.sun.org.apache.xpath.internal.compiler.XPathParser#AbbreviatedNodeTestStep(boolean)->boolean:::AbbreviatedNodeTestStep    ::=    '@'? NodeTest Predicate
