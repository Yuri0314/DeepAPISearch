BsdVtblAccess#vtblSymbolForType(Type)::: bsd vtbl access vtbl symbol for type:::return->type->getName->length
CLHSDB#main(String[])::: b main:::new->CLHSDB->run
CLHSDB#run()::: b run:::new->HotSpotAgent->Runtime->getRuntime->new->java.lang.Thread->addShutdownHook->if->attachDebugger->else->if->attachDebugger->else->if->attachDebugger->di->new->CommandProcessor.DebuggerInterface->in->new->InputStreamReader->new->BufferedReader->cp->new->CommandProcessor->cp->run
CLHSDB#doUsage()::: b do usage:::println->println->println->println->println->HotSpotAgent->showUsage
CLHSDB#attachDebugger(JVMDebugger)::: b attach debugger:::agent->attach
CLHSDB#attachDebugger(String):::NOTE we are in a different thread here than either the main         thread or the Swing/AWT event handler thread, so we must be very         careful when creating or removing widgets:::try->Integer->parseInt->catch->print->finally->try->println->agent->attach->catch->errMsg->e->getMessage->formatMessage->println->agent->detach->e->printStackTrace->return->finally
CLHSDB#attachDebugger(String, String):::NOTE we are in a different thread here than either the main         thread or the Swing/AWT event handler thread, so we must be very         careful when creating or removing widgets:::try->println->agent->attach->catch->errMsg->e->getMessage->formatMessage->println->agent->detach->e->printStackTrace->return->finally
CLHSDB#connect(String):::NOTE we are in a different thread here than either the main         thread or the Swing/AWT event handler thread, so we must be very         careful when creating or removing widgets:::try->println->agent->attach->catch->errMsg->e->getMessage->formatMessage->println->agent->detach->e->printStackTrace->return->finally
CLHSDB#detachDebugger()::: b detach debugger:::if->return->agent->detach
CLHSDB#detach()::: b detach:::detachDebugger
CLHSDB#formatMessage(String, int):::Punctuates the given string with \n's where necessary to not         exceed the given number of characters per line:::buf->message->length->new->StringBuffer->tokenizer->new->StringTokenizer->curLineLength->while->tokenizer->hasMoreTokens->tok->tokenizer->nextToken->if->tok->length->buf->append->else->if->buf->append->buf->append->tok->length->return->buf->toString
CommandProcessor.DebuggerInterface#getAgent()::: debugger interface get agent:::
CommandProcessor.DebuggerInterface#isAttached()::: debugger interface is attached:::
CommandProcessor.DebuggerInterface#attach(String)::: debugger interface attach:::
CommandProcessor.DebuggerInterface#attach(String, String)::: debugger interface attach:::
CommandProcessor.DebuggerInterface#detach()::: debugger interface detach:::
CommandProcessor.DebuggerInterface#reattach()::: debugger interface reattach:::
CommandProcessor.BootFilter#canInclude(InstanceKlass)::: boot filter can include:::return->kls->getClassLoader
CommandProcessor.NonBootFilter#canInclude(InstanceKlass)::: non boot filter can include:::if->kls->getClassLoader->return->if->emitted->kls->getName->get->return->emitted->kls->getName->put->return
CommandProcessor.Tokens#splitWhitespace(String)::: tokens split whitespace:::t->cmd->split->if->length->return->new->StringArr->return
CommandProcessor.Tokens#add(String, ArrayList)::: tokens add:::if->s->length->t->add
CommandProcessor.Tokens#nextToken()::: tokens next token:::return
CommandProcessor.Tokens#hasMoreTokens()::: tokens has more tokens:::return
CommandProcessor.Tokens#countTokens()::: tokens count tokens:::return
CommandProcessor.Tokens#trim(int)::: tokens trim:::if->else->throw->String->valueOf->new->IndexOutOfBoundsException
CommandProcessor.Tokens#join(String)::: tokens join:::result->new->StringBuffer->for->w->return->result->toString
CommandProcessor.Tokens#at(int)::: tokens at:::if->throw->String->valueOf->new->IndexOutOfBoundsException->return
CommandProcessor.Command#doit(Tokens)::: command doit:::
CommandProcessor.Command#usage()::: command usage:::out->println
CommandProcessor.Command#printOopValue(Oop)::: command print oop value:::if->k->oop->getKlass->s->k->getName->if->out->s->asString->print->else->out->print->Oop->printOopAddressOn->else->out->print
CommandProcessor.Command#printNode(SimpleTreeNode)::: command print node:::count->node->getChildCount->for->i
CommandProcessor#quote(String)::: command processor quote:::if->s->indexOf->out->print->else->out->print->out->print->out->print
CommandProcessor#dumpType(Type)::: command processor dump type:::out->print->type->getName->quote->out->print->if->type->getSuperclass->type->getSuperclass->getName->quote->out->print->else->out->print->out->type->isOopType->print->out->print->if->type->isCIntegerType->out->print->out->isUnsigned->print->out->print->else->out->print->out->type->getSize->print->out->println
CommandProcessor#dumpFields(Type)::: command processor dump fields:::dumpFields
CommandProcessor#dumpFields(Type, boolean)::: command processor dump fields:::i->type->getFields->while->i->hasNext->f->i->next->if->f->isStatic->continue->out->print->type->getName->quote->out->print->out->f->getName->print->out->print->f->getType->getName->quote->out->print->out->f->isStatic->print->out->print->if->f->isStatic->out->print->out->f->getStaticFieldAddress->print->else->out->f->getOffset->print->out->print->out->println
CommandProcessor#lookup(String)::: command processor lookup:::if->symbol->indexOf->parts->symbol->split->mangled->new->StringBuffer->for->i->mangled->append->mangled->toString->return->VM->getVM->getDebugger->lookup
CommandProcessor#parseAddress(String)::: command processor parse address:::return->VM->getVM->getDebugger->parseAddress
CommandProcessor#findCommand(String)::: command processor find command:::return->commands->get
CommandProcessor#printPrompt()::: command processor print prompt:::out->print
CommandProcessor#preAttach()::: command processor pre attach:::
CommandProcessor#postAttach()::: command processor post attach:::try->new->JSJavaScriptEngine->try->jsengine->this->getClass->new->ClassArr->getMethod->defineFunction->catch->exp->printStackTrace->finally->jsengine->start->catch->println->if->ex->printStackTrace->finally
CommandProcessor#registerCommand(String, String, String)::: command processor register command:::commands->new->Command->put
CommandProcessor#setOutput(PrintStream)::: command processor set output:::
CommandProcessor#setErr(PrintStream)::: command processor set err:::
CommandProcessor#run(boolean)::: command processor run:::while->if->printPrompt->ln->try->in->readLine->catch->finally->if->if->err->println->return->executeCommand
CommandProcessor#executeCommand(String, boolean)::: command processor execute command:::if->ln->indexOf->size->history->size->if->err->println->else->result->new->StringBuffer->m->historyPattern->matcher->start->while->m->find->if->m->start->result->ln->m->start->substring->append->m->end->cmd->m->group->if->cmd->equals->result->history->history->size->get->append->else->if->cmd->equals->item->history->history->size->get->new->Tokens->item->trim->result->item->join->append->else->if->cmd->equals->item->history->history->size->get->new->Tokens->item->nextToken->result->item->join->append->else->if->cmd->equals->item->history->history->size->get->new->Tokens->result->item->item->countTokens->at->append->else->tail->cmd->substring->switch->tail->charAt->index->Integer->parseInt->if->history->size->if->err->println->else->result->history->get->append->break->for->i->history->size->if->result->length->err->println->else->if->ln->length->result->ln->substring->append->result->toString->if->out->println->if->out->println->redirect->t->new->Tokens->if->t->hasMoreTokens->error->if->history->add->len->t->countTokens->if->r->t->at->if->r->equals->r->equals->append->r->length->file->t->at->try->new->FileOutputStream->new->BufferedOutputStream->new->PrintStream->t->trim->catch->out->println->if->e->printStackTrace->finally->if->savedout->if->try->executeCommand->catch->err->println->if->e->printStackTrace->finally->if->redirect->close
CommandProcessor#executeCommand(Tokens)::: command processor execute command:::cmd->args->nextToken->doit->findCommand->if->out->println->else->if->debugger->isAttached->out->println->else->try->doit->doit->catch->out->println->if->e->printStackTrace->finally
DebugServer#usage()::: debug server usage:::getClass->getName->println->getClass->getName->println->println->println->println->println->println->println->System->exit
DebugServer#main(String[])::: debug server main:::new->DebugServer->run
DebugServer#run(String[])::: debug server run:::if->usage->if->startsWith->usage->pid->usePid->coreFileName->javaExecutableName->serverID->switch->try->Integer->parseInt->catch->usage->finally->break->try->Integer->parseInt->catch->finally->break->break->break->agent->new->HotSpotAgent->try->if->println->agent->startServer->else->println->agent->startServer->catch->if->print->else->print->e->printStackTrace->System->exit->finally->Runtime->getRuntime->new->Runnable->new->java.lang.Thread->addShutdownHook->println
HelloWorld#main(String[])::: hello world main:::foo->a->println
HelloWorld#a()::: hello world a:::return->b
HelloWorld#b()::: hello world b:::return->c
HelloWorld#c()::: hello world c:::return->d
HelloWorld#d(String)::: hello world d:::println->synchronized->if->try->method->getMethod->result->method->new->ObjectArr->invoke->return->result->intValue->catch->throw->e->toString->new->RuntimeException->finally->else->i->fib->l->f->d->c->s->b->ret->e->println->return
HelloWorld#e()::: hello world e:::println->i->while->if->System->gc->println->while->return
HelloWorld#fib(int)::: hello world fib:::if->return->return->fib->fib
HotSpotAgent#showUsage()::: hot spot agent show usage:::
HotSpotAgent#getDebugger()::: hot spot agent get debugger:::return
HotSpotAgent#getTypeDataBase()::: hot spot agent get type data base:::return
HotSpotAgent#attach(int):::This attaches to a process running on the local machine.:::if->throw->new->DebuggerException->go
HotSpotAgent#attach(String, String):::This opens a core file on the local machine:::if->throw->new->DebuggerException->if->throw->new->DebuggerException->go
HotSpotAgent#attach(JVMDebugger):::This uses a JVMDebugger that is already attached to the core or process:::go
HotSpotAgent#attach(String):::This attaches to a "debug server" on a remote machine; this       remote server has already attached to a process or opened a       core file and is waiting for RMI calls on the Debugger object to       come in.:::if->throw->new->DebuggerException->if->throw->new->DebuggerException->go
HotSpotAgent#detach():::This should only be called by the user on the client machine,       not the server machine:::if->throw->new->DebuggerException->return->detachInternal
HotSpotAgent#startServer(int, String):::This attaches to a process running on the local machine and       starts a debug server, allowing remote machines to connect and       examine this process:::if->throw->new->DebuggerException->go
HotSpotAgent#startServer(int):::This attaches to a process running on the local machine and       starts a debug server, allowing remote machines to connect and       examine this process.:::startServer
HotSpotAgent#startServer(String, String, String):::This opens a core file on the local machine and starts a debug       server, allowing remote machines to connect and examine this       core file:::if->throw->new->DebuggerException->if->throw->new->DebuggerException->go
HotSpotAgent#startServer(String, String):::This opens a core file on the local machine and starts a debug       server, allowing remote machines to connect and examine this       core file.:::startServer
HotSpotAgent#shutdownServer():::This may only be called on the server side after startServer()       has been called:::if->throw->new->DebuggerException->return->detachInternal
HotSpotAgent#detachInternal()::: hot spot agent detach internal:::if->return->retval->if->VM->shutdown->dbg->ex->if->try->RMIHelper->unbind->catch->finally->else->if->if->dbg->detach->if->throw->return
HotSpotAgent#go()::: hot spot agent go:::setupDebugger->setupVM
HotSpotAgent#setupDebugger()::: hot spot agent setup debugger:::if->alternateDebugger->System->getProperty->if->setupDebuggerExisting->else->if->setupDebuggerAlternate->else->try->PlatformInfo->getOS->PlatformInfo->getCPU->catch->throw->new->DebuggerException->finally->if->os->equals->setupDebuggerSolaris->else->if->os->equals->setupDebuggerWin32->else->if->os->equals->setupDebuggerLinux->else->if->os->equals->setupDebuggerBsd->else->if->os->equals->setupDebuggerDarwin->else->throw->new->DebuggerException->if->remote->try->new->RemoteDebuggerServer->catch->throw->new->DebuggerException->finally->RMIHelper->rebind->else->connectRemoteDebugger
HotSpotAgent#setupVM()::: hot spot agent setup m:::try->if->os->equals->new->HotSpotSolarisVtblAccess->new->HotSpotTypeDataBase->else->if->os->equals->new->Win32VtblAccess->new->HotSpotTypeDataBase->else->if->os->equals->new->LinuxVtblAccess->new->HotSpotTypeDataBase->else->if->os->equals->new->BsdVtblAccess->new->HotSpotTypeDataBase->else->if->os->equals->new->BsdVtblAccess->new->HotSpotTypeDataBase->else->throw->new->DebuggerException->catch->throw->e->getSymbol->new->DebuggerException->finally->if->debugger->db->getJBooleanType->getSize->db->getJByteType->getSize->db->getJCharType->getSize->db->getJDoubleType->getSize->db->getJFloatType->getSize->db->getJIntType->getSize->db->getJLongType->getSize->db->getJShortType->getSize->configureJavaPrimitiveTypeSizes->if->try->VM->initialize->catch->throw->throw->new->DebuggerException->finally
HotSpotAgent#setupDebuggerExisting()::: hot spot agent setup debugger existing:::debugger->getOS->debugger->getCPU->setupJVMLibNames->debugger->getMachineDescription
HotSpotAgent#setupDebuggerAlternate(String)::: hot spot agent setup debugger alternate:::try->c->Class->forName->cons->c->getConstructor->cons->newInstance->attachDebugger->setupDebuggerExisting->catch->throw->new->DebuggerException->throw->new->DebuggerException->throw->new->DebuggerException->throw->new->DebuggerException->throw->new->DebuggerException->finally->println
HotSpotAgent#setupDebuggerSolaris()::: hot spot agent setup debugger solaris:::setupJVMLibNamesSolaris->dbg->new->ProcDebuggerLocal->attachDebugger->if->cpu->equals->new->MachineDescriptionIntelX86->else->if->cpu->equals->addressSize->dbg->getRemoteProcessAddressSize->if->throw->new->DebuggerException->if->new->MachineDescriptionSPARC32Bit->else->if->new->MachineDescriptionSPARC64Bit->else->throw->new->DebuggerException->else->if->cpu->equals->new->MachineDescriptionAMD64->else->throw->new->DebuggerException->dbg->setMachineDescription->return
HotSpotAgent#connectRemoteDebugger()::: hot spot agent connect remote debugger:::remote->RMIHelper->lookup->new->RemoteDebuggerClient->getMachineDescription->debugger->getOS->setupJVMLibNames->debugger->getCPU
HotSpotAgent#setupJVMLibNames(String)::: hot spot agent setup lib names:::if->os->equals->setupJVMLibNamesSolaris->else->if->os->equals->setupJVMLibNamesWin32->else->if->os->equals->setupJVMLibNamesLinux->else->if->os->equals->setupJVMLibNamesBsd->else->if->os->equals->setupJVMLibNamesDarwin->else->throw->new->RuntimeException
HotSpotAgent#setupJVMLibNamesSolaris()::: hot spot agent setup lib names solaris:::new->StringArr
HotSpotAgent#setupDebuggerWin32()::: hot spot agent setup debugger win32:::setupJVMLibNamesWin32->if->cpu->equals->new->MachineDescriptionIntelX86->else->if->cpu->equals->new->MachineDescriptionAMD64->else->throw->new->DebuggerException->new->WindbgDebuggerLocal->attachDebugger
HotSpotAgent#setupJVMLibNamesWin32()::: hot spot agent setup lib names win32:::new->StringArr
HotSpotAgent#setupDebuggerLinux()::: hot spot agent setup debugger linux:::setupJVMLibNamesLinux->if->cpu->equals->new->MachineDescriptionIntelX86->else->if->cpu->equals->new->MachineDescriptionAMD64->else->if->cpu->equals->new->MachineDescriptionPPC64->else->if->cpu->equals->new->MachineDescriptionAArch64->else->if->cpu->equals->if->LinuxDebuggerLocal->getAddressSize->new->MachineDescriptionSPARC64Bit->else->new->MachineDescriptionSPARC32Bit->else->try->Class->cpu->toUpperCase->forName->newInstance->catch->throw->new->DebuggerException->finally->dbg->new->LinuxDebuggerLocal->attachDebugger
HotSpotAgent#setupJVMLibNamesLinux()::: hot spot agent setup lib names linux:::new->StringArr
HotSpotAgent#setupDebuggerBsd()::: hot spot agent setup debugger bsd:::setupJVMLibNamesBsd->if->cpu->equals->new->MachineDescriptionIntelX86->else->if->cpu->equals->cpu->equals->new->MachineDescriptionAMD64->else->throw->new->DebuggerException->dbg->new->BsdDebuggerLocal->attachDebugger
HotSpotAgent#setupJVMLibNamesBsd()::: hot spot agent setup lib names bsd:::new->StringArr
HotSpotAgent#setupDebuggerDarwin()::: hot spot agent setup debugger darwin:::setupJVMLibNamesDarwin->if->cpu->equals->cpu->equals->new->MachineDescriptionAMD64->else->throw->new->DebuggerException->dbg->new->BsdDebuggerLocal->attachDebugger
HotSpotAgent#setupJVMLibNamesDarwin()::: hot spot agent setup lib names darwin:::new->StringArr
HotSpotAgent#attachDebugger():::Convenience routine which should be called by per-platform       debugger setup:::if->debugger->attach->else->if->debugger->attach->else->throw->new->DebuggerException
HotSpotSolarisVtblAccess#vtblSymbolForType(Type)::: hot spot solaris vtbl access vtbl symbol for type:::demangledSymbol->type->getName->return->mangle
HotSpotSolarisVtblAccess#mangle(String)::: hot spot solaris vtbl access mangle:::parts->symbol->split->mangled->new->StringBuffer->for->i->mangled->append->return->mangled->toString
HotSpotTypeDataBase#lookupType(String, boolean)::: hot spot type data base lookup type:::fieldType->super->lookupType->if->cTypeName->startsWith->cTypeName->substring->lookupType->if->cTypeName->endsWith->cTypeName->cTypeName->length->substring->lookupType->if->if->cTypeName->startsWith->cTypeName->endsWith->ttype->cTypeName->length->cTypeName->length->substring->templateType->lookupType->if->typeNameIsPointerType->recursiveCreateBasicPointerType->if->lookupOrFail->basicTargetType->createBasicType->generic->lookupOrFail->specific->lookupOrFail->basicTargetType->specific->getSize->setSize->fields->generic->getFields->while->fields->hasNext->f->fields->next->basicTargetType->f->getName->f->getType->f->isStatic->f->getOffset->internalCreateField->addField->if->typeNameIsPointerType->recursiveCreateBasicPointerType->if->super->lookupType->return
HotSpotTypeDataBase#readVMTypes()::: hot spot type data base read types:::typeEntryTypeNameOffset->typeEntrySuperclassNameOffset->typeEntryIsOopTypeOffset->typeEntryIsIntegerTypeOffset->typeEntryIsUnsignedOffset->typeEntrySizeOffset->typeEntryArrayStride->entryAddr->lookupInProcess->entryAddr->getAddressAt->if->throw->new->RuntimeException->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->if->throw->new->RuntimeException->typeNameAddr->do->entryAddr->getAddressAt->if->typeName->CStringUtilities->getString->superclassName->superclassNameAddr->entryAddr->getAddressAt->if->CStringUtilities->getString->isOopType->entryAddr->getCIntegerAt->isIntegerType->entryAddr->getCIntegerAt->isUnsigned->entryAddr->getCIntegerAt->size->entryAddr->getCIntegerAt->createType->if->typeName->equals->entryAddr->addOffsetTo->while->if->throw->new->RuntimeException
HotSpotTypeDataBase#initializePrimitiveTypes()::: hot spot type data base initialize primitive types:::lookupPrimitiveType->setJBooleanType->lookupPrimitiveType->setJByteType->lookupPrimitiveType->setJCharType->lookupPrimitiveType->setJDoubleType->lookupPrimitiveType->setJFloatType->lookupPrimitiveType->setJIntType->lookupPrimitiveType->setJLongType->lookupPrimitiveType->setJShortType->getJBooleanType->setIsJavaPrimitiveType->getJByteType->setIsJavaPrimitiveType->getJCharType->setIsJavaPrimitiveType->getJDoubleType->setIsJavaPrimitiveType->getJFloatType->setIsJavaPrimitiveType->getJIntType->setIsJavaPrimitiveType->getJLongType->setIsJavaPrimitiveType->getJShortType->setIsJavaPrimitiveType
HotSpotTypeDataBase#lookupPrimitiveType(String)::: hot spot type data base lookup primitive type:::type->lookupType->if->throw->new->RuntimeException->return
HotSpotTypeDataBase#readExternalDefinitions()::: hot spot type data base read external definitions:::file->System->getProperty->if->println->in->try->t->new->FileInputStream->new->InputStreamReader->new->BufferedReader->new->StreamTokenizer->t->resetSyntax->t->wordChars->t->whitespaceChars->t->whitespaceChars->t->whitespaceChars->t->quoteChar->t->eolIsSignificant->while->t->nextToken->if->continue->if->equals->t->nextToken->containingType->lookupType->t->nextToken->fieldName->t->nextToken->fieldType->lookupType->t->nextToken->isStatic->Boolean->valueOf->booleanValue->t->nextToken->offset->Long->parseLong->t->nextToken->staticAddress->if->throw->new->InternalError->i->containingType->getFields->defined->while->i->hasNext->f->i->next->if->f->getName->equals->if->f->isStatic->throw->new->RuntimeException->if->if->f->getOffset->throw->new->RuntimeException->else->if->f->getStaticFieldAddress->equals->throw->new->RuntimeException->if->f->getType->println->f->getType->println->throw->new->RuntimeException->break->if->createField->else->if->equals->t->nextToken->typeName->t->nextToken->superclassName->if->superclassName->equals->t->nextToken->isOop->Boolean->valueOf->booleanValue->t->nextToken->isInteger->Boolean->valueOf->booleanValue->t->nextToken->isUnsigned->Boolean->valueOf->booleanValue->t->nextToken->size->Long->parseLong->type->try->lookupType->catch->finally->if->if->type->isOopType->throw->new->RuntimeException->if->type->isCIntegerType->throw->new->RuntimeException->if->type->isCIntegerType->isUnsigned->throw->new->RuntimeException->if->type->getSuperclass->if->if->type->getSize->type->lookupType->setSuperclass->else->throw->new->RuntimeException->else->if->throw->new->RuntimeException->if->type->getSuperclass->getName->equals->throw->new->RuntimeException->if->type->getSize->if->type->getSize->type->getSize->type->setSize->else->throw->type->getSize->new->RuntimeException->if->lookupType->createType->else->throw->new->InternalError->catch->ioe->printStackTrace->finally->try->in->close->catch->finally
HotSpotTypeDataBase#readVMStructs()::: hot spot type data base read structs:::structEntryTypeNameOffset->structEntryFieldNameOffset->structEntryTypeStringOffset->structEntryIsStaticOffset->structEntryOffsetOffset->structEntryAddressOffset->structEntryArrayStride->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->if->throw->new->RuntimeException->entryAddr->lookupInProcess->entryAddr->getAddressAt->if->throw->new->RuntimeException->fieldNameAddr->typeName->fieldName->typeString->isStatic->offset->staticFieldAddr->size->index->opaqueName->lookupOrCreateClass->do->entryAddr->getAddressAt->if->CStringUtilities->getString->addr->entryAddr->getAddressAt->if->throw->new->RuntimeException->CStringUtilities->getString->entryAddr->getAddressAt->if->else->CStringUtilities->getString->entryAddr->getCIntegerAt->if->entryAddr->getAddressAt->else->entryAddr->getCIntegerAt->containingType->lookupOrFail->fieldType->lookupType->createField->entryAddr->addOffsetTo->while
HotSpotTypeDataBase#readVMIntConstants()::: hot spot type data base read int constants:::intConstantEntryNameOffset->intConstantEntryValueOffset->intConstantEntryArrayStride->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->if->throw->new->RuntimeException->entryAddr->lookupInProcess->entryAddr->getAddressAt->if->throw->new->RuntimeException->nameAddr->do->entryAddr->getAddressAt->if->name->CStringUtilities->getString->value->entryAddr->getCIntegerAt->oldValue->lookupIntConstant->if->addIntConstant->else->if->oldValue->intValue->throw->new->RuntimeException->else->println->entryAddr->addOffsetTo->while->if->throw->new->RuntimeException
HotSpotTypeDataBase#readVMLongConstants()::: hot spot type data base read long constants:::longConstantEntryNameOffset->longConstantEntryValueOffset->longConstantEntryArrayStride->getLongValueFromProcess->getLongValueFromProcess->getLongValueFromProcess->if->throw->new->RuntimeException->entryAddr->lookupInProcess->entryAddr->getAddressAt->if->throw->new->RuntimeException->nameAddr->do->entryAddr->getAddressAt->if->name->CStringUtilities->getString->value->entryAddr->getCIntegerAt->oldValue->lookupLongConstant->if->addLongConstant->else->if->oldValue->longValue->throw->new->RuntimeException->else->println->entryAddr->addOffsetTo->while->if->throw->new->RuntimeException
HotSpotTypeDataBase#lookupOrFail(String)::: hot spot type data base lookup or fail:::type->lookupType->if->throw->new->RuntimeException->return
HotSpotTypeDataBase#getLongValueFromProcess(String)::: hot spot type data base get long value from process:::return->lookupInProcess->getCIntegerAt
HotSpotTypeDataBase#lookupInProcess(String)::: hot spot type data base lookup in process:::for->i->errStr->for->i->throw->new->NoSuchSymbolException
HotSpotTypeDataBase#lookupOrCreateClass(String, boolean, boolean, boolean)::: hot spot type data base lookup or create class:::type->lookupType->if->createBasicType->return
HotSpotTypeDataBase#createBasicType(String, boolean, boolean, boolean):::Creates a new BasicType, initializes its size to -1 so we can       test to ensure that all types' sizes are initialized by VMTypes,       and adds it to the database:::type->if->new->BasicCIntegerType->else->if->typeNameIsPointerType->recursiveCreateBasicPointerType->else->new->BasicType->if->if->typeName->equals->new->BasicCIntegerType->else->type->setIsOopType->type->setSize->addType->return
HotSpotTypeDataBase#recursiveCreateBasicPointerType(String):::Recursively creates a PointerType from the string representation       of the type's name:::result->super->lookupType->if->return->targetTypeName->typeName->typeName->lastIndexOf->substring->trim->targetType->if->typeNameIsPointerType->lookupType->if->recursiveCreateBasicPointerType->else->lookupType->if->if->targetTypeName->equals->targetTypeName->equals->basicTargetType->createBasicType->basicTargetType->setSize->else->if->targetTypeName->equals->basicTargetType->createBasicType->basicTargetType->setSize->else->if->println->createBasicType->new->BasicPointerType->if->typeName->equals->throw->new->InternalError->result->setSize->addType->return
HotSpotTypeDataBase#typeNameIsPointerType(String)::: hot spot type data base type name is pointer type:::i->typeName->length->while->Character->typeName->charAt->isWhitespace->if->typeName->charAt->return->return
HotSpotTypeDataBase#createType(String, String, boolean, boolean, boolean, long)::: hot spot type data base create type:::superclass->if->lookupOrCreateClass->curType->lookupOrCreateClass->if->if->curType->getSuperclass->curType->setSuperclass->if->curType->getSuperclass->throw->curType->getSuperclass->getName->superclass->getName->new->RuntimeException->if->curType->getSize->curType->getSize->curType->setSize->else->if->curType->getSize->throw->curType->getSize->new->RuntimeException->if->typeNameIsPointerType->println
HotSpotTypeDataBase#createField(BasicType, String, Type, boolean, long, Address):::"Virtual constructor" for fields based on type:::containingType->internalCreateField->addField
HotSpotTypeDataBase#internalCreateField(BasicType, String, Type, boolean, long, Address)::: hot spot type data base internal create field:::if->type->isOopType->return->new->BasicOopField->if->return->new->BasicCIntegerField->if->type->getJBooleanType->equals->return->new->BasicJBooleanField->if->type->getJByteType->equals->return->new->BasicJByteField->if->type->getJCharType->equals->return->new->BasicJCharField->if->type->getJDoubleType->equals->return->new->BasicJDoubleField->if->type->getJFloatType->equals->return->new->BasicJFloatField->if->type->getJIntType->equals->return->new->BasicJIntField->if->type->getJLongType->equals->return->new->BasicJLongField->if->type->getJShortType->equals->return->new->BasicJShortField->return->new->BasicField
HotSpotTypeDataBase#dumpMemory(Address, int)::: hot spot type data base dump memory:::i->while->addr->addOffsetTo->print->for->j->println
HSDB#main(String[])::: b main:::new->HSDB->run
HSDB#doUsage()::: b do usage:::println->println->println->println->println->HotSpotAgent->showUsage
HSDB.CloseUI#windowClosing(WindowEvent)::: close i window closing:::workerThread->shutdown->frame->dispose
HSDB#run()::: b run:::if->return->new->JFrame->frame->setSize->frame->setDefaultCloseOperation->frame->new->CloseUI->addWindowListener->new->HotSpotAgent->new->WorkerThread->new->java.util.ArrayList->new->java.util.ArrayList->menuBar->new->JMenuBar->menu->new->JMenu->menu->setMnemonic->item->new->ActionListener->createMenuItem->item->KeyStroke->getKeyStroke->setAccelerator->item->setMnemonic->menu->add->attachMenuItems->add->new->ActionListener->createMenuItem->item->KeyStroke->getKeyStroke->setAccelerator->item->setMnemonic->menu->add->attachMenuItems->add->new->ActionListener->createMenuItem->item->KeyStroke->getKeyStroke->setAccelerator->item->setMnemonic->menu->add->attachMenuItems->add->new->ActionListener->createMenuItem->item->KeyStroke->getKeyStroke->setAccelerator->item->setMnemonic->menu->add->detachMenuItems->add->setMenuItemsEnabled->menu->addSeparator->new->ActionListener->createMenuItem->item->KeyStroke->getKeyStroke->setAccelerator->item->setMnemonic->menu->add->menuBar->add->new->JMenu->toolsMenu->setMnemonic->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->item->KeyStroke->getKeyStroke->setAccelerator->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->new->ActionListener->createMenuItem->item->setMnemonic->toolsMenu->add->toolsMenu->setEnabled->menuBar->add->windowsMenu->new->JMenu->windowsMenu->setMnemonic->new->ActionListener->createMenuItem->item->setMnemonic->windowsMenu->add->new->ActionListener->createMenuItem->showDbgConsoleMenuItem->setMnemonic->windowsMenu->add->showDbgConsoleMenuItem->setEnabled->menuBar->add->frame->setJMenuBar->new->JDesktopPane->frame->getContentPane->add->GraphicsUtilities->Toolkit->getDefaultToolkit->getScreenSize->reshapeToAspectRatio->GraphicsUtilities->Toolkit->getDefaultToolkit->getScreenSize->centerInContainer->frame->setVisible->Runtime->getRuntime->new->java.lang.Thread->addShutdownHook->if->attach->else->if->attach->else->if->attach
HSDB#showAttachDialog()::: b show attach dialog:::setMenuItemsEnabled->attachDialog->new->JInternalFrame->attachDialog->getContentPane->new->BorderLayout->setLayout->panel->new->JPanel->panel->new->BoxLayout->setLayout->panel->BorderFactory->createEmptyBorder->setBorder->attachDialog->panel->getBackground->setBackground->panel->new->JLabel->add->pidTextField->new->JTextField->attacher->new->ActionListener->pidTextField->addActionListener->panel->add->attachDialog->getContentPane->add->vbox->Box->createVerticalBox->new->JPanel->panel->new->BoxLayout->setLayout->panel->BorderFactory->createEmptyBorder->setBorder->ta->new->JTextArea->ta->setLineWrap->ta->setWrapStyleWord->ta->setEditable->ta->panel->getBackground->setBackground->panel->add->vbox->add->hbox->Box->createHorizontalBox->hbox->Box->createGlue->add->button->new->JButton->button->addActionListener->hbox->add->hbox->Box->createHorizontalStrut->add->new->JButton->button->new->ActionListener->addActionListener->hbox->add->hbox->Box->createGlue->add->new->JPanel->panel->BorderFactory->createEmptyBorder->setBorder->panel->add->vbox->add->attachDialog->getContentPane->add->desktop->add->attachDialog->setSize->GraphicsUtilities->centerInContainer->attachDialog->show->pidTextField->requestFocus
HSDB#showOpenCoreFileDialog()::: b show open core file dialog:::setMenuItemsEnabled->dialog->new->JInternalFrame->dialog->getContentPane->new->BorderLayout->setLayout->panel->new->JPanel->panel->new->BoxLayout->setLayout->panel->BorderFactory->createEmptyBorder->setBorder->dialog->panel->getBackground->setBackground->hbox->Box->createHorizontalBox->vbox->Box->createVerticalBox->vbox->new->JLabel->add->vbox->new->JLabel->add->hbox->add->Box->createVerticalBox->corePathField->new->JTextField->execPathField->new->JTextField->vbox->add->vbox->add->hbox->add->browseCorePath->new->JButton->browseExecPath->new->JButton->browseCorePath->new->ActionListener->addActionListener->browseExecPath->new->ActionListener->addActionListener->Box->createVerticalBox->vbox->add->vbox->add->hbox->add->panel->add->dialog->getContentPane->add->attacher->new->ActionListener->corePathField->addActionListener->execPathField->addActionListener->Box->createVerticalBox->new->JPanel->panel->new->BoxLayout->setLayout->panel->BorderFactory->createEmptyBorder->setBorder->ta->new->JTextArea->ta->setLineWrap->ta->setWrapStyleWord->ta->setEditable->ta->panel->getBackground->setBackground->panel->add->vbox->add->Box->createHorizontalBox->hbox->Box->createGlue->add->button->new->JButton->button->addActionListener->hbox->add->hbox->Box->createHorizontalStrut->add->new->JButton->button->new->ActionListener->addActionListener->hbox->add->hbox->Box->createGlue->add->new->JPanel->panel->BorderFactory->createEmptyBorder->setBorder->panel->add->vbox->add->dialog->getContentPane->add->desktop->add->dialog->setSize->GraphicsUtilities->centerInContainer->dialog->show->corePathField->requestFocus
HSDB#showConnectDialog()::: b show connect dialog:::setMenuItemsEnabled->dialog->new->JInternalFrame->dialog->getContentPane->new->BorderLayout->setLayout->panel->new->JPanel->panel->new->BoxLayout->setLayout->panel->BorderFactory->createEmptyBorder->setBorder->dialog->panel->getBackground->setBackground->panel->new->JLabel->add->pidTextField->new->JTextField->attacher->new->ActionListener->pidTextField->addActionListener->panel->add->dialog->getContentPane->add->vbox->Box->createVerticalBox->new->JPanel->panel->new->BoxLayout->setLayout->panel->BorderFactory->createEmptyBorder->setBorder->ta->new->JTextArea->ta->setLineWrap->ta->setWrapStyleWord->ta->setEditable->ta->panel->getBackground->setBackground->panel->add->vbox->add->hbox->Box->createHorizontalBox->hbox->Box->createGlue->add->button->new->JButton->button->addActionListener->hbox->add->hbox->Box->createHorizontalStrut->add->new->JButton->button->new->ActionListener->addActionListener->hbox->add->hbox->Box->createGlue->add->new->JPanel->panel->BorderFactory->createEmptyBorder->setBorder->panel->add->vbox->add->dialog->getContentPane->add->desktop->add->dialog->setSize->GraphicsUtilities->centerInContainer->dialog->show->pidTextField->requestFocus
HSDB#showThreadOopInspector(JavaThread)::: b show thread oop inspector:::thread->getThreadObj->new->OopTreeNodeAdapter->showInspector
HSDB#showInspector(SimpleTreeNode)::: b show inspector:::new->Inspector->showPanel
HSDB#showLiveness(Oop, LivenessPathList)::: b show liveness:::bos->new->ByteArrayOutputStream->tty->new->PrintStream->numPaths->liveness->size->for->i->ta->bos->toString->new->JTextArea->ta->setLineWrap->ta->setWrapStyleWord->ta->setEditable->panel->new->JPanel->panel->new->BorderLayout->setLayout->scroller->new->JScrollPane->scroller->getViewport->add->panel->add->new->ByteArrayOutputStream->new->PrintStream->tty->print->Oop->printOopValueOn->frame->bos->toString->new->JInternalFrame->frame->setResizable->frame->setClosable->frame->setIconifiable->frame->getContentPane->new->BorderLayout->setLayout->frame->getContentPane->add->frame->pack->desktop->add->GraphicsUtilities->frame->getParent->getSize->reshapeToAspectRatio->frame->show
HSDB#fireComputeReversePtrs()::: b fire compute reverse ptrs:::if->VM->getVM->getRevPtrs->computeRevPtrsMenuItem->setEnabled->return->workerThread->new->Runnable->invokeLater
HSDB#showThreadStackMemory(JavaThread)::: b show thread stack memory:::vframe->getLastJavaVFrame->if->JOptionPane->thread->getThreadName->showInternalMessageDialog->return->stackFrame->thread->getThreadName->new->JInternalFrame->stackFrame->getContentPane->new->BorderLayout->setLayout->stackFrame->setResizable->stackFrame->setClosable->stackFrame->setIconifiable->addressSize->agent->getTypeDataBase->getAddressSize->is64Bit->tmpFrame->thread->getCurrentFrameGuess->sp->tmpFrame->getSP->starting->maxSP->minSP->tmpMap->thread->newRegisterMap->while->tmpFrame->isFirstFrame->tmpFrame->sender->if->tmpFrame->getSP->if->AddressOps->max->AddressOps->min->annoMemPanel->agent->getDebugger->minSP->addOffsetTo->maxSP->addOffsetTo->new->AnnotatedMemoryPanel->stackFrame->getContentPane->add->desktop->add->GraphicsUtilities->stackFrame->getParent->getSize->reshapeToAspectRatio->stackFrame->show->workerThread->new->StackWalker->invokeLater
HSDB#attach(JVMDebugger)::: b attach:::showThreadsDialog
HSDB#attach(String):::NOTE we are in a different thread here than either the main       thread or the Swing/AWT event handler thread, so we must be very       careful when creating or removing widgets:::try->Integer->parseInt->catch->SwingUtilities->new->Runnable->invokeLater->return->finally->remover->new->Runnable->try->SwingUtilities->new->Runnable->invokeLater->agent->attach->if->agent->getDebugger->hasConsole->showDbgConsoleMenuItem->setEnabled->SwingUtilities->invokeLater->catch->SwingUtilities->invokeLater->errMsg->e->getMessage->formatMessage->SwingUtilities->new->Runnable->invokeLater->agent->detach->return->finally->showThreadsDialog
HSDB#attach(String, String):::NOTE we are in a different thread here than either the main       thread or the Swing/AWT event handler thread, so we must be very       careful when creating or removing widgets:::remover->new->Runnable->try->SwingUtilities->new->Runnable->invokeLater->agent->attach->if->agent->getDebugger->hasConsole->showDbgConsoleMenuItem->setEnabled->SwingUtilities->invokeLater->catch->SwingUtilities->invokeLater->errMsg->e->getMessage->formatMessage->SwingUtilities->new->Runnable->invokeLater->agent->detach->return->finally->showThreadsDialog
HSDB#connect(String):::NOTE we are in a different thread here than either the main       thread or the Swing/AWT event handler thread, so we must be very       careful when creating or removing widgets:::remover->new->Runnable->try->SwingUtilities->new->Runnable->invokeLater->agent->attach->if->agent->getDebugger->hasConsole->showDbgConsoleMenuItem->setEnabled->SwingUtilities->invokeLater->catch->SwingUtilities->invokeLater->errMsg->e->getMessage->formatMessage->SwingUtilities->new->Runnable->invokeLater->agent->detach->return->finally->showThreadsDialog
HSDB#detachDebugger()::: b detach debugger:::if->return->agent->detach
HSDB#detach()::: b detach:::detachDebugger->setMenuItemsEnabled->setMenuItemsEnabled->toolsMenu->setEnabled->showDbgConsoleMenuItem->setEnabled->desktop->removeAll->desktop->invalidate->desktop->validate->desktop->repaint
HSDB#showThreadsDialog():::NOTE that this is called from another thread than the main or       Swing thread and we have to be careful about synchronization:::SwingUtilities->new->Runnable->invokeLater
HSDB#showObjectHistogram()::: b show object histogram:::histo->new->sun.jvm.hotspot.oops.ObjectHistogram->cleanup->new->ObjectHistogramCleanupThunk->doHeapIteration
HSDB.ObjectHistogramCleanupThunk#heapIterationComplete()::: object histogram cleanup thunk heap iteration complete:::SwingUtilities->new->Runnable->invokeLater
HSDB#showObjectsOfType(Klass)::: b show objects of type:::finder->new->FindObjectByType->cleanup->new->FindObjectByTypeCleanupThunk->bos->new->ByteArrayOutputStream->type->new->PrintStream->printValueOn->typeName->bos->toString->doHeapIteration
HSDB.FindObjectByTypeCleanupThunk#heapIterationComplete()::: find object by type cleanup thunk heap iteration complete:::SwingUtilities->new->Runnable->invokeLater
HSDB#showDebuggerConsole()::: b show debugger console:::if->new->JInternalFrame->consoleFrame->setResizable->consoleFrame->setClosable->consoleFrame->setIconifiable->consoleFrame->getContentPane->new->BorderLayout->setLayout->consoleFrame->getContentPane->agent->getDebugger->new->DebuggerConsolePanel->add->GraphicsUtilities->desktop->getSize->reshapeToAspectRatio->if->consoleFrame->getParent->desktop->add->consoleFrame->setVisible->consoleFrame->show->consoleFrame->getContentPane->getComponent->requestFocus
HSDB#showConsole()::: b show console:::di->new->CommandProcessor.DebuggerInterface->new->CommandProcessor->new->CommandProcessorPanel->showPanel
HSDB#showFindByQueryPanel()::: b show find by query panel:::new->FindByQueryPanel->showPanel
HSDB#showFindPanel()::: b show find panel:::new->FindPanel->showPanel
HSDB#showFindInHeapPanel()::: b show find in heap panel:::new->FindInHeapPanel->showPanel
HSDB#showFindInCodeCachePanel()::: b show find in code cache panel:::new->FindInCodeCachePanel->showPanel
HSDB#showHeapParametersPanel()::: b show heap parameters panel:::new->HeapParametersPanel->showPanel
HSDB#showThreadInfo(JavaThread)::: b show thread info:::thread->getThreadName->new->ThreadInfoPanel->showPanel
HSDB#showJavaStackTrace(JavaThread)::: b show java stack trace:::jstp->new->JavaStackTracePanel->thread->getThreadName->showPanel->jstp->setJavaThread
HSDB#showDeadlockDetectionPanel()::: b show deadlock detection panel:::new->DeadlockDetectionPanel->showPanel
HSDB#showMonitorCacheDumpPanel()::: b show monitor cache dump panel:::new->MonitorCacheDumpPanel->showPanel
HSDB#showClassBrowser()::: b show class browser:::progressFrame->new->JInternalFrame->progressFrame->setResizable->progressFrame->setClosable->progressFrame->setIconifiable->progressFrame->getContentPane->new->BorderLayout->setLayout->bar->new->ProgressBarPanel->bar->setIndeterminate->progressFrame->getContentPane->add->desktop->add->progressFrame->pack->GraphicsUtilities->centerInContainer->progressFrame->show->workerThread->new->Runnable->invokeLater
HSDB#showCodeViewer()::: b show code viewer:::new->CodeViewerPanel->showPanel
HSDB#showCodeViewer(Address)::: b show code viewer:::panel->new->CodeViewerPanel->showPanel->SwingUtilities->new->Runnable->invokeLater
HSDB#showMemoryViewer()::: b show memory viewer:::agent->getDebugger->agent->getTypeDataBase->getAddressSize->new->MemoryViewer->showPanel
HSDB#showCommandLineFlags()::: b show command line flags:::new->VMFlagsPanel->showPanel
HSDB#showVMVersion()::: b show version:::new->VMVersionInfoPanel->showPanel
HSDB#showSystemProperties()::: b show system properties:::new->SysPropsPanel->showPanel
HSDB#showPanel(String, JPanel)::: b show panel:::showPanel
HSDB#showPanel(String, JPanel, float, float)::: b show panel:::frame->new->JInternalFrame->frame->getContentPane->new->BorderLayout->setLayout->frame->setResizable->frame->setClosable->frame->setIconifiable->frame->setMaximizable->frame->getContentPane->add->desktop->add->GraphicsUtilities->frame->getParent->getSize->reshapeToAspectRatio->GraphicsUtilities->randomLocation->frame->show->if->addPanelListener
HSDB.CleanupThunk#heapIterationComplete()::: cleanup thunk heap iteration complete:::
HSDB.HeapProgress#heapIterationFractionUpdate(double)::: heap progress heap iteration fraction update:::if->SwingUtilities->new->Runnable->invokeLater->SwingUtilities->new->Runnable->invokeLater
HSDB.HeapProgress#heapIterationComplete()::: heap progress heap iteration complete:::SwingUtilities->new->Runnable->invokeLater->if->cleanup->heapIterationComplete
HSDB.VisitHeap#run()::: visit heap run:::VM->getVM->getObjectHeap->iterate
HSDB#doHeapIteration(String, String, HeapVisitor, CleanupThunk)::: b do heap iteration:::histo->new->sun.jvm.hotspot.oops.ObjectHistogram->progress->new->HeapProgress->progVisitor->new->ProgressiveHeapVisitor->workerThread->new->VisitHeap->invokeLater
HSDB#getLastJavaVFrame(JavaThread)::: b get last java frame:::regMap->cur->newRegisterMap->f->cur->getCurrentFrameGuess->if->return->imprecise->if->f->isInterpretedFrame->f->isInterpretedFrameValid->println->f->sender->vf->VFrame->newVFrame->if->println->return->if->vf->isJavaFrame->return->return->vf->javaSender
HSDB#dumpStack(JavaThread)::: b dump stack:::regMap->cur->newRegisterMap->f->cur->getCurrentFrameGuess->tty->while->tty->print->if->f->isInterpretedFrame->tty->print->else->if->f->isCompiledFrame->tty->print->else->if->f->isEntryFrame->tty->print->else->if->f->isNativeFrame->tty->print->else->if->f->isRuntimeFrame->tty->print->else->tty->print->tty->f->getPC->f->getSP->f->getFP->print->if->f->isSignalHandlerFrameDbg->tty->print->tty->println->if->f->isFirstFrame->f->sender->else
HSDB#createMenuItem(String, ActionListener)::: b create menu item:::item->new->JMenuItem->item->addActionListener->return
HSDB#formatMessage(String, int):::Punctuates the given string with \n's where necessary to not       exceed the given number of characters per line:::buf->message->length->new->StringBuffer->tokenizer->new->StringTokenizer->curLineLength->while->tokenizer->hasMoreTokens->tok->tokenizer->nextToken->if->tok->length->buf->append->else->if->buf->append->buf->append->tok->length->return->buf->toString
HSDB#setMenuItemsEnabled(java.util.List, boolean)::: b set menu items enabled:::for->iter->items->iterator->iter->hasNext
LinuxVtblAccess#vtblSymbolForType(Type)::: linux vtbl access vtbl symbol for type:::return->type->getName->length
ObjectHistogram#main(String[])::: object histogram main:::main
RMIHelper#rebind(String, Remote)::: helper rebind:::name->getName->try->Naming->rebind->catch->if->try->LocateRegistry->createRegistry->Naming->rebind->catch->throw->new->DebuggerException->finally->else->throw->new->DebuggerException->throw->new->DebuggerException->finally
RMIHelper#unbind(String)::: helper unbind:::name->getName->try->Naming->unbind->catch->throw->new->DebuggerException->finally
RMIHelper#lookup(String)::: helper lookup:::index->debugServerID->indexOf->nameBuf->new->StringBuffer->uniqueID->if->nameBuf->debugServerID->substring->append->debugServerID->substring->else->nameBuf->append->nameBuf->append->nameBuf->append->if->nameBuf->append->nameBuf->append->try->return->Naming->nameBuf->toString->lookup->catch->throw->new->DebuggerException->finally
RMIHelper#getName(String)::: helper get name:::name->if->else->if->return
SAGetopt#getOptarg()::: getopt get optarg:::return
SAGetopt#getOptind()::: getopt get optind:::return
SAGetopt#extractOptarg(String)::: getopt extract optarg:::if->throw->new->SAGetoptException->if->isEmpty->charAt->throw->new->SAGetoptException
SAGetopt#processLongOptions(String, String[])::: getopt process long options:::los->Arrays->asList->ca->carg->split->if->los->contains->if->throw->new->SAGetoptException->return->if->los->contains->if->else->try->extractOptarg->catch->throw->new->SAGetoptException->finally->return->throw->new->SAGetoptException
SAGetopt#next(String, String[])::: getopt next:::if->return->carg->if->if->carg->isEmpty->carg->charAt->carg->equals->return->if->carg->startsWith->if->return->carg->substring->return->processLongOptions->if->optStr->length->return->ch->carg->charAt->chIndex->optStr->indexOf->if->throw->new->SAGetoptException->if->carg->length->if->optStr->length->optStr->charAt->String->valueOf->extractOptarg->return->String->valueOf
SALauncher#launcherHelp()::: launcher launcher help:::println->println->println->println->println->println->println->return
SALauncher#commonHelp()::: launcher common help:::println->println->println->return
SALauncher#debugdHelp()::: launcher debugd help:::out->out->print->out->println->out->print->out->println->out->print->out->println->out->println->out->println->return
SALauncher#jinfoHelp()::: launcher jinfo help:::println->println->println->return->commonHelp
SALauncher#jmapHelp()::: launcher jmap help:::println->println->println->println->println->println->println->return->commonHelp
SALauncher#jstackHelp()::: launcher jstack help:::println->println->return->commonHelp
SALauncher#jsnapHelp()::: launcher jsnap help:::println->return->commonHelp
SALauncher#toolHelp(String)::: launcher tool help:::if->toolName->equals->return->jstackHelp->if->toolName->equals->return->jinfoHelp->if->toolName->equals->return->jmapHelp->if->toolName->equals->return->jsnapHelp->if->toolName->equals->return->debugdHelp->if->toolName->equals->toolName->equals->return->commonHelp->return->launcherHelp
SALauncher#buildAttachArgs(ArrayList, String, String, String, boolean)::: launcher build attach args:::if->throw->new->SAGetoptException->if->if->throw->new->SAGetoptException->else->if->throw->new->SAGetoptException->else->if->pid->matches->throw->new->SAGetoptException->newArgs->add->else->if->if->exe->length->throw->new->SAGetoptException->newArgs->add->if->core->length->throw->new->SAGetoptException->newArgs->add
SALauncher#runCLHSDB(String[])::: launcher run b:::sg->new->SAGetopt->longOpts->newArgs->new->ArrayList->pid->exe->core->s->while->sg->next->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->buildAttachArgs->CLHSDB->newArgs->newArgs->size->new->StringArr->toArray->main
SALauncher#runHSDB(String[])::: launcher run b:::sg->new->SAGetopt->longOpts->newArgs->new->ArrayList->pid->exe->core->s->while->sg->next->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->buildAttachArgs->HSDB->newArgs->newArgs->size->new->StringArr->toArray->main
SALauncher#runJSTACK(String[])::: launcher run k:::sg->new->SAGetopt->longOpts->newArgs->new->ArrayList->pid->exe->core->s->while->sg->next->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->newArgs->add->continue->if->s->equals->newArgs->add->continue->buildAttachArgs->jstack->new->JStack->jstack->newArgs->newArgs->size->new->StringArr->toArray->runWithArgs
SALauncher#runJMAP(String[])::: launcher run p:::sg->new->SAGetopt->longOpts->newArgs->new->ArrayList->pid->exe->core->s->dumpfile->requestHeapdump->while->sg->next->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->newArgs->add->continue->if->s->equals->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->newArgs->add->continue->if->s->equals->newArgs->add->continue->if->s->equals->newArgs->add->continue->if->throw->new->IllegalArgumentException->if->if->newArgs->add->else->newArgs->add->buildAttachArgs->JMap->newArgs->newArgs->size->new->StringArr->toArray->main
SALauncher#runJINFO(String[])::: launcher run o:::sg->new->SAGetopt->longOpts->newArgs->new->ArrayList->exe->pid->core->s->while->sg->next->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->newArgs->add->continue->if->s->equals->newArgs->add->continue->buildAttachArgs->JInfo->newArgs->newArgs->size->new->StringArr->toArray->main
SALauncher#runJSNAP(String[])::: launcher run p:::sg->new->SAGetopt->longOpts->newArgs->new->ArrayList->exe->pid->core->s->while->sg->next->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->sg->getOptarg->continue->if->s->equals->newArgs->add->continue->buildAttachArgs->JSnap->newArgs->newArgs->size->new->StringArr->toArray->main
SALauncher#runDEBUGD(String[])::: launcher run d:::if->debugdHelp->System->setProperty->main
SALauncher#main(String[])::: launcher main:::if->launcherHelp->return->if->equals->equals->toolHelp->return->foreach->if->arg->equals->arg->equals->arg->equals->toolHelp->return->oldArgs->Arrays->copyOfRange->try->if->equals->runCLHSDB->return->if->equals->runHSDB->return->if->equals->runJSTACK->return->if->equals->runJMAP->return->if->equals->runJINFO->return->if->equals->runJSNAP->return->if->equals->runDEBUGD->return->throw->new->SAGetoptException->catch->e->getMessage->println->toolHelp->finally
SALauncherLoader#findLibrary(String):::Checks native libraries under directories specified using the System property "sa.library.path".:::System->mapLibraryName->for->i->return
SALauncherLoader#loadClass(String, boolean):::Override loadClass so we can checkPackageAccess.:::i->name->lastIndexOf->if->sm->System->getSecurityManager->if->sm->name->substring->checkPackageAccess->clazz->findLoadedClass->if->return->try->return->findClass->catch->return->super->loadClass->finally
SALauncherLoader#getPermissions(CodeSource):::allow any classes loaded from classpath to exit the VM.:::perms->super->getPermissions->perms->new->RuntimePermission->add->return
SALauncherLoader#getClassPath()::: launcher loader get class path:::s->System->getProperty->path->new->FileArr->getClassPath->return->pathToURLs
SALauncherLoader#pathToURLs(File[])::: launcher loader path to ls:::urls->new->URLArr->for->i->return
SALauncherLoader#getClassPath(String)::: launcher loader get class path:::tmp->cp->split->paths->new->FileArr->for->i->return
SALauncherLoader#getFileURL(File)::: launcher loader get file l:::try->file->getCanonicalFile->catch->e->printStackTrace->finally->try->return->file->toURI->toURL->catch->throw->mue->getMessage->new->InternalError->finally
StackTrace#main(String[])::: stack trace main:::main
Win32VtblAccess#vtblSymbolForType(Type)::: win32 vtbl access vtbl symbol for type:::return->type->getName
