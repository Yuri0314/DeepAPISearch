java.nio.channels.spi.AbstractInterruptibleChannel#close()->void:::Closes this channel
java.nio.channels.spi.AbstractInterruptibleChannel#implCloseChannel()->void:::Closes this channel
java.nio.channels.spi.AbstractInterruptibleChannel#isOpen()->boolean:::
java.nio.channels.spi.AbstractInterruptibleChannel#begin()->void:::Marks the beginning of an I/O operation that might block indefinitely
java.nio.channels.spi.AbstractInterruptibleChannel#end(boolean)->void:::Marks the end of an I/O operation that might block indefinitely
java.nio.channels.spi.AbstractInterruptibleChannel#blockedOn(Interruptible)->void:::
java.nio.channels.spi.AbstractSelectableChannel#provider()->SelectorProvider:::Returns the provider that created this channel.
java.nio.channels.spi.AbstractSelectableChannel#removeKey(SelectionKey)->void:::
java.nio.channels.spi.AbstractSelectableChannel#isRegistered()->boolean:::
java.nio.channels.spi.AbstractSelectableChannel#keyFor(Selector)->SelectionKey:::
java.nio.channels.spi.AbstractSelectableChannel#register(Selector, int, Object)->SelectionKey:::Registers this channel with the given selector, returning a selection key
java.nio.channels.spi.AbstractSelectableChannel#implCloseChannel()->void:::Closes this channel
java.nio.channels.spi.AbstractSelectableChannel#implCloseSelectableChannel()->void:::Closes this selectable channel
java.nio.channels.spi.AbstractSelectableChannel#isBlocking()->boolean:::
java.nio.channels.spi.AbstractSelectableChannel#blockingLock()->Object:::
java.nio.channels.spi.AbstractSelectableChannel#configureBlocking(boolean)->SelectableChannel:::Adjusts this channel's blocking mode
java.nio.channels.spi.AbstractSelectableChannel#implConfigureBlocking(boolean)->void:::Adjusts this channel's blocking mode
java.nio.channels.spi.AbstractSelectionKey#isValid()->boolean:::
java.nio.channels.spi.AbstractSelectionKey#invalidate()->void:::
java.nio.channels.spi.AbstractSelectionKey#cancel()->void:::Cancels this key
java.nio.channels.spi.AbstractSelector#cancel(SelectionKey)->void:::
java.nio.channels.spi.AbstractSelector#close()->void:::Closes this selector
java.nio.channels.spi.AbstractSelector#implCloseSelector()->void:::Closes this selector
java.nio.channels.spi.AbstractSelector#isOpen()->boolean:::
java.nio.channels.spi.AbstractSelector#provider()->SelectorProvider:::Returns the provider that created this channel.
java.nio.channels.spi.AbstractSelector#cancelledKeys()->Set<SelectionKey>:::Retrieves this selector's cancelled-key set
java.nio.channels.spi.AbstractSelector#register(AbstractSelectableChannel, int, Object)->SelectionKey:::Registers the given channel with this selector
java.nio.channels.spi.AbstractSelector#deregister(AbstractSelectionKey)->void:::Removes the given key from its channel's key set
java.nio.channels.spi.AbstractSelector#begin()->void:::Marks the beginning of an I/O operation that might block indefinitely
java.nio.channels.spi.AbstractSelector#end()->void:::Marks the end of an I/O operation that might block indefinitely
java.nio.channels.spi.AsynchronousChannelProvider#provider()->AsynchronousChannelProvider:::Returns the system-wide default asynchronous channel provider for this invocation of the Java virtual machine
java.nio.channels.spi.AsynchronousChannelProvider#openAsynchronousChannelGroup(int, ThreadFactory)->AsynchronousChannelGroup:::Constructs a new asynchronous channel group with a fixed thread pool.
java.nio.channels.spi.AsynchronousChannelProvider#openAsynchronousChannelGroup(ExecutorService, int)->AsynchronousChannelGroup:::Constructs a new asynchronous channel group with the given thread pool.
java.nio.channels.spi.AsynchronousChannelProvider#openAsynchronousServerSocketChannel(AsynchronousChannelGroup)->AsynchronousServerSocketChannel:::Opens an asynchronous server-socket channel.
java.nio.channels.spi.AsynchronousChannelProvider#openAsynchronousSocketChannel(AsynchronousChannelGroup)->AsynchronousSocketChannel:::Opens an asynchronous socket channel.
java.nio.channels.spi.SelectorProvider#provider()->SelectorProvider:::Returns the system-wide default selector provider for this invocation of the Java virtual machine
java.nio.channels.spi.SelectorProvider#openDatagramChannel()->DatagramChannel:::Opens a datagram channel.
java.nio.channels.spi.SelectorProvider#openDatagramChannel(ProtocolFamily)->DatagramChannel:::Opens a datagram channel.
java.nio.channels.spi.SelectorProvider#openPipe()->Pipe:::Opens a pipe.
java.nio.channels.spi.SelectorProvider#openSelector()->AbstractSelector:::Opens a selector.
java.nio.channels.spi.SelectorProvider#openServerSocketChannel()->ServerSocketChannel:::Opens a server-socket channel.
java.nio.channels.spi.SelectorProvider#openSocketChannel()->SocketChannel:::Opens a socket channel.
java.nio.channels.spi.SelectorProvider#inheritedChannel()->Channel:::Returns the channel inherited from the entity that created this Java virtual machine
