CompiledMethodTest#test1():::Usages of the constant " " are replaced with the constant "-" and it is verified that executing the compiled code produces a result that the preserves the node replacement unless deoptimization occurs (e.g., due to -Xcomp causing profiles to be missing).:::javaMethod->getResolvedJavaMethod->graph->parseEager->new->CanonicalizerPhase->getProviders->apply->new->DeadCodeEliminationPhase->apply->foreach->ConstantNode->getConstantNodes->if->node->getStackKind->getSnippetReflection->node->asJavaConstant->asObject->equals->node->ConstantNode->getSnippetReflection->forObject->getMetaAccess->forConstant->replace->compiledMethod->getCode->try->result->compiledMethod->executeVarargs->if->equals->Assert->assertEquals->catch->Assert->fail->finally
RethrowDeoptMaterializeTest#testDeoptRethrow():::This tests that a state with FrameState#rethrowException() set to true can properly throw an exception that must be rematerialized.:::test
