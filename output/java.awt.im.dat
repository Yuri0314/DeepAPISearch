java.awt.im.InputContext#getInstance()->InputContext:::Returns a new InputContext instance.
java.awt.im.InputContext#selectInputMethod(Locale)->boolean:::Attempts to select an input method or keyboard layout that supports the given locale, and returns a value indicating whether such an input method or keyboard layout has been successfully selected
java.awt.im.InputContext#getLocale()->Locale:::Returns the current locale of the current input method or keyboard layout
java.awt.im.InputContext#setCharacterSubsets(Subset[])->void:::Sets the subsets of the Unicode character set that input methods of this input context should be allowed to input
java.awt.im.InputContext#setCompositionEnabled(boolean)->void:::Enables or disables the current input method for composition, depending on the value of the parameter enable
java.awt.im.InputContext#isCompositionEnabled()->boolean:::Determines whether the current input method is enabled for composition
java.awt.im.InputContext#reconvert()->void:::Asks the current input method to reconvert text from the current client component
java.awt.im.InputContext#dispatchEvent(AWTEvent)->void:::Dispatches an event to the active input method
java.awt.im.InputContext#removeNotify(Component)->void:::Notifies the input context that a client component has been removed from its containment hierarchy, or that input method support has been disabled for the component
java.awt.im.InputContext#endComposition()->void:::Ends any input composition that may currently be going on in this context
java.awt.im.InputContext#dispose()->void:::Releases the resources used by this input context
java.awt.im.InputContext#getInputMethodControlObject()->Object:::Returns a control object from the current input method, or null
java.awt.im.InputMethodHighlight#isSelected()->boolean:::Returns whether the text range is selected.
java.awt.im.InputMethodHighlight#getState()->int:::Returns the conversion state of the text range.
java.awt.im.InputMethodHighlight#getVariation()->int:::Returns the variation of the text range.
java.awt.im.InputMethodHighlight#getStyle()->Map:::Returns the rendering style attributes for the text range, or null.
java.awt.im.InputMethodRequests#getTextLocation(TextHitInfo)->Rectangle:::Gets the location of a specified offset in the current composed text, or of the selection in committed text
java.awt.im.InputMethodRequests#getLocationOffset(int, int)->TextHitInfo:::Gets the offset within the composed text for the specified absolute x and y coordinates on the screen
java.awt.im.InputMethodRequests#getInsertPositionOffset()->int:::Gets the offset of the insert position in the committed text contained in the text editing component
java.awt.im.InputMethodRequests#getCommittedText(int, int, Attribute[])->AttributedCharacterIterator:::Gets an iterator providing access to the entire text and attributes contained in the text editing component except for uncommitted text
java.awt.im.InputMethodRequests#getCommittedTextLength()->int:::Gets the length of the entire text contained in the text editing component except for uncommitted (composed) text.
java.awt.im.InputMethodRequests#cancelLatestCommittedText(Attribute[])->AttributedCharacterIterator:::Gets the latest committed text from the text editing component and removes it from the component's text body
java.awt.im.InputMethodRequests#getSelectedText(Attribute[])->AttributedCharacterIterator:::Gets the currently selected text from the text editing component
