BarrieredAccess#readByte(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readChar(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readShort(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readInt(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readLong(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readFloat(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readDouble(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readWord(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readObject(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readByte(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readChar(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readShort(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readInt(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readLong(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readFloat(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readDouble(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readWord(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#readObject(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
BarrieredAccess#writeByte(Object, WordBase, byte, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeChar(Object, WordBase, char, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeShort(Object, WordBase, short, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeInt(Object, WordBase, int, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeLong(Object, WordBase, long, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeFloat(Object, WordBase, float, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeDouble(Object, WordBase, double, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeWord(Object, WordBase, WordBase, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeObject(Object, WordBase, Object, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeByte(Object, int, byte, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeChar(Object, int, char, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeShort(Object, int, short, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeInt(Object, int, int, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeLong(Object, int, long, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeFloat(Object, int, float, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeDouble(Object, int, double, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeWord(Object, int, WordBase, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#writeObject(Object, int, Object, LocationIdentity):::Writes the memory at address (object + offset):::
BarrieredAccess#readByte(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readChar(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readShort(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readInt(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readLong(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readFloat(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readDouble(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readWord(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readObject(Object, WordBase):::Reads the memory at address (object + offset):::
BarrieredAccess#readByte(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#readChar(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#readShort(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#readInt(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#readLong(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#readFloat(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#readDouble(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#readWord(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#readObject(Object, int):::Reads the memory at address (object + offset):::
BarrieredAccess#writeByte(Object, WordBase, byte):::Writes the memory at address (object + offset):::
BarrieredAccess#writeChar(Object, WordBase, char):::Writes the memory at address (object + offset):::
BarrieredAccess#writeShort(Object, WordBase, short):::Writes the memory at address (object + offset):::
BarrieredAccess#writeInt(Object, WordBase, int):::Writes the memory at address (object + offset):::
BarrieredAccess#writeLong(Object, WordBase, long):::Writes the memory at address (object + offset):::
BarrieredAccess#writeFloat(Object, WordBase, float):::Writes the memory at address (object + offset):::
BarrieredAccess#writeDouble(Object, WordBase, double):::Writes the memory at address (object + offset):::
BarrieredAccess#writeWord(Object, WordBase, WordBase):::Writes the memory at address (object + offset):::
BarrieredAccess#writeObject(Object, WordBase, Object):::Writes the memory at address (object + offset):::
BarrieredAccess#writeByte(Object, int, byte):::Writes the memory at address (object + offset):::
BarrieredAccess#writeChar(Object, int, char):::Writes the memory at address (object + offset):::
BarrieredAccess#writeShort(Object, int, short):::Writes the memory at address (object + offset):::
BarrieredAccess#writeInt(Object, int, int):::Writes the memory at address (object + offset):::
BarrieredAccess#writeLong(Object, int, long):::Writes the memory at address (object + offset):::
BarrieredAccess#writeFloat(Object, int, float):::Writes the memory at address (object + offset):::
BarrieredAccess#writeDouble(Object, int, double):::Writes the memory at address (object + offset):::
BarrieredAccess#writeWord(Object, int, WordBase):::Writes the memory at address (object + offset):::
BarrieredAccess#writeObject(Object, int, Object):::Writes the memory at address (object + offset):::
ObjectAccess#readByte(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readChar(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readShort(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readInt(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readLong(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readFloat(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readDouble(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readWord(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readObject(Object, WordBase, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readByte(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readChar(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readShort(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readInt(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readLong(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readFloat(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readDouble(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readWord(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#readObject(Object, int, LocationIdentity):::Reads the memory at address (object + offset):::
ObjectAccess#writeByte(Object, WordBase, byte, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeChar(Object, WordBase, char, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeShort(Object, WordBase, short, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeInt(Object, WordBase, int, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeLong(Object, WordBase, long, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeFloat(Object, WordBase, float, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeDouble(Object, WordBase, double, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeWord(Object, WordBase, WordBase, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeObject(Object, WordBase, Object, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeByte(Object, int, byte, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeChar(Object, int, char, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeShort(Object, int, short, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeInt(Object, int, int, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeLong(Object, int, long, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeFloat(Object, int, float, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeDouble(Object, int, double, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeWord(Object, int, WordBase, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#writeObject(Object, int, Object, LocationIdentity):::Writes the memory at address (object + offset):::
ObjectAccess#readByte(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readChar(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readShort(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readInt(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readLong(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readFloat(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readDouble(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readWord(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readObject(Object, WordBase):::Reads the memory at address (object + offset):::
ObjectAccess#readByte(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#readChar(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#readShort(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#readInt(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#readLong(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#readFloat(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#readDouble(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#readWord(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#readObject(Object, int):::Reads the memory at address (object + offset):::
ObjectAccess#writeByte(Object, WordBase, byte):::Writes the memory at address (object + offset):::
ObjectAccess#writeChar(Object, WordBase, char):::Writes the memory at address (object + offset):::
ObjectAccess#writeShort(Object, WordBase, short):::Writes the memory at address (object + offset):::
ObjectAccess#writeInt(Object, WordBase, int):::Writes the memory at address (object + offset):::
ObjectAccess#writeLong(Object, WordBase, long):::Writes the memory at address (object + offset):::
ObjectAccess#writeFloat(Object, WordBase, float):::Writes the memory at address (object + offset):::
ObjectAccess#writeDouble(Object, WordBase, double):::Writes the memory at address (object + offset):::
ObjectAccess#writeWord(Object, WordBase, WordBase):::Writes the memory at address (object + offset):::
ObjectAccess#writeObject(Object, WordBase, Object):::Writes the memory at address (object + offset):::
ObjectAccess#writeByte(Object, int, byte):::Writes the memory at address (object + offset):::
ObjectAccess#writeChar(Object, int, char):::Writes the memory at address (object + offset):::
ObjectAccess#writeShort(Object, int, short):::Writes the memory at address (object + offset):::
ObjectAccess#writeInt(Object, int, int):::Writes the memory at address (object + offset):::
ObjectAccess#writeLong(Object, int, long):::Writes the memory at address (object + offset):::
ObjectAccess#writeFloat(Object, int, float):::Writes the memory at address (object + offset):::
ObjectAccess#writeDouble(Object, int, double):::Writes the memory at address (object + offset):::
ObjectAccess#writeWord(Object, int, WordBase):::Writes the memory at address (object + offset):::
ObjectAccess#writeObject(Object, int, Object):::Writes the memory at address (object + offset):::
Word#objectToTrackedPointer(Object):::Convert an Object to a Pointer, keeping the reference information:::
Word#objectToUntrackedPointer(Object):::Convert an Object to a Pointer, dropping the reference information:::
Word#equals(Object):::This is deprecated because of the easy to mistype name collision between #equals and the other equals routines like #equal(Word):::throw->GraalError->shouldNotReachHere
WordOperationPlugin#handleInvoke(GraphBuilderContext, ResolvedJavaMethod, ValueNode[]):::Processes a call to a method if it is annotated as a word operation by adding nodes to the graph being built that implement the denoted operation.:::if->wordTypes->isWordOperation->return->wordTypes->b->getMethod->getDeclaringClass->getWordOperation->processWordOperation->return
WordTypes#isWordOperation(ResolvedJavaMethod):::Determines if a given method denotes a word operation.:::isWordFactory->wordFactoryType->targetMethod->getDeclaringClass->equals->if->return->targetMethod->isConstructor->isObjectAccess->objectAccessType->targetMethod->getDeclaringClass->equals->isBarrieredAccess->barrieredAccessType->targetMethod->getDeclaringClass->equals->if->return->return->targetMethod->getDeclaringClass->isWord
WordTypes#getWordOperation(ResolvedJavaMethod, ResolvedJavaType):::Gets the method annotated with Operation based on a given method that represents a word operation (but may not necessarily have the annotation).:::isWordBase->wordBaseType->targetMethod->getDeclaringClass->isAssignableFrom->wordMethod->if->targetMethod->isStatic->wordImplType->resolveConcreteMethod->return
WordTypes#isWord(ValueNode):::Determines if a given node has a word type.:::return->StampTool->typeOrNull->isWord
WordTypes#isWord(JavaType):::Determines if a given type is a word type.:::return->wordBaseType->isAssignableFrom
WordTypes#asKind(JavaType):::Gets the kind for a given type, returning the #getWordKind() word kind if type is a #isWord(JavaType) word type.:::if->isWord->return->else->return->type->getJavaKind
WordTypes#getWordStamp(ResolvedJavaType):::Gets the stamp for a given #isWord(JavaType) word type.:::return->StampFactory->forKind
