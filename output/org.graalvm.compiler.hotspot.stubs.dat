ExceptionHandlerStub#preservesRegisters():::This stub is called when returning to a method to handle an exception thrown by a callee:::return
ExceptionHandlerStub#assertionsEnabled(GraalHotSpotVMConfig):::Determines if either Java assertions are enabled for Graal or if this is a HotSpot build where the ASSERT mechanism is enabled.:::return->Assertions->assertionsEnabled->cAssertionsEnabled
ForeignCallSnippets#handlePendingException(Word, boolean, boolean):::See ForeignCallStub#getGraph.:::if->clearPendingException->getPendingException->if->getAndClearObjectResult->DeoptimizeCallerNode->deopt
ForeignCallSnippets#verifyObject(Object):::Verifies that a given object value is well formed if -XX:+VerifyOops is enabled.:::if->verifyOops->verifyOopCounter->WordFactory->verifyOopCounterAddress->unsigned->verifyOopCounter->verifyOopCounter->readInt->writeInt->oop->Word->objectToTrackedPointer->if->anchorNode->SnippetAnchorNode->anchor->if->oop->WordFactory->verifyOopMask->unsigned->and->WordFactory->verifyOopBits->unsigned->equal->oop->rawValue->fatal->klass->PiNode->piCastNonNull->loadHubIntrinsic->if->klass->isNull->oop->rawValue->fatal->return
ForeignCallSnippets#getAndClearObjectResult(Word):::Gets and clears the object result from a runtime call stored in a thread local.:::result->thread->objectResultOffset->readObject->thread->objectResultOffset->writeObject->return
ForeignCallStub#getTargetLinkage():::Gets the linkage information for the call from this stub.:::return
ForeignCallStub#getGraph(DebugContext, CompilationIdentifier):::Creates a graph for this stub:::wordTypes->providers->getWordTypes->args->linkage->getDescriptor->getArgumentTypes->isObjectResult->LIRKind->linkage->getOutgoingCallingConvention->getReturn->isValue->shouldClearException->linkage->isReexecutable->try->lowerer->providers->getLowerer->foreignCallSnippets->lowerer->getForeignCallSnippets->handlePendingException->getMethod->getAndClearObjectResult->getMethod->verifyObject->getMethod->thisMethod->getGraphMethod->kit->providers->getGraphBuilderPlugins->toString->new->GraphKit->graph->kit->getGraph->params->createParameters->thread->kit->providers->getRegisters->getThreadRegister->wordTypes->getWordKind->new->ReadRegisterNode->append->result->createTargetCall->forBoolean->forBoolean->createStaticInvoke->if->object->createStaticInvoke->createStaticInvoke->kit->linkage->getDescriptor->getResultType->new->ReturnNode->append->debug->dump->kit->inlineInvokes->new->RemoveValueProxyPhase->apply->debug->dump->return->catch->throw->GraalError->shouldNotReachHere->finally
Stub#getDestroyedCallerRegisters():::Gets the registers destroyed by this stub from a caller's perspective:::return
Stub#preservesRegisters():::Determines if this stub preserves all registers apart from those it #getDestroyedCallerRegisters() destroys.:::return
Stub#getLinkage():::Gets the linkage for a call to this stub from compiled code.:::return
Stub#getGraph(DebugContext, CompilationIdentifier):::Gets the graph that from which the code for this stub will be compiled.:::
Stub#getInstalledCodeOwner():::Gets the method the stub's code will be associated with once installed:::
Stub#debugScopeContext():::Gets a context object for the debug scope created when producing the code for this stub.:::
Stub#getCode(Backend):::Gets the code for this stub, compiling it first if necessary.:::if->try->debug->DebugContext->forCurrentThread->openDebugContext->try->d->debug->providers->getCodeCache->debugScopeContext->scope->codeCache->providers->getCodeCache->compResult->buildCompilationResult->try->s->debug->scope->a->debug->activate->compiledCode->HotSpotCompiledCodeBuilder->createCompiledCode->codeCache->installCode->catch->throw->debug->handle->finally->catch->throw->debug->handle->finally->catch->finally->return
Stub#getCompilationResult(DebugContext, Backend):::Gets a CompilationResult that can be used for code generation:::try->d->debug->providers->getCodeCache->debugScopeContext->scope->return->buildCompilationResult->catch->throw->debug->handle->finally
StubUtil#cAssertionsEnabled(GraalHotSpotVMConfig):::Determines if this is a HotSpot build where the ASSERT mechanism is enabled.:::return
StubUtil#printf(String):::Prints a message to the log stream:::cstring->vmMessageC
StubUtil#printf(String, long):::Prints a message to the log stream:::cstring->vmMessageC
StubUtil#printf(String, long, long):::Prints a message to the log stream:::cstring->vmMessageC
StubUtil#printf(String, long, long, long):::Prints a message to the log stream:::cstring->vmMessageC
StubUtil#decipher(long):::Analyzes a given value and prints information about it to the log stream.:::WordFactory->zero->vmMessageC
StubUtil#fatal(String):::Exits the VM with a given error message:::cstring->vmMessageC
StubUtil#fatal(String, long):::Exits the VM with a given error message:::cstring->vmMessageC
StubUtil#fatal(String, long, long):::Exits the VM with a given error message:::cstring->vmMessageC
StubUtil#fatal(String, long, long, long):::Exits the VM with a given error message:::cstring->vmMessageC
StubUtil#printNumber(Word, long):::Print number as decimal string to buffer.:::tmpNumber->offset->if->else->while->ptr->buffer->add->do->digit->ptr->subtract->ptr->writeByte->while->if->ptr->subtract->ptr->writeByte->return->buffer->add
StubUtil#printString(Word, String):::Copy javaString bytes to the memory location ptr.:::string->cstring->i->b->while->string->readByte->buffer->writeByte->return->buffer->add
UnwindExceptionToCallerStub#preservesRegisters():::The current frame is unwound by this stub:::return
UnwindExceptionToCallerStub#assertionsEnabled(GraalHotSpotVMConfig):::Determines if either Java assertions are enabled for Graal or if this is a HotSpot build where the ASSERT mechanism is enabled.:::return->Assertions->assertionsEnabled->cAssertionsEnabled
