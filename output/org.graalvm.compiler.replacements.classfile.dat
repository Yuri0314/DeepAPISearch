org.graalvm.compiler.replacements.classfile.Classfile#getCode(String, String)->ClassfileBytecode::: classfile get code
org.graalvm.compiler.replacements.classfile.Classfile#skipFully(DataInputStream, int)->void::: classfile skip fully
org.graalvm.compiler.replacements.classfile.Classfile#toString()->String::: classfile to string
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getOrigin()->BytecodeProvider::: classfile bytecode get origin
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getCode()->byte[]::: classfile bytecode get code
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getCodeSize()->int::: classfile bytecode get code size
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getMaxLocals()->int::: classfile bytecode get max locals
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getMaxStackSize()->int::: classfile bytecode get max stack size
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getExceptionHandlers()->ExceptionHandler[]::: classfile bytecode get exception handlers
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#asStackTraceElement(int)->StackTraceElement::: classfile bytecode as stack trace element
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getConstantPool()->ConstantPool::: classfile bytecode get constant pool
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getLineNumberTable()->LineNumberTable::: classfile bytecode get line number table
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getLocalVariableTable()->LocalVariableTable::: classfile bytecode get local variable table
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getMethod()->ResolvedJavaMethod::: classfile bytecode get method
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#getProfilingInfo()->ProfilingInfo::: classfile bytecode get profiling info
org.graalvm.compiler.replacements.classfile.ClassfileBytecode#toString()->String::: classfile bytecode to string
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider#getBytecode(ResolvedJavaMethod)->Bytecode::: classfile bytecode provider get bytecode
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider#supportsInvokedynamic()->boolean::: classfile bytecode provider supports invokedynamic
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider#shouldRecordMethodDependencies()->boolean::: classfile bytecode provider should record method dependencies
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider#resolveToClass(String)->Class::: classfile bytecode provider resolve to class
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.FieldKey#toString()->String::: field key to string
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.FieldKey#equals(Object)->boolean::: field key equals
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.FieldKey#hashCode()->int::: field key hash code
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.MethodKey#toString()->String::: method key to string
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.MethodKey#equals(Object)->boolean::: method key equals
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.MethodKey#hashCode()->int::: method key hash code
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.MethodsCache#lookup(ResolvedJavaType, String, String)->ResolvedJavaMethod::: methods cache lookup
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider.FieldsCache#lookup(ResolvedJavaType, String, String, boolean)->ResolvedJavaField::: fields cache lookup
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider#findField(ResolvedJavaType, String, String, boolean)->ResolvedJavaField::: classfile bytecode provider find field
org.graalvm.compiler.replacements.classfile.ClassfileBytecodeProvider#findMethod(ResolvedJavaType, String, String, boolean)->ResolvedJavaMethod::: classfile bytecode provider find method
org.graalvm.compiler.replacements.classfile.ClassfileConstant#loadReferencedType(ClassfileConstantPool, int, int)->void:::Loads the type, if any, referenced at a specified entry.
org.graalvm.compiler.replacements.classfile.ClassfileConstant#toString()->String::: classfile constant to string
org.graalvm.compiler.replacements.classfile.ClassfileConstant.ClassRef#loadReferencedType(ClassfileConstantPool, int, int)->void::: class ref load referenced type
org.graalvm.compiler.replacements.classfile.ClassfileConstant.ClassRef#resolve(ClassfileConstantPool)->ResolvedJavaType::: class ref resolve
org.graalvm.compiler.replacements.classfile.ClassfileConstant.MemberRef#loadReferencedType(ClassfileConstantPool, int, int)->void::: member ref load referenced type
org.graalvm.compiler.replacements.classfile.ClassfileConstant.ExecutableRef#resolve(ClassfileConstantPool, int)->ResolvedJavaMethod::: executable ref resolve
org.graalvm.compiler.replacements.classfile.ClassfileConstant.FieldRef#resolve(ClassfileConstantPool, int)->ResolvedJavaField::: field ref resolve
org.graalvm.compiler.replacements.classfile.ClassfileConstant.StringRef#getValue(ClassfileConstantPool)->JavaConstant::: string ref get value
org.graalvm.compiler.replacements.classfile.ClassfileConstant.NameAndType#getName(ClassfileConstantPool)->String::: name and type get name
org.graalvm.compiler.replacements.classfile.ClassfileConstant.NameAndType#getType(ClassfileConstantPool)->String::: name and type get type
org.graalvm.compiler.replacements.classfile.ClassfileConstant.Unsupported#loadReferencedType(ClassfileConstantPool, int, int)->void::: unsupported load referenced type
org.graalvm.compiler.replacements.classfile.ClassfileConstant#resolveMethod(ClassfileBytecodeProvider, ResolvedJavaType, String, String, boolean)->ResolvedJavaMethod::: classfile constant resolve method
org.graalvm.compiler.replacements.classfile.ClassfileConstant#resolveField(ClassfileBytecodeProvider, ResolvedJavaType, String, String, boolean)->ResolvedJavaField::: classfile constant resolve field
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#readConstant(DataInputStream)->ClassfileConstant::: classfile constant pool read constant
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#length()->int::: classfile constant pool length
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#get(Class, int)->T::: classfile constant pool get
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#loadReferencedType(int, int)->void::: classfile constant pool load referenced type
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#lookupField(int, ResolvedJavaMethod, int)->JavaField::: classfile constant pool lookup field
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#lookupMethod(int, int)->JavaMethod::: classfile constant pool lookup method
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#lookupType(int, int)->JavaType::: classfile constant pool lookup type
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#lookupUtf8(int)->String::: classfile constant pool lookup utf8
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#lookupSignature(int)->Signature::: classfile constant pool lookup signature
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#lookupConstant(int)->Object::: classfile constant pool lookup constant
org.graalvm.compiler.replacements.classfile.ClassfileConstantPool#lookupAppendix(int, int)->JavaConstant::: classfile constant pool lookup appendix
