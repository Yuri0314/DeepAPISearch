sun.security.tools.jarsigner.Main#main(String[])->void::: main main
sun.security.tools.jarsigner.Main#run(String[])->void::: main run
sun.security.tools.jarsigner.Main#parseArgs(String[])->String[]::: main parse args
sun.security.tools.jarsigner.Main#getPass(String, String)->char[]::: main get pass
sun.security.tools.jarsigner.Main#usageNoArg()->void::: main usage no arg
sun.security.tools.jarsigner.Main#usage()->void::: main usage
sun.security.tools.jarsigner.Main#fullusage()->void::: main fullusage
sun.security.tools.jarsigner.Main#verifyJar(String)->void::: main verify jar
sun.security.tools.jarsigner.Main#printCert(boolean, String, Certificate, Date, boolean)->String:::Returns a string about a certificate:  [<tab>] <cert-type> [", " <subject-DN>] [" (" <keystore-entry-alias> ")"] [<validity-period> | <expiry-warning>] [<key-usage-warning>]  Note: no newline character at the end
sun.security.tools.jarsigner.Main#inKeyStore(CodeSigner[])->int::: main in key store
sun.security.tools.jarsigner.Main#signJar(String, String)->void::: main sign jar
sun.security.tools.jarsigner.Main#loadKeyStore(String, boolean)->void::: main load key store
sun.security.tools.jarsigner.Main#getTsaCert(String)->X509Certificate::: main get tsa cert
sun.security.tools.jarsigner.Main#checkCertUsage(X509Certificate, boolean[])->void:::Check if userCert is designed to be a code signer
sun.security.tools.jarsigner.Main#getAliasInfo(String)->void::: main get alias info
sun.security.tools.jarsigner.Main#error(String)->void::: main error
sun.security.tools.jarsigner.Main#error(String, Throwable)->void::: main error
sun.security.tools.jarsigner.Main#validateCertChain(String, List, Timestamp)->void:::Validates a cert chain.
sun.security.tools.jarsigner.Main#getPass(String)->char[]::: main get pass
sun.security.tools.jarsigner.Resources#getContents()->Object[][]:::Returns the contents of this ResourceBundle
sun.security.tools.jarsigner.Resources_ja#getContents()->Object[][]:::Returns the contents of this ResourceBundle
sun.security.tools.jarsigner.Resources_zh_CN#getContents()->Object[][]:::Returns the contents of this ResourceBundle
sun.security.tools.jarsigner.TimestampedSigner#generateSignedData(ContentSignerParameters, boolean, boolean)->byte[]:::Generates a PKCS #7 signed data message that includes a signature timestamp
sun.security.tools.jarsigner.TimestampedSigner#getTimestampingURI(X509Certificate)->URI:::Examine the certificate for a Subject Information Access extension (RFC 5280)
