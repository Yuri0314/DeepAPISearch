com.sun.tools.jdeprscan.CSV#quote(String)->String::: v quote
com.sun.tools.jdeprscan.CSV#write(PrintStream, Object...)->void:::Writes the objects' string representations to the output as a line of CSV
com.sun.tools.jdeprscan.CSV#split(String)->List:::Splits an input line into a list of strings, handling quoting.
com.sun.tools.jdeprscan.CSVParseException#getInput()->String::: parse exception get input
com.sun.tools.jdeprscan.CSVParseException#getIndex()->int::: parse exception get index
com.sun.tools.jdeprscan.CSVParseException#getMessage()->String:::Returns a string describing the parse error.
com.sun.tools.jdeprscan.DeprData#isForRemoval()->boolean::: depr data is for removal
com.sun.tools.jdeprscan.DeprData#toString()->String::: depr data to string
com.sun.tools.jdeprscan.DeprDB#loadFromFile(String)->List::: depr b load from file
com.sun.tools.jdeprscan.DeprDB#loadFromList(List)->DeprDB::: depr b load from list
com.sun.tools.jdeprscan.DeprDB#toString()->String::: depr b to string
com.sun.tools.jdeprscan.DeprDB#getTypeDeprecated(String)->DeprData::: depr b get type deprecated
com.sun.tools.jdeprscan.DeprDB#getMethodDeprecated(String, String, String)->DeprData::: depr b get method deprecated
com.sun.tools.jdeprscan.DeprDB#getFieldDeprecated(String, String)->DeprData::: depr b get field deprecated
com.sun.tools.jdeprscan.LoadProc#init(ProcessingEnvironment)->void::: load proc init
com.sun.tools.jdeprscan.LoadProc#getSupportedSourceVersion()->SourceVersion::: load proc get supported source version
com.sun.tools.jdeprscan.LoadProc#process(Set, RoundEnvironment)->boolean::: load proc process
com.sun.tools.jdeprscan.LoadProc#getDeprecations()->List::: load proc get deprecations
com.sun.tools.jdeprscan.LoadProc#getDetail(Element)->String::: load proc get detail
com.sun.tools.jdeprscan.LoadProc#desc(TypeMirror)->String::: load proc desc
com.sun.tools.jdeprscan.LoadProc#addType(ElementKind, TypeElement, Deprecated)->void::: load proc add type
com.sun.tools.jdeprscan.LoadProc#addMember(ElementKind, TypeElement, String, Deprecated)->void::: load proc add member
com.sun.tools.jdeprscan.LoadProc#addData(ElementKind, TypeElement, String, Deprecated)->void::: load proc add data
com.sun.tools.jdeprscan.Main#doClassNames(Collection)->boolean:::Processes a collection of class names
com.sun.tools.jdeprscan.Main#doFileNames(Stream)->boolean:::Processes a stream of filenames (strings)
com.sun.tools.jdeprscan.Main#convertModularFileName(String)->String:::Replaces all but the first occurrence of '/' with '.'
com.sun.tools.jdeprscan.Main#doModularFileNames(Stream)->boolean:::Processes a stream of filenames (strings) including a module prefix
com.sun.tools.jdeprscan.Main#processDirectory(String, Collection)->boolean:::Processes named class files in the given directory
com.sun.tools.jdeprscan.Main#doJarFile(String)->boolean:::Processes all class files in the given jar file.
com.sun.tools.jdeprscan.Main#processJarFile(String, Collection)->boolean:::Processes named class files from the given jar file, or all classes if classNames is empty.
com.sun.tools.jdeprscan.Main#processOldJdk(String, Collection)->boolean:::Processes named class files from rt.jar of a JDK version 7 or 8
com.sun.tools.jdeprscan.Main#processJdk9(String, Collection)->boolean:::Processes listed classes given a JDK 9 home.
com.sun.tools.jdeprscan.Main#processSelf(Collection)->boolean:::Processes the class files from the currently running JDK, using the jrt: filesystem.
com.sun.tools.jdeprscan.Main#processRelease(String, Collection)->boolean:::Process classes from a particular JDK release, using only information in this JDK.
com.sun.tools.jdeprscan.Main#require(boolean)->void:::Convenience method to throw UsageException if a condition is false.
com.sun.tools.jdeprscan.Main#report(Diagnostic)->void:::Prints the diagnostic to the err stream
com.sun.tools.jdeprscan.Main#run(String...)->boolean:::Parses arguments and performs the requested processing.
com.sun.tools.jdeprscan.Main#call(PrintStream, PrintStream, String...)->boolean:::Programmatic main entry point: initializes the tool instance to use stdout and stderr; runs the tool, passing command-line args; returns an exit status.
com.sun.tools.jdeprscan.Main#main(String[])->void:::Calls the main entry point and exits the JVM with an exit status determined by the return status.
com.sun.tools.jdeprscan.Messages#get(String, Object...)->String:::Gets a message from the resource bundle
com.sun.tools.jdeprscan.Pretty#depr(String, boolean)->String:::Converts deprecation information into an @Deprecated annotation
com.sun.tools.jdeprscan.Pretty#unslashify(String)->String:::Converts a slash-$ style name into a dot-separated name.
com.sun.tools.jdeprscan.Pretty#desc(String)->String:::Converts a type descriptor to a readable string.
com.sun.tools.jdeprscan.Pretty#desc(String, int[])->String:::Converts one type descriptor to a readable string, starting from position pos_inout[0], and updating it to the location following the descriptor just parsed
com.sun.tools.jdeprscan.Pretty#parms(String)->String:::Converts a series of type descriptors into a comma-separated, readable string
com.sun.tools.jdeprscan.Pretty#print(DeprData)->String:::Pretty-prints the data contained in the given DeprData object.
com.sun.tools.jdeprscan.TraverseProc#init(ProcessingEnvironment)->void::: traverse proc init
com.sun.tools.jdeprscan.TraverseProc#getSupportedSourceVersion()->SourceVersion::: traverse proc get supported source version
com.sun.tools.jdeprscan.TraverseProc#process(Set, RoundEnvironment)->boolean::: traverse proc process
com.sun.tools.jdeprscan.TraverseProc#printPublicTypes()->void::: traverse proc print public types
com.sun.tools.jdeprscan.TraverseProc#getPublicTypes()->Map>::: traverse proc get public types
com.sun.tools.jdeprscan.TraverseProc#printPublicTypes(Map>)->void::: traverse proc print public types
com.sun.tools.jdeprscan.TraverseProc#findModules(ModuleElement)->Set::: traverse proc find modules
com.sun.tools.jdeprscan.TraverseProc#findModules0(ModuleElement, Set, int)->Set::: traverse proc find modules0
com.sun.tools.jdeprscan.TraverseProc#findPackages(Collection)->Set::: traverse proc find packages
com.sun.tools.jdeprscan.TraverseProc#findPublicTypes(Collection)->Map>::: traverse proc find public types
com.sun.tools.jdeprscan.TraverseProc#addPublicTypes(List, Element)->void::: traverse proc add public types
