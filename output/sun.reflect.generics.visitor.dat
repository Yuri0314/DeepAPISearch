Reifier#getFactory()::: reifier get factory:::return
Reifier#make(GenericsFactory):::Factory method:::return->new->Reifier
Reifier#reifyTypeArguments(TypeArgument[])::: reifier reify type arguments:::ts->new->TypeArr->for->i->return
Reifier#getResult():::Accessor for the result of the last visit by this visitor,:::return
Reifier#visitFormalTypeParameter(FormalTypeParameter)::: reifier visit formal type parameter:::getFactory->ftp->getName->ftp->getBounds->makeTypeVariable
Reifier#visitClassTypeSignature(ClassTypeSignature)::: reifier visit class type signature:::scts->ct->getPath->iter->scts->iterator->sc->iter->next->n->sc->getName->new->StringBuilder->dollar->sc->getDollar->while->iter->hasNext->sc->getTypeArguments->iter->next->sc->getDollar->n->append->sc->getName->append->c->getFactory->n->toString->makeNamedType->if->sc->getTypeArguments->else->pts->sc->getTypeArguments->reifyTypeArguments->owner->getFactory->makeParameterizedType->while->iter->hasNext->iter->next->sc->getDollar->n->append->sc->getName->append->getFactory->n->toString->makeNamedType->sc->getTypeArguments->reifyTypeArguments->getFactory->makeParameterizedType
Reifier#visitArrayTypeSignature(ArrayTypeSignature)::: reifier visit array type signature:::a->getComponentType->accept->ct->getFactory->makeArrayType
Reifier#visitTypeVariableSignature(TypeVariableSignature)::: reifier visit type variable signature:::getFactory->tv->getIdentifier->findTypeVariable
Reifier#visitWildcard(Wildcard)::: reifier visit wildcard:::getFactory->w->getUpperBounds->w->getLowerBounds->makeWildcard
Reifier#visitSimpleClassTypeSignature(SimpleClassTypeSignature)::: reifier visit simple class type signature:::getFactory->sct->getName->makeNamedType
Reifier#visitBottomSignature(BottomSignature)::: reifier visit bottom signature:::
Reifier#visitByteSignature(ByteSignature)::: reifier visit byte signature:::getFactory->makeByte
Reifier#visitBooleanSignature(BooleanSignature)::: reifier visit boolean signature:::getFactory->makeBool
Reifier#visitShortSignature(ShortSignature)::: reifier visit short signature:::getFactory->makeShort
Reifier#visitCharSignature(CharSignature)::: reifier visit char signature:::getFactory->makeChar
Reifier#visitIntSignature(IntSignature)::: reifier visit int signature:::getFactory->makeInt
Reifier#visitLongSignature(LongSignature)::: reifier visit long signature:::getFactory->makeLong
Reifier#visitFloatSignature(FloatSignature)::: reifier visit float signature:::getFactory->makeFloat
Reifier#visitDoubleSignature(DoubleSignature)::: reifier visit double signature:::getFactory->makeDouble
Reifier#visitVoidDescriptor(VoidDescriptor)::: reifier visit void descriptor:::getFactory->makeVoid
TypeTreeVisitor#getResult():::Returns the result of the visit.:::
TypeTreeVisitor#visitFormalTypeParameter(FormalTypeParameter)::: type tree visitor visit formal type parameter:::
TypeTreeVisitor#visitClassTypeSignature(ClassTypeSignature)::: type tree visitor visit class type signature:::
TypeTreeVisitor#visitArrayTypeSignature(ArrayTypeSignature)::: type tree visitor visit array type signature:::
TypeTreeVisitor#visitTypeVariableSignature(TypeVariableSignature)::: type tree visitor visit type variable signature:::
TypeTreeVisitor#visitWildcard(Wildcard)::: type tree visitor visit wildcard:::
TypeTreeVisitor#visitSimpleClassTypeSignature(SimpleClassTypeSignature)::: type tree visitor visit simple class type signature:::
TypeTreeVisitor#visitBottomSignature(BottomSignature)::: type tree visitor visit bottom signature:::
TypeTreeVisitor#visitByteSignature(ByteSignature)::: type tree visitor visit byte signature:::
TypeTreeVisitor#visitBooleanSignature(BooleanSignature)::: type tree visitor visit boolean signature:::
TypeTreeVisitor#visitShortSignature(ShortSignature)::: type tree visitor visit short signature:::
TypeTreeVisitor#visitCharSignature(CharSignature)::: type tree visitor visit char signature:::
TypeTreeVisitor#visitIntSignature(IntSignature)::: type tree visitor visit int signature:::
TypeTreeVisitor#visitLongSignature(LongSignature)::: type tree visitor visit long signature:::
TypeTreeVisitor#visitFloatSignature(FloatSignature)::: type tree visitor visit float signature:::
TypeTreeVisitor#visitDoubleSignature(DoubleSignature)::: type tree visitor visit double signature:::
TypeTreeVisitor#visitVoidDescriptor(VoidDescriptor)::: type tree visitor visit void descriptor:::
Visitor#visitClassSignature(ClassSignature)::: visitor visit class signature:::
Visitor#visitMethodTypeSignature(MethodTypeSignature)::: visitor visit method type signature:::
