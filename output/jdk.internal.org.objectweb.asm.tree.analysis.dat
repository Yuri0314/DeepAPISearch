jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#analyze(String, MethodNode)->Frame[]:::Analyzes the given method.
jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#getFrames()->Frame[]:::Returns the symbolic stack frame for each instruction of the last recently analyzed method.
jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#getHandlers(int)->List:::Returns the exception handlers for the given instruction.
jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#init(String, MethodNode)->void:::Initializes this analyzer
jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#newFrame(int, int)->Frame:::Constructs a new frame with the given size.
jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#newFrame(Frame)->Frame:::Constructs a new frame that is identical to the given frame.
jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#newControlFlowEdge(int, int)->void:::Creates a control flow graph edge
jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#newControlFlowExceptionEdge(int, int)->boolean:::Creates a control flow graph edge corresponding to an exception handler
jdk.internal.org.objectweb.asm.tree.analysis.Analyzer#newControlFlowExceptionEdge(int, TryCatchBlockNode)->boolean:::Creates a control flow graph edge corresponding to an exception handler
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#newValue(Type)->BasicValue::: basic interpreter new value
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#newOperation(AbstractInsnNode)->BasicValue::: basic interpreter new operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#copyOperation(AbstractInsnNode, BasicValue)->BasicValue::: basic interpreter copy operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#unaryOperation(AbstractInsnNode, BasicValue)->BasicValue::: basic interpreter unary operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#binaryOperation(AbstractInsnNode, BasicValue, BasicValue)->BasicValue::: basic interpreter binary operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#ternaryOperation(AbstractInsnNode, BasicValue, BasicValue, BasicValue)->BasicValue::: basic interpreter ternary operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#naryOperation(AbstractInsnNode, List)->BasicValue::: basic interpreter nary operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#returnOperation(AbstractInsnNode, BasicValue, BasicValue)->void::: basic interpreter return operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicInterpreter#merge(BasicValue, BasicValue)->BasicValue::: basic interpreter merge
jdk.internal.org.objectweb.asm.tree.analysis.BasicValue#getType()->Type::: basic value get type
jdk.internal.org.objectweb.asm.tree.analysis.BasicValue#getSize()->int::: basic value get size
jdk.internal.org.objectweb.asm.tree.analysis.BasicValue#isReference()->boolean::: basic value is reference
jdk.internal.org.objectweb.asm.tree.analysis.BasicValue#equals(Object)->boolean::: basic value equals
jdk.internal.org.objectweb.asm.tree.analysis.BasicValue#hashCode()->int::: basic value hash code
jdk.internal.org.objectweb.asm.tree.analysis.BasicValue#toString()->String::: basic value to string
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#copyOperation(AbstractInsnNode, BasicValue)->BasicValue::: basic verifier copy operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#unaryOperation(AbstractInsnNode, BasicValue)->BasicValue::: basic verifier unary operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#binaryOperation(AbstractInsnNode, BasicValue, BasicValue)->BasicValue::: basic verifier binary operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#ternaryOperation(AbstractInsnNode, BasicValue, BasicValue, BasicValue)->BasicValue::: basic verifier ternary operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#naryOperation(AbstractInsnNode, List)->BasicValue::: basic verifier nary operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#returnOperation(AbstractInsnNode, BasicValue, BasicValue)->void::: basic verifier return operation
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#isArrayValue(BasicValue)->boolean::: basic verifier is array value
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#getElementValue(BasicValue)->BasicValue::: basic verifier get element value
jdk.internal.org.objectweb.asm.tree.analysis.BasicVerifier#isSubTypeOf(BasicValue, BasicValue)->boolean::: basic verifier is sub type of
jdk.internal.org.objectweb.asm.tree.analysis.Frame#init(Frame)->Frame:::Copies the state of the given frame into this frame.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#setReturn(V)->void:::Sets the expected return type of the analyzed method.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#getLocals()->int:::Returns the maximum number of local variables of this frame.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#getMaxStackSize()->int:::Returns the maximum stack size of this frame.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#getLocal(int)->V:::Returns the value of the given local variable.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#setLocal(int, V)->void:::Sets the value of the given local variable.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#getStackSize()->int:::Returns the number of values in the operand stack of this frame
jdk.internal.org.objectweb.asm.tree.analysis.Frame#getStack(int)->V:::Returns the value of the given operand stack slot.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#clearStack()->void:::Clears the operand stack of this frame.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#pop()->V:::Pops a value from the operand stack of this frame.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#push(V)->void:::Pushes a value into the operand stack of this frame.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#execute(AbstractInsnNode, Interpreter)->void::: frame execute
jdk.internal.org.objectweb.asm.tree.analysis.Frame#merge(Frame, Interpreter)->boolean:::Merges this frame with the given frame.
jdk.internal.org.objectweb.asm.tree.analysis.Frame#merge(Frame, boolean[])->boolean:::Merges this frame with the given frame (case of a RET instruction).
jdk.internal.org.objectweb.asm.tree.analysis.Frame#toString()->String:::Returns a string representation of this frame.
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#newValue(Type)->V:::Creates a new value that represents the given type
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#newOperation(AbstractInsnNode)->V:::Interprets a bytecode instruction without arguments
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#copyOperation(AbstractInsnNode, V)->V:::Interprets a bytecode instruction that moves a value on the stack or to or from local variables
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#unaryOperation(AbstractInsnNode, V)->V:::Interprets a bytecode instruction with a single argument
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#binaryOperation(AbstractInsnNode, V, V)->V:::Interprets a bytecode instruction with two arguments
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#ternaryOperation(AbstractInsnNode, V, V, V)->V:::Interprets a bytecode instruction with three arguments
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#naryOperation(AbstractInsnNode, List)->V:::Interprets a bytecode instruction with a variable number of arguments
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#returnOperation(AbstractInsnNode, V, V)->void:::Interprets a bytecode return instruction
jdk.internal.org.objectweb.asm.tree.analysis.Interpreter#merge(V, V)->V:::Merges two values
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#setClassLoader(ClassLoader)->void:::Set the ClassLoader which will be used to load referenced classes
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#newValue(Type)->BasicValue::: simple verifier new value
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#isArrayValue(BasicValue)->boolean::: simple verifier is array value
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#getElementValue(BasicValue)->BasicValue::: simple verifier get element value
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#isSubTypeOf(BasicValue, BasicValue)->boolean::: simple verifier is sub type of
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#merge(BasicValue, BasicValue)->BasicValue::: simple verifier merge
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#isInterface(Type)->boolean::: simple verifier is interface
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#getSuperClass(Type)->Type::: simple verifier get super class
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#isAssignableFrom(Type, Type)->boolean::: simple verifier is assignable from
jdk.internal.org.objectweb.asm.tree.analysis.SimpleVerifier#getClass(Type)->Class::: simple verifier get class
jdk.internal.org.objectweb.asm.tree.analysis.SmallSet#emptySet()->Set::: small set empty set
jdk.internal.org.objectweb.asm.tree.analysis.SmallSet#iterator()->Iterator::: small set iterator
jdk.internal.org.objectweb.asm.tree.analysis.SmallSet#size()->int::: small set size
jdk.internal.org.objectweb.asm.tree.analysis.SmallSet#hasNext()->boolean::: small set has next
jdk.internal.org.objectweb.asm.tree.analysis.SmallSet#next()->E::: small set next
jdk.internal.org.objectweb.asm.tree.analysis.SmallSet#remove()->void::: small set remove
jdk.internal.org.objectweb.asm.tree.analysis.SmallSet#union(SmallSet)->Set::: small set union
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#newValue(Type)->SourceValue::: source interpreter new value
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#newOperation(AbstractInsnNode)->SourceValue::: source interpreter new operation
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#copyOperation(AbstractInsnNode, SourceValue)->SourceValue::: source interpreter copy operation
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#unaryOperation(AbstractInsnNode, SourceValue)->SourceValue::: source interpreter unary operation
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#binaryOperation(AbstractInsnNode, SourceValue, SourceValue)->SourceValue::: source interpreter binary operation
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#ternaryOperation(AbstractInsnNode, SourceValue, SourceValue, SourceValue)->SourceValue::: source interpreter ternary operation
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#naryOperation(AbstractInsnNode, List)->SourceValue::: source interpreter nary operation
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#returnOperation(AbstractInsnNode, SourceValue, SourceValue)->void::: source interpreter return operation
jdk.internal.org.objectweb.asm.tree.analysis.SourceInterpreter#merge(SourceValue, SourceValue)->SourceValue::: source interpreter merge
jdk.internal.org.objectweb.asm.tree.analysis.SourceValue#getSize()->int::: source value get size
jdk.internal.org.objectweb.asm.tree.analysis.SourceValue#equals(Object)->boolean::: source value equals
jdk.internal.org.objectweb.asm.tree.analysis.SourceValue#hashCode()->int::: source value hash code
jdk.internal.org.objectweb.asm.tree.analysis.Subroutine#copy()->Subroutine::: subroutine copy
jdk.internal.org.objectweb.asm.tree.analysis.Subroutine#merge(Subroutine)->boolean::: subroutine merge
jdk.internal.org.objectweb.asm.tree.analysis.Value#getSize()->int:::Returns the size of this value in words.
