com.sun.org.apache.bcel.internal.classfile.AccessFlags#getAccessFlags()->int::: access flags get access flags
com.sun.org.apache.bcel.internal.classfile.AccessFlags#getModifiers()->int::: access flags get modifiers
com.sun.org.apache.bcel.internal.classfile.AccessFlags#setAccessFlags(int)->void:::Set access flags aka "modifiers".
com.sun.org.apache.bcel.internal.classfile.AccessFlags#setModifiers(int)->void:::Set access flags aka "modifiers".
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isPublic(boolean)->void::: access flags is public
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isPublic()->boolean::: access flags is public
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isPrivate(boolean)->void::: access flags is private
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isPrivate()->boolean::: access flags is private
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isProtected(boolean)->void::: access flags is protected
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isProtected()->boolean::: access flags is protected
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isStatic(boolean)->void::: access flags is static
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isStatic()->boolean::: access flags is static
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isFinal(boolean)->void::: access flags is final
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isFinal()->boolean::: access flags is final
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isSynchronized(boolean)->void::: access flags is synchronized
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isSynchronized()->boolean::: access flags is synchronized
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isVolatile(boolean)->void::: access flags is volatile
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isVolatile()->boolean::: access flags is volatile
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isTransient(boolean)->void::: access flags is transient
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isTransient()->boolean::: access flags is transient
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isNative(boolean)->void::: access flags is native
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isNative()->boolean::: access flags is native
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isInterface(boolean)->void::: access flags is interface
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isInterface()->boolean::: access flags is interface
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isAbstract(boolean)->void::: access flags is abstract
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isAbstract()->boolean::: access flags is abstract
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isStrictfp(boolean)->void::: access flags is strictfp
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isStrictfp()->boolean::: access flags is strictfp
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isSynthetic(boolean)->void::: access flags is synthetic
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isSynthetic()->boolean::: access flags is synthetic
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isAnnotation(boolean)->void::: access flags is annotation
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isAnnotation()->boolean::: access flags is annotation
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isEnum(boolean)->void::: access flags is enum
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isEnum()->boolean::: access flags is enum
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isVarArgs(boolean)->void::: access flags is var args
com.sun.org.apache.bcel.internal.classfile.AccessFlags#isVarArgs()->boolean::: access flags is var args
com.sun.org.apache.bcel.internal.classfile.AnnotationDefault#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.AnnotationDefault#setDefaultValue(ElementValue)->void::: annotation default set default value
com.sun.org.apache.bcel.internal.classfile.AnnotationDefault#getDefaultValue()->ElementValue::: annotation default get default value
com.sun.org.apache.bcel.internal.classfile.AnnotationDefault#copy(ConstantPool)->Attribute::: annotation default copy
com.sun.org.apache.bcel.internal.classfile.AnnotationDefault#dump(DataOutputStream)->void::: annotation default dump
com.sun.org.apache.bcel.internal.classfile.AnnotationElementValue#dump(DataOutputStream)->void::: annotation element value dump
com.sun.org.apache.bcel.internal.classfile.AnnotationElementValue#stringifyValue()->String::: annotation element value stringify value
com.sun.org.apache.bcel.internal.classfile.AnnotationElementValue#toString()->String::: annotation element value to string
com.sun.org.apache.bcel.internal.classfile.AnnotationElementValue#getAnnotationEntry()->AnnotationEntry::: annotation element value get annotation entry
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#read(DataInput, ConstantPool, boolean)->AnnotationEntry::: annotation entry read
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#getTypeIndex()->int::: annotation entry get type index
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#getConstantPool()->ConstantPool::: annotation entry get constant pool
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#isRuntimeVisible()->boolean::: annotation entry is runtime visible
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#getAnnotationType()->String::: annotation entry get annotation type
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#getAnnotationTypeIndex()->int::: annotation entry get annotation type index
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#getNumElementValuePairs()->int::: annotation entry get num element value pairs
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#getElementValuePairs()->ElementValuePair[]::: annotation entry get element value pairs
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#dump(DataOutputStream)->void::: annotation entry dump
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#addElementNameValuePair(ElementValuePair)->void::: annotation entry add element name value pair
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#toShortString()->String::: annotation entry to short string
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#toString()->String::: annotation entry to string
com.sun.org.apache.bcel.internal.classfile.AnnotationEntry#createAnnotationEntries(Attribute[])->AnnotationEntry[]::: annotation entry create annotation entries
com.sun.org.apache.bcel.internal.classfile.Annotations#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Annotations#setAnnotationTable(AnnotationEntry[])->void::: annotations set annotation table
com.sun.org.apache.bcel.internal.classfile.Annotations#getAnnotationEntries()->AnnotationEntry[]:::returns the array of annotation entries in this annotation
com.sun.org.apache.bcel.internal.classfile.Annotations#getNumAnnotations()->int::: annotations get num annotations
com.sun.org.apache.bcel.internal.classfile.Annotations#isRuntimeVisible()->boolean::: annotations is runtime visible
com.sun.org.apache.bcel.internal.classfile.Annotations#writeAnnotations(DataOutputStream)->void::: annotations write annotations
com.sun.org.apache.bcel.internal.classfile.ArrayElementValue#toString()->String::: array element value to string
com.sun.org.apache.bcel.internal.classfile.ArrayElementValue#dump(DataOutputStream)->void::: array element value dump
com.sun.org.apache.bcel.internal.classfile.ArrayElementValue#stringifyValue()->String::: array element value stringify value
com.sun.org.apache.bcel.internal.classfile.ArrayElementValue#getElementValuesArray()->ElementValue[]::: array element value get element values array
com.sun.org.apache.bcel.internal.classfile.ArrayElementValue#getElementValuesArraySize()->int::: array element value get element values array size
com.sun.org.apache.bcel.internal.classfile.Attribute#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Attribute#dump(DataOutputStream)->void:::Dump attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.Attribute#addAttributeReader(String, UnknownAttributeReader)->void:::Add an Attribute reader capable of parsing (user-defined) attributes named "name"
com.sun.org.apache.bcel.internal.classfile.Attribute#removeAttributeReader(String)->void:::Remove attribute reader
com.sun.org.apache.bcel.internal.classfile.Attribute#readAttribute(DataInputStream, ConstantPool)->Attribute:::Class method reads one attribute from the input data stream
com.sun.org.apache.bcel.internal.classfile.Attribute#readAttribute(DataInput, ConstantPool)->Attribute:::Class method reads one attribute from the input data stream
com.sun.org.apache.bcel.internal.classfile.Attribute#getName()->String::: attribute get name
com.sun.org.apache.bcel.internal.classfile.Attribute#getLength()->int::: attribute get length
com.sun.org.apache.bcel.internal.classfile.Attribute#setLength(int)->void::: attribute set length
com.sun.org.apache.bcel.internal.classfile.Attribute#setNameIndex(int)->void::: attribute set name index
com.sun.org.apache.bcel.internal.classfile.Attribute#getNameIndex()->int::: attribute get name index
com.sun.org.apache.bcel.internal.classfile.Attribute#getTag()->byte::: attribute get tag
com.sun.org.apache.bcel.internal.classfile.Attribute#getConstantPool()->ConstantPool::: attribute get constant pool
com.sun.org.apache.bcel.internal.classfile.Attribute#setConstantPool(ConstantPool)->void::: attribute set constant pool
com.sun.org.apache.bcel.internal.classfile.Attribute#clone()->Object:::Use copy() if you want to have a deep copy(), i.e., with all references copied correctly.
com.sun.org.apache.bcel.internal.classfile.Attribute#copy(ConstantPool)->Attribute::: attribute copy
com.sun.org.apache.bcel.internal.classfile.Attribute#toString()->String::: attribute to string
com.sun.org.apache.bcel.internal.classfile.AttributeReader#createAttribute(int, int, java.io.DataInputStream, ConstantPool)->Attribute:::     When this attribute reader is added via the static method      Attribute.addAttributeReader, an attribute name is associated with it
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#getBootstrapMethodRef()->int::: bootstrap method get bootstrap method ref
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#setBootstrapMethodRef(int)->void::: bootstrap method set bootstrap method ref
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#getBootstrapArguments()->int[]::: bootstrap method get bootstrap arguments
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#getNumBootstrapArguments()->int::: bootstrap method get num bootstrap arguments
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#setBootstrapArguments(int[])->void::: bootstrap method set bootstrap arguments
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#toString()->String::: bootstrap method to string
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#toString(ConstantPool)->String::: bootstrap method to string
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#dump(DataOutputStream)->void:::Dump object to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.BootstrapMethod#copy()->BootstrapMethod::: bootstrap method copy
com.sun.org.apache.bcel.internal.classfile.BootstrapMethods#getBootstrapMethods()->BootstrapMethod[]::: bootstrap methods get bootstrap methods
com.sun.org.apache.bcel.internal.classfile.BootstrapMethods#setBootstrapMethods(BootstrapMethod[])->void::: bootstrap methods set bootstrap methods
com.sun.org.apache.bcel.internal.classfile.BootstrapMethods#accept(Visitor)->void::: bootstrap methods accept
com.sun.org.apache.bcel.internal.classfile.BootstrapMethods#copy(ConstantPool)->BootstrapMethods::: bootstrap methods copy
com.sun.org.apache.bcel.internal.classfile.BootstrapMethods#dump(DataOutputStream)->void:::Dump bootstrap methods attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.BootstrapMethods#toString()->String::: bootstrap methods to string
com.sun.org.apache.bcel.internal.classfile.ClassElementValue#getIndex()->int::: class element value get index
com.sun.org.apache.bcel.internal.classfile.ClassElementValue#getClassString()->String::: class element value get class string
com.sun.org.apache.bcel.internal.classfile.ClassElementValue#stringifyValue()->String::: class element value stringify value
com.sun.org.apache.bcel.internal.classfile.ClassElementValue#dump(DataOutputStream)->void::: class element value dump
com.sun.org.apache.bcel.internal.classfile.ClassParser#parse()->JavaClass:::Parse the given Java class file and return an object that represents the contained data, i.e., constants, methods, fields and commands
com.sun.org.apache.bcel.internal.classfile.Code#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Code#dump(DataOutputStream)->void:::Dump code attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.Code#getAttributes()->Attribute[]::: code get attributes
com.sun.org.apache.bcel.internal.classfile.Code#getLineNumberTable()->LineNumberTable::: code get line number table
com.sun.org.apache.bcel.internal.classfile.Code#getLocalVariableTable()->LocalVariableTable::: code get local variable table
com.sun.org.apache.bcel.internal.classfile.Code#getCode()->byte[]::: code get code
com.sun.org.apache.bcel.internal.classfile.Code#getExceptionTable()->CodeException[]::: code get exception table
com.sun.org.apache.bcel.internal.classfile.Code#getMaxLocals()->int::: code get max locals
com.sun.org.apache.bcel.internal.classfile.Code#getMaxStack()->int::: code get max stack
com.sun.org.apache.bcel.internal.classfile.Code#setAttributes(Attribute[])->void::: code set attributes
com.sun.org.apache.bcel.internal.classfile.Code#setCode(byte[])->void::: code set code
com.sun.org.apache.bcel.internal.classfile.Code#setExceptionTable(CodeException[])->void::: code set exception table
com.sun.org.apache.bcel.internal.classfile.Code#setMaxLocals(int)->void::: code set max locals
com.sun.org.apache.bcel.internal.classfile.Code#setMaxStack(int)->void::: code set max stack
com.sun.org.apache.bcel.internal.classfile.Code#toString(boolean)->String::: code to string
com.sun.org.apache.bcel.internal.classfile.Code#toString()->String::: code to string
com.sun.org.apache.bcel.internal.classfile.Code#copy(ConstantPool)->Attribute::: code copy
com.sun.org.apache.bcel.internal.classfile.CodeException#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.CodeException#dump(DataOutputStream)->void:::Dump code exception to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.CodeException#getCatchType()->int::: code exception get catch type
com.sun.org.apache.bcel.internal.classfile.CodeException#getEndPC()->int::: code exception get end c
com.sun.org.apache.bcel.internal.classfile.CodeException#getHandlerPC()->int::: code exception get handler c
com.sun.org.apache.bcel.internal.classfile.CodeException#getStartPC()->int::: code exception get start c
com.sun.org.apache.bcel.internal.classfile.CodeException#setCatchType(int)->void::: code exception set catch type
com.sun.org.apache.bcel.internal.classfile.CodeException#setEndPC(int)->void::: code exception set end c
com.sun.org.apache.bcel.internal.classfile.CodeException#setHandlerPC(int)->void::: code exception set handler c
com.sun.org.apache.bcel.internal.classfile.CodeException#setStartPC(int)->void::: code exception set start c
com.sun.org.apache.bcel.internal.classfile.CodeException#toString()->String::: code exception to string
com.sun.org.apache.bcel.internal.classfile.CodeException#toString(ConstantPool, boolean)->String::: code exception to string
com.sun.org.apache.bcel.internal.classfile.CodeException#toString(ConstantPool)->String::: code exception to string
com.sun.org.apache.bcel.internal.classfile.CodeException#copy()->CodeException::: code exception copy
com.sun.org.apache.bcel.internal.classfile.Constant#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Constant#dump(DataOutputStream)->void::: constant dump
com.sun.org.apache.bcel.internal.classfile.Constant#getTag()->byte::: constant get tag
com.sun.org.apache.bcel.internal.classfile.Constant#toString()->String::: constant to string
com.sun.org.apache.bcel.internal.classfile.Constant#copy()->Constant::: constant copy
com.sun.org.apache.bcel.internal.classfile.Constant#clone()->Object::: constant clone
com.sun.org.apache.bcel.internal.classfile.Constant#readConstant(DataInput)->Constant:::Read one constant from the given input, the type depends on a tag byte.
com.sun.org.apache.bcel.internal.classfile.Constant#getComparator()->BCELComparator::: constant get comparator
com.sun.org.apache.bcel.internal.classfile.Constant#setComparator(BCELComparator)->void::: constant set comparator
com.sun.org.apache.bcel.internal.classfile.Constant#equals(Object)->boolean:::Return value as defined by given BCELComparator strategy
com.sun.org.apache.bcel.internal.classfile.Constant#hashCode()->int:::Return value as defined by given BCELComparator strategy
com.sun.org.apache.bcel.internal.classfile.ConstantClass#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantClass#dump(DataOutputStream)->void:::Dumps constant class to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantClass#getNameIndex()->int::: constant class get name index
com.sun.org.apache.bcel.internal.classfile.ConstantClass#setNameIndex(int)->void::: constant class set name index
com.sun.org.apache.bcel.internal.classfile.ConstantClass#getConstantValue(ConstantPool)->Object::: constant class get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantClass#getBytes(ConstantPool)->String::: constant class get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantClass#toString()->String::: constant class to string
com.sun.org.apache.bcel.internal.classfile.ConstantCP#dump(DataOutputStream)->void:::Dump constant field reference to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantCP#getClassIndex()->int::: constant p get class index
com.sun.org.apache.bcel.internal.classfile.ConstantCP#setClassIndex(int)->void::: constant p set class index
com.sun.org.apache.bcel.internal.classfile.ConstantCP#getNameAndTypeIndex()->int::: constant p get name and type index
com.sun.org.apache.bcel.internal.classfile.ConstantCP#setNameAndTypeIndex(int)->void::: constant p set name and type index
com.sun.org.apache.bcel.internal.classfile.ConstantCP#getClass(ConstantPool)->String::: constant p get class
com.sun.org.apache.bcel.internal.classfile.ConstantCP#toString()->String::: constant p to string
com.sun.org.apache.bcel.internal.classfile.ConstantDouble#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantDouble#dump(DataOutputStream)->void:::Dump constant double to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantDouble#getBytes()->double::: constant double get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantDouble#setBytes(double)->void::: constant double set bytes
com.sun.org.apache.bcel.internal.classfile.ConstantDouble#toString()->String::: constant double to string
com.sun.org.apache.bcel.internal.classfile.ConstantDouble#getConstantValue(ConstantPool)->Object::: constant double get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantDynamic#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitly defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantDynamic#getBootstrapMethodAttrIndex()->int::: constant dynamic get bootstrap method attr index
com.sun.org.apache.bcel.internal.classfile.ConstantDynamic#toString()->String::: constant dynamic to string
com.sun.org.apache.bcel.internal.classfile.ConstantFieldref#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantFloat#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantFloat#dump(DataOutputStream)->void:::Dump constant float to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantFloat#getBytes()->float::: constant float get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantFloat#setBytes(float)->void::: constant float set bytes
com.sun.org.apache.bcel.internal.classfile.ConstantFloat#toString()->String::: constant float to string
com.sun.org.apache.bcel.internal.classfile.ConstantFloat#getConstantValue(ConstantPool)->Object::: constant float get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantInteger#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantInteger#dump(DataOutputStream)->void:::Dump constant integer to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantInteger#getBytes()->int::: constant integer get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantInteger#setBytes(int)->void::: constant integer set bytes
com.sun.org.apache.bcel.internal.classfile.ConstantInteger#toString()->String::: constant integer to string
com.sun.org.apache.bcel.internal.classfile.ConstantInteger#getConstantValue(ConstantPool)->Object::: constant integer get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantInvokeDynamic#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitly defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantInvokeDynamic#getBootstrapMethodAttrIndex()->int::: constant invoke dynamic get bootstrap method attr index
com.sun.org.apache.bcel.internal.classfile.ConstantInvokeDynamic#toString()->String::: constant invoke dynamic to string
com.sun.org.apache.bcel.internal.classfile.ConstantLong#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantLong#dump(DataOutputStream)->void:::Dump constant long to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantLong#getBytes()->long::: constant long get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantLong#setBytes(long)->void::: constant long set bytes
com.sun.org.apache.bcel.internal.classfile.ConstantLong#toString()->String::: constant long to string
com.sun.org.apache.bcel.internal.classfile.ConstantLong#getConstantValue(ConstantPool)->Object::: constant long get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantMethodHandle#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitly defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantMethodHandle#dump(DataOutputStream)->void:::Dump method kind and index to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantMethodHandle#getReferenceKind()->int::: constant method handle get reference kind
com.sun.org.apache.bcel.internal.classfile.ConstantMethodHandle#setReferenceKind(int)->void::: constant method handle set reference kind
com.sun.org.apache.bcel.internal.classfile.ConstantMethodHandle#getReferenceIndex()->int::: constant method handle get reference index
com.sun.org.apache.bcel.internal.classfile.ConstantMethodHandle#setReferenceIndex(int)->void::: constant method handle set reference index
com.sun.org.apache.bcel.internal.classfile.ConstantMethodHandle#toString()->String::: constant method handle to string
com.sun.org.apache.bcel.internal.classfile.ConstantMethodref#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantMethodType#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitly defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantMethodType#dump(DataOutputStream)->void:::Dump name and signature index to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantMethodType#getDescriptorIndex()->int::: constant method type get descriptor index
com.sun.org.apache.bcel.internal.classfile.ConstantMethodType#setDescriptorIndex(int)->void::: constant method type set descriptor index
com.sun.org.apache.bcel.internal.classfile.ConstantMethodType#toString()->String::: constant method type to string
com.sun.org.apache.bcel.internal.classfile.ConstantModule#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitly defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantModule#dump(DataOutputStream)->void:::Dump constant module to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantModule#getNameIndex()->int::: constant module get name index
com.sun.org.apache.bcel.internal.classfile.ConstantModule#setNameIndex(int)->void::: constant module set name index
com.sun.org.apache.bcel.internal.classfile.ConstantModule#getConstantValue(ConstantPool)->Object::: constant module get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantModule#getBytes(ConstantPool)->String::: constant module get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantModule#toString()->String::: constant module to string
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#dump(DataOutputStream)->void:::Dump name and signature index to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#getNameIndex()->int::: constant name and type get name index
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#getName(ConstantPool)->String::: constant name and type get name
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#getSignatureIndex()->int::: constant name and type get signature index
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#getSignature(ConstantPool)->String::: constant name and type get signature
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#setNameIndex(int)->void::: constant name and type set name index
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#setSignatureIndex(int)->void::: constant name and type set signature index
com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType#toString()->String::: constant name and type to string
com.sun.org.apache.bcel.internal.classfile.ConstantObject#getConstantValue(ConstantPool)->Object::: constant object get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantPackage#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantPackage#dump(DataOutputStream)->void:::Dump constant package to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantPackage#getNameIndex()->int::: constant package get name index
com.sun.org.apache.bcel.internal.classfile.ConstantPackage#setNameIndex(int)->void::: constant package set name index
com.sun.org.apache.bcel.internal.classfile.ConstantPackage#getConstantValue(ConstantPool)->Object::: constant package get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantPackage#getBytes(ConstantPool)->String::: constant package get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantPackage#toString()->String::: constant package to string
com.sun.org.apache.bcel.internal.classfile.ConstantPool#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantPool#constantToString(Constant)->String:::Resolve constant to a string representation.
com.sun.org.apache.bcel.internal.classfile.ConstantPool#constantToString(int, byte)->String:::Retrieve constant at `index' from constant pool and resolve it to a string representation.
com.sun.org.apache.bcel.internal.classfile.ConstantPool#dump(DataOutputStream)->void:::Dump constant pool to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantPool#getConstant(int)->Constant:::Get constant from constant pool.
com.sun.org.apache.bcel.internal.classfile.ConstantPool#getConstant(int, byte)->Constant:::Get constant from constant pool and check whether it has the expected type.
com.sun.org.apache.bcel.internal.classfile.ConstantPool#getConstantPool()->Constant[]::: constant pool get constant pool
com.sun.org.apache.bcel.internal.classfile.ConstantPool#getConstantString(int, byte)->String:::Get string from constant pool and bypass the indirection of `ConstantClass' and `ConstantString' objects
com.sun.org.apache.bcel.internal.classfile.ConstantPool#getLength()->int::: constant pool get length
com.sun.org.apache.bcel.internal.classfile.ConstantPool#setConstant(int, Constant)->void::: constant pool set constant
com.sun.org.apache.bcel.internal.classfile.ConstantPool#setConstantPool(Constant[])->void::: constant pool set constant pool
com.sun.org.apache.bcel.internal.classfile.ConstantPool#toString()->String::: constant pool to string
com.sun.org.apache.bcel.internal.classfile.ConstantPool#copy()->ConstantPool::: constant pool copy
com.sun.org.apache.bcel.internal.classfile.ConstantString#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantString#dump(DataOutputStream)->void:::Dump constant field reference to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantString#getStringIndex()->int::: constant string get string index
com.sun.org.apache.bcel.internal.classfile.ConstantString#setStringIndex(int)->void::: constant string set string index
com.sun.org.apache.bcel.internal.classfile.ConstantString#toString()->String::: constant string to string
com.sun.org.apache.bcel.internal.classfile.ConstantString#getConstantValue(ConstantPool)->Object::: constant string get constant value
com.sun.org.apache.bcel.internal.classfile.ConstantString#getBytes(ConstantPool)->String::: constant string get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#printStats()->void::: constant utf8 print stats
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#clearStats()->void::: constant utf8 clear stats
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#getCachedInstance(String)->ConstantUtf8::: constant utf8 get cached instance
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#getInstance(String)->ConstantUtf8::: constant utf8 get instance
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#getInstance(DataInput)->ConstantUtf8::: constant utf8 get instance
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#dump(DataOutputStream)->void:::Dump String in Utf8 format to file stream.
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#getBytes()->String::: constant utf8 get bytes
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#setBytes(String)->void::: constant utf8 set bytes
com.sun.org.apache.bcel.internal.classfile.ConstantUtf8#toString()->String::: constant utf8 to string
com.sun.org.apache.bcel.internal.classfile.ConstantValue#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ConstantValue#dump(DataOutputStream)->void:::Dump constant value attribute to file stream on binary format.
com.sun.org.apache.bcel.internal.classfile.ConstantValue#getConstantValueIndex()->int::: constant value get constant value index
com.sun.org.apache.bcel.internal.classfile.ConstantValue#setConstantValueIndex(int)->void::: constant value set constant value index
com.sun.org.apache.bcel.internal.classfile.ConstantValue#toString()->String::: constant value to string
com.sun.org.apache.bcel.internal.classfile.ConstantValue#copy(ConstantPool)->Attribute::: constant value copy
com.sun.org.apache.bcel.internal.classfile.Deprecated#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Deprecated#dump(DataOutputStream)->void:::Dump source file attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.Deprecated#getBytes()->byte[]::: deprecated get bytes
com.sun.org.apache.bcel.internal.classfile.Deprecated#setBytes(byte[])->void::: deprecated set bytes
com.sun.org.apache.bcel.internal.classfile.Deprecated#toString()->String::: deprecated to string
com.sun.org.apache.bcel.internal.classfile.Deprecated#copy(ConstantPool)->Attribute::: deprecated copy
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#predecessor()->Object::: descending visitor predecessor
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#predecessor(int)->Object::: descending visitor predecessor
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#current()->Object::: descending visitor current
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visit()->void:::Start traversal.
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitJavaClass(JavaClass)->void::: descending visitor visit java class
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitAnnotation(Annotations)->void::: descending visitor visit annotation
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitAnnotationEntry(AnnotationEntry)->void::: descending visitor visit annotation entry
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitField(Field)->void::: descending visitor visit field
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantValue(ConstantValue)->void::: descending visitor visit constant value
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitMethod(Method)->void::: descending visitor visit method
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitExceptionTable(ExceptionTable)->void::: descending visitor visit exception table
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitCode(Code)->void::: descending visitor visit code
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitCodeException(CodeException)->void::: descending visitor visit code exception
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitLineNumberTable(LineNumberTable)->void::: descending visitor visit line number table
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitLineNumber(LineNumber)->void::: descending visitor visit line number
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitLocalVariableTable(LocalVariableTable)->void::: descending visitor visit local variable table
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitStackMap(StackMap)->void::: descending visitor visit stack map
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitStackMapEntry(StackMapEntry)->void::: descending visitor visit stack map entry
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitLocalVariable(LocalVariable)->void::: descending visitor visit local variable
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantPool(ConstantPool)->void::: descending visitor visit constant pool
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantClass(ConstantClass)->void::: descending visitor visit constant class
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantDouble(ConstantDouble)->void::: descending visitor visit constant double
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantFieldref(ConstantFieldref)->void::: descending visitor visit constant fieldref
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantFloat(ConstantFloat)->void::: descending visitor visit constant float
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantInteger(ConstantInteger)->void::: descending visitor visit constant integer
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantInterfaceMethodref(ConstantInterfaceMethodref)->void::: descending visitor visit constant interface methodref
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantInvokeDynamic(ConstantInvokeDynamic)->void::: descending visitor visit constant invoke dynamic
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantLong(ConstantLong)->void::: descending visitor visit constant long
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantMethodref(ConstantMethodref)->void::: descending visitor visit constant methodref
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantNameAndType(ConstantNameAndType)->void::: descending visitor visit constant name and type
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantString(ConstantString)->void::: descending visitor visit constant string
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantUtf8(ConstantUtf8)->void::: descending visitor visit constant utf8
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitInnerClasses(InnerClasses)->void::: descending visitor visit inner classes
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitInnerClass(InnerClass)->void::: descending visitor visit inner class
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitBootstrapMethods(BootstrapMethods)->void::: descending visitor visit bootstrap methods
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitDeprecated(Deprecated)->void::: descending visitor visit deprecated
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitSignature(Signature)->void::: descending visitor visit signature
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitSourceFile(SourceFile)->void::: descending visitor visit source file
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitSynthetic(Synthetic)->void::: descending visitor visit synthetic
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitUnknown(Unknown)->void::: descending visitor visit unknown
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitAnnotationDefault(AnnotationDefault)->void::: descending visitor visit annotation default
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitEnclosingMethod(EnclosingMethod)->void::: descending visitor visit enclosing method
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitLocalVariableTypeTable(LocalVariableTypeTable)->void::: descending visitor visit local variable type table
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitParameterAnnotation(ParameterAnnotations)->void::: descending visitor visit parameter annotation
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitMethodParameters(MethodParameters)->void::: descending visitor visit method parameters
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantMethodType(ConstantMethodType)->void::: descending visitor visit constant method type
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantMethodHandle(ConstantMethodHandle)->void::: descending visitor visit constant method handle
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitParameterAnnotationEntry(ParameterAnnotationEntry)->void::: descending visitor visit parameter annotation entry
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantPackage(ConstantPackage)->void::: descending visitor visit constant package
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantModule(ConstantModule)->void::: descending visitor visit constant module
com.sun.org.apache.bcel.internal.classfile.DescendingVisitor#visitConstantDynamic(ConstantDynamic)->void::: descending visitor visit constant dynamic
com.sun.org.apache.bcel.internal.classfile.ElementValue#toString()->String::: element value to string
com.sun.org.apache.bcel.internal.classfile.ElementValue#getElementValueType()->int::: element value get element value type
com.sun.org.apache.bcel.internal.classfile.ElementValue#stringifyValue()->String::: element value stringify value
com.sun.org.apache.bcel.internal.classfile.ElementValue#dump(DataOutputStream)->void::: element value dump
com.sun.org.apache.bcel.internal.classfile.ElementValue#readElementValue(DataInput, ConstantPool)->ElementValue::: element value read element value
com.sun.org.apache.bcel.internal.classfile.ElementValue#getConstantPool()->ConstantPool::: element value get constant pool
com.sun.org.apache.bcel.internal.classfile.ElementValue#getType()->int::: element value get type
com.sun.org.apache.bcel.internal.classfile.ElementValue#toShortString()->String::: element value to short string
com.sun.org.apache.bcel.internal.classfile.ElementValuePair#getNameString()->String::: element value pair get name string
com.sun.org.apache.bcel.internal.classfile.ElementValuePair#getValue()->ElementValue::: element value pair get value
com.sun.org.apache.bcel.internal.classfile.ElementValuePair#getNameIndex()->int::: element value pair get name index
com.sun.org.apache.bcel.internal.classfile.ElementValuePair#toShortString()->String::: element value pair to short string
com.sun.org.apache.bcel.internal.classfile.ElementValuePair#dump(DataOutputStream)->void::: element value pair dump
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitAnnotation(Annotations)->void::: empty visitor visit annotation
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitParameterAnnotation(ParameterAnnotations)->void::: empty visitor visit parameter annotation
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitAnnotationEntry(AnnotationEntry)->void::: empty visitor visit annotation entry
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitAnnotationDefault(AnnotationDefault)->void::: empty visitor visit annotation default
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitCode(Code)->void::: empty visitor visit code
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitCodeException(CodeException)->void::: empty visitor visit code exception
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantClass(ConstantClass)->void::: empty visitor visit constant class
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantDouble(ConstantDouble)->void::: empty visitor visit constant double
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantFieldref(ConstantFieldref)->void::: empty visitor visit constant fieldref
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantFloat(ConstantFloat)->void::: empty visitor visit constant float
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantInteger(ConstantInteger)->void::: empty visitor visit constant integer
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantInterfaceMethodref(ConstantInterfaceMethodref)->void::: empty visitor visit constant interface methodref
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantInvokeDynamic(ConstantInvokeDynamic)->void::: empty visitor visit constant invoke dynamic
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantLong(ConstantLong)->void::: empty visitor visit constant long
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantMethodref(ConstantMethodref)->void::: empty visitor visit constant methodref
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantNameAndType(ConstantNameAndType)->void::: empty visitor visit constant name and type
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantPool(ConstantPool)->void::: empty visitor visit constant pool
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantString(ConstantString)->void::: empty visitor visit constant string
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantUtf8(ConstantUtf8)->void::: empty visitor visit constant utf8
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantValue(ConstantValue)->void::: empty visitor visit constant value
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitDeprecated(Deprecated)->void::: empty visitor visit deprecated
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitExceptionTable(ExceptionTable)->void::: empty visitor visit exception table
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitField(Field)->void::: empty visitor visit field
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitInnerClass(InnerClass)->void::: empty visitor visit inner class
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitInnerClasses(InnerClasses)->void::: empty visitor visit inner classes
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitBootstrapMethods(BootstrapMethods)->void::: empty visitor visit bootstrap methods
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitJavaClass(JavaClass)->void::: empty visitor visit java class
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitLineNumber(LineNumber)->void::: empty visitor visit line number
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitLineNumberTable(LineNumberTable)->void::: empty visitor visit line number table
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitLocalVariable(LocalVariable)->void::: empty visitor visit local variable
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitLocalVariableTable(LocalVariableTable)->void::: empty visitor visit local variable table
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitMethod(Method)->void::: empty visitor visit method
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitSignature(Signature)->void::: empty visitor visit signature
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitSourceFile(SourceFile)->void::: empty visitor visit source file
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitSynthetic(Synthetic)->void::: empty visitor visit synthetic
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitUnknown(Unknown)->void::: empty visitor visit unknown
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitStackMap(StackMap)->void::: empty visitor visit stack map
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitStackMapEntry(StackMapEntry)->void::: empty visitor visit stack map entry
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitEnclosingMethod(EnclosingMethod)->void::: empty visitor visit enclosing method
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitLocalVariableTypeTable(LocalVariableTypeTable)->void::: empty visitor visit local variable type table
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitMethodParameters(MethodParameters)->void::: empty visitor visit method parameters
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantMethodType(ConstantMethodType)->void::: empty visitor visit constant method type
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantMethodHandle(ConstantMethodHandle)->void::: empty visitor visit constant method handle
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitParameterAnnotationEntry(ParameterAnnotationEntry)->void::: empty visitor visit parameter annotation entry
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantPackage(ConstantPackage)->void::: empty visitor visit constant package
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantModule(ConstantModule)->void::: empty visitor visit constant module
com.sun.org.apache.bcel.internal.classfile.EmptyVisitor#visitConstantDynamic(ConstantDynamic)->void::: empty visitor visit constant dynamic
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#accept(Visitor)->void::: enclosing method accept
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#copy(ConstantPool)->Attribute::: enclosing method copy
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#getEnclosingClassIndex()->int::: enclosing method get enclosing class index
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#getEnclosingMethodIndex()->int::: enclosing method get enclosing method index
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#setEnclosingClassIndex(int)->void::: enclosing method set enclosing class index
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#setEnclosingMethodIndex(int)->void::: enclosing method set enclosing method index
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#getEnclosingClass()->ConstantClass::: enclosing method get enclosing class
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#getEnclosingMethod()->ConstantNameAndType::: enclosing method get enclosing method
com.sun.org.apache.bcel.internal.classfile.EnclosingMethod#dump(DataOutputStream)->void::: enclosing method dump
com.sun.org.apache.bcel.internal.classfile.EnumElementValue#dump(DataOutputStream)->void::: enum element value dump
com.sun.org.apache.bcel.internal.classfile.EnumElementValue#stringifyValue()->String::: enum element value stringify value
com.sun.org.apache.bcel.internal.classfile.EnumElementValue#getEnumTypeString()->String::: enum element value get enum type string
com.sun.org.apache.bcel.internal.classfile.EnumElementValue#getEnumValueString()->String::: enum element value get enum value string
com.sun.org.apache.bcel.internal.classfile.EnumElementValue#getValueIndex()->int::: enum element value get value index
com.sun.org.apache.bcel.internal.classfile.EnumElementValue#getTypeIndex()->int::: enum element value get type index
com.sun.org.apache.bcel.internal.classfile.ExceptionTable#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ExceptionTable#dump(DataOutputStream)->void:::Dump exceptions attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.ExceptionTable#getExceptionIndexTable()->int[]::: exception table get exception index table
com.sun.org.apache.bcel.internal.classfile.ExceptionTable#getNumberOfExceptions()->int::: exception table get number of exceptions
com.sun.org.apache.bcel.internal.classfile.ExceptionTable#getExceptionNames()->String[]::: exception table get exception names
com.sun.org.apache.bcel.internal.classfile.ExceptionTable#setExceptionIndexTable(int[])->void::: exception table set exception index table
com.sun.org.apache.bcel.internal.classfile.ExceptionTable#toString()->String::: exception table to string
com.sun.org.apache.bcel.internal.classfile.ExceptionTable#copy(ConstantPool)->Attribute::: exception table copy
com.sun.org.apache.bcel.internal.classfile.Field#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Field#getConstantValue()->ConstantValue::: field get constant value
com.sun.org.apache.bcel.internal.classfile.Field#toString()->String:::Return string representation close to declaration format, `public static final short MAX = 100', e.g..
com.sun.org.apache.bcel.internal.classfile.Field#copy(ConstantPool)->Field::: field copy
com.sun.org.apache.bcel.internal.classfile.Field#getType()->Type::: field get type
com.sun.org.apache.bcel.internal.classfile.Field#getComparator()->BCELComparator::: field get comparator
com.sun.org.apache.bcel.internal.classfile.Field#setComparator(BCELComparator)->void::: field set comparator
com.sun.org.apache.bcel.internal.classfile.Field#equals(Object)->boolean:::Return value as defined by given BCELComparator strategy
com.sun.org.apache.bcel.internal.classfile.Field#hashCode()->int:::Return value as defined by given BCELComparator strategy
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#dump(DataOutputStream)->void:::Dump object to file stream on binary format.
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#getAttributes()->Attribute[]::: field or method get attributes
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#setAttributes(Attribute[])->void::: field or method set attributes
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#getConstantPool()->ConstantPool::: field or method get constant pool
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#setConstantPool(ConstantPool)->void::: field or method set constant pool
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#getNameIndex()->int::: field or method get name index
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#setNameIndex(int)->void::: field or method set name index
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#getSignatureIndex()->int::: field or method get signature index
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#setSignatureIndex(int)->void::: field or method set signature index
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#getName()->String::: field or method get name
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#getSignature()->String::: field or method get signature
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#copy_(ConstantPool)->FieldOrMethod::: field or method copy_
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#getAnnotationEntries()->AnnotationEntry[]::: field or method get annotation entries
com.sun.org.apache.bcel.internal.classfile.FieldOrMethod#getGenericSignature()->String:::Hunts for a signature attribute on the member and returns its contents
com.sun.org.apache.bcel.internal.classfile.InnerClass#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.InnerClass#dump(DataOutputStream)->void:::Dump inner class attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.InnerClass#getInnerAccessFlags()->int::: inner class get inner access flags
com.sun.org.apache.bcel.internal.classfile.InnerClass#getInnerClassIndex()->int::: inner class get inner class index
com.sun.org.apache.bcel.internal.classfile.InnerClass#getInnerNameIndex()->int::: inner class get inner name index
com.sun.org.apache.bcel.internal.classfile.InnerClass#getOuterClassIndex()->int::: inner class get outer class index
com.sun.org.apache.bcel.internal.classfile.InnerClass#setInnerAccessFlags(int)->void::: inner class set inner access flags
com.sun.org.apache.bcel.internal.classfile.InnerClass#setInnerClassIndex(int)->void::: inner class set inner class index
com.sun.org.apache.bcel.internal.classfile.InnerClass#setInnerNameIndex(int)->void::: inner class set inner name index
com.sun.org.apache.bcel.internal.classfile.InnerClass#setOuterClassIndex(int)->void::: inner class set outer class index
com.sun.org.apache.bcel.internal.classfile.InnerClass#toString()->String::: inner class to string
com.sun.org.apache.bcel.internal.classfile.InnerClass#toString(ConstantPool)->String::: inner class to string
com.sun.org.apache.bcel.internal.classfile.InnerClass#copy()->InnerClass::: inner class copy
com.sun.org.apache.bcel.internal.classfile.InnerClasses#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.InnerClasses#dump(DataOutputStream)->void:::Dump source file attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.InnerClasses#getInnerClasses()->InnerClass[]::: inner classes get inner classes
com.sun.org.apache.bcel.internal.classfile.InnerClasses#setInnerClasses(InnerClass[])->void::: inner classes set inner classes
com.sun.org.apache.bcel.internal.classfile.InnerClasses#toString()->String::: inner classes to string
com.sun.org.apache.bcel.internal.classfile.InnerClasses#copy(ConstantPool)->Attribute::: inner classes copy
com.sun.org.apache.bcel.internal.classfile.JavaClass#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.JavaClass#dump(File)->void:::Dump class to a file.
com.sun.org.apache.bcel.internal.classfile.JavaClass#dump(String)->void:::Dump class to a file named file_name.
com.sun.org.apache.bcel.internal.classfile.JavaClass#getBytes()->byte[]::: java class get bytes
com.sun.org.apache.bcel.internal.classfile.JavaClass#dump(OutputStream)->void:::Dump Java class to output stream in binary format.
com.sun.org.apache.bcel.internal.classfile.JavaClass#dump(DataOutputStream)->void:::Dump Java class to output stream in binary format.
com.sun.org.apache.bcel.internal.classfile.JavaClass#getAttributes()->Attribute[]::: java class get attributes
com.sun.org.apache.bcel.internal.classfile.JavaClass#getAnnotationEntries()->AnnotationEntry[]::: java class get annotation entries
com.sun.org.apache.bcel.internal.classfile.JavaClass#getClassName()->String::: java class get class name
com.sun.org.apache.bcel.internal.classfile.JavaClass#getPackageName()->String::: java class get package name
com.sun.org.apache.bcel.internal.classfile.JavaClass#getClassNameIndex()->int::: java class get class name index
com.sun.org.apache.bcel.internal.classfile.JavaClass#getConstantPool()->ConstantPool::: java class get constant pool
com.sun.org.apache.bcel.internal.classfile.JavaClass#getFields()->Field[]::: java class get fields
com.sun.org.apache.bcel.internal.classfile.JavaClass#getFileName()->String::: java class get file name
com.sun.org.apache.bcel.internal.classfile.JavaClass#getInterfaceNames()->String[]::: java class get interface names
com.sun.org.apache.bcel.internal.classfile.JavaClass#getInterfaceIndices()->int[]::: java class get interface indices
com.sun.org.apache.bcel.internal.classfile.JavaClass#getMajor()->int::: java class get major
com.sun.org.apache.bcel.internal.classfile.JavaClass#getMethods()->Method[]::: java class get methods
com.sun.org.apache.bcel.internal.classfile.JavaClass#getMethod(java.lang.reflect.Method)->Method::: java class get method
com.sun.org.apache.bcel.internal.classfile.JavaClass#getMinor()->int::: java class get minor
com.sun.org.apache.bcel.internal.classfile.JavaClass#getSourceFileName()->String::: java class get source file name
com.sun.org.apache.bcel.internal.classfile.JavaClass#getSuperclassName()->String:::returns the super class name of this class
com.sun.org.apache.bcel.internal.classfile.JavaClass#getSuperclassNameIndex()->int::: java class get superclass name index
com.sun.org.apache.bcel.internal.classfile.JavaClass#setAttributes(Attribute[])->void::: java class set attributes
com.sun.org.apache.bcel.internal.classfile.JavaClass#setClassName(String)->void::: java class set class name
com.sun.org.apache.bcel.internal.classfile.JavaClass#setClassNameIndex(int)->void::: java class set class name index
com.sun.org.apache.bcel.internal.classfile.JavaClass#setConstantPool(ConstantPool)->void::: java class set constant pool
com.sun.org.apache.bcel.internal.classfile.JavaClass#setFields(Field[])->void::: java class set fields
com.sun.org.apache.bcel.internal.classfile.JavaClass#setFileName(String)->void:::Set File name of class, aka SourceFile attribute value
com.sun.org.apache.bcel.internal.classfile.JavaClass#setInterfaceNames(String[])->void::: java class set interface names
com.sun.org.apache.bcel.internal.classfile.JavaClass#setInterfaces(int[])->void::: java class set interfaces
com.sun.org.apache.bcel.internal.classfile.JavaClass#setMajor(int)->void::: java class set major
com.sun.org.apache.bcel.internal.classfile.JavaClass#setMethods(Method[])->void::: java class set methods
com.sun.org.apache.bcel.internal.classfile.JavaClass#setMinor(int)->void::: java class set minor
com.sun.org.apache.bcel.internal.classfile.JavaClass#setSourceFileName(String)->void:::Set absolute path to file this class was read from.
com.sun.org.apache.bcel.internal.classfile.JavaClass#setSuperclassName(String)->void::: java class set superclass name
com.sun.org.apache.bcel.internal.classfile.JavaClass#setSuperclassNameIndex(int)->void::: java class set superclass name index
com.sun.org.apache.bcel.internal.classfile.JavaClass#toString()->String::: java class to string
com.sun.org.apache.bcel.internal.classfile.JavaClass#copy()->JavaClass::: java class copy
com.sun.org.apache.bcel.internal.classfile.JavaClass#isSuper()->boolean::: java class is super
com.sun.org.apache.bcel.internal.classfile.JavaClass#isClass()->boolean::: java class is class
com.sun.org.apache.bcel.internal.classfile.JavaClass#isAnonymous()->boolean::: java class is anonymous
com.sun.org.apache.bcel.internal.classfile.JavaClass#isNested()->boolean::: java class is nested
com.sun.org.apache.bcel.internal.classfile.JavaClass#getSource()->byte::: java class get source
com.sun.org.apache.bcel.internal.classfile.JavaClass#getRepository()->com.sun.org.apache.bcel.internal.util.Repository:::Gets the ClassRepository which holds its definition
com.sun.org.apache.bcel.internal.classfile.JavaClass#setRepository(com.sun.org.apache.bcel.internal.util.Repository)->void:::Sets the ClassRepository which loaded the JavaClass
com.sun.org.apache.bcel.internal.classfile.JavaClass#instanceOf(JavaClass)->boolean:::Equivalent to runtime "instanceof" operator.
com.sun.org.apache.bcel.internal.classfile.JavaClass#implementationOf(JavaClass)->boolean::: java class implementation of
com.sun.org.apache.bcel.internal.classfile.JavaClass#getSuperClass()->JavaClass::: java class get super class
com.sun.org.apache.bcel.internal.classfile.JavaClass#getSuperClasses()->JavaClass[]::: java class get super classes
com.sun.org.apache.bcel.internal.classfile.JavaClass#getInterfaces()->JavaClass[]:::Get interfaces directly implemented by this JavaClass.
com.sun.org.apache.bcel.internal.classfile.JavaClass#getAllInterfaces()->JavaClass[]:::Get all interfaces implemented by this JavaClass (transitively).
com.sun.org.apache.bcel.internal.classfile.JavaClass#getComparator()->BCELComparator::: java class get comparator
com.sun.org.apache.bcel.internal.classfile.JavaClass#setComparator(BCELComparator)->void::: java class set comparator
com.sun.org.apache.bcel.internal.classfile.JavaClass#equals(Object)->boolean:::Return value as defined by given BCELComparator strategy
com.sun.org.apache.bcel.internal.classfile.JavaClass#compareTo(JavaClass)->int:::Return the natural ordering of two JavaClasses
com.sun.org.apache.bcel.internal.classfile.JavaClass#hashCode()->int:::Return value as defined by given BCELComparator strategy
com.sun.org.apache.bcel.internal.classfile.LineNumber#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.LineNumber#dump(DataOutputStream)->void:::Dump line number/pc pair to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.LineNumber#getLineNumber()->int::: line number get line number
com.sun.org.apache.bcel.internal.classfile.LineNumber#getStartPC()->int::: line number get start c
com.sun.org.apache.bcel.internal.classfile.LineNumber#setLineNumber(int)->void::: line number set line number
com.sun.org.apache.bcel.internal.classfile.LineNumber#setStartPC(int)->void::: line number set start c
com.sun.org.apache.bcel.internal.classfile.LineNumber#toString()->String::: line number to string
com.sun.org.apache.bcel.internal.classfile.LineNumber#copy()->LineNumber::: line number copy
com.sun.org.apache.bcel.internal.classfile.LineNumberTable#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.LineNumberTable#dump(DataOutputStream)->void:::Dump line number table attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.LineNumberTable#getLineNumberTable()->LineNumber[]::: line number table get line number table
com.sun.org.apache.bcel.internal.classfile.LineNumberTable#setLineNumberTable(LineNumber[])->void::: line number table set line number table
com.sun.org.apache.bcel.internal.classfile.LineNumberTable#toString()->String::: line number table to string
com.sun.org.apache.bcel.internal.classfile.LineNumberTable#getSourceLine(int)->int:::Map byte code positions to source code lines.
com.sun.org.apache.bcel.internal.classfile.LineNumberTable#copy(ConstantPool)->Attribute::: line number table copy
com.sun.org.apache.bcel.internal.classfile.LineNumberTable#getTableLength()->int::: line number table get table length
com.sun.org.apache.bcel.internal.classfile.LocalVariable#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.LocalVariable#dump(DataOutputStream)->void:::Dump local variable to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getConstantPool()->ConstantPool::: local variable get constant pool
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getLength()->int::: local variable get length
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getName()->String::: local variable get name
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getNameIndex()->int::: local variable get name index
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getSignature()->String::: local variable get signature
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getSignatureIndex()->int::: local variable get signature index
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getIndex()->int::: local variable get index
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getOrigIndex()->int::: local variable get orig index
com.sun.org.apache.bcel.internal.classfile.LocalVariable#getStartPC()->int::: local variable get start c
com.sun.org.apache.bcel.internal.classfile.LocalVariable#toStringShared(boolean)->String::: local variable to string shared
com.sun.org.apache.bcel.internal.classfile.LocalVariable#setConstantPool(ConstantPool)->void::: local variable set constant pool
com.sun.org.apache.bcel.internal.classfile.LocalVariable#setLength(int)->void::: local variable set length
com.sun.org.apache.bcel.internal.classfile.LocalVariable#setNameIndex(int)->void::: local variable set name index
com.sun.org.apache.bcel.internal.classfile.LocalVariable#setSignatureIndex(int)->void::: local variable set signature index
com.sun.org.apache.bcel.internal.classfile.LocalVariable#setIndex(int)->void::: local variable set index
com.sun.org.apache.bcel.internal.classfile.LocalVariable#setStartPC(int)->void::: local variable set start c
com.sun.org.apache.bcel.internal.classfile.LocalVariable#toString()->String::: local variable to string
com.sun.org.apache.bcel.internal.classfile.LocalVariable#copy()->LocalVariable::: local variable copy
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#dump(DataOutputStream)->void:::Dump local variable table attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#getLocalVariableTable()->LocalVariable[]::: local variable table get local variable table
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#getLocalVariable(int)->LocalVariable::: local variable table get local variable
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#getLocalVariable(int, int)->LocalVariable::: local variable table get local variable
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#setLocalVariableTable(LocalVariable[])->void::: local variable table set local variable table
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#toString()->String::: local variable table to string
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#copy(ConstantPool)->Attribute::: local variable table copy
com.sun.org.apache.bcel.internal.classfile.LocalVariableTable#getTableLength()->int::: local variable table get table length
com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable#accept(Visitor)->void::: local variable type table accept
com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable#dump(DataOutputStream)->void::: local variable type table dump
com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable#getLocalVariableTypeTable()->LocalVariable[]::: local variable type table get local variable type table
com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable#getLocalVariable(int)->LocalVariable::: local variable type table get local variable
com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable#setLocalVariableTable(LocalVariable[])->void::: local variable type table set local variable table
com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable#toString()->String::: local variable type table to string
com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable#copy(ConstantPool)->Attribute::: local variable type table copy
com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable#getTableLength()->int::: local variable type table get table length
com.sun.org.apache.bcel.internal.classfile.Method#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Method#getCode()->Code::: method get code
com.sun.org.apache.bcel.internal.classfile.Method#getExceptionTable()->ExceptionTable::: method get exception table
com.sun.org.apache.bcel.internal.classfile.Method#getLocalVariableTable()->LocalVariableTable::: method get local variable table
com.sun.org.apache.bcel.internal.classfile.Method#getLineNumberTable()->LineNumberTable::: method get line number table
com.sun.org.apache.bcel.internal.classfile.Method#toString()->String:::Return string representation close to declaration format, `public static void main(String[] args) throws IOException', e.g.
com.sun.org.apache.bcel.internal.classfile.Method#copy(ConstantPool)->Method::: method copy
com.sun.org.apache.bcel.internal.classfile.Method#getReturnType()->Type::: method get return type
com.sun.org.apache.bcel.internal.classfile.Method#getArgumentTypes()->Type[]::: method get argument types
com.sun.org.apache.bcel.internal.classfile.Method#getComparator()->BCELComparator::: method get comparator
com.sun.org.apache.bcel.internal.classfile.Method#setComparator(BCELComparator)->void::: method set comparator
com.sun.org.apache.bcel.internal.classfile.Method#equals(Object)->boolean:::Return value as defined by given BCELComparator strategy
com.sun.org.apache.bcel.internal.classfile.Method#hashCode()->int:::Return value as defined by given BCELComparator strategy
com.sun.org.apache.bcel.internal.classfile.Method#getParameterAnnotationEntries()->ParameterAnnotationEntry[]::: method get parameter annotation entries
com.sun.org.apache.bcel.internal.classfile.MethodParameter#getNameIndex()->int::: method parameter get name index
com.sun.org.apache.bcel.internal.classfile.MethodParameter#setNameIndex(int)->void::: method parameter set name index
com.sun.org.apache.bcel.internal.classfile.MethodParameter#getParameterName(ConstantPool)->String:::Returns the name of the parameter.
com.sun.org.apache.bcel.internal.classfile.MethodParameter#getAccessFlags()->int::: method parameter get access flags
com.sun.org.apache.bcel.internal.classfile.MethodParameter#setAccessFlags(int)->void::: method parameter set access flags
com.sun.org.apache.bcel.internal.classfile.MethodParameter#isFinal()->boolean::: method parameter is final
com.sun.org.apache.bcel.internal.classfile.MethodParameter#isSynthetic()->boolean::: method parameter is synthetic
com.sun.org.apache.bcel.internal.classfile.MethodParameter#isMandated()->boolean::: method parameter is mandated
com.sun.org.apache.bcel.internal.classfile.MethodParameter#dump(DataOutputStream)->void:::Dump object to file stream on binary format.
com.sun.org.apache.bcel.internal.classfile.MethodParameter#copy()->MethodParameter::: method parameter copy
com.sun.org.apache.bcel.internal.classfile.MethodParameters#getParameters()->MethodParameter[]::: method parameters get parameters
com.sun.org.apache.bcel.internal.classfile.MethodParameters#setParameters(MethodParameter[])->void::: method parameters set parameters
com.sun.org.apache.bcel.internal.classfile.MethodParameters#accept(Visitor)->void::: method parameters accept
com.sun.org.apache.bcel.internal.classfile.MethodParameters#copy(ConstantPool)->Attribute::: method parameters copy
com.sun.org.apache.bcel.internal.classfile.MethodParameters#dump(DataOutputStream)->void:::Dump method parameters attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.Node#accept(Visitor)->void::: node accept
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotationEntry#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotationEntry#getAnnotationEntries()->AnnotationEntry[]:::returns the array of annotation entries in this annotation
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotationEntry#dump(DataOutputStream)->void::: parameter annotation entry dump
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotationEntry#createParameterAnnotationEntries(Attribute[])->ParameterAnnotationEntry[]::: parameter annotation entry create parameter annotation entries
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotations#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotations#setParameterAnnotationTable(ParameterAnnotationEntry[])->void::: parameter annotations set parameter annotation table
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotations#getParameterAnnotationTable()->ParameterAnnotationEntry[]::: parameter annotations get parameter annotation table
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotations#getParameterAnnotationEntries()->ParameterAnnotationEntry[]:::returns the array of parameter annotation entries in this parameter annotation
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotations#dump(DataOutputStream)->void::: parameter annotations dump
com.sun.org.apache.bcel.internal.classfile.ParameterAnnotations#copy(ConstantPool)->Attribute::: parameter annotations copy
com.sun.org.apache.bcel.internal.classfile.PMGClass#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.PMGClass#dump(DataOutputStream)->void:::Dump source file attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.PMGClass#getPMGClassIndex()->int::: class get class index
com.sun.org.apache.bcel.internal.classfile.PMGClass#setPMGClassIndex(int)->void::: class set class index
com.sun.org.apache.bcel.internal.classfile.PMGClass#getPMGIndex()->int::: class get index
com.sun.org.apache.bcel.internal.classfile.PMGClass#setPMGIndex(int)->void::: class set index
com.sun.org.apache.bcel.internal.classfile.PMGClass#getPMGName()->String::: class get name
com.sun.org.apache.bcel.internal.classfile.PMGClass#getPMGClassName()->String::: class get class name
com.sun.org.apache.bcel.internal.classfile.PMGClass#toString()->String::: class to string
com.sun.org.apache.bcel.internal.classfile.PMGClass#copy(ConstantPool)->Attribute::: class copy
com.sun.org.apache.bcel.internal.classfile.RuntimeInvisibleAnnotations#copy(ConstantPool)->Attribute::: runtime invisible annotations copy
com.sun.org.apache.bcel.internal.classfile.RuntimeInvisibleAnnotations#dump(DataOutputStream)->void::: runtime invisible annotations dump
com.sun.org.apache.bcel.internal.classfile.RuntimeVisibleAnnotations#copy(ConstantPool)->Attribute::: runtime visible annotations copy
com.sun.org.apache.bcel.internal.classfile.RuntimeVisibleAnnotations#dump(DataOutputStream)->void::: runtime visible annotations dump
com.sun.org.apache.bcel.internal.classfile.Signature#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Signature#dump(DataOutputStream)->void:::Dump source file attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.Signature#getSignatureIndex()->int::: signature get signature index
com.sun.org.apache.bcel.internal.classfile.Signature#setSignatureIndex(int)->void::: signature set signature index
com.sun.org.apache.bcel.internal.classfile.Signature#getSignature()->String::: signature get signature
com.sun.org.apache.bcel.internal.classfile.Signature#translate(String)->String::: signature translate
com.sun.org.apache.bcel.internal.classfile.Signature#isFormalParameterList(String)->boolean::: signature is formal parameter list
com.sun.org.apache.bcel.internal.classfile.Signature#isActualParameterList(String)->boolean::: signature is actual parameter list
com.sun.org.apache.bcel.internal.classfile.Signature#toString()->String::: signature to string
com.sun.org.apache.bcel.internal.classfile.Signature#copy(ConstantPool)->Attribute::: signature copy
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getIndex()->int::: simple element value get index
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#setIndex(int)->void::: simple element value set index
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueString()->String::: simple element value get value string
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueInt()->int::: simple element value get value int
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueByte()->byte::: simple element value get value byte
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueChar()->char::: simple element value get value char
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueLong()->long::: simple element value get value long
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueFloat()->float::: simple element value get value float
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueDouble()->double::: simple element value get value double
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueBoolean()->boolean::: simple element value get value boolean
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#getValueShort()->short::: simple element value get value short
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#toString()->String::: simple element value to string
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#stringifyValue()->String::: simple element value stringify value
com.sun.org.apache.bcel.internal.classfile.SimpleElementValue#dump(DataOutputStream)->void::: simple element value dump
com.sun.org.apache.bcel.internal.classfile.SourceFile#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.SourceFile#dump(DataOutputStream)->void:::Dump source file attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.SourceFile#getSourceFileIndex()->int::: source file get source file index
com.sun.org.apache.bcel.internal.classfile.SourceFile#setSourceFileIndex(int)->void::: source file set source file index
com.sun.org.apache.bcel.internal.classfile.SourceFile#getSourceFileName()->String::: source file get source file name
com.sun.org.apache.bcel.internal.classfile.SourceFile#toString()->String::: source file to string
com.sun.org.apache.bcel.internal.classfile.SourceFile#copy(ConstantPool)->Attribute::: source file copy
com.sun.org.apache.bcel.internal.classfile.StackMap#dump(DataOutputStream)->void:::Dump stack map table attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.StackMap#getStackMap()->StackMapEntry[]::: stack map get stack map
com.sun.org.apache.bcel.internal.classfile.StackMap#setStackMap(StackMapEntry[])->void::: stack map set stack map
com.sun.org.apache.bcel.internal.classfile.StackMap#toString()->String::: stack map to string
com.sun.org.apache.bcel.internal.classfile.StackMap#copy(ConstantPool)->Attribute::: stack map copy
com.sun.org.apache.bcel.internal.classfile.StackMap#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.StackMap#getMapLength()->int::: stack map get map length
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#dump(DataOutputStream)->void:::Dump stack map entry
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#toString()->String::: stack map entry to string
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#getMapEntrySize()->int:::Calculate stack map entry size
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#setFrameType(int)->void::: stack map entry set frame type
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#getFrameType()->int::: stack map entry get frame type
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#setByteCodeOffset(int)->void::: stack map entry set byte code offset
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#updateByteCodeOffset(int)->void:::Update the distance (as an offset delta) from this StackMap entry to the next
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#getByteCodeOffset()->int::: stack map entry get byte code offset
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#setNumberOfLocals(int)->void::: stack map entry set number of locals
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#getNumberOfLocals()->int::: stack map entry get number of locals
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#setTypesOfLocals(StackMapType[])->void::: stack map entry set types of locals
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#getTypesOfLocals()->StackMapType[]::: stack map entry get types of locals
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#setNumberOfStackItems(int)->void::: stack map entry set number of stack items
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#getNumberOfStackItems()->int::: stack map entry get number of stack items
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#setTypesOfStackItems(StackMapType[])->void::: stack map entry set types of stack items
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#getTypesOfStackItems()->StackMapType[]::: stack map entry get types of stack items
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#copy()->StackMapEntry::: stack map entry copy
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#getConstantPool()->ConstantPool::: stack map entry get constant pool
com.sun.org.apache.bcel.internal.classfile.StackMapEntry#setConstantPool(ConstantPool)->void::: stack map entry set constant pool
com.sun.org.apache.bcel.internal.classfile.StackMapType#setType(byte)->void::: stack map type set type
com.sun.org.apache.bcel.internal.classfile.StackMapType#getType()->byte::: stack map type get type
com.sun.org.apache.bcel.internal.classfile.StackMapType#setIndex(int)->void::: stack map type set index
com.sun.org.apache.bcel.internal.classfile.StackMapType#getIndex()->int::: stack map type get index
com.sun.org.apache.bcel.internal.classfile.StackMapType#dump(DataOutputStream)->void:::Dump type entries to file.
com.sun.org.apache.bcel.internal.classfile.StackMapType#hasIndex()->boolean::: stack map type has index
com.sun.org.apache.bcel.internal.classfile.StackMapType#toString()->String::: stack map type to string
com.sun.org.apache.bcel.internal.classfile.StackMapType#copy()->StackMapType::: stack map type copy
com.sun.org.apache.bcel.internal.classfile.StackMapType#getConstantPool()->ConstantPool::: stack map type get constant pool
com.sun.org.apache.bcel.internal.classfile.StackMapType#setConstantPool(ConstantPool)->void::: stack map type set constant pool
com.sun.org.apache.bcel.internal.classfile.Synthetic#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Synthetic#dump(DataOutputStream)->void:::Dump source file attribute to file stream in binary format.
com.sun.org.apache.bcel.internal.classfile.Synthetic#getBytes()->byte[]::: synthetic get bytes
com.sun.org.apache.bcel.internal.classfile.Synthetic#setBytes(byte[])->void::: synthetic set bytes
com.sun.org.apache.bcel.internal.classfile.Synthetic#toString()->String::: synthetic to string
com.sun.org.apache.bcel.internal.classfile.Synthetic#copy(ConstantPool)->Attribute::: synthetic copy
com.sun.org.apache.bcel.internal.classfile.Unknown#getUnknownAttributes()->Unknown[]::: unknown get unknown attributes
com.sun.org.apache.bcel.internal.classfile.Unknown#accept(Visitor)->void:::Called by objects that are traversing the nodes of the tree implicitely defined by the contents of a Java class
com.sun.org.apache.bcel.internal.classfile.Unknown#dump(DataOutputStream)->void:::Dump unknown bytes to file stream.
com.sun.org.apache.bcel.internal.classfile.Unknown#getBytes()->byte[]::: unknown get bytes
com.sun.org.apache.bcel.internal.classfile.Unknown#getName()->String::: unknown get name
com.sun.org.apache.bcel.internal.classfile.Unknown#setBytes(byte[])->void::: unknown set bytes
com.sun.org.apache.bcel.internal.classfile.Unknown#toString()->String::: unknown to string
com.sun.org.apache.bcel.internal.classfile.Unknown#copy(ConstantPool)->Attribute::: unknown copy
com.sun.org.apache.bcel.internal.classfile.UnknownAttributeReader#createAttribute(int, int, java.io.DataInput, ConstantPool)->Attribute:::When this attribute reader is added via the static method Attribute.addAttributeReader, an attribute name is associated with it
com.sun.org.apache.bcel.internal.classfile.Utility#accessToString(int)->String:::Convert bit field of flags into string such as `static final'.
com.sun.org.apache.bcel.internal.classfile.Utility#accessToString(int, boolean)->String:::Convert bit field of flags into string such as `static final'
com.sun.org.apache.bcel.internal.classfile.Utility#classOrInterface(int)->String::: utility class or interface
com.sun.org.apache.bcel.internal.classfile.Utility#codeToString(byte[], ConstantPool, int, int, boolean)->String:::Disassemble a byte array of JVM byte codes starting from code line `index' and return the disassembled string representation
com.sun.org.apache.bcel.internal.classfile.Utility#codeToString(byte[], ConstantPool, int, int)->String::: utility code to string
com.sun.org.apache.bcel.internal.classfile.Utility#codeToString(ByteSequence, ConstantPool, boolean)->String:::Disassemble a stream of byte codes and return the string representation.
com.sun.org.apache.bcel.internal.classfile.Utility#codeToString(ByteSequence, ConstantPool)->String::: utility code to string
com.sun.org.apache.bcel.internal.classfile.Utility#compactClassName(String)->String:::Shorten long class names, java/lang/String becomes String.
com.sun.org.apache.bcel.internal.classfile.Utility#compactClassName(String, String, boolean)->String:::Shorten long class name str, i.e., chop off the prefix, if the class name starts with this string and the flag chopit is true
com.sun.org.apache.bcel.internal.classfile.Utility#compactClassName(String, boolean)->String:::Shorten long class names, java/lang/String becomes java.lang.String, e.g.
com.sun.org.apache.bcel.internal.classfile.Utility#setBit(int, int)->int::: utility set bit
com.sun.org.apache.bcel.internal.classfile.Utility#clearBit(int, int)->int::: utility clear bit
com.sun.org.apache.bcel.internal.classfile.Utility#isSet(int, int)->boolean::: utility is set
com.sun.org.apache.bcel.internal.classfile.Utility#methodTypeToSignature(String, String[])->String:::Converts string containing the method return and argument types to a byte code method signature.
com.sun.org.apache.bcel.internal.classfile.Utility#methodSignatureArgumentTypes(String)->String[]::: utility method signature argument types
com.sun.org.apache.bcel.internal.classfile.Utility#methodSignatureArgumentTypes(String, boolean)->String[]::: utility method signature argument types
com.sun.org.apache.bcel.internal.classfile.Utility#methodSignatureReturnType(String)->String::: utility method signature return type
com.sun.org.apache.bcel.internal.classfile.Utility#methodSignatureReturnType(String, boolean)->String::: utility method signature return type
com.sun.org.apache.bcel.internal.classfile.Utility#methodSignatureToString(String, String, String)->String:::Converts method signature to string with all class names compacted.
com.sun.org.apache.bcel.internal.classfile.Utility#methodSignatureToString(String, String, String, boolean)->String::: utility method signature to string
com.sun.org.apache.bcel.internal.classfile.Utility#methodSignatureToString(String, String, String, boolean, LocalVariableTable)->String:::A returntype signature represents the return value from a method
com.sun.org.apache.bcel.internal.classfile.Utility#replace(String, String, String)->String:::Replace all occurrences of old in str with new.
com.sun.org.apache.bcel.internal.classfile.Utility#signatureToString(String)->String:::Converts signature to string with all class names compacted.
com.sun.org.apache.bcel.internal.classfile.Utility#signatureToString(String, boolean)->String:::The field signature represents the value of an argument to a function or the value of a variable
com.sun.org.apache.bcel.internal.classfile.Utility#getSignature(String)->String:::Parse Java type such as "char", or "java.lang.String[]" and return the signature in byte code format, e.g
com.sun.org.apache.bcel.internal.classfile.Utility#typeOfMethodSignature(String)->byte:::Return type of method signature as a byte value as defined in Constants
com.sun.org.apache.bcel.internal.classfile.Utility#typeOfSignature(String)->byte:::Return type of signature as a byte value as defined in Constants
com.sun.org.apache.bcel.internal.classfile.Utility#searchOpcode(String)->short:::Map opcode names to opcode numbers
com.sun.org.apache.bcel.internal.classfile.Utility#toHexString(byte[])->String:::Convert bytes into hexadecimal string
com.sun.org.apache.bcel.internal.classfile.Utility#format(int, int, boolean, char)->String:::Return a string for an integer justified left or right and filled up with `fill' characters if necessary.
com.sun.org.apache.bcel.internal.classfile.Utility#fillup(String, int, boolean, char)->String:::Fillup char with up to length characters with char `fill' and justify it left or right.
com.sun.org.apache.bcel.internal.classfile.Utility#equals(byte[], byte[])->boolean::: utility equals
com.sun.org.apache.bcel.internal.classfile.Utility#printArray(PrintStream, Object[])->void::: utility print array
com.sun.org.apache.bcel.internal.classfile.Utility#printArray(PrintWriter, Object[])->void::: utility print array
com.sun.org.apache.bcel.internal.classfile.Utility#printArray(Object[])->String::: utility print array
com.sun.org.apache.bcel.internal.classfile.Utility#printArray(Object[], boolean)->String::: utility print array
com.sun.org.apache.bcel.internal.classfile.Utility#printArray(Object[], boolean, boolean)->String::: utility print array
com.sun.org.apache.bcel.internal.classfile.Utility#isJavaIdentifierPart(char)->boolean::: utility is java identifier part
com.sun.org.apache.bcel.internal.classfile.Utility#encode(byte[], boolean)->String:::Encode byte array it into Java identifier string, i.e., a string that only contains the following characters: (a, ..
com.sun.org.apache.bcel.internal.classfile.Utility#decode(String, boolean)->byte[]:::Decode a string back to a byte array.
com.sun.org.apache.bcel.internal.classfile.Utility#convertString(String)->String:::Escape all occurences of newline chars '\n', quotes \", etc.
com.sun.org.apache.bcel.internal.classfile.Visitor#visitCode(Code)->void::: visitor visit code
com.sun.org.apache.bcel.internal.classfile.Visitor#visitCodeException(CodeException)->void::: visitor visit code exception
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantClass(ConstantClass)->void::: visitor visit constant class
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantDouble(ConstantDouble)->void::: visitor visit constant double
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantFieldref(ConstantFieldref)->void::: visitor visit constant fieldref
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantFloat(ConstantFloat)->void::: visitor visit constant float
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantInteger(ConstantInteger)->void::: visitor visit constant integer
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantInterfaceMethodref(ConstantInterfaceMethodref)->void::: visitor visit constant interface methodref
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantInvokeDynamic(ConstantInvokeDynamic)->void::: visitor visit constant invoke dynamic
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantLong(ConstantLong)->void::: visitor visit constant long
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantMethodref(ConstantMethodref)->void::: visitor visit constant methodref
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantNameAndType(ConstantNameAndType)->void::: visitor visit constant name and type
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantPool(ConstantPool)->void::: visitor visit constant pool
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantString(ConstantString)->void::: visitor visit constant string
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantUtf8(ConstantUtf8)->void::: visitor visit constant utf8
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantValue(ConstantValue)->void::: visitor visit constant value
com.sun.org.apache.bcel.internal.classfile.Visitor#visitDeprecated(Deprecated)->void::: visitor visit deprecated
com.sun.org.apache.bcel.internal.classfile.Visitor#visitExceptionTable(ExceptionTable)->void::: visitor visit exception table
com.sun.org.apache.bcel.internal.classfile.Visitor#visitField(Field)->void::: visitor visit field
com.sun.org.apache.bcel.internal.classfile.Visitor#visitInnerClass(InnerClass)->void::: visitor visit inner class
com.sun.org.apache.bcel.internal.classfile.Visitor#visitInnerClasses(InnerClasses)->void::: visitor visit inner classes
com.sun.org.apache.bcel.internal.classfile.Visitor#visitJavaClass(JavaClass)->void::: visitor visit java class
com.sun.org.apache.bcel.internal.classfile.Visitor#visitLineNumber(LineNumber)->void::: visitor visit line number
com.sun.org.apache.bcel.internal.classfile.Visitor#visitLineNumberTable(LineNumberTable)->void::: visitor visit line number table
com.sun.org.apache.bcel.internal.classfile.Visitor#visitLocalVariable(LocalVariable)->void::: visitor visit local variable
com.sun.org.apache.bcel.internal.classfile.Visitor#visitLocalVariableTable(LocalVariableTable)->void::: visitor visit local variable table
com.sun.org.apache.bcel.internal.classfile.Visitor#visitMethod(Method)->void::: visitor visit method
com.sun.org.apache.bcel.internal.classfile.Visitor#visitSignature(Signature)->void::: visitor visit signature
com.sun.org.apache.bcel.internal.classfile.Visitor#visitSourceFile(SourceFile)->void::: visitor visit source file
com.sun.org.apache.bcel.internal.classfile.Visitor#visitSynthetic(Synthetic)->void::: visitor visit synthetic
com.sun.org.apache.bcel.internal.classfile.Visitor#visitUnknown(Unknown)->void::: visitor visit unknown
com.sun.org.apache.bcel.internal.classfile.Visitor#visitStackMap(StackMap)->void::: visitor visit stack map
com.sun.org.apache.bcel.internal.classfile.Visitor#visitStackMapEntry(StackMapEntry)->void::: visitor visit stack map entry
com.sun.org.apache.bcel.internal.classfile.Visitor#visitAnnotation(Annotations)->void::: visitor visit annotation
com.sun.org.apache.bcel.internal.classfile.Visitor#visitParameterAnnotation(ParameterAnnotations)->void::: visitor visit parameter annotation
com.sun.org.apache.bcel.internal.classfile.Visitor#visitAnnotationEntry(AnnotationEntry)->void::: visitor visit annotation entry
com.sun.org.apache.bcel.internal.classfile.Visitor#visitAnnotationDefault(AnnotationDefault)->void::: visitor visit annotation default
com.sun.org.apache.bcel.internal.classfile.Visitor#visitLocalVariableTypeTable(LocalVariableTypeTable)->void::: visitor visit local variable type table
com.sun.org.apache.bcel.internal.classfile.Visitor#visitEnclosingMethod(EnclosingMethod)->void::: visitor visit enclosing method
com.sun.org.apache.bcel.internal.classfile.Visitor#visitBootstrapMethods(BootstrapMethods)->void::: visitor visit bootstrap methods
com.sun.org.apache.bcel.internal.classfile.Visitor#visitMethodParameters(MethodParameters)->void::: visitor visit method parameters
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantMethodType(ConstantMethodType)->void::: visitor visit constant method type
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantMethodHandle(ConstantMethodHandle)->void::: visitor visit constant method handle
com.sun.org.apache.bcel.internal.classfile.Visitor#visitParameterAnnotationEntry(ParameterAnnotationEntry)->void::: visitor visit parameter annotation entry
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantPackage(ConstantPackage)->void::: visitor visit constant package
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantModule(ConstantModule)->void::: visitor visit constant module
com.sun.org.apache.bcel.internal.classfile.Visitor#visitConstantDynamic(ConstantDynamic)->void::: visitor visit constant dynamic
