CollectionSizeTest#testSize():::Tests the memory size of an empty map and a map with only one or two entries.:::Assume->assumeTrue->map->EconomicMap->create->ObjectSizeEstimate->forObject->getTotalBytes->assertEquals->value->map->put->ObjectSizeEstimate->forObject->getTotalBytes->assertEquals->secondValue->map->put->ObjectSizeEstimate->forObject->getTotalBytes->assertEquals
CollectionSizeTest#testCompress():::Tests whether the map actually compresses the entries array when a large number of entries are deleted.:::Assume->assumeTrue->map->EconomicMap->create->firstValue->map->put->afterFirstValue->ObjectSizeEstimate->forObject->for->i->beforeRemove->ObjectSizeEstimate->forObject->for->i->afterRemove->ObjectSizeEstimate->forObject->assertEquals->for->i->afterAdd->ObjectSizeEstimate->forObject->beforeRemove->getPointerCount->afterAdd->getPointerCount->assertEquals
CollectionUtilTest#sum(Iterable)::: collection util test sum:::sum->foreach->return
CollectionUtilTest#indexOf(Iterable, int)::: collection util test index of:::index->foreach->if->return->return
CollectionUtilTest#testConcat()::: collection util test test concat:::a->Arrays->asList->b->Arrays->asList->Assert->CollectionsUtil->concat->sum->assertEquals->Assert->CollectionsUtil->concat->sum->assertEquals->Assert->CollectionsUtil->concat->indexOf->assertEquals->Assert->CollectionsUtil->concat->indexOf->assertEquals
CollectionUtilTest#testMatch()::: collection util test test match:::array->Assert->CollectionsUtil->s->isEmpty->allMatch->assertTrue->Assert->CollectionsUtil->s->startsWith->allMatch->assertFalse->Assert->CollectionsUtil->String->isEmpty->anyMatch->assertFalse->Assert->CollectionsUtil->s->startsWith->anyMatch->assertTrue
CollectionUtilTest#testFilterToList()::: collection util test test filter to list:::array->Assert->CollectionsUtil->Arrays->asList->String->isEmpty->filterToList->size->assertEquals
CollectionUtilTest#testFilterAndMapToArray()::: collection util test test filter and map to array:::array->newArray->CollectionsUtil->s->isEmpty->String->toUpperCase->String[]->new->filterAndMapToArray->Assert->new->StringArr->assertArrayEquals
CollectionUtilTest#testMapToArray()::: collection util test test map to array:::array->newArray->CollectionsUtil->String->toUpperCase->String[]->new->mapToArray->Assert->new->StringArr->assertArrayEquals
CollectionUtilTest#testMapAndJoin()::: collection util test test map and join:::array->Assert->CollectionsUtil->String->toUpperCase->mapAndJoin->assertEquals->Assert->CollectionsUtil->String->toUpperCase->mapAndJoin->assertEquals->Assert->CollectionsUtil->String->toUpperCase->mapAndJoin->assertEquals->Assert->CollectionsUtil->Arrays->asList->String->toUpperCase->mapAndJoin->assertEquals->Assert->CollectionsUtil->Arrays->asList->String->toUpperCase->mapAndJoin->assertEquals
CollectionUtilTest#testIterableConcat()::: collection util test test iterable concat:::i1->Arrays->asList->i2->Arrays->asList->i3->Arrays->asList->i4->Arrays->asList->i5->Arrays->asList->iNull->actual->new->ArrayList<>->expected->new->ArrayList<>->expected->addAll->expected->addAll->expected->addAll->expected->addAll->expected->addAll->iterable->CollectionsUtil->Arrays->asList->concat->foreach->actual->add->Assert->assertEquals->iter->iterable->iterator->while->iter->hasNext->iter->next->try->iter->next->Assert->fail->catch->finally->try->CollectionsUtil->concat->Assert->fail->catch->finally->emptyIterable->CollectionsUtil->Collections->emptyList->concat->Assert->emptyIterable->iterator->hasNext->assertFalse
