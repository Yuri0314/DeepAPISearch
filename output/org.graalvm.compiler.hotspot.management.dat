HotSpotGraalManagement#initialize(HotSpotGraalRuntime)::: hot spot graal management initialize:::if->if->runtime->getManagement->throw->runtime->getName->new->IllegalArgumentException->try->name->runtime->getName->replace->objectName->new->ObjectName->new->HotSpotGraalRuntimeMBean->registration->add->catch->err->printStackTrace->finally->else->if->bean->getRuntime->throw->new->IllegalArgumentException
HotSpotGraalManagement.RegistrationThread#add(HotSpotGraalManagement):::Adds a HotSpotGraalManagement to register with an active MBean server when one becomes available.:::if->notify
HotSpotGraalManagement.RegistrationThread#process():::Processes and clears any deferred registrations.:::for->m
HotSpotGraalManagement.RegistrationThread#run()::: registration thread run:::while->try->synchronized->while->wait->poll->Thread->sleep->catch->e->printStackTrace->finally
HotSpotGraalManagement.RegistrationThread#poll():::Checks for active MBean server and if available, processes deferred registrations.:::if->try->servers->MBeanServerFactory->findMBeanServer->if->servers->isEmpty->ManagementFactory->getPlatformMBeanServer->process->catch->finally->else->process
HotSpotGraalManagement#poll(boolean)::: hot spot graal management poll:::if->registration->poll->if->return->return->bean->getObjectName
HotSpotGraalRuntimeMBean#getObjectName()::: hot spot graal runtime bean get object name:::return
HotSpotGraalRuntimeMBean#getRuntime()::: hot spot graal runtime bean get runtime:::return
HotSpotGraalRuntimeMBean#initDebug()::: hot spot graal runtime bean init debug:::try->return->Boolean->Services->getSavedProperties->getSimpleName->get->parseBoolean->catch->return->finally
HotSpotGraalRuntimeMBean#getAttribute(String)::: hot spot graal runtime bean get attribute:::result->runtime->getOptionValues->value->if->throw->new->AttributeNotFoundException->if->value->getClass->getName->printf->return
HotSpotGraalRuntimeMBean#setAttribute(Attribute)::: hot spot graal runtime bean set attribute:::name->attribute->getName->value->attribute->getValue->svalue->String->valueOf->if->value->getClass->getName->printf->result->runtime->new->StringArr->new->StringArr->setOptionValues->if->if->throw->new->AttributeNotFoundException->throw->new->InvalidAttributeValueException
HotSpotGraalRuntimeMBean#getAttributes(String[])::: hot spot graal runtime bean get attributes:::values->runtime->getOptionValues->list->new->AttributeList->for->i->return
HotSpotGraalRuntimeMBean#setAttributes(AttributeList)::: hot spot graal runtime bean set attributes:::names->attributes->size->new->StringArr->values->attributes->size->new->StringArr->i->foreach->attributes->asList->name->attr->getName->value->attr->getValue->svalue->String->valueOf->if->value->getClass->getName->printf->result->runtime->setOptionValues->setOk->new->AttributeList->foreach->attributes->asList->if->setOk->add->else->if->TTY->attr->getName->attr->getValue->printf->else->TTY->attr->getName->attr->getValue->printf->return
HotSpotGraalRuntimeMBean#invoke(String, Object[], String[])::: hot spot graal runtime bean invoke:::try->if->Arrays->asList->printf->retvalue->if->equals->runtime->invokeManagementAction->else->found->foreach->GraalServices->load->info->new->ArrayList<>->p->registerOperations->foreach->if->actionName->op->getName->equals->p->invoke->break->if->throw->new->IllegalStateException->new->MBeanException->if->Arrays->asList->printf->return->catch->throw->throw->new->ReflectionException->finally
HotSpotGraalRuntimeMBean#getMBeanInfo()::: hot spot graal runtime bean get bean info:::attrs->new->ArrayList<>->foreach->getOptionDescriptors->getValues->optionValueType->option->getOptionValueType->if->isAssignableFrom->attrs->option->getName->optionValueType->getName->option->getHelp->new->MBeanAttributeInfo->add->attrs->new->Comparator<MBeanAttributeInfo>->sort->opts->new->ArrayList<>->opts->new->MBeanParameterInfoArr->new->MBeanParameterInfo->new->MBeanParameterInfo->new->MBeanOperationInfo->add->opts->new->MBeanParameterInfoArr->new->MBeanParameterInfo->new->MBeanParameterInfo->new->MBeanParameterInfo->new->MBeanOperationInfo->add->opts->new->MBeanParameterInfoArr->new->MBeanParameterInfo->new->MBeanParameterInfo->new->MBeanParameterInfo->new->MBeanParameterInfo->new->MBeanParameterInfo->new->MBeanOperationInfo->add->foreach->GraalServices->load->p->registerOperations->return->getName->attrs->attrs->size->new->MBeanAttributeInfoArr->toArray->opts->opts->size->new->MBeanOperationInfoArr->toArray->new->MBeanInfo
HotSpotGraalRuntimeMBean#getOptionDescriptors()::: hot spot graal runtime bean get option descriptors:::result->EconomicMap->create->foreach->OptionsParser->getOptionsLoader->foreach->result->option->getName->put->return
JMXServiceProvider#getThreadAllocatedBytes(long)::: service provider get thread allocated bytes:::return->threadMXBean->getThreadAllocatedBytes
JMXServiceProvider#getCurrentThreadCpuTime()::: service provider get current thread cpu time:::times->threadMXBean->new->longArr->currentThread->getId->getThreadCpuTime->return
JMXServiceProvider#isThreadAllocatedMemorySupported()::: service provider is thread allocated memory supported:::return->threadMXBean->isThreadAllocatedMemorySupported
JMXServiceProvider#isCurrentThreadCpuTimeSupported()::: service provider is current thread cpu time supported:::return->threadMXBean->isThreadCpuTimeSupported
JMXServiceProvider#getInputArguments()::: service provider get input arguments:::return->ManagementFactory->getRuntimeMXBean->getInputArguments
