sun.jvm.hotspot.debugger.win32.coff.AuxBfEfRecord#getLineNumber()->short:::Actual ordinal line number (1, 2, 3, etc.) within source file,       corresponding to the .bf or .ef record.
sun.jvm.hotspot.debugger.win32.coff.AuxBfEfRecord#getPointerToNextFunction()->int:::Symbol-table index of the next .bf symbol record
sun.jvm.hotspot.debugger.win32.coff.AuxFileRecord#getName()->String::: aux file record get name
sun.jvm.hotspot.debugger.win32.coff.AuxFunctionDefinitionRecord#getTagIndex()->int:::Symbol-table index of the corresponding .bf (begin function)       symbol record.
sun.jvm.hotspot.debugger.win32.coff.AuxFunctionDefinitionRecord#getTotalSize()->int:::Size of the executable code for the function itself
sun.jvm.hotspot.debugger.win32.coff.AuxFunctionDefinitionRecord#getPointerToLineNumber()->int:::Index of the first COFF line-number entry for the function in       the global array of line numbers (see sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getCOFFLineNumber),       or -1 if none exists.
sun.jvm.hotspot.debugger.win32.coff.AuxFunctionDefinitionRecord#getPointerToNextFunction()->int:::Symbol-table index of the record for the next function
sun.jvm.hotspot.debugger.win32.coff.AuxSectionDefinitionsRecord#getLength()->int:::Size of section data; same as Size of Raw Data in the section       header.
sun.jvm.hotspot.debugger.win32.coff.AuxSectionDefinitionsRecord#getNumberOfRelocations()->short:::Number of relocation entries for the section.
sun.jvm.hotspot.debugger.win32.coff.AuxSectionDefinitionsRecord#getNumberOfLineNumbers()->short:::Number of line-number entries for the section.
sun.jvm.hotspot.debugger.win32.coff.AuxSectionDefinitionsRecord#getCheckSum()->int:::Checksum for communal data
sun.jvm.hotspot.debugger.win32.coff.AuxSectionDefinitionsRecord#getNumber()->short:::One-based index into the Section Table for the associated       section; used when the COMDAT Selection setting is 5.
sun.jvm.hotspot.debugger.win32.coff.AuxSectionDefinitionsRecord#getSelection()->byte:::COMDAT selection number
sun.jvm.hotspot.debugger.win32.coff.AuxSymbolRecord#getType()->int:::Returns #FUNCTION_DEFINITION, #BF_EF_RECORD,       #WEAK_EXTERNAL, #FILE, or #SECTION_DEFINITION, indicating the concrete subtype of this       interface.
sun.jvm.hotspot.debugger.win32.coff.AuxWeakExternalRecord#getTagIndex()->int:::Symbol-table index of sym2, the symbol to be linked if sym1 is       not found.
sun.jvm.hotspot.debugger.win32.coff.AuxWeakExternalRecord#getCharacteristics()->int:::<P> A value of #IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY       indicates that no library search for sym1 should be       performed
sun.jvm.hotspot.debugger.win32.coff.COFFFile#getHeader()->COFFHeader::: file get header
sun.jvm.hotspot.debugger.win32.coff.COFFFile#isImage()->boolean:::Indicates whether the file is an image (.EXE or .DLL) or not       (.OBJ).
sun.jvm.hotspot.debugger.win32.coff.COFFFile#close()->void:::Closes this COFF file
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser#getParser()->COFFFileParser:::This class is a singleton; returns the sole instance.
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser#parse(String)->COFFFile::: file parser parse
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser#parse(DataSource)->COFFFile::: file parser parse
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#isImage()->boolean::: file impl is image
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#getHeader()->COFFHeader::: file impl get header
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getMachineType()->short::: header impl get machine type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getNumberOfSections()->short::: header impl get number of sections
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getTimeDateStamp()->int::: header impl get time date stamp
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getPointerToSymbolTable()->int::: header impl get pointer to symbol table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getNumberOfSymbols()->int::: header impl get number of symbols
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getSizeOfOptionalHeader()->short::: header impl get size of optional header
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getOptionalHeader()->OptionalHeader::: header impl get optional header
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getCharacteristics()->short::: header impl get characteristics
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#hasCharacteristic(short)->boolean::: header impl has characteristic
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getSectionHeader(int)->SectionHeader::: header impl get section header
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getCOFFSymbol(int)->COFFSymbol::: header impl get symbol
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getNumberOfStrings()->int::: header impl get number of strings
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getString(int)->String::: header impl get string
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#getStringTable()->StringTable::: header impl get string table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl#rvaToFileOffset(int)->int::: header impl rva to file offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderImpl#getMagicNumber()->short::: optional header impl get magic number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderImpl#getStandardFields()->OptionalHeaderStandardFields::: optional header impl get standard fields
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderImpl#getWindowsSpecificFields()->OptionalHeaderWindowsSpecificFields::: optional header impl get windows specific fields
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderImpl#getDataDirectories()->OptionalHeaderDataDirectories::: optional header impl get data directories
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderStandardFieldsImpl#getMajorLinkerVersion()->byte::: optional header standard fields impl get major linker version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderStandardFieldsImpl#getMinorLinkerVersion()->byte::: optional header standard fields impl get minor linker version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderStandardFieldsImpl#getSizeOfCode()->int::: optional header standard fields impl get size of code
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderStandardFieldsImpl#getSizeOfInitializedData()->int::: optional header standard fields impl get size of initialized data
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderStandardFieldsImpl#getSizeOfUninitializedData()->int::: optional header standard fields impl get size of uninitialized data
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderStandardFieldsImpl#getAddressOfEntryPoint()->int::: optional header standard fields impl get address of entry point
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderStandardFieldsImpl#getBaseOfCode()->int::: optional header standard fields impl get base of code
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderStandardFieldsImpl#getBaseOfData()->int::: optional header standard fields impl get base of data
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getImageBase()->long::: optional header windows specific fields impl get image base
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getSectionAlignment()->int::: optional header windows specific fields impl get section alignment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getFileAlignment()->int::: optional header windows specific fields impl get file alignment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getMajorOperatingSystemVersion()->short::: optional header windows specific fields impl get major operating system version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getMinorOperatingSystemVersion()->short::: optional header windows specific fields impl get minor operating system version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getMajorImageVersion()->short::: optional header windows specific fields impl get major image version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getMinorImageVersion()->short::: optional header windows specific fields impl get minor image version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getMajorSubsystemVersion()->short::: optional header windows specific fields impl get major subsystem version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getMinorSubsystemVersion()->short::: optional header windows specific fields impl get minor subsystem version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getSizeOfImage()->int::: optional header windows specific fields impl get size of image
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getSizeOfHeaders()->int::: optional header windows specific fields impl get size of headers
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getCheckSum()->int::: optional header windows specific fields impl get check sum
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getSubsystem()->short::: optional header windows specific fields impl get subsystem
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getDLLCharacteristics()->short::: optional header windows specific fields impl get characteristics
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getSizeOfStackReserve()->long::: optional header windows specific fields impl get size of stack reserve
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getSizeOfStackCommit()->long::: optional header windows specific fields impl get size of stack commit
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getSizeOfHeapReserve()->long::: optional header windows specific fields impl get size of heap reserve
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getSizeOfHeapCommit()->long::: optional header windows specific fields impl get size of heap commit
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getLoaderFlags()->int::: optional header windows specific fields impl get loader flags
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderWindowsSpecificFieldsImpl#getNumberOfRvaAndSizes()->int::: optional header windows specific fields impl get number of rva and sizes
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getExportTable()->DataDirectory::: optional header data directories impl get export table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getImportTable()->DataDirectory::: optional header data directories impl get import table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getResourceTable()->DataDirectory::: optional header data directories impl get resource table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getExceptionTable()->DataDirectory::: optional header data directories impl get exception table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getCertificateTable()->DataDirectory::: optional header data directories impl get certificate table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getBaseRelocationTable()->DataDirectory::: optional header data directories impl get base relocation table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getDebug()->DataDirectory::: optional header data directories impl get debug
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getArchitecture()->DataDirectory::: optional header data directories impl get architecture
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getGlobalPtr()->DataDirectory::: optional header data directories impl get global ptr
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getTLSTable()->DataDirectory::: optional header data directories impl get table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getLoadConfigTable()->DataDirectory::: optional header data directories impl get load config table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getBoundImportTable()->DataDirectory::: optional header data directories impl get bound import table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getImportAddressTable()->DataDirectory::: optional header data directories impl get import address table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getDelayImportDescriptor()->DataDirectory::: optional header data directories impl get delay import descriptor
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getCOMPlusRuntimeHeader()->DataDirectory::: optional header data directories impl get plus runtime header
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getExportDirectoryTable()->ExportDirectoryTable::: optional header data directories impl get export directory table
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.OptionalHeaderDataDirectoriesImpl#getDebugDirectory()->DebugDirectory::: optional header data directories impl get debug directory
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DataDirectoryImpl#getRVA()->int::: data directory impl get a
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DataDirectoryImpl#getSize()->int::: data directory impl get size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getExportFlags()->int::: export directory table impl get export flags
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getTimeDateStamp()->int::: export directory table impl get time date stamp
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getMajorVersion()->short::: export directory table impl get major version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getMinorVersion()->short::: export directory table impl get minor version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getNameRVA()->int::: export directory table impl get name a
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getDLLName()->String::: export directory table impl get name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getOrdinalBase()->int::: export directory table impl get ordinal base
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getNumberOfAddressTableEntries()->int::: export directory table impl get number of address table entries
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getNumberOfNamePointers()->int::: export directory table impl get number of name pointers
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getExportAddressTableRVA()->int::: export directory table impl get export address table a
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getNamePointerTableRVA()->int::: export directory table impl get name pointer table a
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getOrdinalTableRVA()->int::: export directory table impl get ordinal table a
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getExportName(int)->String::: export directory table impl get export name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getExportOrdinal(int)->short::: export directory table impl get export ordinal
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#isExportAddressForwarder(short)->boolean::: export directory table impl is export address forwarder
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getExportAddressForwarder(short)->String::: export directory table impl get export address forwarder
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportDirectoryTableImpl#getExportAddress(short)->int::: export directory table impl get export address
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.ExportNameTable#get(int)->String::: export name table get
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryImpl#getNumEntries()->int::: debug directory impl get num entries
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryImpl#getEntry(int)->DebugDirectoryEntry::: debug directory impl get entry
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getCharacteristics()->int::: debug directory entry impl get characteristics
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getTimeDateStamp()->int::: debug directory entry impl get time date stamp
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getMajorVersion()->short::: debug directory entry impl get major version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getMinorVersion()->short::: debug directory entry impl get minor version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getType()->int::: debug directory entry impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getSizeOfData()->int::: debug directory entry impl get size of data
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getAddressOfRawData()->int::: debug directory entry impl get address of raw data
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getPointerToRawData()->int::: debug directory entry impl get pointer to raw data
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getDebugVC50()->DebugVC50::: debug directory entry impl get debug c50
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugDirectoryEntryImpl#getRawDataByte(int)->byte::: debug directory entry impl get raw data byte
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl#getSubsectionDirectoryOffset()->int::: debug c50 impl get subsection directory offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl#getSubsectionDirectory()->DebugVC50SubsectionDirectory::: debug c50 impl get subsection directory
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SubsectionDirectoryImpl#getHeaderLength()->short::: debug c50 subsection directory impl get header length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SubsectionDirectoryImpl#getEntryLength()->short::: debug c50 subsection directory impl get entry length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SubsectionDirectoryImpl#getNumEntries()->int::: debug c50 subsection directory impl get num entries
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SubsectionDirectoryImpl#getSubsection(int)->DebugVC50Subsection::: debug c50 subsection directory impl get subsection
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SubsectionImpl#getSubsectionType()->short::: debug c50 subsection impl get subsection type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SubsectionImpl#getSubsectionModuleIndex()->short::: debug c50 subsection impl get subsection module index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SubsectionImpl#getSubsectionSize()->int::: debug c50 subsection impl get subsection size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSModuleImpl#getOverlayNumber()->short::: debug c50 module impl get overlay number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSModuleImpl#getLibrariesIndex()->short::: debug c50 module impl get libraries index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSModuleImpl#getNumCodeSegments()->short::: debug c50 module impl get num code segments
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSModuleImpl#getDebuggingStyle()->short::: debug c50 module impl get debugging style
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSModuleImpl#getSegInfo(int)->DebugVC50SegInfo::: debug c50 module impl get seg info
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSModuleImpl#getName()->String::: debug c50 module impl get name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegInfoImpl#getSegment()->short::: debug c50 seg info impl get segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegInfoImpl#getOffset()->int::: debug c50 seg info impl get offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegInfoImpl#getSegmentCodeSize()->int::: debug c50 seg info impl get segment code size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSAlignSymImpl#getSymbolIterator()->DebugVC50SymbolIterator::: debug c50 align sym impl get symbol iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSrcModuleImpl#getNumSourceFiles()->int::: debug c50 src module impl get num source files
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSrcModuleImpl#getNumCodeSegments()->int::: debug c50 src module impl get num code segments
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSrcModuleImpl#getSourceFileDesc(int)->DebugVC50SrcModFileDesc::: debug c50 src module impl get source file desc
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSrcModuleImpl#getSegmentStartOffset(int)->int::: debug c50 src module impl get segment start offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSrcModuleImpl#getSegmentEndOffset(int)->int::: debug c50 src module impl get segment end offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSrcModuleImpl#getSegment(int)->int::: debug c50 src module impl get segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModFileDescImpl#getNumCodeSegments()->int::: debug c50 src mod file desc impl get num code segments
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModFileDescImpl#getLineNumberMap(int)->DebugVC50SrcModLineNumberMap::: debug c50 src mod file desc impl get line number map
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModFileDescImpl#getSegmentStartOffset(int)->int::: debug c50 src mod file desc impl get segment start offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModFileDescImpl#getSegmentEndOffset(int)->int::: debug c50 src mod file desc impl get segment end offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModFileDescImpl#getSourceFileName()->String::: debug c50 src mod file desc impl get source file name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModLineNumberMapImpl#getSegment()->int::: debug c50 src mod line number map impl get segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModLineNumberMapImpl#getNumSourceLinePairs()->int::: debug c50 src mod line number map impl get num source line pairs
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModLineNumberMapImpl#getCodeOffset(int)->int::: debug c50 src mod line number map impl get code offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SrcModLineNumberMapImpl#getLineNumber(int)->int::: debug c50 src mod line number map impl get line number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSymbolBaseImpl#getSymHashIndex()->short::: debug c50 symbol base impl get sym hash index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSymbolBaseImpl#getAddrHashIndex()->short::: debug c50 symbol base impl get addr hash index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSymbolBaseImpl#getSymTabSize()->int::: debug c50 symbol base impl get sym tab size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSymbolBaseImpl#getSymHashSize()->int::: debug c50 symbol base impl get sym hash size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSymbolBaseImpl#getAddrHashSize()->int::: debug c50 symbol base impl get addr hash size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSymbolBaseImpl#getSymbolIterator()->DebugVC50SymbolIterator::: debug c50 symbol base impl get symbol iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSGlobalTypesImpl#getNumTypes()->int::: debug c50 global types impl get num types
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSGlobalTypesImpl#getTypeOffset(int)->int::: debug c50 global types impl get type offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSGlobalTypesImpl#getTypeIterator()->DebugVC50TypeIterator::: debug c50 global types impl get type iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSegMapImpl#getNumSegDesc()->short::: debug c50 seg map impl get num seg desc
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSegMapImpl#getNumLogicalSegDesc()->short::: debug c50 seg map impl get num logical seg desc
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSegMapImpl#getSegDesc(int)->DebugVC50SegDesc::: debug c50 seg map impl get seg desc
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegDescImpl#getFlags()->short::: debug c50 seg desc impl get flags
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegDescImpl#getOverlayNum()->short::: debug c50 seg desc impl get overlay num
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegDescImpl#getGroup()->short::: debug c50 seg desc impl get group
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegDescImpl#getFrame()->short::: debug c50 seg desc impl get frame
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegDescImpl#getName()->short::: debug c50 seg desc impl get name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegDescImpl#getClassName()->short::: debug c50 seg desc impl get class name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegDescImpl#getOffset()->int::: debug c50 seg desc impl get offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SegDescImpl#getSize()->int::: debug c50 seg desc impl get size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSSegNameImpl#getSegName(int)->String::: debug c50 seg name impl get seg name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSFileIndexImpl#getNumModules()->short::: debug c50 file index impl get num modules
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSFileIndexImpl#getNumReferences()->short::: debug c50 file index impl get num references
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSFileIndexImpl#getModStart()->short[]::: debug c50 file index impl get mod start
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSFileIndexImpl#getRefCount()->short[]::: debug c50 file index impl get ref count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSFileIndexImpl#getNameRef()->int[]::: debug c50 file index impl get name ref
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SSFileIndexImpl#getNames()->String[]::: debug c50 file index impl get names
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#done()->boolean::: debug c50 symbol iterator impl done
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#next()->void::: debug c50 symbol iterator impl next
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLength()->short::: debug c50 symbol iterator impl get length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getType()->int::: debug c50 symbol iterator impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getOffset()->int::: debug c50 symbol iterator impl get offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getCompilerTargetProcessor()->byte::: debug c50 symbol iterator impl get compiler target processor
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getCompilerFlags()->int::: debug c50 symbol iterator impl get compiler flags
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getComplierVersion()->String::: debug c50 symbol iterator impl get complier version
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getRegisterSymbolType()->int::: debug c50 symbol iterator impl get register symbol type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getRegisterEnum()->short::: debug c50 symbol iterator impl get register enum
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getRegisterSymbolName()->String::: debug c50 symbol iterator impl get register symbol name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getConstantType()->int::: debug c50 symbol iterator impl get constant type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getConstantValueAsInt()->int::: debug c50 symbol iterator impl get constant value as int
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getConstantValueAsLong()->long::: debug c50 symbol iterator impl get constant value as long
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getConstantValueAsFloat()->float::: debug c50 symbol iterator impl get constant value as float
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getConstantValueAsDouble()->double::: debug c50 symbol iterator impl get constant value as double
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getConstantName()->String::: debug c50 symbol iterator impl get constant name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getUDTType()->int::: debug c50 symbol iterator impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getUDTName()->String::: debug c50 symbol iterator impl get name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getSearchSymbolOffset()->int::: debug c50 symbol iterator impl get search symbol offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getSearchSegment()->short::: debug c50 symbol iterator impl get search segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getObjectCodeViewSignature()->int::: debug c50 symbol iterator impl get object code view signature
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getObjectName()->String::: debug c50 symbol iterator impl get object name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getManyRegType()->int::: debug c50 symbol iterator impl get many reg type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getManyRegCount()->byte::: debug c50 symbol iterator impl get many reg count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getManyRegRegister(int)->byte::: debug c50 symbol iterator impl get many reg register
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getManyRegName()->String::: debug c50 symbol iterator impl get many reg name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getReturnFlags()->short::: debug c50 symbol iterator impl get return flags
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getReturnStyle()->byte::: debug c50 symbol iterator impl get return style
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getReturnRegisterCount()->byte::: debug c50 symbol iterator impl get return register count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getReturnRegister(int)->byte::: debug c50 symbol iterator impl get return register
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#advanceToEntryThisSymbol()->void::: debug c50 symbol iterator impl advance to entry this symbol
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBPRelOffset()->int::: debug c50 symbol iterator impl get rel offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBPRelType()->int::: debug c50 symbol iterator impl get rel type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBPRelName()->String::: debug c50 symbol iterator impl get rel name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGDataType()->int::: debug c50 symbol iterator impl get data type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGDataOffset()->int::: debug c50 symbol iterator impl get data offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGDataSegment()->short::: debug c50 symbol iterator impl get data segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGDataName()->String::: debug c50 symbol iterator impl get data name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcParent()->DebugVC50SymbolIterator::: debug c50 symbol iterator impl get proc parent
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcParentOffset()->int::: debug c50 symbol iterator impl get proc parent offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcEnd()->DebugVC50SymbolIterator::: debug c50 symbol iterator impl get proc end
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcEndOffset()->int::: debug c50 symbol iterator impl get proc end offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcNext()->DebugVC50SymbolIterator::: debug c50 symbol iterator impl get proc next
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcNextOffset()->int::: debug c50 symbol iterator impl get proc next offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcLength()->int::: debug c50 symbol iterator impl get proc length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcDebugStart()->int::: debug c50 symbol iterator impl get proc debug start
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcDebugEnd()->int::: debug c50 symbol iterator impl get proc debug end
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcType()->int::: debug c50 symbol iterator impl get proc type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcOffset()->int::: debug c50 symbol iterator impl get proc offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcSegment()->short::: debug c50 symbol iterator impl get proc segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcFlags()->byte::: debug c50 symbol iterator impl get proc flags
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLGProcName()->String::: debug c50 symbol iterator impl get proc name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkParent()->DebugVC50SymbolIterator::: debug c50 symbol iterator impl get thunk parent
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkParentOffset()->int::: debug c50 symbol iterator impl get thunk parent offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkEnd()->DebugVC50SymbolIterator::: debug c50 symbol iterator impl get thunk end
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkEndOffset()->int::: debug c50 symbol iterator impl get thunk end offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkNext()->DebugVC50SymbolIterator::: debug c50 symbol iterator impl get thunk next
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkNextOffset()->int::: debug c50 symbol iterator impl get thunk next offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkOffset()->int::: debug c50 symbol iterator impl get thunk offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkSegment()->short::: debug c50 symbol iterator impl get thunk segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkLength()->short::: debug c50 symbol iterator impl get thunk length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkType()->byte::: debug c50 symbol iterator impl get thunk type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkName()->String::: debug c50 symbol iterator impl get thunk name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkAdjustorThisDelta()->short::: debug c50 symbol iterator impl get thunk adjustor this delta
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkAdjustorTargetName()->String::: debug c50 symbol iterator impl get thunk adjustor target name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkVCallDisplacement()->short::: debug c50 symbol iterator impl get thunk call displacement
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkPCodeOffset()->int::: debug c50 symbol iterator impl get thunk code offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getThunkPCodeSegment()->short::: debug c50 symbol iterator impl get thunk code segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBlockParent()->DebugVC50SymbolIterator::: debug c50 symbol iterator impl get block parent
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBlockParentOffset()->int::: debug c50 symbol iterator impl get block parent offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBlockEnd()->DebugVC50SymbolIterator::: debug c50 symbol iterator impl get block end
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBlockEndOffset()->int::: debug c50 symbol iterator impl get block end offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBlockLength()->int::: debug c50 symbol iterator impl get block length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBlockOffset()->int::: debug c50 symbol iterator impl get block offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBlockSegment()->short::: debug c50 symbol iterator impl get block segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getBlockName()->String::: debug c50 symbol iterator impl get block name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLabelOffset()->int::: debug c50 symbol iterator impl get label offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLabelSegment()->short::: debug c50 symbol iterator impl get label segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLabelFlags()->byte::: debug c50 symbol iterator impl get label flags
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLabelName()->String::: debug c50 symbol iterator impl get label name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getChangeOffset()->int::: debug c50 symbol iterator impl get change offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getChangeSegment()->short::: debug c50 symbol iterator impl get change segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getChangeModel()->short::: debug c50 symbol iterator impl get change model
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getVTableRoot()->int::: debug c50 symbol iterator impl get table root
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getVTablePath()->int::: debug c50 symbol iterator impl get table path
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getVTableOffset()->int::: debug c50 symbol iterator impl get table offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getVTableSegment()->short::: debug c50 symbol iterator impl get table segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getRegRelOffset()->int::: debug c50 symbol iterator impl get reg rel offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getRegRelType()->int::: debug c50 symbol iterator impl get reg rel type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getRegRelRegister()->short::: debug c50 symbol iterator impl get reg rel register
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getRegRelName()->String::: debug c50 symbol iterator impl get reg rel name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLThreadType()->int::: debug c50 symbol iterator impl get thread type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLThreadOffset()->int::: debug c50 symbol iterator impl get thread offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLThreadSegment()->short::: debug c50 symbol iterator impl get thread segment
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50SymbolIteratorImpl#getLThreadName()->String::: debug c50 symbol iterator impl get thread name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#done()->boolean::: debug c50 type iterator impl done
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#next()->void::: debug c50 type iterator impl next
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getLength()->short::: debug c50 type iterator impl get length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getTypeIndex()->int::: debug c50 type iterator impl get type index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNumTypes()->int::: debug c50 type iterator impl get num types
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#typeStringDone()->boolean::: debug c50 type iterator impl type string done
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#typeStringNext()->void::: debug c50 type iterator impl type string next
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#typeStringLeaf()->int::: debug c50 type iterator impl type string leaf
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#typeStringOffset()->int::: debug c50 type iterator impl type string offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getModifierIndex()->int::: debug c50 type iterator impl get modifier index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getModifierAttribute()->short::: debug c50 type iterator impl get modifier attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getPointerType()->int::: debug c50 type iterator impl get pointer type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getPointerAttributes()->int::: debug c50 type iterator impl get pointer attributes
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getPointerBasedOnTypeIndex()->int::: debug c50 type iterator impl get pointer based on type index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getPointerBasedOnTypeName()->String::: debug c50 type iterator impl get pointer based on type name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getPointerToMemberClass()->int::: debug c50 type iterator impl get pointer to member class
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getPointerToMemberFormat()->short::: debug c50 type iterator impl get pointer to member format
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getArrayElementType()->int::: debug c50 type iterator impl get array element type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getArrayIndexType()->int::: debug c50 type iterator impl get array index type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getArrayLength()->int::: debug c50 type iterator impl get array length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getArrayName()->String::: debug c50 type iterator impl get array name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getClassCount()->short::: debug c50 type iterator impl get class count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getClassProperty()->short::: debug c50 type iterator impl get class property
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getClassFieldList()->int::: debug c50 type iterator impl get class field list
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getClassFieldListIterator()->DebugVC50TypeIterator::: debug c50 type iterator impl get class field list iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getClassDerivationList()->int::: debug c50 type iterator impl get class derivation list
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getClassVShape()->int::: debug c50 type iterator impl get class shape
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getClassSize()->int::: debug c50 type iterator impl get class size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getClassName()->String::: debug c50 type iterator impl get class name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getUnionCount()->short::: debug c50 type iterator impl get union count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getUnionProperty()->short::: debug c50 type iterator impl get union property
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getUnionFieldList()->int::: debug c50 type iterator impl get union field list
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getUnionFieldListIterator()->DebugVC50TypeIterator::: debug c50 type iterator impl get union field list iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getUnionSize()->int::: debug c50 type iterator impl get union size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getUnionName()->String::: debug c50 type iterator impl get union name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumCount()->short::: debug c50 type iterator impl get enum count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumProperty()->short::: debug c50 type iterator impl get enum property
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumType()->int::: debug c50 type iterator impl get enum type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumFieldList()->int::: debug c50 type iterator impl get enum field list
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumFieldListIterator()->DebugVC50TypeIterator::: debug c50 type iterator impl get enum field list iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumName()->String::: debug c50 type iterator impl get enum name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getProcedureReturnType()->int::: debug c50 type iterator impl get procedure return type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getProcedureCallingConvention()->byte::: debug c50 type iterator impl get procedure calling convention
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getProcedureNumberOfParameters()->short::: debug c50 type iterator impl get procedure number of parameters
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getProcedureArgumentList()->int::: debug c50 type iterator impl get procedure argument list
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getProcedureArgumentListIterator()->DebugVC50TypeIterator::: debug c50 type iterator impl get procedure argument list iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMFunctionReturnType()->int::: debug c50 type iterator impl get function return type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMFunctionContainingClass()->int::: debug c50 type iterator impl get function containing class
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMFunctionThis()->int::: debug c50 type iterator impl get function this
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMFunctionCallingConvention()->byte::: debug c50 type iterator impl get function calling convention
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMFunctionNumberOfParameters()->short::: debug c50 type iterator impl get function number of parameters
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMFunctionArgumentList()->int::: debug c50 type iterator impl get function argument list
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMFunctionArgumentListIterator()->DebugVC50TypeIterator::: debug c50 type iterator impl get function argument list iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMFunctionThisAdjust()->int::: debug c50 type iterator impl get function this adjust
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVTShapeCount()->short::: debug c50 type iterator impl get shape count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVTShapeDescriptor(int)->int::: debug c50 type iterator impl get shape descriptor
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getBasicArrayType()->int::: debug c50 type iterator impl get basic array type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getLabelAddressMode()->short::: debug c50 type iterator impl get label address mode
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getDimArrayType()->int::: debug c50 type iterator impl get dim array type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getDimArrayDimInfo()->int::: debug c50 type iterator impl get dim array dim info
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getDimArrayName()->String::: debug c50 type iterator impl get dim array name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVFTPathCount()->int::: debug c50 type iterator impl get path count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVFTPathBase(int)->int::: debug c50 type iterator impl get path base
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getSkipIndex()->int::: debug c50 type iterator impl get skip index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getArgListCount()->int::: debug c50 type iterator impl get arg list count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getArgListType(int)->int::: debug c50 type iterator impl get arg list type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getDefaultArgType()->int::: debug c50 type iterator impl get default arg type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getDefaultArgExpression()->String::: debug c50 type iterator impl get default arg expression
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getDerivedCount()->int::: debug c50 type iterator impl get derived count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getDerivedType(int)->int::: debug c50 type iterator impl get derived type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getBitfieldFieldType()->int::: debug c50 type iterator impl get bitfield field type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getBitfieldLength()->byte::: debug c50 type iterator impl get bitfield length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getBitfieldPosition()->byte::: debug c50 type iterator impl get bitfield position
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMListAttribute()->short::: debug c50 type iterator impl get list attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMListLength()->int::: debug c50 type iterator impl get list length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMListType(int)->int::: debug c50 type iterator impl get list type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#isMListIntroducingVirtual()->boolean::: debug c50 type iterator impl is list introducing virtual
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMListVtabOffset()->int::: debug c50 type iterator impl get list vtab offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getRefSym()->DebugVC50SymbolIterator::: debug c50 type iterator impl get ref sym
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getBClassAttribute()->short::: debug c50 type iterator impl get class attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getBClassType()->int::: debug c50 type iterator impl get class type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getBClassOffset()->int::: debug c50 type iterator impl get class offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVBClassAttribute()->short::: debug c50 type iterator impl get class attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVBClassBaseClassType()->int::: debug c50 type iterator impl get class base class type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVBClassVirtualBaseClassType()->int::: debug c50 type iterator impl get class virtual base class type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVBClassVBPOff()->int::: debug c50 type iterator impl get class off
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVBClassVBOff()->int::: debug c50 type iterator impl get class off
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getIVBClassAttribute()->short::: debug c50 type iterator impl get class attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getIVBClassBType()->int::: debug c50 type iterator impl get class type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getIVBClassVBPType()->int::: debug c50 type iterator impl get class type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getIVBClassVBPOff()->int::: debug c50 type iterator impl get class off
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getIVBClassVBOff()->int::: debug c50 type iterator impl get class off
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumerateAttribute()->short::: debug c50 type iterator impl get enumerate attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumerateValue()->long::: debug c50 type iterator impl get enumerate value
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getEnumerateName()->String::: debug c50 type iterator impl get enumerate name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getFriendFcnType()->int::: debug c50 type iterator impl get friend fcn type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getFriendFcnName()->String::: debug c50 type iterator impl get friend fcn name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getIndexValue()->int::: debug c50 type iterator impl get index value
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getIndexIterator()->DebugVC50TypeIterator::: debug c50 type iterator impl get index iterator
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMemberAttribute()->short::: debug c50 type iterator impl get member attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMemberType()->int::: debug c50 type iterator impl get member type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMemberOffset()->int::: debug c50 type iterator impl get member offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMemberName()->String::: debug c50 type iterator impl get member name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getStaticAttribute()->short::: debug c50 type iterator impl get static attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getStaticType()->int::: debug c50 type iterator impl get static type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getStaticName()->String::: debug c50 type iterator impl get static name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMethodCount()->short::: debug c50 type iterator impl get method count
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMethodList()->int::: debug c50 type iterator impl get method list
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMethodName()->String::: debug c50 type iterator impl get method name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNestedType()->int::: debug c50 type iterator impl get nested type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNestedName()->String::: debug c50 type iterator impl get nested name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVFuncTabType()->int::: debug c50 type iterator impl get func tab type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getFriendClsType()->int::: debug c50 type iterator impl get friend cls type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getOneMethodAttribute()->short::: debug c50 type iterator impl get one method attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getOneMethodType()->int::: debug c50 type iterator impl get one method type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#isOneMethodIntroducingVirtual()->boolean::: debug c50 type iterator impl is one method introducing virtual
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getOneMethodVBaseOff()->int::: debug c50 type iterator impl get one method base off
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getOneMethodName()->String::: debug c50 type iterator impl get one method name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVFuncOffType()->int::: debug c50 type iterator impl get func off type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getVFuncOffOffset()->int::: debug c50 type iterator impl get func off offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNestedExAttribute()->short::: debug c50 type iterator impl get nested ex attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNestedExType()->int::: debug c50 type iterator impl get nested ex type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNestedExName()->String::: debug c50 type iterator impl get nested ex name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMemberModifyAttribute()->short::: debug c50 type iterator impl get member modify attribute
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMemberModifyType()->int::: debug c50 type iterator impl get member modify type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getMemberModifyName()->String::: debug c50 type iterator impl get member modify name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNumericTypeAt(int)->short::: debug c50 type iterator impl get numeric type at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNumericLengthAt(int)->int::: debug c50 type iterator impl get numeric length at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNumericIntAt(int)->int::: debug c50 type iterator impl get numeric int at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNumericLongAt(int)->long::: debug c50 type iterator impl get numeric long at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNumericFloatAt(int)->float::: debug c50 type iterator impl get numeric float at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNumericDoubleAt(int)->double::: debug c50 type iterator impl get numeric double at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.DebugVC50Impl.DebugVC50TypeIteratorImpl#getNumericDataAt(int)->byte[]::: debug c50 type iterator impl get numeric data at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getName()->String::: section header impl get name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getSize()->int::: section header impl get size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getVirtualAddress()->int::: section header impl get virtual address
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getSizeOfRawData()->int::: section header impl get size of raw data
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getPointerToRawData()->int::: section header impl get pointer to raw data
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getPointerToRelocations()->int::: section header impl get pointer to relocations
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getPointerToLineNumbers()->int::: section header impl get pointer to line numbers
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getNumberOfRelocations()->short::: section header impl get number of relocations
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getNumberOfLineNumbers()->short::: section header impl get number of line numbers
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getSectionFlags()->int::: section header impl get section flags
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#hasSectionFlag(int)->boolean::: section header impl has section flag
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getCOFFRelocation(int)->COFFRelocation::: section header impl get relocation
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.SectionHeaderImpl#getCOFFLineNumber(int)->COFFLineNumber::: section header impl get line number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getOffset()->int::: symbol impl get offset
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getName()->String::: symbol impl get name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getValue()->int::: symbol impl get value
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getSectionNumber()->short::: symbol impl get section number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getType()->short::: symbol impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getStorageClass()->byte::: symbol impl get storage class
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getNumberOfAuxSymbols()->byte::: symbol impl get number of aux symbols
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#isFunctionDefinition()->boolean::: symbol impl is function definition
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getAuxFunctionDefinitionRecord()->AuxFunctionDefinitionRecord::: symbol impl get aux function definition record
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#isBfOrEfSymbol()->boolean::: symbol impl is bf or ef symbol
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getAuxBfEfRecord()->AuxBfEfRecord::: symbol impl get aux bf ef record
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#isWeakExternal()->boolean::: symbol impl is weak external
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getAuxWeakExternalRecord()->AuxWeakExternalRecord::: symbol impl get aux weak external record
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#isFile()->boolean::: symbol impl is file
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getAuxFileRecord()->AuxFileRecord::: symbol impl get aux file record
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#isSectionDefinition()->boolean::: symbol impl is section definition
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFSymbolImpl#getAuxSectionDefinitionsRecord()->AuxSectionDefinitionsRecord::: symbol impl get aux section definitions record
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxFunctionDefinitionRecordImpl#getTagIndex()->int::: aux function definition record impl get tag index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxFunctionDefinitionRecordImpl#getTotalSize()->int::: aux function definition record impl get total size
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxFunctionDefinitionRecordImpl#getPointerToLineNumber()->int::: aux function definition record impl get pointer to line number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxFunctionDefinitionRecordImpl#getPointerToNextFunction()->int::: aux function definition record impl get pointer to next function
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxFunctionDefinitionRecordImpl#getType()->int::: aux function definition record impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxBfEfRecordImpl#getLineNumber()->short::: aux bf ef record impl get line number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxBfEfRecordImpl#getPointerToNextFunction()->int::: aux bf ef record impl get pointer to next function
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxBfEfRecordImpl#getType()->int::: aux bf ef record impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxWeakExternalRecordImpl#getTagIndex()->int::: aux weak external record impl get tag index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxWeakExternalRecordImpl#getCharacteristics()->int::: aux weak external record impl get characteristics
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxWeakExternalRecordImpl#getType()->int::: aux weak external record impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxFileRecordImpl#getName()->String::: aux file record impl get name
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxFileRecordImpl#getType()->int::: aux file record impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxSectionDefinitionsRecordImpl#getLength()->int::: aux section definitions record impl get length
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxSectionDefinitionsRecordImpl#getNumberOfRelocations()->short::: aux section definitions record impl get number of relocations
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxSectionDefinitionsRecordImpl#getNumberOfLineNumbers()->short::: aux section definitions record impl get number of line numbers
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxSectionDefinitionsRecordImpl#getCheckSum()->int::: aux section definitions record impl get check sum
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxSectionDefinitionsRecordImpl#getNumber()->short::: aux section definitions record impl get number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxSectionDefinitionsRecordImpl#getSelection()->byte::: aux section definitions record impl get selection
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.AuxSectionDefinitionsRecordImpl#getType()->int::: aux section definitions record impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFRelocationImpl#getVirtualAddress()->int::: relocation impl get virtual address
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFRelocationImpl#getSymbolTableIndex()->int::: relocation impl get symbol table index
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFRelocationImpl#getType()->short::: relocation impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFLineNumberImpl#getType()->int::: line number impl get type
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.COFFLineNumberImpl#getLineNumber()->short::: line number impl get line number
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.StringTable#getNum()->int::: string table get num
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.StringTable#get(int)->String::: string table get
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl.COFFHeaderImpl.StringTable#getAtOffset(int)->String:::This version takes an absolute offset in the file
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#initialize()->void::: file impl initialize
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readByteAt(long)->byte::: file impl read byte at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readByte()->byte::: file impl read byte
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readBytesAt(long, byte[])->int::: file impl read bytes at
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readBytes(byte[])->int::: file impl read bytes
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readShortAt(long)->short:::NOTE: reads little-endian short
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readShort()->short:::NOTE: reads little-endian short
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readIntAt(long)->int:::NOTE: reads little-endian int
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readInt()->int:::NOTE: reads little-endian int
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readLongAt(long)->long:::NOTE: reads little-endian long
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readLong()->long:::NOTE: reads little-endian long
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readFloat()->float:::NOTE: reads little-endian float
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readDouble()->double:::NOTE: reads little-endian double
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#readCString()->String::: file impl read string
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#seek(long)->void::: file impl seek
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#getFilePointer()->long::: file impl get file pointer
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#byteSwap(short)->short::: file impl byte swap
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#byteSwap(int)->int::: file impl byte swap
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#byteSwap(long)->long::: file impl byte swap
sun.jvm.hotspot.debugger.win32.coff.COFFFileParser.COFFFileImpl#close()->void::: file impl close
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getMachineType()->short:::Returns one of the constants in sun.jvm.hotspot.debugger.win32.coff.MachineTypes.
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getNumberOfSections()->short:::Number of sections; indicates size of the Section Table, which       immediately follows the headers.
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getTimeDateStamp()->int:::Time and date the file was created.
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getPointerToSymbolTable()->int:::File offset of the COFF symbol table or 0 if none is present.
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getNumberOfSymbols()->int:::Number of entries in the symbol table
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getSizeOfOptionalHeader()->short:::Size of the optional header, which is required for executable       files but not for object files
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getOptionalHeader()->OptionalHeader:::Returns the optional header if one is present or null if not.
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getCharacteristics()->short:::Gets the union of all characteristics set for this object or       image file
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#hasCharacteristic(short)->boolean:::Indicates whether this file has the given characteristic
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getSectionHeader(int)->SectionHeader:::Retrieves the section header at the given index, between       1 and getNumberOfSections()
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getCOFFSymbol(int)->COFFSymbol:::Retrieves the COFF symbol at the given index, between 0 and       getNumberOfSymbols() - 1
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getNumberOfStrings()->int:::Returns the number of strings in the String Table, which       immediately follows the COFF Symbol Table.
sun.jvm.hotspot.debugger.win32.coff.COFFHeader#getString(int)->String:::Retrieves the ith string (0..#getNumberOfStrings - 1)       from the string table.
sun.jvm.hotspot.debugger.win32.coff.COFFLineNumber#getType()->int:::<P> Union of two fields: Symbol Table Index and RVA
sun.jvm.hotspot.debugger.win32.coff.COFFLineNumber#getLineNumber()->short:::When nonzero, this field specifies a one-based line number
sun.jvm.hotspot.debugger.win32.coff.COFFRelocation#getVirtualAddress()->int:::Address of the item to which relocation is applied: this is the       offset from the beginning of the section, plus the value of the       section's RVA/Offset field (see sun.jvm.hotspot.debugger.win32.coff.SectionHeader.) For example, if       the first byte of the section has an address of 0x10, the third       byte has an address of 0x12.
sun.jvm.hotspot.debugger.win32.coff.COFFRelocation#getSymbolTableIndex()->int:::A zero-based index into the symbol table
sun.jvm.hotspot.debugger.win32.coff.COFFRelocation#getType()->short:::A value indicating what kind of relocation should be       performed
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getOffset()->int:::Offset within the file of this record
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getName()->String::: symbol get name
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getValue()->int:::Value associated with the symbol
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getSectionNumber()->short:::Signed integer identifying the section, using a one-based index       into the Section Table
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getType()->short:::<P> The Type field of a symbol table entry contains two bytes,       each byte representing type information
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getStorageClass()->byte:::Enumerated value representing storage class
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getNumberOfAuxSymbols()->byte:::Number of auxiliary symbol table entries that follow this       record
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#isFunctionDefinition()->boolean:::Indicates whether this symbol is a function definition: storage       class EXTERNAL (2), a Type value indicating it is a function       (0x20), and a section number greater than zero
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getAuxFunctionDefinitionRecord()->AuxFunctionDefinitionRecord:::This should only be called if #isFunctionDefinition       returns true.
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#isBfOrEfSymbol()->boolean:::Indicates whether this symbol is a .bf or .ef symbol record and       is therefore followed by an sun.jvm.hotspot.debugger.win32.coff.AuxBfEfRecord.
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getAuxBfEfRecord()->AuxBfEfRecord:::This should only be called if #isBfOrEfSymbol returns       true.
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#isWeakExternal()->boolean:::Indicates whether this symbol is a weak external and is       therefore followed by an sun.jvm.hotspot.debugger.win32.coff.AuxWeakExternalRecord.
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getAuxWeakExternalRecord()->AuxWeakExternalRecord:::This should only be called if #isWeakExternal returns       true.
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#isFile()->boolean:::Indicates whether this symbol has storage class FILE and is       therefore followed by a sun.jvm.hotspot.debugger.win32.coff.AuxFileRecord.
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getAuxFileRecord()->AuxFileRecord:::This should only be called if #isFile returns       true.
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#isSectionDefinition()->boolean:::Indicates whether this symbol defines a section and is therefore       followed by an sun.jvm.hotspot.debugger.win32.coff.AuxSectionDefinitionsRecord.
sun.jvm.hotspot.debugger.win32.coff.COFFSymbol#getAuxSectionDefinitionsRecord()->AuxSectionDefinitionsRecord:::This should only be called if #isSectionDefinition returns       true.
sun.jvm.hotspot.debugger.win32.coff.DataDirectory#getRVA()->int:::The relative virtual address of the table
sun.jvm.hotspot.debugger.win32.coff.DataDirectory#getSize()->int:::The size in bytes of this directory.
sun.jvm.hotspot.debugger.win32.coff.DebugDirectory#getNumEntries()->int:::Number of entries in the directory
sun.jvm.hotspot.debugger.win32.coff.DebugDirectory#getEntry(int)->DebugDirectoryEntry:::Fetch the ith entry (0..getNumEntries() - 1)
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getCharacteristics()->int:::A reserved field intended to be used for flags, set to zero for       now.
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getTimeDateStamp()->int:::Time and date the debug data was created.
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getMajorVersion()->short:::Major version number of the debug data format.
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getMinorVersion()->short:::Minor version number of the debug data format.
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getType()->int:::Format of debugging information: this field enables support of       multiple debuggers
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getSizeOfData()->int:::Size of the debug data (not including the debug directory itself).
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getAddressOfRawData()->int:::Address of the debug data when loaded, relative to the image base.
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getPointerToRawData()->int:::File pointer to the debug data.
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getDebugVC50()->DebugVC50:::If this debug directory entry is of type       IMAGE_DEBUG_TYPE_CODEVIEW (see
sun.jvm.hotspot.debugger.win32.coff.DebugDirectoryEntry#getRawDataByte(int)->byte:::Placeholder
sun.jvm.hotspot.debugger.win32.coff.DebugVC50#getSubsectionDirectoryOffset()->int::: debug c50 get subsection directory offset
sun.jvm.hotspot.debugger.win32.coff.DebugVC50#getSubsectionDirectory()->DebugVC50SubsectionDirectory::: debug c50 get subsection directory
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegDesc#getFlags()->short:::Descriptor flags bit field
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegDesc#getOverlayNum()->short:::The logical overlay number.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegDesc#getGroup()->short:::The group index into the descriptor array
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegDesc#getFrame()->short::: This value has different meanings depending upon the values       of fAbs and fSel in the flags bit array and ovl:                <table>       <tr> <td> fAbs <td> fSel <td> ovl <td> Operation       <tr> <td> 0    <td> 0    <td> 0   <td> Frame is added to PSP + 0x10 if not a .com file       <tr> <td> 0    <td> 0    <td> 0   <td> Frame is added to PSP if it is a .com file       <tr> <td> 0    <td> 0    <td> != 0 <td> Frame is added to current overlay base       <tr> <td> 1    <td> 0    <td> x   <td> Frame is absolute address       <tr> <td> 0    <td> 1    <td> x   <td> Frame contains a selector       </table>       
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegDesc#getName()->short:::The byte index of the segment or group name in the sstSegName       table
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegDesc#getClassName()->short:::The byte index of the class name in the sstSegName table
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegDesc#getOffset()->int:::Byte offset of the logical segment within the specified physical       segment
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegDesc#getSize()->int:::Byte count of the logical segment or group.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegInfo#getSegment()->short:::Segment that this structure describes
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegInfo#getOffset()->int:::Offset in segment where the code starts
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SegInfo#getSegmentCodeSize()->int:::Count of the number of bytes of code in the segment
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModFileDesc#getNumCodeSegments()->int:::The number of code segments receiving code from this module.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModFileDesc#getLineNumberMap(int)->DebugVC50SrcModLineNumberMap:::Get the ith (0..getNumCodeSegments() - 1) line       number/address map for the given segment.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModFileDesc#getSegmentStartOffset(int)->int:::Get ith (0..getNumCodeSegments() - 1) start offset,       within a segment, of code contributed to that segment
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModFileDesc#getSegmentEndOffset(int)->int:::Get ith (0..getNumCodeSegments() - 1) end offset, within       a segment, of code contributed to that segment
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModFileDesc#getSourceFileName()->String:::Source file name
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModLineNumberMap#getSegment()->int:::Segment index for this table.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModLineNumberMap#getNumSourceLinePairs()->int:::Number of source line pairs.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModLineNumberMap#getCodeOffset(int)->int:::Get the ith (i..getNumSourceLinePairs() - 1) offset       within the code segment of the start of the line in the parallel       line number array.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SrcModLineNumberMap#getLineNumber(int)->int:::Get the ith (i..getNumSourceLinePairs() - 1) line       number.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSAlignSym#getSymbolIterator()->DebugVC50SymbolIterator::: debug c50 align sym get symbol iterator
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSFileIndex#getNumModules()->short:::Number of file name references per module.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSFileIndex#getNumReferences()->short:::Count of the total number of file name references.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSFileIndex#getModStart()->short[]:::Array of indices into the NameOffset table for each       module
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSFileIndex#getRefCount()->short[]:::Number of file name references per module.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSFileIndex#getNameRef()->int[]:::Array of offsets into the Names table
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSFileIndex#getNames()->String[]:::List of zero terminated file names
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSGlobalTypes#getNumTypes()->int:::Number of types in the table.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSGlobalTypes#getTypeOffset(int)->int:::Absolute file offset of the ith (0..getNumTypes() - 1)       type in the table.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSGlobalTypes#getTypeIterator()->DebugVC50TypeIterator:::Create a new type iterator pointing to the first type in the       subsection.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSModule#getOverlayNumber()->short::: debug c50 module get overlay number
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSModule#getLibrariesIndex()->short:::Index into sstLibraries subsection if this module was linked       from a library.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSModule#getNumCodeSegments()->short:::Count of the number of code segments this module contributes to
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSModule#getDebuggingStyle()->short:::Debugging style for this module
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSModule#getSegInfo(int)->DebugVC50SegInfo:::Fetch description of segment to which this module contributes       code (0..getNumCodeSegments - 1)
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSModule#getName()->String:::Name of the module
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSegMap#getNumSegDesc()->short:::Count of the number of segment descriptors in table.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSegMap#getNumLogicalSegDesc()->short:::The total number of logical segments
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSegMap#getSegDesc(int)->DebugVC50SegDesc:::Get the ith segment descriptor (0..getNumSegDesc() -       1).
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSegName#getSegName(int)->String:::Indexed by (0..DebugVC50SSSegMap.getNumSegDesc() - 1)
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSrcModule#getNumSourceFiles()->int:::The number of source files contributing code to segments.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSrcModule#getNumCodeSegments()->int:::The number of code segments receiving code from this module.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSrcModule#getSourceFileDesc(int)->DebugVC50SrcModFileDesc:::Get description of ith source file       (0..getNumSourceFiles() - 1) contributing code to this       module.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSrcModule#getSegmentStartOffset(int)->int:::Get ith (0..getNumCodeSegments() - 1) start offset,       within a segment, of code contributed to that segment
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSrcModule#getSegmentEndOffset(int)->int:::Get ith (0..getNumCodeSegments() - 1) end offset, within       a segment, of code contributed to that segment
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSrcModule#getSegment(int)->int:::Get ith (0..getNumCodeSegments() - 1) segment to which       this module contributes code
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSymbolBase#getSymHashIndex()->short:::Index of the symbol hash function
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSymbolBase#getAddrHashIndex()->short:::Index of the address hash function
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSymbolBase#getSymTabSize()->int:::Size in bytes of the symbol table
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSymbolBase#getSymHashSize()->int:::Size in bytes of the symbol hash table
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSymbolBase#getAddrHashSize()->int:::Size in bytes of the address hash table
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SSSymbolBase#getSymbolIterator()->DebugVC50SymbolIterator:::Retrieves an iterator over the symbols, which can be used to       parse these platform-dependent symbols into a platform-       independent format
sun.jvm.hotspot.debugger.win32.coff.DebugVC50Subsection#getSubsectionType()->short:::Returns type of this subsection; see sun.jvm.hotspot.debugger.win32.coff.DebugVC50SubsectionTypes.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50Subsection#getSubsectionModuleIndex()->short:::Returns module index associated with this subsection
sun.jvm.hotspot.debugger.win32.coff.DebugVC50Subsection#getSubsectionSize()->int:::Number of bytes in subsection.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SubsectionDirectory#getHeaderLength()->short::: debug c50 subsection directory get header length
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SubsectionDirectory#getEntryLength()->short::: debug c50 subsection directory get entry length
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SubsectionDirectory#getNumEntries()->int::: debug c50 subsection directory get num entries
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SubsectionDirectory#getSubsection(int)->DebugVC50Subsection:::Returns subsection at (zero-based) index i.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#done()->boolean:::Indicates whether this iterator has processed all of the       available symbols.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#next()->void:::Go to the next symbol
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLength()->short:::Length of record, in bytes, excluding the length field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getType()->int:::The type enumeration is defined in sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolTypes
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getOffset()->int:::For debugging: returns the file offset of the current symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getCompilerTargetProcessor()->byte:::Machine enumeration specifying target processor; see       DebugVC50SymbolEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getCompilerFlags()->int:::Compile flags; see DebugVC50SymbolEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getComplierVersion()->String:::Length-prefixed string specifying language processor version
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getRegisterSymbolType()->int:::Type of the symbol which is in the register
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getRegisterEnum()->short:::Enumerate of the registers in which the symbol is stored
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getRegisterSymbolName()->String:::Length-prefixed name of the symbol stored in the register.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getConstantType()->int:::Type of symbol or containing enum
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getConstantValueAsInt()->int:::Numeric leaf containing the value of the symbol as an int
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getConstantValueAsLong()->long:::Numeric leaf containing the value of the symbol as a long
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getConstantValueAsFloat()->float:::Numeric leaf containing the value of the symbol as a float
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getConstantValueAsDouble()->double:::Numeric leaf containing the value of the symbol as a double
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getConstantName()->String:::Length-prefixed name of the symbol
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getUDTType()->int:::Type of symbol
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getUDTName()->String:::Length-prefixed name of the user defined type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getSearchSymbolOffset()->int:::$$SYMBOL offset of the procedure or thunk record for this module       that has the lowest offset for the specified segment.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getSearchSegment()->short:::Segment (PE section) that this Start Search refers to.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getObjectCodeViewSignature()->int:::Signature used to determine whether changes in precompiled types       defined in this module require a recompilation of users of those       types
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getObjectName()->String:::Length prefixed name of the object file without any path       information prepended to the name.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getManyRegType()->int:::Type index of the symbol
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getManyRegCount()->byte:::Count of the register enumerates that follow.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getManyRegRegister(int)->byte:::Get the ith register (0..getManyRegCount() - 1)
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getManyRegName()->String:::Name of the symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getReturnFlags()->short:::Logical or of FUNCRET_VARARGS_LEFT_TO_RIGHT_MASK (push varargs       left to right if set) and FUNCRET_RETURNEE_STACK_CLEANUP_MASK       (returnee cleans up stack if true).
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getReturnStyle()->byte:::Function return style; see constants in sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getReturnRegisterCount()->byte:::Get count of registers containing return value; only valid for       FUNCRET_IN_REGISTERS return style.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getReturnRegister(int)->byte:::Get ith register (0..getReturnRegisterCount() - 1)       containing return value, high order first; only valid for       FUNCRET_IN_REGISTERS return style.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#advanceToEntryThisSymbol()->void:::Advance this iterator to the symbol (which actually describes       the this pointer) contained within the S_ENTRYTHIS       symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBPRelOffset()->int:::Signed offset relative to BP
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBPRelType()->int:::Type of the symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBPRelName()->String:::Length-prefixed name of the symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGDataType()->int:::Type index of the symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGDataOffset()->int:::Offset portion of the symbol address.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGDataSegment()->short:::Segment portion of the symbol address.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGDataName()->String:::Length-prefixed name of symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcParent()->DebugVC50SymbolIterator:::Creates a new symbol iterator pointing to the symbol opening the       enclosing lexical scope of this function (if any); returns null       if there is no enclosing scope.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcParentOffset()->int:::Gets the absolute file offset of the parent symbol, or 0 if       none
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcEnd()->DebugVC50SymbolIterator:::Creates a new symbol iterator pointing to the block end symbol       terminating the lexical scope, or NULL if there is no containing       lexical scope.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcEndOffset()->int:::Gets the absolute file offset of the end symbol
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcNext()->DebugVC50SymbolIterator:::Creates a new symbol iterator pointing to the next outermost       scope symbol in the segment (if any); returns null if this is       the last outermost scope for the current segment
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcNextOffset()->int:::Gets the absolute file offset of the next symbol, or 0 if none
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcLength()->int:::Length in bytes of this procedure.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcDebugStart()->int:::Offset in bytes from the start of the procedure to the point       where the stack frame has been set up
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcDebugEnd()->int:::Offset in bytes from the start of the procedure to the point       where the procedure is ready to return and has calculated its       return value, if any
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcType()->int:::Type of the procedure type record.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcOffset()->int:::Offset portion of the procedure address.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcSegment()->short:::Segment portion of the procedure address.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcFlags()->byte:::Value defined by bitwise or of the the PROCFLAGS enumeration in       sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLGProcName()->String:::Length-prefixed name of procedure.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkParent()->DebugVC50SymbolIterator:::Creates a new symbol iterator pointing to the symbol opening the       enclosing lexical scope of this thunk (if any); returns null if       there is no enclosing scope.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkParentOffset()->int:::Gets the absolute file offset of the parent symbol, or 0 if       none
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkEnd()->DebugVC50SymbolIterator:::Creates a new symbol iterator pointing to the block end symbol       terminating the lexical scope, or NULL if there is no containing       lexical scope.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkEndOffset()->int:::Gets the absolute file offset of the end symbol
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkNext()->DebugVC50SymbolIterator:::Creates a new symbol iterator pointing to the next outermost       scope symbol in the segment (if any); returns null if this is       the last outermost scope for the current segment
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkNextOffset()->int:::Gets the absolute file offset of the next symbol, or 0 if none
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkOffset()->int:::Offset portion of the thunk address.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkSegment()->short:::Segment portion of the procedure address.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkLength()->short:::Length in bytes of this thunk.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkType()->byte:::Ordinal specifying the type of thunk; see THUNK enumeration in       sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkName()->String:::Length-prefixed name of thunk.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkAdjustorThisDelta()->short:::Delta to be added to "this" pointer; only valid if thunk type is       "adjustor".
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkAdjustorTargetName()->String:::Length-prefixed name of target function; only valid if thunk type is       "adjustor".
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkVCallDisplacement()->short:::Displacement into the virtual table; only valid if thunk type is       "vcall".
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkPCodeOffset()->int:::Offset of p-code entry point; only valid if thunk type is       "pcode".
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getThunkPCodeSegment()->short:::Segment of p-code entry point; only valid if thunk type is       "pcode".
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBlockParent()->DebugVC50SymbolIterator:::Creates a new symbol iterator pointing to the symbol opening the       enclosing lexical scope of this scope (if any); returns null if       there is no enclosing scope.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBlockParentOffset()->int:::Gets the absolute file offset of the parent symbol, or 0 if       none
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBlockEnd()->DebugVC50SymbolIterator:::Creates a new symbol iterator pointing to the block end symbol       terminating this scope.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBlockEndOffset()->int:::Gets the absolute file offset of the end symbol
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBlockLength()->int:::Length in bytes of the scope of this block.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBlockOffset()->int:::Offset portion of the segmented procedure address.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBlockSegment()->short:::Segment portion of the segmented procedure address.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getBlockName()->String:::Length-prefixed name of the block.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLabelOffset()->int:::Offset portion of the segmented address of the start of the       block.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLabelSegment()->short:::Segment portion of the segmented address of the start of the       block.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLabelFlags()->byte:::Label flags
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLabelName()->String:::Length prefixed name of label.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getChangeOffset()->int:::Offset portion of start of the block where the change occurs.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getChangeSegment()->short:::Segment portion of start of the block where the change occurs.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getChangeModel()->short:::The execution model, enumerated in EXMODEL constants in sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getVTableRoot()->int:::The type index of the class at the root of the path.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getVTablePath()->int:::Type index of the record describing the base class path from the       root to the leaf class for the virtual function table.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getVTableOffset()->int:::Offset portion of start of the virtual function table.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getVTableSegment()->short:::Segment portion of the virtual function table.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getRegRelOffset()->int:::Signed offset relative to register.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getRegRelType()->int:::Type of the symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getRegRelRegister()->short:::Register enumerates on which the symbol is based
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getRegRelName()->String:::Length-prefixed name of the symbol.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLThreadType()->int:::Type index.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLThreadOffset()->int:::Offset into thread local storage.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLThreadSegment()->short:::Segment of thread local storage.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50SymbolIterator#getLThreadName()->String:::Length prefixed name.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#done()->boolean:::Indicates whether the iteration through the type table is       complete.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#next()->void:::Go to the next type in the type table
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getLength()->short:::Gets the length, in bytes, of the current type record.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getTypeIndex()->int:::Gets the type index of the current type
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNumTypes()->int:::Debugging support only
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#typeStringDone()->boolean:::Indicates whether iteration through the current type string is       complete.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#typeStringNext()->void:::Goes to the next element in the current type string
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#typeStringLeaf()->int:::Return the leaf index (see sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeLeafIndices)       for the current element of the current type string.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#typeStringOffset()->int:::For debugging: returns the file offset of the current type       string leaf.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getModifierIndex()->int:::Type index of the modified type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getModifierAttribute()->short:::Attributes specified in MODIFIER_ enums in sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getPointerType()->int:::Type index of object pointed to.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getPointerAttributes()->int:::Pointer attributes
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getPointerBasedOnTypeIndex()->int:::Only valid if the pointer type is BASED_ON_TYPE; retrieves index       of type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getPointerBasedOnTypeName()->String:::Only valid if the pointer type is BASED_ON_TYPE; retrieves name       of type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getPointerToMemberClass()->int:::Only valid if the pointer mode is either PTR_TO_DATA_MEMBER or       PTR_TO_METHOD; retrieves the type index of the containing       class.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getPointerToMemberFormat()->short:::Only valid if the pointer mode is either PTR_TO_DATA_MEMBER or       PTR_TO_METHOD; retrieves the data format of the pointer in       memory
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getArrayElementType()->int:::Type index of each array element.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getArrayIndexType()->int:::Type index of indexing variable.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getArrayLength()->int:::Length of the array in bytes.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getArrayName()->String:::Length-prefixed name of array.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getClassCount()->short:::Number of elements in the class or structure
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getClassProperty()->short:::Property bit field; see PROPERTY_ enumeration in sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getClassFieldList()->int:::Type index of the field list for this class.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getClassFieldListIterator()->DebugVC50TypeIterator:::Get new iterator pointing at the field list of this class.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getClassDerivationList()->int:::Type index of the derivation list
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getClassVShape()->int:::Type index of the virtual function table shape descriptor.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getClassSize()->int:::Numeric leaf specifying size in bytes of the structure.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getClassName()->String:::Length-prefixed name of this type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getUnionCount()->short:::Number of fields in the union.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getUnionProperty()->short:::Property bit field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getUnionFieldList()->int:::Type index of field list.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getUnionFieldListIterator()->DebugVC50TypeIterator:::Get new iterator pointing at the field list of this union.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getUnionSize()->int:::Numeric leaf specifying size in bytes of the union.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getUnionName()->String:::Length-prefixed name of union.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumCount()->short:::Number of enumerates.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumProperty()->short:::Property bit field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumType()->int:::Index of underlying type of enum.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumFieldList()->int:::Type index of field list.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumFieldListIterator()->DebugVC50TypeIterator:::Get new iterator pointing at the field list of this enum.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumName()->String:::Length-prefixed name of enum.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getProcedureReturnType()->int:::Type index of the value returned by the procedure.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getProcedureCallingConvention()->byte:::Calling convention of the procedure; see CALLCONV_ enumeration       in sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getProcedureNumberOfParameters()->short:::Number of parameters.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getProcedureArgumentList()->int:::Type index of argument list type record.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getProcedureArgumentListIterator()->DebugVC50TypeIterator:::Get new iterator pointing at the argument list of this procedure.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMFunctionReturnType()->int:::Type index of the value returned by the procedure.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMFunctionContainingClass()->int:::Type index of the containing class of the function.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMFunctionThis()->int:::Type index of the this parameter of the member function
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMFunctionCallingConvention()->byte:::Calling convention of the procedure; see CALLCONV_ enumeration       in sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMFunctionNumberOfParameters()->short:::Number of parameters
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMFunctionArgumentList()->int:::List of parameter specifiers
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMFunctionArgumentListIterator()->DebugVC50TypeIterator:::Get new iterator pointing at the argument list of this member function.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMFunctionThisAdjust()->int:::Logical this adjustor for the method
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVTShapeCount()->short:::Number of descriptors.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVTShapeDescriptor(int)->int:::Fetch the ith descriptor (0..getVTShapeCount() - 1)
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getBasicArrayType()->int:::Type of each element of the array.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getLabelAddressMode()->short:::Addressing mode of the label, described by LABEL_ADDR_MODE_ enum       in sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeEnums.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getDimArrayType()->int:::Underlying type of the array.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getDimArrayDimInfo()->int:::Index of the type record containing the dimension information.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getDimArrayName()->String:::Length-prefixed name of the array.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVFTPathCount()->int:::Count of number of bases in the path to the virtual function       table.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVFTPathBase(int)->int:::Type indices of the base classes in the path       (0..getVFTPathCount() - 1).
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getSkipIndex()->int:::In processing $$TYPES, the index counter is advanced to index       count, skipping all intermediate indices
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getArgListCount()->int:::Count of number of indices in list.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getArgListType(int)->int:::List of type indices (0..getArgListCount() - 1) for describing       the formal parameters to a function or method.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getDefaultArgType()->int:::Type index of resulting expression.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getDefaultArgExpression()->String:::Length-prefixed string of supplied default expression.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getDerivedCount()->int:::Number of types in the list.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getDerivedType(int)->int:::Fetch ith derived type (0..getDerivedCount() - 1).
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getBitfieldFieldType()->int:::Type index of the field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getBitfieldLength()->byte:::The length in bits of the object.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getBitfieldPosition()->byte:::Starting position (from bit 0) of the object in the word.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMListAttribute()->short:::Attribute of the member function; see sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeEnums and sun.jvm.hotspot.debugger.win32.coff.DebugVC50MemberAttributes.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMListLength()->int:::Number of types corresponding to this overloaded method
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMListType(int)->int:::Type index of the procedure record for the ith occurrence       of the function (0..getMListLength() - 1).
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#isMListIntroducingVirtual()->boolean:::Convenience routine indicating whether this member function is       introducing virtual.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMListVtabOffset()->int:::Present only when property attribute is introducing virtual       (optional)
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getRefSym()->DebugVC50SymbolIterator:::Create a new SymbolIterator pointing at the copy of the symbol       this record contains.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getBClassAttribute()->short:::Member attribute bit field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getBClassType()->int:::Index to type record of the class
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getBClassOffset()->int:::Offset of subobject that represents the base class within the       structure.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVBClassAttribute()->short:::Member attribute bit field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVBClassBaseClassType()->int:::Index to type record of the direct or indirect virtual base       class
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVBClassVirtualBaseClassType()->int:::Type index of the virtual base pointer for this base.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVBClassVBPOff()->int:::Numeric leaf specifying the offset of the virtual base pointer       from the address point of the class for this virtual base.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVBClassVBOff()->int:::Numeric leaf specifying the index into the virtual base       displacement table of the entry that contains the displacement       of the virtual base
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getIVBClassAttribute()->short:::Member attribute bit field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getIVBClassBType()->int:::Index to type record of the direct or indirect virtual base       class
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getIVBClassVBPType()->int:::Type index of the virtual base pointer for this base.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getIVBClassVBPOff()->int:::Numeric leaf specifying the offset of the virtual base pointer       from the address point of the class for this virtual base.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getIVBClassVBOff()->int:::Numeric leaf specifying the index into the virtual base       displacement table of the entry that contains the displacement       of the virtual base
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumerateAttribute()->short:::Member attribute bit field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumerateValue()->long:::Numeric leaf specifying the value of enumerate.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getEnumerateName()->String:::Length-prefixed name of the member field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getFriendFcnType()->int:::Index to type record of the friend function.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getFriendFcnName()->String:::Length prefixed name of friend function.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getIndexValue()->int:::Type index
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getIndexIterator()->DebugVC50TypeIterator:::Create a new type iterator starting at the above index.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMemberAttribute()->short:::Member attribute bit field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMemberType()->int:::Index to type record for field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMemberOffset()->int:::Numeric leaf specifying the offset of field in the structure.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMemberName()->String:::Length-prefixed name of the member field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getStaticAttribute()->short:::Member attribute bit field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getStaticType()->int:::Index to type record for field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getStaticName()->String:::Length-prefixed name of the member field.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMethodCount()->short:::Number of occurrences of function within the class
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMethodList()->int:::Type index of method list.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMethodName()->String:::Length-prefixed name of method.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNestedType()->int:::Type index of nested type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNestedName()->String:::Length-prefixed name of type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVFuncTabType()->int:::Index to the pointer record describing the pointer
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getFriendClsType()->int:::Index to type record of the friend class
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getOneMethodAttribute()->short:::Method attribute; see sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeEnums and       sun.jvm.hotspot.debugger.win32.coff.DebugVC50MemberAttributes.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getOneMethodType()->int:::Type index of method.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#isOneMethodIntroducingVirtual()->boolean:::Convenience routine indicating whether this method is       introducing virtual.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getOneMethodVBaseOff()->int:::Offset in virtual function table if introducing virtual method
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getOneMethodName()->String:::Length prefixed name of method.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVFuncOffType()->int:::Type index of virtual function table pointer.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getVFuncOffOffset()->int:::Offset of virtual function table pointer relative to address       point of class.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNestedExAttribute()->short:::Nested type attribute (protection fields are valid).
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNestedExType()->int:::Type index of nested type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNestedExName()->String:::Length-prefixed name of type.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMemberModifyAttribute()->short:::New protection attributes.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMemberModifyType()->int:::Type index of base class that introduced the member.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getMemberModifyName()->String:::Length-prefixed name of member.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNumericTypeAt(int)->short:::Fetch the two-byte type (or data, for short integer numeric       leaves) of the numeric leaf at the given offset, in bytes, from       the start of the current leaf.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNumericLengthAt(int)->int:::The size in bytes of the numeric leaf at the given offset, in       bytes, from the start of the current leaf.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNumericIntAt(int)->int:::Fetch the value of the integer numeric leaf at the given offset,       in bytes, from the start of the current leaf.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNumericLongAt(int)->long:::Fetch the value of the long or integer numeric leaf at the given       offset, in bytes, from the start of the current leaf.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNumericFloatAt(int)->float:::Fetch the value of the single-precision floating-point numeric       leaf at the given offset, in bytes, from the start of the       current leaf.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNumericDoubleAt(int)->double:::Fetch the value of the double-precision floating-point numeric       leaf at the given offset, in bytes, from the start of the       current leaf.
sun.jvm.hotspot.debugger.win32.coff.DebugVC50TypeIterator#getNumericDataAt(int)->byte[]:::Fetch the raw bytes, including LF_ prefix (if any), of the       numeric leaf at the given offset, in bytes, from the start of       the current leaf.
sun.jvm.hotspot.debugger.win32.coff.DumpExports#main(String[])->void::: dump exports main
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getExportFlags()->int:::A reserved field, set to zero for now.
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getTimeDateStamp()->int:::Time and date the export data was created.
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getMajorVersion()->short:::Major version number
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getMinorVersion()->short:::Minor version number.
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getNameRVA()->int:::Address of the ASCII string containing the name of the       DLL
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getDLLName()->String:::Convenience routine which returns the name of the DLL containing       this export directory.
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getOrdinalBase()->int:::Starting ordinal number for exports in this image
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getNumberOfAddressTableEntries()->int:::Number of entries in the Export Address Table.
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getNumberOfNamePointers()->int:::Number of entries in the Name Pointer Table (also the number of       entries in the Ordinal Table).
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getExportAddressTableRVA()->int:::Address of the Export Address Table, relative to the image       base.
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getNamePointerTableRVA()->int:::Address of the Export Name Pointer Table, relative to the image       base
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getOrdinalTableRVA()->int:::Address of the Ordinal Table, relative to the image base.
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getExportName(int)->String:::Returns the ith exported symbol (from 0..#getNumberOfNamePointers - 1)
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getExportOrdinal(int)->short:::Returns the ith entry (0..#getNumberOfNamePointers in the Export Ordinal Table
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#isExportAddressForwarder(short)->boolean:::Indicates whether the specified export address is really a       forwarder, in which case the value is not an address but a       string.
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getExportAddressForwarder(short)->String:::Get the forwarder name for the given ordinal
sun.jvm.hotspot.debugger.win32.coff.ExportDirectoryTable#getExportAddress(short)->int:::<P> Takes in an ordinal from the Export Ordinal Table (see       #getExportOrdinal)
sun.jvm.hotspot.debugger.win32.coff.OptionalHeader#getMagicNumber()->short:::Returns the magic number of the Optional Header (#MAGIC_PE32, #MAGIC_PE32_PLUS, or #MAGIC_ROM_IMAGE)
sun.jvm.hotspot.debugger.win32.coff.OptionalHeader#getStandardFields()->OptionalHeaderStandardFields:::These are defined for all implementations of COFF, including       UNIX.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeader#getWindowsSpecificFields()->OptionalHeaderWindowsSpecificFields:::These include additional fields to support specific features of       Windows (for example, subsystem).
sun.jvm.hotspot.debugger.win32.coff.OptionalHeader#getDataDirectories()->OptionalHeaderDataDirectories:::Gets the data directories portion of the optional header.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getExportTable()->DataDirectory:::Export Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getExportDirectoryTable()->ExportDirectoryTable:::Returns the Export Table, or null if none was present.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getImportTable()->DataDirectory:::Import Table address and size
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getResourceTable()->DataDirectory:::Resource Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getExceptionTable()->DataDirectory:::Exception Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getCertificateTable()->DataDirectory:::Attribute Certificate Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getBaseRelocationTable()->DataDirectory:::Base Relocation Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getDebug()->DataDirectory:::Debug data starting address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getDebugDirectory()->DebugDirectory:::Returns the Debug Directory, or null if none was present.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getArchitecture()->DataDirectory:::Architecture-specific data address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getGlobalPtr()->DataDirectory:::Relative virtual address of the value to be stored in the global       pointer register
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getTLSTable()->DataDirectory:::Thread Local Storage (TLS) Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getLoadConfigTable()->DataDirectory:::Load Configuration Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getBoundImportTable()->DataDirectory:::Bound Import Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getImportAddressTable()->DataDirectory:::Import Address Table address and size.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getDelayImportDescriptor()->DataDirectory:::Address and size of the Delay Import Descriptor.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderDataDirectories#getCOMPlusRuntimeHeader()->DataDirectory:::COM+ Runtime Header address and size
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderStandardFields#getMajorLinkerVersion()->byte::: optional header standard fields get major linker version
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderStandardFields#getMinorLinkerVersion()->byte::: optional header standard fields get minor linker version
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderStandardFields#getSizeOfCode()->int:::Size of the code (text) section, or the sum of all code sections       if there are multiple sections.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderStandardFields#getSizeOfInitializedData()->int:::Size of the initialized data section, or the sum of all such       sections if there are multiple data sections.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderStandardFields#getSizeOfUninitializedData()->int:::Size of the uninitialized data section (BSS), or the sum of all       such sections if there are multiple BSS sections.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderStandardFields#getAddressOfEntryPoint()->int:::Address of entry point, relative to image base, when executable       file is loaded into memory
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderStandardFields#getBaseOfCode()->int:::Address, relative to image base, of beginning of code section,       when loaded into memory.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderStandardFields#getBaseOfData()->int:::Onle present in PE32 files; absent in PE32+ files
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getImageBase()->long:::Preferred address of first byte of image when loaded into       memory; must be a multiple of 64K
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getSectionAlignment()->int:::Alignment (in bytes) of sections when loaded into memory
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getFileAlignment()->int:::Alignment factor (in bytes) used to align the raw data of       sections in the image file
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getMajorOperatingSystemVersion()->short:::Major version number of required OS.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getMinorOperatingSystemVersion()->short:::Minor version number of required OS.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getMajorImageVersion()->short:::Major version number of image.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getMinorImageVersion()->short:::Minor version number of image.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getMajorSubsystemVersion()->short:::Major version number of subsystem.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getMinorSubsystemVersion()->short:::Minor version number of subsystem.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getSizeOfImage()->int:::Size, in bytes, of image, including all headers; must be a       multiple of Section Alignment.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getSizeOfHeaders()->int:::Combined size of MS-DOS stub, PE Header, and section headers       rounded up to a multiple of FileAlignment.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getCheckSum()->int:::Image file checksum
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getSubsystem()->short:::Subsystem required to run this image; returns one of the       constants defined in sun.jvm.hotspot.debugger.win32.coff.WindowsNTSubsystem.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getDLLCharacteristics()->short:::Indicates characteristics of a DLL; see sun.jvm.hotspot.debugger.win32.coff.DLLCharacteristics.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getSizeOfStackReserve()->long:::Size of stack to reserve
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getSizeOfStackCommit()->long:::Size of stack to commit.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getSizeOfHeapReserve()->long:::Size of local heap space to reserve
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getSizeOfHeapCommit()->long:::Size of local heap space to commit.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getLoaderFlags()->int:::Obsolete.
sun.jvm.hotspot.debugger.win32.coff.OptionalHeaderWindowsSpecificFields#getNumberOfRvaAndSizes()->int:::Number of data-dictionary entries in the remainder of the       Optional Header
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getName()->String::: section header get name
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getSize()->int:::Total size of the section when loaded into memory
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getVirtualAddress()->int:::For executable images this is the address of the first byte of       the section, when loaded into memory, relative to the image       base
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getSizeOfRawData()->int:::Size of the section (object file) or size of the initialized       data on disk (image files)
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getPointerToRawData()->int:::File pointer to section's first page within the COFF file
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getPointerToRelocations()->int:::File pointer to beginning of relocation entries for the section
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getPointerToLineNumbers()->int:::File pointer to beginning of line-number entries for the       section
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getNumberOfRelocations()->short:::Number of relocation entries for the section
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getNumberOfLineNumbers()->short:::Number of line-number entries for the section.
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getSectionFlags()->int:::Flags describing section's characteristics; see sun.jvm.hotspot.debugger.win32.coff.SectionFlags.
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#hasSectionFlag(int)->boolean:::Returns true if the appropriate flag (from sun.jvm.hotspot.debugger.win32.coff.SectionFlags) is set.
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getCOFFRelocation(int)->COFFRelocation:::This is only present for object files
sun.jvm.hotspot.debugger.win32.coff.SectionHeader#getCOFFLineNumber(int)->COFFLineNumber:::Retrieves the COFF line number at the given index; valid indices       are numbered 0...getNumberOfLineNumbers() - 1.
sun.jvm.hotspot.debugger.win32.coff.TestDebugInfo#main(String[])->void::: test debug info main
sun.jvm.hotspot.debugger.win32.coff.TestParser#main(String[])->void::: test parser main
