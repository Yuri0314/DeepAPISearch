Ser#writeExternal(ObjectOutput):::Implements the Externalizable interface to write the object.
Ser#readExternal(ObjectInput):::Implements the Externalizable interface to read the object.
Ser#writeOffset(ZoneOffset, DataOutput):::Writes the state to the stream.
Ser#readOffset(DataInput):::Reads the state from the stream.
Ser#writeEpochSec(long, DataOutput):::Writes the state to the stream.
Ser#readEpochSec(DataInput):::Reads the state from the stream.
ZoneOffsetTransition#of(LocalDateTime, ZoneOffset, ZoneOffset):::Obtains an instance defining a transition between two offsets
ZoneOffsetTransition#writeExternal(DataOutput):::Writes the state to the stream.
ZoneOffsetTransition#readExternal(DataInput):::Reads the state from the stream.
ZoneOffsetTransition#getInstant():::Gets the transition instant
ZoneOffsetTransition#toEpochSecond():::Gets the transition instant as an epoch second.
ZoneOffsetTransition#getDateTimeBefore():::Gets the local transition date-time, as would be expressed with the 'before' offset
ZoneOffsetTransition#getDateTimeAfter():::Gets the local transition date-time, as would be expressed with the 'after' offset
ZoneOffsetTransition#getOffsetBefore():::Gets the offset before the transition
ZoneOffsetTransition#getOffsetAfter():::Gets the offset after the transition
ZoneOffsetTransition#getDuration():::Gets the duration of the transition
ZoneOffsetTransition#isGap():::Does this transition represent a gap in the local time-line
ZoneOffsetTransition#isOverlap():::Does this transition represent an overlap in the local time-line
ZoneOffsetTransition#isValidOffset(ZoneOffset):::Checks if the specified offset is valid during this transition
ZoneOffsetTransition#getValidOffsets():::Gets the valid offsets during this transition
ZoneOffsetTransition#compareTo(ZoneOffsetTransition):::Compares this transition to another based on the transition instant
ZoneOffsetTransition#equals(Object):::Checks if this object equals another
ZoneOffsetTransition#hashCode():::Returns a suitable hash code.
ZoneOffsetTransition#toString():::Returns a string describing this object.
ZoneOffsetTransitionRule#of(Month, int, DayOfWeek, LocalTime, boolean, TimeDefinition, ZoneOffset, ZoneOffset, ZoneOffset):::Obtains an instance defining the yearly rule to create transitions between two offsets
ZoneOffsetTransitionRule#writeExternal(DataOutput):::Writes the state to the stream.
ZoneOffsetTransitionRule#readExternal(DataInput):::Reads the state from the stream.
ZoneOffsetTransitionRule#getMonth():::Gets the month of the transition
ZoneOffsetTransitionRule#getDayOfMonthIndicator():::Gets the indicator of the day-of-month of the transition
ZoneOffsetTransitionRule#getDayOfWeek():::Gets the day-of-week of the transition
ZoneOffsetTransitionRule#getLocalTime():::Gets the local time of day of the transition which must be checked with #isMidnightEndOfDay()
ZoneOffsetTransitionRule#isMidnightEndOfDay():::Is the transition local time midnight at the end of day
ZoneOffsetTransitionRule#getTimeDefinition():::Gets the time definition, specifying how to convert the time to an instant
ZoneOffsetTransitionRule#getStandardOffset():::Gets the standard offset in force at the transition.
ZoneOffsetTransitionRule#getOffsetBefore():::Gets the offset before the transition.
ZoneOffsetTransitionRule#getOffsetAfter():::Gets the offset after the transition.
ZoneOffsetTransitionRule#createTransition(int):::Creates a transition instance for the specified year
ZoneOffsetTransitionRule#equals(Object):::Checks if this object equals another
ZoneOffsetTransitionRule#hashCode():::Returns a suitable hash code.
ZoneOffsetTransitionRule#toString():::Returns a string describing this object.
ZoneRules#of(ZoneOffset, ZoneOffset, List, List, List):::Obtains an instance of a ZoneRules.
ZoneRules#of(ZoneOffset):::Obtains an instance of ZoneRules that has fixed zone rules.
ZoneRules#writeExternal(DataOutput):::Writes the state to the stream.
ZoneRules#readExternal(DataInput):::Reads the state from the stream.
ZoneRules#isFixedOffset():::Checks of the zone rules are fixed, such that the offset never varies.
ZoneRules#getOffset(Instant):::Gets the offset applicable at the specified instant in these rules
ZoneRules#getOffset(LocalDateTime):::Gets a suitable offset for the specified local date-time in these rules
ZoneRules#getValidOffsets(LocalDateTime):::Gets the offset applicable at the specified local date-time in these rules
ZoneRules#getTransition(LocalDateTime):::Gets the offset transition applicable at the specified local date-time in these rules
ZoneRules#getStandardOffset(Instant):::Gets the standard offset for the specified instant in this zone
ZoneRules#getDaylightSavings(Instant):::Gets the amount of daylight savings in use for the specified instant in this zone
ZoneRules#isDaylightSavings(Instant):::Checks if the specified instant is in daylight savings
ZoneRules#isValidOffset(LocalDateTime, ZoneOffset):::Checks if the offset date-time is valid for these rules
ZoneRules#nextTransition(Instant):::Gets the next transition after the specified instant
ZoneRules#previousTransition(Instant):::Gets the previous transition before the specified instant
ZoneRules#getTransitions():::Gets the complete list of fully defined transitions
ZoneRules#getTransitionRules():::Gets the list of transition rules for years beyond those defined in the transition list
ZoneRules#equals(Object):::Checks if this set of rules equals another
ZoneRules#hashCode():::Returns a suitable hash code given the definition of #equals.
ZoneRules#toString():::Returns a string describing this object.
ZoneRulesProvider#getAvailableZoneIds():::Gets the set of available zone IDs
ZoneRulesProvider#getRules(String, boolean):::Gets the rules for the zone ID
ZoneRulesProvider#getVersions(String):::Gets the history of rules for the zone ID
ZoneRulesProvider#registerProvider(ZoneRulesProvider):::Registers a zone rules provider
ZoneRulesProvider#refresh():::Refreshes the rules from the underlying data provider
ZoneRulesProvider#provideZoneIds():::SPI method to get the available zone IDs
ZoneRulesProvider#provideRules(String, boolean):::SPI method to get the rules for the zone ID
ZoneRulesProvider#provideVersions(String):::SPI method to get the history of rules for the zone ID
ZoneRulesProvider#provideRefresh():::SPI method to refresh the rules from the underlying data provider
