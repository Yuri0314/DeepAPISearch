AbstractDCmd#getFlightRecorder()::: abstract cmd get flight recorder:::return->FlightRecorder->getFlightRecorder
AbstractDCmd#getResult()::: abstract cmd get result:::return->result->toString
AbstractDCmd#getPid()::: abstract cmd get pid:::return->JVM->getJVM->getPid
AbstractDCmd#resolvePath(Recording, String)::: abstract cmd resolve path:::if->return->Paths->get->makeGenerated->path->Paths->get->if->Files->isDirectory->return->makeGenerated->return->path->toAbsolutePath->normalize->new->SafePath
AbstractDCmd#makeGenerated(Recording, Path)::: abstract cmd make generated:::return->directory->toAbsolutePath->Utils->makeFilename->resolve->normalize->new->SafePath
AbstractDCmd#findRecording(String)::: abstract cmd find recording:::try->return->Integer->parseInt->findRecordingById->catch->return->findRecordingByName->finally
AbstractDCmd#reportOperationComplete(String, String, SafePath)::: abstract cmd report operation complete:::print->print->if->print->if->print->try->print->bytes->SecuritySupport->getFileSize->printBytes->catch->finally->println->println->printPath->else->println
AbstractDCmd#getRecordings()::: abstract cmd get recordings:::list->getFlightRecorder->getRecordings->new->ArrayList<>->Collections->Comparator->Recording->getId->comparing->sort->return
AbstractDCmd#quoteIfNeeded(String)::: abstract cmd quote if needed:::if->text->contains->return->else->return
AbstractDCmd#println()::: abstract cmd println:::log->println
AbstractDCmd#print(String)::: abstract cmd print:::log->print
AbstractDCmd#print(String, Object...)::: abstract cmd print:::log->printf
AbstractDCmd#println(String, Object...)::: abstract cmd println:::print->println
AbstractDCmd#printBytes(long)::: abstract cmd print bytes:::Utils->formatBytes->print
AbstractDCmd#printTimespan(Duration, String)::: abstract cmd print timespan:::Utils->formatTimespan->print
AbstractDCmd#printPath(SafePath)::: abstract cmd print path:::if->print->return->try->SecuritySupport->getAbsolutePath->toPath->printPath->catch->path->toPath->printPath->finally
AbstractDCmd#printPath(Path)::: abstract cmd print path:::try->path->toAbsolutePath->toString->println->catch->path->toString->println->finally
AbstractDCmd#findRecordingById(int)::: abstract cmd find recording by id:::foreach->getFlightRecorder->getRecordings->if->r->getId->return->throw->new->DCmdException
AbstractDCmd#findRecordingByName(String)::: abstract cmd find recording by name:::foreach->getFlightRecorder->getRecordings->if->name->recording->getName->equals->return->throw->new->DCmdException
DCmdCheck#execute(String, Boolean):::Execute JFR.check:::executeInternal->return->getResult
DCmdCheck#executeInternal(String, Boolean)::: cmd check execute internal:::if->Logger->shouldLog->Logger->log->if->if->findRecording->printRecording->return->recordings->getRecordings->if->recordings->isEmpty->println->println->getPid->println->return->first->foreach->if->println->if->equals->println->printRecording
DCmdCheck#printRecording(Recording, boolean)::: cmd check print recording:::printGeneral->if->println->printSetttings
DCmdCheck#printGeneral(Recording)::: cmd check print general:::recording->getId->recording->getName->print->duration->recording->getDuration->if->print->printTimespan->maxSize->recording->getMaxSize->if->print->Utils->formatBytesCompact->print->maxAge->recording->getMaxAge->if->print->printTimespan->recording->getState->toString->toLowerCase->print->println
DCmdCheck#printSetttings(Recording)::: cmd check print setttings:::settings->recording->getSettings->foreach->getFlightRecorder->getEventTypes->sortByEventPath->sj->new->StringJoiner->sj->setEmptyValue->foreach->eventType->getSettingDescriptors->settingsPath->eventType->getName->s->getName->if->settings->containsKey->sj->s->getName->settings->get->add->settingsText->sj->toString->if->settingsText->isEmpty->eventType->getLabel->eventType->getName->print->println->println
DCmdCheck#sortByEventPath(Collection)::: cmd check sort by event path:::sorted->new->ArrayList<>->sorted->addAll->Collections->new->Comparator<EventType>->sort->return
DCmdConfigure#execute(String, String, Integer, Long, Long, Long, Long, Long, Boolean):::Execute JFR.configure.:::if->Logger->shouldLog->Logger->log->updated->if->try->s->new->SafePath->Repository->getRepository->setBasePath->Logger->log->catch->throw->e->getMessage->new->DCmdException->finally->printRepositoryPath->if->Options->new->SafePath->setDumpPath->Logger->log->printDumpPath->if->Options->setStackDepth->Logger->log->printStackDepth->if->Options->setGlobalBufferCount->Logger->log->printGlobalBufferCount->if->Options->setGlobalBufferSize->Logger->log->printGlobalBufferSize->if->Options->setThreadBufferSize->Logger->log->printThreadBufferSize->if->Options->setMemorySize->Logger->log->printMemorySize->if->Options->setMaxChunkSize->Logger->log->printMaxChunkSize->if->Options->setSampleThreads->Logger->log->printSampleThreads->if->println->println->printRepositoryPath->printStackDepth->printGlobalBufferCount->printGlobalBufferSize->printThreadBufferSize->printMemorySize->printMaxChunkSize->printSampleThreads->return->getResult
DCmdConfigure#printRepositoryPath()::: cmd configure print repository path:::print->Repository->getRepository->getRepositoryPath->printPath->println
DCmdConfigure#printDumpPath()::: cmd configure print dump path:::print->Options->getDumpPath->printPath->println
DCmdConfigure#printSampleThreads()::: cmd configure print sample threads:::Options->getSampleThreads->println
DCmdConfigure#printStackDepth()::: cmd configure print stack depth:::Options->getStackDepth->println
DCmdConfigure#printGlobalBufferCount()::: cmd configure print global buffer count:::Options->getGlobalBufferCount->println
DCmdConfigure#printGlobalBufferSize()::: cmd configure print global buffer size:::print->Options->getGlobalBufferSize->printBytes->println
DCmdConfigure#printThreadBufferSize()::: cmd configure print thread buffer size:::print->Options->getThreadBufferSize->printBytes->println
DCmdConfigure#printMemorySize()::: cmd configure print memory size:::print->Options->getMemorySize->printBytes->println
DCmdConfigure#printMaxChunkSize()::: cmd configure print max chunk size:::print->Options->getMaxChunkSize->printBytes->println
DCmdDump#execute(String, String, Long, Long, String, String, Boolean):::Execute JFR.dump.:::if->Logger->shouldLog->Logger->log->if->FlightRecorder->getFlightRecorder->getRecordings->isEmpty->throw->new->DCmdException->if->if->throw->new->DCmdException->if->throw->new->DCmdException->if->if->if->throw->new->DCmdException->if->beginTime->parseTime->endTime->parseTime->if->if->endTime->isBefore->throw->new->DCmdException->duration->if->Duration->ofNanos->Instant->now->minus->recording->if->findRecording->recorder->PrivateAccess->getInstance->getPlatformRecorder->try->synchronized->dump->catch->throw->e->getMessage->new->DCmdException->finally->return->getResult
DCmdDump#dump(PlatformRecorder, Recording, String, String, Long, Boolean, Instant, Instant)::: cmd dump dump:::try->r->newSnapShot->r->filter->if->r->getChunks->isEmpty->throw->new->DCmdException->wup->if->pRecording->PrivateAccess->getInstance->getPlatformRecording->pRecording->getDestination->if->safe->resolvePath->safe->toPath->new->WriteableUserPath->r->dumpStopped->wup->getRealPathText->new->SafePath->reportOperationComplete->catch->finally
DCmdDump#parseTime(String, String)::: cmd dump parse time:::if->return->try->return->Instant->parse->catch->finally->try->ldt->LocalDateTime->parse->return->ZonedDateTime->ZoneId->systemDefault->of->toInstant->catch->finally->try->lt->LocalTime->parse->ld->LocalDate->now->instant->ZonedDateTime->ZoneId->systemDefault->of->toInstant->now->Instant->now->if->instant->isAfter->instant->now->plusSeconds->isBefore->ld->minusDays->return->ZonedDateTime->ZoneId->systemDefault->of->toInstant->catch->finally->if->time->startsWith->try->durationNanos->Utils->time->substring->parseTimespan->duration->Duration->ofNanos->return->Instant->now->minus->catch->finally->throw->new->DCmdException
DCmdDump#newSnapShot(PlatformRecorder, Recording, Boolean)::: cmd dump new snap shot:::if->snapshot->recorder->newTemporaryRecording->recorder->fillWithRecordedData->return->pr->PrivateAccess->getInstance->getPlatformRecording->return->pr->newSnapshotClone
DCmdException#format(String, Object...)::: cmd exception format:::try->formatter->new->Formatter->return->formatter->format->toString->catch->finally
DCmdStart#execute(String, String[], Long, Long, Boolean, String, Long, Long, Boolean, Boolean):::Execute JFR.start.:::if->Logger->shouldLog->Logger->Arrays->asList->log->if->try->Integer->parseInt->throw->new->DCmdException->catch->finally->if->equals->throw->new->DCmdException->if->length->throw->new->DCmdException->s->new->HashMap<>->foreach->try->s->JFC->createKnown->getSettings->putAll->catch->throw->new->DCmdException->throw->new->DCmdException->finally->OldObjectSample->updateSettingPathToGcRoots->if->if->throw->new->DCmdException->if->if->throw->new->DCmdException->if->FlightRecorder->isInitialized->initializeWithForcedInstrumentation->recording->new->Recording->if->recording->setName->if->recording->disk->booleanValue->setToDisk->recording->setSettings->safePath->if->try->if->p->Paths->get->if->Files->isDirectory->equals->PrivateAccess->getInstance->getPlatformRecording->new->SafePath->setDumpOnExitDirectory->else->resolvePath->recording->safePath->toPath->setDestination->catch->recording->close->throw->e->getMessage->new->DCmdException->finally->if->recording->Duration->ofNanos->setMaxAge->if->recording->setMaxSize->if->recording->Duration->ofNanos->setDuration->if->recording->setDumpOnExit->if->dDelay->Duration->ofNanos->recording->scheduleStart->recording->getId->print->printTimespan->print->else->recording->start->recording->getId->print->if->recording->isToDisk->print->recording->setMaxSize->if->println->println->printPath->else->println->println->cmd->fileOption->recordingspecifier->recording->getId->if->quoteIfNeeded->getPid->print->println->return->getResult
DCmdStart#initializeWithForcedInstrumentation(Map)::: cmd start initialize with forced instrumentation:::if->hasJDKEvents->return->jvm->JVM->getJVM->try->jvm->setForceInstrumentation->FlightRecorder->getFlightRecorder->catch->finally->jvm->setForceInstrumentation
DCmdStart#hasJDKEvents(Map)::: cmd start has events:::eventNames->new->StringArr->foreach->if->settings->get->equals->return->return
DCmdStop#execute(String, String):::Execute JFR.stop  Requires that either name or id is set.:::if->Logger->shouldLog->Logger->log->try->safePath->recording->findRecording->if->try->resolvePath->recording->Paths->get->setDestination->catch->throw->recording->getName->e->getMessage->new->DCmdException->finally->recording->stop->recording->getName->reportOperationComplete->recording->close->return->getResult->catch->if->throw->e->getMessage->new->DCmdException->throw->e->getMessage->new->DCmdException->finally
