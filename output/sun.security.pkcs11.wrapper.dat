CK_AES_CTR_PARAMS#toString()::: k_ s_ r_ s to string:::sb->new->StringBuilder->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->return->sb->toString
CK_ATTRIBUTE#getBigInteger()::: k_ e get big integer:::if->throw->new->RuntimeException->return->new->BigInteger
CK_ATTRIBUTE#getBoolean()::: k_ e get boolean:::if->throw->pValue->getClass->getName->new->RuntimeException->return->booleanValue
CK_ATTRIBUTE#getCharArray()::: k_ e get char array:::if->throw->new->RuntimeException->return
CK_ATTRIBUTE#getByteArray()::: k_ e get byte array:::if->throw->new->RuntimeException->return
CK_ATTRIBUTE#getLong()::: k_ e get long:::if->throw->pValue->getClass->getName->new->RuntimeException->return->longValue
CK_ATTRIBUTE#toString():::Returns the string representation of CK_ATTRIBUTE.:::prefix->Functions->getAttributeName->if->return->Functions->getLong->getObjectClassName->else->if->return->Functions->getLong->getKeyName->else->s->if->new->String->else->if->Functions->toHexString->else->String->valueOf->return
CK_CCM_PARAMS#toString()::: k_ m_ s to string:::sb->new->StringBuilder->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->return->sb->toString
CK_CREATEMUTEX#CK_CREATEMUTEX():::Method CK_CREATEMUTEX:::
CK_DATE#clone():::Create a (deep) clone of this object.:::copy->try->super->clone->catch->throw->new->RuntimeException->initCause->finally->clone->clone->clone->return
CK_DATE#toString():::Returns the string representation of CK_DATE.:::sb->new->StringBuilder->sb->new->String->append->sb->append->sb->new->String->append->sb->append->sb->new->String->append->sb->append->return->sb->toString
CK_DESTROYMUTEX#CK_DESTROYMUTEX(Object):::Method CK_DESTROYMUTEX:::
CK_ECDH1_DERIVE_PARAMS#toString():::Returns the string representation of CK_PKCS5_PBKD2_PARAMS.:::sb->new->StringBuilder->sb->append->sb->append->sb->Functions->toFullHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->return->sb->toString
CK_ECDH2_DERIVE_PARAMS#toString():::Returns the string representation of CK_PKCS5_PBKD2_PARAMS.:::sb->new->StringBuilder->sb->append->sb->append->sb->Functions->toFullHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->return->sb->toString
CK_GCM_PARAMS#toString()::: k_ m_ s to string:::sb->new->StringBuilder->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->return->sb->toString
CK_INFO#toString():::Returns the string representation of CK_INFO.:::sb->new->StringBuilder->sb->append->sb->append->sb->cryptokiVersion->toString->append->sb->append->sb->append->sb->append->sb->new->String->append->sb->append->sb->append->sb->append->sb->Functions->toBinaryString->append->sb->append->sb->append->sb->append->sb->new->String->append->sb->append->sb->append->sb->append->sb->libraryVersion->toString->append->return->sb->toString
CK_LOCKMUTEX#CK_LOCKMUTEX(Object):::Method CK_LOCKMUTEX:::
CK_MECHANISM#setParameter(CK_RSA_PKCS_PSS_PARAMS)::: k_ m set parameter:::if->equals->return->freeHandle
CK_MECHANISM#freeHandle()::: k_ m free handle:::if->PKCS11->freeMechanism
CK_MECHANISM#init(long, Object)::: k_ m init:::
CK_MECHANISM#toString():::Returns the string representation of CK_MECHANISM.:::sb->new->StringBuilder->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->pParameter->toString->append->sb->append->if->sb->append->sb->append->sb->append->sb->append->return->sb->toString
CK_MECHANISM_INFO#toString():::Returns the string representation of CK_MECHANISM_INFO.:::sb->new->StringBuilder->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->Functions->mechanismInfoFlagsToString->append->return->sb->toString
CK_NOTIFY#CK_NOTIFY(long, long, Object):::Method CK_NOTIFY:::
CK_PBE_PARAMS#toString():::Returns the string representation of CK_PBE_PARAMS.:::sb->new->StringBuilder->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->return->sb->toString
CK_PKCS5_PBKD2_PARAMS#toString():::Returns the string representation of CK_PKCS5_PBKD2_PARAMS.:::sb->new->StringBuilder->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->return->sb->toString
CK_RSA_PKCS_OAEP_PARAMS#toString():::Returns the string representation of CK_RSA_PKCS_OAEP_PARAMS.:::sb->new->StringBuilder->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->pSourceData->toString->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->return->sb->toString
CK_RSA_PKCS_PSS_PARAMS#equals(Object)::: k_ a_ s_ s_ s equals:::if->return->if->return->other->return
CK_RSA_PKCS_PSS_PARAMS#hashCode()::: k_ a_ s_ s_ s hash code:::return
CK_RSA_PKCS_PSS_PARAMS#toString()::: k_ a_ s_ s_ s to string:::sb->new->StringBuilder->sb->append->sb->append->sb->Functions->toFullHexString->append->sb->append->sb->append->sb->append->sb->Functions->toFullHexString->append->sb->append->sb->append->sb->append->sb->append->return->sb->toString
CK_SESSION_INFO#toString():::Returns the string representation of CK_SESSION_INFO.:::sb->new->StringBuilder->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->Functions->sessionStateToString->append->sb->append->sb->append->sb->append->sb->Functions->sessionInfoFlagsToString->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->return->sb->toString
CK_SLOT_INFO#toString():::Returns the string representation of CK_SLOT_INFO.:::sb->new->StringBuilder->sb->append->sb->append->sb->new->String->append->sb->append->sb->append->sb->append->sb->new->String->append->sb->append->sb->append->sb->append->sb->Functions->slotInfoFlagsToString->append->sb->append->sb->append->sb->append->sb->hardwareVersion->toString->append->sb->append->sb->append->sb->append->sb->firmwareVersion->toString->append->return->sb->toString
CK_SSL3_KEY_MAT_OUT#toString():::Returns the string representation of CK_SSL3_KEY_MAT_OUT.:::buffer->new->StringBuilder->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->Functions->toHexString->append->buffer->append->buffer->append->buffer->append->buffer->Functions->toHexString->append->return->buffer->toString
CK_SSL3_KEY_MAT_PARAMS#toString():::Returns the string representation of CK_SSL3_KEY_MAT_PARAMS.:::buffer->new->StringBuilder->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->return->buffer->toString
CK_SSL3_MASTER_KEY_DERIVE_PARAMS#toString():::Returns the string representation of CK_SSL3_MASTER_KEY_DERIVE_PARAMS.:::buffer->new->StringBuilder->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->return->buffer->toString
CK_SSL3_RANDOM_DATA#toString():::Returns the string representation of CK_SSL3_RANDOM_DATA.:::buffer->new->StringBuilder->buffer->append->buffer->append->buffer->Functions->toHexString->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->Functions->toHexString->append->buffer->append->buffer->append->buffer->append->buffer->append->return->buffer->toString
CK_TLS12_KEY_MAT_PARAMS#toString():::Returns the string representation of CK_TLS12_KEY_MAT_PARAMS.:::buffer->new->StringBuilder->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->buffer->append->return->buffer->toString
CK_TOKEN_INFO#toString():::Returns the string representation of CK_TOKEN_INFO.:::sb->new->StringBuilder->sb->append->sb->append->sb->new->String->append->sb->append->sb->append->sb->append->sb->new->String->append->sb->append->sb->append->sb->append->sb->new->String->append->sb->append->sb->append->sb->append->sb->new->String->append->sb->append->sb->append->sb->append->sb->Functions->tokenInfoFlagsToString->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->String->valueOf->append->sb->append->sb->append->sb->append->sb->hardwareVersion->toString->append->sb->append->sb->append->sb->append->sb->firmwareVersion->toString->append->sb->append->sb->append->sb->append->sb->new->String->append->return->sb->toString
CK_UNLOCKMUTEX#CK_UNLOCKMUTEX(Object):::Method CK_UNLOCKMUTEX:::
CK_VERSION#toString():::Returns the string representation of CK_VERSION.:::buffer->new->StringBuilder->buffer->append->buffer->append->m->if->buffer->append->buffer->append->return->buffer->toString
CK_X9_42_DH1_DERIVE_PARAMS#toString():::Returns the string representation of CK_PKCS5_PBKD2_PARAMS.:::sb->new->StringBuilder->sb->append->sb->append->sb->Functions->toFullHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->return->sb->toString
CK_X9_42_DH2_DERIVE_PARAMS#toString():::Returns the string representation of CK_PKCS5_PBKD2_PARAMS.:::sb->new->StringBuilder->sb->append->sb->append->sb->Functions->toFullHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->append->sb->Functions->toHexString->append->return->sb->toString
Functions#toFullHexString(long):::Converts a long value to a hexadecimal String of length 16:::currentValue->sb->new->StringBuilder->for->j->return->sb->reverse->toString
Functions#toFullHexString(int):::Converts a int value to a hexadecimal String of length 8:::currentValue->sb->new->StringBuilder->for->i->return->sb->reverse->toString
Functions#toHexString(long):::converts a long value to a hexadecimal String:::return->Long->toHexString
Functions#toHexString(byte[]):::Converts a byte array to a hexadecimal String:::if->return->sb->new->StringBuilder->single->for->i->return->sb->toString
Functions#toBinaryString(long):::converts a long value to a binary String:::return->Long->toString
Functions#toBinaryString(byte[]):::converts a byte array to a binary String:::helpBigInteger->new->BigInteger->return->helpBigInteger->toString
Functions.Flags#toString(long)::: flags to string:::sb->new->StringBuilder->first->for->i->return->sb->toString
Functions#slotInfoFlagsToString(long):::converts the long value flags to a SlotInfoFlag string:::return->slotInfoFlags->toString
Functions#tokenInfoFlagsToString(long):::converts long value flags to a TokenInfoFlag string:::return->tokenInfoFlags->toString
Functions#sessionInfoFlagsToString(long):::converts the long value flags to a SessionInfoFlag string:::return->sessionInfoFlags->toString
Functions#sessionStateToString(long):::converts the long value state to a SessionState string:::name->if->else->if->else->if->else->if->else->if->else->toFullHexString->return
Functions#mechanismInfoFlagsToString(long):::converts the long value flags to a MechanismInfoFlag string:::return->mechanismInfoFlags->toString
Functions#getName(Map, long)::: functions get name:::name->if->nameMap->Integer->valueOf->get->if->if->toFullHexString->else->toFullHexString->return
Functions#getId(Map, String)::: functions get id:::mech->idMap->get->if->throw->new->IllegalArgumentException->return->mech->intValue
Functions#getMechanismName(long)::: functions get mechanism name:::return->getName
Functions#getMechanismId(String)::: functions get mechanism id:::return->getId
Functions#getKeyName(long)::: functions get key name:::return->getName
Functions#getKeyId(String)::: functions get key id:::return->getId
Functions#getAttributeName(long)::: functions get attribute name:::return->getName
Functions#getAttributeId(String)::: functions get attribute id:::return->getId
Functions#getObjectClassName(long)::: functions get object class name:::return->getName
Functions#getObjectClassId(String)::: functions get object class id:::return->getId
Functions#getHashMechId(String)::: functions get hash mech id:::return->hashMechIds->get
Functions#getMGFName(long)::: functions get name:::return->getName
Functions#getMGFId(String)::: functions get id:::return->getId
Functions#equals(char[], char[]):::Check the given arrays for equalitiy:::return->Arrays->equals
Functions#equals(CK_DATE, CK_DATE):::Check the given dates for equalitiy:::equal->if->else->if->equals->equals->equals->else->return
Functions#hashCode(byte[]):::Calculate a hash code for the given byte array.:::hash->if->for->i->return
Functions#hashCode(char[]):::Calculate a hash code for the given char array.:::hash->if->for->i->return
Functions#hashCode(CK_DATE):::Calculate a hash code for the given date object.:::hash->if->if->if->if->return
Functions#addMapping(Map, Map, long, String)::: functions add mapping:::if->throw->new->AssertionError->intId->Integer->valueOf->if->nameMap->put->throw->new->AssertionError->if->idMap->put->throw->new->AssertionError
Functions#addMech(long, String)::: functions add mech:::addMapping
Functions#addKeyType(long, String)::: functions add key type:::addMapping
Functions#addAttribute(long, String)::: functions add attribute:::addMapping
Functions#addObjectClass(long, String)::: functions add object class:::addMapping
Functions#addHashMech(long, String...)::: functions add hash mech:::foreach->hashMechIds->put
Functions#addMGF(long, String)::: functions add f:::addMapping
PKCS11#loadNative()::: s11 load native:::
PKCS11#freeMechanism(long)::: s11 free mechanism:::
PKCS11#initializeLibrary(boolean):::This method does the initialization of the native library:::
PKCS11#finalizeLibrary():::This method does the finalization of the native library:::
PKCS11#getInstance(String, String, CK_C_INITIALIZE_ARGS, boolean)::: s11 get instance:::pkcs11->moduleMap->get->if->if->new->PKCS11->else->new->SynchronizedPKCS11->if->try->pkcs11->C_Initialize->catch->if->e->getErrorCode->throw->finally->moduleMap->put->return
PKCS11#connect(String, String):::Connects this object to the specified PKCS#11 library:::
PKCS11#disconnect():::Disconnects the PKCS#11 library from this object:::
PKCS11#C_Initialize(Object):::C_Initialize initializes the Cryptoki library:::
PKCS11#C_Finalize(Object):::C_Finalize indicates that an application is done with the Cryptoki library (General-purpose):::
PKCS11#C_GetInfo():::C_GetInfo returns general information about Cryptoki:::
PKCS11#C_GetSlotList(boolean):::C_GetSlotList obtains a list of slots in the system:::
PKCS11#C_GetSlotInfo(long):::C_GetSlotInfo obtains information about a particular slot in the system:::
PKCS11#C_GetTokenInfo(long):::C_GetTokenInfo obtains information about a particular token in the system:::
PKCS11#C_GetMechanismList(long):::C_GetMechanismList obtains a list of mechanism types supported by a token:::
PKCS11#C_GetMechanismInfo(long, long):::C_GetMechanismInfo obtains information about a particular mechanism possibly supported by a token:::
PKCS11#C_OpenSession(long, long, Object, CK_NOTIFY):::C_OpenSession opens a session between an application and a token:::
PKCS11#C_CloseSession(long):::C_CloseSession closes a session between an application and a token:::
PKCS11#C_GetSessionInfo(long):::C_GetSessionInfo obtains information about the session:::
PKCS11#C_GetOperationState(long):::C_GetOperationState obtains the state of the cryptographic operation in a session:::
PKCS11#C_SetOperationState(long, byte[], long, long):::C_SetOperationState restores the state of the cryptographic operation in a session:::
PKCS11#C_Login(long, long, char[]):::C_Login logs a user into a token:::
PKCS11#C_Logout(long):::C_Logout logs a user out from a token:::
PKCS11#C_CreateObject(long, CK_ATTRIBUTE[]):::C_CreateObject creates a new object:::
PKCS11#C_CopyObject(long, long, CK_ATTRIBUTE[]):::C_CopyObject copies an object, creating a new object for the copy:::
PKCS11#C_DestroyObject(long, long):::C_DestroyObject destroys an object:::
PKCS11#C_GetAttributeValue(long, long, CK_ATTRIBUTE[]):::C_GetAttributeValue obtains the value of one or more object attributes:::
PKCS11#C_SetAttributeValue(long, long, CK_ATTRIBUTE[]):::C_SetAttributeValue modifies the value of one or more object attributes (Object management):::
PKCS11#C_FindObjectsInit(long, CK_ATTRIBUTE[]):::C_FindObjectsInit initializes a search for token and session objects that match a template:::
PKCS11#C_FindObjects(long, long):::C_FindObjects continues a search for token and session objects that match a template, obtaining additional object handles:::
PKCS11#C_FindObjectsFinal(long):::C_FindObjectsFinal finishes a search for token and session objects:::
PKCS11#C_EncryptInit(long, CK_MECHANISM, long):::C_EncryptInit initializes an encryption operation:::
PKCS11#C_Encrypt(long, long, byte[], int, int, long, byte[], int, int):::C_Encrypt encrypts single-part data:::
PKCS11#C_EncryptUpdate(long, long, byte[], int, int, long, byte[], int, int):::C_EncryptUpdate continues a multiple-part encryption operation:::
PKCS11#C_EncryptFinal(long, long, byte[], int, int):::C_EncryptFinal finishes a multiple-part encryption operation:::
PKCS11#C_DecryptInit(long, CK_MECHANISM, long):::C_DecryptInit initializes a decryption operation:::
PKCS11#C_Decrypt(long, long, byte[], int, int, long, byte[], int, int):::C_Decrypt decrypts encrypted data in a single part:::
PKCS11#C_DecryptUpdate(long, long, byte[], int, int, long, byte[], int, int):::C_DecryptUpdate continues a multiple-part decryption operation:::
PKCS11#C_DecryptFinal(long, long, byte[], int, int):::C_DecryptFinal finishes a multiple-part decryption operation:::
PKCS11#C_DigestInit(long, CK_MECHANISM):::C_DigestInit initializes a message-digesting operation:::
PKCS11#C_DigestSingle(long, CK_MECHANISM, byte[], int, int, byte[], int, int):::C_Digest digests data in a single part:::
PKCS11#C_DigestUpdate(long, long, byte[], int, int):::C_DigestUpdate continues a multiple-part message-digesting operation:::
PKCS11#C_DigestKey(long, long):::C_DigestKey continues a multi-part message-digesting operation, by digesting the value of a secret key as part of the data already digested:::
PKCS11#C_DigestFinal(long, byte[], int, int):::C_DigestFinal finishes a multiple-part message-digesting operation:::
PKCS11#C_SignInit(long, CK_MECHANISM, long):::C_SignInit initializes a signature (private key encryption) operation, where the signature is (will be) an appendix to the data, and plaintext cannot be recovered from the signature:::
PKCS11#C_Sign(long, byte[]):::C_Sign signs (encrypts with private key) data in a single part, where the signature is (will be) an appendix to the data, and plaintext cannot be recovered from the signature:::
PKCS11#C_SignUpdate(long, long, byte[], int, int):::C_SignUpdate continues a multiple-part signature operation, where the signature is (will be) an appendix to the data, and plaintext cannot be recovered from the signature:::
PKCS11#C_SignFinal(long, int):::C_SignFinal finishes a multiple-part signature operation, returning the signature:::
PKCS11#C_SignRecoverInit(long, CK_MECHANISM, long):::C_SignRecoverInit initializes a signature operation, where the data can be recovered from the signature:::
PKCS11#C_SignRecover(long, byte[], int, int, byte[], int, int):::C_SignRecover signs data in a single operation, where the data can be recovered from the signature:::
PKCS11#C_VerifyInit(long, CK_MECHANISM, long):::C_VerifyInit initializes a verification operation, where the signature is an appendix to the data, and plaintext cannot cannot be recovered from the signature (e.g:::
PKCS11#C_Verify(long, byte[], byte[]):::C_Verify verifies a signature in a single-part operation, where the signature is an appendix to the data, and plaintext cannot be recovered from the signature:::
PKCS11#C_VerifyUpdate(long, long, byte[], int, int):::C_VerifyUpdate continues a multiple-part verification operation, where the signature is an appendix to the data, and plaintext cannot be recovered from the signature:::
PKCS11#C_VerifyFinal(long, byte[]):::C_VerifyFinal finishes a multiple-part verification operation, checking the signature:::
PKCS11#C_VerifyRecoverInit(long, CK_MECHANISM, long):::C_VerifyRecoverInit initializes a signature verification operation, where the data is recovered from the signature:::
PKCS11#C_VerifyRecover(long, byte[], int, int, byte[], int, int):::C_VerifyRecover verifies a signature in a single-part operation, where the data is recovered from the signature:::
PKCS11#getNativeKeyInfo(long, long, long, CK_MECHANISM):::getNativeKeyInfo gets the key object attributes and values as an opaque byte array to be used in createNativeKey method:::
PKCS11#createNativeKey(long, byte[], long, CK_MECHANISM):::createNativeKey creates a key object with attributes and values specified by parameter as an opaque byte array:::
PKCS11#C_GenerateKey(long, CK_MECHANISM, CK_ATTRIBUTE[]):::C_GenerateKey generates a secret key, creating a new key object:::
PKCS11#C_GenerateKeyPair(long, CK_MECHANISM, CK_ATTRIBUTE[], CK_ATTRIBUTE[]):::C_GenerateKeyPair generates a public-key/private-key pair, creating new key objects:::
PKCS11#C_WrapKey(long, CK_MECHANISM, long, long):::C_WrapKey wraps (i.e., encrypts) a key:::
PKCS11#C_UnwrapKey(long, CK_MECHANISM, long, byte[], CK_ATTRIBUTE[]):::C_UnwrapKey unwraps (decrypts) a wrapped key, creating a new key object:::
PKCS11#C_DeriveKey(long, CK_MECHANISM, long, CK_ATTRIBUTE[]):::C_DeriveKey derives a key from a base key, creating a new key object:::
PKCS11#C_SeedRandom(long, byte[]):::C_SeedRandom mixes additional seed material into the token's random number generator:::
PKCS11#C_GenerateRandom(long, byte[]):::C_GenerateRandom generates random data:::
PKCS11#toString():::Returns the string representation of this object.:::return
PKCS11#finalize():::Calls disconnect() to cleanup the native part of the wrapper:::disconnect
PKCS11.SynchronizedPKCS11#C_Initialize(Object)::: synchronized s11  c_ initialize:::super->C_Initialize
PKCS11.SynchronizedPKCS11#C_Finalize(Object)::: synchronized s11  c_ finalize:::super->C_Finalize
PKCS11.SynchronizedPKCS11#C_GetInfo()::: synchronized s11  c_ get info:::return->super->C_GetInfo
PKCS11.SynchronizedPKCS11#C_GetSlotList(boolean)::: synchronized s11  c_ get slot list:::return->super->C_GetSlotList
PKCS11.SynchronizedPKCS11#C_GetSlotInfo(long)::: synchronized s11  c_ get slot info:::return->super->C_GetSlotInfo
PKCS11.SynchronizedPKCS11#C_GetTokenInfo(long)::: synchronized s11  c_ get token info:::return->super->C_GetTokenInfo
PKCS11.SynchronizedPKCS11#C_GetMechanismList(long)::: synchronized s11  c_ get mechanism list:::return->super->C_GetMechanismList
PKCS11.SynchronizedPKCS11#C_GetMechanismInfo(long, long)::: synchronized s11  c_ get mechanism info:::return->super->C_GetMechanismInfo
PKCS11.SynchronizedPKCS11#C_OpenSession(long, long, Object, CK_NOTIFY)::: synchronized s11  c_ open session:::return->super->C_OpenSession
PKCS11.SynchronizedPKCS11#C_CloseSession(long)::: synchronized s11  c_ close session:::super->C_CloseSession
PKCS11.SynchronizedPKCS11#C_GetSessionInfo(long)::: synchronized s11  c_ get session info:::return->super->C_GetSessionInfo
PKCS11.SynchronizedPKCS11#C_Login(long, long, char[])::: synchronized s11  c_ login:::super->C_Login
PKCS11.SynchronizedPKCS11#C_Logout(long)::: synchronized s11  c_ logout:::super->C_Logout
PKCS11.SynchronizedPKCS11#C_CreateObject(long, CK_ATTRIBUTE[])::: synchronized s11  c_ create object:::return->super->C_CreateObject
PKCS11.SynchronizedPKCS11#C_CopyObject(long, long, CK_ATTRIBUTE[])::: synchronized s11  c_ copy object:::return->super->C_CopyObject
PKCS11.SynchronizedPKCS11#C_DestroyObject(long, long)::: synchronized s11  c_ destroy object:::super->C_DestroyObject
PKCS11.SynchronizedPKCS11#C_GetAttributeValue(long, long, CK_ATTRIBUTE[])::: synchronized s11  c_ get attribute value:::super->C_GetAttributeValue
PKCS11.SynchronizedPKCS11#C_SetAttributeValue(long, long, CK_ATTRIBUTE[])::: synchronized s11  c_ set attribute value:::super->C_SetAttributeValue
PKCS11.SynchronizedPKCS11#C_FindObjectsInit(long, CK_ATTRIBUTE[])::: synchronized s11  c_ find objects init:::super->C_FindObjectsInit
PKCS11.SynchronizedPKCS11#C_FindObjects(long, long)::: synchronized s11  c_ find objects:::return->super->C_FindObjects
PKCS11.SynchronizedPKCS11#C_FindObjectsFinal(long)::: synchronized s11  c_ find objects final:::super->C_FindObjectsFinal
PKCS11.SynchronizedPKCS11#C_EncryptInit(long, CK_MECHANISM, long)::: synchronized s11  c_ encrypt init:::super->C_EncryptInit
PKCS11.SynchronizedPKCS11#C_Encrypt(long, long, byte[], int, int, long, byte[], int, int)::: synchronized s11  c_ encrypt:::return->super->C_Encrypt
PKCS11.SynchronizedPKCS11#C_EncryptUpdate(long, long, byte[], int, int, long, byte[], int, int)::: synchronized s11  c_ encrypt update:::return->super->C_EncryptUpdate
PKCS11.SynchronizedPKCS11#C_EncryptFinal(long, long, byte[], int, int)::: synchronized s11  c_ encrypt final:::return->super->C_EncryptFinal
PKCS11.SynchronizedPKCS11#C_DecryptInit(long, CK_MECHANISM, long)::: synchronized s11  c_ decrypt init:::super->C_DecryptInit
PKCS11.SynchronizedPKCS11#C_Decrypt(long, long, byte[], int, int, long, byte[], int, int)::: synchronized s11  c_ decrypt:::return->super->C_Decrypt
PKCS11.SynchronizedPKCS11#C_DecryptUpdate(long, long, byte[], int, int, long, byte[], int, int)::: synchronized s11  c_ decrypt update:::return->super->C_DecryptUpdate
PKCS11.SynchronizedPKCS11#C_DecryptFinal(long, long, byte[], int, int)::: synchronized s11  c_ decrypt final:::return->super->C_DecryptFinal
PKCS11.SynchronizedPKCS11#C_DigestInit(long, CK_MECHANISM)::: synchronized s11  c_ digest init:::super->C_DigestInit
PKCS11.SynchronizedPKCS11#C_DigestSingle(long, CK_MECHANISM, byte[], int, int, byte[], int, int)::: synchronized s11  c_ digest single:::return->super->C_DigestSingle
PKCS11.SynchronizedPKCS11#C_DigestUpdate(long, long, byte[], int, int)::: synchronized s11  c_ digest update:::super->C_DigestUpdate
PKCS11.SynchronizedPKCS11#C_DigestKey(long, long)::: synchronized s11  c_ digest key:::super->C_DigestKey
PKCS11.SynchronizedPKCS11#C_DigestFinal(long, byte[], int, int)::: synchronized s11  c_ digest final:::return->super->C_DigestFinal
PKCS11.SynchronizedPKCS11#C_SignInit(long, CK_MECHANISM, long)::: synchronized s11  c_ sign init:::super->C_SignInit
PKCS11.SynchronizedPKCS11#C_Sign(long, byte[])::: synchronized s11  c_ sign:::return->super->C_Sign
PKCS11.SynchronizedPKCS11#C_SignUpdate(long, long, byte[], int, int)::: synchronized s11  c_ sign update:::super->C_SignUpdate
PKCS11.SynchronizedPKCS11#C_SignFinal(long, int)::: synchronized s11  c_ sign final:::return->super->C_SignFinal
PKCS11.SynchronizedPKCS11#C_SignRecoverInit(long, CK_MECHANISM, long)::: synchronized s11  c_ sign recover init:::super->C_SignRecoverInit
PKCS11.SynchronizedPKCS11#C_SignRecover(long, byte[], int, int, byte[], int, int)::: synchronized s11  c_ sign recover:::return->super->C_SignRecover
PKCS11.SynchronizedPKCS11#C_VerifyInit(long, CK_MECHANISM, long)::: synchronized s11  c_ verify init:::super->C_VerifyInit
PKCS11.SynchronizedPKCS11#C_Verify(long, byte[], byte[])::: synchronized s11  c_ verify:::super->C_Verify
PKCS11.SynchronizedPKCS11#C_VerifyUpdate(long, long, byte[], int, int)::: synchronized s11  c_ verify update:::super->C_VerifyUpdate
PKCS11.SynchronizedPKCS11#C_VerifyFinal(long, byte[])::: synchronized s11  c_ verify final:::super->C_VerifyFinal
PKCS11.SynchronizedPKCS11#C_VerifyRecoverInit(long, CK_MECHANISM, long)::: synchronized s11  c_ verify recover init:::super->C_VerifyRecoverInit
PKCS11.SynchronizedPKCS11#C_VerifyRecover(long, byte[], int, int, byte[], int, int)::: synchronized s11  c_ verify recover:::return->super->C_VerifyRecover
PKCS11.SynchronizedPKCS11#C_GenerateKey(long, CK_MECHANISM, CK_ATTRIBUTE[])::: synchronized s11  c_ generate key:::return->super->C_GenerateKey
PKCS11.SynchronizedPKCS11#C_GenerateKeyPair(long, CK_MECHANISM, CK_ATTRIBUTE[], CK_ATTRIBUTE[])::: synchronized s11  c_ generate key pair:::return->super->C_GenerateKeyPair
PKCS11.SynchronizedPKCS11#C_WrapKey(long, CK_MECHANISM, long, long)::: synchronized s11  c_ wrap key:::return->super->C_WrapKey
PKCS11.SynchronizedPKCS11#C_UnwrapKey(long, CK_MECHANISM, long, byte[], CK_ATTRIBUTE[])::: synchronized s11  c_ unwrap key:::return->super->C_UnwrapKey
PKCS11.SynchronizedPKCS11#C_DeriveKey(long, CK_MECHANISM, long, CK_ATTRIBUTE[])::: synchronized s11  c_ derive key:::return->super->C_DeriveKey
PKCS11.SynchronizedPKCS11#C_SeedRandom(long, byte[])::: synchronized s11  c_ seed random:::super->C_SeedRandom
PKCS11.SynchronizedPKCS11#C_GenerateRandom(long, byte[])::: synchronized s11  c_ generate random:::super->C_GenerateRandom
PKCS11Exception#getMessage():::This method gets the corresponding text error message from a property file:::message->errorMap->Long->valueOf->get->if->Functions->toFullHexString->return
PKCS11Exception#getErrorCode():::Returns the PKCS#11 error code.:::return
