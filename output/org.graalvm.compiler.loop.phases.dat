org.graalvm.compiler.loop.phases.ContextlessLoopPhase#apply(StructuredGraph)->void::: contextless loop phase apply
org.graalvm.compiler.loop.phases.ContextlessLoopPhase#apply(StructuredGraph, boolean)->void::: contextless loop phase apply
org.graalvm.compiler.loop.phases.ContextlessLoopPhase#run(StructuredGraph)->void::: contextless loop phase run
org.graalvm.compiler.loop.phases.ContextlessLoopPhase#run(StructuredGraph, CoreProviders)->void::: contextless loop phase run
org.graalvm.compiler.loop.phases.ConvertDeoptimizeToGuardPhase#run(StructuredGraph, CoreProviders)->void::: convert deoptimize to guard phase run
org.graalvm.compiler.loop.phases.LoopFullUnrollPhase#run(StructuredGraph, CoreProviders)->void::: loop full unroll phase run
org.graalvm.compiler.loop.phases.LoopFullUnrollPhase#checkContract()->boolean::: loop full unroll phase check contract
org.graalvm.compiler.loop.phases.LoopPartialUnrollPhase#run(StructuredGraph, CoreProviders)->void::: loop partial unroll phase run
org.graalvm.compiler.loop.phases.LoopPartialUnrollPhase#checkContract()->boolean::: loop partial unroll phase check contract
org.graalvm.compiler.loop.phases.LoopPeelingPhase#run(StructuredGraph, CoreProviders)->void::: loop peeling phase run
org.graalvm.compiler.loop.phases.LoopPeelingPhase#codeSizeIncrease()->float::: loop peeling phase code size increase
org.graalvm.compiler.loop.phases.LoopPhase#getPolicies()->P::: loop phase get policies
org.graalvm.compiler.loop.phases.LoopSafepointEliminationPhase#run(StructuredGraph, MidTierContext)->void::: loop safepoint elimination phase run
org.graalvm.compiler.loop.phases.LoopTransformations#peel(LoopEx)->void::: loop transformations peel
org.graalvm.compiler.loop.phases.LoopTransformations#fullUnroll(LoopEx, CoreProviders, CanonicalizerPhase)->void::: loop transformations full unroll
org.graalvm.compiler.loop.phases.LoopTransformations#unswitch(LoopEx, List)->void::: loop transformations unswitch
org.graalvm.compiler.loop.phases.LoopTransformations#partialUnroll(LoopEx, EconomicMap)->void::: loop transformations partial unroll
org.graalvm.compiler.loop.phases.LoopTransformations#insertPrePostLoops(LoopEx)->LoopBeginNode::: loop transformations insert pre post loops
org.graalvm.compiler.loop.phases.LoopTransformations#findUnswitchable(LoopEx)->List::: loop transformations find unswitchable
org.graalvm.compiler.loop.phases.LoopTransformations#isUnrollableLoop(LoopEx)->boolean::: loop transformations is unrollable loop
org.graalvm.compiler.loop.phases.LoopUnswitchingPhase#run(StructuredGraph)->void::: loop unswitching phase run
org.graalvm.compiler.loop.phases.LoopUnswitchingPhase#codeSizeIncrease()->float::: loop unswitching phase code size increase
org.graalvm.compiler.loop.phases.ReassociateInvariantPhase#run(StructuredGraph)->void::: reassociate invariant phase run
