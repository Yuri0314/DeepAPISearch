org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator_OptionDescriptors#get(String)->OptionDescriptor::: stack slot allocator_ option descriptors get
org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator_OptionDescriptors#iterator()->Iterator::: stack slot allocator_ option descriptors iterator
org.graalvm.compiler.lir.stackslotalloc.FixPointIntervalBuilder#build()->EconomicSet:::Builds the lifetime intervals for VirtualStackSlot virtual stack slots, sets up #stackSlotMap and returns a set of use positions, i.e
org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator#run(TargetDescription, LIRGenerationResult, AllocationContext)->void::: stack slot allocator run
org.graalvm.compiler.lir.stackslotalloc.LSStackSlotAllocator#allocateStackSlots(FrameMapBuilderTool, LIRGenerationResult)->void::: stack slot allocator allocate stack slots
org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator#run(TargetDescription, LIRGenerationResult, AllocationContext)->void::: simple stack slot allocator run
org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator#allocateStackSlots(FrameMapBuilderTool, LIRGenerationResult)->void::: simple stack slot allocator allocate stack slots
org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator#updateLIR(LIRGenerationResult, StackSlot[])->void::: simple stack slot allocator update r
org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator#mapSimpleVirtualStackSlot(FrameMapBuilderTool, SimpleVirtualStackSlot)->StackSlot::: simple stack slot allocator map simple virtual stack slot
org.graalvm.compiler.lir.stackslotalloc.SimpleStackSlotAllocator#mapVirtualStackSlotRange(FrameMapBuilderTool, VirtualStackSlotRange)->StackSlot::: simple stack slot allocator map virtual stack slot range
org.graalvm.compiler.lir.stackslotalloc.StackInterval#verify(int)->boolean::: stack interval verify
org.graalvm.compiler.lir.stackslotalloc.StackInterval#getOperand()->VirtualStackSlot::: stack interval get operand
org.graalvm.compiler.lir.stackslotalloc.StackInterval#addTo(int)->void::: stack interval add to
org.graalvm.compiler.lir.stackslotalloc.StackInterval#addFrom(int)->void::: stack interval add from
org.graalvm.compiler.lir.stackslotalloc.StackInterval#kind()->ValueKind::: stack interval kind
org.graalvm.compiler.lir.stackslotalloc.StackInterval#location()->StackSlot::: stack interval location
org.graalvm.compiler.lir.stackslotalloc.StackInterval#setLocation(StackSlot)->void::: stack interval set location
org.graalvm.compiler.lir.stackslotalloc.StackInterval#from()->int::: stack interval from
org.graalvm.compiler.lir.stackslotalloc.StackInterval#to()->int::: stack interval to
org.graalvm.compiler.lir.stackslotalloc.StackInterval#fixFrom()->void::: stack interval fix from
org.graalvm.compiler.lir.stackslotalloc.StackInterval#isFixed()->boolean::: stack interval is fixed
org.graalvm.compiler.lir.stackslotalloc.StackInterval#toString()->String::: stack interval to string
org.graalvm.compiler.lir.stackslotalloc.StackInterval#setLocationHint(StackInterval)->void::: stack interval set location hint
org.graalvm.compiler.lir.stackslotalloc.StackInterval#locationHint()->StackInterval::: stack interval location hint
org.graalvm.compiler.lir.stackslotalloc.StackIntervalDumper#visitIntervals(IntervalVisitor)->void::: stack interval dumper visit intervals
