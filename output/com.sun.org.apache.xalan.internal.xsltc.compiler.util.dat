BooleanType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a real into an object of internal type type:::if->translateTo->else->if->translateTo->else->if->translateTo->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
BooleanType#translateTo(ClassGenerator, MethodGenerator, StringType):::Expects a boolean on the stack and pushes a string:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->falsec->il->new->IFEQ->append->il->new->PUSH->append->truec->il->new->GOTO->append->falsec->il->new->PUSH->append->setTarget->truec->il->append->setTarget
BooleanType#translateTo(ClassGenerator, MethodGenerator, RealType):::Expects a boolean on the stack and pushes a real:::methodGen->getInstructionList->append
BooleanType#translateTo(ClassGenerator, MethodGenerator, ReferenceType):::Expects a boolean on the stack and pushes a boxed boolean:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->NEW->append->il->append->il->append->il->cpg->addMethodref->new->INVOKESPECIAL->append
BooleanType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates an internal boolean into an external (Java) boolean.:::if->methodGen->getInstructionList->append->else->if->clazz->isAssignableFrom->translateTo->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
BooleanType#translateFrom(ClassGenerator, MethodGenerator, Class):::Translates an external (Java) boolean into internal boolean.:::translateTo
BooleanType#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::translateTo
BooleanType#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->CHECKCAST->append->il->cpg->addMethodref->new->INVOKEVIRTUAL->append
ClassGenerator#getClassName():::Pretend this is the stylesheet class:::return->_stylesheet->getClassName
ClassGenerator#isExternal():::Returns <tt>true</tt> or <tt>false</tt> depending on whether this class inherits from <tt>AbstractTranslet</tt> or not.:::return
ErrorMessages#getContents():::Get the lookup table for error messages.:::return->new->ObjectArrs
ErrorMessages_ja#getContents():::Get the lookup table for error messages.:::return->new->ObjectArrs
ErrorMessages_zh_CN#getContents():::Get the lookup table for error messages.:::return->new->ObjectArrs
ErrorMsg#toString():::This version of toString() uses the _params instance variable to format the message:::suffix->getErrorMessage->MessageFormat->getErrorMessage->format->return->formatLine
FilterGenerator#loadTranslet():::The index of the translet pointer within the execution of the test method.:::return
FilterGenerator#isExternal():::Returns <tt>true</tt> since this class is external to the translet.:::return
IntType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates an integer into an object of internal type type.:::if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
IntType#translateTo(ClassGenerator, MethodGenerator, RealType):::Expects an integer on the stack and pushes a real.:::methodGen->getInstructionList->append
IntType#translateTo(ClassGenerator, MethodGenerator, StringType):::Expects an integer on the stack and pushes its string value by calling Integer.toString(int i).:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addMethodref->new->INVOKESTATIC->append
IntType#translateTo(ClassGenerator, MethodGenerator, BooleanType):::Expects an integer on the stack and pushes a 0 if its value is 0 and a 1 otherwise.:::il->methodGen->getInstructionList->falsec->il->new->IFEQ->append->il->append->truec->il->new->GOTO->append->falsec->il->append->setTarget->truec->il->append->setTarget
IntType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType):::Expects an integer on the stack and translates it to a non-synthesized boolean:::il->methodGen->getInstructionList->return->il->new->IFEQ->append->new->FlowList
IntType#translateTo(ClassGenerator, MethodGenerator, ReferenceType):::Expects an integer on the stack and pushes a boxed integer:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->NEW->append->il->append->il->append->il->cpg->addMethodref->new->INVOKESPECIAL->append
IntType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates an integer into the Java type denoted by clazz:::il->methodGen->getInstructionList->if->il->append->else->if->il->append->else->if->il->append->else->if->il->append->else->if->il->append->else->if->il->append->else->if->il->append->else->if->clazz->isAssignableFrom->il->append->translateTo->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
IntType#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::translateTo
IntType#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->CHECKCAST->append->index->cpg->addMethodref->il->new->INVOKEVIRTUAL->append
MarkerInstruction#accept(Visitor):::com.sun.org.apache.bcel.internal.generic.Visitors will know nothing about this kind of org.apche.bcel.generic.Instruction, so this method does nothing.:::
MarkerInstruction#consumeStack(ConstantPoolGen):::The number of JVM stack entries consumed by the instruction:::return
MarkerInstruction#produceStack(ConstantPoolGen):::The number of JVM stack entries produced by the instruction:::return
MarkerInstruction#copy():::Produce a copy of the instruction:::return
MarkerInstruction#dump(DataOutputStream):::Dump instruction as byte code to stream out:::
MatchGenerator#loadDOM():::Get index of the register where the DOM is stored.:::return
MatchGenerator#setDomIndex(int):::Set index where the reference to the DOM is stored.:::new->ALOAD
MatchGenerator#getIteratorIndex():::Get index of the register where the current iterator is stored.:::return
MatchGenerator#setIteratorIndex(int):::Set index of the register where the current iterator is stored.:::
MethodGenerator#addLocalVariable(String, Type, InstructionHandle, InstructionHandle):::Allocates a local variable:::lvg->if->addLocalVariable2->else->super->addLocalVariable->getLocalVariableRegistry->registerLocalVariable->return
MethodGenerator.LocalVariableRegistry#registerLocalVariable(LocalVariableGen):::Registers a org.apache.bcel.generic.LocalVariableGen for this method:::slot->lvg->getIndex->registrySize->_variables->size->if->for->i->_variables->add->else->localsInSlot->_variables->get->if->if->listOfLocalsInSlot->new->ArrayList<>->listOfLocalsInSlot->add->listOfLocalsInSlot->add->_variables->set->else->add->else->_variables->set->registerByName
MethodGenerator.LocalVariableRegistry#lookupRegisteredLocalVariable(int, int):::Find which LocalVariableGen, if any, is registered for a particular JVM local stack frame slot at a particular position in the byte code for the method. Preconditions: <ul> <li>The InstructionList#setPositions() has been called for the InstructionList associated with this MethodGenerator.</li> </ul>:::localsInSlot->_variables->get->if->if->lvg->if->offsetInLocalVariableGenRange->return->else->listOfLocalsInSlot->foreach->if->offsetInLocalVariableGenRange->return->return
MethodGenerator.LocalVariableRegistry#registerByName(LocalVariableGen):::Set up a mapping of the name of the specified LocalVariableGen object to the LocalVariableGen itself. This is a bit of a hack:::duplicateNameEntry->_nameToLVGMap->lvg->getName->get->if->_nameToLVGMap->lvg->getName->put->else->sameNameList->if->sameNameList->add->else->new->ArrayList<>->sameNameList->add->sameNameList->add->_nameToLVGMap->lvg->getName->put
MethodGenerator.LocalVariableRegistry#removeByNameTracking(LocalVariableGen):::Remove the mapping from the name of the specified LocalVariableGen to itself:::duplicateNameEntry->_nameToLVGMap->lvg->getName->get->if->sameNameList->for->i->sameNameList->size->else->_nameToLVGMap->remove
MethodGenerator.LocalVariableRegistry#lookUpByName(String):::Given the name of a variable, finds a LocalVariableGen corresponding to it. See also #registerByName(LocalVariableGen) and #removeByNameTracking(LocalVariableGen):::lvg->duplicateNameEntry->_nameToLVGMap->get->if->sameNameList->for->i->sameNameList->size->else->return
MethodGenerator.LocalVariableRegistry#getLocals(boolean):::Gets all LocalVariableGen objects for this method. When the includeRemoved argument has the value false, this method replaces uses of MethodGen#getLocalVariables() which has a side-effect of setting the start and end range for any LocalVariableGen if either was null:::locals->allVarsEverDeclared->new->ArrayList<>->if->slotCount->allVarsEverDeclared->size->for->i->else->foreach->_nameToLVGMap->entrySet->vars->nameVarsPair->getValue->if->if->varsList->for->i->varsList->size->else->allVarsEverDeclared->add->allVarsEverDeclared->size->new->LocalVariableGenArr->allVarsEverDeclared->toArray->return
MethodGenerator#offsetInLocalVariableGenRange(LocalVariableGen, int):::Determines whether a particular variable is in use at a particular offset in the byte code for this method:::lvgStart->lvg->getStart->lvgEnd->lvg->getEnd->if->getInstructionList->getStart->if->getInstructionList->getEnd->return->lvgStart->getPosition->lvgEnd->getPosition->lvgEnd->getInstruction->getLength
MethodGenerator#loadContextNode():::by default context node is the same as current node:::return->loadCurrentNode
MethodGenerator#addInstructionList(Pattern, InstructionList):::Add a pre-compiled pattern to this mode.:::_preCompiled->put
MethodGenerator#getInstructionList(Pattern):::Get the instruction list for a pre-compiled pattern:::return->_preCompiled->get
MethodGenerator#outlineChunks(ClassGenerator, int):::Breaks up the IL for this MethodGenerator into separate outlined methods so that no method exceeds the 64KB limit on the length of the byte code associated with a method.:::methodsOutlined->new->ArrayList<>->currentMethodSize->outlinedCount->moreMethodsOutlined->originalMethodName->getName->if->originalMethodName->equals->else->if->originalMethodName->equals->do->candidateChunks->getCandidateChunks->Collections->sort->for->i->candidateChunks->size->while->if->msg->new->ErrorMsg->toString->throw->new->InternalError->methodsArr->methodsOutlined->size->new->MethodArr->methodsOutlined->toArray->getThisMethod->methodsOutlined->size->return
MethodGenerator#markChunkStart():::Mark the end of the method's InstructionList as the start of an outlineable chunk of code:::getInstructionList->append
MethodGenerator#markChunkEnd():::Mark the end of an outlineable chunk of code:::getInstructionList->append->if->msg->new->ErrorMsg->toString->throw->new->InternalError
MethodGenerator#getGeneratedMethods(ClassGenerator):::Get all Methods generated by this MethodGenerator:::generatedMethods->il->getInstructionList->last->il->getEnd->il->setPositions->instructionListSize->last->getPosition->last->getInstruction->getLength->if->ilChanged->widenConditionalBranchTargetOffsets->if->il->setPositions->il->getEnd->last->getPosition->last->getInstruction->getLength->if->outlineChunks->else->new->MethodArr->getThisMethod->return
MethodGenerator#widenConditionalBranchTargetOffsets():::Rewrites branches to avoid the JVM limits of relative branch offsets:::ilChanged->maxOffsetChange->il->getInstructionList->for->ih->il->getStart->ih->getNext->for->ih->il->getStart->ih->getNext->return
MethodType#toSignature(String):::Returns the signature of this method that results by adding lastArgSig to the end of the argument list.:::buffer->new->StringBuffer->buffer->append->if->n->_argsType->size->for->i->return->buffer->append->append->_resultType->toSignature->append->toString
MultiHashtable#put(K, V):::Associates the specified key with a set of values:::if->set->map->new->HashSet<>->computeIfAbsent->set->add->return->throw->new->UnsupportedOperationException
MultiHashtable#maps(K, V):::Maps a key to a value in a set that is associated with the specified key:::if->return->set->map->get->if->foreach->if->v->equals->return->return
MultiHashtable#makeUnmodifiable():::Makes the MultiHashtable unmodifiable:::
NodeCounterGenerator#setTransletIndex(int):::Set the index of the register where "this" (the pointer to the translet) is stored.:::new->ALOAD
NodeCounterGenerator#loadTranslet():::The index of the translet pointer within the execution of matchFrom or matchCount:::return
NodeCounterGenerator#isExternal():::Returns <tt>true</tt> since this class is external to the translet.:::return
NodeSetType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a node-set into an object of internal type type:::if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
NodeSetType#translateFrom(ClassGenerator, MethodGenerator, Class):::Translates an external Java Class into an internal type:::il->methodGen->getInstructionList->cpg->classGen->getConstantPool->if->clazz->getName->equals->il->classGen->loadTranslet->append->il->methodGen->loadDOM->append->convert->cpg->addMethodref->il->new->INVOKESTATIC->append->else->if->clazz->getName->equals->il->classGen->loadTranslet->append->il->methodGen->loadDOM->append->convert->cpg->addMethodref->il->new->INVOKESTATIC->append->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
NodeSetType#translateTo(ClassGenerator, MethodGenerator, BooleanType):::Translates a node-set into a synthesized boolean:::il->methodGen->getInstructionList->falsel->translateToDesynthesized->il->append->truec->il->new->GOTO->append->falsel->il->append->backPatch->truec->il->append->setTarget
NodeSetType#translateTo(ClassGenerator, MethodGenerator, StringType):::Translates a node-set into a string:::il->methodGen->getInstructionList->getFirstNode->il->append->falsec->il->new->IFLT->append->translateTo->truec->il->new->GOTO->append->falsec->il->append->setTarget->il->classGen->getConstantPool->new->PUSH->append->truec->il->append->setTarget
NodeSetType#translateTo(ClassGenerator, MethodGenerator, RealType):::Expects a node-set on the stack and pushes a real:::translateTo->translateTo
NodeSetType#translateTo(ClassGenerator, MethodGenerator, NodeType):::Expects a node-set on the stack and pushes a node.:::getFirstNode
NodeSetType#translateTo(ClassGenerator, MethodGenerator, ObjectType):::Subsume node-set into ObjectType.:::methodGen->getInstructionList->append
NodeSetType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType):::Translates a node-set into a non-synthesized boolean:::il->methodGen->getInstructionList->getFirstNode->return->il->new->IFLT->append->new->FlowList
NodeSetType#translateTo(ClassGenerator, MethodGenerator, ReferenceType):::Expects a node-set on the stack and pushes a boxed node-set:::methodGen->getInstructionList->append
NodeSetType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates a node-set into the Java type denoted by clazz:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->className->clazz->getName->il->methodGen->loadDOM->append->il->append->if->className->equals->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->else->if->className->equals->className->equals->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->else->if->className->equals->next->cpg->addInterfaceMethodref->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->il->new->INVOKEINTERFACE->append->else->err->toString->new->ErrorMsg->classGen->getParser->reportError
NodeSetType#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::translateTo
NodeSetType#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::methodGen->getInstructionList->append
NodeSetType#getClassName():::Returns the class name of an internal type's external representation.:::return
NodeSortRecordFactGenerator#isExternal():::Returns <tt>true</tt> since this class is external to the translet.:::return
NodeSortRecordGenerator#loadTranslet():::The index of the translet pointer within the execution of the test method.:::return
NodeSortRecordGenerator#isExternal():::Returns <tt>true</tt> since this class is external to the translet.:::return
NodeType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a node into an object of internal type type:::if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
NodeType#translateTo(ClassGenerator, MethodGenerator, StringType):::Expects a node on the stack and pushes its string value.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->switch->il->methodGen->loadDOM->append->il->append->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->break->il->methodGen->loadDOM->append->il->append->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->break->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError->break
NodeType#translateTo(ClassGenerator, MethodGenerator, BooleanType):::Translates a node into a synthesized boolean:::il->methodGen->getInstructionList->falsel->translateToDesynthesized->il->append->truec->il->new->GOTO->append->falsel->il->append->backPatch->truec->il->append->setTarget
NodeType#translateTo(ClassGenerator, MethodGenerator, RealType):::Expects a node on the stack and pushes a real:::translateTo->translateTo
NodeType#translateTo(ClassGenerator, MethodGenerator, NodeSetType):::Expects a node on the stack and pushes a singleton node-set:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->NEW->append->il->append->il->append->init->cpg->addMethodref->il->new->INVOKESPECIAL->append
NodeType#translateTo(ClassGenerator, MethodGenerator, ObjectType):::Subsume Node into ObjectType.:::methodGen->getInstructionList->append
NodeType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType):::Translates a node into a non-synthesized boolean:::il->methodGen->getInstructionList->return->il->new->IFEQ->append->new->FlowList
NodeType#translateTo(ClassGenerator, MethodGenerator, ReferenceType):::Expects a node on the stack and pushes a boxed node:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->NEW->append->il->append->il->append->il->new->PUSH->append->il->cpg->addMethodref->new->INVOKESPECIAL->append
NodeType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates a node into the Java type denoted by clazz:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->className->clazz->getName->if->className->equals->translateTo->return->il->methodGen->loadDOM->append->il->append->if->className->equals->className->equals->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->else->if->className->equals->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->else->err->toString->new->ErrorMsg->classGen->getParser->reportError
NodeType#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::translateTo
NodeType#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->CHECKCAST->append->il->cpg->addFieldref->new->GETFIELD->append
NodeType#getClassName():::Returns the class name of an internal type's external representation.:::return
ObjectType#hashCode():::Must return the same value for all ObjectType instances:::return->hashCode
ObjectType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a void into an object of internal type type:::if->translateTo->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
ObjectType#translateTo(ClassGenerator, MethodGenerator, StringType):::Expects an integer on the stack and pushes its string value by calling Integer.toString(int i).:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->append->ifNull->il->new->IFNULL->append->il->cpg->addMethodref->new->INVOKEVIRTUAL->append->gotobh->il->new->GOTO->append->ifNull->il->append->setTarget->il->new->PUSH->append->gotobh->il->append->setTarget
ObjectType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates an object of this type to the external (Java) type denoted by clazz:::if->clazz->isAssignableFrom->methodGen->getInstructionList->append->else->err->toString->clazz->getClass->toString->new->ErrorMsg->classGen->getParser->reportError
ObjectType#translateFrom(ClassGenerator, MethodGenerator, Class):::Translates an external Java type into an Object type:::methodGen->getInstructionList->append
OutlineableChunkEnd#getName():::Get the name of this instruction:::return->getName
OutlineableChunkEnd#toString():::Get the name of this instruction:::return->getName
OutlineableChunkEnd#toString(boolean):::Get the name of this instruction:::return->getName
OutlineableChunkStart#getName():::Get the name of this instruction:::return->getName
OutlineableChunkStart#toString():::Get the name of this instruction:::return->getName
OutlineableChunkStart#toString(boolean):::Get the name of this instruction:::return->getName
RealType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a real into an object of internal type type:::if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
RealType#translateTo(ClassGenerator, MethodGenerator, StringType):::Expects a real on the stack and pushes its string value by calling Double.toString(double d).:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addMethodref->new->INVOKESTATIC->append
RealType#translateTo(ClassGenerator, MethodGenerator, BooleanType):::Expects a real on the stack and pushes a 0 if that number is 0.0 and a 1 otherwise.:::il->methodGen->getInstructionList->falsel->translateToDesynthesized->il->append->truec->il->new->GOTO->append->falsel->il->append->backPatch->truec->il->append->setTarget
RealType#translateTo(ClassGenerator, MethodGenerator, IntType):::Expects a real on the stack and pushes a truncated integer value:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addMethodref->new->INVOKESTATIC->append
RealType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType):::Translates a real into a non-synthesized boolean:::local->flowlist->new->FlowList->cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->append->methodGen->addLocalVariable->local->il->local->getIndex->new->DSTORE->append->setStart->il->append->il->append->flowlist->il->new->IFEQ->append->add->il->local->getIndex->new->DLOAD->append->local->il->local->getIndex->new->DLOAD->append->setEnd->il->append->flowlist->il->new->IFNE->append->add->return
RealType#translateTo(ClassGenerator, MethodGenerator, ReferenceType):::Expects a double on the stack and pushes a boxed double:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->NEW->append->il->append->il->append->il->append->il->cpg->addMethodref->new->INVOKESPECIAL->append
RealType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates a real into the Java type denoted by clazz:::il->methodGen->getInstructionList->if->il->append->il->append->else->if->il->append->il->append->else->if->il->append->il->append->else->if->il->append->else->if->il->append->else->if->il->append->else->if->il->append->else->if->clazz->isAssignableFrom->translateTo->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
RealType#translateFrom(ClassGenerator, MethodGenerator, Class):::Translates an external (primitive) Java type into a real:::il->methodGen->getInstructionList->if->il->append->else->if->il->append->else->if->il->append->else->if->il->append->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
RealType#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::translateTo
RealType#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addClass->new->CHECKCAST->append->il->cpg->addMethodref->new->INVOKEVIRTUAL->append
ReferenceType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a reference to an object of internal type type:::if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->else->err->type->toString->new->ErrorMsg->classGen->getParser->reportError
ReferenceType#translateTo(ClassGenerator, MethodGenerator, StringType):::Translates reference into object of internal type type.:::current->methodGen->getLocalIndex->cpg->classGen->getConstantPool->il->methodGen->getInstructionList->if->il->new->PUSH->append->else->il->new->ILOAD->append->il->methodGen->loadDOM->append->stringF->cpg->addMethodref->il->new->INVOKESTATIC->append
ReferenceType#translateTo(ClassGenerator, MethodGenerator, RealType):::Translates a reference into an object of internal type type.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->methodGen->loadDOM->append->index->cpg->addMethodref->il->new->INVOKESTATIC->append
ReferenceType#translateTo(ClassGenerator, MethodGenerator, BooleanType):::Translates a reference to an object of internal type type.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->index->cpg->addMethodref->il->new->INVOKESTATIC->append
ReferenceType#translateTo(ClassGenerator, MethodGenerator, NodeSetType):::Casts a reference into a NodeIterator.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->index->cpg->addMethodref->il->new->INVOKESTATIC->append->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append
ReferenceType#translateTo(ClassGenerator, MethodGenerator, NodeType):::Casts a reference into a Node.:::translateTo->translateTo
ReferenceType#translateTo(ClassGenerator, MethodGenerator, ResultTreeType):::Casts a reference into a ResultTree.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->index->cpg->addMethodref->il->new->INVOKESTATIC->append
ReferenceType#translateTo(ClassGenerator, MethodGenerator, ObjectType):::Subsume reference into ObjectType.:::methodGen->getInstructionList->append
ReferenceType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates a reference into the Java type denoted by clazz.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->referenceToLong->cpg->addMethodref->referenceToDouble->cpg->addMethodref->referenceToBoolean->cpg->addMethodref->if->clazz->getName->equals->il->append->else->if->il->new->INVOKESTATIC->append->else->if->clazz->getName->equals->il->new->INVOKESTATIC->append->translateTo->else->if->il->new->INVOKESTATIC->append->il->append->else->if->clazz->getName->equals->index->cpg->addMethodref->il->methodGen->loadDOM->append->il->new->INVOKESTATIC->append->else->if->clazz->getName->equals->index->cpg->addMethodref->il->methodGen->loadDOM->append->il->new->INVOKESTATIC->append->else->if->clazz->getName->equals->index->cpg->addMethodref->il->methodGen->loadDOM->append->il->new->INVOKESTATIC->append->else->if->clazz->getName->equals->translateTo->else->if->il->new->INVOKESTATIC->append->else->if->il->new->INVOKESTATIC->append->il->append->else->if->il->new->INVOKESTATIC->append->il->append->il->append->else->if->il->new->INVOKESTATIC->append->il->append->il->append->else->if->il->new->INVOKESTATIC->append->il->append->il->append->else->if->il->new->INVOKESTATIC->append->else->if->clazz->getName->equals->il->new->INVOKESTATIC->append->translateTo->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
ReferenceType#translateFrom(ClassGenerator, MethodGenerator, Class):::Translates an external Java type into a reference:::if->clazz->getName->equals->methodGen->getInstructionList->append->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
ReferenceType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType):::Expects a reference on the stack and translates it to a non-synthesized boolean:::il->methodGen->getInstructionList->translateTo->return->il->new->IFEQ->append->new->FlowList
ReferenceType#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::
ReferenceType#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::
ResultTreeType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a result tree to object of internal type type:::if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->if->translateTo->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
ResultTreeType#translateTo(ClassGenerator, MethodGenerator, BooleanType):::Expects an result tree on the stack and pushes a boolean:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->append->il->append
ResultTreeType#translateTo(ClassGenerator, MethodGenerator, StringType):::Expects an result tree on the stack and pushes a string.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->if->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->else->className->classGen->getClassName->current->methodGen->getLocalIndex->il->classGen->loadTranslet->append->if->classGen->isExternal->il->cpg->addClass->new->CHECKCAST->append->il->append->il->cpg->addFieldref->new->GETFIELD->append->index->cpg->addMethodref->il->cpg->addClass->new->NEW->append->il->append->il->append->il->new->INVOKESPECIAL->append->handler->methodGen->Util->getJCRefType->addLocalVariable->handler->il->handler->getIndex->new->ASTORE->append->setStart->cpg->addMethodref->il->new->INVOKEVIRTUAL->append->handler->il->handler->getIndex->new->ALOAD->append->setEnd->cpg->addMethodref->il->new->INVOKEVIRTUAL->append
ResultTreeType#translateTo(ClassGenerator, MethodGenerator, RealType):::Expects an result tree on the stack and pushes a real:::translateTo->translateTo
ResultTreeType#translateTo(ClassGenerator, MethodGenerator, ReferenceType):::Expects a result tree on the stack and pushes a boxed result tree:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->if->il->append->else->domBuilder->newDom->className->classGen->getClassName->current->methodGen->getLocalIndex->il->classGen->loadTranslet->append->if->classGen->isExternal->il->cpg->addClass->new->CHECKCAST->append->il->methodGen->loadDOM->append->il->methodGen->loadDOM->append->index->cpg->addInterfaceMethodref->il->new->PUSH->append->il->new->PUSH->append->il->new->INVOKEINTERFACE->append->il->append->methodGen->Util->getJCRefType->addLocalVariable->il->cpg->addClass->new->CHECKCAST->append->newDom->il->newDom->getIndex->new->ASTORE->append->setStart->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->il->append->il->append->methodGen->Util->getJCRefType->addLocalVariable->domBuilder->il->domBuilder->getIndex->new->ASTORE->append->setStart->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->cpg->addMethodref->il->new->INVOKEVIRTUAL->append->domBuilder->il->domBuilder->getIndex->new->ALOAD->append->setEnd->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->newDom->il->newDom->getIndex->new->ALOAD->append->setEnd
ResultTreeType#translateTo(ClassGenerator, MethodGenerator, NodeSetType):::Expects a result tree on the stack and pushes a node-set (iterator):::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->append->il->classGen->loadTranslet->append->il->cpg->addFieldref->new->GETFIELD->append->il->classGen->loadTranslet->append->il->cpg->addFieldref->new->GETFIELD->append->il->classGen->loadTranslet->append->il->cpg->addFieldref->new->GETFIELD->append->il->classGen->loadTranslet->append->il->cpg->addFieldref->new->GETFIELD->append->mapping->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->il->append->iter->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append
ResultTreeType#translateTo(ClassGenerator, MethodGenerator, ObjectType):::Subsume result tree into ObjectType.:::methodGen->getInstructionList->append
ResultTreeType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType):::Translates a result tree into a non-synthesized boolean:::il->methodGen->getInstructionList->translateTo->return->il->new->IFEQ->append->new->FlowList
ResultTreeType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates a result tree to a Java type denoted by clazz:::className->clazz->getName->cpg->classGen->getConstantPool->il->methodGen->getInstructionList->if->className->equals->translateTo->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->else->if->className->equals->translateTo->index->cpg->addInterfaceMethodref->il->new->INVOKEINTERFACE->append->else->if->className->equals->il->append->else->if->className->equals->translateTo->else->err->toString->new->ErrorMsg->classGen->getParser->reportError
ResultTreeType#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::translateTo
ResultTreeType#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::methodGen->getInstructionList->append
ResultTreeType#getClassName():::Returns the class name of an internal type's external representation.:::return
StringType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a string into an object of internal type type:::if->translateTo->else->if->translateTo->else->if->translateTo->else->if->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
StringType#translateTo(ClassGenerator, MethodGenerator, BooleanType):::Translates a string into a synthesized boolean.:::il->methodGen->getInstructionList->falsel->translateToDesynthesized->il->append->truec->il->new->GOTO->append->falsel->il->append->backPatch->truec->il->append->setTarget
StringType#translateTo(ClassGenerator, MethodGenerator, RealType):::Translates a string into a real by calling stringToReal() from the basis library.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addMethodref->new->INVOKESTATIC->append
StringType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType):::Translates a string into a non-synthesized boolean:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->il->cpg->addMethodref->new->INVOKEVIRTUAL->append->return->il->new->IFEQ->append->new->FlowList
StringType#translateTo(ClassGenerator, MethodGenerator, ReferenceType):::Expects a string on the stack and pushes a boxed string:::methodGen->getInstructionList->append
StringType#translateTo(ClassGenerator, MethodGenerator, Class):::Translates a internal string into an external (Java) string.:::if->clazz->isAssignableFrom->methodGen->getInstructionList->append->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
StringType#translateFrom(ClassGenerator, MethodGenerator, Class):::Translates an external (primitive) Java type into a string.:::cpg->classGen->getConstantPool->il->methodGen->getInstructionList->if->clazz->getName->equals->il->append->ifNonNull->il->new->IFNONNULL->append->il->append->il->new->PUSH->append->ifNonNull->il->append->setTarget->else->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
StringType#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::translateTo
StringType#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::methodGen->getInstructionList->append
StringType#getClassName():::Returns the class name of an internal type's external representation.:::return
TestGenerator#loadContextNode():::by default context node is the same as current node:::return
Type#newObjectType(String):::Factory method to instantiate object types:::if->return->else->if->return->else->acc->getContext->acc->new->RuntimePermission->checkPermission->return->new->ObjectType
Type#newObjectType(Class):::Factory method to instantiate object types:::if->return->else->if->return->else->return->new->ObjectType
Type#toString():::Returns a string representation of this type.:::
Type#identicalTo(Type):::Returns true if this and other are identical types.:::
Type#isNumber():::Returns true if this type is a numeric type:::return
Type#implementedAsMethod():::Returns true if this type has no object representaion:::return
Type#isSimple():::Returns true if this type is a simple type:::return
Type#distanceTo(Type):::Returns the distance between two types:::return
Type#toSignature():::Returns the signature of an internal type's external representation.:::
Type#translateTo(ClassGenerator, MethodGenerator, Type):::Translates an object of this type to an object of type type:::err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
Type#translateToDesynthesized(ClassGenerator, MethodGenerator, Type):::Translates object of this type to an object of type type:::fl->if->translateToDesynthesized->else->translateTo->return
Type#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType):::Translates an object of this type to an non-synthesized boolean:::err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError->return
Type#translateTo(ClassGenerator, MethodGenerator, Class):::Translates an object of this type to the external (Java) type denoted by clazz:::err->toString->clazz->getClass->toString->new->ErrorMsg->classGen->getParser->reportError
Type#translateFrom(ClassGenerator, MethodGenerator, Class):::Translates an external (Java) type denoted by clazz to an object of this type:::err->clazz->getClass->toString->toString->new->ErrorMsg->classGen->getParser->reportError
Type#translateBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its boxed representation.:::err->toString->toString->new->ErrorMsg->classGen->getParser->reportError
Type#translateUnBox(ClassGenerator, MethodGenerator):::Translates an object of this type to its unboxed representation.:::err->toString->toString->new->ErrorMsg->classGen->getParser->reportError
Type#getClassName():::Returns the class name of an internal type's external representation.:::return
Util#baseName(String):::Search for both slashes in order to support URLs and files.:::index->name->lastIndexOf->if->name->lastIndexOf->if->return->name->substring->else->lastColonIndex->name->lastIndexOf->if->return->name->substring->else->return
Util#pathName(String):::Search for both slashes in order to support URLs and files.:::index->name->lastIndexOf->if->name->lastIndexOf->return->name->substring
Util#toJavaName(String):::Replace all illegal Java chars by '_'.:::if->name->length->result->new->StringBuffer->ch->name->charAt->result->Character->isJavaIdentifierStart->append->n->name->length->for->i->return->result->toString->return
Util#replace(String, char, String):::Replace a certain character in a string with a new substring.:::return->base->indexOf->String->valueOf->new->StringArr->replace
Util#escape(String):::Replace occurances of '.', '-', '/' and ':':::return->new->StringArr->replace
Util#isLiteral(String):::Checks if the string is a literal (i.e:::length->str->length->for->i->return
Util#isValidQNames(String):::Checks if the string is valid list of qnames:::if->str->equals->tokens->new->StringTokenizer->while->tokens->hasMoreTokens->if->XML11Char->tokens->nextToken->isXML11ValidQName->return->return
VoidType#translateTo(ClassGenerator, MethodGenerator, Type):::Translates a void into an object of internal type type:::if->translateTo->else->err->toString->type->toString->new->ErrorMsg->classGen->getParser->reportError
VoidType#translateTo(ClassGenerator, MethodGenerator, StringType):::Translates a void into a string by pushing the empty string ''.:::il->methodGen->getInstructionList->il->classGen->getConstantPool->new->PUSH->append
VoidType#translateFrom(ClassGenerator, MethodGenerator, Class):::Translates an external (primitive) Java type into a void:::if->clazz->getName->equals->err->toString->clazz->getName->new->ErrorMsg->classGen->getParser->reportError
