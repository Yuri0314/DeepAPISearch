com.sun.org.apache.xalan.internal.xsltc.compiler.util.AttributeSetMethodGenerator#getLocalIndex(String)->int::: attribute set method generator get local index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.AttributeSetMethodGenerator#loadParameter(int)->Instruction::: attribute set method generator load parameter
com.sun.org.apache.xalan.internal.xsltc.compiler.util.AttributeSetMethodGenerator#storeParameter(int)->Instruction::: attribute set method generator store parameter
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#toString()->String::: boolean type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#identicalTo(Type)->boolean::: boolean type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#toSignature()->String::: boolean type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#isSimple()->boolean::: boolean type is simple
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: boolean type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a real into an object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Expects a boolean on the stack and pushes a string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#translateTo(ClassGenerator, MethodGenerator, RealType)->void:::Expects a boolean on the stack and pushes a real
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#translateTo(ClassGenerator, MethodGenerator, ReferenceType)->void:::Expects a boolean on the stack and pushes a boxed boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates an internal boolean into an external (Java) boolean.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#translateFrom(ClassGenerator, MethodGenerator, Class)->void:::Translates an external (Java) boolean into internal boolean.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#LOAD(int)->Instruction::: boolean type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#STORE(int)->Instruction::: boolean type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#GT(boolean)->BranchInstruction::: boolean type  t
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#GE(boolean)->BranchInstruction::: boolean type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#LT(boolean)->BranchInstruction::: boolean type  t
com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType#LE(boolean)->BranchInstruction::: boolean type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#getParser()->Parser::: class generator get parser
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#getStylesheet()->Stylesheet::: class generator get stylesheet
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#getClassName()->String:::Pretend this is the stylesheet class
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#loadTranslet()->Instruction::: class generator load translet
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#getDOMClass()->String::: class generator get class
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#getDOMClassSig()->String::: class generator get class sig
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#getApplyTemplatesSig()->String::: class generator get apply templates sig
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#getApplyTemplatesSigForImport()->String::: class generator get apply templates sig for import
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#isExternal()->boolean:::Returns <tt>true</tt> or <tt>false</tt> depending on whether this class inherits from <tt>AbstractTranslet</tt> or not.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator#addMethod(MethodGenerator)->void::: class generator add method
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#loadLastNode()->Instruction::: compare generator load last node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#loadCurrentNode()->Instruction::: compare generator load current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#storeCurrentNode()->Instruction::: compare generator store current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#loadDOM()->Instruction::: compare generator load m
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#getHandlerIndex()->int::: compare generator get handler index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#getIteratorIndex()->int::: compare generator get iterator index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#storeIterator()->Instruction::: compare generator store iterator
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#loadIterator()->Instruction::: compare generator load iterator
com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator#getLocalIndex(String)->int::: compare generator get local index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages#getContents()->Object[][]:::Get the lookup table for error messages.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ja#getContents()->Object[][]:::Get the lookup table for error messages.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_zh_CN#getContents()->Object[][]:::Get the lookup table for error messages.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg#getCause()->Throwable::: error msg get cause
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg#toString()->String:::This version of toString() uses the _params instance variable to format the message
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg#toString(Object)->String::: error msg to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg#toString(Object, Object)->String::: error msg to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg#setWarningError(boolean)->void::: error msg set warning error
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg#isWarningError()->boolean::: error msg is warning error
com.sun.org.apache.xalan.internal.xsltc.compiler.util.FilterGenerator#loadTranslet()->Instruction:::The index of the translet pointer within the execution of the test method.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.FilterGenerator#isExternal()->boolean:::Returns <tt>true</tt> since this class is external to the translet.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#toString()->String::: int type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#identicalTo(Type)->boolean::: int type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#toSignature()->String::: int type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: int type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#distanceTo(Type)->int::: int type distance to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates an integer into an object of internal type type.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateTo(ClassGenerator, MethodGenerator, RealType)->void:::Expects an integer on the stack and pushes a real.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Expects an integer on the stack and pushes its string value by calling Integer.toString(int i).
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateTo(ClassGenerator, MethodGenerator, BooleanType)->void:::Expects an integer on the stack and pushes a 0 if its value is 0 and a 1 otherwise.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType)->FlowList:::Expects an integer on the stack and translates it to a non-synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateTo(ClassGenerator, MethodGenerator, ReferenceType)->void:::Expects an integer on the stack and pushes a boxed integer
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates an integer into the Java type denoted by clazz
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#ADD()->Instruction::: int type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#SUB()->Instruction::: int type  b
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#MUL()->Instruction::: int type  l
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#DIV()->Instruction::: int type  v
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#REM()->Instruction::: int type  m
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#NEG()->Instruction::: int type  g
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#LOAD(int)->Instruction::: int type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#STORE(int)->Instruction::: int type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#GT(boolean)->BranchInstruction::: int type  t
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#GE(boolean)->BranchInstruction::: int type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#LT(boolean)->BranchInstruction::: int type  t
com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType#LE(boolean)->BranchInstruction::: int type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction#accept(Visitor)->void:::com.sun.org.apache.bcel.internal.generic.Visitors will know nothing about this kind of org.apche.bcel.generic.Instruction, so this method does nothing.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction#consumeStack(ConstantPoolGen)->int:::The number of JVM stack entries consumed by the instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction#produceStack(ConstantPoolGen)->int:::The number of JVM stack entries produced by the instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction#copy()->Instruction:::Produce a copy of the instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction#dump(DataOutputStream)->void:::Dump instruction as byte code to stream out
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator#loadCurrentNode()->Instruction::: match generator load current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator#storeCurrentNode()->Instruction::: match generator store current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator#getHandlerIndex()->int::: match generator get handler index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator#loadDOM()->Instruction:::Get index of the register where the DOM is stored.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator#setDomIndex(int)->void:::Set index where the reference to the DOM is stored.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator#getIteratorIndex()->int:::Get index of the register where the current iterator is stored.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator#setIteratorIndex(int)->void:::Set index of the register where the current iterator is stored.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator#getLocalIndex(String)->int::: match generator get local index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#addLocalVariable(String, Type, InstructionHandle, InstructionHandle)->LocalVariableGen:::Allocates a local variable
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#addLocalVariable2(String, Type, InstructionHandle)->LocalVariableGen::: method generator add local variable2
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry#registerLocalVariable(LocalVariableGen)->void:::Registers a org.apache.bcel.generic.LocalVariableGen for this method
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry#lookupRegisteredLocalVariable(int, int)->LocalVariableGen:::Find which LocalVariableGen, if any, is registered for a particular JVM local stack frame slot at a particular position in the byte code for the method. Preconditions: <ul> <li>The InstructionList#setPositions() has been called for the InstructionList associated with this MethodGenerator.</li> </ul>
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry#registerByName(LocalVariableGen)->void:::Set up a mapping of the name of the specified LocalVariableGen object to the LocalVariableGen itself. This is a bit of a hack
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry#removeByNameTracking(LocalVariableGen)->void:::Remove the mapping from the name of the specified LocalVariableGen to itself
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry#lookUpByName(String)->LocalVariableGen:::Given the name of a variable, finds a LocalVariableGen corresponding to it. See also #registerByName(LocalVariableGen) and #removeByNameTracking(LocalVariableGen)
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry#getLocals(boolean)->LocalVariableGen[]:::Gets all LocalVariableGen objects for this method. When the includeRemoved argument has the value false, this method replaces uses of MethodGen#getLocalVariables() which has a side-effect of setting the start and end range for any LocalVariableGen if either was null
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#offsetInLocalVariableGenRange(LocalVariableGen, int)->boolean:::Determines whether a particular variable is in use at a particular offset in the byte code for this method
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#removeLocalVariable(LocalVariableGen)->void::: method generator remove local variable
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#loadDOM()->Instruction::: method generator load m
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#storeDOM()->Instruction::: method generator store m
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#storeHandler()->Instruction::: method generator store handler
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#loadHandler()->Instruction::: method generator load handler
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#storeIterator()->Instruction::: method generator store iterator
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#loadIterator()->Instruction::: method generator load iterator
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#setStartNode()->Instruction::: method generator set start node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#reset()->Instruction::: method generator reset
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#nextNode()->Instruction::: method generator next node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#startElement()->Instruction::: method generator start element
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#endElement()->Instruction::: method generator end element
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#startDocument()->Instruction::: method generator start document
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#endDocument()->Instruction::: method generator end document
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#attribute()->Instruction::: method generator attribute
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#uniqueAttribute()->Instruction::: method generator unique attribute
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#namespace()->Instruction::: method generator namespace
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#loadCurrentNode()->Instruction::: method generator load current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#storeCurrentNode()->Instruction::: method generator store current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#loadContextNode()->Instruction:::by default context node is the same as current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#storeContextNode()->Instruction::: method generator store context node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#getLocalIndex(String)->int::: method generator get local index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#getLocalVariable(String)->LocalVariableGen::: method generator get local variable
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#setMaxLocals()->void::: method generator set max locals
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#addInstructionList(Pattern, InstructionList)->void:::Add a pre-compiled pattern to this mode.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#getInstructionList(Pattern)->InstructionList:::Get the instruction list for a pre-compiled pattern
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#outlineChunks(ClassGenerator, int)->Method[]:::Breaks up the IL for this MethodGenerator into separate outlined methods so that no method exceeds the 64KB limit on the length of the byte code associated with a method.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#markChunkStart()->void:::Mark the end of the method's InstructionList as the start of an outlineable chunk of code
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#markChunkEnd()->void:::Mark the end of an outlineable chunk of code
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#getGeneratedMethods(ClassGenerator)->Method[]:::Get all Methods generated by this MethodGenerator
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#getThisMethod()->Method::: method generator get this method
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator#widenConditionalBranchTargetOffsets()->boolean:::Rewrites branches to avoid the JVM limits of relative branch offsets
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#toString()->String::: method type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#toSignature()->String::: method type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#toSignature(String)->String:::Returns the signature of this method that results by adding lastArgSig to the end of the argument list.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: method type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#identicalTo(Type)->boolean::: method type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#distanceTo(Type)->int::: method type distance to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#resultType()->Type::: method type result type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#argsType()->List::: method type args type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType#argsCount()->int::: method type args count
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable#put(K, V)->Set:::Associates the specified key with a set of values
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable#maps(K, V)->V:::Maps a key to a value in a set that is associated with the specified key
com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable#makeUnmodifiable()->void:::Makes the MultiHashtable unmodifiable
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NamedMethodGenerator#getLocalIndex(String)->int::: named method generator get local index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NamedMethodGenerator#loadParameter(int)->Instruction::: named method generator load parameter
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NamedMethodGenerator#storeParameter(int)->Instruction::: named method generator store parameter
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator#setTransletIndex(int)->void:::Set the index of the register where "this" (the pointer to the translet) is stored.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator#loadTranslet()->Instruction:::The index of the translet pointer within the execution of matchFrom or matchCount
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator#isExternal()->boolean:::Returns <tt>true</tt> since this class is external to the translet.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#toString()->String::: node set type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#identicalTo(Type)->boolean::: node set type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#toSignature()->String::: node set type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: node set type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a node-set into an object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateFrom(ClassGenerator, MethodGenerator, Class)->void:::Translates an external Java Class into an internal type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateTo(ClassGenerator, MethodGenerator, BooleanType)->void:::Translates a node-set into a synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Translates a node-set into a string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateTo(ClassGenerator, MethodGenerator, RealType)->void:::Expects a node-set on the stack and pushes a real
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateTo(ClassGenerator, MethodGenerator, NodeType)->void:::Expects a node-set on the stack and pushes a node.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateTo(ClassGenerator, MethodGenerator, ObjectType)->void:::Subsume node-set into ObjectType.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType)->FlowList:::Translates a node-set into a non-synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateTo(ClassGenerator, MethodGenerator, ReferenceType)->void:::Expects a node-set on the stack and pushes a boxed node-set
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates a node-set into the Java type denoted by clazz
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#getClassName()->String:::Returns the class name of an internal type's external representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#LOAD(int)->Instruction::: node set type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType#STORE(int)->Instruction::: node set type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordFactGenerator#isExternal()->boolean:::Returns <tt>true</tt> since this class is external to the translet.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordGenerator#loadTranslet()->Instruction:::The index of the translet pointer within the execution of the test method.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordGenerator#isExternal()->boolean:::Returns <tt>true</tt> since this class is external to the translet.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#getType()->int::: node type get type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#toString()->String::: node type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#identicalTo(Type)->boolean::: node type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#hashCode()->int::: node type hash code
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#toSignature()->String::: node type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: node type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a node into an object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Expects a node on the stack and pushes its string value.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateTo(ClassGenerator, MethodGenerator, BooleanType)->void:::Translates a node into a synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateTo(ClassGenerator, MethodGenerator, RealType)->void:::Expects a node on the stack and pushes a real
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateTo(ClassGenerator, MethodGenerator, NodeSetType)->void:::Expects a node on the stack and pushes a singleton node-set
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateTo(ClassGenerator, MethodGenerator, ObjectType)->void:::Subsume Node into ObjectType.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType)->FlowList:::Translates a node into a non-synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateTo(ClassGenerator, MethodGenerator, ReferenceType)->void:::Expects a node on the stack and pushes a boxed node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates a node into the Java type denoted by clazz
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#getClassName()->String:::Returns the class name of an internal type's external representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#LOAD(int)->Instruction::: node type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType#STORE(int)->Instruction::: node type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType#isNumber()->boolean::: number type is number
com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType#isSimple()->boolean::: number type is simple
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#hashCode()->int:::Must return the same value for all ObjectType instances
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#equals(Object)->boolean::: object type equals
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#getJavaClassName()->String::: object type get java class name
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#getJavaClass()->Class::: object type get java class
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#toString()->String::: object type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#identicalTo(Type)->boolean::: object type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#toSignature()->String::: object type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: object type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a void into an object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Expects an integer on the stack and pushes its string value by calling Integer.toString(int i).
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates an object of this type to the external (Java) type denoted by clazz
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#translateFrom(ClassGenerator, MethodGenerator, Class)->void:::Translates an external Java type into an Object type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#LOAD(int)->Instruction::: object type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType#STORE(int)->Instruction::: object type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.OutlineableChunkEnd#getName()->String:::Get the name of this instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.OutlineableChunkEnd#toString()->String:::Get the name of this instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.OutlineableChunkEnd#toString(boolean)->String:::Get the name of this instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.OutlineableChunkStart#getName()->String:::Get the name of this instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.OutlineableChunkStart#toString()->String:::Get the name of this instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.OutlineableChunkStart#toString(boolean)->String:::Get the name of this instruction
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#toString()->String::: real type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#identicalTo(Type)->boolean::: real type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#toSignature()->String::: real type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: real type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#distanceTo(Type)->int::: real type distance to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a real into an object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Expects a real on the stack and pushes its string value by calling Double.toString(double d).
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateTo(ClassGenerator, MethodGenerator, BooleanType)->void:::Expects a real on the stack and pushes a 0 if that number is 0.0 and a 1 otherwise.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateTo(ClassGenerator, MethodGenerator, IntType)->void:::Expects a real on the stack and pushes a truncated integer value
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType)->FlowList:::Translates a real into a non-synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateTo(ClassGenerator, MethodGenerator, ReferenceType)->void:::Expects a double on the stack and pushes a boxed double
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates a real into the Java type denoted by clazz
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateFrom(ClassGenerator, MethodGenerator, Class)->void:::Translates an external (primitive) Java type into a real
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#ADD()->Instruction::: real type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#SUB()->Instruction::: real type  b
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#MUL()->Instruction::: real type  l
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#DIV()->Instruction::: real type  v
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#REM()->Instruction::: real type  m
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#NEG()->Instruction::: real type  g
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#LOAD(int)->Instruction::: real type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#STORE(int)->Instruction::: real type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#POP()->Instruction::: real type  p
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#CMP(boolean)->Instruction::: real type  p
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType#DUP()->Instruction::: real type  p
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#toString()->String::: reference type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#identicalTo(Type)->boolean::: reference type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#toSignature()->String::: reference type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: reference type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a reference to an object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Translates reference into object of internal type type.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, RealType)->void:::Translates a reference into an object of internal type type.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, BooleanType)->void:::Translates a reference to an object of internal type type.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, NodeSetType)->void:::Casts a reference into a NodeIterator.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, NodeType)->void:::Casts a reference into a Node.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, ResultTreeType)->void:::Casts a reference into a ResultTree.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, ObjectType)->void:::Subsume reference into ObjectType.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates a reference into the Java type denoted by clazz.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateFrom(ClassGenerator, MethodGenerator, Class)->void:::Translates an external Java type into a reference
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType)->FlowList:::Expects a reference on the stack and translates it to a non-synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#LOAD(int)->Instruction::: reference type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType#STORE(int)->Instruction::: reference type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#toString()->String::: result tree type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#identicalTo(Type)->boolean::: result tree type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#toSignature()->String::: result tree type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: result tree type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#getMethodName()->String::: result tree type get method name
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#implementedAsMethod()->boolean::: result tree type implemented as method
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a result tree to object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateTo(ClassGenerator, MethodGenerator, BooleanType)->void:::Expects an result tree on the stack and pushes a boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Expects an result tree on the stack and pushes a string.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateTo(ClassGenerator, MethodGenerator, RealType)->void:::Expects an result tree on the stack and pushes a real
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateTo(ClassGenerator, MethodGenerator, ReferenceType)->void:::Expects a result tree on the stack and pushes a boxed result tree
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateTo(ClassGenerator, MethodGenerator, NodeSetType)->void:::Expects a result tree on the stack and pushes a node-set (iterator)
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateTo(ClassGenerator, MethodGenerator, ObjectType)->void:::Subsume result tree into ObjectType.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType)->FlowList:::Translates a result tree into a non-synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates a result tree to a Java type denoted by clazz
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#getClassName()->String:::Returns the class name of an internal type's external representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#LOAD(int)->Instruction::: result tree type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType#STORE(int)->Instruction::: result tree type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator#getIteratorIndex()->int::: rt method generator get iterator index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator#storeHandler()->Instruction::: rt method generator store handler
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator#loadHandler()->Instruction::: rt method generator load handler
com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator#getLocalIndex(String)->int::: rt method generator get local index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.SlotAllocator#initialize(LocalVariableGen[])->void::: slot allocator initialize
com.sun.org.apache.xalan.internal.xsltc.compiler.util.SlotAllocator#allocateSlot(Type)->int::: slot allocator allocate slot
com.sun.org.apache.xalan.internal.xsltc.compiler.util.SlotAllocator#releaseSlot(LocalVariableGen)->void::: slot allocator release slot
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringStack#peekString()->String::: string stack peek string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringStack#popString()->String::: string stack pop string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringStack#pushString(String)->String::: string stack push string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#toString()->String::: string type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#identicalTo(Type)->boolean::: string type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#toSignature()->String::: string type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#isSimple()->boolean::: string type is simple
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: string type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a string into an object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateTo(ClassGenerator, MethodGenerator, BooleanType)->void:::Translates a string into a synthesized boolean.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateTo(ClassGenerator, MethodGenerator, RealType)->void:::Translates a string into a real by calling stringToReal() from the basis library.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType)->FlowList:::Translates a string into a non-synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateTo(ClassGenerator, MethodGenerator, ReferenceType)->void:::Expects a string on the stack and pushes a boxed string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates a internal string into an external (Java) string.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateFrom(ClassGenerator, MethodGenerator, Class)->void:::Translates an external (primitive) Java type into a string.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#getClassName()->String:::Returns the class name of an internal type's external representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#LOAD(int)->Instruction::: string type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType#STORE(int)->Instruction::: string type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#getHandlerIndex()->int::: test generator get handler index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#getIteratorIndex()->int::: test generator get iterator index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#setDomIndex(int)->void::: test generator set dom index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#loadDOM()->Instruction::: test generator load m
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#loadCurrentNode()->Instruction::: test generator load current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#loadContextNode()->Instruction:::by default context node is the same as current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#storeContextNode()->Instruction::: test generator store context node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#storeCurrentNode()->Instruction::: test generator store current node
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#storeIterator()->Instruction::: test generator store iterator
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#loadIterator()->Instruction::: test generator load iterator
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator#getLocalIndex(String)->int::: test generator get local index
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#newObjectType(String)->Type:::Factory method to instantiate object types
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#newObjectType(Class)->Type:::Factory method to instantiate object types
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#toString()->String:::Returns a string representation of this type.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#identicalTo(Type)->boolean:::Returns true if this and other are identical types.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#isNumber()->boolean:::Returns true if this type is a numeric type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#implementedAsMethod()->boolean:::Returns true if this type has no object representaion
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#isSimple()->boolean:::Returns true if this type is a simple type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#distanceTo(Type)->int:::Returns the distance between two types
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#toSignature()->String:::Returns the signature of an internal type's external representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates an object of this type to an object of type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#translateToDesynthesized(ClassGenerator, MethodGenerator, Type)->FlowList:::Translates object of this type to an object of type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#translateToDesynthesized(ClassGenerator, MethodGenerator, BooleanType)->FlowList:::Translates an object of this type to an non-synthesized boolean
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#translateTo(ClassGenerator, MethodGenerator, Class)->void:::Translates an object of this type to the external (Java) type denoted by clazz
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#translateFrom(ClassGenerator, MethodGenerator, Class)->void:::Translates an external (Java) type denoted by clazz to an object of this type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#translateBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its boxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#translateUnBox(ClassGenerator, MethodGenerator)->void:::Translates an object of this type to its unboxed representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#getClassName()->String:::Returns the class name of an internal type's external representation.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#ADD()->Instruction::: type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#SUB()->Instruction::: type  b
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#MUL()->Instruction::: type  l
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#DIV()->Instruction::: type  v
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#REM()->Instruction::: type  m
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#NEG()->Instruction::: type  g
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#LOAD(int)->Instruction::: type  d
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#STORE(int)->Instruction::: type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#POP()->Instruction::: type  p
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#GT(boolean)->BranchInstruction::: type  t
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#GE(boolean)->BranchInstruction::: type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#LT(boolean)->BranchInstruction::: type  t
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#LE(boolean)->BranchInstruction::: type  e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#CMP(boolean)->Instruction::: type  p
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type#DUP()->Instruction::: type  p
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError#getErrorMsg()->ErrorMsg::: type check error get error msg
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError#getMessage()->String::: type check error get message
com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError#toString()->String::: type check error to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#noExtName(String)->String::: util no ext name
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#baseName(String)->String:::Search for both slashes in order to support URLs and files.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#pathName(String)->String:::Search for both slashes in order to support URLs and files.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#toJavaName(String)->String:::Replace all illegal Java chars by '_'.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#getJCRefType(String)->Type::: util get ref type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#internalName(String)->String::: util internal name
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#println(String)->void::: util println
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#println(char)->void::: util println
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#TRACE1()->void::: util  e1
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#TRACE2()->void::: util  e2
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#TRACE3()->void::: util  e3
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#replace(String, char, String)->String:::Replace a certain character in a string with a new substring.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#replace(String, String, String[])->String::: util replace
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#escape(String)->String:::Replace occurances of '.', '-', '/' and ':'
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#getLocalName(String)->String::: util get local name
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#getPrefix(String)->String::: util get prefix
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#isLiteral(String)->boolean:::Checks if the string is a literal (i.e
com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util#isValidQNames(String)->boolean:::Checks if the string is valid list of qnames
com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType#toString()->String::: void type to string
com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType#identicalTo(Type)->boolean::: void type identical to
com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType#toSignature()->String::: void type to signature
com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType#toJCType()->com.sun.org.apache.bcel.internal.generic.Type::: void type to type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType#POP()->Instruction::: void type  p
com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType#translateTo(ClassGenerator, MethodGenerator, Type)->void:::Translates a void into an object of internal type type
com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType#translateTo(ClassGenerator, MethodGenerator, StringType)->void:::Translates a void into a string by pushing the empty string ''.
com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType#translateFrom(ClassGenerator, MethodGenerator, Class)->void:::Translates an external (primitive) Java type into a void
