CachedRowSetImpl#initContainer():::Sets the rvh field to a new Vector object with a capacity of 100 and sets the cursorPos and numRows fields to zero.:::new->Vector<Object>
CachedRowSetImpl#initProperties()::: cached row set impl init properties:::if->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally->setShowDeleted->setQueryTimeout->setMaxRows->setMaxFieldSize->setType->setConcurrency->if->rvh->size->isReadOnly->setReadOnly->else->setReadOnly->setTransactionIsolation->setEscapeProcessing->checkTransactionalWriter->new->Vector<Integer>->for->i->new->Vector<String>->for->j
CachedRowSetImpl#checkTransactionalWriter():::Determine whether the SyncProvider's writer implements the TransactionalWriter interface:::if->c->rowSetWriter->getClass->if->theInterfaces->c->getInterfaces->for->i
CachedRowSetImpl#establishTransactionalWriter():::Sets an private field to all transaction bounddaries to be set:::provider->getRowSetWriter
CachedRowSetImpl#setCommand(String):::Sets this CachedRowSetImpl object's command property to the given String object and clears the parameters, if any, that were set for the previous command:::super->setCommand->if->buildTableName->equals->this->buildTableName->setTableName
CachedRowSetImpl#populate(ResultSet)::: cached row set impl populate:::rowsFetched->currentRow->numCols->i->map->getTypeMap->obj->mRows->if->throw->resBundle->handleGetObject->toString->new->SQLException->data->getMetaData->new->RowSetMetaDataImpl->initMetaData->RowSetMD->getColumnCount->this->getMaxRows->while->data->next->new->Row->if->rowsetWarning->new->RowSetWarning->setNextWarning->for->rvh->add->notifyRowSetChanged
CachedRowSetImpl#initMetaData(RowSetMetaDataImpl, ResultSetMetaData):::Initializes the given RowSetMetaData object with the values in the given ResultSetMetaData object.:::numCols->rsmd->getColumnCount->md->setColumnCount->for->col->if->conn->getMetaData->locatorsUpdateCopy
CachedRowSetImpl#execute(Connection):::Populates this CachedRowSetImpl object with data, using the given connection to produce the result set from which data will be read:::setConnection->if->getPageSize->provider->getRowSetReader->crsReader->setStartPosition->crsReader->readData->else->rowSetReader->readData->this->getMetaData->if->conn->getMetaData->locatorsUpdateCopy
CachedRowSetImpl#setConnection(Connection):::Sets this CachedRowSetImpl object's connection property to the given Connection object:::
CachedRowSetImpl#acceptChanges():::Propagates all row update, insert, and delete changes to the underlying data source backing this CachedRowSetImpl object:::if->throw->resBundle->handleGetObject->toString->new->SyncProviderException->saveCursorPos->success->conflict->try->if->rowSetWriter->writeData->if->if->tWriter->rollback->else->if->commit->else->tWriter->commit->if->setOriginal->else->if->throw->resBundle->handleGetObject->toString->new->SyncProviderException->catch->throw->e->printStackTrace->throw->e->getMessage->new->SyncProviderException->throw->e->getMessage->new->SyncProviderException->finally
CachedRowSetImpl#acceptChanges(Connection):::Propagates all row update, insert, and delete changes to the data source backing this CachedRowSetImpl object using the given Connection object:::setConnection->acceptChanges
CachedRowSetImpl#restoreOriginal():::Restores this CachedRowSetImpl object to its original state, that is, its state before the last set of changes:::currentRow->for->i->rvh->iterator->i->hasNext->notifyRowSetChanged
CachedRowSetImpl#release():::Releases the current contents of this CachedRowSetImpl object and sends a rowSetChanged event object to all registered listeners.:::initContainer->notifyRowSetChanged
CachedRowSetImpl#undoDelete():::Cancels deletion of the current row and notifies listeners that a row has changed:::if->getShowDeleted->return->checkCursor->if->throw->resBundle->handleGetObject->toString->new->SQLException->currentRow->getCurrentRow->if->currentRow->getDeleted->currentRow->clearDeleted->notifyRowChanged
CachedRowSetImpl#undoInsert():::Immediately removes the current row from this CachedRowSetImpl object if the row has been inserted, and also notifies listeners the a row has changed:::checkCursor->if->throw->resBundle->handleGetObject->toString->new->SQLException->currentRow->getCurrentRow->if->currentRow->getInserted->rvh->remove->notifyRowChanged->else->throw->resBundle->handleGetObject->toString->new->SQLException
CachedRowSetImpl#undoUpdate():::Immediately reverses the last update operation if the row has been modified:::moveToCurrentRow->undoDelete->undoInsert
CachedRowSetImpl#createShared():::Returns a new RowSet object backed by the same data as that of this CachedRowSetImpl object and sharing a set of cursors with it:::clone->try->clone->catch->throw->ex->getMessage->new->SQLException->finally->return
CachedRowSetImpl#clone():::Returns a new RowSet object containing by the same data as this CachedRowSetImpl object:::return->super->clone
CachedRowSetImpl#createCopy():::Creates a RowSet object that is a deep copy of this CachedRowSetImpl object's data, including constraints:::out->bOut->new->ByteArrayOutputStream->try->new->ObjectOutputStream->out->writeObject->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SQLException->finally->in->try->bIn->bOut->toByteArray->new->ByteArrayInputStream->new->ObjectInputStream->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SQLException->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SQLException->finally->try->crsTemp->in->readObject->return->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SQLException->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SQLException->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SQLException->finally
CachedRowSetImpl#createCopySchema():::Creates a RowSet object that is a copy of this CachedRowSetImpl object's table structure and the constraints only:::nRows->crs->this->createCopy->return
CachedRowSetImpl#createCopyNoConstraints():::Creates a CachedRowSet object that is a copy of this CachedRowSetImpl object's data only:::crs->this->createCopy->crs->initProperties->try->crs->crs->getMatchColumnIndexes->unsetMatchColumn->catch->finally->try->crs->crs->getMatchColumnNames->unsetMatchColumn->catch->finally->return
CachedRowSetImpl#toCollection():::Converts this CachedRowSetImpl object to a collection of tables:::tMap->new->TreeMap<>->for->i->return->tMap->values
CachedRowSetImpl#toCollection(int):::Returns the specified column of this CachedRowSetImpl object as a Collection object:::nRows->vec->new->Vector<>->crsTemp->this->createCopy->while->crsTemp->next->vec->crsTemp->getObject->add->return
CachedRowSetImpl#toCollection(String):::Returns the specified column of this CachedRowSetImpl object as a Collection object:::return->getColIdxByName->toCollection
CachedRowSetImpl#getSyncProvider():::Returns the SyncProvider implementation being used with this CachedRowSetImpl implementation rowset.:::return
CachedRowSetImpl#setSyncProvider(String):::Sets the active SyncProvider and attempts to load load the new provider using the SyncFactory SPI.:::SyncFactory->getInstance->provider->getRowSetReader->provider->getRowSetWriter
CachedRowSetImpl#execute():::Populates this CachedRowSetImpl object with data:::execute
CachedRowSetImpl#next():::Moves the cursor down one row from its current position and returns true if the new cursor position is a valid row:::if->throw->resBundle->handleGetObject->toString->new->SQLException->ret->this->internalNext->notifyCursorMoved->return
CachedRowSetImpl#internalNext():::Moves this CachedRowSetImpl object's cursor to the next row and returns true if the cursor is still in the rowset; returns false if the cursor has moved to the position after the last row:::ret->do->if->else->if->break->while->getShowDeleted->rowDeleted->if->else->return
CachedRowSetImpl#close():::Closes this CachedRowSetImpl objecy and releases any resources it was using.:::initProperties->rvh->clear
CachedRowSetImpl#wasNull():::Reports whether the last column read was SQL NULL:::return
CachedRowSetImpl#setLastValueNull(boolean):::Sets the field lastValueNull to the given boolean value.:::
CachedRowSetImpl#checkIndex(int):::Checks to see whether the given index is a valid column number in this CachedRowSetImpl object and throws an SQLException if it is not:::if->RowSetMD->getColumnCount->throw->resBundle->handleGetObject->toString->new->SQLException
CachedRowSetImpl#checkCursor():::Checks to see whether the cursor for this CachedRowSetImpl object is on a row in the rowset and throws an SQLException if it is not:::if->isAfterLast->isBeforeFirst->throw->resBundle->handleGetObject->toString->new->SQLException
CachedRowSetImpl#getColIdxByName(String):::Returns the column number of the column with the given name in this CachedRowSetImpl object:::this->getMetaData->cols->RowSetMD->getColumnCount->for->i->throw->resBundle->handleGetObject->toString->new->SQLException
CachedRowSetImpl#getCurrentRow():::Returns the insert row or the current row of this CachedRowSetImplobject.:::if->return->else->return->rvh->get
CachedRowSetImpl#removeCurrentRow():::Removes the row on which the cursor is positioned:::getCurrentRow->setDeleted->rvh->remove
CachedRowSetImpl#getString(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a String object.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->return->value->toString
CachedRowSetImpl#getBoolean(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a boolean value.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->if->return->booleanValue->try->return->Double->Double->value->toString->parseDouble->compare->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally
CachedRowSetImpl#getByte(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a byte value.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->try->return->Byte->value->toString->valueOf->byteValue->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally
CachedRowSetImpl#getShort(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a short value.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->try->return->Short->value->toString->trim->valueOf->shortValue->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally
CachedRowSetImpl#getInt(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as an int value.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->try->return->Integer->value->toString->trim->valueOf->intValue->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally
CachedRowSetImpl#getLong(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a long value.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->try->return->Long->value->toString->trim->valueOf->longValue->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally
CachedRowSetImpl#getFloat(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a float value.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->try->return->Float->value->toString->parseFloat->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally
CachedRowSetImpl#getDouble(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a double value.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->try->return->Double->value->toString->trim->parseDouble->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally
CachedRowSetImpl#getBigDecimal(int, int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.math.BigDecimal object:::value->bDecimal->retVal->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->new->BigDecimal->this->getBigDecimal->bDecimal->setScale->return
CachedRowSetImpl#getBytes(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a byte array value.:::checkIndex->checkCursor->if->RowSetMD->getColumnType->isBinary->throw->resBundle->handleGetObject->toString->new->SQLException->return->getCurrentRow->getColumnObject
CachedRowSetImpl#getDate(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Date object.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->switch->RowSetMD->getColumnType->sec->getTime->return->new->java.sql.Date->sec->getTime->return->new->java.sql.Date->try->df->DateFormat->getDateInstance->return->df->value->toString->parse->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException
CachedRowSetImpl#getTime(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Time object.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->switch->RowSetMD->getColumnType->return->sec->getTime->return->new->java.sql.Time->try->tf->DateFormat->getTimeInstance->return->tf->value->toString->parse->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException
CachedRowSetImpl#getTimestamp(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Timestamp object.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->switch->RowSetMD->getColumnType->return->sec->getTime->return->new->java.sql.Timestamp->sec->getTime->return->new->java.sql.Timestamp->try->tf->DateFormat->getTimeInstance->return->tf->value->toString->parse->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException
CachedRowSetImpl#getAsciiStream(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.io.InputStream object:::value->checkIndex->checkCursor->getCurrentRow->getColumnObject->if->return->try->if->RowSetMD->getColumnType->isString->getBytes->new->ByteArrayInputStream->else->throw->resBundle->handleGetObject->toString->new->SQLException->catch->throw->ex->getMessage->new->SQLException->finally->return
CachedRowSetImpl#getUnicodeStream(int):::A column value can be retrieved as a stream of Unicode characters and then read in chunks from the stream:::checkIndex->checkCursor->if->RowSetMD->getColumnType->isBinary->RowSetMD->getColumnType->isString->throw->resBundle->handleGetObject->toString->new->SQLException->value->getCurrentRow->getColumnObject->if->return->value->toString->new->StringBufferInputStream->return
CachedRowSetImpl#getBinaryStream(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.io.InputStream object:::checkIndex->checkCursor->if->RowSetMD->getColumnType->isBinary->throw->resBundle->handleGetObject->toString->new->SQLException->value->getCurrentRow->getColumnObject->if->return->new->ByteArrayInputStream->return
CachedRowSetImpl#getString(String):::Retrieves the value stored in the designated column of the current row as a String object.:::return->getColIdxByName->getString
CachedRowSetImpl#getBoolean(String):::Retrieves the value stored in the designated column of the current row as a boolean value.:::return->getColIdxByName->getBoolean
CachedRowSetImpl#getByte(String):::Retrieves the value stored in the designated column of the current row as a byte value.:::return->getColIdxByName->getByte
CachedRowSetImpl#getShort(String):::Retrieves the value stored in the designated column of the current row as a short value.:::return->getColIdxByName->getShort
CachedRowSetImpl#getInt(String):::Retrieves the value stored in the designated column of the current row as an int value.:::return->getColIdxByName->getInt
CachedRowSetImpl#getLong(String):::Retrieves the value stored in the designated column of the current row as a long value.:::return->getColIdxByName->getLong
CachedRowSetImpl#getFloat(String):::Retrieves the value stored in the designated column of the current row as a float value.:::return->getColIdxByName->getFloat
CachedRowSetImpl#getDouble(String):::Retrieves the value stored in the designated column of the current row of this CachedRowSetImpl object as a double value.:::return->getColIdxByName->getDouble
CachedRowSetImpl#getBigDecimal(String, int):::Retrieves the value stored in the designated column of the current row as a java.math.BigDecimal object.:::return->getColIdxByName->getBigDecimal
CachedRowSetImpl#getBytes(String):::Retrieves the value stored in the designated column of the current row as a byte array:::return->getColIdxByName->getBytes
CachedRowSetImpl#getDate(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Date object.:::return->getColIdxByName->getDate
CachedRowSetImpl#getTime(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Time object.:::return->getColIdxByName->getTime
CachedRowSetImpl#getTimestamp(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Timestamp object.:::return->getColIdxByName->getTimestamp
CachedRowSetImpl#getAsciiStream(String):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.io.InputStream object:::return->getColIdxByName->getAsciiStream
CachedRowSetImpl#getUnicodeStream(String):::A column value can be retrieved as a stream of Unicode characters and then read in chunks from the stream:::return->getColIdxByName->getUnicodeStream
CachedRowSetImpl#getBinaryStream(String):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.io.InputStream object:::return->getColIdxByName->getBinaryStream
CachedRowSetImpl#getWarnings():::The first warning reported by calls on this CachedRowSetImpl object is returned:::return
CachedRowSetImpl#clearWarnings():::Clears all the warnings reporeted for the CachedRowSetImpl object:::
CachedRowSetImpl#getCursorName():::Retrieves the name of the SQL cursor used by this CachedRowSetImpl object:::throw->resBundle->handleGetObject->toString->new->SQLException
CachedRowSetImpl#getMetaData():::Retrieves a ResultSetMetaData object instance that contains information about the CachedRowSet object:::return
CachedRowSetImpl#getObject(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as an Object value:::value->map->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->if->s->getTypeMap->c->map->s->getSQLTypeName->get->if->obj->try->ReflectUtil->checkPackageAccess->tmp->c->newInstance->catch->throw->new->SQLException->finally->attribs->s->getAttributes->sqlInput->new->SQLInputImpl->obj->s->getSQLTypeName->readSQL->return->return
CachedRowSetImpl#getObject(String):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as an Object value:::return->getColIdxByName->getObject
CachedRowSetImpl#findColumn(String):::Maps the given column name for one of this CachedRowSetImpl object's columns to its column number.:::return->getColIdxByName
CachedRowSetImpl#getCharacterStream(int):::Retrieves the value stored in the designated column of the current row as a java.io.Reader object:::checkIndex->checkCursor->if->RowSetMD->getColumnType->isBinary->value->getCurrentRow->getColumnObject->if->return->new->ByteArrayInputStream->new->InputStreamReader->else->if->RowSetMD->getColumnType->isString->value->getCurrentRow->getColumnObject->if->return->value->toString->new->StringReader->else->throw->resBundle->handleGetObject->toString->new->SQLException->return
CachedRowSetImpl#getCharacterStream(String):::Retrieves the value stored in the designated column of the current row as a java.io.Reader object:::return->getColIdxByName->getCharacterStream
CachedRowSetImpl#getBigDecimal(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.math.BigDecimal object.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->try->return->value->toString->trim->new->BigDecimal->catch->throw->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->value->toString->trim->format->new->SQLException->finally
CachedRowSetImpl#getBigDecimal(String):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.math.BigDecimal object.:::return->getColIdxByName->getBigDecimal
CachedRowSetImpl#size():::Returns the number of rows in this CachedRowSetImpl object.:::return
CachedRowSetImpl#isBeforeFirst():::Indicates whether the cursor is before the first row in this CachedRowSetImpl object.:::if->return->else->return
CachedRowSetImpl#isAfterLast():::Indicates whether the cursor is after the last row in this CachedRowSetImpl object.:::if->return->else->return
CachedRowSetImpl#isFirst():::Indicates whether the cursor is on the first row in this CachedRowSetImpl object.:::saveCursorPos->saveAbsoluteCursorPos->internalFirst->if->return->else->return
CachedRowSetImpl#isLast():::Indicates whether the cursor is on the last row in this CachedRowSetImpl object:::saveCursorPos->saveAbsoluteCursorPos->saveShowDeleted->getShowDeleted->setShowDeleted->internalLast->if->setShowDeleted->return->else->setShowDeleted->return
CachedRowSetImpl#beforeFirst():::Moves this CachedRowSetImpl object's cursor to the front of the rowset, just before the first row:::if->getType->throw->resBundle->handleGetObject->toString->new->SQLException->notifyCursorMoved
CachedRowSetImpl#afterLast():::Moves this CachedRowSetImpl object's cursor to the end of the rowset, just after the last row:::if->notifyCursorMoved
CachedRowSetImpl#first():::Moves this CachedRowSetImpl object's cursor to the first row and returns true if the operation was successful:::if->getType->throw->resBundle->handleGetObject->toString->new->SQLException->ret->this->internalFirst->notifyCursorMoved->return
CachedRowSetImpl#internalFirst():::Moves this CachedRowSetImpl object's cursor to the first row and returns true if the operation is successful:::ret->if->if->getShowDeleted->rowDeleted->internalNext->else->if->else->return
CachedRowSetImpl#last():::Moves this CachedRowSetImpl object's cursor to the last row and returns true if the operation was successful:::if->getType->throw->resBundle->handleGetObject->toString->new->SQLException->ret->this->internalLast->notifyCursorMoved->return
CachedRowSetImpl#internalLast():::Moves this CachedRowSetImpl object's cursor to the last row and returns true if the operation is successful:::ret->if->if->getShowDeleted->rowDeleted->internalPrevious->else->if->else->return
CachedRowSetImpl#getRow():::Returns the number of the current row in this CachedRowSetImpl object:::if->getShowDeleted->rowDeleted->return->else->if->getShowDeleted->return->else->return
CachedRowSetImpl#absolute(int):::Moves this CachedRowSetImpl object's cursor to the row number specified:::if->getType->throw->resBundle->handleGetObject->toString->new->SQLException->if->if->afterLast->return->else->if->internalFirst->else->if->beforeFirst->return->else->if->internalLast->while->if->if->internalNext->break->else->if->internalPrevious->break->notifyCursorMoved->if->isAfterLast->isBeforeFirst->return->else->return
CachedRowSetImpl#relative(int):::Moves the cursor the specified number of rows from the current position, with a positive number moving it forward and a negative number moving it backward:::if->isBeforeFirst->isAfterLast->getType->throw->resBundle->handleGetObject->toString->new->SQLException->if->return->if->if->afterLast->else->for->i->else->if->beforeFirst->else->for->i->notifyCursorMoved->if->isAfterLast->isBeforeFirst->return->else->return
CachedRowSetImpl#previous():::Moves this CachedRowSetImpl object's cursor to the previous row and returns true if the cursor is on a valid row or false if it is not:::if->getType->throw->resBundle->handleGetObject->toString->new->SQLException->if->throw->resBundle->handleGetObject->toString->new->SQLException->ret->this->internalPrevious->notifyCursorMoved->return
CachedRowSetImpl#internalPrevious():::Moves the cursor to the previous row in this CachedRowSetImpl object, skipping past deleted rows that are not visible; returns true if the cursor is on a row in this rowset and false when the cursor goes before the first row:::ret->do->if->else->if->break->while->getShowDeleted->rowDeleted->if->else->return
CachedRowSetImpl#rowUpdated():::Indicates whether the current row of this CachedRowSetImpl object has been updated:::checkCursor->if->throw->resBundle->handleGetObject->toString->new->SQLException->return->getCurrentRow->getUpdated
CachedRowSetImpl#columnUpdated(int):::Indicates whether the designated column of the current row of this CachedRowSetImpl object has been updated:::checkCursor->if->throw->resBundle->handleGetObject->toString->new->SQLException->return->getCurrentRow->getColUpdated
CachedRowSetImpl#columnUpdated(String):::Indicates whether the designated column of the current row of this CachedRowSetImpl object has been updated:::return->getColIdxByName->columnUpdated
CachedRowSetImpl#rowInserted():::Indicates whether the current row has been inserted:::checkCursor->if->throw->resBundle->handleGetObject->toString->new->SQLException->return->getCurrentRow->getInserted
CachedRowSetImpl#rowDeleted():::Indicates whether the current row has been deleted:::if->isAfterLast->isBeforeFirst->throw->resBundle->handleGetObject->toString->new->SQLException->return->getCurrentRow->getDeleted
CachedRowSetImpl#isNumeric(int):::Indicates whether the given SQL data type is a numberic type.:::switch->return->return
CachedRowSetImpl#isString(int):::Indicates whether the given SQL data type is a string type.:::switch->return->return
CachedRowSetImpl#isBinary(int):::Indicates whether the given SQL data type is a binary type.:::switch->return->return
CachedRowSetImpl#isTemporal(int):::Indicates whether the given SQL data type is a temporal type:::switch->return->return
CachedRowSetImpl#isBoolean(int):::Indicates whether the given SQL data type is a boolean type:::switch->return->return
CachedRowSetImpl#convertNumeric(Object, int, int):::Converts the given Object in the Java programming language to the standard mapping for the specified SQL target data type:::if->return->if->isNumeric->isString->throw->resBundle->handleGetObject->toString->new->SQLException->try->switch->i->Integer->srcObj->toString->trim->valueOf->return->i->equals->Boolean->valueOf->Boolean->valueOf->return->Byte->srcObj->toString->trim->valueOf->return->Short->srcObj->toString->trim->valueOf->return->Integer->srcObj->toString->trim->valueOf->return->Long->srcObj->toString->trim->valueOf->return->srcObj->toString->trim->new->BigDecimal->return->Float->srcObj->toString->trim->valueOf->return->Double->srcObj->toString->trim->valueOf->return->srcObj->toString->throw->resBundle->handleGetObject->toString->new->SQLException->catch->throw->resBundle->handleGetObject->toString->new->SQLException->finally
CachedRowSetImpl#convertTemporal(Object, int, int):::Converts the given Object in the Java programming language to the standard object mapping for the specified SQL target data type:::if->return->if->isNumeric->isString->isTemporal->throw->resBundle->handleGetObject->toString->new->SQLException->try->switch->if->return->getTime->new->java.sql.Date->else->throw->resBundle->handleGetObject->toString->new->SQLException->if->return->getTime->new->Timestamp->else->return->getTime->new->Timestamp->if->return->getTime->new->Time->else->throw->resBundle->handleGetObject->toString->new->SQLException->return->srcObj->toString->throw->resBundle->handleGetObject->toString->new->SQLException->catch->throw->resBundle->handleGetObject->toString->new->SQLException->finally
CachedRowSetImpl#convertBoolean(Object, int, int):::Converts the given Object in the Java programming language to the standard mapping for the specified SQL target data type:::if->return->if->isNumeric->isString->isBoolean->throw->resBundle->handleGetObject->toString->new->SQLException->try->switch->i->Integer->srcObj->toString->trim->valueOf->return->i->equals->Boolean->valueOf->Boolean->valueOf->return->Boolean->srcObj->toString->trim->valueOf->throw->resBundle->handleGetObject->toString->new->SQLException->catch->throw->resBundle->handleGetObject->toString->new->SQLException->finally
CachedRowSetImpl#updateNull(int):::Sets the designated nullable column in the current row or the insert row of this CachedRowSetImpl object with null value:::checkIndex->checkCursor->row->getCurrentRow->row->setColumnObject
CachedRowSetImpl#updateBoolean(int, boolean):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given boolean value:::checkIndex->checkCursor->obj->Boolean->valueOf->RowSetMD->getColumnType->convertBoolean->getCurrentRow->setColumnObject
CachedRowSetImpl#updateByte(int, byte):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte value:::checkIndex->checkCursor->obj->Byte->valueOf->RowSetMD->getColumnType->convertNumeric->getCurrentRow->setColumnObject
CachedRowSetImpl#updateShort(int, short):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given short value:::checkIndex->checkCursor->obj->Short->valueOf->RowSetMD->getColumnType->convertNumeric->getCurrentRow->setColumnObject
CachedRowSetImpl#updateInt(int, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given int value:::checkIndex->checkCursor->obj->RowSetMD->getColumnType->convertNumeric->getCurrentRow->setColumnObject
CachedRowSetImpl#updateLong(int, long):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given long value:::checkIndex->checkCursor->obj->Long->valueOf->RowSetMD->getColumnType->convertNumeric->getCurrentRow->setColumnObject
CachedRowSetImpl#updateFloat(int, float):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given float value:::checkIndex->checkCursor->obj->Float->valueOf->RowSetMD->getColumnType->convertNumeric->getCurrentRow->setColumnObject
CachedRowSetImpl#updateDouble(int, double):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::checkIndex->checkCursor->obj->Double->valueOf->RowSetMD->getColumnType->convertNumeric->getCurrentRow->setColumnObject
CachedRowSetImpl#updateBigDecimal(int, BigDecimal):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.math.BigDecimal object:::checkIndex->checkCursor->obj->RowSetMD->getColumnType->convertNumeric->getCurrentRow->setColumnObject
CachedRowSetImpl#updateString(int, String):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given String object:::checkIndex->checkCursor->getCurrentRow->setColumnObject
CachedRowSetImpl#updateBytes(int, byte[]):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte array:::checkIndex->checkCursor->if->RowSetMD->getColumnType->isBinary->throw->resBundle->handleGetObject->toString->new->SQLException->getCurrentRow->setColumnObject
CachedRowSetImpl#updateDate(int, java.sql.Date):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Date object:::checkIndex->checkCursor->obj->RowSetMD->getColumnType->convertTemporal->getCurrentRow->setColumnObject
CachedRowSetImpl#updateTime(int, java.sql.Time):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Time object:::checkIndex->checkCursor->obj->RowSetMD->getColumnType->convertTemporal->getCurrentRow->setColumnObject
CachedRowSetImpl#updateTimestamp(int, java.sql.Timestamp):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Timestamp object:::checkIndex->checkCursor->obj->RowSetMD->getColumnType->convertTemporal->getCurrentRow->setColumnObject
CachedRowSetImpl#updateAsciiStream(int, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given ASCII stream value:::checkIndex->checkCursor->if->RowSetMD->getColumnType->isString->RowSetMD->getColumnType->isBinary->throw->resBundle->handleGetObject->toString->new->SQLException->buf->new->byteArr->try->charsRead->do->x->read->while->catch->throw->resBundle->handleGetObject->toString->new->SQLException->finally->str->new->String->getCurrentRow->setColumnObject
CachedRowSetImpl#updateBinaryStream(int, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.InputStream object:::checkIndex->checkCursor->if->RowSetMD->getColumnType->isBinary->throw->resBundle->handleGetObject->toString->new->SQLException->buf->new->byteArr->try->bytesRead->do->x->read->while->catch->throw->resBundle->handleGetObject->toString->new->SQLException->finally->getCurrentRow->setColumnObject
CachedRowSetImpl#updateCharacterStream(int, java.io.Reader, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.Reader object:::checkIndex->checkCursor->if->RowSetMD->getColumnType->isString->RowSetMD->getColumnType->isBinary->throw->resBundle->handleGetObject->toString->new->SQLException->buf->new->charArr->try->charsRead->do->x->read->while->catch->throw->resBundle->handleGetObject->toString->new->SQLException->finally->str->new->String->getCurrentRow->setColumnObject
CachedRowSetImpl#updateObject(int, Object, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::checkIndex->checkCursor->type->RowSetMD->getColumnType->if->setScale->getCurrentRow->setColumnObject
CachedRowSetImpl#updateObject(int, Object):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::checkIndex->checkCursor->getCurrentRow->setColumnObject
CachedRowSetImpl#updateNull(String):::Sets the designated nullable column in the current row or the insert row of this CachedRowSetImpl object with null value:::getColIdxByName->updateNull
CachedRowSetImpl#updateBoolean(String, boolean):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given boolean value:::getColIdxByName->updateBoolean
CachedRowSetImpl#updateByte(String, byte):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte value:::getColIdxByName->updateByte
CachedRowSetImpl#updateShort(String, short):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given short value:::getColIdxByName->updateShort
CachedRowSetImpl#updateInt(String, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given int value:::getColIdxByName->updateInt
CachedRowSetImpl#updateLong(String, long):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given long value:::getColIdxByName->updateLong
CachedRowSetImpl#updateFloat(String, float):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given float value:::getColIdxByName->updateFloat
CachedRowSetImpl#updateDouble(String, double):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::getColIdxByName->updateDouble
CachedRowSetImpl#updateBigDecimal(String, BigDecimal):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.math.BigDecimal object:::getColIdxByName->updateBigDecimal
CachedRowSetImpl#updateString(String, String):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given String object:::getColIdxByName->updateString
CachedRowSetImpl#updateBytes(String, byte[]):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte array:::getColIdxByName->updateBytes
CachedRowSetImpl#updateDate(String, java.sql.Date):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Date object:::getColIdxByName->updateDate
CachedRowSetImpl#updateTime(String, java.sql.Time):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Time object:::getColIdxByName->updateTime
CachedRowSetImpl#updateTimestamp(String, java.sql.Timestamp):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Timestamp object:::getColIdxByName->updateTimestamp
CachedRowSetImpl#updateAsciiStream(String, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given ASCII stream value:::getColIdxByName->updateAsciiStream
CachedRowSetImpl#updateBinaryStream(String, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.InputStream object:::getColIdxByName->updateBinaryStream
CachedRowSetImpl#updateCharacterStream(String, java.io.Reader, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.Reader object:::getColIdxByName->updateCharacterStream
CachedRowSetImpl#updateObject(String, Object, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::getColIdxByName->updateObject
CachedRowSetImpl#updateObject(String, Object):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::getColIdxByName->updateObject
CachedRowSetImpl#insertRow():::Inserts the contents of this CachedRowSetImpl object's insert row into this rowset immediately following the current row:::pos->if->insertRow->isCompleteRow->throw->resBundle->handleGetObject->toString->new->SQLException->toInsert->getParams->for->i->insRow->RowSetMD->getColumnCount->insertRow->getOrigRow->new->Row->insRow->setInserted->if->else->rvh->add->notifyRowChanged
CachedRowSetImpl#updateRow():::Marks the current row of this CachedRowSetImpl object as updated and notifies listeners registered with this rowset that the row has changed:::if->throw->resBundle->handleGetObject->toString->new->SQLException->getCurrentRow->setUpdated->notifyRowChanged
CachedRowSetImpl#deleteRow():::Deletes the current row from this CachedRowSetImpl object and notifies listeners registered with this rowset that a row has changed:::checkCursor->getCurrentRow->setDeleted->notifyRowChanged
CachedRowSetImpl#refreshRow():::Sets the current row with its original value and marks the row as not updated, thus undoing any changes made to the row since the last call to the methods updateRow or deleteRow:::checkCursor->if->throw->resBundle->handleGetObject->toString->new->SQLException->currentRow->getCurrentRow->currentRow->clearUpdated
CachedRowSetImpl#cancelRowUpdates():::Rolls back any updates made to the current row of this CachedRowSetImpl object and notifies listeners that a row has changed:::checkCursor->if->throw->resBundle->handleGetObject->toString->new->SQLException->currentRow->getCurrentRow->if->currentRow->getUpdated->currentRow->clearUpdated->notifyRowChanged
CachedRowSetImpl#moveToInsertRow():::Moves the cursor for this CachedRowSetImpl object to the insert row:::if->getConcurrency->throw->resBundle->handleGetObject->toString->new->SQLException->if->if->throw->resBundle->handleGetObject->toString->new->SQLException->numCols->RowSetMD->getColumnCount->if->new->InsertRow->else->throw->resBundle->handleGetObject->toString->new->SQLException->insertRow->initInsertRow
CachedRowSetImpl#moveToCurrentRow():::Moves the cursor for this CachedRowSetImpl object to the current row:::if->return->else
CachedRowSetImpl#getStatement():::Returns null.:::return
CachedRowSetImpl#getObject(int, java.util.Map>):::Retrieves the value of the designated column in this CachedRowSetImpl object as an Object in the Java programming language, using the given java.util.Map object to custom map the value if appropriate.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->if->s->c->map->s->getSQLTypeName->get->if->obj->try->ReflectUtil->checkPackageAccess->tmp->c->newInstance->catch->throw->new->SQLException->finally->attribs->s->getAttributes->sqlInput->new->SQLInputImpl->obj->s->getSQLTypeName->readSQL->return->return
CachedRowSetImpl#getRef(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Ref object in the Java programming language.:::value->checkIndex->checkCursor->if->RowSetMD->getColumnType->throw->resBundle->handleGetObject->toString->new->SQLException->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->return
CachedRowSetImpl#getBlob(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Blob object in the Java programming language.:::value->checkIndex->checkCursor->if->RowSetMD->getColumnType->MessageFormat->resBundle->handleGetObject->toString->RowSetMD->getColumnType->format->println->throw->resBundle->handleGetObject->toString->new->SQLException->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->return
CachedRowSetImpl#getClob(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Clob object in the Java programming language.:::value->checkIndex->checkCursor->if->RowSetMD->getColumnType->MessageFormat->resBundle->handleGetObject->toString->RowSetMD->getColumnType->format->println->throw->resBundle->handleGetObject->toString->new->SQLException->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->return
CachedRowSetImpl#getArray(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as an Array object in the Java programming language.:::value->checkIndex->checkCursor->if->RowSetMD->getColumnType->throw->resBundle->handleGetObject->toString->new->SQLException->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->return
CachedRowSetImpl#getObject(String, java.util.Map>):::Retrieves the value of the designated column in this CachedRowSetImpl object as an Object in the Java programming language, using the given java.util.Map object to custom map the value if appropriate.:::return->getColIdxByName->getObject
CachedRowSetImpl#getRef(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Ref object in the Java programming language.:::return->getColIdxByName->getRef
CachedRowSetImpl#getBlob(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Blob object in the Java programming language.:::return->getColIdxByName->getBlob
CachedRowSetImpl#getClob(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Clob object in the Java programming language.:::return->getColIdxByName->getClob
CachedRowSetImpl#getArray(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as an Array object in the Java programming langugage.:::return->getColIdxByName->getArray
CachedRowSetImpl#getDate(int, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Date object, using the given Calendar object to construct an appropriate millisecond value for the date.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->RowSetMD->getColumnType->convertTemporal->defaultCal->Calendar->getInstance->defaultCal->setTime->cal->defaultCal->get->set->cal->defaultCal->get->set->cal->defaultCal->get->set->return->cal->getTime->getTime->new->java.sql.Date
CachedRowSetImpl#getDate(String, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Date object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->getColIdxByName->getDate
CachedRowSetImpl#getTime(int, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Time object, using the given Calendar object to construct an appropriate millisecond value for the date.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->RowSetMD->getColumnType->convertTemporal->defaultCal->Calendar->getInstance->defaultCal->setTime->cal->defaultCal->get->set->cal->defaultCal->get->set->cal->defaultCal->get->set->return->cal->getTime->getTime->new->java.sql.Time
CachedRowSetImpl#getTime(String, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Time object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->getColIdxByName->getTime
CachedRowSetImpl#getTimestamp(int, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Timestamp object, using the given Calendar object to construct an appropriate millisecond value for the date.:::value->checkIndex->checkCursor->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->RowSetMD->getColumnType->convertTemporal->defaultCal->Calendar->getInstance->defaultCal->setTime->cal->defaultCal->get->set->cal->defaultCal->get->set->cal->defaultCal->get->set->cal->defaultCal->get->set->cal->defaultCal->get->set->cal->defaultCal->get->set->return->cal->getTime->getTime->new->java.sql.Timestamp
CachedRowSetImpl#getTimestamp(String, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Timestamp object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->getColIdxByName->getTimestamp
CachedRowSetImpl#getConnection():::Retrieves the Connection object passed to this CachedRowSetImpl object:::return
CachedRowSetImpl#setMetaData(RowSetMetaData):::Sets the metadata for this CachedRowSetImpl object with the given RowSetMetaData object.:::
CachedRowSetImpl#getOriginal():::Returns a result set containing the original value of the rowset:::crs->new->CachedRowSetImpl->colCount->RowSetMD->getColumnCount->orig->for->i->rvh->iterator->i->hasNext->return
CachedRowSetImpl#getOriginalRow():::Returns a result set containing the original value of the current row only:::crs->new->CachedRowSetImpl->crs->this->getTypeMap->setTypeMap->orig->RowSetMD->getColumnCount->getCurrentRow->getOrigRow->new->Row->add->return
CachedRowSetImpl#setOriginalRow():::Marks the current row in this rowset as being an original row.:::if->throw->resBundle->handleGetObject->toString->new->SQLException->row->getCurrentRow->makeRowOriginal->if->row->getDeleted->removeCurrentRow
CachedRowSetImpl#makeRowOriginal(Row):::Makes the given row of this rowset the original row by clearing any settings that mark the row as having been inserted, deleted, or updated:::if->row->getInserted->row->clearInserted->if->row->getUpdated->row->moveCurrentToOrig
CachedRowSetImpl#setOriginal():::Marks all rows in this rowset as being original rows:::for->i->rvh->iterator->i->hasNext->notifyRowSetChanged
CachedRowSetImpl#getTableName():::Returns an identifier for the object (table) that was used to create this rowset.:::return
CachedRowSetImpl#setTableName(String):::Sets the identifier for the table from which this rowset was derived to the given table name.:::if->throw->resBundle->handleGetObject->toString->new->SQLException->else
CachedRowSetImpl#getKeyColumns():::Returns the columns that make a key to uniquely identify a row in this CachedRowSetImpl object.:::keyColumns->return->Arrays->copyOf
CachedRowSetImpl#setKeyColumns(int[]):::Sets this CachedRowSetImpl object's keyCols field with the given array of column numbers, which forms a key for uniquely identifying a row in this rowset.:::numCols->if->RowSetMD->getColumnCount->if->throw->resBundle->handleGetObject->toString->new->SQLException->new->intArr->for->i
CachedRowSetImpl#updateRef(int, java.sql.Ref):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Ref value:::checkIndex->checkCursor->getCurrentRow->new->SerialRef->setColumnObject
CachedRowSetImpl#updateRef(String, java.sql.Ref):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::getColIdxByName->updateRef
CachedRowSetImpl#updateClob(int, Clob):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::checkIndex->checkCursor->if->getCurrentRow->new->SerialClob->setColumnObject->else->throw->resBundle->handleGetObject->toString->new->SQLException
CachedRowSetImpl#updateClob(String, Clob):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::getColIdxByName->updateClob
CachedRowSetImpl#updateBlob(int, Blob):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.sql.Blob value:::checkIndex->checkCursor->if->getCurrentRow->new->SerialBlob->setColumnObject->else->throw->resBundle->handleGetObject->toString->new->SQLException
CachedRowSetImpl#updateBlob(String, Blob):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.sql.Blob  value:::getColIdxByName->updateBlob
CachedRowSetImpl#updateArray(int, Array):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.sql.Array values:::checkIndex->checkCursor->getCurrentRow->new->SerialArray->setColumnObject
CachedRowSetImpl#updateArray(String, Array):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.sql.Array value:::getColIdxByName->updateArray
CachedRowSetImpl#getURL(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as a java.net.URL object in the Java programming language.:::value->checkIndex->checkCursor->if->RowSetMD->getColumnType->throw->resBundle->handleGetObject->toString->new->SQLException->setLastValueNull->getCurrentRow->getColumnObject->if->setLastValueNull->return->return
CachedRowSetImpl#getURL(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as a java.net.URL object in the Java programming language.:::return->getColIdxByName->getURL
CachedRowSetImpl#getRowSetWarnings():::The first warning reported by calls on this CachedRowSetImpl object is returned:::try->notifyCursorMoved->catch->finally->return
CachedRowSetImpl#buildTableName(String):::The function tries to isolate the tablename when only setCommand is set and not setTablename is called provided there is only one table name in the query else just leaves the setting of table name as such:::indexFrom->indexComma->strTablename->command->trim->if->command->toLowerCase->startsWith->command->toLowerCase->indexOf->command->indexOf->if->command->length->command->length->substring->trim->tabName->idxWhere->tabName->toLowerCase->indexOf->if->tabName->substring->trim->else->else->if->command->toLowerCase->startsWith->else->if->command->toLowerCase->startsWith->return
CachedRowSetImpl#commit():::Commits all changes performed by the acceptChanges() methods:::conn->commit
CachedRowSetImpl#rollback():::Rolls back all changes performed by the acceptChanges() methods:::conn->rollback
CachedRowSetImpl#rollback(Savepoint):::Rolls back all changes performed by the acceptChanges() to the last Savepoint transaction marker.:::conn->rollback
CachedRowSetImpl#unsetMatchColumn(int[]):::Unsets the designated parameter to the given int array:::i_val->for->j->for->i
CachedRowSetImpl#unsetMatchColumn(String[]):::Unsets the designated parameter to the given String array:::for->j->for->i
CachedRowSetImpl#getMatchColumnNames():::Retrieves the column name as String array that was set using setMatchColumn(String []) for this rowset.:::str_temp->strMatchColumns->size->new->StringArr->if->strMatchColumns->get->throw->resBundle->handleGetObject->toString->new->SQLException->strMatchColumns->copyInto->return
CachedRowSetImpl#getMatchColumnIndexes():::Retrieves the column id as int array that was set using setMatchColumn(int []) for this rowset.:::int_temp->iMatchColumns->size->new->IntegerArr->i_temp->iMatchColumns->size->new->intArr->i_val->iMatchColumns->get->if->throw->resBundle->handleGetObject->toString->new->SQLException->iMatchColumns->copyInto->for->i->return
CachedRowSetImpl#setMatchColumn(int[]):::Sets the designated parameter to the given int array:::for->j->for->i
CachedRowSetImpl#setMatchColumn(String[]):::Sets the designated parameter to the given String array:::for->j->for->i
CachedRowSetImpl#setMatchColumn(int):::Sets the designated parameter to the given int object:::if->throw->resBundle->handleGetObject->toString->new->SQLException->else->iMatchColumns->set
CachedRowSetImpl#setMatchColumn(String):::Sets the designated parameter to the given String object:::if->columnName->trim->equals->throw->resBundle->handleGetObject->toString->new->SQLException->else->strMatchColumns->set
CachedRowSetImpl#unsetMatchColumn(int):::Unsets the designated parameter to the given int object:::if->iMatchColumns->get->Integer->valueOf->equals->throw->resBundle->handleGetObject->toString->new->SQLException->else->if->strMatchColumns->get->throw->resBundle->handleGetObject->toString->new->SQLException->else->iMatchColumns->set
CachedRowSetImpl#unsetMatchColumn(String):::Unsets the designated parameter to the given String object:::columnName->trim->if->strMatchColumns->get->equals->throw->resBundle->handleGetObject->toString->new->SQLException->else->if->iMatchColumns->get->throw->resBundle->handleGetObject->toString->new->SQLException->else->strMatchColumns->set
CachedRowSetImpl#rowSetPopulated(RowSetEvent, int):::Notifies registered listeners that a RowSet object in the given RowSetEvent object has populated a number of additional rows:::if->getFetchSize->throw->resBundle->handleGetObject->toString->new->SQLException->if->size->event_temp->new->RowSetEvent->notifyRowSetChanged
CachedRowSetImpl#populate(ResultSet, int):::Populates this CachedRowSet object with data from the given ResultSet object:::rowsFetched->currentRow->numCols->i->map->getTypeMap->obj->mRows->if->if->throw->resBundle->handleGetObject->toString->new->SQLException->if->getMaxRows->data->absolute->while->data->next->if->getMaxRows->getMaxRows->return->if->getMaxRows->getPageSize->if->getMaxRows->else->getPageSize->if->resultSet->beforeFirst->else->resultSet->absolute->if->getMaxRows->new->Vector<Object>->else->getPageSize->new->Vector<Object>->if->throw->resBundle->handleGetObject->toString->new->SQLException->data->getMetaData->new->RowSetMetaDataImpl->initMetaData->RowSetMD->getColumnCount->this->getMaxRows->if->data->next->return->data->previous->while->data->next->new->Row->if->if->rowsetWarning->new->SQLException->setNextException->break->else->if->rowsetWarning->new->SQLException->setNextException->break->for->rvh->add->notifyRowSetChanged
CachedRowSetImpl#nextPage():::The nextPage gets the next page, that is a CachedRowSetImpl object containing the number of rows specified by page size.:::if->throw->resBundle->handleGetObject->toString->new->SQLException->if->crsReader->setStartPosition->crsReader->readData->else->populate->return
CachedRowSetImpl#setPageSize(int):::This is the setter function for setting the size of the page, which specifies how many rows have to be retrived at a time.:::if->throw->resBundle->handleGetObject->toString->new->SQLException->if->getMaxRows->getMaxRows->throw->resBundle->handleGetObject->toString->new->SQLException
CachedRowSetImpl#getPageSize():::This is the getter function for the size of the page.:::return
CachedRowSetImpl#previousPage():::Retrieves the data present in the page prior to the page from where it is called.:::pS->mR->rem->getPageSize->if->throw->resBundle->handleGetObject->toString->new->SQLException->if->if->resultSet->getType->throw->resBundle->handleGetObject->toString->new->SQLException->if->return->if->return->if->if->crsReader->setStartPosition->crsReader->readData->else->populate->return->else->if->crsReader->setStartPosition->crsReader->readData->else->populate->return
CachedRowSetImpl#setRowInserted(boolean):::Sets the status for the row on which the cursor is positioned:::checkCursor->if->throw->resBundle->handleGetObject->toString->new->SQLException->if->getCurrentRow->setInserted->else->getCurrentRow->clearInserted
CachedRowSetImpl#getSQLXML(int):::Retrieves the value of the designated SQL XML parameter as a SQLXML object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getSQLXML(String):::Retrieves the value of the designated SQL XML parameter as a SQLXML object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getRowId(int):::Retrieves the value of the designated column in the current row of this ResultSet object as a java.sql.RowId object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getRowId(String):::Retrieves the value of the designated column in the current row of this ResultSet object as a java.sql.RowId object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateRowId(int, RowId):::Updates the designated column with a RowId value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateRowId(String, RowId):::Updates the designated column with a RowId value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getHoldability():::Retrieves the holdability of this ResultSet object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#isClosed():::Retrieves whether this ResultSet object has been closed:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNString(int, String):::This method is used for updating columns that support National Character sets:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNString(String, String):::This method is used for updating columns that support National Character sets:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNClob(int, NClob)::: cached row set impl update clob:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNClob(String, NClob):::This method is used for updating SQL NCLOB  type that maps to java.sql.Types.NCLOB:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getNClob(int):::Retrieves the value of the designated column in the current row of this ResultSet object as a NClob object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getNClob(String):::Retrieves the value of the designated column in the current row of this ResultSet object as a NClob object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#unwrap(java.lang.Class)::: cached row set impl unwrap:::return
CachedRowSetImpl#isWrapperFor(Class)::: cached row set impl is wrapper for:::return
CachedRowSetImpl#setSQLXML(int, SQLXML):::Sets the designated parameter to the given java.sql.SQLXML object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setSQLXML(String, SQLXML):::Sets the designated parameter to the given java.sql.SQLXML object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setRowId(int, RowId):::Sets the designated parameter to the given java.sql.RowId object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setRowId(String, RowId):::Sets the designated parameter to the given java.sql.RowId object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNCharacterStream(int, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNClob(String, NClob):::Sets the designated parameter to a java.sql.NClob object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getNCharacterStream(int):::Retrieves the value of the designated column in the current row of this ResultSet object as a java.io.Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getNCharacterStream(String):::Retrieves the value of the designated column in the current row of this ResultSet object as a java.io.Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateSQLXML(int, SQLXML):::Updates the designated column with a java.sql.SQLXML value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateSQLXML(String, SQLXML):::Updates the designated column with a java.sql.SQLXML value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getNString(int):::Retrieves the value of the designated column in the current row of this ResultSet object as a String in the Java programming language:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getNString(String):::Retrieves the value of the designated column in the current row of this ResultSet object as a String in the Java programming language:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNCharacterStream(int, java.io.Reader, long):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNCharacterStream(String, java.io.Reader, long):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNCharacterStream(int, java.io.Reader):::Updates the designated column with a character stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNCharacterStream(String, java.io.Reader):::Updates the designated column with a character stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateBlob(int, InputStream, long):::Updates the designated column using the given input stream, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateBlob(String, InputStream, long):::Updates the designated column using the given input stream, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateBlob(int, InputStream):::Updates the designated column using the given input stream:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateBlob(String, InputStream):::Updates the designated column using the given input stream:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateClob(int, Reader, long):::Updates the designated column using the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateClob(String, Reader, long):::Updates the designated column using the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateClob(int, Reader):::Updates the designated column using the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateClob(String, Reader):::Updates the designated column using the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNClob(int, Reader, long):::Updates the designated column using the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNClob(String, Reader, long):::Updates the designated column using the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNClob(int, Reader):::Updates the designated column using the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateNClob(String, Reader):::Updates the designated column using the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateAsciiStream(int, java.io.InputStream, long):::Updates the designated column with an ascii stream value, which will have the specified number of bytes:::
CachedRowSetImpl#updateBinaryStream(int, java.io.InputStream, long):::Updates the designated column with a binary stream value, which will have the specified number of bytes:::
CachedRowSetImpl#updateCharacterStream(int, java.io.Reader, long):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateCharacterStream(String, java.io.Reader, long):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateAsciiStream(String, java.io.InputStream, long):::Updates the designated column with an ascii stream value, which will have the specified number of bytes.:::
CachedRowSetImpl#updateBinaryStream(String, java.io.InputStream, long):::Updates the designated column with a binary stream value, which will have the specified number of bytes:::
CachedRowSetImpl#updateBinaryStream(int, java.io.InputStream):::Updates the designated column with a binary stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateBinaryStream(String, java.io.InputStream):::Updates the designated column with a binary stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateCharacterStream(int, java.io.Reader):::Updates the designated column with a character stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateCharacterStream(String, java.io.Reader):::Updates the designated column with a character stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateAsciiStream(int, java.io.InputStream):::Updates the designated column with an ascii stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#updateAsciiStream(String, java.io.InputStream):::Updates the designated column with an ascii stream value:::
CachedRowSetImpl#setURL(int, java.net.URL):::Sets the designated parameter to the given java.net.URL value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNClob(int, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNClob(String, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNClob(String, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNClob(int, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNClob(int, NClob):::Sets the designated parameter to a java.sql.NClob object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNString(int, String):::Sets the designated parameter to the given String object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNString(String, String):::Sets the designated parameter to the given String object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNCharacterStream(int, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNCharacterStream(String, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNCharacterStream(String, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setTimestamp(String, java.sql.Timestamp, Calendar):::Sets the designated parameter to the given java.sql.Timestamp value, using the given Calendar object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setClob(String, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setClob(String, Clob):::Sets the designated parameter to the given java.sql.Clob object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setClob(String, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setDate(String, java.sql.Date):::Sets the designated parameter to the given java.sql.Date value using the default time zone of the virtual machine that is running the application:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setDate(String, java.sql.Date, Calendar):::Sets the designated parameter to the given java.sql.Date value, using the given Calendar object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setTime(String, java.sql.Time):::Sets the designated parameter to the given java.sql.Time value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setTime(String, java.sql.Time, Calendar):::Sets the designated parameter to the given java.sql.Time value, using the given Calendar object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setClob(int, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setClob(int, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBlob(int, InputStream, long):::Sets the designated parameter to a InputStream object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBlob(int, InputStream):::Sets the designated parameter to a InputStream object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBlob(String, InputStream, long):::Sets the designated parameter to a InputStream object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBlob(String, Blob):::Sets the designated parameter to the given java.sql.Blob object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBlob(String, InputStream):::Sets the designated parameter to a InputStream object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setObject(String, Object, int, int):::Sets the value of the designated parameter with the given object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setObject(String, Object, int):::Sets the value of the designated parameter with the given object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setObject(String, Object):::Sets the value of the designated parameter with the given object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setAsciiStream(String, java.io.InputStream, int):::Sets the designated parameter to the given input stream, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBinaryStream(String, java.io.InputStream, int):::Sets the designated parameter to the given input stream, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setCharacterStream(String, java.io.Reader, int):::Sets the designated parameter to the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setAsciiStream(String, java.io.InputStream):::Sets the designated parameter to the given input stream:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBinaryStream(String, java.io.InputStream):::Sets the designated parameter to the given input stream:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setCharacterStream(String, java.io.Reader):::Sets the designated parameter to the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBigDecimal(String, BigDecimal):::Sets the designated parameter to the given java.math.BigDecimal value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setString(String, String):::Sets the designated parameter to the given Java String value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBytes(String, byte[]):::Sets the designated parameter to the given Java array of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setTimestamp(String, java.sql.Timestamp):::Sets the designated parameter to the given java.sql.Timestamp value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNull(String, int):::Sets the designated parameter to SQL NULL:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setNull(String, int, String):::Sets the designated parameter to SQL NULL:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setBoolean(String, boolean):::Sets the designated parameter to the given Java boolean value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setByte(String, byte):::Sets the designated parameter to the given Java byte value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setShort(String, short):::Sets the designated parameter to the given Java short value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setInt(String, int):::Sets the designated parameter to the given Java int value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setLong(String, long):::Sets the designated parameter to the given Java long value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setFloat(String, float):::Sets the designated parameter to the given Java float value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#setDouble(String, double):::Sets the designated parameter to the given Java double value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
CachedRowSetImpl#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
CachedRowSetImpl#getObject(int, Class)::: cached row set impl get object:::throw->new->SQLFeatureNotSupportedException
CachedRowSetImpl#getObject(String, Class)::: cached row set impl get object:::throw->new->SQLFeatureNotSupportedException
FilteredRowSetImpl#setFilter(Predicate):::Apply the predicate for this filter:::
FilteredRowSetImpl#getFilter():::Retrieve the filter active for this FilteredRowSet:::return
FilteredRowSetImpl#internalNext():::Over-riding internalNext() implementation:::bool->for->rows->this->getRow->this->size->return
FilteredRowSetImpl#internalPrevious():::Over-riding internalPrevious() implementation:::bool->for->rows->this->getRow->return
FilteredRowSetImpl#internalFirst():::Over-riding internalFirst() implementation:::bool->super->internalFirst->if->return->while->if->p->evaluate->break->super->internalNext->return
FilteredRowSetImpl#internalLast():::Over-riding internalLast() implementation:::bool->super->internalLast->if->return->while->if->p->evaluate->break->super->internalPrevious->return
FilteredRowSetImpl#relative(int):::Moves the cursor the specified number of rows from the current position, with a positive number moving it forward and a negative number moving it backward:::retval->bool->boolval->if->getType->throw->resBundle->handleGetObject->toString->new->SQLException->if->i->while->if->isAfterLast->return->internalNext->else->j->while->if->isBeforeFirst->return->internalPrevious->if->notifyCursorMoved->return
FilteredRowSetImpl#absolute(int):::Moves this CachedRowSetImpl object's cursor to the row number specified:::retval->bool->if->getType->throw->resBundle->handleGetObject->toString->new->SQLException->if->internalFirst->i->while->if->isAfterLast->return->internalNext->else->internalLast->j->while->if->isBeforeFirst->return->internalPrevious->notifyCursorMoved->return
FilteredRowSetImpl#moveToInsertRow():::Moves the cursor for this CachedRowSetImpl object to the insert row:::super->moveToInsertRow
FilteredRowSetImpl#updateInt(int, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given int value:::bool->if->if->p->Integer->valueOf->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateInt
FilteredRowSetImpl#updateInt(String, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given int value:::this->findColumn->updateInt
FilteredRowSetImpl#updateBoolean(int, boolean):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given boolean value:::bool->if->if->p->Boolean->valueOf->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateBoolean
FilteredRowSetImpl#updateBoolean(String, boolean):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given boolean value:::this->findColumn->updateBoolean
FilteredRowSetImpl#updateByte(int, byte):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte value:::bool->if->if->p->Byte->valueOf->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateByte
FilteredRowSetImpl#updateByte(String, byte):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte value:::this->findColumn->updateByte
FilteredRowSetImpl#updateShort(int, short):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given short value:::bool->if->if->p->Short->valueOf->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateShort
FilteredRowSetImpl#updateShort(String, short):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given short value:::this->findColumn->updateShort
FilteredRowSetImpl#updateLong(int, long):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given long value:::bool->if->if->p->Long->valueOf->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateLong
FilteredRowSetImpl#updateLong(String, long):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given long value:::this->findColumn->updateLong
FilteredRowSetImpl#updateFloat(int, float):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given float value:::bool->if->if->p->Float->valueOf->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateFloat
FilteredRowSetImpl#updateFloat(String, float):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given float value:::this->findColumn->updateFloat
FilteredRowSetImpl#updateDouble(int, double):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::bool->if->if->p->Double->valueOf->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateDouble
FilteredRowSetImpl#updateDouble(String, double):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::this->findColumn->updateDouble
FilteredRowSetImpl#updateBigDecimal(int, BigDecimal):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.math.BigDecimal object:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateBigDecimal
FilteredRowSetImpl#updateBigDecimal(String, BigDecimal):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.math.BigDecimal object:::this->findColumn->updateBigDecimal
FilteredRowSetImpl#updateString(int, String):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given String object:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateString
FilteredRowSetImpl#updateString(String, String):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given String object:::this->findColumn->updateString
FilteredRowSetImpl#updateBytes(int, byte[]):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte array:::bool->val->obj_arr->new->ByteArr->for->i->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateBytes
FilteredRowSetImpl#updateBytes(String, byte[]):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte array:::this->findColumn->updateBytes
FilteredRowSetImpl#updateDate(int, java.sql.Date):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Date object:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateDate
FilteredRowSetImpl#updateDate(String, java.sql.Date):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Date object:::this->findColumn->updateDate
FilteredRowSetImpl#updateTime(int, Time):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Time object:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateTime
FilteredRowSetImpl#updateTime(String, Time):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Time object:::this->findColumn->updateTime
FilteredRowSetImpl#updateTimestamp(int, Timestamp):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Timestamp object:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateTimestamp
FilteredRowSetImpl#updateTimestamp(String, Timestamp):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Timestamp object:::this->findColumn->updateTimestamp
FilteredRowSetImpl#updateAsciiStream(int, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given ASCII stream value:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateAsciiStream
FilteredRowSetImpl#updateAsciiStream(String, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given ASCII stream value:::this->findColumn->updateAsciiStream
FilteredRowSetImpl#updateCharacterStream(int, java.io.Reader, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.Reader object:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateCharacterStream
FilteredRowSetImpl#updateCharacterStream(String, java.io.Reader, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.Reader object:::this->findColumn->updateCharacterStream
FilteredRowSetImpl#updateBinaryStream(int, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.InputStream object:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateBinaryStream
FilteredRowSetImpl#updateBinaryStream(String, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.InputStream object:::this->findColumn->updateBinaryStream
FilteredRowSetImpl#updateObject(int, Object):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateObject
FilteredRowSetImpl#updateObject(String, Object):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::this->findColumn->updateObject
FilteredRowSetImpl#updateObject(int, Object, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::bool->if->if->p->evaluate->if->throw->resBundle->handleGetObject->toString->new->SQLException->super->updateObject
FilteredRowSetImpl#updateObject(String, Object, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::this->findColumn->updateObject
FilteredRowSetImpl#insertRow():::Inserts the contents of this CachedRowSetImpl object's insert row into this rowset immediately following the current row:::super->insertRow
FilteredRowSetImpl#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
JdbcRowSetImpl#initMetaData(RowSetMetaData, ResultSetMetaData):::Initializes the given RowSetMetaData object with the values in the given ResultSetMetaData object.:::numCols->rsmd->getColumnCount->md->setColumnCount->for->col
JdbcRowSetImpl#checkState()::: jdbc row set impl check state:::if->throw->resBundle->handleGetObject->toString->new->SQLException
JdbcRowSetImpl#execute():::Creates the internal ResultSet object for which this JdbcRowSet object is a wrapper, effectively making the result set a JavaBeans component:::prepare->setProperties->getParams->decodeParams->ps->executeQuery->notifyRowSetChanged
JdbcRowSetImpl#setProperties(PreparedStatement)::: jdbc row set impl set properties:::try->ps->getEscapeProcessing->setEscapeProcessing->catch->resBundle->handleGetObject->toString->ex->getLocalizedMessage->println->finally->try->ps->getMaxFieldSize->setMaxFieldSize->catch->resBundle->handleGetObject->toString->ex->getLocalizedMessage->println->finally->try->ps->getMaxRows->setMaxRows->catch->resBundle->handleGetObject->toString->ex->getLocalizedMessage->println->finally->try->ps->getQueryTimeout->setQueryTimeout->catch->resBundle->handleGetObject->toString->ex->getLocalizedMessage->println->finally
JdbcRowSetImpl#connect()::: jdbc row set impl connect:::if->return->else->if->getDataSourceName->try->ctx->new->InitialContext->ds->ctx->getDataSourceName->lookup->if->getUsername->getUsername->equals->return->ds->getUsername->getPassword->getConnection->else->return->ds->getConnection->catch->throw->resBundle->handleGetObject->toString->new->SQLException->finally->else->if->getUrl->return->DriverManager->getUrl->getUsername->getPassword->getConnection->else->return
JdbcRowSetImpl#prepare()::: jdbc row set impl prepare:::connect->try->aMap->getTypeMap->if->conn->setTypeMap->conn->getCommand->prepareStatement->catch->resBundle->handleGetObject->toString->ex->getLocalizedMessage->println->if->ps->close->if->conn->close->throw->ex->getMessage->new->SQLException->finally->return
JdbcRowSetImpl#decodeParams(Object[], PreparedStatement)::: jdbc row set impl decode params:::arraySize->param->for->i
JdbcRowSetImpl#next():::Moves the cursor for this rowset's ResultSet object down one row from its current position:::checkState->b->rs->next->notifyCursorMoved->return
JdbcRowSetImpl#close():::Releases this rowset's ResultSet object's database and JDBC resources immediately instead of waiting for this to happen when it is automatically closed:::if->rs->close->if->ps->close->if->conn->close
JdbcRowSetImpl#wasNull():::Reports whether the last column read from this rowset's ResultSet object had a value of SQL NULL:::checkState->return->rs->wasNull
JdbcRowSetImpl#getString(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a String.:::checkState->return->rs->getString
JdbcRowSetImpl#getBoolean(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a boolean.:::checkState->return->rs->getBoolean
JdbcRowSetImpl#getByte(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a byte.:::checkState->return->rs->getByte
JdbcRowSetImpl#getShort(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a short.:::checkState->return->rs->getShort
JdbcRowSetImpl#getInt(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as an int.:::checkState->return->rs->getInt
JdbcRowSetImpl#getLong(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a long.:::checkState->return->rs->getLong
JdbcRowSetImpl#getFloat(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a float.:::checkState->return->rs->getFloat
JdbcRowSetImpl#getDouble(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a double.:::checkState->return->rs->getDouble
JdbcRowSetImpl#getBigDecimal(int, int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.BigDecimal.:::checkState->return->rs->getBigDecimal
JdbcRowSetImpl#getBytes(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a byte array in the Java programming language:::checkState->return->rs->getBytes
JdbcRowSetImpl#getDate(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Date object in the Java programming language.:::checkState->return->rs->getDate
JdbcRowSetImpl#getTime(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Time object in the Java programming language.:::checkState->return->rs->getTime
JdbcRowSetImpl#getTimestamp(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Timestamp object in the Java programming language.:::checkState->return->rs->getTimestamp
JdbcRowSetImpl#getAsciiStream(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a stream of ASCII characters:::checkState->return->rs->getAsciiStream
JdbcRowSetImpl#getUnicodeStream(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as as a stream of Unicode characters:::checkState->return->rs->getUnicodeStream
JdbcRowSetImpl#getBinaryStream(int):::Gets the value of a column in the current row as a stream of the value of the designated column in the current row of this rowset's ResultSet object as a binary stream of uninterpreted bytes:::checkState->return->rs->getBinaryStream
JdbcRowSetImpl#getString(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a String.:::return->findColumn->getString
JdbcRowSetImpl#getBoolean(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a boolean.:::return->findColumn->getBoolean
JdbcRowSetImpl#getByte(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a byte.:::return->findColumn->getByte
JdbcRowSetImpl#getShort(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a short.:::return->findColumn->getShort
JdbcRowSetImpl#getInt(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as an int.:::return->findColumn->getInt
JdbcRowSetImpl#getLong(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a long.:::return->findColumn->getLong
JdbcRowSetImpl#getFloat(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a float.:::return->findColumn->getFloat
JdbcRowSetImpl#getDouble(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a double.:::return->findColumn->getDouble
JdbcRowSetImpl#getBigDecimal(String, int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.math.BigDecimal.:::return->findColumn->getBigDecimal
JdbcRowSetImpl#getBytes(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a byte array in the Java programming language:::return->findColumn->getBytes
JdbcRowSetImpl#getDate(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Date object in the Java programming language.:::return->findColumn->getDate
JdbcRowSetImpl#getTime(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Time object in the Java programming language.:::return->findColumn->getTime
JdbcRowSetImpl#getTimestamp(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Timestamp object.:::return->findColumn->getTimestamp
JdbcRowSetImpl#getAsciiStream(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a stream of ASCII characters:::return->findColumn->getAsciiStream
JdbcRowSetImpl#getUnicodeStream(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a stream of Unicode characters:::return->findColumn->getUnicodeStream
JdbcRowSetImpl#getBinaryStream(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a stream of uninterpreted bytes:::return->findColumn->getBinaryStream
JdbcRowSetImpl#getWarnings():::Returns the first warning reported by calls on this rowset's ResultSet object:::checkState->return->rs->getWarnings
JdbcRowSetImpl#clearWarnings():::Clears all warnings reported on this rowset's ResultSet object:::checkState->rs->clearWarnings
JdbcRowSetImpl#getCursorName():::Gets the name of the SQL cursor used by this rowset's ResultSet object:::checkState->return->rs->getCursorName
JdbcRowSetImpl#getMetaData():::Retrieves the  number, types and properties of this rowset's ResultSet object's columns.:::checkState->try->checkState->catch->prepare->return->ps->getMetaData->finally->return->rs->getMetaData
JdbcRowSetImpl#getObject(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as an Object:::checkState->return->rs->getObject
JdbcRowSetImpl#getObject(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as an Object:::return->findColumn->getObject
JdbcRowSetImpl#findColumn(String):::Maps the given JdbcRowSetImpl column name to its JdbcRowSetImpl column index and reflects this on the internal ResultSet object.:::checkState->return->rs->findColumn
JdbcRowSetImpl#getCharacterStream(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.io.Reader object.:::checkState->return->rs->getCharacterStream
JdbcRowSetImpl#getCharacterStream(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.io.Reader object.:::return->findColumn->getCharacterStream
JdbcRowSetImpl#getBigDecimal(int):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.math.BigDecimal with full precision.:::checkState->return->rs->getBigDecimal
JdbcRowSetImpl#getBigDecimal(String):::Gets the value of the designated column in the current row of this rowset's ResultSet object as a java.math.BigDecimal with full precision.:::return->findColumn->getBigDecimal
JdbcRowSetImpl#isBeforeFirst():::Indicates whether the cursor is before the first row in this rowset's ResultSet object.:::checkState->return->rs->isBeforeFirst
JdbcRowSetImpl#isAfterLast():::Indicates whether the cursor is after the last row in this rowset's ResultSet object.:::checkState->return->rs->isAfterLast
JdbcRowSetImpl#isFirst():::Indicates whether the cursor is on the first row of this rowset's ResultSet object.:::checkState->return->rs->isFirst
JdbcRowSetImpl#isLast():::Indicates whether the cursor is on the last row of this rowset's ResultSet object:::checkState->return->rs->isLast
JdbcRowSetImpl#beforeFirst():::Moves the cursor to the front of this rowset's ResultSet object, just before the first row:::checkState->rs->beforeFirst->notifyCursorMoved
JdbcRowSetImpl#afterLast():::Moves the cursor to the end of this rowset's ResultSet object, just after the last row:::checkState->rs->afterLast->notifyCursorMoved
JdbcRowSetImpl#first():::Moves the cursor to the first row in this rowset's ResultSet object.:::checkState->b->rs->first->notifyCursorMoved->return
JdbcRowSetImpl#last():::Moves the cursor to the last row in this rowset's ResultSet object.:::checkState->b->rs->last->notifyCursorMoved->return
JdbcRowSetImpl#getRow():::Retrieves the current row number:::checkState->return->rs->getRow
JdbcRowSetImpl#absolute(int):::Moves the cursor to the given row number in this rowset's internal ResultSet object:::checkState->b->rs->absolute->notifyCursorMoved->return
JdbcRowSetImpl#relative(int):::Moves the cursor a relative number of rows, either positive or negative:::checkState->b->rs->relative->notifyCursorMoved->return
JdbcRowSetImpl#previous():::Moves the cursor to the previous row in this ResultSet object:::checkState->b->rs->previous->notifyCursorMoved->return
JdbcRowSetImpl#setFetchDirection(int):::Gives a hint as to the direction in which the rows in this ResultSet object will be processed:::checkState->rs->setFetchDirection
JdbcRowSetImpl#getFetchDirection():::Returns the fetch direction for this ResultSet object.:::try->checkState->catch->super->getFetchDirection->finally->return->rs->getFetchDirection
JdbcRowSetImpl#setFetchSize(int):::Gives the JDBC driver a hint as to the number of rows that should be fetched from the database when more rows are needed for this ResultSet object:::checkState->rs->setFetchSize
JdbcRowSetImpl#getType():::Returns the fetch size for this ResultSet object.:::try->checkState->catch->return->super->getType->finally->if->return->super->getType->else->rstype->rs->getType->return
JdbcRowSetImpl#getConcurrency():::Returns the concurrency mode of this rowset's ResultSet object:::try->checkState->catch->super->getConcurrency->finally->return->rs->getConcurrency
JdbcRowSetImpl#rowUpdated():::Indicates whether the current row has been updated:::checkState->return->rs->rowUpdated
JdbcRowSetImpl#rowInserted():::Indicates whether the current row has had an insertion:::checkState->return->rs->rowInserted
JdbcRowSetImpl#rowDeleted():::Indicates whether a row has been deleted:::checkState->return->rs->rowDeleted
JdbcRowSetImpl#updateNull(int):::Gives a nullable column a null value:::checkState->checkTypeConcurrency->rs->updateNull
JdbcRowSetImpl#updateBoolean(int, boolean):::Updates the designated column with a boolean value:::checkState->checkTypeConcurrency->rs->updateBoolean
JdbcRowSetImpl#updateByte(int, byte):::Updates the designated column with a byte value:::checkState->checkTypeConcurrency->rs->updateByte
JdbcRowSetImpl#updateShort(int, short):::Updates the designated column with a short value:::checkState->checkTypeConcurrency->rs->updateShort
JdbcRowSetImpl#updateInt(int, int):::Updates the designated column with an int value:::checkState->checkTypeConcurrency->rs->updateInt
JdbcRowSetImpl#updateLong(int, long):::Updates the designated column with a long value:::checkState->checkTypeConcurrency->rs->updateLong
JdbcRowSetImpl#updateFloat(int, float):::Updates the designated column with a float value:::checkState->checkTypeConcurrency->rs->updateFloat
JdbcRowSetImpl#updateDouble(int, double):::Updates the designated column with a double value:::checkState->checkTypeConcurrency->rs->updateDouble
JdbcRowSetImpl#updateBigDecimal(int, BigDecimal):::Updates the designated column with a java.math.BigDecimal value:::checkState->checkTypeConcurrency->rs->updateBigDecimal
JdbcRowSetImpl#updateString(int, String):::Updates the designated column with a String value:::checkState->checkTypeConcurrency->rs->updateString
JdbcRowSetImpl#updateBytes(int, byte[]):::Updates the designated column with a byte array value:::checkState->checkTypeConcurrency->rs->updateBytes
JdbcRowSetImpl#updateDate(int, java.sql.Date):::Updates the designated column with a java.sql.Date value:::checkState->checkTypeConcurrency->rs->updateDate
JdbcRowSetImpl#updateTime(int, java.sql.Time):::Updates the designated column with a java.sql.Time value:::checkState->checkTypeConcurrency->rs->updateTime
JdbcRowSetImpl#updateTimestamp(int, java.sql.Timestamp):::Updates the designated column with a java.sql.Timestamp value:::checkState->checkTypeConcurrency->rs->updateTimestamp
JdbcRowSetImpl#updateAsciiStream(int, java.io.InputStream, int):::Updates the designated column with an ascii stream value:::checkState->checkTypeConcurrency->rs->updateAsciiStream
JdbcRowSetImpl#updateBinaryStream(int, java.io.InputStream, int):::Updates the designated column with a binary stream value:::checkState->checkTypeConcurrency->rs->updateBinaryStream
JdbcRowSetImpl#updateCharacterStream(int, java.io.Reader, int):::Updates the designated column with a character stream value:::checkState->checkTypeConcurrency->rs->updateCharacterStream
JdbcRowSetImpl#updateObject(int, Object, int):::Updates the designated column with an Object value:::checkState->checkTypeConcurrency->rs->updateObject
JdbcRowSetImpl#updateObject(int, Object):::Updates the designated column with an Object value:::checkState->checkTypeConcurrency->rs->updateObject
JdbcRowSetImpl#updateNull(String):::Updates the designated column with a null value:::findColumn->updateNull
JdbcRowSetImpl#updateBoolean(String, boolean):::Updates the designated column with a boolean value:::findColumn->updateBoolean
JdbcRowSetImpl#updateByte(String, byte):::Updates the designated column with a byte value:::findColumn->updateByte
JdbcRowSetImpl#updateShort(String, short):::Updates the designated column with a short value:::findColumn->updateShort
JdbcRowSetImpl#updateInt(String, int):::Updates the designated column with an int value:::findColumn->updateInt
JdbcRowSetImpl#updateLong(String, long):::Updates the designated column with a long value:::findColumn->updateLong
JdbcRowSetImpl#updateFloat(String, float):::Updates the designated column with a float  value:::findColumn->updateFloat
JdbcRowSetImpl#updateDouble(String, double):::Updates the designated column with a double value:::findColumn->updateDouble
JdbcRowSetImpl#updateBigDecimal(String, BigDecimal):::Updates the designated column with a java.sql.BigDecimal value:::findColumn->updateBigDecimal
JdbcRowSetImpl#updateString(String, String):::Updates the designated column with a String value:::findColumn->updateString
JdbcRowSetImpl#updateBytes(String, byte[]):::Updates the designated column with a boolean value:::findColumn->updateBytes
JdbcRowSetImpl#updateDate(String, java.sql.Date):::Updates the designated column with a java.sql.Date value:::findColumn->updateDate
JdbcRowSetImpl#updateTime(String, java.sql.Time):::Updates the designated column with a java.sql.Time value:::findColumn->updateTime
JdbcRowSetImpl#updateTimestamp(String, java.sql.Timestamp):::Updates the designated column with a java.sql.Timestamp value:::findColumn->updateTimestamp
JdbcRowSetImpl#updateAsciiStream(String, java.io.InputStream, int):::Updates the designated column with an ascii stream value:::findColumn->updateAsciiStream
JdbcRowSetImpl#updateBinaryStream(String, java.io.InputStream, int):::Updates the designated column with a binary stream value:::findColumn->updateBinaryStream
JdbcRowSetImpl#updateCharacterStream(String, java.io.Reader, int):::Updates the designated column with a character stream value:::findColumn->updateCharacterStream
JdbcRowSetImpl#updateObject(String, Object, int):::Updates the designated column with an Object value:::findColumn->updateObject
JdbcRowSetImpl#updateObject(String, Object):::Updates the designated column with an Object value:::findColumn->updateObject
JdbcRowSetImpl#insertRow():::Inserts the contents of the insert row into this ResultSet object and into the database and also notifies listeners that a row has changed:::checkState->rs->insertRow->notifyRowChanged
JdbcRowSetImpl#updateRow():::Updates the underlying database with the new contents of the current row of this rowset's ResultSet object and notifies listeners that a row has changed:::checkState->rs->updateRow->notifyRowChanged
JdbcRowSetImpl#deleteRow():::Deletes the current row from this rowset's ResultSet object and from the underlying database and also notifies listeners that a row has changed:::checkState->rs->deleteRow->notifyRowChanged
JdbcRowSetImpl#refreshRow():::Refreshes the current row of this rowset's ResultSet object with its most recent value in the database:::checkState->rs->refreshRow
JdbcRowSetImpl#cancelRowUpdates():::Cancels the updates made to the current row in this ResultSet object and notifies listeners that a row has changed:::checkState->rs->cancelRowUpdates->notifyRowChanged
JdbcRowSetImpl#moveToInsertRow():::Moves the cursor to the insert row:::checkState->rs->moveToInsertRow
JdbcRowSetImpl#moveToCurrentRow():::Moves the cursor to the remembered cursor position, usually the current row:::checkState->rs->moveToCurrentRow
JdbcRowSetImpl#getStatement():::Returns the Statement object that produced this ResultSet object:::if->return->rs->getStatement->else->return
JdbcRowSetImpl#getObject(int, java.util.Map>):::Returns the value of the designated column in the current row of this rowset's ResultSet object as an Object:::checkState->return->rs->getObject
JdbcRowSetImpl#getRef(int):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a Ref object.:::checkState->return->rs->getRef
JdbcRowSetImpl#getBlob(int):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a Blob object.:::checkState->return->rs->getBlob
JdbcRowSetImpl#getClob(int):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a Clob object.:::checkState->return->rs->getClob
JdbcRowSetImpl#getArray(int):::Returns the value of the designated column in the current row of this rowset's ResultSet object as an Array object.:::checkState->return->rs->getArray
JdbcRowSetImpl#getObject(String, java.util.Map>):::Returns the value of the designated column in the current row of this rowset's ResultSet object as an Object:::return->findColumn->getObject
JdbcRowSetImpl#getRef(String):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a Ref object.:::return->findColumn->getRef
JdbcRowSetImpl#getBlob(String):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a Blob object.:::return->findColumn->getBlob
JdbcRowSetImpl#getClob(String):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a Clob object.:::return->findColumn->getClob
JdbcRowSetImpl#getArray(String):::Returns the value of the designated column in the current row of this rowset's ResultSet object as an Array object.:::return->findColumn->getArray
JdbcRowSetImpl#getDate(int, Calendar):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Date object:::checkState->return->rs->getDate
JdbcRowSetImpl#getDate(String, Calendar):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Date object:::return->findColumn->getDate
JdbcRowSetImpl#getTime(int, Calendar):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Time object:::checkState->return->rs->getTime
JdbcRowSetImpl#getTime(String, Calendar):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Time object:::return->findColumn->getTime
JdbcRowSetImpl#getTimestamp(int, Calendar):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Timestamp object:::checkState->return->rs->getTimestamp
JdbcRowSetImpl#getTimestamp(String, Calendar):::Returns the value of the designated column in the current row of this rowset's ResultSet object as a java.sql.Timestamp object:::return->findColumn->getTimestamp
JdbcRowSetImpl#updateRef(int, java.sql.Ref):::Sets the designated column in either the current row or the insert row of this JdbcRowSetImpl object with the given double value:::checkState->rs->updateRef
JdbcRowSetImpl#updateRef(String, java.sql.Ref):::Sets the designated column in either the current row or the insert row of this JdbcRowSetImpl object with the given double value:::findColumn->updateRef
JdbcRowSetImpl#updateClob(int, Clob):::Sets the designated column in either the current row or the insert row of this JdbcRowSetImpl object with the given double value:::checkState->rs->updateClob
JdbcRowSetImpl#updateClob(String, Clob):::Sets the designated column in either the current row or the insert row of this JdbcRowSetImpl object with the given double value:::findColumn->updateClob
JdbcRowSetImpl#updateBlob(int, Blob):::Sets the designated column in either the current row or the insert row of this JdbcRowSetImpl object with the given java.sql.Blob value:::checkState->rs->updateBlob
JdbcRowSetImpl#updateBlob(String, Blob):::Sets the designated column in either the current row or the insert row of this JdbcRowSetImpl object with the given java.sql.Blob  value:::findColumn->updateBlob
JdbcRowSetImpl#updateArray(int, Array):::Sets the designated column in either the current row or the insert row of this JdbcRowSetImpl object with the given java.sql.Array values:::checkState->rs->updateArray
JdbcRowSetImpl#updateArray(String, Array):::Sets the designated column in either the current row or the insert row of this JdbcRowSetImpl object with the given java.sql.Array value:::findColumn->updateArray
JdbcRowSetImpl#getURL(int):::Provide interface coverage for getURL(int) in ResultSet->RowSet:::checkState->return->rs->getURL
JdbcRowSetImpl#getURL(String):::Provide interface coverage for getURL(String) in ResultSet->RowSet:::return->findColumn->getURL
JdbcRowSetImpl#getRowSetWarnings():::Return the RowSetWarning object for the current row of a JdbcRowSetImpl:::return
JdbcRowSetImpl#unsetMatchColumn(int[]):::Unsets the designated parameter to the given int array:::i_val->for->j->for->i
JdbcRowSetImpl#unsetMatchColumn(String[]):::Unsets the designated parameter to the given String array:::for->j->for->i
JdbcRowSetImpl#getMatchColumnNames():::Retrieves the column name as String array that was set using setMatchColumn(String []) for this rowset.:::str_temp->strMatchColumns->size->new->StringArr->if->strMatchColumns->get->throw->resBundle->handleGetObject->toString->new->SQLException->strMatchColumns->copyInto->return
JdbcRowSetImpl#getMatchColumnIndexes():::Retrieves the column id as int array that was set using setMatchColumn(int []) for this rowset.:::int_temp->iMatchColumns->size->new->IntegerArr->i_temp->iMatchColumns->size->new->intArr->i_val->iMatchColumns->get->if->throw->resBundle->handleGetObject->toString->new->SQLException->iMatchColumns->copyInto->for->i->return
JdbcRowSetImpl#setMatchColumn(int[]):::Sets the designated parameter to the given int array:::for->j->for->i
JdbcRowSetImpl#setMatchColumn(String[]):::Sets the designated parameter to the given String array:::for->j->for->i
JdbcRowSetImpl#setMatchColumn(int):::Sets the designated parameter to the given int object:::if->throw->resBundle->handleGetObject->toString->new->SQLException->else->iMatchColumns->Integer->valueOf->set
JdbcRowSetImpl#setMatchColumn(String):::Sets the designated parameter to the given String object:::if->columnName->trim->equals->throw->resBundle->handleGetObject->toString->new->SQLException->else->strMatchColumns->set
JdbcRowSetImpl#unsetMatchColumn(int):::Unsets the designated parameter to the given int object:::if->iMatchColumns->get->Integer->valueOf->equals->throw->resBundle->handleGetObject->toString->new->SQLException->else->if->strMatchColumns->get->throw->resBundle->handleGetObject->toString->new->SQLException->else->iMatchColumns->Integer->valueOf->set
JdbcRowSetImpl#unsetMatchColumn(String):::Unsets the designated parameter to the given String object:::columnName->trim->if->strMatchColumns->get->equals->throw->resBundle->handleGetObject->toString->new->SQLException->else->if->iMatchColumns->get->throw->resBundle->handleGetObject->toString->new->SQLException->else->strMatchColumns->set
JdbcRowSetImpl#getDatabaseMetaData():::Retrieves the DatabaseMetaData associated with the connection handle associated with this JdbcRowSet object.:::con->connect->return->con->getMetaData
JdbcRowSetImpl#getParameterMetaData():::Retrieves the ParameterMetaData associated with the connection handle associated with this JdbcRowSet object.:::prepare->return->ps->getParameterMetaData
JdbcRowSetImpl#commit():::Commits all updates in this JdbcRowSet object by wrapping the internal Connection object and calling its commit method:::conn->commit->if->conn->getHoldability
JdbcRowSetImpl#setAutoCommit(boolean):::Sets auto-commit on the internal Connection object with this JdbcRowSet:::if->conn->setAutoCommit->else->connect->conn->setAutoCommit
JdbcRowSetImpl#getAutoCommit():::Returns the auto-commit status with this JdbcRowSet.:::return->conn->getAutoCommit
JdbcRowSetImpl#rollback():::Rolls back all the updates in this JdbcRowSet object by wrapping the internal Connection object and calling its rollback method:::conn->rollback
JdbcRowSetImpl#rollback(Savepoint):::Rollbacks all the updates in the JdbcRowSet back to the last Savepoint transaction marker:::conn->rollback
JdbcRowSetImpl#setParams()::: jdbc row set impl set params:::if->setType->setConcurrency->else->rs->getType->setType->rs->getConcurrency->setConcurrency
JdbcRowSetImpl#checkTypeConcurrency()::: jdbc row set impl check type concurrency:::if->rs->getType->rs->getConcurrency->throw->resBundle->handleGetObject->toString->new->SQLException
JdbcRowSetImpl#getConnection()::: jdbc row set impl get connection:::return
JdbcRowSetImpl#setConnection(Connection)::: jdbc row set impl set connection:::
JdbcRowSetImpl#getPreparedStatement()::: jdbc row set impl get prepared statement:::return
JdbcRowSetImpl#setPreparedStatement(PreparedStatement):::Sets this JdbcRowSet object's preparedtsatement property to the given PreparedStatemennt object.:::
JdbcRowSetImpl#getResultSet()::: jdbc row set impl get result set:::checkState->return
JdbcRowSetImpl#setResultSet(ResultSet):::Sets this JdbcRowSet object's resultset property to the given ResultSet object.:::
JdbcRowSetImpl#setCommand(String):::Sets this JdbcRowSet object's command property to the given String object and clears the parameters, if any, that were set for the previous command:::if->getCommand->if->getCommand->equals->super->setCommand->else->super->setCommand
JdbcRowSetImpl#setDataSourceName(String):::Sets the dataSourceName property for this JdbcRowSet object to the given logical name and sets this JdbcRowSet object's Url property to null:::if->getDataSourceName->if->getDataSourceName->equals->super->setDataSourceName->else->super->setDataSourceName
JdbcRowSetImpl#setUrl(String)::: jdbc row set impl set url:::if->getUrl->if->getUrl->equals->super->setUrl->else->super->setUrl
JdbcRowSetImpl#setUsername(String):::Sets the username property for this JdbcRowSet object to the given user name:::if->getUsername->if->getUsername->equals->super->setUsername->else->super->setUsername
JdbcRowSetImpl#setPassword(String):::Sets the password property for this JdbcRowSet object to the given String object:::if->getPassword->if->getPassword->equals->super->setPassword->else->super->setPassword
JdbcRowSetImpl#setType(int)::: jdbc row set impl set type:::oldVal->try->getType->catch->finally->if->super->setType
JdbcRowSetImpl#setConcurrency(int):::Sets the concurrency for this RowSet object to the specified concurrency:::oldVal->try->getConcurrency->catch->finally->if->super->setConcurrency
JdbcRowSetImpl#getSQLXML(int):::Retrieves the value of the designated SQL XML parameter as a SQLXML object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getSQLXML(String):::Retrieves the value of the designated SQL XML parameter as a SQLXML object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getRowId(int):::Retrieves the value of the designated column in the current row of this ResultSet object as a java.sql.RowId object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getRowId(String):::Retrieves the value of the designated column in the current row of this ResultSet object as a java.sql.RowId object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateRowId(int, RowId):::Updates the designated column with a RowId value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateRowId(String, RowId):::Updates the designated column with a RowId value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getHoldability():::Retrieves the holdability of this ResultSet object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#isClosed():::Retrieves whether this ResultSet object has been closed:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNString(int, String):::This method is used for updating columns that support National Character sets:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNString(String, String):::This method is used for updating columns that support National Character sets:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNClob(int, NClob)::: jdbc row set impl update clob:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNClob(String, NClob):::This method is used for updating SQL NCLOB  type that maps to java.sql.Types.NCLOB:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getNClob(int):::Retrieves the value of the designated column in the current row of this ResultSet object as a NClob object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getNClob(String):::Retrieves the value of the designated column in the current row of this ResultSet object as a NClob object in the Java programming language.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#unwrap(java.lang.Class)::: jdbc row set impl unwrap:::return
JdbcRowSetImpl#isWrapperFor(Class)::: jdbc row set impl is wrapper for:::return
JdbcRowSetImpl#setSQLXML(int, SQLXML):::Sets the designated parameter to the given java.sql.SQLXML object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setSQLXML(String, SQLXML):::Sets the designated parameter to the given java.sql.SQLXML object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setRowId(int, RowId):::Sets the designated parameter to the given java.sql.RowId object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setRowId(String, RowId):::Sets the designated parameter to the given java.sql.RowId object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNString(int, String):::Sets the designated parameter to the given String object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNCharacterStream(int, Reader):::Sets the designated parameter in this RowSet object's command to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNClob(String, NClob):::Sets the designated parameter to a java.sql.NClob object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getNCharacterStream(int):::Retrieves the value of the designated column in the current row of this ResultSet object as a java.io.Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getNCharacterStream(String):::Retrieves the value of the designated column in the current row of this ResultSet object as a java.io.Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateSQLXML(int, SQLXML):::Updates the designated column with a java.sql.SQLXML value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateSQLXML(String, SQLXML):::Updates the designated column with a java.sql.SQLXML value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getNString(int):::Retrieves the value of the designated column in the current row of this ResultSet object as a String in the Java programming language:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getNString(String):::Retrieves the value of the designated column in the current row of this ResultSet object as a String in the Java programming language:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNCharacterStream(int, java.io.Reader, long):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNCharacterStream(String, java.io.Reader, long):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNCharacterStream(int, java.io.Reader):::Updates the designated column with a character stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNCharacterStream(String, java.io.Reader):::Updates the designated column with a character stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateBlob(int, InputStream, long):::Updates the designated column using the given input stream, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateBlob(String, InputStream, long):::Updates the designated column using the given input stream, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateBlob(int, InputStream):::Updates the designated column using the given input stream:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateBlob(String, InputStream):::Updates the designated column using the given input stream:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateClob(int, Reader, long):::Updates the designated column using the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateClob(String, Reader, long):::Updates the designated column using the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateClob(int, Reader):::Updates the designated column using the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateClob(String, Reader):::Updates the designated column using the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNClob(int, Reader, long):::Updates the designated column using the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNClob(String, Reader, long):::Updates the designated column using the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNClob(int, Reader):::Updates the designated column using the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateNClob(String, Reader):::Updates the designated column using the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateAsciiStream(int, java.io.InputStream, long):::Updates the designated column with an ascii stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateBinaryStream(int, java.io.InputStream, long):::Updates the designated column with a binary stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateCharacterStream(int, java.io.Reader, long):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateAsciiStream(String, java.io.InputStream, long):::Updates the designated column with an ascii stream value, which will have the specified number of bytes.:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateAsciiStream(int, java.io.InputStream):::Updates the designated column with an ascii stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateAsciiStream(String, java.io.InputStream):::Updates the designated column with an ascii stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateBinaryStream(String, java.io.InputStream, long):::Updates the designated column with a binary stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateBinaryStream(int, java.io.InputStream):::Updates the designated column with a binary stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateBinaryStream(String, java.io.InputStream):::Updates the designated column with a binary stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateCharacterStream(String, java.io.Reader, long):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateCharacterStream(int, java.io.Reader):::Updates the designated column with a character stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#updateCharacterStream(String, java.io.Reader):::Updates the designated column with a character stream value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setURL(int, java.net.URL):::Sets the designated parameter to the given java.net.URL value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNClob(int, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNClob(String, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNClob(String, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNClob(int, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNClob(int, NClob):::Sets the designated parameter to a java.sql.NClob object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNString(String, String):::Sets the designated parameter to the given String object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNCharacterStream(int, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNCharacterStream(String, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNCharacterStream(String, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setTimestamp(String, java.sql.Timestamp, Calendar):::Sets the designated parameter to the given java.sql.Timestamp value, using the given Calendar object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setClob(String, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setClob(String, Clob):::Sets the designated parameter to the given java.sql.Clob object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setClob(String, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setDate(String, java.sql.Date):::Sets the designated parameter to the given java.sql.Date value using the default time zone of the virtual machine that is running the application:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setDate(String, java.sql.Date, Calendar):::Sets the designated parameter to the given java.sql.Date value, using the given Calendar object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setTime(String, java.sql.Time):::Sets the designated parameter to the given java.sql.Time value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setTime(String, java.sql.Time, Calendar):::Sets the designated parameter to the given java.sql.Time value, using the given Calendar object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setClob(int, Reader):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setClob(int, Reader, long):::Sets the designated parameter to a Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBlob(int, InputStream, long):::Sets the designated parameter to an InputStream object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBlob(int, InputStream):::Sets the designated parameter to an InputStream object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBlob(String, InputStream, long):::Sets the designated parameter to an InputStream object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBlob(String, Blob):::Sets the designated parameter to the given java.sql.Blob object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBlob(String, InputStream):::Sets the designated parameter to an InputStream object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setObject(String, Object, int, int):::Sets the value of the designated parameter with the given object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setObject(String, Object, int):::Sets the value of the designated parameter with the given object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setObject(String, Object):::Sets the value of the designated parameter with the given object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setAsciiStream(String, java.io.InputStream, int):::Sets the designated parameter to the given input stream, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBinaryStream(String, java.io.InputStream, int):::Sets the designated parameter to the given input stream, which will have the specified number of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setCharacterStream(String, java.io.Reader, int):::Sets the designated parameter to the given Reader object, which is the given number of characters long:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setAsciiStream(String, java.io.InputStream):::Sets the designated parameter to the given input stream:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBinaryStream(String, java.io.InputStream):::Sets the designated parameter to the given input stream:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setCharacterStream(String, java.io.Reader):::Sets the designated parameter to the given Reader object:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBigDecimal(String, BigDecimal):::Sets the designated parameter to the given java.math.BigDecimal value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setString(String, String):::Sets the designated parameter to the given Java String value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBytes(String, byte[]):::Sets the designated parameter to the given Java array of bytes:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setTimestamp(String, java.sql.Timestamp):::Sets the designated parameter to the given java.sql.Timestamp value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNull(String, int):::Sets the designated parameter to SQL NULL:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setNull(String, int, String):::Sets the designated parameter to SQL NULL:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setBoolean(String, boolean):::Sets the designated parameter to the given Java boolean value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setByte(String, byte):::Sets the designated parameter to the given Java byte value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setShort(String, short):::Sets the designated parameter to the given Java short value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setInt(String, int):::Sets the designated parameter to the given Java int value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setLong(String, long):::Sets the designated parameter to the given Java long value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setFloat(String, float):::Sets the designated parameter to the given Java float value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#setDouble(String, double):::Sets the designated parameter to the given Java double value:::throw->resBundle->handleGetObject->toString->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->finally
JdbcRowSetImpl#getObject(int, Class)::: jdbc row set impl get object:::throw->new->SQLFeatureNotSupportedException
JdbcRowSetImpl#getObject(String, Class)::: jdbc row set impl get object:::throw->new->SQLFeatureNotSupportedException
JdbcRowSetResourceBundle#getJdbcRowSetResourceBundle():::This method is used to get a handle to the initialized instance of this class:::if->synchronized->if->new->JdbcRowSetResourceBundle->return
JdbcRowSetResourceBundle#getKeys():::This method returns an enumerated handle of the keys which correspond to values translated to various locales.:::return->propResBundle->getKeys
JdbcRowSetResourceBundle#handleGetObject(String):::This method takes the key as an argument and returns the corresponding value reading it from the Resource Bundle loaded earlier.:::return->propResBundle->handleGetObject
JoinRowSetImpl#addRowSet(Joinable):::Adds the given RowSet object to this JoinRowSet object:::boolColId->boolColName->cRowset->if->throw->resBundle->handleGetObject->toString->new->SQLException->if->new->CachedRowSetImpl->cRowset->populate->if->cRowset->size->throw->resBundle->handleGetObject->toString->new->SQLException->try->matchColumnCount->for->i->rowset->getMatchColumnIndexes->pCol->new->intArr->for->i->cRowset->setMatchColumn->catch->finally->else->if->cRowset->size->throw->resBundle->handleGetObject->toString->new->SQLException->try->cRowset->getMatchColumnIndexes->catch->finally->try->cRowset->getMatchColumnNames->catch->finally->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->if->indices->new->ArrayList<>->for->i->cRowset->getMatchColumnNames->indexes->indices->size->new->intArr->for->i->indices->size->cRowset->setMatchColumn->else->initJOIN
JoinRowSetImpl#addRowSet(RowSet, int):::Adds the given RowSet object to the JOIN relation and sets the designated column as the match column:::setMatchColumn->addRowSet
JoinRowSetImpl#addRowSet(RowSet, String):::Adds the given RowSet object to the JOIN relationship and sets the designated column as the match column:::setMatchColumn->addRowSet
JoinRowSetImpl#addRowSet(RowSet[], int[]):::Adds the given RowSet objects to the JOIN relationship and sets the designated columns as the match columns:::if->throw->resBundle->handleGetObject->toString->new->SQLException->else->for->i
JoinRowSetImpl#addRowSet(RowSet[], String[]):::Adds the given RowSet objects to the JOIN relationship and sets the designated columns as the match columns:::if->throw->resBundle->handleGetObject->toString->new->SQLException->else->for->i
JoinRowSetImpl#getRowSets():::Returns a Collection of the RowSet object instances currently residing with the instance of the JoinRowSet object instance:::return
JoinRowSetImpl#getRowSetNames():::Returns a string array of the RowSet names currently residing with the JoinRowSet object instance.:::arr->vecTableNames->toArray->strArr->new->StringArr->for->i->return
JoinRowSetImpl#toCachedRowSet():::Creates a separate CachedRowSet object that contains the data in this JoinRowSet object:::return
JoinRowSetImpl#supportsCrossJoin():::Returns true if this JoinRowSet object supports an SQL CROSS_JOIN and false if it does not.:::return
JoinRowSetImpl#supportsInnerJoin():::Returns true if this JoinRowSet object supports an SQL INNER_JOIN and false if it does not.:::return
JoinRowSetImpl#supportsLeftOuterJoin():::Returns true if this JoinRowSet object supports an SQL LEFT_OUTER_JOIN and false if it does not.:::return
JoinRowSetImpl#supportsRightOuterJoin():::Returns true if this JoinRowSet object supports an SQL RIGHT_OUTER_JOIN and false if it does not.:::return
JoinRowSetImpl#supportsFullJoin():::Returns true if this JoinRowSet object supports an SQL FULL_JOIN and false if it does not.:::return
JoinRowSetImpl#setJoinType(int):::Sets the type of SQL JOIN that this JoinRowSet object will use:::if->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->Intgr->Integer->valueOf->vecJoinType->add->else->throw->resBundle->handleGetObject->toString->new->SQLException
JoinRowSetImpl#checkforMatchColumn(Joinable):::This checks for a match column for whether it exists or not.:::i->rs->getMatchColumnIndexes->if->return->return
JoinRowSetImpl#initJOIN(CachedRowSet):::Internal initialization of JoinRowSet.:::try->cRowset->crsTemp->new->CachedRowSetImpl->rsmd->new->RowSetMetaDataImpl->if->vecRowSetsInJOIN->isEmpty->rowset->createCopy->crsInternal->cRowset->getMetaData->setMetaData->vecRowSetsInJOIN->add->else->if->vecRowSetsInJOIN->size->vecJoinType->size->setJoinType->else->if->vecRowSetsInJOIN->size->vecJoinType->size->vecTableNames->crsInternal->getTableName->add->vecTableNames->cRowset->getTableName->add->rowCount2->cRowset->size->rowCount1->crsInternal->size->matchColumnCount->for->i->crsInternal->getMatchColumnIndexes->rsmd->crsInternal->getMetaData->getColumnCount->cRowset->getMetaData->getColumnCount->setColumnCount->crsTemp->setMetaData->crsInternal->beforeFirst->cRowset->beforeFirst->for->i->crsTemp->setMetaData->crsTemp->setOriginal->pCol->new->intArr->for->i->crsTemp->createCopy->crsInternal->setMatchColumn->crsInternal->setMetaData->vecRowSetsInJOIN->add->catch->sqle->printStackTrace->throw->resBundle->handleGetObject->toString->new->SQLException->e->printStackTrace->throw->resBundle->handleGetObject->toString->new->SQLException->finally
JoinRowSetImpl#getWhereClause():::Return a SQL-like description of the WHERE clause being used in a JoinRowSet object instance:::strWhereClause->whereClause->tabName->strTabName->sz->cols->j->crs->vecRowSetsInJOIN->size->for->i->strWhereClause->strWhereClause->lastIndexOf->substring->strWhereClause->concat->strWhereClause->concat->strWhereClause->strWhereClause->lastIndexOf->substring->strWhereClause->concat->for->i->return
JoinRowSetImpl#next():::Moves the cursor down one row from its current position and returns true if the new cursor position is a valid row:::return->crsInternal->next
JoinRowSetImpl#close():::Releases the current contents of this rowset, discarding  outstanding updates:::crsInternal->close
JoinRowSetImpl#wasNull():::Reports whether the last column read was SQL NULL:::return->crsInternal->wasNull
JoinRowSetImpl#getString(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a String object.:::return->crsInternal->getString
JoinRowSetImpl#getBoolean(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a boolean value.:::return->crsInternal->getBoolean
JoinRowSetImpl#getByte(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a byte value.:::return->crsInternal->getByte
JoinRowSetImpl#getShort(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a short value.:::return->crsInternal->getShort
JoinRowSetImpl#getInt(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a short value.:::return->crsInternal->getInt
JoinRowSetImpl#getLong(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a long value.:::return->crsInternal->getLong
JoinRowSetImpl#getFloat(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a float value.:::return->crsInternal->getFloat
JoinRowSetImpl#getDouble(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a double value.:::return->crsInternal->getDouble
JoinRowSetImpl#getBigDecimal(int, int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.math.BigDecimal object:::return->crsInternal->getBigDecimal
JoinRowSetImpl#getBytes(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a byte array value.:::return->crsInternal->getBytes
JoinRowSetImpl#getDate(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Date object.:::return->crsInternal->getDate
JoinRowSetImpl#getTime(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Time object.:::return->crsInternal->getTime
JoinRowSetImpl#getTimestamp(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Timestamp object.:::return->crsInternal->getTimestamp
JoinRowSetImpl#getAsciiStream(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Timestamp object.:::return->crsInternal->getAsciiStream
JoinRowSetImpl#getUnicodeStream(int):::A column value can be retrieved as a stream of Unicode characters and then read in chunks from the stream:::return->crsInternal->getUnicodeStream
JoinRowSetImpl#getBinaryStream(int):::A column value can be retrieved as a stream of uninterpreted bytes and then read in chunks from the stream:::return->crsInternal->getBinaryStream
JoinRowSetImpl#getString(String):::Retrieves the value stored in the designated column of the current row as a String object.:::return->crsInternal->getString
JoinRowSetImpl#getBoolean(String):::Retrieves the value stored in the designated column of the current row as a boolean value.:::return->crsInternal->getBoolean
JoinRowSetImpl#getByte(String):::Retrieves the value stored in the designated column of the current row as a byte value.:::return->crsInternal->getByte
JoinRowSetImpl#getShort(String):::Retrieves the value stored in the designated column of the current row as a short value.:::return->crsInternal->getShort
JoinRowSetImpl#getInt(String):::Retrieves the value stored in the designated column of the current row as an int value.:::return->crsInternal->getInt
JoinRowSetImpl#getLong(String):::Retrieves the value stored in the designated column of the current row as a long value.:::return->crsInternal->getLong
JoinRowSetImpl#getFloat(String):::Retrieves the value stored in the designated column of the current row as a float value.:::return->crsInternal->getFloat
JoinRowSetImpl#getDouble(String):::Retrieves the value stored in the designated column of the current row as a double value.:::return->crsInternal->getDouble
JoinRowSetImpl#getBigDecimal(String, int):::Retrieves the value stored in the designated column of the current row as a java.math.BigDecimal object.:::return->crsInternal->getBigDecimal
JoinRowSetImpl#getBytes(String):::Retrieves the value stored in the designated column of the current row as a byte array:::return->crsInternal->getBytes
JoinRowSetImpl#getDate(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Date object.:::return->crsInternal->getDate
JoinRowSetImpl#getTime(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Time object.:::return->crsInternal->getTime
JoinRowSetImpl#getTimestamp(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Timestamp object.:::return->crsInternal->getTimestamp
JoinRowSetImpl#getAsciiStream(String):::This method is not supported, and it will throw an UnsupportedOperationException if it is called:::return->crsInternal->getAsciiStream
JoinRowSetImpl#getUnicodeStream(String):::Retrieves the value stored in the designated column of the current row as a java.io.InputStream object:::return->crsInternal->getUnicodeStream
JoinRowSetImpl#getBinaryStream(String):::Retrieves the value stored in the designated column of the current row as a java.io.InputStream object:::return->crsInternal->getBinaryStream
JoinRowSetImpl#getWarnings()::: join row set impl get warnings:::return->crsInternal->getWarnings
JoinRowSetImpl#clearWarnings():::Throws an UnsupportedOperationException if called:::crsInternal->clearWarnings
JoinRowSetImpl#getCursorName():::Retrieves the name of the SQL cursor used by this JoinRowSetImpl object:::return->crsInternal->getCursorName
JoinRowSetImpl#getMetaData():::Retrieves the ResultSetMetaData object that contains information about this CachedRowsSet object:::return->crsInternal->getMetaData
JoinRowSetImpl#getObject(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as an Object value:::return->crsInternal->getObject
JoinRowSetImpl#getObject(int, java.util.Map>):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as an Object value:::return->crsInternal->getObject
JoinRowSetImpl#getObject(String):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as an Object value:::return->crsInternal->getObject
JoinRowSetImpl#getObject(String, java.util.Map>):::Retrieves the value of the designated column in this JoinRowSetImpl object as an Object in the Java programming lanugage, using the given java.util.Map object to custom map the value if appropriate.:::return->crsInternal->getObject
JoinRowSetImpl#getCharacterStream(int):::Retrieves the value stored in the designated column of the current row as a java.io.Reader object:::return->crsInternal->getCharacterStream
JoinRowSetImpl#getCharacterStream(String):::Retrieves the value stored in the designated column of the current row as a java.io.Reader object:::return->crsInternal->getCharacterStream
JoinRowSetImpl#getBigDecimal(int):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.math.BigDecimal object.:::return->crsInternal->getBigDecimal
JoinRowSetImpl#getBigDecimal(String):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.math.BigDecimal object.:::return->crsInternal->getBigDecimal
JoinRowSetImpl#size():::Returns the number of rows in this JoinRowSetImpl object.:::return->crsInternal->size
JoinRowSetImpl#isBeforeFirst():::Indicates whether the cursor is before the first row in this JoinRowSetImpl object.:::return->crsInternal->isBeforeFirst
JoinRowSetImpl#isAfterLast():::Indicates whether the cursor is after the last row in this JoinRowSetImpl object.:::return->crsInternal->isAfterLast
JoinRowSetImpl#isFirst():::Indicates whether the cursor is on the first row in this JoinRowSetImpl object.:::return->crsInternal->isFirst
JoinRowSetImpl#isLast():::Indicates whether the cursor is on the last row in this JoinRowSetImpl object:::return->crsInternal->isLast
JoinRowSetImpl#beforeFirst():::Moves this JoinRowSetImpl object's cursor to the front of the rowset, just before the first row:::crsInternal->beforeFirst
JoinRowSetImpl#afterLast():::Moves this JoinRowSetImpl object's cursor to the end of the rowset, just after the last row:::crsInternal->afterLast
JoinRowSetImpl#first():::Moves this JoinRowSetImpl object's cursor to the first row and returns true if the operation was successful:::return->crsInternal->first
JoinRowSetImpl#last():::Moves this JoinRowSetImpl object's cursor to the last row and returns true if the operation was successful:::return->crsInternal->last
JoinRowSetImpl#getRow():::Returns the number of the current row in this JoinRowSetImpl object:::return->crsInternal->getRow
JoinRowSetImpl#absolute(int):::Moves this JoinRowSetImpl object's cursor to the row number specified:::return->crsInternal->absolute
JoinRowSetImpl#relative(int):::Moves the cursor the specified number of rows from the current position, with a positive number moving it forward and a negative number moving it backward:::return->crsInternal->relative
JoinRowSetImpl#previous():::Moves this JoinRowSetImpl object's cursor to the previous row and returns true if the cursor is on a valid row or false if it is not:::return->crsInternal->previous
JoinRowSetImpl#findColumn(String):::Returns the index of the column whose name is columnName.:::return->crsInternal->findColumn
JoinRowSetImpl#rowUpdated():::Indicates whether the current row of this JoinRowSetImpl object has been updated:::return->crsInternal->rowUpdated
JoinRowSetImpl#columnUpdated(int):::Indicates whether the designated column of the current row of this JoinRowSetImpl object has been updated:::return->crsInternal->columnUpdated
JoinRowSetImpl#rowInserted():::Indicates whether the current row has been inserted:::return->crsInternal->rowInserted
JoinRowSetImpl#rowDeleted():::Indicates whether the current row has been deleted:::return->crsInternal->rowDeleted
JoinRowSetImpl#updateNull(int):::Sets the designated nullable column in the current row or the insert row of this JoinRowSetImpl object with null value:::crsInternal->updateNull
JoinRowSetImpl#updateBoolean(int, boolean):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given boolean value:::crsInternal->updateBoolean
JoinRowSetImpl#updateByte(int, byte):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given byte value:::crsInternal->updateByte
JoinRowSetImpl#updateShort(int, short):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given short value:::crsInternal->updateShort
JoinRowSetImpl#updateInt(int, int):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given int value:::crsInternal->updateInt
JoinRowSetImpl#updateLong(int, long):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given long value:::crsInternal->updateLong
JoinRowSetImpl#updateFloat(int, float):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given float value:::crsInternal->updateFloat
JoinRowSetImpl#updateDouble(int, double):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given double value:::crsInternal->updateDouble
JoinRowSetImpl#updateBigDecimal(int, BigDecimal):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given java.math.BigDecimal object:::crsInternal->updateBigDecimal
JoinRowSetImpl#updateString(int, String):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given String object:::crsInternal->updateString
JoinRowSetImpl#updateBytes(int, byte[]):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given byte array:::crsInternal->updateBytes
JoinRowSetImpl#updateDate(int, java.sql.Date):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Date object:::crsInternal->updateDate
JoinRowSetImpl#updateTime(int, java.sql.Time):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Time object:::crsInternal->updateTime
JoinRowSetImpl#updateTimestamp(int, java.sql.Timestamp):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Timestamp object:::crsInternal->updateTimestamp
JoinRowSetImpl#updateAsciiStream(int, java.io.InputStream, int)::: join row set impl update ascii stream:::crsInternal->updateAsciiStream
JoinRowSetImpl#updateBinaryStream(int, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given java.io.InputStream object:::crsInternal->updateBinaryStream
JoinRowSetImpl#updateCharacterStream(int, java.io.Reader, int):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given java.io.Reader object:::crsInternal->updateCharacterStream
JoinRowSetImpl#updateObject(int, Object, int):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Object value:::crsInternal->updateObject
JoinRowSetImpl#updateObject(int, Object):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Object value:::crsInternal->updateObject
JoinRowSetImpl#updateNull(String):::Sets the designated nullable column in the current row or the insert row of this JoinRowSetImpl object with null value:::crsInternal->updateNull
JoinRowSetImpl#updateBoolean(String, boolean):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given boolean value:::crsInternal->updateBoolean
JoinRowSetImpl#updateByte(String, byte):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given byte value:::crsInternal->updateByte
JoinRowSetImpl#updateShort(String, short):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given short value:::crsInternal->updateShort
JoinRowSetImpl#updateInt(String, int):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given int value:::crsInternal->updateInt
JoinRowSetImpl#updateLong(String, long):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given long value:::crsInternal->updateLong
JoinRowSetImpl#updateFloat(String, float):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given float value:::crsInternal->updateFloat
JoinRowSetImpl#updateDouble(String, double):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given double value:::crsInternal->updateDouble
JoinRowSetImpl#updateBigDecimal(String, BigDecimal):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given java.math.BigDecimal object:::crsInternal->updateBigDecimal
JoinRowSetImpl#updateString(String, String):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given String object:::crsInternal->updateString
JoinRowSetImpl#updateBytes(String, byte[]):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given byte array:::crsInternal->updateBytes
JoinRowSetImpl#updateDate(String, java.sql.Date):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Date object:::crsInternal->updateDate
JoinRowSetImpl#updateTime(String, java.sql.Time):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Time object:::crsInternal->updateTime
JoinRowSetImpl#updateTimestamp(String, java.sql.Timestamp):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Timestamp object:::crsInternal->updateTimestamp
JoinRowSetImpl#updateAsciiStream(String, java.io.InputStream, int):::Unsupported; throws an UnsupportedOperationException if called:::crsInternal->updateAsciiStream
JoinRowSetImpl#updateBinaryStream(String, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given java.io.InputStream object:::crsInternal->updateBinaryStream
JoinRowSetImpl#updateCharacterStream(String, java.io.Reader, int):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given java.io.Reader object:::crsInternal->updateCharacterStream
JoinRowSetImpl#updateObject(String, Object, int):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Object value:::crsInternal->updateObject
JoinRowSetImpl#updateObject(String, Object):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Object value:::crsInternal->updateObject
JoinRowSetImpl#insertRow():::Inserts the contents of this JoinRowSetImpl object's insert row into this rowset immediately following the current row:::crsInternal->insertRow
JoinRowSetImpl#updateRow():::Marks the current row of this JoinRowSetImpl object as updated and notifies listeners registered with this rowset that the row has changed:::crsInternal->updateRow
JoinRowSetImpl#deleteRow():::Deletes the current row from this JoinRowSetImpl object and notifies listeners registered with this rowset that a row has changed:::crsInternal->deleteRow
JoinRowSetImpl#refreshRow():::Sets the current row with its original value and marks the row as not updated, thus undoing any changes made to the row since the last call to the methods updateRow or deleteRow:::crsInternal->refreshRow
JoinRowSetImpl#cancelRowUpdates():::Rolls back any updates made to the current row of this JoinRowSetImpl object and notifies listeners that a row has changed:::crsInternal->cancelRowUpdates
JoinRowSetImpl#moveToInsertRow():::Moves the cursor for this JoinRowSetImpl object to the insert row:::crsInternal->moveToInsertRow
JoinRowSetImpl#moveToCurrentRow():::Moves the cursor for this JoinRowSetImpl object to the current row:::crsInternal->moveToCurrentRow
JoinRowSetImpl#getStatement():::Returns null.:::return->crsInternal->getStatement
JoinRowSetImpl#getRef(int):::Retrieves the value of the designated column in this JoinRowSetImpl object as a Ref object in the Java programming lanugage.:::return->crsInternal->getRef
JoinRowSetImpl#getBlob(int):::Retrieves the value of the designated column in this JoinRowSetImpl object as a Blob object in the Java programming lanugage.:::return->crsInternal->getBlob
JoinRowSetImpl#getClob(int):::Retrieves the value of the designated column in this JoinRowSetImpl object as a Clob object in the Java programming lanugage.:::return->crsInternal->getClob
JoinRowSetImpl#getArray(int):::Retrieves the value of the designated column in this JoinRowSetImpl object as an Array object in the Java programming lanugage.:::return->crsInternal->getArray
JoinRowSetImpl#getRef(String):::Retrieves the value of the designated column in this JoinRowSetImpl object as a Ref object in the Java programming lanugage.:::return->crsInternal->getRef
JoinRowSetImpl#getBlob(String):::Retrieves the value of the designated column in this JoinRowSetImpl object as a Blob object in the Java programming lanugage.:::return->crsInternal->getBlob
JoinRowSetImpl#getClob(String):::Retrieves the value of the designated column in this JoinRowSetImpl object as a Clob object in the Java programming lanugage.:::return->crsInternal->getClob
JoinRowSetImpl#getArray(String):::Retrieves the value of the designated column in this JoinRowSetImpl object as an Array object in the Java programming lanugage.:::return->crsInternal->getArray
JoinRowSetImpl#getDate(int, Calendar):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Date object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->crsInternal->getDate
JoinRowSetImpl#getDate(String, Calendar):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Date object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->crsInternal->getDate
JoinRowSetImpl#getTime(int, Calendar):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Time object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->crsInternal->getTime
JoinRowSetImpl#getTime(String, Calendar):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Time object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->crsInternal->getTime
JoinRowSetImpl#getTimestamp(int, Calendar):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Timestamp object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->crsInternal->getTimestamp
JoinRowSetImpl#getTimestamp(String, Calendar):::Retrieves the value of the designated column in the current row of this JoinRowSetImpl object as a java.sql.Timestamp object, using the given Calendar object to construct an appropriate millisecond value for the date.:::return->crsInternal->getTimestamp
JoinRowSetImpl#setMetaData(RowSetMetaData):::Sets the metadata for this JoinRowSetImpl object with the given RowSetMetaData object.:::crsInternal->setMetaData
JoinRowSetImpl#getOriginal()::: join row set impl get original:::return->crsInternal->getOriginal
JoinRowSetImpl#getOriginalRow():::Returns a result set containing the original value of the rowset:::return->crsInternal->getOriginalRow
JoinRowSetImpl#setOriginalRow():::Returns a result set containing the original value of the current row only.:::crsInternal->setOriginalRow
JoinRowSetImpl#getKeyColumns():::Returns the columns that make a key to uniquely identify a row in this JoinRowSetImpl object.:::return->crsInternal->getKeyColumns
JoinRowSetImpl#setKeyColumns(int[]):::Sets this JoinRowSetImpl object's keyCols field with the given array of column numbers, which forms a key for uniquely identifying a row in this rowset.:::crsInternal->setKeyColumns
JoinRowSetImpl#updateRef(int, java.sql.Ref):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Ref value:::crsInternal->updateRef
JoinRowSetImpl#updateRef(String, java.sql.Ref):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Ref value:::crsInternal->updateRef
JoinRowSetImpl#updateClob(int, Clob):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Clob object:::crsInternal->updateClob
JoinRowSetImpl#updateClob(String, Clob):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Clob object:::crsInternal->updateClob
JoinRowSetImpl#updateBlob(int, Blob):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Blob value:::crsInternal->updateBlob
JoinRowSetImpl#updateBlob(String, Blob):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Blob object:::crsInternal->updateBlob
JoinRowSetImpl#updateArray(int, Array):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Array object:::crsInternal->updateArray
JoinRowSetImpl#updateArray(String, Array):::Sets the designated column in either the current row or the insert row of this JoinRowSetImpl object with the given Array object:::crsInternal->updateArray
JoinRowSetImpl#execute():::Populates this JoinRowSetImpl object with data:::crsInternal->execute
JoinRowSetImpl#execute(Connection):::Populates this JoinRowSetImpl object with data, using the given connection to produce the result set from which data will be read:::crsInternal->execute
JoinRowSetImpl#getURL(int):::Provide interface coverage for getURL(int) in ResultSet->RowSet:::return->crsInternal->getURL
JoinRowSetImpl#getURL(String):::Provide interface coverage for getURL(String) in ResultSet->RowSet:::return->crsInternal->getURL
JoinRowSetImpl#writeXml(ResultSet, java.io.Writer):::Creates a new WebRowSet object, populates it with the data in the given ResultSet object, and writes it to the given java.io.Writer object in XML format.:::new->WebRowSetImpl->wrs->populate->wrs->writeXml
JoinRowSetImpl#writeXml(java.io.Writer):::Writes this JoinRowSet object to the given java.io.Writer object in XML format:::createWebRowSet->writeXml
JoinRowSetImpl#readXml(java.io.Reader):::Reads this JoinRowSet object in its XML format.:::new->WebRowSetImpl->wrs->readXml
JoinRowSetImpl#readXml(java.io.InputStream):::Reads a stream based XML input to populate an WebRowSet:::new->WebRowSetImpl->wrs->readXml
JoinRowSetImpl#writeXml(java.io.OutputStream):::Creates an output stream of the internal state and contents of a WebRowSet for XML proceessing:::createWebRowSet->writeXml
JoinRowSetImpl#writeXml(ResultSet, java.io.OutputStream):::Creates a new WebRowSet object, populates it with the contents of the ResultSet and creates an output streams the internal state and contents of the rowset for XML processing.:::new->WebRowSetImpl->wrs->populate->wrs->writeXml
JoinRowSetImpl#createWebRowSet():::%%% Javadoc comments to be added here:::if->return->else->new->WebRowSetImpl->crsInternal->beforeFirst->wrs->populate->return
JoinRowSetImpl#getJoinType():::Returns the last set SQL JOIN type in this JoinRowSetImpl object:::if->this->setJoinType->i->vecJoinType->vecJoinType->size->get->return->i->intValue
JoinRowSetImpl#addRowSetListener(RowSetListener):::The listener will be notified whenever an event occurs on this JoinRowSet object:::crsInternal->addRowSetListener
JoinRowSetImpl#removeRowSetListener(RowSetListener):::Removes the designated object from this JoinRowSet object's list of listeners:::crsInternal->removeRowSetListener
JoinRowSetImpl#toCollection():::Converts this JoinRowSetImpl object to a collection of tables:::return->crsInternal->toCollection
JoinRowSetImpl#toCollection(int):::Returns the specified column of this JoinRowSetImpl object as a Collection object:::return->crsInternal->toCollection
JoinRowSetImpl#toCollection(String):::Returns the specified column of this JoinRowSetImpl object as a Collection object:::return->crsInternal->toCollection
JoinRowSetImpl#createCopySchema():::Creates a RowSet object that is a copy of this JoinRowSetImpl object's table structure and the constraints only:::return->crsInternal->createCopySchema
JoinRowSetImpl#setSyncProvider(String)::: join row set impl set sync provider:::crsInternal->setSyncProvider
JoinRowSetImpl#acceptChanges()::: join row set impl accept changes:::crsInternal->acceptChanges
JoinRowSetImpl#getSyncProvider()::: join row set impl get sync provider:::return->crsInternal->getSyncProvider
JoinRowSetImpl#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
RowSetFactoryImpl#createCachedRowSet()::: row set factory impl create cached row set:::return->new->com.sun.rowset.CachedRowSetImpl
RowSetFactoryImpl#createFilteredRowSet()::: row set factory impl create filtered row set:::return->new->com.sun.rowset.FilteredRowSetImpl
RowSetFactoryImpl#createJdbcRowSet()::: row set factory impl create jdbc row set:::return->new->com.sun.rowset.JdbcRowSetImpl
RowSetFactoryImpl#createJoinRowSet()::: row set factory impl create join row set:::return->new->com.sun.rowset.JoinRowSetImpl
RowSetFactoryImpl#createWebRowSet()::: row set factory impl create web row set:::return->new->com.sun.rowset.WebRowSetImpl
WebRowSetImpl#writeXml(ResultSet, java.io.Writer):::Populates this WebRowSet object with the data in the given ResultSet object and writes itself to the given java.io.Writer object in XML format:::this->populate->this->getRow->this->writeXml
WebRowSetImpl#writeXml(java.io.Writer):::Writes this WebRowSet object to the given java.io.Writer object in XML format:::if->this->getRow->xmlWriter->writeXML->else->throw->resBundle->handleGetObject->toString->new->SQLException
WebRowSetImpl#readXml(java.io.Reader):::Reads this WebRowSet object in its XML format.:::try->if->xmlReader->readXML->if->this->beforeFirst->else->this->absolute->else->throw->resBundle->handleGetObject->toString->new->SQLException->catch->throw->e->getMessage->new->SQLException->finally
WebRowSetImpl#readXml(java.io.InputStream):::Reads a stream based XML input to populate this WebRowSet object.:::if->xmlReader->readXML->if->this->beforeFirst->else->this->absolute->else->throw->resBundle->handleGetObject->toString->new->SQLException
WebRowSetImpl#writeXml(java.io.OutputStream):::Writes this WebRowSet object to the given  OutputStream object in XML format:::if->this->getRow->xmlWriter->writeXML->else->throw->resBundle->handleGetObject->toString->new->SQLException
WebRowSetImpl#writeXml(ResultSet, java.io.OutputStream):::Populates this WebRowSet object with the data in the given ResultSet object and writes itself to the given java.io.OutputStream object in XML format:::this->populate->this->getRow->this->writeXml
WebRowSetImpl#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
