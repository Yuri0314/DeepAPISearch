KeyStoreUtil#isSelfSigned(X509Certificate):::Returns true if the certificate is self-signed, false otherwise.:::return->signedBy
KeyStoreUtil#isWindowsKeyStore(String):::Returns true if KeyStore has a password:::return->storetype->equalsIgnoreCase->storetype->equalsIgnoreCase
KeyStoreUtil#niceStoreTypeName(String):::Returns standard-looking names for storetype:::if->storetype->equalsIgnoreCase->return->else->if->storetype->equalsIgnoreCase->return->else->return->storetype->toUpperCase
KeyStoreUtil#getCacerts():::Returns the file name of the keystore with the configured CA certificates.:::sep->return->System->getProperty
KeyStoreUtil#getCacertsKeyStore():::Returns the keystore with the configured CA certificates.:::file->getCacerts->new->File->if->file->exists->return->return->KeyStore->getInstance
KeyStoreUtil#expandArgs(String, String, String, String, String[]):::Prepends matched options from a pre-configured options file.:::result->new->ArrayList<>->p->new->Properties->p->new->FileInputStream->load->s->p->getProperty->if->parseArgsLine->s1->p->c1->substring->getProperty->s2->if->p->c2->substring->getProperty->if->throw->new->IOException->if->if->parseArgsLine->if->result->isEmpty->return->else->result->Arrays->asList->addAll->return->result->result->size->new->StringArr->toArray
KeyStoreUtil#loadProviderByName(String, String):::Loads a security provider as a service.:::loaded->Security->getProvider->if->if->loaded->configure->Security->addProvider->return->foreach->ServiceLoader->ClassLoader->getSystemClassLoader->load->if->p->getName->equals->if->p->configure->Security->addProvider->return->throw->new->IllegalArgumentException
KeyStoreUtil#loadProviderByClass(String, String, ClassLoader):::Loads a security provider by a fully-qualified class name.:::if->provClass->equals->loadProviderByName->return->else->if->provClass->equals->loadProviderByName->return->prov->try->clazz->Class->forName->clazz->getConstructor->newInstance->catch->throw->new->IllegalArgumentException->finally->if->prov->configure->Security->addProvider
PathList#appendPath(String, String):::Utility method for appending path from pathFrom to pathTo.:::if->pathTo->length->return->else->if->pathFrom->length->return->else->return
PathList#pathToURLs(String):::Utility method for converting a search path string to an array of directory and JAR file URLs.:::st->new->StringTokenizer->urls->st->countTokens->new->URLArr->count->while->st->hasMoreTokens->url->st->nextToken->new->File->fileToURL->if->if->tmp->new->URLArr->System->arraycopy->return
