java.rmi.activation.Activatable#getID()->ActivationID:::Returns the object's activation identifier
java.rmi.activation.Activatable#register(ActivationDesc)->Remote:::Register an object descriptor for an activatable remote object so that is can be activated on demand.
java.rmi.activation.Activatable#inactive(ActivationID)->boolean:::Informs the system that the object with the corresponding activation id is currently inactive
java.rmi.activation.Activatable#unregister(ActivationID)->void:::Revokes previous registration for the activation descriptor associated with id
java.rmi.activation.Activatable#exportObject(Remote, String, MarshalledObject, boolean, int)->ActivationID:::Registers an activation descriptor (with the specified location, data, and restart mode) for the specified object, and exports that object with the specified port
java.rmi.activation.Activatable#exportObject(Remote, String, MarshalledObject, boolean, int, RMIClientSocketFactory, RMIServerSocketFactory)->ActivationID:::Registers an activation descriptor (with the specified location, data, and restart mode) for the specified object, and exports that object with the specified port, and the specified client and server socket factories
java.rmi.activation.Activatable#exportObject(Remote, ActivationID, int)->Remote:::Export the activatable remote object to the RMI runtime to make the object available to receive incoming calls
java.rmi.activation.Activatable#exportObject(Remote, ActivationID, int, RMIClientSocketFactory, RMIServerSocketFactory)->Remote:::Export the activatable remote object to the RMI runtime to make the object available to receive incoming calls
java.rmi.activation.Activatable#unexportObject(Remote, boolean)->boolean:::Remove the remote object, obj, from the RMI runtime
java.rmi.activation.ActivationDesc#getGroupID()->ActivationGroupID:::Returns the group identifier for the object specified by this descriptor
java.rmi.activation.ActivationDesc#getClassName()->String:::Returns the class name for the object specified by this descriptor.
java.rmi.activation.ActivationDesc#getLocation()->String:::Returns the code location for the object specified by this descriptor.
java.rmi.activation.ActivationDesc#getData()->MarshalledObject:::Returns a "marshalled object" containing intialization/activation data for the object specified by this descriptor.
java.rmi.activation.ActivationDesc#getRestartMode()->boolean:::Returns the "restart" mode of the object associated with this activation descriptor.
java.rmi.activation.ActivationDesc#equals(Object)->boolean:::Compares two activation descriptors for content equality.
java.rmi.activation.ActivationDesc#hashCode()->int:::Return the same hashCode for similar ActivationDescs.
java.rmi.activation.ActivationException#getMessage()->String:::Returns the detail message, including the message from the cause, if any, of this exception.
java.rmi.activation.ActivationException#getCause()->Throwable:::Returns the cause of this exception
java.rmi.activation.ActivationGroup#inactiveObject(ActivationID)->boolean:::The group's inactiveObject method is called indirectly via a call to the Activatable.inactive method
java.rmi.activation.ActivationGroup#activeObject(ActivationID, Remote)->void:::The group's activeObject method is called when an object is exported (either by Activatable object construction or an explicit call to Activatable.exportObject
java.rmi.activation.ActivationGroup#createGroup(ActivationGroupID, ActivationGroupDesc, long)->ActivationGroup:::Create and set the activation group for the current VM
java.rmi.activation.ActivationGroup#currentGroupID()->ActivationGroupID:::Returns the current activation group's identifier
java.rmi.activation.ActivationGroup#internalCurrentGroupID()->ActivationGroupID:::Returns the activation group identifier for the VM
java.rmi.activation.ActivationGroup#setSystem(ActivationSystem)->void:::Set the activation system for the VM
java.rmi.activation.ActivationGroup#getSystem()->ActivationSystem:::Returns the activation system for the VM
java.rmi.activation.ActivationGroup#activeObject(ActivationID, MarshalledObject)->void:::This protected method is necessary for subclasses to make the activeObject callback to the group's monitor
java.rmi.activation.ActivationGroup#inactiveGroup()->void:::This protected method is necessary for subclasses to make the inactiveGroup callback to the group's monitor
java.rmi.activation.ActivationGroup#currentGroup()->ActivationGroup:::Returns the current group for the VM.
java.rmi.activation.ActivationGroupDesc#getClassName()->String:::Returns the group's class name (possibly null)
java.rmi.activation.ActivationGroupDesc#getLocation()->String:::Returns the group's code location.
java.rmi.activation.ActivationGroupDesc#getData()->MarshalledObject:::Returns the group's initialization data.
java.rmi.activation.ActivationGroupDesc#getPropertyOverrides()->Properties:::Returns the group's property-override list.
java.rmi.activation.ActivationGroupDesc#getCommandEnvironment()->CommandEnvironment:::Returns the group's command-environment control object.
java.rmi.activation.ActivationGroupDesc.CommandEnvironment#getCommandPath()->String:::Fetch the configured path-qualified java command name.
java.rmi.activation.ActivationGroupDesc.CommandEnvironment#getCommandOptions()->String[]:::Fetch the configured java command options.
java.rmi.activation.ActivationGroupDesc.CommandEnvironment#equals(Object)->boolean:::Compares two command environments for content equality.
java.rmi.activation.ActivationGroupDesc.CommandEnvironment#hashCode()->int:::Return identical values for similar CommandEnvironments.
java.rmi.activation.ActivationGroupDesc#equals(Object)->boolean:::Compares two activation group descriptors for content equality.
java.rmi.activation.ActivationGroupDesc#hashCode()->int:::Produce identical numbers for similar ActivationGroupDescs.
java.rmi.activation.ActivationGroupID#getSystem()->ActivationSystem:::Returns the group's activation system.
java.rmi.activation.ActivationGroupID#hashCode()->int:::Returns a hashcode for the group's identifier
java.rmi.activation.ActivationGroupID#equals(Object)->boolean:::Compares two group identifiers for content equality
java.rmi.activation.ActivationID#activate(boolean)->Remote:::Activate the object for this id.
java.rmi.activation.ActivationID#hashCode()->int:::Returns a hashcode for the activation id
java.rmi.activation.ActivationID#equals(Object)->boolean:::Compares two activation ids for content equality
java.rmi.activation.ActivationInstantiator#newInstance(ActivationID, ActivationDesc)->MarshalledObject:::The activator calls an instantiator's newInstance method in order to recreate in that group an object with the activation identifier, id, and descriptor, desc
java.rmi.activation.ActivationMonitor#inactiveObject(ActivationID)->void:::An activation group calls its monitor's inactiveObject method when an object in its group becomes inactive (deactivates)
java.rmi.activation.ActivationMonitor#activeObject(ActivationID, MarshalledObject)->void:::Informs that an object is now active
java.rmi.activation.ActivationMonitor#inactiveGroup(ActivationGroupID, long)->void:::Informs that the group is now inactive
java.rmi.activation.ActivationSystem#registerObject(ActivationDesc)->ActivationID:::The registerObject method is used to register an activation descriptor, desc, and obtain an activation identifier for a activatable remote object
java.rmi.activation.ActivationSystem#unregisterObject(ActivationID)->void:::Remove the activation id and associated descriptor previously registered with the ActivationSystem; the object can no longer be activated via the object's activation id.
java.rmi.activation.ActivationSystem#registerGroup(ActivationGroupDesc)->ActivationGroupID:::Register the activation group
java.rmi.activation.ActivationSystem#activeGroup(ActivationGroupID, ActivationInstantiator, long)->ActivationMonitor:::Callback to inform activation system that group is now active
java.rmi.activation.ActivationSystem#unregisterGroup(ActivationGroupID)->void:::Remove the activation group
java.rmi.activation.ActivationSystem#shutdown()->void:::Shutdown the activation system
java.rmi.activation.ActivationSystem#setActivationDesc(ActivationID, ActivationDesc)->ActivationDesc:::Set the activation descriptor, desc for the object with the activation identifier, id
java.rmi.activation.ActivationSystem#setActivationGroupDesc(ActivationGroupID, ActivationGroupDesc)->ActivationGroupDesc:::Set the activation group descriptor, desc for the object with the activation group identifier, id
java.rmi.activation.ActivationSystem#getActivationDesc(ActivationID)->ActivationDesc:::Returns the activation descriptor, for the object with the activation identifier, id.
java.rmi.activation.ActivationSystem#getActivationGroupDesc(ActivationGroupID)->ActivationGroupDesc:::Returns the activation group descriptor, for the group with the activation group identifier, id.
java.rmi.activation.Activator#activate(ActivationID, boolean)->MarshalledObject:::Activate the object associated with the activation identifier, id
