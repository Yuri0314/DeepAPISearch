EventReaderDelegate#setParent(XMLEventReader):::Set the parent of this instance.:::
EventReaderDelegate#getParent():::Get the parent of this instance.:::return
EventReaderDelegate#nextEvent()::: event reader delegate next event:::return->reader->nextEvent
EventReaderDelegate#next()::: event reader delegate next:::return->reader->next
EventReaderDelegate#hasNext()::: event reader delegate has next:::return->reader->hasNext
EventReaderDelegate#peek()::: event reader delegate peek:::return->reader->peek
EventReaderDelegate#close()::: event reader delegate close:::reader->close
EventReaderDelegate#getElementText()::: event reader delegate get element text:::return->reader->getElementText
EventReaderDelegate#nextTag()::: event reader delegate next tag:::return->reader->nextTag
EventReaderDelegate#getProperty(java.lang.String)::: event reader delegate get property:::return->reader->getProperty
EventReaderDelegate#remove()::: event reader delegate remove:::reader->remove
StreamReaderDelegate#setParent(XMLStreamReader):::Set the parent of this instance.:::
StreamReaderDelegate#getParent():::Get the parent of this instance.:::return
StreamReaderDelegate#next()::: stream reader delegate next:::return->reader->next
StreamReaderDelegate#nextTag()::: stream reader delegate next tag:::return->reader->nextTag
StreamReaderDelegate#getElementText()::: stream reader delegate get element text:::return->reader->getElementText
StreamReaderDelegate#require(int, String, String)::: stream reader delegate require:::reader->require
StreamReaderDelegate#hasNext()::: stream reader delegate has next:::return->reader->hasNext
StreamReaderDelegate#close()::: stream reader delegate close:::reader->close
StreamReaderDelegate#getNamespaceURI(String)::: stream reader delegate get namespace i:::return->reader->getNamespaceURI
StreamReaderDelegate#getNamespaceContext()::: stream reader delegate get namespace context:::return->reader->getNamespaceContext
StreamReaderDelegate#isStartElement()::: stream reader delegate is start element:::return->reader->isStartElement
StreamReaderDelegate#isEndElement()::: stream reader delegate is end element:::return->reader->isEndElement
StreamReaderDelegate#isCharacters()::: stream reader delegate is characters:::return->reader->isCharacters
StreamReaderDelegate#isWhiteSpace()::: stream reader delegate is white space:::return->reader->isWhiteSpace
StreamReaderDelegate#getAttributeValue(String, String)::: stream reader delegate get attribute value:::return->reader->getAttributeValue
StreamReaderDelegate#getAttributeCount()::: stream reader delegate get attribute count:::return->reader->getAttributeCount
StreamReaderDelegate#getAttributeName(int)::: stream reader delegate get attribute name:::return->reader->getAttributeName
StreamReaderDelegate#getAttributePrefix(int)::: stream reader delegate get attribute prefix:::return->reader->getAttributePrefix
StreamReaderDelegate#getAttributeNamespace(int)::: stream reader delegate get attribute namespace:::return->reader->getAttributeNamespace
StreamReaderDelegate#getAttributeLocalName(int)::: stream reader delegate get attribute local name:::return->reader->getAttributeLocalName
StreamReaderDelegate#getAttributeType(int)::: stream reader delegate get attribute type:::return->reader->getAttributeType
StreamReaderDelegate#getAttributeValue(int)::: stream reader delegate get attribute value:::return->reader->getAttributeValue
StreamReaderDelegate#isAttributeSpecified(int)::: stream reader delegate is attribute specified:::return->reader->isAttributeSpecified
StreamReaderDelegate#getNamespaceCount()::: stream reader delegate get namespace count:::return->reader->getNamespaceCount
StreamReaderDelegate#getNamespacePrefix(int)::: stream reader delegate get namespace prefix:::return->reader->getNamespacePrefix
StreamReaderDelegate#getNamespaceURI(int)::: stream reader delegate get namespace i:::return->reader->getNamespaceURI
StreamReaderDelegate#getEventType()::: stream reader delegate get event type:::return->reader->getEventType
StreamReaderDelegate#getText()::: stream reader delegate get text:::return->reader->getText
StreamReaderDelegate#getTextCharacters(int, char[], int, int)::: stream reader delegate get text characters:::return->reader->getTextCharacters
StreamReaderDelegate#getTextCharacters()::: stream reader delegate get text characters:::return->reader->getTextCharacters
StreamReaderDelegate#getTextStart()::: stream reader delegate get text start:::return->reader->getTextStart
StreamReaderDelegate#getTextLength()::: stream reader delegate get text length:::return->reader->getTextLength
StreamReaderDelegate#getEncoding()::: stream reader delegate get encoding:::return->reader->getEncoding
StreamReaderDelegate#hasText()::: stream reader delegate has text:::return->reader->hasText
StreamReaderDelegate#getLocation()::: stream reader delegate get location:::return->reader->getLocation
StreamReaderDelegate#getName()::: stream reader delegate get name:::return->reader->getName
StreamReaderDelegate#getLocalName()::: stream reader delegate get local name:::return->reader->getLocalName
StreamReaderDelegate#hasName()::: stream reader delegate has name:::return->reader->hasName
StreamReaderDelegate#getNamespaceURI()::: stream reader delegate get namespace i:::return->reader->getNamespaceURI
StreamReaderDelegate#getPrefix()::: stream reader delegate get prefix:::return->reader->getPrefix
StreamReaderDelegate#getVersion()::: stream reader delegate get version:::return->reader->getVersion
StreamReaderDelegate#isStandalone()::: stream reader delegate is standalone:::return->reader->isStandalone
StreamReaderDelegate#standaloneSet()::: stream reader delegate standalone set:::return->reader->standaloneSet
StreamReaderDelegate#getCharacterEncodingScheme()::: stream reader delegate get character encoding scheme:::return->reader->getCharacterEncodingScheme
StreamReaderDelegate#getPITarget()::: stream reader delegate get target:::return->reader->getPITarget
StreamReaderDelegate#getPIData()::: stream reader delegate get data:::return->reader->getPIData
StreamReaderDelegate#getProperty(String)::: stream reader delegate get property:::return->reader->getProperty
XMLEventAllocator#newInstance():::This method creates an instance of the XMLEventAllocator:::
XMLEventAllocator#allocate(XMLStreamReader):::This method allocates an event given the current state of the XMLStreamReader:::
XMLEventAllocator#allocate(XMLStreamReader, XMLEventConsumer):::This method allocates an event or set of events given the current state of the XMLStreamReader and adds the event or set of events to the consumer that was passed in:::
XMLEventConsumer#add(XMLEvent):::This method adds an event to the consumer:::
