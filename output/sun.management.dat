sun.management.BaseOperatingSystemImpl#getName()->String::: base operating system impl get name
sun.management.BaseOperatingSystemImpl#getArch()->String::: base operating system impl get arch
sun.management.BaseOperatingSystemImpl#getVersion()->String::: base operating system impl get version
sun.management.BaseOperatingSystemImpl#getAvailableProcessors()->int::: base operating system impl get available processors
sun.management.BaseOperatingSystemImpl#getSystemLoadAverage()->double::: base operating system impl get system load average
sun.management.BaseOperatingSystemImpl#getObjectName()->ObjectName::: base operating system impl get object name
sun.management.ClassLoadingImpl#getTotalLoadedClassCount()->long::: class loading impl get total loaded class count
sun.management.ClassLoadingImpl#getLoadedClassCount()->int::: class loading impl get loaded class count
sun.management.ClassLoadingImpl#getUnloadedClassCount()->long::: class loading impl get unloaded class count
sun.management.ClassLoadingImpl#isVerbose()->boolean::: class loading impl is verbose
sun.management.ClassLoadingImpl#setVerbose(boolean)->void::: class loading impl set verbose
sun.management.ClassLoadingImpl#setVerboseClass(boolean)->void::: class loading impl set verbose class
sun.management.ClassLoadingImpl#getObjectName()->ObjectName::: class loading impl get object name
sun.management.CompilationImpl#getName()->java.lang.String::: compilation impl get name
sun.management.CompilationImpl#isCompilationTimeMonitoringSupported()->boolean::: compilation impl is compilation time monitoring supported
sun.management.CompilationImpl#getTotalCompilationTime()->long::: compilation impl get total compilation time
sun.management.CompilationImpl#getObjectName()->ObjectName::: compilation impl get object name
sun.management.CompilerThreadStat#getName()->String:::Returns the name of the compiler thread associated with this compiler thread statistic.
sun.management.CompilerThreadStat#getCompileTaskCount()->long:::Returns the number of compile tasks performed by the compiler thread associated with this compiler thread statistic.
sun.management.CompilerThreadStat#getCompileTime()->long:::Returns the accumulated elapsed time spent by the compiler thread associated with this compiler thread statistic.
sun.management.CompilerThreadStat#getLastCompiledMethodInfo()->MethodInfo:::Returns the information about the last method compiled by the compiler thread associated with this compiler thread statistic.
sun.management.CompilerThreadStat#toString()->String::: compiler thread stat to string
sun.management.GarbageCollectorImpl#getCollectionCount()->long::: garbage collector impl get collection count
sun.management.GarbageCollectorImpl#getCollectionTime()->long::: garbage collector impl get collection time
sun.management.GarbageCollectorImpl#getObjectName()->ObjectName::: garbage collector impl get object name
sun.management.HotspotClassLoading#getLoadedClassSize()->long::: hotspot class loading get loaded class size
sun.management.HotspotClassLoading#getUnloadedClassSize()->long::: hotspot class loading get unloaded class size
sun.management.HotspotClassLoading#getClassLoadingTime()->long::: hotspot class loading get class loading time
sun.management.HotspotClassLoading#getMethodDataSize()->long::: hotspot class loading get method data size
sun.management.HotspotClassLoading#getInitializedClassCount()->long::: hotspot class loading get initialized class count
sun.management.HotspotClassLoading#getClassInitializationTime()->long::: hotspot class loading get class initialization time
sun.management.HotspotClassLoading#getClassVerificationTime()->long::: hotspot class loading get class verification time
sun.management.HotspotClassLoading#getInternalClassLoadingCounters()->java.util.List::: hotspot class loading get internal class loading counters
sun.management.HotspotClassLoadingMBean#getLoadedClassSize()->long:::Returns the amount of memory in bytes occupied by loaded classes in the Java virtual machine.
sun.management.HotspotClassLoadingMBean#getUnloadedClassSize()->long:::Returns the number of bytes that the Java virtual machine collected due to class unloading.
sun.management.HotspotClassLoadingMBean#getClassLoadingTime()->long:::Returns the accumulated elapsed time spent by class loading in milliseconds.
sun.management.HotspotClassLoadingMBean#getMethodDataSize()->long:::Returns the amount of memory in bytes occupied by the method data.
sun.management.HotspotClassLoadingMBean#getInitializedClassCount()->long:::Returns the number of classes for which initializers were run.
sun.management.HotspotClassLoadingMBean#getClassInitializationTime()->long:::Returns the accumulated elapsed time spent in class initializers in milliseconds.
sun.management.HotspotClassLoadingMBean#getClassVerificationTime()->long:::Returns the accumulated elapsed time spent in class verifier in milliseconds.
sun.management.HotspotClassLoadingMBean#getInternalClassLoadingCounters()->java.util.List:::Returns a list of internal counters maintained in the Java virtual machine for the class loading system.
sun.management.HotspotCompilation#getCompilerThreadCount()->int::: hotspot compilation get compiler thread count
sun.management.HotspotCompilation#getTotalCompileCount()->long::: hotspot compilation get total compile count
sun.management.HotspotCompilation#getBailoutCompileCount()->long::: hotspot compilation get bailout compile count
sun.management.HotspotCompilation#getInvalidatedCompileCount()->long::: hotspot compilation get invalidated compile count
sun.management.HotspotCompilation#getCompiledMethodCodeSize()->long::: hotspot compilation get compiled method code size
sun.management.HotspotCompilation#getCompiledMethodSize()->long::: hotspot compilation get compiled method size
sun.management.HotspotCompilation#getCompilerThreadStats()->List::: hotspot compilation get compiler thread stats
sun.management.HotspotCompilation#getLastCompile()->MethodInfo::: hotspot compilation get last compile
sun.management.HotspotCompilation#getFailedCompile()->MethodInfo::: hotspot compilation get failed compile
sun.management.HotspotCompilation#getInvalidatedCompile()->MethodInfo::: hotspot compilation get invalidated compile
sun.management.HotspotCompilation#getInternalCompilerCounters()->java.util.List::: hotspot compilation get internal compiler counters
sun.management.HotspotCompilationMBean#getCompilerThreadCount()->int:::Returns the number of compiler threads.
sun.management.HotspotCompilationMBean#getCompilerThreadStats()->java.util.List:::Returns the statistic of all compiler threads.
sun.management.HotspotCompilationMBean#getTotalCompileCount()->long:::Returns the total number of compiles.
sun.management.HotspotCompilationMBean#getBailoutCompileCount()->long:::Returns the number of bailout compiles.
sun.management.HotspotCompilationMBean#getInvalidatedCompileCount()->long:::Returns the number of invalidated compiles.
sun.management.HotspotCompilationMBean#getLastCompile()->MethodInfo:::Returns the method information of the last compiled method.
sun.management.HotspotCompilationMBean#getFailedCompile()->MethodInfo:::Returns the method information of the last failed compile.
sun.management.HotspotCompilationMBean#getInvalidatedCompile()->MethodInfo:::Returns the method information of the last invalidated compile.
sun.management.HotspotCompilationMBean#getCompiledMethodCodeSize()->long:::Returns the number of bytes for the code of the compiled methods.
sun.management.HotspotCompilationMBean#getCompiledMethodSize()->long:::Returns the number of bytes occupied by the compiled methods.
sun.management.HotspotCompilationMBean#getInternalCompilerCounters()->java.util.List:::Returns a list of internal counters maintained in the Java virtual machine for the compilation system.
sun.management.HotspotInternal#preRegister(MBeanServer, ObjectName)->ObjectName::: hotspot internal pre register
sun.management.HotspotInternal#postRegister(Boolean)->void::: hotspot internal post register
sun.management.HotspotInternal#preDeregister()->void::: hotspot internal pre deregister
sun.management.HotspotInternal#postDeregister()->void::: hotspot internal post deregister
sun.management.HotspotMemory#getInternalMemoryCounters()->java.util.List::: hotspot memory get internal memory counters
sun.management.HotspotMemoryMBean#getInternalMemoryCounters()->java.util.List:::Returns a list of internal counters maintained in the Java virtual machine for the memory system.
sun.management.HotspotRuntime#getSafepointCount()->long::: hotspot runtime get safepoint count
sun.management.HotspotRuntime#getTotalSafepointTime()->long::: hotspot runtime get total safepoint time
sun.management.HotspotRuntime#getSafepointSyncTime()->long::: hotspot runtime get safepoint sync time
sun.management.HotspotRuntime#getInternalRuntimeCounters()->java.util.List::: hotspot runtime get internal runtime counters
sun.management.HotspotRuntimeMBean#getSafepointCount()->long:::Returns the number of safepoints taken place since the Java virtual machine started.
sun.management.HotspotRuntimeMBean#getTotalSafepointTime()->long:::Returns the accumulated time spent at safepoints in milliseconds
sun.management.HotspotRuntimeMBean#getSafepointSyncTime()->long:::Returns the accumulated time spent getting to safepoints in milliseconds.
sun.management.HotspotRuntimeMBean#getInternalRuntimeCounters()->java.util.List:::Returns a list of internal counters maintained in the Java virtual machine for the runtime system.
sun.management.HotspotThread#getInternalThreadCount()->int::: hotspot thread get internal thread count
sun.management.HotspotThread#getInternalThreadCpuTimes()->Map::: hotspot thread get internal thread cpu times
sun.management.HotspotThread#getInternalThreadTimes0(String[], long[])->int::: hotspot thread get internal thread times0
sun.management.HotspotThread#getInternalThreadingCounters()->java.util.List::: hotspot thread get internal threading counters
sun.management.HotspotThreadMBean#getInternalThreadCount()->int:::Returns the current number of VM internal threads.
sun.management.HotspotThreadMBean#getInternalThreadCpuTimes()->java.util.Map:::Returns a Map of the name of all VM internal threads to the thread CPU time in nanoseconds
sun.management.HotspotThreadMBean#getInternalThreadingCounters()->java.util.List:::Returns a list of internal counters maintained in the Java virtual machine for the thread system.
sun.management.LazyCompositeData#containsKey(String)->boolean::: lazy composite data contains key
sun.management.LazyCompositeData#containsValue(Object)->boolean::: lazy composite data contains value
sun.management.LazyCompositeData#equals(Object)->boolean::: lazy composite data equals
sun.management.LazyCompositeData#get(String)->Object::: lazy composite data get
sun.management.LazyCompositeData#getAll(String[])->Object[]::: lazy composite data get all
sun.management.LazyCompositeData#getCompositeType()->CompositeType::: lazy composite data get composite type
sun.management.LazyCompositeData#hashCode()->int::: lazy composite data hash code
sun.management.LazyCompositeData#toString()->String::: lazy composite data to string
sun.management.LazyCompositeData#values()->Collection::: lazy composite data values
sun.management.LazyCompositeData#writeReplace()->Object:::Designate to a CompositeData object when writing to an output stream during serialization so that the receiver only requires JMX 1.2 classes but not any implementation specific class.
sun.management.LazyCompositeData#getCompositeData()->CompositeData:::Returns the CompositeData representing this object
sun.management.LazyCompositeData#getString(CompositeData, String)->String::: lazy composite data get string
sun.management.LazyCompositeData#getBoolean(CompositeData, String)->boolean::: lazy composite data get boolean
sun.management.LazyCompositeData#getLong(CompositeData, String)->long::: lazy composite data get long
sun.management.LazyCompositeData#getInt(CompositeData, String)->int::: lazy composite data get int
sun.management.LazyCompositeData#isTypeMatched(CompositeType, CompositeType)->boolean:::Compares two CompositeTypes and returns true if all items in type1 exist in type2 and their item types are the same.
sun.management.LazyCompositeData#isTypeMatched(TabularType, TabularType)->boolean::: lazy composite data is type matched
sun.management.LazyCompositeData#isTypeMatched(ArrayType, ArrayType)->boolean::: lazy composite data is type matched
sun.management.LockInfoCompositeData#getLockInfo()->LockInfo::: lock info composite data get lock info
sun.management.LockInfoCompositeData#toCompositeData(LockInfo)->CompositeData::: lock info composite data to composite data
sun.management.LockInfoCompositeData#getCompositeData()->CompositeData::: lock info composite data get composite data
sun.management.LockInfoCompositeData#compositeType()->CompositeType::: lock info composite data composite type
sun.management.LockInfoCompositeData#toLockInfo(CompositeData)->LockInfo::: lock info composite data to lock info
sun.management.ManagementFactoryHelper#getVMManagement()->VMManagement::: management factory helper get management
sun.management.ManagementFactoryHelper#getClassLoadingMXBean()->ClassLoadingMXBean::: management factory helper get class loading bean
sun.management.ManagementFactoryHelper#getMemoryMXBean()->MemoryMXBean::: management factory helper get memory bean
sun.management.ManagementFactoryHelper#getThreadMXBean()->ThreadMXBean::: management factory helper get thread bean
sun.management.ManagementFactoryHelper#getRuntimeMXBean()->RuntimeMXBean::: management factory helper get runtime bean
sun.management.ManagementFactoryHelper#getCompilationMXBean()->CompilationMXBean::: management factory helper get compilation bean
sun.management.ManagementFactoryHelper#getOperatingSystemMXBean()->OperatingSystemMXBean::: management factory helper get operating system bean
sun.management.ManagementFactoryHelper#getMemoryPoolMXBeans()->List::: management factory helper get memory pool beans
sun.management.ManagementFactoryHelper#getMemoryManagerMXBeans()->List::: management factory helper get memory manager beans
sun.management.ManagementFactoryHelper#getGarbageCollectorMXBeans()->List::: management factory helper get garbage collector beans
sun.management.ManagementFactoryHelper#getPlatformLoggingMXBean()->PlatformLoggingMXBean::: management factory helper get platform logging bean
sun.management.ManagementFactoryHelper#isPlatformLoggingMXBeanAvailable()->boolean::: management factory helper is platform logging bean available
sun.management.ManagementFactoryHelper#getAllMemoryPoolNames()->String[]:::Returns an array of the name of all memory pools
sun.management.ManagementFactoryHelper.LoggingMXBeanAccess#isAvailable()->boolean::: logging bean access is available
sun.management.ManagementFactoryHelper.LoggingMXBeanAccess#invoke(String, Object...)->T::: logging bean access invoke
sun.management.ManagementFactoryHelper.PlatformLoggingImpl#getObjectName()->ObjectName::: platform logging impl get object name
sun.management.ManagementFactoryHelper.PlatformLoggingImpl#getLoggerNames()->java.util.List::: platform logging impl get logger names
sun.management.ManagementFactoryHelper.PlatformLoggingImpl#getLoggerLevel(String)->String::: platform logging impl get logger level
sun.management.ManagementFactoryHelper.PlatformLoggingImpl#setLoggerLevel(String, String)->void::: platform logging impl set logger level
sun.management.ManagementFactoryHelper.PlatformLoggingImpl#getParentLoggerName(String)->String::: platform logging impl get parent logger name
sun.management.ManagementFactoryHelper#getBufferPoolMXBeans()->List::: management factory helper get buffer pool beans
sun.management.ManagementFactoryHelper#getHotspotRuntimeMBean()->HotspotRuntimeMBean:::This method is for testing only.
sun.management.ManagementFactoryHelper#getHotspotClassLoadingMBean()->HotspotClassLoadingMBean:::This method is for testing only.
sun.management.ManagementFactoryHelper#getHotspotThreadMBean()->HotspotThreadMBean:::This method is for testing only.
sun.management.ManagementFactoryHelper#getHotspotMemoryMBean()->HotspotMemoryMBean:::This method is for testing only.
sun.management.ManagementFactoryHelper#getHotspotCompilationMBean()->HotspotCompilationMBean:::This method is for testing only.
sun.management.ManagementFactoryHelper#registerInternalMBeans(MBeanServer)->void::: management factory helper register internal beans
sun.management.ManagementFactoryHelper#unregisterInternalMBeans(MBeanServer)->void::: management factory helper unregister internal beans
sun.management.ManagementFactoryHelper#isThreadSuspended(int)->boolean::: management factory helper is thread suspended
sun.management.ManagementFactoryHelper#isThreadRunningNative(int)->boolean::: management factory helper is thread running native
sun.management.ManagementFactoryHelper#toThreadState(int)->Thread.State::: management factory helper to thread state
sun.management.MappedMXBeanType#newMappedType(Type)->MappedMXBeanType::: mapped bean type new mapped type
sun.management.MappedMXBeanType#newBasicType(Class, OpenType)->MappedMXBeanType::: mapped bean type new basic type
sun.management.MappedMXBeanType#getMappedType(Type)->MappedMXBeanType::: mapped bean type get mapped type
sun.management.MappedMXBeanType#toOpenType(Type)->OpenType::: mapped bean type to open type
sun.management.MappedMXBeanType#toJavaTypeData(Object, Type)->Object::: mapped bean type to java type data
sun.management.MappedMXBeanType#toOpenTypeData(Object, Type)->Object::: mapped bean type to open type data
sun.management.MappedMXBeanType#getOpenType()->OpenType::: mapped bean type get open type
sun.management.MappedMXBeanType#isBasicType()->boolean::: mapped bean type is basic type
sun.management.MappedMXBeanType#getTypeName()->String::: mapped bean type get type name
sun.management.MappedMXBeanType#getMappedTypeClass()->Class::: mapped bean type get mapped type class
sun.management.MappedMXBeanType#getJavaType()->Type::: mapped bean type get java type
sun.management.MappedMXBeanType#getName()->String::: mapped bean type get name
sun.management.MappedMXBeanType#toOpenTypeData(Object)->Object::: mapped bean type to open type data
sun.management.MappedMXBeanType#toJavaTypeData(Object)->Object::: mapped bean type to java type data
sun.management.MappedMXBeanType.BasicMXBeanType#getJavaType()->Type::: basic bean type get java type
sun.management.MappedMXBeanType.BasicMXBeanType#getName()->String::: basic bean type get name
sun.management.MappedMXBeanType.BasicMXBeanType#toOpenTypeData(Object)->Object::: basic bean type to open type data
sun.management.MappedMXBeanType.BasicMXBeanType#toJavaTypeData(Object)->Object::: basic bean type to java type data
sun.management.MappedMXBeanType.EnumMXBeanType#getJavaType()->Type::: enum bean type get java type
sun.management.MappedMXBeanType.EnumMXBeanType#getName()->String::: enum bean type get name
sun.management.MappedMXBeanType.EnumMXBeanType#toOpenTypeData(Object)->Object::: enum bean type to open type data
sun.management.MappedMXBeanType.EnumMXBeanType#toJavaTypeData(Object)->Object::: enum bean type to java type data
sun.management.MappedMXBeanType.ArrayMXBeanType#getJavaType()->Type::: array bean type get java type
sun.management.MappedMXBeanType.ArrayMXBeanType#getName()->String::: array bean type get name
sun.management.MappedMXBeanType.ArrayMXBeanType#toOpenTypeData(Object)->Object::: array bean type to open type data
sun.management.MappedMXBeanType.ArrayMXBeanType#toJavaTypeData(Object)->Object::: array bean type to java type data
sun.management.MappedMXBeanType.GenericArrayMXBeanType#getJavaType()->Type::: generic array bean type get java type
sun.management.MappedMXBeanType.GenericArrayMXBeanType#getName()->String::: generic array bean type get name
sun.management.MappedMXBeanType.ListMXBeanType#getJavaType()->Type::: list bean type get java type
sun.management.MappedMXBeanType.ListMXBeanType#getName()->String::: list bean type get name
sun.management.MappedMXBeanType.ListMXBeanType#toOpenTypeData(Object)->Object::: list bean type to open type data
sun.management.MappedMXBeanType.ListMXBeanType#toJavaTypeData(Object)->Object::: list bean type to java type data
sun.management.MappedMXBeanType.MapMXBeanType#getJavaType()->Type::: map bean type get java type
sun.management.MappedMXBeanType.MapMXBeanType#getName()->String::: map bean type get name
sun.management.MappedMXBeanType.MapMXBeanType#toOpenTypeData(Object)->Object::: map bean type to open type data
sun.management.MappedMXBeanType.MapMXBeanType#toJavaTypeData(Object)->Object::: map bean type to java type data
sun.management.MappedMXBeanType.CompositeDataMXBeanType#getJavaType()->Type::: composite data bean type get java type
sun.management.MappedMXBeanType.CompositeDataMXBeanType#getName()->String::: composite data bean type get name
sun.management.MappedMXBeanType.CompositeDataMXBeanType#toOpenTypeData(Object)->Object::: composite data bean type to open type data
sun.management.MappedMXBeanType.CompositeDataMXBeanType#toJavaTypeData(Object)->Object::: composite data bean type to java type data
sun.management.MemoryImpl#getObjectPendingFinalizationCount()->int::: memory impl get object pending finalization count
sun.management.MemoryImpl#gc()->void::: memory impl gc
sun.management.MemoryImpl#getHeapMemoryUsage()->MemoryUsage::: memory impl get heap memory usage
sun.management.MemoryImpl#getNonHeapMemoryUsage()->MemoryUsage::: memory impl get non heap memory usage
sun.management.MemoryImpl#isVerbose()->boolean::: memory impl is verbose
sun.management.MemoryImpl#setVerbose(boolean)->void::: memory impl set verbose
sun.management.MemoryImpl#getMemoryPools()->MemoryPoolMXBean[]::: memory impl get memory pools
sun.management.MemoryImpl#getMemoryManagers()->MemoryManagerMXBean[]::: memory impl get memory managers
sun.management.MemoryImpl#getNotificationInfo()->MBeanNotificationInfo[]::: memory impl get notification info
sun.management.MemoryImpl#createNotification(String, String, MemoryUsage, long)->void::: memory impl create notification
sun.management.MemoryImpl#getObjectName()->ObjectName::: memory impl get object name
sun.management.MemoryManagerImpl#getName()->String::: memory manager impl get name
sun.management.MemoryManagerImpl#isValid()->boolean::: memory manager impl is valid
sun.management.MemoryManagerImpl#getMemoryPoolNames()->String[]::: memory manager impl get memory pool names
sun.management.MemoryManagerImpl#getMemoryPools()->MemoryPoolMXBean[]::: memory manager impl get memory pools
sun.management.MemoryManagerImpl#getNotificationInfo()->MBeanNotificationInfo[]::: memory manager impl get notification info
sun.management.MemoryManagerImpl#getObjectName()->ObjectName::: memory manager impl get object name
sun.management.MemoryNotifInfoCompositeData#getMemoryNotifInfo()->MemoryNotificationInfo::: memory notif info composite data get memory notif info
sun.management.MemoryNotifInfoCompositeData#toCompositeData(MemoryNotificationInfo)->CompositeData::: memory notif info composite data to composite data
sun.management.MemoryNotifInfoCompositeData#getCompositeData()->CompositeData::: memory notif info composite data get composite data
sun.management.MemoryNotifInfoCompositeData#getPoolName(CompositeData)->String::: memory notif info composite data get pool name
sun.management.MemoryNotifInfoCompositeData#getUsage(CompositeData)->MemoryUsage::: memory notif info composite data get usage
sun.management.MemoryNotifInfoCompositeData#getCount(CompositeData)->long::: memory notif info composite data get count
sun.management.MemoryNotifInfoCompositeData#validateCompositeData(CompositeData)->void:::Validate if the input CompositeData has the expected CompositeType (i.e
sun.management.MemoryPoolImpl#getName()->String::: memory pool impl get name
sun.management.MemoryPoolImpl#isValid()->boolean::: memory pool impl is valid
sun.management.MemoryPoolImpl#getType()->MemoryType::: memory pool impl get type
sun.management.MemoryPoolImpl#getUsage()->MemoryUsage::: memory pool impl get usage
sun.management.MemoryPoolImpl#getPeakUsage()->MemoryUsage::: memory pool impl get peak usage
sun.management.MemoryPoolImpl#getUsageThreshold()->long::: memory pool impl get usage threshold
sun.management.MemoryPoolImpl#setUsageThreshold(long)->void::: memory pool impl set usage threshold
sun.management.MemoryPoolImpl#getMemoryManagerNames()->String[]::: memory pool impl get memory manager names
sun.management.MemoryPoolImpl#resetPeakUsage()->void::: memory pool impl reset peak usage
sun.management.MemoryPoolImpl#isUsageThresholdExceeded()->boolean::: memory pool impl is usage threshold exceeded
sun.management.MemoryPoolImpl#getUsageThresholdCount()->long::: memory pool impl get usage threshold count
sun.management.MemoryPoolImpl#isUsageThresholdSupported()->boolean::: memory pool impl is usage threshold supported
sun.management.MemoryPoolImpl#getCollectionUsageThreshold()->long::: memory pool impl get collection usage threshold
sun.management.MemoryPoolImpl#setCollectionUsageThreshold(long)->void::: memory pool impl set collection usage threshold
sun.management.MemoryPoolImpl#isCollectionUsageThresholdExceeded()->boolean::: memory pool impl is collection usage threshold exceeded
sun.management.MemoryPoolImpl#getCollectionUsageThresholdCount()->long::: memory pool impl get collection usage threshold count
sun.management.MemoryPoolImpl#getCollectionUsage()->MemoryUsage::: memory pool impl get collection usage
sun.management.MemoryPoolImpl#isCollectionUsageThresholdSupported()->boolean::: memory pool impl is collection usage threshold supported
sun.management.MemoryPoolImpl.PoolSensor#triggerAction(MemoryUsage)->void::: pool sensor trigger action
sun.management.MemoryPoolImpl.PoolSensor#triggerAction()->void::: pool sensor trigger action
sun.management.MemoryPoolImpl.PoolSensor#clearAction()->void::: pool sensor clear action
sun.management.MemoryPoolImpl.CollectionSensor#triggerAction(MemoryUsage)->void::: collection sensor trigger action
sun.management.MemoryPoolImpl.CollectionSensor#triggerAction()->void::: collection sensor trigger action
sun.management.MemoryPoolImpl.CollectionSensor#clearAction()->void::: collection sensor clear action
sun.management.MemoryPoolImpl#getObjectName()->ObjectName::: memory pool impl get object name
sun.management.MemoryUsageCompositeData#getMemoryUsage()->MemoryUsage::: memory usage composite data get memory usage
sun.management.MemoryUsageCompositeData#toCompositeData(MemoryUsage)->CompositeData::: memory usage composite data to composite data
sun.management.MemoryUsageCompositeData#getCompositeData()->CompositeData::: memory usage composite data get composite data
sun.management.MemoryUsageCompositeData#getMemoryUsageCompositeType()->CompositeType::: memory usage composite data get memory usage composite type
sun.management.MemoryUsageCompositeData#getInit(CompositeData)->long::: memory usage composite data get init
sun.management.MemoryUsageCompositeData#getUsed(CompositeData)->long::: memory usage composite data get used
sun.management.MemoryUsageCompositeData#getCommitted(CompositeData)->long::: memory usage composite data get committed
sun.management.MemoryUsageCompositeData#getMax(CompositeData)->long::: memory usage composite data get max
sun.management.MemoryUsageCompositeData#validateCompositeData(CompositeData)->void:::Validate if the input CompositeData has the expected CompositeType (i.e
sun.management.MethodInfo#getName()->String:::Returns the name of the compiled method.
sun.management.MethodInfo#getType()->long:::Returns the type of the compiled method such as normal-compile, osr-compile, and native-compile.
sun.management.MethodInfo#getCompileSize()->int:::Returns the number of bytes occupied by this compiled method
sun.management.MethodInfo#toString()->String::: method info to string
sun.management.MonitorInfoCompositeData#getMonitorInfo()->MonitorInfo::: monitor info composite data get monitor info
sun.management.MonitorInfoCompositeData#toCompositeData(MonitorInfo)->CompositeData::: monitor info composite data to composite data
sun.management.MonitorInfoCompositeData#getCompositeData()->CompositeData::: monitor info composite data get composite data
sun.management.MonitorInfoCompositeData#v6CompositeType()->CompositeType::: monitor info composite data v6 composite type
sun.management.MonitorInfoCompositeData#getClassName(CompositeData)->String::: monitor info composite data get class name
sun.management.MonitorInfoCompositeData#getIdentityHashCode(CompositeData)->int::: monitor info composite data get identity hash code
sun.management.MonitorInfoCompositeData#getLockedStackFrame(CompositeData)->StackTraceElement::: monitor info composite data get locked stack frame
sun.management.MonitorInfoCompositeData#getLockedStackDepth(CompositeData)->int::: monitor info composite data get locked stack depth
sun.management.MonitorInfoCompositeData#validateCompositeData(CompositeData)->void:::Validate if the input CompositeData has the expected CompositeType (i.e
sun.management.NotificationEmitterSupport#addNotificationListener(NotificationListener, NotificationFilter, Object)->void::: notification emitter support add notification listener
sun.management.NotificationEmitterSupport#removeNotificationListener(NotificationListener)->void::: notification emitter support remove notification listener
sun.management.NotificationEmitterSupport#removeNotificationListener(NotificationListener, NotificationFilter, Object)->void::: notification emitter support remove notification listener
sun.management.NotificationEmitterSupport#sendNotification(Notification)->void::: notification emitter support send notification
sun.management.NotificationEmitterSupport#hasListeners()->boolean::: notification emitter support has listeners
sun.management.NotificationEmitterSupport#getNotificationInfo()->MBeanNotificationInfo[]::: notification emitter support get notification info
sun.management.RuntimeImpl#getName()->String::: runtime impl get name
sun.management.RuntimeImpl#getManagementSpecVersion()->String::: runtime impl get management spec version
sun.management.RuntimeImpl#getVmName()->String::: runtime impl get vm name
sun.management.RuntimeImpl#getVmVendor()->String::: runtime impl get vm vendor
sun.management.RuntimeImpl#getVmVersion()->String::: runtime impl get vm version
sun.management.RuntimeImpl#getSpecName()->String::: runtime impl get spec name
sun.management.RuntimeImpl#getSpecVendor()->String::: runtime impl get spec vendor
sun.management.RuntimeImpl#getSpecVersion()->String::: runtime impl get spec version
sun.management.RuntimeImpl#getClassPath()->String::: runtime impl get class path
sun.management.RuntimeImpl#getLibraryPath()->String::: runtime impl get library path
sun.management.RuntimeImpl#getBootClassPath()->String::: runtime impl get boot class path
sun.management.RuntimeImpl#getInputArguments()->List::: runtime impl get input arguments
sun.management.RuntimeImpl#getUptime()->long::: runtime impl get uptime
sun.management.RuntimeImpl#getStartTime()->long::: runtime impl get start time
sun.management.RuntimeImpl#isBootClassPathSupported()->boolean::: runtime impl is boot class path supported
sun.management.RuntimeImpl#getSystemProperties()->Map::: runtime impl get system properties
sun.management.RuntimeImpl#getObjectName()->ObjectName::: runtime impl get object name
sun.management.Sensor#getName()->String:::Returns the name of this sensor.
sun.management.Sensor#getCount()->long:::Returns the total number of times that this sensor has been triggered.
sun.management.Sensor#isOn()->boolean:::Tests if this sensor is currently on.
sun.management.Sensor#trigger()->void:::Triggers this sensor
sun.management.Sensor#trigger(int)->void:::Triggers this sensor
sun.management.Sensor#trigger(int, MemoryUsage)->void:::Triggers this sensor piggybacking a memory usage object
sun.management.Sensor#clear()->void:::Clears this sensor.
sun.management.Sensor#clear(int)->void:::Clears this sensor and increments the count with the input increment.
sun.management.Sensor#toString()->String::: sensor to string
sun.management.Sensor#triggerAction()->void::: sensor trigger action
sun.management.Sensor#triggerAction(MemoryUsage)->void::: sensor trigger action
sun.management.Sensor#clearAction()->void::: sensor clear action
sun.management.StackTraceElementCompositeData#getStackTraceElement()->StackTraceElement::: stack trace element composite data get stack trace element
sun.management.StackTraceElementCompositeData#from(CompositeData)->StackTraceElement::: stack trace element composite data from
sun.management.StackTraceElementCompositeData#toCompositeData(StackTraceElement)->CompositeData::: stack trace element composite data to composite data
sun.management.StackTraceElementCompositeData#getCompositeData()->CompositeData::: stack trace element composite data get composite data
sun.management.StackTraceElementCompositeData#v5CompositeType()->CompositeType::: stack trace element composite data v5 composite type
sun.management.StackTraceElementCompositeData#validateCompositeData(CompositeData)->void:::Validate if the input CompositeData has the expected CompositeType (i.e
sun.management.ThreadImpl#getThreadCount()->int::: thread impl get thread count
sun.management.ThreadImpl#getPeakThreadCount()->int::: thread impl get peak thread count
sun.management.ThreadImpl#getTotalStartedThreadCount()->long::: thread impl get total started thread count
sun.management.ThreadImpl#getDaemonThreadCount()->int::: thread impl get daemon thread count
sun.management.ThreadImpl#isThreadContentionMonitoringSupported()->boolean::: thread impl is thread contention monitoring supported
sun.management.ThreadImpl#isThreadContentionMonitoringEnabled()->boolean::: thread impl is thread contention monitoring enabled
sun.management.ThreadImpl#isThreadCpuTimeSupported()->boolean::: thread impl is thread cpu time supported
sun.management.ThreadImpl#isCurrentThreadCpuTimeSupported()->boolean::: thread impl is current thread cpu time supported
sun.management.ThreadImpl#isThreadAllocatedMemorySupported()->boolean::: thread impl is thread allocated memory supported
sun.management.ThreadImpl#isThreadCpuTimeEnabled()->boolean::: thread impl is thread cpu time enabled
sun.management.ThreadImpl#isThreadAllocatedMemoryEnabled()->boolean::: thread impl is thread allocated memory enabled
sun.management.ThreadImpl#getAllThreadIds()->long[]::: thread impl get all thread ids
sun.management.ThreadImpl#getThreadInfo(long)->ThreadInfo::: thread impl get thread info
sun.management.ThreadImpl#getThreadInfo(long, int)->ThreadInfo::: thread impl get thread info
sun.management.ThreadImpl#getThreadInfo(long[])->ThreadInfo[]::: thread impl get thread info
sun.management.ThreadImpl#getThreadInfo(long[], int)->ThreadInfo[]::: thread impl get thread info
sun.management.ThreadImpl#setThreadContentionMonitoringEnabled(boolean)->void::: thread impl set thread contention monitoring enabled
sun.management.ThreadImpl#getCurrentThreadCpuTime()->long::: thread impl get current thread cpu time
sun.management.ThreadImpl#getThreadCpuTime(long)->long::: thread impl get thread cpu time
sun.management.ThreadImpl#getThreadCpuTime(long[])->long[]::: thread impl get thread cpu time
sun.management.ThreadImpl#getCurrentThreadUserTime()->long::: thread impl get current thread user time
sun.management.ThreadImpl#getThreadUserTime(long)->long::: thread impl get thread user time
sun.management.ThreadImpl#getThreadUserTime(long[])->long[]::: thread impl get thread user time
sun.management.ThreadImpl#setThreadCpuTimeEnabled(boolean)->void::: thread impl set thread cpu time enabled
sun.management.ThreadImpl#getThreadAllocatedBytes(long)->long::: thread impl get thread allocated bytes
sun.management.ThreadImpl#getThreadAllocatedBytes(long[])->long[]::: thread impl get thread allocated bytes
sun.management.ThreadImpl#setThreadAllocatedMemoryEnabled(boolean)->void::: thread impl set thread allocated memory enabled
sun.management.ThreadImpl#findMonitorDeadlockedThreads()->long[]::: thread impl find monitor deadlocked threads
sun.management.ThreadImpl#findDeadlockedThreads()->long[]::: thread impl find deadlocked threads
sun.management.ThreadImpl#resetPeakThreadCount()->void::: thread impl reset peak thread count
sun.management.ThreadImpl#isObjectMonitorUsageSupported()->boolean::: thread impl is object monitor usage supported
sun.management.ThreadImpl#isSynchronizerUsageSupported()->boolean::: thread impl is synchronizer usage supported
sun.management.ThreadImpl#getThreadInfo(long[], boolean, boolean)->ThreadInfo[]::: thread impl get thread info
sun.management.ThreadImpl#getThreadInfo(long[], boolean, boolean, int)->ThreadInfo[]::: thread impl get thread info
sun.management.ThreadImpl#dumpAllThreads(boolean, boolean)->ThreadInfo[]::: thread impl dump all threads
sun.management.ThreadImpl#dumpAllThreads(boolean, boolean, int)->ThreadInfo[]::: thread impl dump all threads
sun.management.ThreadImpl#getObjectName()->ObjectName::: thread impl get object name
sun.management.ThreadInfoCompositeData#getThreadInfo()->ThreadInfo::: thread info composite data get thread info
sun.management.ThreadInfoCompositeData#getInstance(CompositeData)->ThreadInfoCompositeData::: thread info composite data get instance
sun.management.ThreadInfoCompositeData#toCompositeData(ThreadInfo)->CompositeData::: thread info composite data to composite data
sun.management.ThreadInfoCompositeData#getCompositeData()->CompositeData::: thread info composite data get composite data
sun.management.ThreadInfoCompositeData#threadId()->long::: thread info composite data thread id
sun.management.ThreadInfoCompositeData#threadName()->String::: thread info composite data thread name
sun.management.ThreadInfoCompositeData#threadState()->Thread.State::: thread info composite data thread state
sun.management.ThreadInfoCompositeData#blockedTime()->long::: thread info composite data blocked time
sun.management.ThreadInfoCompositeData#blockedCount()->long::: thread info composite data blocked count
sun.management.ThreadInfoCompositeData#waitedTime()->long::: thread info composite data waited time
sun.management.ThreadInfoCompositeData#waitedCount()->long::: thread info composite data waited count
sun.management.ThreadInfoCompositeData#lockName()->String::: thread info composite data lock name
sun.management.ThreadInfoCompositeData#lockOwnerId()->long::: thread info composite data lock owner id
sun.management.ThreadInfoCompositeData#lockOwnerName()->String::: thread info composite data lock owner name
sun.management.ThreadInfoCompositeData#suspended()->boolean::: thread info composite data suspended
sun.management.ThreadInfoCompositeData#inNative()->boolean::: thread info composite data in native
sun.management.ThreadInfoCompositeData#isDaemon()->boolean::: thread info composite data is daemon
sun.management.ThreadInfoCompositeData#getPriority()->int::: thread info composite data get priority
sun.management.ThreadInfoCompositeData#stackTrace()->StackTraceElement[]::: thread info composite data stack trace
sun.management.ThreadInfoCompositeData#lockInfo()->LockInfo::: thread info composite data lock info
sun.management.ThreadInfoCompositeData#lockedMonitors()->MonitorInfo[]:::Returns an empty array if locked_monitors attribute is not present.
sun.management.ThreadInfoCompositeData#lockedSynchronizers()->LockInfo[]:::Returns an empty array if locked_monitors attribute is not present.
sun.management.ThreadInfoCompositeData#validateCompositeData(CompositeData)->void:::Validate if the input CompositeData has the expected CompositeType (i.e
sun.management.ThreadInfoCompositeData.ThreadInfoCompositeTypes#ofVersion(int)->CompositeType::: thread info composite types of version
sun.management.ThreadInfoCompositeData.ThreadInfoCompositeTypes#initCompositeTypes()->Map::: thread info composite types init composite types
sun.management.ThreadInfoCompositeData.ThreadInfoCompositeTypes#initCompositeType()->CompositeType::: thread info composite types init composite type
sun.management.ThreadInfoCompositeData.ThreadInfoCompositeTypes#initV5CompositeType(CompositeType)->CompositeType::: thread info composite types init v5 composite type
sun.management.ThreadInfoCompositeData.ThreadInfoCompositeTypes#initV6CompositeType(CompositeType)->CompositeType::: thread info composite types init v6 composite type
sun.management.Util#newException(Exception)->RuntimeException::: util new exception
sun.management.Util#toStringArray(List)->String[]::: util to string array
sun.management.Util#newObjectName(String, String)->ObjectName::: util new object name
sun.management.Util#newObjectName(String)->ObjectName::: util new object name
sun.management.Util#checkAccess(ManagementPermission)->void:::Check that the current context is trusted to perform monitoring or management
sun.management.Util#checkMonitorAccess()->void::: util check monitor access
sun.management.Util#checkControlAccess()->void::: util check control access
sun.management.VMManagement#isCompilationTimeMonitoringSupported()->boolean::: management is compilation time monitoring supported
sun.management.VMManagement#isThreadContentionMonitoringSupported()->boolean::: management is thread contention monitoring supported
sun.management.VMManagement#isThreadContentionMonitoringEnabled()->boolean::: management is thread contention monitoring enabled
sun.management.VMManagement#isCurrentThreadCpuTimeSupported()->boolean::: management is current thread cpu time supported
sun.management.VMManagement#isOtherThreadCpuTimeSupported()->boolean::: management is other thread cpu time supported
sun.management.VMManagement#isThreadCpuTimeEnabled()->boolean::: management is thread cpu time enabled
sun.management.VMManagement#isBootClassPathSupported()->boolean::: management is boot class path supported
sun.management.VMManagement#isObjectMonitorUsageSupported()->boolean::: management is object monitor usage supported
sun.management.VMManagement#isSynchronizerUsageSupported()->boolean::: management is synchronizer usage supported
sun.management.VMManagement#isThreadAllocatedMemorySupported()->boolean::: management is thread allocated memory supported
sun.management.VMManagement#isThreadAllocatedMemoryEnabled()->boolean::: management is thread allocated memory enabled
sun.management.VMManagement#isGcNotificationSupported()->boolean::: management is gc notification supported
sun.management.VMManagement#isRemoteDiagnosticCommandsSupported()->boolean::: management is remote diagnostic commands supported
sun.management.VMManagement#getTotalClassCount()->long::: management get total class count
sun.management.VMManagement#getLoadedClassCount()->int::: management get loaded class count
sun.management.VMManagement#getUnloadedClassCount()->long::: management get unloaded class count
sun.management.VMManagement#getVerboseClass()->boolean::: management get verbose class
sun.management.VMManagement#getVerboseGC()->boolean::: management get verbose c
sun.management.VMManagement#getManagementVersion()->String::: management get management version
sun.management.VMManagement#getVmId()->String::: management get vm id
sun.management.VMManagement#getVmName()->String::: management get vm name
sun.management.VMManagement#getVmVendor()->String::: management get vm vendor
sun.management.VMManagement#getVmVersion()->String::: management get vm version
sun.management.VMManagement#getVmSpecName()->String::: management get vm spec name
sun.management.VMManagement#getVmSpecVendor()->String::: management get vm spec vendor
sun.management.VMManagement#getVmSpecVersion()->String::: management get vm spec version
sun.management.VMManagement#getClassPath()->String::: management get class path
sun.management.VMManagement#getLibraryPath()->String::: management get library path
sun.management.VMManagement#getBootClassPath()->String::: management get boot class path
sun.management.VMManagement#getVmArguments()->List::: management get vm arguments
sun.management.VMManagement#getStartupTime()->long::: management get startup time
sun.management.VMManagement#getUptime()->long::: management get uptime
sun.management.VMManagement#getAvailableProcessors()->int::: management get available processors
sun.management.VMManagement#getCompilerName()->String::: management get compiler name
sun.management.VMManagement#getTotalCompileTime()->long::: management get total compile time
sun.management.VMManagement#getTotalThreadCount()->long::: management get total thread count
sun.management.VMManagement#getLiveThreadCount()->int::: management get live thread count
sun.management.VMManagement#getPeakThreadCount()->int::: management get peak thread count
sun.management.VMManagement#getDaemonThreadCount()->int::: management get daemon thread count
sun.management.VMManagement#getOsName()->String::: management get os name
sun.management.VMManagement#getOsArch()->String::: management get os arch
sun.management.VMManagement#getOsVersion()->String::: management get os version
sun.management.VMManagement#getSafepointCount()->long::: management get safepoint count
sun.management.VMManagement#getTotalSafepointTime()->long::: management get total safepoint time
sun.management.VMManagement#getSafepointSyncTime()->long::: management get safepoint sync time
sun.management.VMManagement#getTotalApplicationNonStoppedTime()->long::: management get total application non stopped time
sun.management.VMManagement#getLoadedClassSize()->long::: management get loaded class size
sun.management.VMManagement#getUnloadedClassSize()->long::: management get unloaded class size
sun.management.VMManagement#getClassLoadingTime()->long::: management get class loading time
sun.management.VMManagement#getMethodDataSize()->long::: management get method data size
sun.management.VMManagement#getInitializedClassCount()->long::: management get initialized class count
sun.management.VMManagement#getClassInitializationTime()->long::: management get class initialization time
sun.management.VMManagement#getClassVerificationTime()->long::: management get class verification time
sun.management.VMManagement#getInternalCounters(String)->List::: management get internal counters
sun.management.VMManagementImpl#isCompilationTimeMonitoringSupported()->boolean::: management impl is compilation time monitoring supported
sun.management.VMManagementImpl#isThreadContentionMonitoringSupported()->boolean::: management impl is thread contention monitoring supported
sun.management.VMManagementImpl#isCurrentThreadCpuTimeSupported()->boolean::: management impl is current thread cpu time supported
sun.management.VMManagementImpl#isOtherThreadCpuTimeSupported()->boolean::: management impl is other thread cpu time supported
sun.management.VMManagementImpl#isBootClassPathSupported()->boolean::: management impl is boot class path supported
sun.management.VMManagementImpl#isObjectMonitorUsageSupported()->boolean::: management impl is object monitor usage supported
sun.management.VMManagementImpl#isSynchronizerUsageSupported()->boolean::: management impl is synchronizer usage supported
sun.management.VMManagementImpl#isThreadAllocatedMemorySupported()->boolean::: management impl is thread allocated memory supported
sun.management.VMManagementImpl#isGcNotificationSupported()->boolean::: management impl is gc notification supported
sun.management.VMManagementImpl#isRemoteDiagnosticCommandsSupported()->boolean::: management impl is remote diagnostic commands supported
sun.management.VMManagementImpl#isThreadContentionMonitoringEnabled()->boolean::: management impl is thread contention monitoring enabled
sun.management.VMManagementImpl#isThreadCpuTimeEnabled()->boolean::: management impl is thread cpu time enabled
sun.management.VMManagementImpl#isThreadAllocatedMemoryEnabled()->boolean::: management impl is thread allocated memory enabled
sun.management.VMManagementImpl#getLoadedClassCount()->int::: management impl get loaded class count
sun.management.VMManagementImpl#getTotalClassCount()->long::: management impl get total class count
sun.management.VMManagementImpl#getUnloadedClassCount()->long::: management impl get unloaded class count
sun.management.VMManagementImpl#getVerboseClass()->boolean::: management impl get verbose class
sun.management.VMManagementImpl#getVerboseGC()->boolean::: management impl get verbose c
sun.management.VMManagementImpl#getManagementVersion()->String::: management impl get management version
sun.management.VMManagementImpl#getVmId()->String::: management impl get vm id
sun.management.VMManagementImpl#getVmName()->String::: management impl get vm name
sun.management.VMManagementImpl#getVmVendor()->String::: management impl get vm vendor
sun.management.VMManagementImpl#getVmVersion()->String::: management impl get vm version
sun.management.VMManagementImpl#getVmSpecName()->String::: management impl get vm spec name
sun.management.VMManagementImpl#getVmSpecVendor()->String::: management impl get vm spec vendor
sun.management.VMManagementImpl#getVmSpecVersion()->String::: management impl get vm spec version
sun.management.VMManagementImpl#getClassPath()->String::: management impl get class path
sun.management.VMManagementImpl#getLibraryPath()->String::: management impl get library path
sun.management.VMManagementImpl#getBootClassPath()->String::: management impl get boot class path
sun.management.VMManagementImpl#getUptime()->long::: management impl get uptime
sun.management.VMManagementImpl#getVmArguments()->List::: management impl get vm arguments
sun.management.VMManagementImpl#getVmArguments0()->String[]::: management impl get vm arguments0
sun.management.VMManagementImpl#getStartupTime()->long::: management impl get startup time
sun.management.VMManagementImpl#getAvailableProcessors()->int::: management impl get available processors
sun.management.VMManagementImpl#getCompilerName()->String::: management impl get compiler name
sun.management.VMManagementImpl#getTotalCompileTime()->long::: management impl get total compile time
sun.management.VMManagementImpl#getTotalThreadCount()->long::: management impl get total thread count
sun.management.VMManagementImpl#getLiveThreadCount()->int::: management impl get live thread count
sun.management.VMManagementImpl#getPeakThreadCount()->int::: management impl get peak thread count
sun.management.VMManagementImpl#getDaemonThreadCount()->int::: management impl get daemon thread count
sun.management.VMManagementImpl#getOsName()->String::: management impl get os name
sun.management.VMManagementImpl#getOsArch()->String::: management impl get os arch
sun.management.VMManagementImpl#getOsVersion()->String::: management impl get os version
sun.management.VMManagementImpl#getSafepointCount()->long::: management impl get safepoint count
sun.management.VMManagementImpl#getTotalSafepointTime()->long::: management impl get total safepoint time
sun.management.VMManagementImpl#getSafepointSyncTime()->long::: management impl get safepoint sync time
sun.management.VMManagementImpl#getTotalApplicationNonStoppedTime()->long::: management impl get total application non stopped time
sun.management.VMManagementImpl#getLoadedClassSize()->long::: management impl get loaded class size
sun.management.VMManagementImpl#getUnloadedClassSize()->long::: management impl get unloaded class size
sun.management.VMManagementImpl#getClassLoadingTime()->long::: management impl get class loading time
sun.management.VMManagementImpl#getMethodDataSize()->long::: management impl get method data size
sun.management.VMManagementImpl#getInitializedClassCount()->long::: management impl get initialized class count
sun.management.VMManagementImpl#getClassInitializationTime()->long::: management impl get class initialization time
sun.management.VMManagementImpl#getClassVerificationTime()->long::: management impl get class verification time
sun.management.VMManagementImpl#getInternalCounters(String)->List::: management impl get internal counters
