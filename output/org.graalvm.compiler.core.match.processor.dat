MatchProcessor#getSupportedSourceVersion()::: match processor get supported source version:::return->SourceVersion->latest
MatchProcessor.RuleParser#next()::: rule parser next:::return
MatchProcessor.RuleParser#peek(String)::: rule parser peek:::if->if->throw->new->RuleParseError->throw->new->RuleParseError->return
MatchProcessor.RuleParser#done()::: rule parser done:::return
MatchProcessor.RuleParser#parseExpression()::: rule parser parse expression:::if->peek->equals->next->descriptor->parseType->for->n->size->for->n->size->if->peek->equals->next->return->throw->new->RuleParseError->throw->peek->new->RuleParseError
MatchProcessor.RuleParser#parseType(boolean)::: rule parser parse type:::type->name->if->Character->peek->charAt->isUpperCase->token->next->knownTypes->get->if->throw->new->RuleParseError->if->peek->equals->next->next->originatingElements->addAll->else->if->Character->peek->charAt->isLowerCase->next->else->throw->peek->new->RuleParseError->requiredPackages->add->if->if->capturedNames->contains->capturedNames->add->capturedTypes->add->else->index->capturedNames->indexOf->if->capturedTypes->get->throw->new->RuleParseError->return->new->MatchDescriptor
MatchProcessor.RuleParser#generateVariants()::: rule parser generate variants:::return->matchDescriptor->generateVariants
MatchProcessor.RuleParser#generatePositionDeclarations(Set):::Recursively accumulate any required Position declarations.:::matchDescriptor->generatePositionDeclarations
MatchProcessor.RuleParser#capturedTypes()::: rule parser captured types:::return
MatchProcessor.RuleParser#capturedNames()::: rule parser captured names:::return
MatchProcessor#getLog()::: match processor get log:::if->if->processingEnv->getClass->getName->contains->new->PrintWriter->else->try->file->processingEnv->getFiler->getClass->getSimpleName->createResource->file->toUri->getPath->new->FileWriter->new->PrintWriter->catch->finally->return
MatchProcessor#logMessage(String, Object...)::: match processor log message:::if->return->bw->getLog->if->bw->printf->bw->flush
MatchProcessor#logException(Throwable)::: match processor log exception:::if->return->bw->getLog->if->t->printStackTrace->bw->flush
MatchProcessor#reportExceptionThrow(Element, Throwable):::Bugs in an annotation processor can cause silent failure so try to report any exception throws as errors.:::if->logMessage->logException->Arrays->Arrays->t->getStackTrace->copyOf->toString->printError
MatchProcessor#declareType(TypeMirror, String, String, String, List, boolean, boolean, boolean, Element)::: match processor declare type:::descriptor->new->TypeDescriptor->add->knownTypes->put
MatchProcessor#findPackage(Element)::: match processor find package:::p->processingEnv->getElementUtils->getPackageOf->if->return->p->getQualifiedName->toString->throw->new->InternalError
MatchProcessor.MatchDescriptor#generatePositionDeclarations(Set)::: match descriptor generate position declarations:::if->return->declarations->generatePositionDeclaration->add->foreach->desc->generatePositionDeclarations
MatchProcessor.MatchDescriptor#recurseVariants(int)::: match descriptor recurse variants:::if->return->new->ArrayList<>->currentVariants->generateVariants->if->return->subVariants->recurseVariants->result->new->ArrayList<>->foreach->foreach->result->add->if->result->add->return
MatchProcessor.MatchDescriptor#generateVariants():::Recursively generate all the variants of this rule pattern:::prefix->formatPrefix->suffix->formatSuffix->variants->new->ArrayList<>->if->foreach->recurseVariants->variants->add->else->variants->add->return
MatchProcessor.MatchDescriptor#formatPrefix()::: match descriptor format prefix:::if->return->String->format->else->return->String->format
MatchProcessor.MatchDescriptor#formatSuffix()::: match descriptor format suffix:::if->if->size->return->else->if->size->return->if->return->return
MatchProcessor.MatchDescriptor#generatePositionDeclaration()::: match descriptor generate position declaration:::return->String->String->join->format
MatchProcessor#fullClassName(Element):::Strip the package off a class name leaving the full class name including any outer classes.:::pkg->findPackage->return->getQualifiedName->toString->pkg->length->substring
MatchProcessor#createFiles(MatchRuleDescriptor)::: match processor create files:::pkg->getEnclosingElement->getQualifiedName->toString->topDeclaringClass->getSimpleName->matchStatementClassName->originatingElements->size->new->ElementArr->toArray->typeUtils->typeUtils->filer->processingEnv->getFiler->try->out->createSourceFile->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->foreach->out->println->out->println->out->println->out->println->foreach->values->args->new->StringBuilder->types->new->StringBuilder->count->size->index->foreach->args->append->args->arg->getSimpleName->append->args->append->types->String->typeUtils->arg->asType->asElement->fullClassName->format->append->if->args->append->types->append->out->invoker->argumentsListName->printf->out->invoker->wrapperClass->printf->out->invoker->wrapperClass->printf->out->printf->out->printf->out->printf->out->printf->out->printf->out->printf->out->printf->out->printf->out->printf->out->println->desc->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->foreach->out->println->out->println->out->println->i->foreach->comma->size->out->matchRule->ruleBuilder->printf->out->println->out->println->out->println->out->println->out->println->out->println->catch->finally->this->createProviderFile
MatchProcessor#createSourceFile(String, String, Filer, Element...)::: match processor create source file:::try->sourceFile->filer->createSourceFile->return->sourceFile->openWriter->new->PrintWriter->catch->throw->new->RuntimeException->finally
MatchProcessor.MatchRuleItem#ruleBuilder()::: match rule item rule builder:::return->String->invoker->wrapperClass->invoker->argumentsListName->format
MatchProcessor.MethodInvokerItem#wrapperClass()::: method invoker item wrapper class:::return
MatchProcessor.MethodInvokerItem#argumentsListName()::: method invoker item arguments list name:::return
MatchProcessor#topDeclaringType(Element)::: match processor top declaring type:::enclosing->element->getEnclosingElement->if->enclosing->getKind->return->return->topDeclaringType
MatchProcessor#doProcess(Set, RoundEnvironment)::: match processor do process:::if->roundEnv->processingOver->return->logMessage->matchRulesTypeElement->getTypeElement->matchRuleTypeElement->getTypeElement->matchRulesTypeMirror->matchRulesTypeElement->asType->matchRuleTypeMirror->matchRuleTypeElement->asType->matchableNodeTypeElement->getTypeElement->matchableNodesTypeElement->getTypeElement->try->foreach->roundEnv->getElementsAnnotatedWith->logMessage->processMatchableNodes->foreach->roundEnv->getElementsAnnotatedWith->logMessage->processMatchableNodes->valueTypeMirror->getTypeElement->asType->Collections->emptyList->new->TypeDescriptor->map->new->HashMap<>->foreach->roundEnv->getElementsAnnotatedWith->matchRule->getAnnotation->matchRuleAnnotations->Collections->singletonList->processMatchRules->foreach->roundEnv->getElementsAnnotatedWith->matchRules->getAnnotation->matchRuleAnnotations->getAnnotationValueList->processMatchRules->foreach->map->values->createFiles->catch->reportExceptionThrow->finally->return
MatchProcessor#processMatchableNodes(Element):::Build up the type table to be used during parsing of the MatchRule.:::if->processedMatchableNodes->contains->try->processedMatchableNodes->add->matchableNodeAnnotations->mirror->getType->getAnnotation->if->getAnnotationValueList->else->getType->getAnnotation->if->Collections->singletonList->else->return->topDeclaringType->topDeclaringType->foreach->processMatchableNode->catch->reportExceptionThrow->finally
MatchProcessor#processMatchableNode(Element, TypeElement, AnnotationMirror)::: match processor process matchable node:::logMessage->nodeClass->nodePackage->nodeClassMirror->getAnnotationValue->if->throw->new->InternalError->if->nodeClassMirror->toString->equals->topDeclaringType->getQualifiedName->toString->else->nodeClassMirror->toString->typeElement->processingEnv->getElementUtils->getTypeElement->if->printError->return->findPackage->nodeClass->nodePackage->length->substring->shortName->nodeClass->nodeClass->length->substring->typeUtils->processingEnv->getTypeUtils->nodeClassElement->typeUtils->asElement->inputs->getAnnotationValueList->foreach->ok->current->while->foreach->ElementFilter->current->getEnclosedElements->fieldsIn->if->fieldElement->getSimpleName->toString->equals->break->theSuper->current->getSuperclass->typeUtils->asElement->if->nodeClassElement->getSimpleName->printError->commutative->getAnnotationValue->shareable->getAnnotationValue->ignoresSideEffects->getAnnotationValue->declareType
MatchProcessor#processMatchRules(Map, Element, List)::: match processor process match rules:::if->processedMatchRules->contains->try->processedMatchRules->add->findMatchableNodes->topDeclaringType->topDeclaringType->info->map->get->if->new->MatchRuleDescriptor->map->put->foreach->processMatchRule->catch->reportExceptionThrow->finally
MatchProcessor#findMatchableNodes(Element):::Search the super types of element for MatchableNode definitions:::processMatchableNodes->enclosing->element->getEnclosingElement->while->if->enclosing->getKind->enclosing->getKind->current->while->processMatchableNodes->foreach->current->getInterfaces->interfaceElement->typeUtils->asElement->processMatchableNodes->findMatchableNodes->theSuper->current->getSuperclass->typeUtils->asElement->enclosing->getEnclosingElement
MatchProcessor#typeUtils()::: match processor type utils:::return->processingEnv->getTypeUtils
MatchProcessor#processMatchRule(ExecutableElement, MatchRuleDescriptor, AnnotationMirror)::: match processor process match rule:::logMessage->typeUtils->typeUtils->if->method->getModifiers->contains->method->getSimpleName->printError->return->if->method->getModifiers->contains->method->getSimpleName->printError->return->try->returnType->method->getReturnType->if->typeUtils->processingEnv->getElementUtils->getTypeElement->asType->isSameType->printError->return->rule->getAnnotationValue->parser->new->RuleParser->expectedTypes->parser->capturedTypes->expectedNames->parser->capturedNames->actualParameters->method->getParameters->if->expectedTypes->size->actualParameters->size->expectedTypes->size->actualParameters->size->printError->return->foreach->name->parameter->getSimpleName->toString->nameIndex->expectedNames->indexOf->if->printError->return->type->parameter->asType->if->typeUtils->expectedTypes->get->isAssignable->expectedTypes->get->printError->return->methodName->method->getSimpleName->toString->invoker->get->if->topDeclaringType->getSimpleName->toString->new->MethodInvokerItem->put->else->if->method->getReceiverType->method->getSimpleName->getReceiverType->getSimpleName->printError->return->enclosing->method->getEnclosingElement->declaringClass->separator->originatingElementsList->originatingElementsList->add->while->if->enclosing->getKind->enclosing->getKind->enclosing->getKind->if->enclosing->getModifiers->contains->enclosing->getKind->name->toLowerCase->printError->return->originatingElementsList->add->enclosing->getSimpleName->else->if->enclosing->getKind->break->else->enclosing->getKind->name->toLowerCase->printError->return->enclosing->getEnclosingElement->originatingElementsList->addAll->addAll->parser->generatePositionDeclarations->matches->parser->generateVariants->foreach->new->MatchRuleItem->add->catch->e->getMessage->printError->finally
MatchProcessor#elementForMessage(Element)::: match processor element for message:::if->currentRound->getRootElements->contains->return->return
MatchProcessor#printError(Element, String, Object...)::: match processor print error:::e->elementForMessage->prefix->processingEnv->getMessager->String->format->printMessage
MatchProcessor#printError(Element, AnnotationMirror, String, Object...)::: match processor print error:::e->elementForMessage->prefix->processingEnv->getMessager->String->format->printMessage
