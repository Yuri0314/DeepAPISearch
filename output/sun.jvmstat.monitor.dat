sun.jvmstat.monitor.AbstractMonitor#getName()->String::: abstract monitor get name
sun.jvmstat.monitor.AbstractMonitor#getBaseName()->String::: abstract monitor get base name
sun.jvmstat.monitor.AbstractMonitor#getUnits()->Units::: abstract monitor get units
sun.jvmstat.monitor.AbstractMonitor#getVariability()->Variability::: abstract monitor get variability
sun.jvmstat.monitor.AbstractMonitor#isVector()->boolean::: abstract monitor is vector
sun.jvmstat.monitor.AbstractMonitor#getVectorLength()->int::: abstract monitor get vector length
sun.jvmstat.monitor.AbstractMonitor#isSupported()->boolean::: abstract monitor is supported
sun.jvmstat.monitor.AbstractMonitor#getValue()->Object::: abstract monitor get value
sun.jvmstat.monitor.BufferedMonitoredVm#getBytes()->byte[]:::Interface to get the bytes associated with the instrumentation for the target Java Virtual Machine.
sun.jvmstat.monitor.BufferedMonitoredVm#getCapacity()->int:::Interface to get the size of the instrumentation buffer for the target Java Virtual Machine.
sun.jvmstat.monitor.ByteArrayMonitor#byteArrayValue()->byte[]:::Get a copy of the current values of the elements of the ByteArrayInstrument object.
sun.jvmstat.monitor.ByteArrayMonitor#byteAt(int)->byte:::Get the current value of an element of the ByteArrayInstrument object.
sun.jvmstat.monitor.HostIdentifier#resolve(VmIdentifier)->VmIdentifier:::Resolve a VmIdentifier with this HostIdentifier
sun.jvmstat.monitor.HostIdentifier#getScheme()->String:::Return the Scheme, or protocol, portion of this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getSchemeSpecificPart()->String:::Return the Scheme Specific Part of this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getUserInfo()->String:::Return the User Info part of this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getHost()->String:::Return the Host part of this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getPort()->int:::Return the Port for of this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getPath()->String:::Return the Path part of this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getQuery()->String:::Return the Query part of this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getFragment()->String:::Return the Fragment part of this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getMode()->String:::Return the mode indicated in this HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#getURI()->URI:::Return the URI associated with the HostIdentifier.
sun.jvmstat.monitor.HostIdentifier#hashCode()->int:::Return the hash code for this HostIdentifier
sun.jvmstat.monitor.HostIdentifier#equals(Object)->boolean:::Test for quality with other objects.
sun.jvmstat.monitor.HostIdentifier#toString()->String:::Convert to a string representation
sun.jvmstat.monitor.IntegerMonitor#intValue()->int:::Get the value of this Integer Instrumentation Object  return int - the current value of this instrumentation object
sun.jvmstat.monitor.LongMonitor#longValue()->long:::Get the current value of this LongInstrument object.
sun.jvmstat.monitor.Monitor#getName()->String:::Returns the name of this instrumentation object.
sun.jvmstat.monitor.Monitor#getBaseName()->String:::Returns the base name of this instrumentation object
sun.jvmstat.monitor.Monitor#getUnits()->Units:::Returns the Units for this instrumentation monitoring object.
sun.jvmstat.monitor.Monitor#getVariability()->Variability:::Returns the Variability for this instrumentation object.
sun.jvmstat.monitor.Monitor#isVector()->boolean:::Test if the instrumentation object is a vector type.
sun.jvmstat.monitor.Monitor#getVectorLength()->int:::Return the length of the vector.
sun.jvmstat.monitor.Monitor#isSupported()->boolean:::Test if the instrumentation object is supported.
sun.jvmstat.monitor.Monitor#getValue()->Object:::Return an Object that encapsulates this instrumentation object's current data value.
sun.jvmstat.monitor.MonitoredHost#getMonitoredHost(String)->MonitoredHost:::Factory method to construct MonitoredHost instances to manage connections to the host indicated by hostIdString
sun.jvmstat.monitor.MonitoredHost#getMonitoredHost(VmIdentifier)->MonitoredHost:::Factory method to construct a MonitoredHost instance to manage the connection to the Java Virtual Machine indicated by vmid
sun.jvmstat.monitor.MonitoredHost#getMonitoredHost(HostIdentifier)->MonitoredHost:::Factory method to construct a MonitoredHost instance to manage the connection to the host indicated by hostId.
sun.jvmstat.monitor.MonitoredHost#resolveHostId(HostIdentifier)->HostIdentifier:::Method to resolve unspecified components of the given HostIdentifier by constructing a new HostIdentifier that replaces the unspecified components with the default values.
sun.jvmstat.monitor.MonitoredHost#getHostIdentifier()->HostIdentifier:::Return the resolved HostIdentifier for this MonitoredHost.
sun.jvmstat.monitor.MonitoredHost#setInterval(int)->void:::Set the polling interval for this MonitoredHost.
sun.jvmstat.monitor.MonitoredHost#getInterval()->int:::Get the polling interval.
sun.jvmstat.monitor.MonitoredHost#setLastException(Exception)->void:::Set the last exception encountered while polling this MonitoredHost.
sun.jvmstat.monitor.MonitoredHost#getLastException()->Exception:::Get the last exception encountered while polling this MonitoredHost.
sun.jvmstat.monitor.MonitoredHost#clearLastException()->void:::Clear the last exception.
sun.jvmstat.monitor.MonitoredHost#isErrored()->boolean:::Test if this MonitoredHost is in the errored state
sun.jvmstat.monitor.MonitoredHost#getMonitoredVm(VmIdentifier)->MonitoredVm:::Get the MonitoredVm for the given Java Virtual Machine
sun.jvmstat.monitor.MonitoredHost#getMonitoredVm(VmIdentifier, int)->MonitoredVm:::Get the MonitoredVm for the given Java Virtual Machine
sun.jvmstat.monitor.MonitoredHost#detach(MonitoredVm)->void:::Detach from the indicated MonitoredVm.
sun.jvmstat.monitor.MonitoredHost#addHostListener(HostListener)->void:::Add a HostListener
sun.jvmstat.monitor.MonitoredHost#removeHostListener(HostListener)->void:::Remove a HostListener
sun.jvmstat.monitor.MonitoredHost#activeVms()->Set:::Return the current set of active Java Virtual Machines for this MonitoredHost
sun.jvmstat.monitor.MonitoredHostService#getMonitoredHost(HostIdentifier)->MonitoredHost:::Construct a MonitoredHost instance to manage the connection to the host indicated by hostId.
sun.jvmstat.monitor.MonitoredHostService#getScheme()->String:::Get the scheme that this service supports.
sun.jvmstat.monitor.MonitoredVm#getVmIdentifier()->VmIdentifier:::Get the VmIdentifier associated with this MonitoredVm
sun.jvmstat.monitor.MonitoredVm#findByName(String)->Monitor:::Find a named Instrumentation object
sun.jvmstat.monitor.MonitoredVm#findByPattern(String)->List:::Find all Instrumentation objects with names matching the given pattern
sun.jvmstat.monitor.MonitoredVm#detach()->void:::Detach from target Java Virtual Machine
sun.jvmstat.monitor.MonitoredVm#setInterval(int)->void:::Set the polling interval to interval milliseconds
sun.jvmstat.monitor.MonitoredVm#getInterval()->int:::Get the polling interval.
sun.jvmstat.monitor.MonitoredVm#setLastException(Exception)->void:::Set the last exception encountered while polling this MonitoredVm
sun.jvmstat.monitor.MonitoredVm#getLastException()->Exception:::Get the last exception encountered while polling this MonitoredVm
sun.jvmstat.monitor.MonitoredVm#clearLastException()->void:::Clear the last exception
sun.jvmstat.monitor.MonitoredVm#isErrored()->boolean:::Test if this MonitoredVm is in the errored state
sun.jvmstat.monitor.MonitoredVm#addVmListener(VmListener)->void:::Add a VmListener
sun.jvmstat.monitor.MonitoredVm#removeVmListener(VmListener)->void:::Remove a VmListener
sun.jvmstat.monitor.MonitoredVmUtil#vmVersion(MonitoredVm)->String:::Return the Java Virtual Machine Version.
sun.jvmstat.monitor.MonitoredVmUtil#commandLine(MonitoredVm)->String:::Return the command line for the target Java application.
sun.jvmstat.monitor.MonitoredVmUtil#mainArgs(MonitoredVm)->String:::Return the arguments to the main class for the target Java application
sun.jvmstat.monitor.MonitoredVmUtil#mainClass(MonitoredVm, boolean)->String:::Return the main class for the target Java application
sun.jvmstat.monitor.MonitoredVmUtil#jvmArgs(MonitoredVm)->String:::Return the JVM arguments for the target Java application.
sun.jvmstat.monitor.MonitoredVmUtil#jvmFlags(MonitoredVm)->String:::Return the JVM flags for the target Java application.
sun.jvmstat.monitor.MonitoredVmUtil#isAttachable(MonitoredVm)->boolean:::Returns true if the VM supports attach-on-demand.
sun.jvmstat.monitor.StringMonitor#stringValue()->String:::Get a copy of the current value of the StringInstrument object.
sun.jvmstat.monitor.Units#toString()->String:::Returns a string describing this Unit of measurement attribute
sun.jvmstat.monitor.Units#intValue()->int:::Returns the integer representation of this Units attribute
sun.jvmstat.monitor.Units#toUnits(int)->Units:::Maps an integer value to its corresponding Units attribute
sun.jvmstat.monitor.Variability#toString()->String:::Returns a string describing this Variability attribute.
sun.jvmstat.monitor.Variability#intValue()->int:::Returns the integer representation of this Variability attribute.
sun.jvmstat.monitor.Variability#toVariability(int)->Variability:::Maps an integer value its corresponding Variability attribute
sun.jvmstat.monitor.VmIdentifier#getHostIdentifier()->HostIdentifier:::Return the corresponding HostIdentifier for this VmIdentifier
sun.jvmstat.monitor.VmIdentifier#getScheme()->String:::Return the Scheme, or protocol, portion of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getSchemeSpecificPart()->String:::Return the Scheme Specific Part of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getUserInfo()->String:::Return the UserInfo part of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getHost()->String:::Return the Host part of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getPort()->int:::Return the Port part of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getAuthority()->String:::Return the Authority part of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getPath()->String:::Return the Path part of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getQuery()->String:::Return the Query part of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getFragment()->String:::Return the Fragment part of this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getLocalVmId()->int:::Return the Local Virtual Machine Identifier for this VmIdentifier
sun.jvmstat.monitor.VmIdentifier#getMode()->String:::Return the mode indicated in this VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#getURI()->URI:::Return the URI associated with the VmIdentifier.
sun.jvmstat.monitor.VmIdentifier#hashCode()->int:::Return the hash code for this VmIdentifier
sun.jvmstat.monitor.VmIdentifier#equals(Object)->boolean:::Test for quality with other objects.
sun.jvmstat.monitor.VmIdentifier#toString()->String:::Convert to a string representation
