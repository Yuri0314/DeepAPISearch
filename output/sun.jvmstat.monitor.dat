BufferedMonitoredVm#getBytes():::Interface to get the bytes associated with the instrumentation for the target Java Virtual Machine.:::
BufferedMonitoredVm#getCapacity():::Interface to get the size of the instrumentation buffer for the target Java Virtual Machine.:::
ByteArrayMonitor#byteArrayValue():::Get a copy of the current values of the elements of the ByteArrayInstrument object.:::
ByteArrayMonitor#byteAt(int):::Get the current value of an element of the ByteArrayInstrument object.:::
HostIdentifier#resolve(VmIdentifier):::Resolve a VmIdentifier with this HostIdentifier:::scheme->vmid->getScheme->host->vmid->getHost->authority->vmid->getAuthority->if->scheme->compareTo->return->if->host->compareTo->if->getScheme->nuri->sb->new->StringBuilder->sb->append->append->userInfo->vmid->getUserInfo->if->sb->append->else->sb->vmid->getAuthority->append->if->getHost->sb->append->append->port->vmid->getPort->if->getPort->if->sb->append->append->path->vmid->getPath->if->path->length->getPath->if->path->length->sb->append->query->vmid->getQuery->if->getQuery->if->sb->append->append->fragment->vmid->getFragment->if->getFragment->if->sb->append->append->s->sb->toString->return->new->VmIdentifier
HostIdentifier#getScheme():::Return the Scheme, or protocol, portion of this HostIdentifier.:::return->uri->isAbsolute->uri->getScheme
HostIdentifier#getSchemeSpecificPart():::Return the Scheme Specific Part of this HostIdentifier.:::return->uri->getSchemeSpecificPart
HostIdentifier#getUserInfo():::Return the User Info part of this HostIdentifier.:::return->uri->getUserInfo
HostIdentifier#getHost():::Return the Host part of this HostIdentifier.:::return->uri->getHost->uri->getHost
HostIdentifier#getPort():::Return the Port for of this HostIdentifier.:::return->uri->getPort
HostIdentifier#getPath():::Return the Path part of this HostIdentifier.:::return->uri->getPath
HostIdentifier#getQuery():::Return the Query part of this HostIdentifier.:::return->uri->getQuery
HostIdentifier#getFragment():::Return the Fragment part of this HostIdentifier.:::return->uri->getFragment
HostIdentifier#getMode():::Return the mode indicated in this HostIdentifier.:::query->getQuery->if->queryArgs->query->split->for->i->return
HostIdentifier#getURI():::Return the URI associated with the HostIdentifier.:::return
HostIdentifier#hashCode():::Return the hash code for this HostIdentifier:::return->uri->hashCode
HostIdentifier#equals(Object):::Test for quality with other objects.:::if->return->if->return->return->uri->equals
HostIdentifier#toString():::Convert to a string representation:::return->uri->toString
IntegerMonitor#intValue():::Get the value of this Integer Instrumentation Object  return int - the current value of this instrumentation object:::
LongMonitor#longValue():::Get the current value of this LongInstrument object.:::
Monitor#getName():::Returns the name of this instrumentation object.:::
Monitor#getBaseName():::Returns the base name of this instrumentation object:::
Monitor#getUnits():::Returns the Units for this instrumentation monitoring object.:::
Monitor#getVariability():::Returns the Variability for this instrumentation object.:::
Monitor#isVector():::Test if the instrumentation object is a vector type.:::
Monitor#getVectorLength():::Return the length of the vector.:::
Monitor#isSupported():::Test if the instrumentation object is supported.:::
Monitor#getValue():::Return an Object that encapsulates this instrumentation object's current data value.:::
MonitoredHost#getMonitoredHost(String):::Factory method to construct MonitoredHost instances to manage connections to the host indicated by hostIdString:::hostId->new->HostIdentifier->return->getMonitoredHost
MonitoredHost#getMonitoredHost(VmIdentifier):::Factory method to construct a MonitoredHost instance to manage the connection to the Java Virtual Machine indicated by vmid:::hostId->new->HostIdentifier->return->getMonitoredHost
MonitoredHost#getMonitoredHost(HostIdentifier):::Factory method to construct a MonitoredHost instance to manage the connection to the host indicated by hostId.:::mh->synchronized->monitoredHosts->get->if->if->mh->isErrored->monitoredHosts->remove->else->return->resolveHostId->foreach->if->mhs->getScheme->hostId->getScheme->equals->mhs->getMonitoredHost->if->throw->hostId->getScheme->new->IllegalArgumentException->synchronized->monitoredHosts->put->return
MonitoredHost#resolveHostId(HostIdentifier):::Method to resolve unspecified components of the given HostIdentifier by constructing a new HostIdentifier that replaces the unspecified components with the default values.:::hostname->hostId->getHost->scheme->hostId->getScheme->sb->new->StringBuilder->if->if->hostname->compareTo->else->sb->append->append->hostId->getSchemeSpecificPart->append->frag->hostId->getFragment->if->sb->append->append->try->return->sb->toString->new->HostIdentifier->catch->throw->sb->toString->new->IllegalArgumentException->finally
MonitoredHost#getHostIdentifier():::Return the resolved HostIdentifier for this MonitoredHost.:::return
MonitoredHost#setInterval(int):::Set the polling interval for this MonitoredHost.:::
MonitoredHost#getInterval():::Get the polling interval.:::return
MonitoredHost#setLastException(Exception):::Set the last exception encountered while polling this MonitoredHost.:::
MonitoredHost#getLastException():::Get the last exception encountered while polling this MonitoredHost.:::return
MonitoredHost#clearLastException():::Clear the last exception.:::
MonitoredHost#isErrored():::Test if this MonitoredHost is in the errored state:::return
MonitoredHost#getMonitoredVm(VmIdentifier):::Get the MonitoredVm for the given Java Virtual Machine:::
MonitoredHost#getMonitoredVm(VmIdentifier, int):::Get the MonitoredVm for the given Java Virtual Machine:::
MonitoredHost#detach(MonitoredVm):::Detach from the indicated MonitoredVm.:::
MonitoredHost#addHostListener(HostListener):::Add a HostListener:::
MonitoredHost#removeHostListener(HostListener):::Remove a HostListener:::
MonitoredHost#activeVms():::Return the current set of active Java Virtual Machines for this MonitoredHost:::
MonitoredHostService#getMonitoredHost(HostIdentifier):::Construct a MonitoredHost instance to manage the connection to the host indicated by hostId.:::
MonitoredHostService#getScheme():::Get the scheme that this service supports.:::
MonitoredVm#getVmIdentifier():::Get the VmIdentifier associated with this MonitoredVm:::
MonitoredVm#findByName(String):::Find a named Instrumentation object:::
MonitoredVm#findByPattern(String):::Find all Instrumentation objects with names matching the given pattern:::
MonitoredVm#detach():::Detach from target Java Virtual Machine:::
MonitoredVm#setInterval(int):::Set the polling interval to interval milliseconds:::
MonitoredVm#getInterval():::Get the polling interval.:::
MonitoredVm#setLastException(Exception):::Set the last exception encountered while polling this MonitoredVm:::
MonitoredVm#getLastException():::Get the last exception encountered while polling this MonitoredVm:::
MonitoredVm#clearLastException():::Clear the last exception:::
MonitoredVm#isErrored():::Test if this MonitoredVm is in the errored state:::
MonitoredVm#addVmListener(VmListener):::Add a VmListener:::
MonitoredVm#removeVmListener(VmListener):::Remove a VmListener:::
MonitoredVmUtil#vmVersion(MonitoredVm):::Return the Java Virtual Machine Version.:::ver->vm->findByName->return->ver->stringValue
MonitoredVmUtil#commandLine(MonitoredVm):::Return the command line for the target Java application.:::cmd->vm->findByName->return->cmd->stringValue
MonitoredVmUtil#mainArgs(MonitoredVm):::Return the arguments to the main class for the target Java application:::commandLine->commandLine->firstSpace->commandLine->indexOf->if->return->commandLine->substring->else->if->commandLine->compareTo->return->else->return
MonitoredVmUtil#mainClass(MonitoredVm, boolean):::Return the main class for the target Java application:::cmdLine->commandLine->firstSpace->cmdLine->indexOf->if->cmdLine->substring->if->return->lastSlash->cmdLine->lastIndexOf->lastBackslash->cmdLine->lastIndexOf->lastSeparator->if->cmdLine->substring->lastPackageSeparator->cmdLine->lastIndexOf->if->lastPart->cmdLine->substring->if->lastPart->equals->return->return->return
MonitoredVmUtil#jvmArgs(MonitoredVm):::Return the JVM arguments for the target Java application.:::jvmArgs->vm->findByName->return->jvmArgs->stringValue
MonitoredVmUtil#jvmFlags(MonitoredVm):::Return the JVM flags for the target Java application.:::jvmFlags->vm->findByName->return->jvmFlags->stringValue
MonitoredVmUtil#isAttachable(MonitoredVm):::Returns true if the VM supports attach-on-demand.:::jvmCapabilities->vm->findByName->if->return->else->return->jvmCapabilities->stringValue->charAt
StringMonitor#stringValue():::Get a copy of the current value of the StringInstrument object.:::
Units#toString():::Returns a string describing this Unit of measurement attribute:::return
Units#intValue():::Returns the integer representation of this Units attribute:::return
Units#toUnits(int):::Maps an integer value to its corresponding Units attribute:::if->return->return
Variability#toString():::Returns a string describing this Variability attribute.:::return
Variability#intValue():::Returns the integer representation of this Variability attribute.:::return
Variability#toVariability(int):::Maps an integer value its corresponding Variability attribute:::if->return->return
VmIdentifier#getHostIdentifier():::Return the corresponding HostIdentifier for this VmIdentifier:::sb->new->StringBuilder->if->getScheme->sb->getScheme->append->append->sb->append->getHost->append->if->getPort->sb->append->getPort->append->if->getPath->sb->getPath->append->return->sb->toString->new->HostIdentifier
VmIdentifier#getScheme():::Return the Scheme, or protocol, portion of this VmIdentifier.:::return->uri->getScheme
VmIdentifier#getSchemeSpecificPart():::Return the Scheme Specific Part of this VmIdentifier.:::return->uri->getSchemeSpecificPart
VmIdentifier#getUserInfo():::Return the UserInfo part of this VmIdentifier.:::return->uri->getUserInfo
VmIdentifier#getHost():::Return the Host part of this VmIdentifier.:::return->uri->getHost
VmIdentifier#getPort():::Return the Port part of this VmIdentifier.:::return->uri->getPort
VmIdentifier#getAuthority():::Return the Authority part of this VmIdentifier.:::return->uri->getAuthority
VmIdentifier#getPath():::Return the Path part of this VmIdentifier.:::return->uri->getPath
VmIdentifier#getQuery():::Return the Query part of this VmIdentifier.:::return->uri->getQuery
VmIdentifier#getFragment():::Return the Fragment part of this VmIdentifier.:::return->uri->getFragment
VmIdentifier#getLocalVmId():::Return the Local Virtual Machine Identifier for this VmIdentifier:::result->try->if->uri->getUserInfo->Integer->uri->getAuthority->parseInt->else->Integer->uri->getUserInfo->parseInt->catch->finally->return
VmIdentifier#getMode():::Return the mode indicated in this VmIdentifier.:::query->getQuery->if->queryArgs->query->split->for->i->return
VmIdentifier#getURI():::Return the URI associated with the VmIdentifier.:::return
VmIdentifier#hashCode():::Return the hash code for this VmIdentifier:::return->uri->hashCode
VmIdentifier#equals(Object):::Test for quality with other objects.:::if->return->if->return->return->uri->equals
VmIdentifier#toString():::Convert to a string representation:::return->uri->toString
