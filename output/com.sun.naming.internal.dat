FactoryEnumeration#next()::: factory enumeration next:::synchronized->ref->factories->get->answer->ref->get->if->return->className->ref->getName->try->if->cls->Class->forName->tmp->newInstance->new->NamedWeakReference<>->factories->set->return->catch->ne->new->NamingException->ne->setRootCause->throw->ne->new->NamingException->ne->setRootCause->throw->ne->new->NamingException->ne->setRootCause->throw->finally
FactoryEnumeration#hasMore()::: factory enumeration has more:::synchronized->return->factories->size
NamedWeakReference#getName()::: named weak reference get name:::return
ResourceManager#getInitialEnvironment(Hashtable):::Given the environment parameter passed to the initial context constructor, returns the full environment for that initial context (never null):::props->if->new->Hashtable<>->jndiSysProps->helper->getJndiProperties->for->i->disableAppRes->env->get->if->disableAppRes->equalsIgnoreCase->return->getApplicationResources->mergeTables->return
ResourceManager#getProperty(String, Hashtable, Context, boolean):::Retrieves the property from the environment, or from the provider resource file associated with the given context:::val1->env->get->if->return->val2->getProviderResource->get->if->return->else->if->return->else->return
ResourceManager#getFactories(String, Hashtable, Context):::Retrieves an enumeration of factory classes/object specified by a property:::facProp->getProperty->if->return->loader->helper->getContextClassLoader->perLoaderCache->synchronized->factoryCache->get->if->new->HashMap<>->factoryCache->put->synchronized->factories->perLoaderCache->get->if->return->factories->size->new->FactoryEnumeration->else->parser->new->StringTokenizer->new->ArrayList<>->while->parser->hasMoreTokens->try->className->parser->nextToken->c->helper->loadClass->factories->new->NamedWeakReference<Object>->add->catch->finally->perLoaderCache->put->return->new->FactoryEnumeration
ResourceManager#getFactory(String, Hashtable, Context, String, String):::Retrieves a factory from a list of packages specified in a property:::facProp->getProperty->if->else->loader->helper->getContextClassLoader->key->perLoaderCache->synchronized->urlFactoryCache->get->if->new->HashMap<>->urlFactoryCache->put->synchronized->factory->factoryRef->perLoaderCache->get->if->return->else->if->factoryRef->get->if->return->parser->new->StringTokenizer->className->while->parser->hasMoreTokens->parser->nextToken->try->tmp->helper->loadClass->newInstance->catch->ne->new->NamingException->ne->setRootCause->throw->ne->new->NamingException->ne->setRootCause->throw->finally->perLoaderCache->new->WeakReference<>->put->return
ResourceManager#getProviderResource(Object)::: resource manager get provider resource:::if->return->new->Hashtable<>->synchronized->c->obj->getClass->props->propertiesCache->get->if->return->new->Properties->istream->helper->getResourceAsStream->if->try->load->catch->ne->new->ConfigurationException->ne->setRootCause->throw->finally->propertiesCache->put->return
ResourceManager#getApplicationResources()::: resource manager get application resources:::cl->helper->getContextClassLoader->synchronized->result->propertiesCache->get->if->return->try->resources->helper->getResources->try->while->resources->hasMore->props->new->Properties->istream->resources->next->try->props->load->catch->finally->istream->close->if->else->mergeTables->catch->finally->while->resources->hasMore->resources->next->close->istream->helper->getJavaHomeConfStream->if->try->props->new->Properties->props->load->if->else->mergeTables->catch->finally->istream->close->catch->ne->new->ConfigurationException->ne->setRootCause->throw->finally->if->new->Hashtable<>->propertiesCache->put->return
ResourceManager#mergeTables(Hashtable, Hashtable)::: resource manager merge tables:::foreach->props2->keySet->prop->val1->props1->get->if->props1->props2->get->put->else->if->isListProperty->val2->props2->get->props1->put
ResourceManager#isListProperty(String)::: resource manager is list property:::prop->intern->for->i->return
VersionHelper#getVersionHelper()::: version helper get version helper:::return
VersionHelper#loadClass(String)::: version helper load class:::return->getContextClassLoader->loadClass
VersionHelper#loadClass(String, String)::: version helper load class:::if->parent->getContextClassLoader->cl->URLClassLoader->getUrlArray->newInstance->return->loadClass->else->return
VersionHelper#loadClass(String, ClassLoader):::Package private:::cls->Class->forName->return
VersionHelper#getJndiProperty(int)::: version helper get jndi property:::act->try->return->System->getProperty->catch->return->finally->return->AccessController->doPrivileged
VersionHelper#getJndiProperties()::: version helper get jndi properties:::act->try->return->System->getProperties->catch->return->finally->sysProps->AccessController->doPrivileged->if->return->jProps->new->StringArr->for->i->return
VersionHelper#resolveName(Class, String)::: version helper resolve name:::if->return->if->name->startsWith->while->c->isArray->c->getComponentType->baseName->c->getName->index->baseName->lastIndexOf->if->baseName->substring->replace->else->name->substring->return
VersionHelper#getResourceAsStream(Class, String)::: version helper get resource as stream:::act->try->m->c->getModule->return->c->getModule->resolveName->getResourceAsStream->catch->return->finally->return->AccessController->doPrivileged
VersionHelper#getJavaHomeConfStream(String)::: version helper get java home conf stream:::act->try->javahome->System->getProperty->if->return->pathname->return->new->FileInputStream->catch->return->finally->return->AccessController->doPrivileged
VersionHelper#getResources(ClassLoader, String)::: version helper get resources:::urls->act->ClassLoader->getSystemResources->cl->getResources->try->AccessController->doPrivileged->catch->throw->e->getException->finally->return->new->InputStreamEnumeration
VersionHelper#getContextClassLoader():::Package private:::act->loader->Thread->currentThread->getContextClassLoader->if->ClassLoader->getSystemClassLoader->return->return->AccessController->doPrivileged
VersionHelper#getUrlArray(String)::: version helper get url array:::parser->new->StringTokenizer->list->new->ArrayList<>->while->parser->hasMoreTokens->list->parser->nextToken->add->url->list->size->new->StringArr->for->i->urlArray->new->URLArr->for->i->return
VersionHelper.InputStreamEnumeration#getNextElement()::: input stream enumeration get next element:::act->while->urls->hasMoreElements->try->return->urls->nextElement->openStream->catch->finally->return->return->AccessController->doPrivileged
VersionHelper.InputStreamEnumeration#hasMore()::: input stream enumeration has more:::if->return->getNextElement->return
VersionHelper.InputStreamEnumeration#hasMoreElements()::: input stream enumeration has more elements:::return->hasMore
VersionHelper.InputStreamEnumeration#next()::: input stream enumeration next:::if->hasMore->res->return->else->throw->new->NoSuchElementException
VersionHelper.InputStreamEnumeration#nextElement()::: input stream enumeration next element:::return->next
VersionHelper.InputStreamEnumeration#close()::: input stream enumeration close:::
