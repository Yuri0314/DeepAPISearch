NegotiateCallbackHandler#getAnswer()::: negotiate callback handler get answer:::if->auth->if->else->Authenticator->getDefault->if->passAuth->auth->requestPasswordAuthenticationInstance->if->passAuth->getUserName->passAuth->getPassword
NegotiateCallbackHandler#handle(Callback[])::: negotiate callback handler handle:::for->i
NegotiatorImpl#init(HttpCallerInfo):::Initialize the object, which includes:<ul> <li>Find out what GSS mechanism to use from the system property http.negotiate.mechanism.oid, defaults SPNEGO <li>Creating the GSSName for the target host, "HTTP/"+hostname <li>Creating GSSContext <li>A first call to initSecContext</ul>:::oid->if->equalsIgnoreCase->else->pref->new->java.security.PrivilegedAction<String>->doPrivileged->if->pref->equalsIgnoreCase->else->manager->new->HttpCaller->new->GSSManagerImpl->peerName->toLowerCase->serverName->manager->createName->manager->createContext->if->requestDelegPolicy->context->new->byteArr->initSecContext
NegotiatorImpl#firstToken():::Return the first token of GSS, in SPNEGO, it's called NegTokenInit:::return
NegotiatorImpl#nextToken(byte[]):::Return the rest tokens of GSS, in SPNEGO, it's called NegTokenTarg:::try->return->context->initSecContext->catch->if->println->e->printStackTrace->ioe->new->IOException->ioe->initCause->throw->finally
