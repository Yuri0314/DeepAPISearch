ContextualRenderedImageFactory#mapRenderContext(int, RenderContext, ParameterBlock, RenderableImage):::Maps the operation's output RenderContext into a RenderContext for each of the operation's sources:::
ContextualRenderedImageFactory#create(RenderContext, ParameterBlock):::Creates a rendering, given a RenderContext and a ParameterBlock containing the operation's sources and parameters:::
ContextualRenderedImageFactory#getBounds2D(ParameterBlock):::Returns the bounding box for the output of the operation, performed on a given set of sources, in rendering-independent space:::
ContextualRenderedImageFactory#getProperty(ParameterBlock, String):::Gets the appropriate instance of the property specified by the name parameter:::
ContextualRenderedImageFactory#getPropertyNames():::Returns a list of names recognized by getProperty.:::
ContextualRenderedImageFactory#isDynamic():::Returns true if successive renderings (that is, calls to create(RenderContext, ParameterBlock)) with the same arguments may produce different results:::
ParameterBlock#shallowClone():::Creates a shallow copy of a ParameterBlock:::try->return->super->clone->catch->return->finally
ParameterBlock#clone():::Creates a copy of a ParameterBlock:::theClone->try->super->clone->catch->return->finally->if->theClone->sources->clone->setSources->if->theClone->parameters->clone->setParameters->return
ParameterBlock#addSource(Object):::Adds an image to end of the list of sources:::sources->addElement->return
ParameterBlock#getSource(int):::Returns a source as a general Object:::return->sources->elementAt
ParameterBlock#setSource(Object, int):::Replaces an entry in the list of source with a new source:::oldSize->sources->size->newSize->if->sources->setSize->sources->setElementAt->return
ParameterBlock#getRenderedSource(int):::Returns a source as a RenderedImage:::return->sources->elementAt
ParameterBlock#getRenderableSource(int):::Returns a source as a RenderableImage:::return->sources->elementAt
ParameterBlock#getNumSources():::Returns the number of source images.:::return->sources->size
ParameterBlock#getSources():::Returns the entire Vector of sources.:::return
ParameterBlock#setSources(Vector):::Sets the entire Vector of sources to a given Vector.:::
ParameterBlock#removeSources():::Clears the list of source images.:::new->Vector<>
ParameterBlock#getNumParameters():::Returns the number of parameters (not including source images).:::return->parameters->size
ParameterBlock#getParameters():::Returns the entire Vector of parameters.:::return
ParameterBlock#setParameters(Vector):::Sets the entire Vector of parameters to a given Vector.:::
ParameterBlock#removeParameters():::Clears the list of parameters.:::new->Vector<>
ParameterBlock#add(Object):::Adds an object to the list of parameters.:::parameters->addElement->return
ParameterBlock#add(byte):::Adds a Byte to the list of parameters.:::return->Byte->valueOf->add
ParameterBlock#add(char):::Adds a Character to the list of parameters.:::return->Character->valueOf->add
ParameterBlock#add(short):::Adds a Short to the list of parameters.:::return->Short->valueOf->add
ParameterBlock#add(int):::Adds a Integer to the list of parameters.:::return->Integer->valueOf->add
ParameterBlock#add(long):::Adds a Long to the list of parameters.:::return->Long->valueOf->add
ParameterBlock#add(float):::Adds a Float to the list of parameters.:::return->Float->valueOf->add
ParameterBlock#add(double):::Adds a Double to the list of parameters.:::return->Double->valueOf->add
ParameterBlock#set(Object, int):::Replaces an Object in the list of parameters:::oldSize->parameters->size->newSize->if->parameters->setSize->parameters->setElementAt->return
ParameterBlock#set(byte, int):::Replaces an Object in the list of parameters with a Byte:::return->Byte->valueOf->set
ParameterBlock#set(char, int):::Replaces an Object in the list of parameters with a Character:::return->Character->valueOf->set
ParameterBlock#set(short, int):::Replaces an Object in the list of parameters with a Short:::return->Short->valueOf->set
ParameterBlock#set(int, int):::Replaces an Object in the list of parameters with an Integer:::return->Integer->valueOf->set
ParameterBlock#set(long, int):::Replaces an Object in the list of parameters with a Long:::return->Long->valueOf->set
ParameterBlock#set(float, int):::Replaces an Object in the list of parameters with a Float:::return->Float->valueOf->set
ParameterBlock#set(double, int):::Replaces an Object in the list of parameters with a Double:::return->Double->valueOf->set
ParameterBlock#getObjectParameter(int):::Gets a parameter as an object.:::return->parameters->elementAt
ParameterBlock#getByteParameter(int):::A convenience method to return a parameter as a byte:::return->parameters->elementAt->byteValue
ParameterBlock#getCharParameter(int):::A convenience method to return a parameter as a char:::return->parameters->elementAt->charValue
ParameterBlock#getShortParameter(int):::A convenience method to return a parameter as a short:::return->parameters->elementAt->shortValue
ParameterBlock#getIntParameter(int):::A convenience method to return a parameter as an int:::return->parameters->elementAt->intValue
ParameterBlock#getLongParameter(int):::A convenience method to return a parameter as a long:::return->parameters->elementAt->longValue
ParameterBlock#getFloatParameter(int):::A convenience method to return a parameter as a float:::return->parameters->elementAt->floatValue
ParameterBlock#getDoubleParameter(int):::A convenience method to return a parameter as a double:::return->parameters->elementAt->doubleValue
ParameterBlock#getParamClasses():::Returns an array of Class objects describing the types of the parameters.:::numParams->getNumParameters->classes->new->Class<?>Arr->i->for->return
RenderableImage#getSources():::Returns a vector of RenderableImages that are the sources of image data for this RenderableImage:::
RenderableImage#getProperty(String):::Gets a property from the property set of this image:::
RenderableImage#getPropertyNames():::Returns a list of names recognized by getProperty.:::
RenderableImage#isDynamic():::Returns true if successive renderings (that is, calls to createRendering() or createScaledRendering()) with the same arguments may produce different results:::
RenderableImage#getWidth():::Gets the width in user coordinate space:::
RenderableImage#getHeight():::Gets the height in user coordinate space:::
RenderableImage#getMinX():::Gets the minimum X coordinate of the rendering-independent image data.:::
RenderableImage#getMinY():::Gets the minimum Y coordinate of the rendering-independent image data.:::
RenderableImage#createScaledRendering(int, int, RenderingHints):::Creates a RenderedImage instance of this image with width w, and height h in pixels:::
RenderableImage#createDefaultRendering():::Returns a RenderedImage instance of this image with a default width and height in pixels:::
RenderableImage#createRendering(RenderContext):::Creates a RenderedImage that represented a rendering of this image using a given RenderContext:::
RenderableImageOp#getSources():::Returns a vector of RenderableImages that are the sources of image data for this RenderableImage:::return->getRenderableSources
RenderableImageOp#getProperty(String):::Gets a property from the property set of this image:::return->myCRIF->getProperty
RenderableImageOp#getPropertyNames():::Return a list of names recognized by getProperty.:::return->myCRIF->getPropertyNames
RenderableImageOp#isDynamic():::Returns true if successive renderings (that is, calls to createRendering() or createScaledRendering()) with the same arguments may produce different results:::return->myCRIF->isDynamic
RenderableImageOp#getWidth():::Gets the width in user coordinate space:::if->myCRIF->getBounds2D->return->boundingBox->getWidth
RenderableImageOp#getHeight():::Gets the height in user coordinate space:::if->myCRIF->getBounds2D->return->boundingBox->getHeight
RenderableImageOp#getMinX():::Gets the minimum X coordinate of the rendering-independent image data.:::if->myCRIF->getBounds2D->return->boundingBox->getMinX
RenderableImageOp#getMinY():::Gets the minimum Y coordinate of the rendering-independent image data.:::if->myCRIF->getBounds2D->return->boundingBox->getMinY
RenderableImageOp#setParameterBlock(ParameterBlock):::Change the current ParameterBlock of the operation, allowing editing of image rendering chains:::oldParamBlock->paramBlock->clone->return
RenderableImageOp#getParameterBlock():::Returns a reference to the current parameter block.:::return
RenderableImageOp#createScaledRendering(int, int, RenderingHints):::Creates a RenderedImage instance of this image with width w, and height h in pixels:::sx->getWidth->sy->getHeight->if->Math->abs->usr2dev->AffineTransform->getScaleInstance->newRC->new->RenderContext->return->createRendering
RenderableImageOp#createDefaultRendering():::Gets a RenderedImage instance of this image with a default width and height in pixels:::usr2dev->new->AffineTransform->newRC->new->RenderContext->return->createRendering
RenderableImageOp#createRendering(RenderContext):::Creates a RenderedImage which represents this RenderableImageOp (including its Renderable sources) rendered according to the given RenderContext:::image->rcOut->renderedParamBlock->paramBlock->clone->sources->getRenderableSources->try->if->renderedSources->new->Vector<>->for->i->sources->size->if->renderedSources->size->renderedParamBlock->setSources->return->myCRIF->create->catch->return->finally
RenderableImageProducer#setRenderContext(RenderContext):::Sets a new RenderContext to use for the next startProduction() call.:::
RenderableImageProducer#addConsumer(ImageConsumer):::Adds an ImageConsumer to the list of consumers interested in data for this image.:::if->ics->contains->ics->addElement
RenderableImageProducer#isConsumer(ImageConsumer):::Determine if an ImageConsumer is on the list of consumers currently interested in data for this image.:::return->ics->contains
RenderableImageProducer#removeConsumer(ImageConsumer):::Remove an ImageConsumer from the list of consumers interested in data for this image.:::ics->removeElement
RenderableImageProducer#startProduction(ImageConsumer):::Adds an ImageConsumer to the list of consumers interested in data for this image, and immediately starts delivery of the image data through the ImageConsumer interface.:::addConsumer->name->thread->new->Thread->thread->start
RenderableImageProducer#requestTopDownLeftRightResend(ImageConsumer):::Requests that a given ImageConsumer have the image data delivered one more time in top-down, left-right order.:::
RenderableImageProducer#run():::The runnable method for this class:::rdrdImage->if->rdblImage->createRendering->else->rdblImage->createDefaultRendering->colorModel->rdrdImage->getColorModel->raster->rdrdImage->getData->sampleModel->raster->getSampleModel->dataBuffer->raster->getDataBuffer->if->ColorModel->getRGBdefault->minX->raster->getMinX->minY->raster->getMinY->width->raster->getWidth->height->raster->getHeight->icList->ic->ics->elements->while->icList->hasMoreElements->icList->nextElement->ic->setDimensions->ic->setHints->pix->new->intArr->i->j->numBands->sampleModel->getNumBands->tmpPixel->new->intArr->for->ics->elements->while->icList->hasMoreElements->icList->nextElement->ic->imageComplete
RenderContext#getRenderingHints():::Gets the rendering hints of this RenderContext.:::return
RenderContext#setRenderingHints(RenderingHints):::Sets the rendering hints of this RenderContext.:::
RenderContext#setTransform(AffineTransform):::Sets the current user-to-device AffineTransform contained in the RenderContext to a given transform.:::newTransform->clone
RenderContext#preConcatenateTransform(AffineTransform):::Modifies the current user-to-device transform by prepending another transform:::this->preConcetenateTransform
RenderContext#preConcetenateTransform(AffineTransform):::Modifies the current user-to-device transform by prepending another transform:::usr2dev->preConcatenate
RenderContext#concatenateTransform(AffineTransform):::Modifies the current user-to-device transform by appending another transform:::this->concetenateTransform
RenderContext#concetenateTransform(AffineTransform):::Modifies the current user-to-device transform by appending another transform:::usr2dev->concatenate
RenderContext#getTransform():::Gets the current user-to-device AffineTransform.:::return->usr2dev->clone
RenderContext#setAreaOfInterest(Shape):::Sets the current area of interest:::
RenderContext#getAreaOfInterest():::Gets the ares of interest currently contained in the RenderContext.:::return
RenderContext#clone():::Makes a copy of a RenderContext:::newRenderContext->new->RenderContext->return
RenderedImageFactory#create(ParameterBlock, RenderingHints):::Creates a RenderedImage representing the results of an imaging operation (or chain of operations) for a given ParameterBlock and RenderingHints:::
