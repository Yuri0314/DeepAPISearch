com.sun.org.apache.xml.internal.serializer.AttributesImplSerializer#getIndex(String)->int:::This method gets the index of an attribute given its qName.
com.sun.org.apache.xml.internal.serializer.AttributesImplSerializer#addAttribute(String, String, String, String, String)->void:::This method adds the attribute, but also records its qName/index pair in the hashtable for fast lookup by getIndex(qName).
com.sun.org.apache.xml.internal.serializer.AttributesImplSerializer#clear()->void:::This method clears the accumulated attributes.
com.sun.org.apache.xml.internal.serializer.AttributesImplSerializer#setAttributes(Attributes)->void:::This method sets the attributes, previous attributes are cleared, it also keeps the hashtable up to date for quick lookup via getIndex(qName).
com.sun.org.apache.xml.internal.serializer.AttributesImplSerializer#getIndex(String, String)->int:::This method gets the index of an attribute given its uri and locanName.
com.sun.org.apache.xml.internal.serializer.CharInfo#getOutputStringForChar(char)->String:::Map a character to a String
com.sun.org.apache.xml.internal.serializer.CharInfo#isSpecialAttrChar(int)->boolean:::Tell if the character argument that is from an attribute value should have special treatment.
com.sun.org.apache.xml.internal.serializer.CharInfo#isSpecialTextChar(int)->boolean:::Tell if the character argument that is from a text node should have special treatment.
com.sun.org.apache.xml.internal.serializer.CharInfo#isTextASCIIClean(int)->boolean:::This method is used to determine if an ASCII character in a text node (not an attribute value) is "clean".
com.sun.org.apache.xml.internal.serializer.CharInfo#getCharInfoInternal(String, String)->CharInfo:::Read an internal resource file that describes the mapping of characters to entity references; Construct a CharInfo object.
com.sun.org.apache.xml.internal.serializer.CharInfo#getCharInfo(String, String)->CharInfo:::Constructs a CharInfo object using the following process to try reading the entitiesFileName parameter:    1) attempt to load it as a ResourceBundle   2) try using the class loader to find the specified file   3) try opening it as an URI  In case of 2 and 3, the resource file must be encoded in UTF-8 and have the following format:  # First char # is a comment Entity numericValue quot 34 amp 38 
com.sun.org.apache.xml.internal.serializer.DOM3Serializer#serializeDOM3(Node)->void:::Serializes the Level 3 DOM node
com.sun.org.apache.xml.internal.serializer.DOM3Serializer#setErrorHandler(DOMErrorHandler)->void:::Sets a DOMErrorHandler on the DOM Level 3 Serializer
com.sun.org.apache.xml.internal.serializer.DOM3Serializer#getErrorHandler()->DOMErrorHandler:::Returns a DOMErrorHandler set on the DOM Level 3 Serializer
com.sun.org.apache.xml.internal.serializer.DOM3Serializer#setNodeFilter(LSSerializerFilter)->void:::Sets a LSSerializerFilter on the DOM Level 3 Serializer to filter nodes during serialization
com.sun.org.apache.xml.internal.serializer.DOM3Serializer#getNodeFilter()->LSSerializerFilter:::Returns a LSSerializerFilter set on the DOM Level 3 Serializer to filter nodes during serialization
com.sun.org.apache.xml.internal.serializer.DOM3Serializer#setNewLine(String)->void:::Sets the new line character to be used during serialization
com.sun.org.apache.xml.internal.serializer.DOMSerializer#serialize(Node)->void:::Serializes the DOM node
com.sun.org.apache.xml.internal.serializer.ElemContext#pop()->ElemContext:::Pop the current "stack frame".
com.sun.org.apache.xml.internal.serializer.ElemContext#push()->ElemContext:::This method pushes an element "stack frame" but with no initialization of values in that frame
com.sun.org.apache.xml.internal.serializer.ElemContext#push(String, String, String)->ElemContext:::Push an element context on the stack
com.sun.org.apache.xml.internal.serializer.ElemDesc#getFlags()->int::: elem desc get flags
com.sun.org.apache.xml.internal.serializer.ElemDesc#setAttr(String, int)->void:::Set an attribute name and it's bit properties.
com.sun.org.apache.xml.internal.serializer.ElemDesc#isAttrFlagSet(String, int)->boolean:::Tell if any of the bits of interest are set for a named attribute type.
com.sun.org.apache.xml.internal.serializer.EmptySerializer#couldThrowIOException()->void::: empty serializer could throw exception
com.sun.org.apache.xml.internal.serializer.EmptySerializer#couldThrowSAXException()->void::: empty serializer could throw exception
com.sun.org.apache.xml.internal.serializer.EmptySerializer#couldThrowSAXException(char[], int, int)->void::: empty serializer could throw exception
com.sun.org.apache.xml.internal.serializer.EmptySerializer#couldThrowSAXException(String)->void::: empty serializer could throw exception
com.sun.org.apache.xml.internal.serializer.EmptySerializer#aMethodIsCalled()->void::: empty serializer a method is called
com.sun.org.apache.xml.internal.serializer.EmptySerializer#asContentHandler()->ContentHandler::: empty serializer as content handler
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setContentHandler(ContentHandler)->void::: empty serializer set content handler
com.sun.org.apache.xml.internal.serializer.EmptySerializer#close()->void::: empty serializer close
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getOutputFormat()->Properties::: empty serializer get output format
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getOutputStream()->OutputStream::: empty serializer get output stream
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getWriter()->Writer::: empty serializer get writer
com.sun.org.apache.xml.internal.serializer.EmptySerializer#reset()->boolean::: empty serializer reset
com.sun.org.apache.xml.internal.serializer.EmptySerializer#serialize(Node)->void::: empty serializer serialize
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setCdataSectionElements(List)->void::: empty serializer set cdata section elements
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setEscaping(boolean)->boolean::: empty serializer set escaping
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setIndent(boolean)->void::: empty serializer set indent
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setIndentAmount(int)->void::: empty serializer set indent amount
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setIsStandalone(boolean)->void::: empty serializer set is standalone
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setOutputFormat(Properties)->void::: empty serializer set output format
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setOutputStream(OutputStream)->void::: empty serializer set output stream
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setVersion(String)->void::: empty serializer set version
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setWriter(Writer)->void::: empty serializer set writer
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setTransformer(Transformer)->void::: empty serializer set transformer
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getTransformer()->Transformer::: empty serializer get transformer
com.sun.org.apache.xml.internal.serializer.EmptySerializer#flushPending()->void::: empty serializer flush pending
com.sun.org.apache.xml.internal.serializer.EmptySerializer#addAttribute(String, String, String, String, String, boolean)->void::: empty serializer add attribute
com.sun.org.apache.xml.internal.serializer.EmptySerializer#addAttributes(Attributes)->void::: empty serializer add attributes
com.sun.org.apache.xml.internal.serializer.EmptySerializer#addAttribute(String, String)->void::: empty serializer add attribute
com.sun.org.apache.xml.internal.serializer.EmptySerializer#characters(String)->void::: empty serializer characters
com.sun.org.apache.xml.internal.serializer.EmptySerializer#endElement(String)->void::: empty serializer end element
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startDocument()->void::: empty serializer start document
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startElement(String, String, String)->void::: empty serializer start element
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startElement(String)->void::: empty serializer start element
com.sun.org.apache.xml.internal.serializer.EmptySerializer#namespaceAfterStartElement(String, String)->void::: empty serializer namespace after start element
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startPrefixMapping(String, String, boolean)->boolean::: empty serializer start prefix mapping
com.sun.org.apache.xml.internal.serializer.EmptySerializer#entityReference(String)->void::: empty serializer entity reference
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getNamespaceMappings()->NamespaceMappings::: empty serializer get namespace mappings
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getPrefix(String)->String::: empty serializer get prefix
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getNamespaceURI(String, boolean)->String::: empty serializer get namespace i
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getNamespaceURIFromPrefix(String)->String::: empty serializer get namespace from prefix
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setDocumentLocator(Locator)->void::: empty serializer set document locator
com.sun.org.apache.xml.internal.serializer.EmptySerializer#endDocument()->void::: empty serializer end document
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startPrefixMapping(String, String)->void::: empty serializer start prefix mapping
com.sun.org.apache.xml.internal.serializer.EmptySerializer#endPrefixMapping(String)->void::: empty serializer end prefix mapping
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startElement(String, String, String, Attributes)->void::: empty serializer start element
com.sun.org.apache.xml.internal.serializer.EmptySerializer#endElement(String, String, String)->void::: empty serializer end element
com.sun.org.apache.xml.internal.serializer.EmptySerializer#characters(char[], int, int)->void::: empty serializer characters
com.sun.org.apache.xml.internal.serializer.EmptySerializer#ignorableWhitespace(char[], int, int)->void::: empty serializer ignorable whitespace
com.sun.org.apache.xml.internal.serializer.EmptySerializer#processingInstruction(String, String)->void::: empty serializer processing instruction
com.sun.org.apache.xml.internal.serializer.EmptySerializer#skippedEntity(String)->void::: empty serializer skipped entity
com.sun.org.apache.xml.internal.serializer.EmptySerializer#comment(String)->void::: empty serializer comment
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startDTD(String, String, String)->void::: empty serializer start d
com.sun.org.apache.xml.internal.serializer.EmptySerializer#endDTD()->void::: empty serializer end d
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startEntity(String)->void::: empty serializer start entity
com.sun.org.apache.xml.internal.serializer.EmptySerializer#endEntity(String)->void::: empty serializer end entity
com.sun.org.apache.xml.internal.serializer.EmptySerializer#startCDATA()->void::: empty serializer start a
com.sun.org.apache.xml.internal.serializer.EmptySerializer#endCDATA()->void::: empty serializer end a
com.sun.org.apache.xml.internal.serializer.EmptySerializer#comment(char[], int, int)->void::: empty serializer comment
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getDoctypePublic()->String::: empty serializer get doctype public
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getDoctypeSystem()->String::: empty serializer get doctype system
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getEncoding()->String::: empty serializer get encoding
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getIndent()->boolean::: empty serializer get indent
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getIndentAmount()->int::: empty serializer get indent amount
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getMediaType()->String::: empty serializer get media type
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getOmitXMLDeclaration()->boolean::: empty serializer get omit declaration
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getStandalone()->String::: empty serializer get standalone
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getVersion()->String::: empty serializer get version
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setDoctype(String, String)->void::: empty serializer set doctype
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setDoctypePublic(String)->void::: empty serializer set doctype public
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setDoctypeSystem(String)->void::: empty serializer set doctype system
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setEncoding(String)->void::: empty serializer set encoding
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setMediaType(String)->void::: empty serializer set media type
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setOmitXMLDeclaration(boolean)->void::: empty serializer set omit declaration
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setStandalone(String)->void::: empty serializer set standalone
com.sun.org.apache.xml.internal.serializer.EmptySerializer#elementDecl(String, String)->void::: empty serializer element decl
com.sun.org.apache.xml.internal.serializer.EmptySerializer#attributeDecl(String, String, String, String, String)->void::: empty serializer attribute decl
com.sun.org.apache.xml.internal.serializer.EmptySerializer#internalEntityDecl(String, String)->void::: empty serializer internal entity decl
com.sun.org.apache.xml.internal.serializer.EmptySerializer#externalEntityDecl(String, String, String)->void::: empty serializer external entity decl
com.sun.org.apache.xml.internal.serializer.EmptySerializer#warning(SAXParseException)->void::: empty serializer warning
com.sun.org.apache.xml.internal.serializer.EmptySerializer#error(SAXParseException)->void::: empty serializer error
com.sun.org.apache.xml.internal.serializer.EmptySerializer#fatalError(SAXParseException)->void::: empty serializer fatal error
com.sun.org.apache.xml.internal.serializer.EmptySerializer#asDOMSerializer()->DOMSerializer::: empty serializer as serializer
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setNamespaceMappings(NamespaceMappings)->void::: empty serializer set namespace mappings
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setSourceLocator(SourceLocator)->void::: empty serializer set source locator
com.sun.org.apache.xml.internal.serializer.EmptySerializer#addUniqueAttribute(String, String, int)->void::: empty serializer add unique attribute
com.sun.org.apache.xml.internal.serializer.EmptySerializer#characters(Node)->void::: empty serializer characters
com.sun.org.apache.xml.internal.serializer.EmptySerializer#addXSLAttribute(String, String, String)->void::: empty serializer add attribute
com.sun.org.apache.xml.internal.serializer.EmptySerializer#addAttribute(String, String, String, String, String)->void::: empty serializer add attribute
com.sun.org.apache.xml.internal.serializer.EmptySerializer#notationDecl(String, String, String)->void::: empty serializer notation decl
com.sun.org.apache.xml.internal.serializer.EmptySerializer#unparsedEntityDecl(String, String, String, String)->void::: empty serializer unparsed entity decl
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setDTDEntityExpansion(boolean)->void::: empty serializer set entity expansion
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getOutputProperty(String)->String::: empty serializer get output property
com.sun.org.apache.xml.internal.serializer.EmptySerializer#getOutputPropertyDefault(String)->String::: empty serializer get output property default
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setOutputProperty(String, String)->void::: empty serializer set output property
com.sun.org.apache.xml.internal.serializer.EmptySerializer#setOutputPropertyDefault(String, String)->void::: empty serializer set output property default
com.sun.org.apache.xml.internal.serializer.EmptySerializer#asDOM3Serializer()->Object::: empty serializer as m3 serializer
com.sun.org.apache.xml.internal.serializer.EncodingInfo#isInEncoding(char)->boolean:::This is not a public API
com.sun.org.apache.xml.internal.serializer.EncodingInfo#isInEncoding(char, char)->boolean:::This is not a public API
com.sun.org.apache.xml.internal.serializer.Encodings#getWriter(OutputStream, String)->Writer:::Returns a writer for the specified encoding based on an output stream.
com.sun.org.apache.xml.internal.serializer.Encodings#getLastPrintable()->int:::Returns the last printable character for an unspecified encoding.
com.sun.org.apache.xml.internal.serializer.Encodings#getEncodingInfo(String)->EncodingInfo:::Returns the EncodingInfo object for the specified encoding
com.sun.org.apache.xml.internal.serializer.Encodings#isRecognizedEncoding(String)->boolean:::Determines if the encoding specified was recognized by the serializer or not.
com.sun.org.apache.xml.internal.serializer.Encodings#getMimeEncoding(String)->String:::Get the proper mime encoding
com.sun.org.apache.xml.internal.serializer.Encodings#convertMime2JavaEncoding(String)->String:::Try the best we can to convert a Java encoding to a XML-style encoding.
com.sun.org.apache.xml.internal.serializer.Encodings#isHighUTF16Surrogate(char)->boolean:::Return true if the character is the high member of a surrogate pair
com.sun.org.apache.xml.internal.serializer.Encodings#isLowUTF16Surrogate(char)->boolean:::Return true if the character is the low member of a surrogate pair
com.sun.org.apache.xml.internal.serializer.Encodings#toCodePoint(char, char)->int:::Return the unicode code point represented by the high/low surrogate pair
com.sun.org.apache.xml.internal.serializer.Encodings#toCodePoint(char)->int:::Return the unicode code point represented by the char
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#addAttribute(String, String, String, String, String, boolean)->void:::Add at attribute to the current element
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#addAttributes(org.xml.sax.Attributes)->void:::Add attributes to the current element
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#addAttribute(String, String)->void:::Add an attribute to the current element
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#characters(String)->void:::This method is used to notify of a character event, but passing the data as a character String rather than the standard character array.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#characters(org.w3c.dom.Node)->void:::This method is used to notify of a character event, but passing the data as a DOM Node rather than the standard character array.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#endElement(String)->void:::This method is used to notify that an element has ended
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#startElement(String, String, String)->void:::This method is used to notify that an element is starting
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#startElement(String)->void:::This method is used to notify of the start of an element
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#namespaceAfterStartElement(String, String)->void:::This method is used to notify that a prefix mapping is to start, but after an element is started
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#startPrefixMapping(String, String, boolean)->boolean:::This method is used to notify that a prefix maping is to start, which can be for the current element, or for the one to come.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#entityReference(String)->void:::Notify of an entity reference.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#getNamespaceMappings()->NamespaceMappings:::This method returns an object that has the current namespace mappings in effect.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#getPrefix(String)->String:::This method returns the prefix that currently maps to the given namespace URI.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#getNamespaceURI(String, boolean)->String:::This method gets the prefix associated with a current element or attribute name.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#getNamespaceURIFromPrefix(String)->String:::This method returns the namespace URI currently associated with the prefix.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#setSourceLocator(SourceLocator)->void:::This method is used to set the source locator, which might be used to generated an error message.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#addUniqueAttribute(String, String, int)->void:::Add a unique attribute to the current element
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#addXSLAttribute(String, String, String)->void:::Add an attribute from an xsl:attribute element.
com.sun.org.apache.xml.internal.serializer.ExtendedContentHandler#addAttribute(String, String, String, String, String)->void:::Add at attribute to the current element, not from an xsl:attribute element.
com.sun.org.apache.xml.internal.serializer.ExtendedLexicalHandler#comment(String)->void:::This method is used to notify of a comment
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#lookupNamespace(String)->String:::Use a namespace prefix to lookup a namespace URI.
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#getMappingFromPrefix(String)->MappingRecord::: namespace mappings get mapping from prefix
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#lookupPrefix(String)->String:::Given a namespace uri, and the namespaces mappings for the current element, return the current prefix for that uri.
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#getMappingFromURI(String)->MappingRecord::: namespace mappings get mapping from i
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#popNamespace(String)->boolean:::Undeclare the namespace that is currently pointed to by a given prefix
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#pushNamespace(String, String, int)->boolean:::Declare a mapping of a prefix to namespace URI at the given element depth.
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#popNamespaces(int, ContentHandler)->void:::Pop, or undeclare all namespace definitions that are currently declared at the given element depth, or deepter.
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#generateNextPrefix()->String:::Generate a new namespace prefix ( ns0, ns1 ...) not used before
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#clone()->Object:::This method makes a clone of this object.
com.sun.org.apache.xml.internal.serializer.NamespaceMappings#reset()->void::: namespace mappings reset
com.sun.org.apache.xml.internal.serializer.OutputPropertiesFactory#getDefaultMethodProperties(String)->Properties:::Creates an empty OutputProperties with the property key/value defaults specified by a property file
com.sun.org.apache.xml.internal.serializer.OutputPropertyUtils#getBooleanProperty(String, Properties)->boolean:::Searches for the boolean property with the specified key in the property list
com.sun.org.apache.xml.internal.serializer.OutputPropertyUtils#getIntProperty(String, Properties)->int:::Searches for the int property with the specified key in the property list
com.sun.org.apache.xml.internal.serializer.SerializationHandler#setContentHandler(ContentHandler)->void:::Set the SAX Content handler that the serializer sends its output to
com.sun.org.apache.xml.internal.serializer.SerializationHandler#close()->void::: serialization handler close
com.sun.org.apache.xml.internal.serializer.SerializationHandler#serialize(Node)->void:::Notify that the serializer should take this DOM node as input to be serialized.
com.sun.org.apache.xml.internal.serializer.SerializationHandler#setEscaping(boolean)->boolean:::Turns special character escaping on/off
com.sun.org.apache.xml.internal.serializer.SerializationHandler#setIndentAmount(int)->void:::Set the number of spaces to indent for each indentation level.
com.sun.org.apache.xml.internal.serializer.SerializationHandler#setTransformer(Transformer)->void:::Set the transformer associated with the serializer.
com.sun.org.apache.xml.internal.serializer.SerializationHandler#getTransformer()->Transformer:::Get the transformer associated with the serializer.
com.sun.org.apache.xml.internal.serializer.SerializationHandler#setNamespaceMappings(NamespaceMappings)->void:::Used only by TransformerSnapshotImpl to restore the serialization to a previous state.
com.sun.org.apache.xml.internal.serializer.SerializationHandler#flushPending()->void:::A SerializationHandler accepts SAX-like events, so it can accumulate attributes or namespace nodes after a startElement()
com.sun.org.apache.xml.internal.serializer.SerializationHandler#setDTDEntityExpansion(boolean)->void:::Default behavior is to expand DTD entities, that is the initall default value is true.
com.sun.org.apache.xml.internal.serializer.SerializationHandler#setIsStandalone(boolean)->void:::Specify if the output will be treated as a standalone  property
com.sun.org.apache.xml.internal.serializer.Serializer#setOutputStream(OutputStream)->void:::Specifies an output stream to which the document should be serialized
com.sun.org.apache.xml.internal.serializer.Serializer#getOutputStream()->OutputStream:::Get the output stream where the events will be serialized to.
com.sun.org.apache.xml.internal.serializer.Serializer#setWriter(Writer)->void:::Specifies a writer to which the document should be serialized
com.sun.org.apache.xml.internal.serializer.Serializer#getWriter()->Writer:::Get the character stream where the events will be serialized to.
com.sun.org.apache.xml.internal.serializer.Serializer#setOutputFormat(Properties)->void:::Specifies an output format for this serializer
com.sun.org.apache.xml.internal.serializer.Serializer#getOutputFormat()->Properties:::Returns the output format properties for this serializer.
com.sun.org.apache.xml.internal.serializer.Serializer#asContentHandler()->ContentHandler:::Return a ContentHandler interface to provide SAX input to
com.sun.org.apache.xml.internal.serializer.Serializer#asDOMSerializer()->DOMSerializer:::Return a DOMSerializer interface into this serializer
com.sun.org.apache.xml.internal.serializer.Serializer#reset()->boolean:::This method resets the serializer
com.sun.org.apache.xml.internal.serializer.Serializer#asDOM3Serializer()->Object:::Return an Object into this serializer to be cast to a DOM3Serializer
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireEndElem(String)->void:::To fire off the end element trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireCharEvent(char[], int, int)->void:::Report the characters trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#comment(String)->void:::Receive notification of a comment.
com.sun.org.apache.xml.internal.serializer.SerializerBase#patchName(String)->String:::If at runtime, when the qname of the attribute is known, another prefix is specified for the attribute, then we can patch or hack the name with this method
com.sun.org.apache.xml.internal.serializer.SerializerBase#getLocalName(String)->String:::Returns the local name of a qualified name
com.sun.org.apache.xml.internal.serializer.SerializerBase#setDocumentLocator(Locator)->void:::Receive an object for locating the origin of SAX document events.
com.sun.org.apache.xml.internal.serializer.SerializerBase#addAttribute(String, String, String, String, String, boolean)->void:::Adds the given attribute to the set of collected attributes , but only if there is a currently open element
com.sun.org.apache.xml.internal.serializer.SerializerBase#addAttributeAlways(String, String, String, String, String, boolean)->boolean:::Adds the given attribute to the set of attributes, even if there is no currently open element
com.sun.org.apache.xml.internal.serializer.SerializerBase#addAttribute(String, String)->void::: Adds  the given attribute to the set of collected attributes, but only if there is a currently open element.
com.sun.org.apache.xml.internal.serializer.SerializerBase#addXSLAttribute(String, String, String)->void:::Adds the given xsl:attribute to the set of collected attributes, but only if there is a currently open element.
com.sun.org.apache.xml.internal.serializer.SerializerBase#addAttributes(Attributes)->void:::Add the given attributes to the currently collected ones
com.sun.org.apache.xml.internal.serializer.SerializerBase#asContentHandler()->ContentHandler:::Return a ContentHandler interface into this serializer
com.sun.org.apache.xml.internal.serializer.SerializerBase#endEntity(String)->void:::Report the end of an entity.
com.sun.org.apache.xml.internal.serializer.SerializerBase#isInEntityRef()->boolean:::This method checks if current node is in entity reference.
com.sun.org.apache.xml.internal.serializer.SerializerBase#close()->void:::Flush and close the underlying java.io.Writer
com.sun.org.apache.xml.internal.serializer.SerializerBase#initCDATA()->void:::Initialize global variables
com.sun.org.apache.xml.internal.serializer.SerializerBase#getEncoding()->String:::Returns the character encoding to be used in the output document.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setEncoding(String)->void:::Sets the character encoding coming from the xsl:output encoding stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setOmitXMLDeclaration(boolean)->void:::Sets the value coming from the xsl:output omit-xml-declaration stylesheet attribute
com.sun.org.apache.xml.internal.serializer.SerializerBase#getOmitXMLDeclaration()->boolean::: serializer base get omit declaration
com.sun.org.apache.xml.internal.serializer.SerializerBase#getDoctypePublic()->String:::Returns the previously set value of the value to be used as the public identifier in the document type declaration (DTD).
com.sun.org.apache.xml.internal.serializer.SerializerBase#setDoctypePublic(String)->void:::Set the value coming from the xsl:output doctype-public stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.SerializerBase#getDoctypeSystem()->String:::Returns the previously set value of the value to be used as the system identifier in the document type declaration (DTD).
com.sun.org.apache.xml.internal.serializer.SerializerBase#setDoctypeSystem(String)->void:::Set the value coming from the xsl:output doctype-system stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setDoctype(String, String)->void:::Set the value coming from the xsl:output doctype-public and doctype-system stylesheet properties
com.sun.org.apache.xml.internal.serializer.SerializerBase#setStandalone(String)->void:::Sets the value coming from the xsl:output standalone stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setStandaloneInternal(String)->void:::Sets the XSL standalone attribute, but does not remember if this is a default or explicite setting.
com.sun.org.apache.xml.internal.serializer.SerializerBase#getStandalone()->String:::Gets the XSL standalone attribute
com.sun.org.apache.xml.internal.serializer.SerializerBase#getIndent()->boolean::: serializer base get indent
com.sun.org.apache.xml.internal.serializer.SerializerBase#getMediaType()->String:::Gets the mediatype the media-type or MIME type associated with the output document.
com.sun.org.apache.xml.internal.serializer.SerializerBase#getVersion()->String:::Gets the version of the output format.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setVersion(String)->void:::Sets the value coming from the xsl:output version attribute.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setMediaType(String)->void:::Sets the value coming from the xsl:output media-type stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.SerializerBase#getIndentAmount()->int::: serializer base get indent amount
com.sun.org.apache.xml.internal.serializer.SerializerBase#setIndentAmount(int)->void:::Sets the indentation amount.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setIndent(boolean)->void:::Sets the value coming from the xsl:output indent stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setIsStandalone(boolean)->void:::Sets the isStandalone property
com.sun.org.apache.xml.internal.serializer.SerializerBase#namespaceAfterStartElement(String, String)->void:::This method is used when a prefix/uri namespace mapping is indicated after the element was started with a startElement() and before and endElement()
com.sun.org.apache.xml.internal.serializer.SerializerBase#asDOMSerializer()->DOMSerializer:::Return a DOMSerializer interface into this serializer
com.sun.org.apache.xml.internal.serializer.SerializerBase#getPrefixPart(String)->String:::Returns the local name of a qualified name
com.sun.org.apache.xml.internal.serializer.SerializerBase#getNamespaceMappings()->NamespaceMappings:::Some users of the serializer may need the current namespace mappings
com.sun.org.apache.xml.internal.serializer.SerializerBase#getPrefix(String)->String:::Returns the prefix currently pointing to the given URI (if any).
com.sun.org.apache.xml.internal.serializer.SerializerBase#getNamespaceURI(String, boolean)->String:::Returns the URI of an element or attribute
com.sun.org.apache.xml.internal.serializer.SerializerBase#getNamespaceURIFromPrefix(String)->String:::Returns the URI of prefix (if any)
com.sun.org.apache.xml.internal.serializer.SerializerBase#entityReference(String)->void:::Entity reference event.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setTransformer(Transformer)->void:::Sets the transformer associated with this serializer
com.sun.org.apache.xml.internal.serializer.SerializerBase#getTransformer()->Transformer:::Gets the transformer associated with this serializer
com.sun.org.apache.xml.internal.serializer.SerializerBase#characters(org.w3c.dom.Node)->void:::This method gets the nodes value as a String and uses that String as if it were an input character notification.
com.sun.org.apache.xml.internal.serializer.SerializerBase#error(SAXParseException)->void::: serializer base error
com.sun.org.apache.xml.internal.serializer.SerializerBase#fatalError(SAXParseException)->void::: serializer base fatal error
com.sun.org.apache.xml.internal.serializer.SerializerBase#warning(SAXParseException)->void::: serializer base warning
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireStartEntity(String)->void:::To fire off start entity trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireCDATAEvent(char[], int, int)->void:::Report the CDATA trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireCommentEvent(char[], int, int)->void:::Report the comment trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireEndEntity(String)->void:::To fire off end entity trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireStartDoc()->void:::To fire off start document trace  event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireEndDoc()->void:::To fire off end document trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireStartElem(String)->void:::Report the start element trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireEscapingEvent(String, String)->void:::To fire off the PI trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#fireEntityReference(String)->void:::To fire off the entity reference trace event
com.sun.org.apache.xml.internal.serializer.SerializerBase#startDocument()->void:::Receive notification of the beginning of a document
com.sun.org.apache.xml.internal.serializer.SerializerBase#startDocumentInternal()->void:::This method handles what needs to be done at a startDocument() call, whether from an external caller, or internally called in the serializer
com.sun.org.apache.xml.internal.serializer.SerializerBase#setDocumentInfo()->void::: serializer base set document info
com.sun.org.apache.xml.internal.serializer.SerializerBase#setSourceLocator(SourceLocator)->void:::This method is used to set the source locator, which might be used to generated an error message.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setNamespaceMappings(NamespaceMappings)->void:::Used only by TransformerSnapshotImpl to restore the serialization to a previous state.
com.sun.org.apache.xml.internal.serializer.SerializerBase#reset()->boolean::: serializer base reset
com.sun.org.apache.xml.internal.serializer.SerializerBase#inTemporaryOutputState()->boolean:::Returns true if the serializer is used for temporary output rather than final output
com.sun.org.apache.xml.internal.serializer.SerializerBase#addAttribute(String, String, String, String, String)->void:::This method adds an attribute the the current element, but should not be used for an xsl:attribute child.
com.sun.org.apache.xml.internal.serializer.SerializerBase#notationDecl(String, String, String)->void::: serializer base notation decl
com.sun.org.apache.xml.internal.serializer.SerializerBase#unparsedEntityDecl(String, String, String, String)->void::: serializer base unparsed entity decl
com.sun.org.apache.xml.internal.serializer.SerializerBase#setDTDEntityExpansion(boolean)->void:::If set to false the serializer does not expand DTD entities, but leaves them as is, the default value is true.
com.sun.org.apache.xml.internal.serializer.SerializerBase#initCdataElems(String)->void::: serializer base init cdata elems
com.sun.org.apache.xml.internal.serializer.SerializerBase#documentIsEmpty()->boolean:::Return true if nothing has been sent to this result tree yet
com.sun.org.apache.xml.internal.serializer.SerializerBase#isCdataSection()->boolean:::Return true if the current element in m_elemContext is a CDATA section
com.sun.org.apache.xml.internal.serializer.SerializerBase#getOutputProperty(String)->String:::Get the value of an output property, the explicit value, if any, otherwise the default value, if any, otherwise null.
com.sun.org.apache.xml.internal.serializer.SerializerBase#getOutputPropertyNonDefault(String)->String:::Get the value of an output property, not the default value
com.sun.org.apache.xml.internal.serializer.SerializerBase#asDOM3Serializer()->Object:::Return a DOM3Serializer interface into this serializer
com.sun.org.apache.xml.internal.serializer.SerializerBase#getOutputPropertyDefault(String)->String:::Get the default value of an xsl:output property, which would be null only if no default value exists for the property.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setOutputProperty(String, String)->void:::Set the value for the output property, typically from an xsl:output element, but this does not change what the default value is.
com.sun.org.apache.xml.internal.serializer.SerializerBase#setOutputPropertyDefault(String, String)->void:::Set the default value for an output property, but this does not impact any explicitly set value.
com.sun.org.apache.xml.internal.serializer.SerializerBase#getOutputPropDefaultKeys()->Set::: serializer base get output prop default keys
com.sun.org.apache.xml.internal.serializer.SerializerBase#getOutputPropKeys()->Set::: serializer base get output prop keys
com.sun.org.apache.xml.internal.serializer.SerializerBase#setProp(String, String, boolean)->void::: serializer base set prop
com.sun.org.apache.xml.internal.serializer.SerializerBase#getFirstCharLocName(String)->char:::Get the first char of the local name
com.sun.org.apache.xml.internal.serializer.SerializerFactory#getSerializer(Properties)->Serializer:::Returns a serializer for the specified output method
com.sun.org.apache.xml.internal.serializer.SerializerTrace#hasTraceListeners()->boolean:::Tell if trace listeners are present.
com.sun.org.apache.xml.internal.serializer.SerializerTrace#fireGenerateEvent(int)->void:::Fire startDocument, endDocument events.
com.sun.org.apache.xml.internal.serializer.SerializerTrace#fireGenerateEvent(int, String, Attributes)->void:::Fire startElement, endElement events.
com.sun.org.apache.xml.internal.serializer.SerializerTrace#fireGenerateEvent(int, char[], int, int)->void:::Fire characters, cdata events.
com.sun.org.apache.xml.internal.serializer.SerializerTrace#fireGenerateEvent(int, String, String)->void:::Fire processingInstruction events.
com.sun.org.apache.xml.internal.serializer.SerializerTrace#fireGenerateEvent(int, String)->void:::Fire comment and entity ref events.
com.sun.org.apache.xml.internal.serializer.SerializerTraceWriter#flush()->void:::Flush the internal buffer and flush the Writer
com.sun.org.apache.xml.internal.serializer.SerializerTraceWriter#close()->void:::Flush the internal buffer and close the Writer
com.sun.org.apache.xml.internal.serializer.SerializerTraceWriter#write(int)->void:::Write a single character
com.sun.org.apache.xml.internal.serializer.SerializerTraceWriter#write(char[], int, int)->void:::Write a portion of an array of characters.
com.sun.org.apache.xml.internal.serializer.SerializerTraceWriter#write(String)->void:::Write a string.
com.sun.org.apache.xml.internal.serializer.SerializerTraceWriter#getWriter()->Writer:::Get the writer that this one directly wraps.
com.sun.org.apache.xml.internal.serializer.SerializerTraceWriter#getOutputStream()->OutputStream:::Get the OutputStream that is the at the end of the chain of writers.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#getOutputFormat()->Properties:::Returns null.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#getOutputStream()->OutputStream:::Reurns null
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#getWriter()->Writer:::Returns null
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#indent(int)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#serialize(Node)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#setEscaping(boolean)->boolean:::Turns special character escaping on/off.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#setIndent(boolean)->void:::Does nothing
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#setOutputFormat(Properties)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#setOutputStream(OutputStream)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#setWriter(Writer)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#attributeDecl(String, String, String, String, String)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#elementDecl(String, String)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#externalEntityDecl(String, String, String)->void::: to handler external entity decl
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#internalEntityDecl(String, String)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#endElement(String, String, String)->void:::Receive notification of the end of an element
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#endPrefixMapping(String)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#ignorableWhitespace(char[], int, int)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#processingInstruction(String, String)->void:::Receive notification of a processing instruction
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#setDocumentLocator(Locator)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#skippedEntity(String)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#startElement(String, String, String, Attributes)->void:::Receive notification of the beginning of an element, although this is a SAX method additional namespace or attribute information can occur before or after this call, that is associated with this element.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#comment(char[], int, int)->void:::Receive notification of a comment anywhere in the document
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#endCDATA()->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#endDTD()->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#startCDATA()->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#startEntity(String)->void:::Does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#endDocument()->void:::Receive notification of the end of a document
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#closeStartTag()->void:::This method is called when all the data needed for a call to the SAX handler's startElement() method has been gathered.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#close()->void:::Do nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#characters(String)->void:::Receive notification of character data.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#startElement(String, String, String)->void:::An element starts, but attributes are not fully known yet.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#startElement(String)->void:::An element starts, but attributes are not fully known yet.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#endElement(String)->void:::Receive notification of the end of an element.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#characters(char[], int, int)->void:::Receive notification of character data
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#flushPending()->void:::This method flushes any pending events, which can be startDocument() closing the opening tag of an element, or closing an open CDATA section.
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#startPrefixMapping(String, String, boolean)->boolean:::Handle a prefix/uri mapping, which is associated with a startElement() that is soon to follow
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#startPrefixMapping(String, String)->void:::Begin the scope of a prefix-URI Namespace mapping just before another element is about to start
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#namespaceAfterStartElement(String, String)->void:::This method is used when a prefix/uri namespace mapping is indicated after the element was started with a startElement() and before and endElement()
com.sun.org.apache.xml.internal.serializer.ToHTMLSAXHandler#reset()->boolean:::Try's to reset the super class and reset this class for re-use, so that you don't need to create a new serializer (mostly for performance reasons).
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#initTagReference(Trie)->void::: to stream init tag reference
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#setSpecialEscapeURLs(boolean)->void:::Tells if the formatter should use special URL escaping.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#setOmitMetaTag(boolean)->void:::Tells if the formatter should omit the META tag.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#setOutputFormat(Properties)->void:::Specifies an output format for this serializer
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#getElemDesc(String)->ElemDesc:::Get a description of the given element.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#startDocumentInternal()->void:::Receive notification of the beginning of a document.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#endDocument()->void:::Receive notification of the end of a document.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#shouldIndentForText()->boolean:::If the previous is an inline element, won't insert a new line before the text.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#shouldFormatOutput()->boolean:::Only check m_doIndent, disregard m_ispreserveSpace.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#startElement(String, String, String, Attributes)->void:::Receive notification of the beginning of an element.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#endElement(String, String, String)->void::: Receive notification of the end of an element.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#processAttribute(java.io.Writer, String, String, ElemDesc)->void:::Process an attribute.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#writeAttrURI(java.io.Writer, String, boolean)->void:::Write the specified <var>string</var> after substituting non ASCII characters, with <CODE>%HH</CODE>, where HH is the hex of the byte value.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#writeAttrString(java.io.Writer, String, String)->void:::Writes the specified <var>string</var> after substituting <VAR>specials</VAR>, and UTF-16 surrogates for character references <CODE>&amp;#xnn</CODE>.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#characters(char[], int, int)->void:::Receive notification of character data
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#cdata(char[], int, int)->void::: Receive notification of cdata
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#processingInstruction(String, String)->void::: Receive notification of a processing instruction.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#entityReference(String)->void:::Receive notivication of a entityReference.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#endElement(String)->void::: to stream end element
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#processAttributes(java.io.Writer, int)->void:::Process the attributes, which means to write out the currently collected attributes to the writer
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#closeStartTag()->void:::For the enclosing elements starting tag write out out any attributes followed by ">"
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#namespaceAfterStartElement(String, String)->void:::This method is used when a prefix/uri namespace mapping is indicated after the element was started with a startElement() and before and endElement()
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#startDTD(String, String, String)->void::: to stream start d
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#endDTD()->void:::Report the end of DTD declarations.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#attributeDecl(String, String, String, String, String)->void:::This method does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#elementDecl(String, String)->void:::This method does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#internalEntityDecl(String, String)->void:::This method does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#externalEntityDecl(String, String, String)->void:::This method does nothing.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#addUniqueAttribute(String, String, int)->void:::This method is used to add an attribute to the currently open element
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#comment(char[], int, int)->void::: to stream comment
com.sun.org.apache.xml.internal.serializer.ToHTMLStream#reset()->boolean::: to stream reset
com.sun.org.apache.xml.internal.serializer.ToHTMLStream.Trie#put(String, Object)->Object:::Put an object into the trie for lookup.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream.Trie#get(String)->Object:::Get an object that matches the key.
com.sun.org.apache.xml.internal.serializer.ToHTMLStream.Trie#get2(String)->Object:::Get an object that matches the key
com.sun.org.apache.xml.internal.serializer.ToHTMLStream.Trie#getLongestKeyLength()->int:::Get the length of the longest key used in the table.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#startDocumentInternal()->void:::Pass callback to the SAX Handler
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#startDTD(String, String, String)->void:::Do nothing.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#characters(String)->void:::Receive notification of character data.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#comment(String)->void:::Receive notification of a comment.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#processingInstruction(String, String)->void:::Do nothing as this is an abstract class
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#closeStartTag()->void::: to handler close start tag
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#closeCDATA()->void::: to handler close a
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#startElement(String, String, String, Attributes)->void:::Receive notification of the beginning of an element, although this is a SAX method additional namespace or attribute information can occur before or after this call, that is associated with this element.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#setLexHandler(LexicalHandler)->void:::Sets the LexicalHandler.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#setContentHandler(ContentHandler)->void:::Sets the SAX ContentHandler.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#setCdataSectionElements(List)->void:::Does nothing
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#setShouldOutputNSAttr(boolean)->void:::Set whether or not namespace declarations (e.g
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#getShouldOutputNSAttr()->boolean:::Returns true if namespace declarations from calls such as startPrefixMapping("prefix1","uri1") should also be mirrored with self generated additional attributes of elements that declare the namespace, for example the attribute xmlns:prefix1="uri1"
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#flushPending()->void:::This method flushes any pending events, which can be startDocument() closing the opening tag of an element, or closing an open CDATA section.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#setTransformState(TransformStateSetter)->void:::Pass in a reference to a TransformState object, which can be used during SAX ContentHandler events to obtain information about he state of the transformation
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#startElement(String, String, String)->void:::Receives notification that an element starts, but attributes are not fully known yet.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#startElement(String)->void:::An element starts, but attributes are not fully known yet.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#characters(org.w3c.dom.Node)->void:::This method gets the node's value as a String and uses that String as if it were an input character notification.
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#fatalError(SAXParseException)->void::: to handler fatal error
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#error(SAXParseException)->void::: to handler error
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#warning(SAXParseException)->void::: to handler warning
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#reset()->boolean:::Try's to reset the super class and reset this class for re-use, so that you don't need to create a new serializer (mostly for performance reasons).
com.sun.org.apache.xml.internal.serializer.ToSAXHandler#addUniqueAttribute(String, String, int)->void:::Add a unique attribute
com.sun.org.apache.xml.internal.serializer.ToStream#closeCDATA()->void:::This helper method to writes out "]]>" when closing a CDATA section.
com.sun.org.apache.xml.internal.serializer.ToStream#serialize(Node)->void:::Serializes the DOM node
com.sun.org.apache.xml.internal.serializer.ToStream#isUTF16Surrogate(char)->boolean:::Return true if the character is the high member of a surrogate pair
com.sun.org.apache.xml.internal.serializer.ToStream#flushWriter()->void:::Flush the formatter's result stream.
com.sun.org.apache.xml.internal.serializer.ToStream#getOutputStream()->OutputStream:::Get the output stream where the events will be serialized to.
com.sun.org.apache.xml.internal.serializer.ToStream#elementDecl(String, String)->void:::  Report an element type declaration
com.sun.org.apache.xml.internal.serializer.ToStream#internalEntityDecl(String, String)->void:::Report an internal entity declaration
com.sun.org.apache.xml.internal.serializer.ToStream#outputEntityDecl(String, String)->void:::Output the doc type declaration.
com.sun.org.apache.xml.internal.serializer.ToStream#outputLineSep()->void:::Output a system-dependent line break.
com.sun.org.apache.xml.internal.serializer.ToStream#setProp(String, String, boolean)->void::: to stream set prop
com.sun.org.apache.xml.internal.serializer.ToStream#setOutputFormat(Properties)->void:::Specifies an output format for this serializer
com.sun.org.apache.xml.internal.serializer.ToStream#getOutputFormat()->Properties:::Returns the output format for this serializer.
com.sun.org.apache.xml.internal.serializer.ToStream#setWriter(Writer)->void:::Specifies a writer to which the document should be serialized
com.sun.org.apache.xml.internal.serializer.ToStream#setLineSepUse(boolean)->boolean:::Set if the operating systems end-of-line line separator should be used when serializing
com.sun.org.apache.xml.internal.serializer.ToStream#setOutputStream(OutputStream)->void:::Specifies an output stream to which the document should be serialized
com.sun.org.apache.xml.internal.serializer.ToStream#setEscaping(boolean)->boolean::: to stream set escaping
com.sun.org.apache.xml.internal.serializer.ToStream#indent(int)->void:::Might print a newline character and the indentation amount of the given depth.
com.sun.org.apache.xml.internal.serializer.ToStream#indent()->void:::Indent at the current element nesting depth.
com.sun.org.apache.xml.internal.serializer.ToStream#attributeDecl(String, String, String, String, String)->void:::Report an attribute type declaration
com.sun.org.apache.xml.internal.serializer.ToStream#getWriter()->Writer:::Get the character stream where the events will be serialized to.
com.sun.org.apache.xml.internal.serializer.ToStream#externalEntityDecl(String, String, String)->void:::Report a parsed external entity declaration
com.sun.org.apache.xml.internal.serializer.ToStream#escapingNotNeeded(char)->boolean:::Tell if this character can be written without escaping.
com.sun.org.apache.xml.internal.serializer.ToStream#writeUTF16Surrogate(char, char[], int, int)->int:::Once a surrogate has been detected, write out the pair of characters if it is in the encoding, or if there is no encoding, otherwise write out an entity reference of the value of the unicode code point of the character represented by the high/low surrogate pair
com.sun.org.apache.xml.internal.serializer.ToStream#accumDefaultEntity(Writer, char, int, char[], int, boolean, boolean)->int:::Handle one of the default entities, return false if it is not a default entity.
com.sun.org.apache.xml.internal.serializer.ToStream#writeNormalizedChars(char[], int, int, boolean, boolean)->void:::Normalize the characters, but don't escape.
com.sun.org.apache.xml.internal.serializer.ToStream#endNonEscaping()->void:::Ends an un-escaping section.
com.sun.org.apache.xml.internal.serializer.ToStream#startNonEscaping()->void:::Starts an un-escaping section
com.sun.org.apache.xml.internal.serializer.ToStream#cdata(char[], int, int)->void:::Receive notification of cdata
com.sun.org.apache.xml.internal.serializer.ToStream#charactersRaw(char[], int, int)->void:::If available, when the disable-output-escaping attribute is used, output raw text without escaping.
com.sun.org.apache.xml.internal.serializer.ToStream#characters(char[], int, int)->void:::Receive notification of character data
com.sun.org.apache.xml.internal.serializer.ToStream#shouldFormatOutput()->boolean:::This method checks if the content in current element should be formatted.
com.sun.org.apache.xml.internal.serializer.ToStream#getIndent()->boolean::: to stream get indent
com.sun.org.apache.xml.internal.serializer.ToStream#flushCharactersBuffer()->void:::Used to flush the buffered characters when indentation is on, this method will be called when the next node is traversed.
com.sun.org.apache.xml.internal.serializer.ToStream#shouldIndentForText()->boolean:::True if should indent in flushCharactersBuffer method
com.sun.org.apache.xml.internal.serializer.ToStream#characters(String)->void:::Receive notification of character data.
com.sun.org.apache.xml.internal.serializer.ToStream#accumDefaultEscape(Writer, char, int, char[], int, boolean, boolean)->int:::Escape and writer.write a character.
com.sun.org.apache.xml.internal.serializer.ToStream#startElement(String, String, String, Attributes)->void:::Receive notification of the beginning of an element, although this is a SAX method additional namespace or attribute information can occur before or after this call, that is associated with this element.
com.sun.org.apache.xml.internal.serializer.ToStream#startElement(String, String, String)->void:::Receive notification of the beginning of an element, additional namespace or attribute information can occur before or after this call, that is associated with this element.
com.sun.org.apache.xml.internal.serializer.ToStream#startElement(String)->void::: to stream start element
com.sun.org.apache.xml.internal.serializer.ToStream#outputDocTypeDecl(String, boolean)->void:::Output the doc type declaration.
com.sun.org.apache.xml.internal.serializer.ToStream#processAttributes(Writer, int)->void:::Process the attributes, which means to write out the currently collected attributes to the writer
com.sun.org.apache.xml.internal.serializer.ToStream#writeAttrString(Writer, String, String)->void:::Returns the specified <var>string</var> after substituting <VAR>specials</VAR>, and UTF-16 surrogates for chracter references <CODE>&amp;#xnn</CODE>.
com.sun.org.apache.xml.internal.serializer.ToStream#endElement(String, String, String)->void:::Receive notification of the end of an element.
com.sun.org.apache.xml.internal.serializer.ToStream#endElement(String)->void:::Receive notification of the end of an element.
com.sun.org.apache.xml.internal.serializer.ToStream#startPrefixMapping(String, String)->void:::Begin the scope of a prefix-URI Namespace mapping just before another element is about to start
com.sun.org.apache.xml.internal.serializer.ToStream#startPrefixMapping(String, String, boolean)->boolean:::Handle a prefix/uri mapping, which is associated with a startElement() that is soon to follow
com.sun.org.apache.xml.internal.serializer.ToStream#comment(char[], int, int)->void:::Receive notification of an XML comment anywhere in the document
com.sun.org.apache.xml.internal.serializer.ToStream#endCDATA()->void:::Report the end of a CDATA section.
com.sun.org.apache.xml.internal.serializer.ToStream#endDTD()->void:::Report the end of DTD declarations.
com.sun.org.apache.xml.internal.serializer.ToStream#endPrefixMapping(String)->void:::End the scope of a prefix-URI Namespace mapping.
com.sun.org.apache.xml.internal.serializer.ToStream#ignorableWhitespace(char[], int, int)->void:::Receive notification of ignorable whitespace in element content
com.sun.org.apache.xml.internal.serializer.ToStream#skippedEntity(String)->void:::Receive notification of a skipped entity.
com.sun.org.apache.xml.internal.serializer.ToStream#startCDATA()->void:::Report the start of a CDATA section.
com.sun.org.apache.xml.internal.serializer.ToStream#startEntity(String)->void:::Report the beginning of an entity
com.sun.org.apache.xml.internal.serializer.ToStream#closeStartTag()->void:::For the enclosing elements starting tag write out out any attributes followed by ">"
com.sun.org.apache.xml.internal.serializer.ToStream#startDTD(String, String, String)->void:::Report the start of DTD declarations, if any
com.sun.org.apache.xml.internal.serializer.ToStream#getIndentAmount()->int:::Returns the m_indentAmount.
com.sun.org.apache.xml.internal.serializer.ToStream#setIndentAmount(int)->void:::Sets the m_indentAmount.
com.sun.org.apache.xml.internal.serializer.ToStream#shouldIndent()->boolean:::Tell if, based on space preservation constraints and the doIndent property, if an indent should occur.
com.sun.org.apache.xml.internal.serializer.ToStream#setCdataSectionElements(List)->void:::Remembers the cdata sections specified in the cdata-section-elements
com.sun.org.apache.xml.internal.serializer.ToStream#ensureAttributesNamespaceIsDeclared(String, String, String)->String:::Makes sure that the namespace URI for the given qualified attribute name is declared.
com.sun.org.apache.xml.internal.serializer.ToStream#ensurePrefixIsDeclared(String, String)->void::: to stream ensure prefix is declared
com.sun.org.apache.xml.internal.serializer.ToStream#flushPending()->void:::This method flushes any pending events, which can be startDocument() closing the opening tag of an element, or closing an open CDATA section.
com.sun.org.apache.xml.internal.serializer.ToStream#setContentHandler(ContentHandler)->void::: to stream set content handler
com.sun.org.apache.xml.internal.serializer.ToStream#addAttributeAlways(String, String, String, String, String, boolean)->boolean:::Adds the given attribute to the set of attributes, even if there is no currently open element
com.sun.org.apache.xml.internal.serializer.ToStream#firePseudoAttributes()->void:::To fire off the pseudo characters of attributes, as they currently exist
com.sun.org.apache.xml.internal.serializer.ToStream#setTransformer(Transformer)->void::: to stream set transformer
com.sun.org.apache.xml.internal.serializer.ToStream#reset()->boolean:::Try's to reset the super class and reset this class for re-use, so that you don't need to create a new serializer (mostly for performance reasons).
com.sun.org.apache.xml.internal.serializer.ToStream#setEncoding(String)->void:::Sets the character encoding coming from the xsl:output encoding stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#clear()->void:::Clears the stack.
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#push(boolean)->boolean:::Pushes an item onto the top of this stack.
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#pop()->boolean:::Removes the object at the top of this stack and returns that object as the value of this function.
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#popAndTop()->boolean:::Removes the object at the top of this stack and returns the next object at the top as the value of this function.
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#setTop(boolean)->void:::Set the item at the top of this stack
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#peek()->boolean:::Looks at the object at the top of this stack without removing it from the stack.
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#peekOrFalse()->boolean:::Looks at the object at the top of this stack without removing it from the stack
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#peekOrTrue()->boolean:::Looks at the object at the top of this stack without removing it from the stack
com.sun.org.apache.xml.internal.serializer.ToStream.BoolStack#isEmpty()->boolean:::Tests if this stack is empty.
com.sun.org.apache.xml.internal.serializer.ToStream#notationDecl(String, String, String)->void:::If this method is called, the serializer is used as a DTDHandler, which changes behavior how the serializer handles document entities.
com.sun.org.apache.xml.internal.serializer.ToStream#unparsedEntityDecl(String, String, String, String)->void:::If this method is called, the serializer is used as a DTDHandler, which changes behavior how the serializer handles document entities.
com.sun.org.apache.xml.internal.serializer.ToStream#setDTDEntityExpansion(boolean)->void:::If set to false the serializer does not expand DTD entities, but leaves them as is, the default value is true;
com.sun.org.apache.xml.internal.serializer.ToStream#addCdataSectionElements(String)->void:::Remembers the cdata sections specified in the cdata-section-elements by appending the given cdata section elements to the list
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#endElement(String)->void:::From XSLTC
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#endElement(String, String, String)->void::: to text handler end element
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#comment(char[], int, int)->void::: to text handler comment
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#comment(String)->void::: to text handler comment
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#getOutputFormat()->Properties::: to text handler get output format
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#getOutputStream()->OutputStream::: to text handler get output stream
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#getWriter()->Writer::: to text handler get writer
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#indent(int)->void:::Does nothing because the indent attribute is ignored for text output.
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#reset()->boolean::: to text handler reset
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#serialize(Node)->void::: to text handler serialize
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#setEscaping(boolean)->boolean::: to text handler set escaping
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#setIndent(boolean)->void::: to text handler set indent
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#setOutputFormat(Properties)->void::: to text handler set output format
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#setOutputStream(OutputStream)->void::: to text handler set output stream
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#setWriter(Writer)->void::: to text handler set writer
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#addAttribute(String, String, String, String, String, boolean)->void::: to text handler add attribute
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#attributeDecl(String, String, String, String, String)->void::: to text handler attribute decl
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#elementDecl(String, String)->void::: to text handler element decl
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#externalEntityDecl(String, String, String)->void::: to text handler external entity decl
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#internalEntityDecl(String, String)->void::: to text handler internal entity decl
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#endPrefixMapping(String)->void::: to text handler end prefix mapping
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#ignorableWhitespace(char[], int, int)->void::: to text handler ignorable whitespace
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#processingInstruction(String, String)->void:::From XSLTC
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#setDocumentLocator(Locator)->void::: to text handler set document locator
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#skippedEntity(String)->void::: to text handler skipped entity
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#startElement(String, String, String, Attributes)->void::: to text handler start element
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#endCDATA()->void::: to text handler end a
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#endDTD()->void::: to text handler end d
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#startCDATA()->void::: to text handler start a
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#startEntity(String)->void::: to text handler start entity
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#startElement(String, String, String)->void:::From XSLTC
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#startElement(String)->void::: to text handler start element
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#endDocument()->void:::From XSLTC
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#characters(String)->void::: to text handler characters
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#characters(char[], int, int)->void::: to text handler characters
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#addAttribute(String, String)->void:::From XSLTC
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#startPrefixMapping(String, String, boolean)->boolean::: to text handler start prefix mapping
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#startPrefixMapping(String, String)->void::: to text handler start prefix mapping
com.sun.org.apache.xml.internal.serializer.ToTextSAXHandler#namespaceAfterStartElement(String, String)->void::: to text handler namespace after start element
com.sun.org.apache.xml.internal.serializer.ToTextStream#startDocumentInternal()->void:::Receive notification of the beginning of a document
com.sun.org.apache.xml.internal.serializer.ToTextStream#endDocument()->void:::Receive notification of the end of a document
com.sun.org.apache.xml.internal.serializer.ToTextStream#startElement(String, String, String, Attributes)->void:::Receive notification of the beginning of an element
com.sun.org.apache.xml.internal.serializer.ToTextStream#endElement(String, String, String)->void:::Receive notification of the end of an element
com.sun.org.apache.xml.internal.serializer.ToTextStream#characters(char[], int, int)->void:::Receive notification of character data
com.sun.org.apache.xml.internal.serializer.ToTextStream#charactersRaw(char[], int, int)->void:::If available, when the disable-output-escaping attribute is used, output raw text without escaping.
com.sun.org.apache.xml.internal.serializer.ToTextStream#writeNormalizedChars(char[], int, int, boolean)->void:::Normalize the characters, but don't escape
com.sun.org.apache.xml.internal.serializer.ToTextStream#cdata(char[], int, int)->void:::Receive notification of cdata
com.sun.org.apache.xml.internal.serializer.ToTextStream#ignorableWhitespace(char[], int, int)->void:::Receive notification of ignorable whitespace in element content
com.sun.org.apache.xml.internal.serializer.ToTextStream#processingInstruction(String, String)->void:::Receive notification of a processing instruction
com.sun.org.apache.xml.internal.serializer.ToTextStream#comment(String)->void:::Called when a Comment is to be constructed
com.sun.org.apache.xml.internal.serializer.ToTextStream#comment(char[], int, int)->void:::Report an XML comment anywhere in the document
com.sun.org.apache.xml.internal.serializer.ToTextStream#entityReference(String)->void:::Receive notivication of a entityReference.
com.sun.org.apache.xml.internal.serializer.ToTextStream#addAttribute(String, String, String, String, String, boolean)->void::: to text stream add attribute
com.sun.org.apache.xml.internal.serializer.ToTextStream#endCDATA()->void::: to text stream end a
com.sun.org.apache.xml.internal.serializer.ToTextStream#endElement(String)->void::: to text stream end element
com.sun.org.apache.xml.internal.serializer.ToTextStream#startElement(String, String, String)->void:::From XSLTC
com.sun.org.apache.xml.internal.serializer.ToTextStream#characters(String)->void:::From XSLTC
com.sun.org.apache.xml.internal.serializer.ToTextStream#addAttribute(String, String)->void:::From XSLTC
com.sun.org.apache.xml.internal.serializer.ToTextStream#addUniqueAttribute(String, String, int)->void:::Add a unique attribute
com.sun.org.apache.xml.internal.serializer.ToTextStream#startPrefixMapping(String, String, boolean)->boolean::: to text stream start prefix mapping
com.sun.org.apache.xml.internal.serializer.ToTextStream#startPrefixMapping(String, String)->void::: to text stream start prefix mapping
com.sun.org.apache.xml.internal.serializer.ToTextStream#namespaceAfterStartElement(String, String)->void::: to text stream namespace after start element
com.sun.org.apache.xml.internal.serializer.ToTextStream#flushPending()->void::: to text stream flush pending
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#asContentHandler()->ContentHandler::: to unknown stream as content handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#close()->void::: to unknown stream close
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getOutputFormat()->Properties::: to unknown stream get output format
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getOutputStream()->OutputStream::: to unknown stream get output stream
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getWriter()->Writer::: to unknown stream get writer
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#reset()->boolean:::passes the call on to the underlying HTML or XML handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#serialize(Node)->void:::Converts the DOM node to output
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setEscaping(boolean)->boolean::: to unknown stream set escaping
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setOutputFormat(Properties)->void:::Set the properties of the handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setOutputStream(OutputStream)->void:::Sets the output stream to write to
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setWriter(Writer)->void:::Sets the writer to write to
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#addAttribute(String, String, String, String, String)->void:::Adds an attribute to the currenly open tag
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#addAttribute(String, String, String, String, String, boolean)->void:::Adds an attribute to the currenly open tag
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#addAttribute(String, String)->void:::Adds an attribute to the currenly open tag
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#addUniqueAttribute(String, String, int)->void:::Adds a unique attribute to the currenly open tag
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#characters(String)->void:::Converts the String to a character array and calls the SAX method characters(char[],int,int);
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#endElement(String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startPrefixMapping(String, String)->void::: to unknown stream start prefix mapping
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#namespaceAfterStartElement(String, String)->void:::This method is used when a prefix/uri namespace mapping is indicated after the element was started with a startElement() and before and endElement()
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startPrefixMapping(String, String, boolean)->boolean::: to unknown stream start prefix mapping
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setVersion(String)->void:::This method cannot be cached because default is different in HTML and XML (we need more than a boolean).
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startDocument()->void::: to unknown stream start document
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startElement(String)->void::: to unknown stream start element
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startElement(String, String, String)->void::: to unknown stream start element
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startElement(String, String, String, Attributes)->void::: to unknown stream start element
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#comment(String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getDoctypePublic()->String:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getDoctypeSystem()->String:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getEncoding()->String:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getIndent()->boolean:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getIndentAmount()->int:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getMediaType()->String:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getOmitXMLDeclaration()->boolean:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getStandalone()->String:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getVersion()->String:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setDoctype(String, String)->void::: to unknown stream set doctype
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setDoctypePublic(String)->void:::Set the doctype in the underlying XML handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setDoctypeSystem(String)->void:::Set the doctype in the underlying XML handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setEncoding(String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setIndent(boolean)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setIndentAmount(int)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setMediaType(String)->void::: to unknown stream set media type
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setOmitXMLDeclaration(boolean)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setStandalone(String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#attributeDecl(String, String, String, String, String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#elementDecl(String, String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#externalEntityDecl(String, String, String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#internalEntityDecl(String, String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#characters(char[], int, int)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#endDocument()->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#endElement(String, String, String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#endPrefixMapping(String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#ignorableWhitespace(char[], int, int)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#processingInstruction(String, String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setDocumentLocator(Locator)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#skippedEntity(String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#comment(char[], int, int)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#endCDATA()->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#endDTD()->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#endEntity(String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startCDATA()->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startDTD(String, String, String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#startEntity(String)->void:::Pass the call on to the underlying handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#asDOMSerializer()->DOMSerializer::: to unknown stream as serializer
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setCdataSectionElements(List)->void::: to unknown stream set cdata section elements
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#addAttributes(Attributes)->void::: to unknown stream add attributes
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getNamespaceMappings()->NamespaceMappings:::Get the current namespace mappings
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#flushPending()->void::: to unknown stream flush pending
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getPrefix(String)->String::: to unknown stream get prefix
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#entityReference(String)->void::: to unknown stream entity reference
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getNamespaceURI(String, boolean)->String::: to unknown stream get namespace i
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getNamespaceURIFromPrefix(String)->String::: to unknown stream get namespace from prefix
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setTransformer(Transformer)->void::: to unknown stream set transformer
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#getTransformer()->Transformer::: to unknown stream get transformer
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setContentHandler(ContentHandler)->void::: to unknown stream set content handler
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#setSourceLocator(SourceLocator)->void:::This method is used to set the source locator, which might be used to generated an error message.
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#firePseudoElement(String)->void::: to unknown stream fire pseudo element
com.sun.org.apache.xml.internal.serializer.ToUnknownStream#asDOM3Serializer()->Object::: to unknown stream as m3 serializer
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#getOutputFormat()->Properties::: to handler get output format
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#getOutputStream()->OutputStream::: to handler get output stream
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#getWriter()->Writer::: to handler get writer
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#indent(int)->void:::Do nothing for SAX.
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#serialize(Node)->void::: to handler serialize
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#setEscaping(boolean)->boolean::: to handler set escaping
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#setOutputFormat(Properties)->void::: to handler set output format
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#setOutputStream(OutputStream)->void::: to handler set output stream
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#setWriter(Writer)->void::: to handler set writer
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#attributeDecl(String, String, String, String, String)->void::: to handler attribute decl
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#elementDecl(String, String)->void::: to handler element decl
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#externalEntityDecl(String, String, String)->void::: to handler external entity decl
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#internalEntityDecl(String, String)->void::: to handler internal entity decl
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#endDocument()->void:::Receives notification of the end of the document.
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#closeStartTag()->void:::This method is called when all the data needed for a call to the SAX handler's startElement() method has been gathered.
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#closeCDATA()->void:::Closes ane open cdata tag, and unlike the this.endCDATA() method (from the LexicalHandler) interface, this "internal" method will send the endCDATA() call to the wrapped handler.
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#endElement(String, String, String)->void::: to handler end element
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#endPrefixMapping(String)->void::: to handler end prefix mapping
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#ignorableWhitespace(char[], int, int)->void::: to handler ignorable whitespace
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#setDocumentLocator(Locator)->void::: to handler set document locator
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#skippedEntity(String)->void::: to handler skipped entity
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#startPrefixMapping(String, String)->void::: to handler start prefix mapping
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#startPrefixMapping(String, String, boolean)->boolean::: to handler start prefix mapping
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#comment(char[], int, int)->void::: to handler comment
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#endCDATA()->void::: to handler end a
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#endDTD()->void::: to handler end d
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#startEntity(String)->void::: to handler start entity
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#characters(String)->void::: to handler characters
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#startElement(String, String, String)->void:::Start an element in the output document
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#startElement(String)->void::: to handler start element
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#characters(char[], int, int)->void::: to handler characters
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#endElement(String)->void::: to handler end element
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#namespaceAfterStartElement(String, String)->void:::Send a namespace declaration in the output document
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#processingInstruction(String, String)->void::: to handler processing instruction
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#popNamespace(String)->boolean:::Undeclare the namespace that is currently pointed to by a given prefix
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#startCDATA()->void::: to handler start a
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#startElement(String, String, String, Attributes)->void::: to handler start element
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#addAttribute(String, String, String, String, String, boolean)->void:::Adds the given attribute to the set of attributes, and also makes sure that the needed prefix/uri mapping is declared, but only if there is a currently open element.
com.sun.org.apache.xml.internal.serializer.ToXMLSAXHandler#reset()->boolean:::Try's to reset the super class and reset this class for re-use, so that you don't need to create a new serializer (mostly for performance reasons).
com.sun.org.apache.xml.internal.serializer.ToXMLStream#CopyFrom(ToXMLStream)->void:::Copy properties from another SerializerToXML.
com.sun.org.apache.xml.internal.serializer.ToXMLStream#startDocumentInternal()->void:::Receive notification of the beginning of a document.
com.sun.org.apache.xml.internal.serializer.ToXMLStream#endDocument()->void:::Receive notification of the end of a document.
com.sun.org.apache.xml.internal.serializer.ToXMLStream#startPreserving()->void:::Starts a whitespace preserving section
com.sun.org.apache.xml.internal.serializer.ToXMLStream#endPreserving()->void:::Ends a whitespace preserving section.
com.sun.org.apache.xml.internal.serializer.ToXMLStream#processingInstruction(String, String)->void:::Receive notification of a processing instruction.
com.sun.org.apache.xml.internal.serializer.ToXMLStream#entityReference(String)->void:::Receive notivication of a entityReference.
com.sun.org.apache.xml.internal.serializer.ToXMLStream#addUniqueAttribute(String, String, int)->void:::This method is used to add an attribute to the currently open element
com.sun.org.apache.xml.internal.serializer.ToXMLStream#addAttribute(String, String, String, String, String, boolean)->void:::Add an attribute to the current element.
com.sun.org.apache.xml.internal.serializer.ToXMLStream#endElement(String)->void::: to stream end element
com.sun.org.apache.xml.internal.serializer.ToXMLStream#namespaceAfterStartElement(String, String)->void:::This method is used to notify the serializer of a namespace mapping (or node) that applies to the current element whose startElement() call has already been seen
com.sun.org.apache.xml.internal.serializer.ToXMLStream#pushNamespace(String, String)->boolean:::From XSLTC Declare a prefix to point to a namespace URI
com.sun.org.apache.xml.internal.serializer.ToXMLStream#reset()->boolean:::Try's to reset the super class and reset this class for re-use, so that you don't need to create a new serializer (mostly for performance reasons).
com.sun.org.apache.xml.internal.serializer.TransformStateSetter#setCurrentNode(Node)->void:::Set the current node.
com.sun.org.apache.xml.internal.serializer.TransformStateSetter#resetState(Transformer)->void:::Reset the state on the given transformer object.
com.sun.org.apache.xml.internal.serializer.TreeWalker#getContentHandler()->ContentHandler:::Get the ContentHandler used for the tree walk.
com.sun.org.apache.xml.internal.serializer.TreeWalker#traverse(Node)->void:::Perform a pre-order traversal non-recursive style
com.sun.org.apache.xml.internal.serializer.TreeWalker#traverse(Node, Node)->void:::Perform a pre-order traversal non-recursive style
com.sun.org.apache.xml.internal.serializer.TreeWalker#startNode(Node)->void:::Start processing given node
com.sun.org.apache.xml.internal.serializer.TreeWalker#endNode(Node)->void:::End processing of given node
com.sun.org.apache.xml.internal.serializer.Version#getVersion()->String:::Get the basic version string for the current Serializer
com.sun.org.apache.xml.internal.serializer.Version#_main(String[])->void:::Print the processor version to the command line.
com.sun.org.apache.xml.internal.serializer.Version#getProduct()->String:::Name of product: Serializer.
com.sun.org.apache.xml.internal.serializer.Version#getImplementationLanguage()->String:::Implementation Language: Java.
com.sun.org.apache.xml.internal.serializer.Version#getMajorVersionNum()->int:::Major version number
com.sun.org.apache.xml.internal.serializer.Version#getReleaseVersionNum()->int:::Release Number
com.sun.org.apache.xml.internal.serializer.Version#getMaintenanceVersionNum()->int:::Maintenance Drop Number
com.sun.org.apache.xml.internal.serializer.Version#getDevelopmentVersionNum()->int:::Development Drop Number
com.sun.org.apache.xml.internal.serializer.WriterChain#write(int)->void:::This method forces us to over-ride the method defined in java.io.Writer
com.sun.org.apache.xml.internal.serializer.WriterChain#write(char[])->void:::This method forces us to over-ride the method defined in java.io.Writer
com.sun.org.apache.xml.internal.serializer.WriterChain#write(char[], int, int)->void:::This method forces us to over-ride the method defined in java.io.Writer
com.sun.org.apache.xml.internal.serializer.WriterChain#write(String)->void:::This method forces us to over-ride the method defined in java.io.Writer
com.sun.org.apache.xml.internal.serializer.WriterChain#write(String, int, int)->void:::This method forces us to over-ride the method defined in java.io.Writer
com.sun.org.apache.xml.internal.serializer.WriterChain#flush()->void:::This method forces us to over-ride the method defined in java.io.Writer
com.sun.org.apache.xml.internal.serializer.WriterChain#close()->void:::This method forces us to over-ride the method defined in java.io.Writer
com.sun.org.apache.xml.internal.serializer.WriterChain#getWriter()->java.io.Writer:::If this method returns null, getOutputStream() must return non-null
com.sun.org.apache.xml.internal.serializer.WriterChain#getOutputStream()->java.io.OutputStream:::If this method returns null, getWriter() must return non-null
com.sun.org.apache.xml.internal.serializer.WriterToASCI#write(char[], int, int)->void:::Write a portion of an array of characters.
com.sun.org.apache.xml.internal.serializer.WriterToASCI#write(int)->void:::Write a single character
com.sun.org.apache.xml.internal.serializer.WriterToASCI#write(String)->void:::Write a string.
com.sun.org.apache.xml.internal.serializer.WriterToASCI#flush()->void:::Flush the stream
com.sun.org.apache.xml.internal.serializer.WriterToASCI#close()->void:::Close the stream, flushing it first
com.sun.org.apache.xml.internal.serializer.WriterToASCI#getOutputStream()->OutputStream:::Get the output stream where the events will be serialized to.
com.sun.org.apache.xml.internal.serializer.WriterToASCI#getWriter()->Writer:::Get the writer that this writer directly chains to.
com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered#write(int)->void:::Write a single character
com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered#write(char[], int, int)->void:::Write a portion of an array of characters.
com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered#write(String)->void:::Write a string.
com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered#flushBuffer()->void:::Flush the internal buffer
com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered#flush()->void:::Flush the stream
com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered#close()->void:::Close the stream, flushing it first
com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered#getOutputStream()->OutputStream:::Get the output stream where the events will be serialized to.
com.sun.org.apache.xml.internal.serializer.WriterToUTF8Buffered#getWriter()->Writer::: writer to f8 buffered get writer
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getDoctypePublic()->String:::Returns the previously set value of the value to be used as the public identifier in the document type declaration (DTD).
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getDoctypeSystem()->String:::Returns the previously set value of the value to be used as the system identifier in the document type declaration (DTD).
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getEncoding()->String::: output attributes get encoding
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getIndent()->boolean::: output attributes get indent
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getIndentAmount()->int::: output attributes get indent amount
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getMediaType()->String::: output attributes get media type
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getOmitXMLDeclaration()->boolean::: output attributes get omit declaration
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getStandalone()->String::: output attributes get standalone
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getVersion()->String::: output attributes get version
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setCdataSectionElements(List)->void:::Sets the value coming from the xsl:output cdata-section-elements stylesheet property
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setDoctype(String, String)->void:::Set the value coming from the xsl:output doctype-public and doctype-system stylesheet properties
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setDoctypePublic(String)->void:::Set the value coming from the xsl:output doctype-public stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setDoctypeSystem(String)->void:::Set the value coming from the xsl:output doctype-system stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setEncoding(String)->void:::Sets the character encoding coming from the xsl:output encoding stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setIndent(boolean)->void:::Sets the value coming from the xsl:output indent stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setMediaType(String)->void:::Sets the value coming from the xsl:output media-type stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setOmitXMLDeclaration(boolean)->void:::Sets the value coming from the xsl:output omit-xml-declaration stylesheet attribute
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setStandalone(String)->void:::Sets the value coming from the xsl:output standalone stylesheet attribute.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setVersion(String)->void:::Sets the value coming from the xsl:output version attribute.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getOutputProperty(String)->String:::Get the value for a property that affects seraialization, if a property was set return that value, otherwise return the default value, otherwise return null.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#getOutputPropertyDefault(String)->String:::Get the default value for a property that affects seraialization, or null if there is none
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setOutputProperty(String, String)->void:::Set the non-default value for a property that affects seraialization.
com.sun.org.apache.xml.internal.serializer.XSLOutputAttributes#setOutputPropertyDefault(String, String)->void:::Set the default value for a property that affects seraialization.
