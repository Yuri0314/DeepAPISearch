sun.net.util.IPAddressUtil#textToNumericFormatV4(String)->byte[]::: address util text to numeric format v4
sun.net.util.IPAddressUtil#textToNumericFormatV6(String)->byte[]::: address util text to numeric format v6
sun.net.util.IPAddressUtil#isIPv4LiteralAddress(String)->boolean::: address util is pv4 literal address
sun.net.util.IPAddressUtil#isIPv6LiteralAddress(String)->boolean::: address util is pv6 literal address
sun.net.util.IPAddressUtil#convertFromIPv4MappedAddress(byte[])->byte[]::: address util convert from pv4 mapped address
sun.net.util.IPAddressUtil#match(char, long, long)->boolean::: address util match
sun.net.util.IPAddressUtil#scan(String, long, long)->int::: address util scan
sun.net.util.IPAddressUtil#scan(String, long, long, char[])->int::: address util scan
sun.net.util.IPAddressUtil#checkAuthority(URL)->String::: address util check authority
sun.net.util.IPAddressUtil#checkExternalForm(URL)->String::: address util check external form
sun.net.util.IPAddressUtil#checkHostString(String)->String::: address util check host string
sun.net.util.SocketExceptions#of(IOException, InetSocketAddress)->IOException:::Utility which takes an exception and returns either the same exception or a new exception of the same type with the same stack trace and detail message enhanced with addressing information from the given InetSocketAddress
sun.net.util.URLUtil#urlNoFragString(URL)->String:::Returns a string form of the url suitable for use as a key in HashMap/Sets
sun.net.util.URLUtil#getConnectPermission(URL)->Permission::: util get connect permission
