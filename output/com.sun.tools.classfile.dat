com.sun.tools.classfile.AccessFlags#ignore(int)->AccessFlags::: access flags ignore
com.sun.tools.classfile.AccessFlags#is(int)->boolean::: access flags is
com.sun.tools.classfile.AccessFlags#byteLength()->int::: access flags byte length
com.sun.tools.classfile.AccessFlags#getClassModifiers()->Set::: access flags get class modifiers
com.sun.tools.classfile.AccessFlags#getClassFlags()->Set::: access flags get class flags
com.sun.tools.classfile.AccessFlags#getInnerClassModifiers()->Set::: access flags get inner class modifiers
com.sun.tools.classfile.AccessFlags#getInnerClassFlags()->Set::: access flags get inner class flags
com.sun.tools.classfile.AccessFlags#getFieldModifiers()->Set::: access flags get field modifiers
com.sun.tools.classfile.AccessFlags#getFieldFlags()->Set::: access flags get field flags
com.sun.tools.classfile.AccessFlags#getMethodModifiers()->Set::: access flags get method modifiers
com.sun.tools.classfile.AccessFlags#getMethodFlags()->Set::: access flags get method flags
com.sun.tools.classfile.Annotation#length()->int::: annotation length
com.sun.tools.classfile.Annotation.element_value#read(ClassReader)->element_value:::element_value read
com.sun.tools.classfile.Annotation.element_value#length()->int:::element_value length
com.sun.tools.classfile.Annotation.element_value#accept(Visitor, P)->R:::element_value accept
com.sun.tools.classfile.Annotation.element_value.Visitor#visitPrimitive(Primitive_element_value, P)->R::: visitor visit primitive
com.sun.tools.classfile.Annotation.element_value.Visitor#visitEnum(Enum_element_value, P)->R::: visitor visit enum
com.sun.tools.classfile.Annotation.element_value.Visitor#visitClass(Class_element_value, P)->R::: visitor visit class
com.sun.tools.classfile.Annotation.element_value.Visitor#visitAnnotation(Annotation_element_value, P)->R::: visitor visit annotation
com.sun.tools.classfile.Annotation.element_value.Visitor#visitArray(Array_element_value, P)->R::: visitor visit array
com.sun.tools.classfile.Annotation.Primitive_element_value#length()->int::: primitive_element_value length
com.sun.tools.classfile.Annotation.Primitive_element_value#accept(Visitor, P)->R::: primitive_element_value accept
com.sun.tools.classfile.Annotation.Enum_element_value#length()->int::: enum_element_value length
com.sun.tools.classfile.Annotation.Enum_element_value#accept(Visitor, P)->R::: enum_element_value accept
com.sun.tools.classfile.Annotation.Class_element_value#length()->int::: class_element_value length
com.sun.tools.classfile.Annotation.Class_element_value#accept(Visitor, P)->R::: class_element_value accept
com.sun.tools.classfile.Annotation.Annotation_element_value#length()->int::: annotation_element_value length
com.sun.tools.classfile.Annotation.Annotation_element_value#accept(Visitor, P)->R::: annotation_element_value accept
com.sun.tools.classfile.Annotation.Array_element_value#length()->int::: array_element_value length
com.sun.tools.classfile.Annotation.Array_element_value#accept(Visitor, P)->R::: array_element_value accept
com.sun.tools.classfile.Annotation.element_value_pair#length()->int:::element_value_pair length
com.sun.tools.classfile.AnnotationDefault_attribute#accept(Visitor, D)->R::: annotation default_attribute accept
com.sun.tools.classfile.Attribute.Factory#createAttribute(ClassReader, int, byte[])->Attribute::: factory create attribute
com.sun.tools.classfile.Attribute.Factory#init()->void::: factory init
com.sun.tools.classfile.Attribute#read(ClassReader)->Attribute::: attribute read
com.sun.tools.classfile.Attribute#getName(ConstantPool)->String::: attribute get name
com.sun.tools.classfile.Attribute#accept(Attribute.Visitor, D)->R::: attribute accept
com.sun.tools.classfile.Attribute#byteLength()->int::: attribute byte length
com.sun.tools.classfile.Attribute.Visitor#visitBootstrapMethods(BootstrapMethods_attribute, P)->R::: visitor visit bootstrap methods
com.sun.tools.classfile.Attribute.Visitor#visitDefault(DefaultAttribute, P)->R::: visitor visit default
com.sun.tools.classfile.Attribute.Visitor#visitAnnotationDefault(AnnotationDefault_attribute, P)->R::: visitor visit annotation default
com.sun.tools.classfile.Attribute.Visitor#visitCharacterRangeTable(CharacterRangeTable_attribute, P)->R::: visitor visit character range table
com.sun.tools.classfile.Attribute.Visitor#visitCode(Code_attribute, P)->R::: visitor visit code
com.sun.tools.classfile.Attribute.Visitor#visitCompilationID(CompilationID_attribute, P)->R::: visitor visit compilation d
com.sun.tools.classfile.Attribute.Visitor#visitConstantValue(ConstantValue_attribute, P)->R::: visitor visit constant value
com.sun.tools.classfile.Attribute.Visitor#visitDeprecated(Deprecated_attribute, P)->R::: visitor visit deprecated
com.sun.tools.classfile.Attribute.Visitor#visitEnclosingMethod(EnclosingMethod_attribute, P)->R::: visitor visit enclosing method
com.sun.tools.classfile.Attribute.Visitor#visitExceptions(Exceptions_attribute, P)->R::: visitor visit exceptions
com.sun.tools.classfile.Attribute.Visitor#visitInnerClasses(InnerClasses_attribute, P)->R::: visitor visit inner classes
com.sun.tools.classfile.Attribute.Visitor#visitLineNumberTable(LineNumberTable_attribute, P)->R::: visitor visit line number table
com.sun.tools.classfile.Attribute.Visitor#visitLocalVariableTable(LocalVariableTable_attribute, P)->R::: visitor visit local variable table
com.sun.tools.classfile.Attribute.Visitor#visitLocalVariableTypeTable(LocalVariableTypeTable_attribute, P)->R::: visitor visit local variable type table
com.sun.tools.classfile.Attribute.Visitor#visitMethodParameters(MethodParameters_attribute, P)->R::: visitor visit method parameters
com.sun.tools.classfile.Attribute.Visitor#visitModule(Module_attribute, P)->R::: visitor visit module
com.sun.tools.classfile.Attribute.Visitor#visitModuleHashes(ModuleHashes_attribute, P)->R::: visitor visit module hashes
com.sun.tools.classfile.Attribute.Visitor#visitModuleMainClass(ModuleMainClass_attribute, P)->R::: visitor visit module main class
com.sun.tools.classfile.Attribute.Visitor#visitModulePackages(ModulePackages_attribute, P)->R::: visitor visit module packages
com.sun.tools.classfile.Attribute.Visitor#visitModuleResolution(ModuleResolution_attribute, P)->R::: visitor visit module resolution
com.sun.tools.classfile.Attribute.Visitor#visitModuleTarget(ModuleTarget_attribute, P)->R::: visitor visit module target
com.sun.tools.classfile.Attribute.Visitor#visitNestHost(NestHost_attribute, P)->R::: visitor visit nest host
com.sun.tools.classfile.Attribute.Visitor#visitNestMembers(NestMembers_attribute, P)->R::: visitor visit nest members
com.sun.tools.classfile.Attribute.Visitor#visitRuntimeVisibleAnnotations(RuntimeVisibleAnnotations_attribute, P)->R::: visitor visit runtime visible annotations
com.sun.tools.classfile.Attribute.Visitor#visitRuntimeInvisibleAnnotations(RuntimeInvisibleAnnotations_attribute, P)->R::: visitor visit runtime invisible annotations
com.sun.tools.classfile.Attribute.Visitor#visitRuntimeVisibleParameterAnnotations(RuntimeVisibleParameterAnnotations_attribute, P)->R::: visitor visit runtime visible parameter annotations
com.sun.tools.classfile.Attribute.Visitor#visitRuntimeInvisibleParameterAnnotations(RuntimeInvisibleParameterAnnotations_attribute, P)->R::: visitor visit runtime invisible parameter annotations
com.sun.tools.classfile.Attribute.Visitor#visitRuntimeVisibleTypeAnnotations(RuntimeVisibleTypeAnnotations_attribute, P)->R::: visitor visit runtime visible type annotations
com.sun.tools.classfile.Attribute.Visitor#visitRuntimeInvisibleTypeAnnotations(RuntimeInvisibleTypeAnnotations_attribute, P)->R::: visitor visit runtime invisible type annotations
com.sun.tools.classfile.Attribute.Visitor#visitSignature(Signature_attribute, P)->R::: visitor visit signature
com.sun.tools.classfile.Attribute.Visitor#visitSourceDebugExtension(SourceDebugExtension_attribute, P)->R::: visitor visit source debug extension
com.sun.tools.classfile.Attribute.Visitor#visitSourceFile(SourceFile_attribute, P)->R::: visitor visit source file
com.sun.tools.classfile.Attribute.Visitor#visitSourceID(SourceID_attribute, P)->R::: visitor visit source d
com.sun.tools.classfile.Attribute.Visitor#visitStackMap(StackMap_attribute, P)->R::: visitor visit stack map
com.sun.tools.classfile.Attribute.Visitor#visitStackMapTable(StackMapTable_attribute, P)->R::: visitor visit stack map table
com.sun.tools.classfile.Attribute.Visitor#visitSynthetic(Synthetic_attribute, P)->R::: visitor visit synthetic
com.sun.tools.classfile.Attributes#iterator()->Iterator::: attributes iterator
com.sun.tools.classfile.Attributes#get(int)->Attribute::: attributes get
com.sun.tools.classfile.Attributes#get(String)->Attribute::: attributes get
com.sun.tools.classfile.Attributes#getIndex(ConstantPool, String)->int::: attributes get index
com.sun.tools.classfile.Attributes#size()->int::: attributes size
com.sun.tools.classfile.Attributes#byteLength()->int::: attributes byte length
com.sun.tools.classfile.BootstrapMethods_attribute#length(BootstrapMethodSpecifier[])->int::: bootstrap methods_attribute length
com.sun.tools.classfile.BootstrapMethods_attribute#accept(Visitor, P)->R::: bootstrap methods_attribute accept
com.sun.tools.classfile.BootstrapMethods_attribute.BootstrapMethodSpecifier#length()->int::: bootstrap method specifier length
com.sun.tools.classfile.CharacterRangeTable_attribute#accept(Visitor, D)->R::: character range table_attribute accept
com.sun.tools.classfile.CharacterRangeTable_attribute.Entry#length()->int::: entry length
com.sun.tools.classfile.ClassFile#read(File)->ClassFile::: class file read
com.sun.tools.classfile.ClassFile#read(Path)->ClassFile::: class file read
com.sun.tools.classfile.ClassFile#read(Path, Attribute.Factory)->ClassFile::: class file read
com.sun.tools.classfile.ClassFile#read(File, Attribute.Factory)->ClassFile::: class file read
com.sun.tools.classfile.ClassFile#read(InputStream)->ClassFile::: class file read
com.sun.tools.classfile.ClassFile#read(InputStream, Attribute.Factory)->ClassFile::: class file read
com.sun.tools.classfile.ClassFile#getName()->String::: class file get name
com.sun.tools.classfile.ClassFile#getSuperclassName()->String::: class file get superclass name
com.sun.tools.classfile.ClassFile#getInterfaceName(int)->String::: class file get interface name
com.sun.tools.classfile.ClassFile#getAttribute(String)->Attribute::: class file get attribute
com.sun.tools.classfile.ClassFile#isClass()->boolean::: class file is class
com.sun.tools.classfile.ClassFile#isInterface()->boolean::: class file is interface
com.sun.tools.classfile.ClassFile#byteLength()->int::: class file byte length
com.sun.tools.classfile.ClassReader#getClassFile()->ClassFile::: class reader get class file
com.sun.tools.classfile.ClassReader#getConstantPool()->ConstantPool::: class reader get constant pool
com.sun.tools.classfile.ClassReader#readAttribute()->Attribute::: class reader read attribute
com.sun.tools.classfile.ClassReader#readFully(byte[])->void::: class reader read fully
com.sun.tools.classfile.ClassReader#readUnsignedByte()->int::: class reader read unsigned byte
com.sun.tools.classfile.ClassReader#readUnsignedShort()->int::: class reader read unsigned short
com.sun.tools.classfile.ClassReader#readInt()->int::: class reader read int
com.sun.tools.classfile.ClassReader#readLong()->long::: class reader read long
com.sun.tools.classfile.ClassReader#readFloat()->float::: class reader read float
com.sun.tools.classfile.ClassReader#readDouble()->double::: class reader read double
com.sun.tools.classfile.ClassReader#readUTF()->String::: class reader read f
com.sun.tools.classfile.ClassTranslator#translate(ClassFile, Map)->ClassFile:::Create a new ClassFile from cf, such that for all entries k&nbsp;-\&gt;&nbsp;v in translations, each occurrence of k in cf will be replaced by v
com.sun.tools.classfile.ClassTranslator#translate(ConstantPool, Map)->ConstantPool::: class translator translate
com.sun.tools.classfile.ClassTranslator#translate(ConstantPool.CPInfo, Map)->ConstantPool.CPInfo::: class translator translate
com.sun.tools.classfile.ClassTranslator#translate(Field[], ConstantPool, Map)->Field[]::: class translator translate
com.sun.tools.classfile.ClassTranslator#translate(Field, ConstantPool, Map)->Field::: class translator translate
com.sun.tools.classfile.ClassTranslator#translateMethods(Method[], ConstantPool, Map)->Method[]::: class translator translate methods
com.sun.tools.classfile.ClassTranslator#translate(Method, ConstantPool, Map)->Method::: class translator translate
com.sun.tools.classfile.ClassTranslator#translateAttributes(Attributes, ConstantPool, Map)->Attributes::: class translator translate attributes
com.sun.tools.classfile.ClassTranslator#translate(Attribute, Map)->Attribute::: class translator translate
com.sun.tools.classfile.ClassTranslator#visitClass(CONSTANT_Class_info, Map)->CPInfo::: class translator visit class
com.sun.tools.classfile.ClassTranslator#visitDouble(CONSTANT_Double_info, Map)->CPInfo::: class translator visit double
com.sun.tools.classfile.ClassTranslator#visitFieldref(CONSTANT_Fieldref_info, Map)->CPInfo::: class translator visit fieldref
com.sun.tools.classfile.ClassTranslator#visitFloat(CONSTANT_Float_info, Map)->CPInfo::: class translator visit float
com.sun.tools.classfile.ClassTranslator#visitInteger(CONSTANT_Integer_info, Map)->CPInfo::: class translator visit integer
com.sun.tools.classfile.ClassTranslator#visitInterfaceMethodref(CONSTANT_InterfaceMethodref_info, Map)->CPInfo::: class translator visit interface methodref
com.sun.tools.classfile.ClassTranslator#visitInvokeDynamic(CONSTANT_InvokeDynamic_info, Map)->CPInfo::: class translator visit invoke dynamic
com.sun.tools.classfile.ClassTranslator#visitDynamicConstant(CONSTANT_Dynamic_info, Map)->CPInfo::: class translator visit dynamic constant
com.sun.tools.classfile.ClassTranslator#visitLong(CONSTANT_Long_info, Map)->CPInfo::: class translator visit long
com.sun.tools.classfile.ClassTranslator#visitMethodref(CONSTANT_Methodref_info, Map)->CPInfo::: class translator visit methodref
com.sun.tools.classfile.ClassTranslator#visitMethodHandle(CONSTANT_MethodHandle_info, Map)->CPInfo::: class translator visit method handle
com.sun.tools.classfile.ClassTranslator#visitMethodType(CONSTANT_MethodType_info, Map)->CPInfo::: class translator visit method type
com.sun.tools.classfile.ClassTranslator#visitModule(CONSTANT_Module_info, Map)->CPInfo::: class translator visit module
com.sun.tools.classfile.ClassTranslator#visitNameAndType(CONSTANT_NameAndType_info, Map)->CPInfo::: class translator visit name and type
com.sun.tools.classfile.ClassTranslator#visitPackage(CONSTANT_Package_info, Map)->CPInfo::: class translator visit package
com.sun.tools.classfile.ClassTranslator#visitString(CONSTANT_String_info, Map)->CPInfo::: class translator visit string
com.sun.tools.classfile.ClassTranslator#visitUtf8(CONSTANT_Utf8_info, Map)->CPInfo::: class translator visit utf8
com.sun.tools.classfile.ClassWriter#write(ClassFile, File)->void:::Write a ClassFile data structure to a file.
com.sun.tools.classfile.ClassWriter#write(ClassFile, OutputStream)->void:::Write a ClassFile data structure to a stream.
com.sun.tools.classfile.ClassWriter#write()->void::: class writer write
com.sun.tools.classfile.ClassWriter#writeHeader()->void::: class writer write header
com.sun.tools.classfile.ClassWriter#writeAccessFlags(AccessFlags)->void::: class writer write access flags
com.sun.tools.classfile.ClassWriter#writeAttributes(Attributes)->void::: class writer write attributes
com.sun.tools.classfile.ClassWriter#writeClassInfo()->void::: class writer write class info
com.sun.tools.classfile.ClassWriter#writeDescriptor(Descriptor)->void::: class writer write descriptor
com.sun.tools.classfile.ClassWriter#writeConstantPool()->void::: class writer write constant pool
com.sun.tools.classfile.ClassWriter#writeFields()->void::: class writer write fields
com.sun.tools.classfile.ClassWriter#writeField(Field)->void::: class writer write field
com.sun.tools.classfile.ClassWriter#writeMethods()->void::: class writer write methods
com.sun.tools.classfile.ClassWriter#writeMethod(Method)->void::: class writer write method
com.sun.tools.classfile.ClassWriter.ClassOutputStream#writeByte(int)->void::: class output stream write byte
com.sun.tools.classfile.ClassWriter.ClassOutputStream#writeShort(int)->void::: class output stream write short
com.sun.tools.classfile.ClassWriter.ClassOutputStream#writeInt(int)->void::: class output stream write int
com.sun.tools.classfile.ClassWriter.ClassOutputStream#writeLong(long)->void::: class output stream write long
com.sun.tools.classfile.ClassWriter.ClassOutputStream#writeFloat(float)->void::: class output stream write float
com.sun.tools.classfile.ClassWriter.ClassOutputStream#writeDouble(double)->void::: class output stream write double
com.sun.tools.classfile.ClassWriter.ClassOutputStream#writeUTF(String)->void::: class output stream write f
com.sun.tools.classfile.ClassWriter.ClassOutputStream#writeTo(ClassOutputStream)->void::: class output stream write to
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#write(CPInfo, ClassOutputStream)->int::: constant pool writer write
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitClass(CONSTANT_Class_info, ClassOutputStream)->Integer::: constant pool writer visit class
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitDouble(CONSTANT_Double_info, ClassOutputStream)->Integer::: constant pool writer visit double
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitFieldref(CONSTANT_Fieldref_info, ClassOutputStream)->Integer::: constant pool writer visit fieldref
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitFloat(CONSTANT_Float_info, ClassOutputStream)->Integer::: constant pool writer visit float
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitInteger(CONSTANT_Integer_info, ClassOutputStream)->Integer::: constant pool writer visit integer
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitInterfaceMethodref(CONSTANT_InterfaceMethodref_info, ClassOutputStream)->Integer::: constant pool writer visit interface methodref
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitInvokeDynamic(CONSTANT_InvokeDynamic_info, ClassOutputStream)->Integer::: constant pool writer visit invoke dynamic
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitDynamicConstant(CONSTANT_Dynamic_info, ClassOutputStream)->Integer::: constant pool writer visit dynamic constant
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitLong(CONSTANT_Long_info, ClassOutputStream)->Integer::: constant pool writer visit long
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitMethodHandle(CONSTANT_MethodHandle_info, ClassOutputStream)->Integer::: constant pool writer visit method handle
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitMethodType(CONSTANT_MethodType_info, ClassOutputStream)->Integer::: constant pool writer visit method type
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitMethodref(CONSTANT_Methodref_info, ClassOutputStream)->Integer::: constant pool writer visit methodref
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitModule(CONSTANT_Module_info, ClassOutputStream)->Integer::: constant pool writer visit module
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitNameAndType(CONSTANT_NameAndType_info, ClassOutputStream)->Integer::: constant pool writer visit name and type
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitPackage(CONSTANT_Package_info, ClassOutputStream)->Integer::: constant pool writer visit package
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitString(CONSTANT_String_info, ClassOutputStream)->Integer::: constant pool writer visit string
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#visitUtf8(CONSTANT_Utf8_info, ClassOutputStream)->Integer::: constant pool writer visit utf8
com.sun.tools.classfile.ClassWriter.ConstantPoolWriter#writeRef(CPRefInfo, ClassOutputStream)->Integer::: constant pool writer write ref
com.sun.tools.classfile.ClassWriter.AttributeWriter#write(Attributes, ClassOutputStream)->void::: attribute writer write
com.sun.tools.classfile.ClassWriter.AttributeWriter#write(Attribute, ClassOutputStream)->void::: attribute writer write
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitDefault(DefaultAttribute, ClassOutputStream)->Void::: attribute writer visit default
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitAnnotationDefault(AnnotationDefault_attribute, ClassOutputStream)->Void::: attribute writer visit annotation default
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitBootstrapMethods(BootstrapMethods_attribute, ClassOutputStream)->Void::: attribute writer visit bootstrap methods
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitCharacterRangeTable(CharacterRangeTable_attribute, ClassOutputStream)->Void::: attribute writer visit character range table
com.sun.tools.classfile.ClassWriter.AttributeWriter#writeCharacterRangeTableEntry(CharacterRangeTable_attribute.Entry, ClassOutputStream)->void::: attribute writer write character range table entry
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitCode(Code_attribute, ClassOutputStream)->Void::: attribute writer visit code
com.sun.tools.classfile.ClassWriter.AttributeWriter#writeExceptionTableEntry(Code_attribute.Exception_data, ClassOutputStream)->void::: attribute writer write exception table entry
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitCompilationID(CompilationID_attribute, ClassOutputStream)->Void::: attribute writer visit compilation d
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitConstantValue(ConstantValue_attribute, ClassOutputStream)->Void::: attribute writer visit constant value
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitDeprecated(Deprecated_attribute, ClassOutputStream)->Void::: attribute writer visit deprecated
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitEnclosingMethod(EnclosingMethod_attribute, ClassOutputStream)->Void::: attribute writer visit enclosing method
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitExceptions(Exceptions_attribute, ClassOutputStream)->Void::: attribute writer visit exceptions
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitInnerClasses(InnerClasses_attribute, ClassOutputStream)->Void::: attribute writer visit inner classes
com.sun.tools.classfile.ClassWriter.AttributeWriter#writeInnerClassesInfo(InnerClasses_attribute.Info, ClassOutputStream)->void::: attribute writer write inner classes info
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitLineNumberTable(LineNumberTable_attribute, ClassOutputStream)->Void::: attribute writer visit line number table
com.sun.tools.classfile.ClassWriter.AttributeWriter#writeLineNumberTableEntry(LineNumberTable_attribute.Entry, ClassOutputStream)->void::: attribute writer write line number table entry
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitLocalVariableTable(LocalVariableTable_attribute, ClassOutputStream)->Void::: attribute writer visit local variable table
com.sun.tools.classfile.ClassWriter.AttributeWriter#writeLocalVariableTableEntry(LocalVariableTable_attribute.Entry, ClassOutputStream)->void::: attribute writer write local variable table entry
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitLocalVariableTypeTable(LocalVariableTypeTable_attribute, ClassOutputStream)->Void::: attribute writer visit local variable type table
com.sun.tools.classfile.ClassWriter.AttributeWriter#writeLocalVariableTypeTableEntry(LocalVariableTypeTable_attribute.Entry, ClassOutputStream)->void::: attribute writer write local variable type table entry
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitNestHost(NestHost_attribute, ClassOutputStream)->Void::: attribute writer visit nest host
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitMethodParameters(MethodParameters_attribute, ClassOutputStream)->Void::: attribute writer visit method parameters
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitModule(Module_attribute, ClassOutputStream)->Void::: attribute writer visit module
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitModuleHashes(ModuleHashes_attribute, ClassOutputStream)->Void::: attribute writer visit module hashes
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitModuleMainClass(ModuleMainClass_attribute, ClassOutputStream)->Void::: attribute writer visit module main class
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitModulePackages(ModulePackages_attribute, ClassOutputStream)->Void::: attribute writer visit module packages
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitModuleResolution(ModuleResolution_attribute, ClassOutputStream)->Void::: attribute writer visit module resolution
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitModuleTarget(ModuleTarget_attribute, ClassOutputStream)->Void::: attribute writer visit module target
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitNestMembers(NestMembers_attribute, ClassOutputStream)->Void::: attribute writer visit nest members
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitRuntimeInvisibleAnnotations(RuntimeInvisibleAnnotations_attribute, ClassOutputStream)->Void::: attribute writer visit runtime invisible annotations
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitRuntimeInvisibleParameterAnnotations(RuntimeInvisibleParameterAnnotations_attribute, ClassOutputStream)->Void::: attribute writer visit runtime invisible parameter annotations
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitRuntimeInvisibleTypeAnnotations(RuntimeInvisibleTypeAnnotations_attribute, ClassOutputStream)->Void::: attribute writer visit runtime invisible type annotations
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitRuntimeVisibleAnnotations(RuntimeVisibleAnnotations_attribute, ClassOutputStream)->Void::: attribute writer visit runtime visible annotations
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitRuntimeVisibleParameterAnnotations(RuntimeVisibleParameterAnnotations_attribute, ClassOutputStream)->Void::: attribute writer visit runtime visible parameter annotations
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitRuntimeVisibleTypeAnnotations(RuntimeVisibleTypeAnnotations_attribute, ClassOutputStream)->Void::: attribute writer visit runtime visible type annotations
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitSignature(Signature_attribute, ClassOutputStream)->Void::: attribute writer visit signature
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitSourceDebugExtension(SourceDebugExtension_attribute, ClassOutputStream)->Void::: attribute writer visit source debug extension
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitSourceFile(SourceFile_attribute, ClassOutputStream)->Void::: attribute writer visit source file
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitSourceID(SourceID_attribute, ClassOutputStream)->Void::: attribute writer visit source d
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitStackMap(StackMap_attribute, ClassOutputStream)->Void::: attribute writer visit stack map
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitStackMapTable(StackMapTable_attribute, ClassOutputStream)->Void::: attribute writer visit stack map table
com.sun.tools.classfile.ClassWriter.AttributeWriter#visitSynthetic(Synthetic_attribute, ClassOutputStream)->Void::: attribute writer visit synthetic
com.sun.tools.classfile.ClassWriter.AttributeWriter#writeAccessFlags(AccessFlags, ClassOutputStream)->void::: attribute writer write access flags
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#write(stack_map_frame, ClassOutputStream)->void::: stack map table writer write
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#visit_same_frame(same_frame, ClassOutputStream)->Void::: stack map table writer visit_same_frame
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#visit_same_locals_1_stack_item_frame(same_locals_1_stack_item_frame, ClassOutputStream)->Void::: stack map table writer visit_same_locals_1_stack_item_frame
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#visit_same_locals_1_stack_item_frame_extended(same_locals_1_stack_item_frame_extended, ClassOutputStream)->Void::: stack map table writer visit_same_locals_1_stack_item_frame_extended
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#visit_chop_frame(chop_frame, ClassOutputStream)->Void::: stack map table writer visit_chop_frame
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#visit_same_frame_extended(same_frame_extended, ClassOutputStream)->Void::: stack map table writer visit_same_frame_extended
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#visit_append_frame(append_frame, ClassOutputStream)->Void::: stack map table writer visit_append_frame
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#visit_full_frame(full_frame, ClassOutputStream)->Void::: stack map table writer visit_full_frame
com.sun.tools.classfile.ClassWriter.StackMapTableWriter#writeVerificationTypeInfo(verification_type_info, ClassOutputStream)->void::: stack map table writer write verification type info
com.sun.tools.classfile.ClassWriter.AnnotationWriter#write(Annotation[], ClassOutputStream)->void::: annotation writer write
com.sun.tools.classfile.ClassWriter.AnnotationWriter#write(TypeAnnotation[], ClassOutputStream)->void::: annotation writer write
com.sun.tools.classfile.ClassWriter.AnnotationWriter#write(Annotation, ClassOutputStream)->void::: annotation writer write
com.sun.tools.classfile.ClassWriter.AnnotationWriter#write(TypeAnnotation, ClassOutputStream)->void::: annotation writer write
com.sun.tools.classfile.ClassWriter.AnnotationWriter#write(element_value_pair, ClassOutputStream)->void::: annotation writer write
com.sun.tools.classfile.ClassWriter.AnnotationWriter#write(element_value, ClassOutputStream)->void::: annotation writer write
com.sun.tools.classfile.ClassWriter.AnnotationWriter#visitPrimitive(Primitive_element_value, ClassOutputStream)->Void::: annotation writer visit primitive
com.sun.tools.classfile.ClassWriter.AnnotationWriter#visitEnum(Enum_element_value, ClassOutputStream)->Void::: annotation writer visit enum
com.sun.tools.classfile.ClassWriter.AnnotationWriter#visitClass(Class_element_value, ClassOutputStream)->Void::: annotation writer visit class
com.sun.tools.classfile.ClassWriter.AnnotationWriter#visitAnnotation(Annotation_element_value, ClassOutputStream)->Void::: annotation writer visit annotation
com.sun.tools.classfile.ClassWriter.AnnotationWriter#visitArray(Array_element_value, ClassOutputStream)->Void::: annotation writer visit array
com.sun.tools.classfile.Code_attribute.InvalidIndex#getMessage()->String::: invalid index get message
com.sun.tools.classfile.Code_attribute#getByte(int)->int::: code_attribute get byte
com.sun.tools.classfile.Code_attribute#getUnsignedByte(int)->int::: code_attribute get unsigned byte
com.sun.tools.classfile.Code_attribute#getShort(int)->int::: code_attribute get short
com.sun.tools.classfile.Code_attribute#getUnsignedShort(int)->int::: code_attribute get unsigned short
com.sun.tools.classfile.Code_attribute#getInt(int)->int::: code_attribute get int
com.sun.tools.classfile.Code_attribute#accept(Visitor, D)->R::: code_attribute accept
com.sun.tools.classfile.Code_attribute#getInstructions()->Iterable::: code_attribute get instructions
com.sun.tools.classfile.CompilationID_attribute#getCompilationID(ConstantPool)->String::: compilation d_attribute get compilation d
com.sun.tools.classfile.CompilationID_attribute#accept(Visitor, D)->R::: compilation d_attribute accept
com.sun.tools.classfile.ConstantPool.InvalidIndex#getMessage()->String::: invalid index get message
com.sun.tools.classfile.ConstantPool.UnexpectedEntry#getMessage()->String::: unexpected entry get message
com.sun.tools.classfile.ConstantPool.InvalidEntry#getMessage()->String::: invalid entry get message
com.sun.tools.classfile.ConstantPool.EntryNotFound#getMessage()->String::: entry not found get message
com.sun.tools.classfile.ConstantPool#size()->int::: constant pool size
com.sun.tools.classfile.ConstantPool#byteLength()->int::: constant pool byte length
com.sun.tools.classfile.ConstantPool#get(int)->CPInfo::: constant pool get
com.sun.tools.classfile.ConstantPool#getUTF8Info(int)->CONSTANT_Utf8_info::: constant pool get f8 info
com.sun.tools.classfile.ConstantPool#getClassInfo(int)->CONSTANT_Class_info::: constant pool get class info
com.sun.tools.classfile.ConstantPool#getModuleInfo(int)->CONSTANT_Module_info::: constant pool get module info
com.sun.tools.classfile.ConstantPool#getNameAndTypeInfo(int)->CONSTANT_NameAndType_info::: constant pool get name and type info
com.sun.tools.classfile.ConstantPool#getPackageInfo(int)->CONSTANT_Package_info::: constant pool get package info
com.sun.tools.classfile.ConstantPool#getUTF8Value(int)->String::: constant pool get f8 value
com.sun.tools.classfile.ConstantPool#getUTF8Index(String)->int::: constant pool get f8 index
com.sun.tools.classfile.ConstantPool#entries()->Iterable::: constant pool entries
com.sun.tools.classfile.ConstantPool.Visitor#visitClass(CONSTANT_Class_info, P)->R::: visitor visit class
com.sun.tools.classfile.ConstantPool.Visitor#visitDouble(CONSTANT_Double_info, P)->R::: visitor visit double
com.sun.tools.classfile.ConstantPool.Visitor#visitFieldref(CONSTANT_Fieldref_info, P)->R::: visitor visit fieldref
com.sun.tools.classfile.ConstantPool.Visitor#visitFloat(CONSTANT_Float_info, P)->R::: visitor visit float
com.sun.tools.classfile.ConstantPool.Visitor#visitInteger(CONSTANT_Integer_info, P)->R::: visitor visit integer
com.sun.tools.classfile.ConstantPool.Visitor#visitInterfaceMethodref(CONSTANT_InterfaceMethodref_info, P)->R::: visitor visit interface methodref
com.sun.tools.classfile.ConstantPool.Visitor#visitInvokeDynamic(CONSTANT_InvokeDynamic_info, P)->R::: visitor visit invoke dynamic
com.sun.tools.classfile.ConstantPool.Visitor#visitDynamicConstant(CONSTANT_Dynamic_info, P)->R::: visitor visit dynamic constant
com.sun.tools.classfile.ConstantPool.Visitor#visitLong(CONSTANT_Long_info, P)->R::: visitor visit long
com.sun.tools.classfile.ConstantPool.Visitor#visitMethodref(CONSTANT_Methodref_info, P)->R::: visitor visit methodref
com.sun.tools.classfile.ConstantPool.Visitor#visitMethodHandle(CONSTANT_MethodHandle_info, P)->R::: visitor visit method handle
com.sun.tools.classfile.ConstantPool.Visitor#visitMethodType(CONSTANT_MethodType_info, P)->R::: visitor visit method type
com.sun.tools.classfile.ConstantPool.Visitor#visitModule(CONSTANT_Module_info, P)->R::: visitor visit module
com.sun.tools.classfile.ConstantPool.Visitor#visitNameAndType(CONSTANT_NameAndType_info, P)->R::: visitor visit name and type
com.sun.tools.classfile.ConstantPool.Visitor#visitPackage(CONSTANT_Package_info, P)->R::: visitor visit package
com.sun.tools.classfile.ConstantPool.Visitor#visitString(CONSTANT_String_info, P)->R::: visitor visit string
com.sun.tools.classfile.ConstantPool.Visitor#visitUtf8(CONSTANT_Utf8_info, P)->R::: visitor visit utf8
com.sun.tools.classfile.ConstantPool.CPInfo#getTag()->int::: info get tag
com.sun.tools.classfile.ConstantPool.CPInfo#size()->int:::The number of slots in the constant pool used by this entry
com.sun.tools.classfile.ConstantPool.CPInfo#byteLength()->int::: info byte length
com.sun.tools.classfile.ConstantPool.CPInfo#accept(Visitor, D)->R::: info accept
com.sun.tools.classfile.ConstantPool.CPRefInfo#getTag()->int::: ref info get tag
com.sun.tools.classfile.ConstantPool.CPRefInfo#byteLength()->int::: ref info byte length
com.sun.tools.classfile.ConstantPool.CPRefInfo#getClassInfo()->CONSTANT_Class_info::: ref info get class info
com.sun.tools.classfile.ConstantPool.CPRefInfo#getClassName()->String::: ref info get class name
com.sun.tools.classfile.ConstantPool.CPRefInfo#getNameAndTypeInfo()->CONSTANT_NameAndType_info::: ref info get name and type info
com.sun.tools.classfile.ConstantPool.CONSTANT_Class_info#getTag()->int::: t_ class_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Class_info#byteLength()->int::: t_ class_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Class_info#getName()->String:::Get the raw value of the class referenced by this constant pool entry
com.sun.tools.classfile.ConstantPool.CONSTANT_Class_info#getBaseName()->String:::If this constant pool entry identifies either a class or interface type, or a possibly multi-dimensional array of a class of interface type, return the name of the class or interface in internal form
com.sun.tools.classfile.ConstantPool.CONSTANT_Class_info#getDimensionCount()->int::: t_ class_info get dimension count
com.sun.tools.classfile.ConstantPool.CONSTANT_Class_info#toString()->String::: t_ class_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Class_info#accept(Visitor, D)->R::: t_ class_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_Double_info#getTag()->int::: t_ double_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Double_info#byteLength()->int::: t_ double_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Double_info#size()->int::: t_ double_info size
com.sun.tools.classfile.ConstantPool.CONSTANT_Double_info#toString()->String::: t_ double_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Double_info#accept(Visitor, D)->R::: t_ double_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_Fieldref_info#toString()->String::: t_ fieldref_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Fieldref_info#accept(Visitor, D)->R::: t_ fieldref_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_Float_info#getTag()->int::: t_ float_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Float_info#byteLength()->int::: t_ float_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Float_info#toString()->String::: t_ float_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Float_info#accept(Visitor, D)->R::: t_ float_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_Integer_info#getTag()->int::: t_ integer_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Integer_info#byteLength()->int::: t_ integer_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Integer_info#toString()->String::: t_ integer_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Integer_info#accept(Visitor, D)->R::: t_ integer_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_InterfaceMethodref_info#toString()->String::: t_ interface methodref_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_InterfaceMethodref_info#accept(Visitor, D)->R::: t_ interface methodref_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_InvokeDynamic_info#getTag()->int::: t_ invoke dynamic_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_InvokeDynamic_info#byteLength()->int::: t_ invoke dynamic_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_InvokeDynamic_info#toString()->String::: t_ invoke dynamic_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_InvokeDynamic_info#accept(Visitor, D)->R::: t_ invoke dynamic_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_InvokeDynamic_info#getNameAndTypeInfo()->CONSTANT_NameAndType_info::: t_ invoke dynamic_info get name and type info
com.sun.tools.classfile.ConstantPool.CONSTANT_Long_info#getTag()->int::: t_ long_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Long_info#size()->int::: t_ long_info size
com.sun.tools.classfile.ConstantPool.CONSTANT_Long_info#byteLength()->int::: t_ long_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Long_info#toString()->String::: t_ long_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Long_info#accept(Visitor, D)->R::: t_ long_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodHandle_info#getTag()->int::: t_ method handle_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodHandle_info#byteLength()->int::: t_ method handle_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodHandle_info#toString()->String::: t_ method handle_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodHandle_info#accept(Visitor, D)->R::: t_ method handle_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodHandle_info#getCPRefInfo()->CPRefInfo::: t_ method handle_info get ref info
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodType_info#getTag()->int::: t_ method type_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodType_info#byteLength()->int::: t_ method type_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodType_info#toString()->String::: t_ method type_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodType_info#accept(Visitor, D)->R::: t_ method type_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_MethodType_info#getType()->String::: t_ method type_info get type
com.sun.tools.classfile.ConstantPool.CONSTANT_Methodref_info#toString()->String::: t_ methodref_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Methodref_info#accept(Visitor, D)->R::: t_ methodref_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_Module_info#getTag()->int::: t_ module_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Module_info#byteLength()->int::: t_ module_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Module_info#getName()->String:::Get the raw value of the module name referenced by this constant pool entry
com.sun.tools.classfile.ConstantPool.CONSTANT_Module_info#toString()->String::: t_ module_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Module_info#accept(Visitor, D)->R::: t_ module_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_NameAndType_info#getTag()->int::: t_ name and type_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_NameAndType_info#byteLength()->int::: t_ name and type_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_NameAndType_info#getName()->String::: t_ name and type_info get name
com.sun.tools.classfile.ConstantPool.CONSTANT_NameAndType_info#getType()->String::: t_ name and type_info get type
com.sun.tools.classfile.ConstantPool.CONSTANT_NameAndType_info#accept(Visitor, D)->R::: t_ name and type_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_NameAndType_info#toString()->String::: t_ name and type_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Dynamic_info#getTag()->int::: t_ dynamic_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Dynamic_info#byteLength()->int::: t_ dynamic_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Dynamic_info#toString()->String::: t_ dynamic_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Dynamic_info#accept(Visitor, D)->R::: t_ dynamic_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_Dynamic_info#getNameAndTypeInfo()->CONSTANT_NameAndType_info::: t_ dynamic_info get name and type info
com.sun.tools.classfile.ConstantPool.CONSTANT_Package_info#getTag()->int::: t_ package_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Package_info#byteLength()->int::: t_ package_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Package_info#getName()->String:::Get the raw value of the package name referenced by this constant pool entry
com.sun.tools.classfile.ConstantPool.CONSTANT_Package_info#toString()->String::: t_ package_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Package_info#accept(Visitor, D)->R::: t_ package_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_String_info#getTag()->int::: t_ string_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_String_info#byteLength()->int::: t_ string_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_String_info#getString()->String::: t_ string_info get string
com.sun.tools.classfile.ConstantPool.CONSTANT_String_info#accept(Visitor, D)->R::: t_ string_info accept
com.sun.tools.classfile.ConstantPool.CONSTANT_String_info#toString()->String::: t_ string_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info#getTag()->int::: t_ utf8_info get tag
com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info#byteLength()->int::: t_ utf8_info byte length
com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info#toString()->String::: t_ utf8_info to string
com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info#isPrintableAscii(String)->boolean::: t_ utf8_info is printable ascii
com.sun.tools.classfile.ConstantPool.CONSTANT_Utf8_info#accept(Visitor, D)->R::: t_ utf8_info accept
com.sun.tools.classfile.ConstantValue_attribute#accept(Visitor, D)->R::: constant value_attribute accept
com.sun.tools.classfile.DefaultAttribute#accept(Visitor, P)->R::: default attribute accept
com.sun.tools.classfile.Dependencies.ClassFileReader#getClassFile(String)->ClassFile:::Get the ClassFile object for a specified class.
com.sun.tools.classfile.Dependencies.Recorder#addDependency(Dependency)->void:::Record a dependency that has been found.
com.sun.tools.classfile.Dependencies#getDefaultFinder()->Finder:::Get the  default finder used to locate the dependencies for a class.
com.sun.tools.classfile.Dependencies#getAPIFinder(int)->Finder:::Get a finder used to locate the API dependencies for a class
com.sun.tools.classfile.Dependencies#getClassDependencyFinder()->Finder:::Get a finder to do class dependency analysis.
com.sun.tools.classfile.Dependencies#getFinder()->Finder:::Get the finder used to locate the dependencies for a class.
com.sun.tools.classfile.Dependencies#setFinder(Finder)->void:::Set the finder used to locate the dependencies for a class.
com.sun.tools.classfile.Dependencies#getDefaultFilter()->Filter:::Get the default filter used to determine included when searching the transitive closure of all the dependencies
com.sun.tools.classfile.Dependencies#getRegexFilter(Pattern)->Filter:::Get a filter which uses a regular expression on the target's class name to determine if a dependency is of interest.
com.sun.tools.classfile.Dependencies#getPackageFilter(Set, boolean)->Filter:::Get a filter which checks the package of a target's class name to determine if a dependency is of interest
com.sun.tools.classfile.Dependencies#getFilter()->Filter:::Get the filter used to determine the dependencies included when searching the transitive closure of all the dependencies
com.sun.tools.classfile.Dependencies#setFilter(Filter)->void:::Set the filter used to determine the dependencies included when searching the transitive closure of all the dependencies.
com.sun.tools.classfile.Dependencies#findAllDependencies(ClassFileReader, Set, boolean)->Set:::Find the dependencies of a class, using the current Dependencies#getFinder finder and Dependencies#getFilter filter
com.sun.tools.classfile.Dependencies#findAllDependencies(ClassFileReader, Set, boolean, Recorder)->void:::Find the dependencies of a class, using the current Dependencies#getFinder finder and Dependencies#getFilter filter
com.sun.tools.classfile.Dependencies.SimpleLocation#getName()->String::: simple location get name
com.sun.tools.classfile.Dependencies.SimpleLocation#getClassName()->String::: simple location get class name
com.sun.tools.classfile.Dependencies.SimpleLocation#getPackageName()->String::: simple location get package name
com.sun.tools.classfile.Dependencies.SimpleLocation#equals(Object)->boolean::: simple location equals
com.sun.tools.classfile.Dependencies.SimpleLocation#hashCode()->int::: simple location hash code
com.sun.tools.classfile.Dependencies.SimpleLocation#toString()->String::: simple location to string
com.sun.tools.classfile.Dependencies.SimpleDependency#getOrigin()->Location::: simple dependency get origin
com.sun.tools.classfile.Dependencies.SimpleDependency#getTarget()->Location::: simple dependency get target
com.sun.tools.classfile.Dependencies.SimpleDependency#equals(Object)->boolean::: simple dependency equals
com.sun.tools.classfile.Dependencies.SimpleDependency#hashCode()->int::: simple dependency hash code
com.sun.tools.classfile.Dependencies.SimpleDependency#toString()->String::: simple dependency to string
com.sun.tools.classfile.Dependencies.DefaultFilter#instance()->DefaultFilter::: default filter instance
com.sun.tools.classfile.Dependencies.DefaultFilter#accepts(Dependency)->boolean::: default filter accepts
com.sun.tools.classfile.Dependencies.TargetRegexFilter#accepts(Dependency)->boolean::: target regex filter accepts
com.sun.tools.classfile.Dependencies.TargetPackageFilter#accepts(Dependency)->boolean::: target package filter accepts
com.sun.tools.classfile.Dependencies.ClassDependencyFinder#findDependencies(ClassFile)->Iterable::: class dependency finder find dependencies
com.sun.tools.classfile.Dependencies.APIDependencyFinder#findDependencies(ClassFile)->Iterable::: dependency finder find dependencies
com.sun.tools.classfile.Dependencies.APIDependencyFinder#checkAccess(AccessFlags)->boolean::: dependency finder check access
com.sun.tools.classfile.Dependencies.BasicDependencyFinder#getLocation(String)->Location::: basic dependency finder get location
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#scan(Descriptor, Attributes)->void::: visitor scan
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#scan(CPInfo)->void::: visitor scan
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#scan(Type)->void::: visitor scan
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#scan(Attributes)->void::: visitor scan
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#addClass(int)->void::: visitor add class
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#addClasses(int[])->void::: visitor add classes
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitClass(CONSTANT_Class_info, Void)->Void::: visitor visit class
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitDouble(CONSTANT_Double_info, Void)->Void::: visitor visit double
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitFieldref(CONSTANT_Fieldref_info, Void)->Void::: visitor visit fieldref
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitFloat(CONSTANT_Float_info, Void)->Void::: visitor visit float
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitInteger(CONSTANT_Integer_info, Void)->Void::: visitor visit integer
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitInterfaceMethodref(CONSTANT_InterfaceMethodref_info, Void)->Void::: visitor visit interface methodref
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitInvokeDynamic(CONSTANT_InvokeDynamic_info, Void)->Void::: visitor visit invoke dynamic
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitDynamicConstant(CONSTANT_Dynamic_info, Void)->Void::: visitor visit dynamic constant
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitLong(CONSTANT_Long_info, Void)->Void::: visitor visit long
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitMethodHandle(CONSTANT_MethodHandle_info, Void)->Void::: visitor visit method handle
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitMethodType(CONSTANT_MethodType_info, Void)->Void::: visitor visit method type
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitMethodref(CONSTANT_Methodref_info, Void)->Void::: visitor visit methodref
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitModule(CONSTANT_Module_info, Void)->Void::: visitor visit module
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitNameAndType(CONSTANT_NameAndType_info, Void)->Void::: visitor visit name and type
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitPackage(CONSTANT_Package_info, Void)->Void::: visitor visit package
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitString(CONSTANT_String_info, Void)->Void::: visitor visit string
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitUtf8(CONSTANT_Utf8_info, Void)->Void::: visitor visit utf8
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitSimpleType(SimpleType, Void)->Void::: visitor visit simple type
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitArrayType(ArrayType, Void)->Void::: visitor visit array type
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitMethodType(MethodType, Void)->Void::: visitor visit method type
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitClassSigType(ClassSigType, Void)->Void::: visitor visit class sig type
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitClassType(ClassType, Void)->Void::: visitor visit class type
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitTypeParamType(TypeParamType, Void)->Void::: visitor visit type param type
com.sun.tools.classfile.Dependencies.BasicDependencyFinder.Visitor#visitWildcardType(WildcardType, Void)->Void::: visitor visit wildcard type
com.sun.tools.classfile.Dependency.Filter#accepts(Dependency)->boolean:::Return true if the dependency is of interest.
com.sun.tools.classfile.Dependency.Finder#findDependencies(ClassFile)->Iterable:::Find the immediate dependencies of a given class file.
com.sun.tools.classfile.Dependency.Location#getName()->String:::Get the name of the class containing the location
com.sun.tools.classfile.Dependency.Location#getClassName()->String:::Get the fully-qualified name of the class containing the location.
com.sun.tools.classfile.Dependency.Location#getPackageName()->String:::Get the package name of the class containing the location.
com.sun.tools.classfile.Dependency#getOrigin()->Location:::Get the location that has the dependency.
com.sun.tools.classfile.Dependency#getTarget()->Location:::Get the location that is being depended upon.
com.sun.tools.classfile.Deprecated_attribute#accept(Visitor, D)->R::: deprecated_attribute accept
com.sun.tools.classfile.Descriptor.InvalidDescriptor#getMessage()->String::: invalid descriptor get message
com.sun.tools.classfile.Descriptor#getValue(ConstantPool)->String::: descriptor get value
com.sun.tools.classfile.Descriptor#getParameterCount(ConstantPool)->int::: descriptor get parameter count
com.sun.tools.classfile.Descriptor#getParameterTypes(ConstantPool)->String::: descriptor get parameter types
com.sun.tools.classfile.Descriptor#getReturnType(ConstantPool)->String::: descriptor get return type
com.sun.tools.classfile.Descriptor#getFieldType(ConstantPool)->String::: descriptor get field type
com.sun.tools.classfile.EnclosingMethod_attribute#getClassName(ConstantPool)->String::: enclosing method_attribute get class name
com.sun.tools.classfile.EnclosingMethod_attribute#getMethodName(ConstantPool)->String::: enclosing method_attribute get method name
com.sun.tools.classfile.EnclosingMethod_attribute#accept(Visitor, D)->R::: enclosing method_attribute accept
com.sun.tools.classfile.Exceptions_attribute#getException(int, ConstantPool)->String::: exceptions_attribute get exception
com.sun.tools.classfile.Exceptions_attribute#accept(Visitor, D)->R::: exceptions_attribute accept
com.sun.tools.classfile.Field#byteLength()->int::: field byte length
com.sun.tools.classfile.Field#getName(ConstantPool)->String::: field get name
com.sun.tools.classfile.InnerClasses_attribute#accept(Visitor, D)->R::: inner classes_attribute accept
com.sun.tools.classfile.InnerClasses_attribute.Info#getInnerClassInfo(ConstantPool)->CONSTANT_Class_info::: info get inner class info
com.sun.tools.classfile.InnerClasses_attribute.Info#getOuterClassInfo(ConstantPool)->CONSTANT_Class_info::: info get outer class info
com.sun.tools.classfile.InnerClasses_attribute.Info#getInnerName(ConstantPool)->String::: info get inner name
com.sun.tools.classfile.InnerClasses_attribute.Info#length()->int::: info length
com.sun.tools.classfile.Instruction.KindVisitor#visitNoOperands(Instruction, P)->R:::See Kind#NO_OPERANDS, Kind#WIDE_NO_OPERANDS.
com.sun.tools.classfile.Instruction.KindVisitor#visitArrayType(Instruction, TypeKind, P)->R:::See Kind#ATYPE.
com.sun.tools.classfile.Instruction.KindVisitor#visitBranch(Instruction, int, P)->R:::See Kind#BRANCH, Kind#BRANCH_W.
com.sun.tools.classfile.Instruction.KindVisitor#visitConstantPoolRef(Instruction, int, P)->R:::See Kind#CPREF, Kind#CPREF_W, Kind#WIDE_CPREF_W.
com.sun.tools.classfile.Instruction.KindVisitor#visitConstantPoolRefAndValue(Instruction, int, int, P)->R:::See Kind#CPREF_W_UBYTE, Kind#CPREF_W_UBYTE_ZERO, Kind#WIDE_CPREF_W_SHORT.
com.sun.tools.classfile.Instruction.KindVisitor#visitLocal(Instruction, int, P)->R:::See Kind#LOCAL, Kind#WIDE_LOCAL.
com.sun.tools.classfile.Instruction.KindVisitor#visitLocalAndValue(Instruction, int, int, P)->R:::See Kind#LOCAL_BYTE.
com.sun.tools.classfile.Instruction.KindVisitor#visitLookupSwitch(Instruction, int, int, int[], int[], P)->R:::See Kind#DYNAMIC.
com.sun.tools.classfile.Instruction.KindVisitor#visitTableSwitch(Instruction, int, int, int, int[], P)->R:::See Kind#DYNAMIC.
com.sun.tools.classfile.Instruction.KindVisitor#visitValue(Instruction, int, P)->R:::See Kind#BYTE, Kind#SHORT.
com.sun.tools.classfile.Instruction.KindVisitor#visitUnknown(Instruction, P)->R:::Instruction is unrecognized.
com.sun.tools.classfile.Instruction#getPC()->int:::Get the position of the instruction within the bytecode array.
com.sun.tools.classfile.Instruction#getByte(int)->int:::Get a byte value, relative to the start of this instruction.
com.sun.tools.classfile.Instruction#getUnsignedByte(int)->int:::Get an unsigned byte value, relative to the start of this instruction.
com.sun.tools.classfile.Instruction#getShort(int)->int:::Get a 2-byte value, relative to the start of this instruction.
com.sun.tools.classfile.Instruction#getUnsignedShort(int)->int:::Get a unsigned 2-byte value, relative to the start of this instruction.
com.sun.tools.classfile.Instruction#getInt(int)->int:::Get a 4-byte value, relative to the start of this instruction.
com.sun.tools.classfile.Instruction#getOpcode()->Opcode:::Get the Opcode for this instruction, or null if the instruction is unrecognized.
com.sun.tools.classfile.Instruction#getMnemonic()->String:::Get the mnemonic for this instruction, or a default string if the instruction is unrecognized.
com.sun.tools.classfile.Instruction#length()->int:::Get the length, in bytes, of this instruction, including the opcode and all its operands.
com.sun.tools.classfile.Instruction#getKind()->Kind:::Get the Kind of this instruction.
com.sun.tools.classfile.Instruction#accept(KindVisitor, P)->R:::Invoke a method on the visitor according to the kind of this instruction, passing in the decoded operands for the instruction.
com.sun.tools.classfile.LineNumberTable_attribute#accept(Visitor, D)->R::: line number table_attribute accept
com.sun.tools.classfile.LineNumberTable_attribute.Entry#length()->int::: entry length
com.sun.tools.classfile.LocalVariableTable_attribute#accept(Visitor, D)->R::: local variable table_attribute accept
com.sun.tools.classfile.LocalVariableTable_attribute.Entry#length()->int::: entry length
com.sun.tools.classfile.LocalVariableTypeTable_attribute#accept(Visitor, D)->R::: local variable type table_attribute accept
com.sun.tools.classfile.LocalVariableTypeTable_attribute.Entry#length()->int::: entry length
com.sun.tools.classfile.Method#byteLength()->int::: method byte length
com.sun.tools.classfile.Method#getName(ConstantPool)->String::: method get name
com.sun.tools.classfile.MethodParameters_attribute#accept(Visitor, D)->R::: method parameters_attribute accept
com.sun.tools.classfile.MethodParameters_attribute.Entry#length()->int::: entry length
com.sun.tools.classfile.ModuleHashes_attribute#accept(Visitor, D)->R::: module hashes_attribute accept
com.sun.tools.classfile.ModuleHashes_attribute.Entry#length()->int::: entry length
com.sun.tools.classfile.ModuleMainClass_attribute#getMainClassName(ConstantPool)->String::: module main class_attribute get main class name
com.sun.tools.classfile.ModuleMainClass_attribute#accept(Visitor, D)->R::: module main class_attribute accept
com.sun.tools.classfile.ModulePackages_attribute#getPackage(int, ConstantPool)->String::: module packages_attribute get package
com.sun.tools.classfile.ModulePackages_attribute#accept(Visitor, D)->R::: module packages_attribute accept
com.sun.tools.classfile.ModuleResolution_attribute#accept(Visitor, D)->R::: module resolution_attribute accept
com.sun.tools.classfile.ModuleTarget_attribute#accept(Visitor, D)->R::: module target_attribute accept
com.sun.tools.classfile.Module_attribute#getUses(int, ConstantPool)->String::: module_attribute get uses
com.sun.tools.classfile.Module_attribute#accept(Visitor, D)->R::: module_attribute accept
com.sun.tools.classfile.Module_attribute.RequiresEntry#getRequires(ConstantPool)->String::: requires entry get requires
com.sun.tools.classfile.Module_attribute.ExportsEntry#length()->int::: exports entry length
com.sun.tools.classfile.Module_attribute.OpensEntry#length()->int::: opens entry length
com.sun.tools.classfile.NestHost_attribute#getNestTop(ConstantPool)->CONSTANT_Class_info::: nest host_attribute get nest top
com.sun.tools.classfile.NestHost_attribute#accept(Visitor, D)->R::: nest host_attribute accept
com.sun.tools.classfile.NestMembers_attribute#getChildren(ConstantPool)->CONSTANT_Class_info[]::: nest members_attribute get children
com.sun.tools.classfile.NestMembers_attribute#accept(Visitor, D)->R::: nest members_attribute accept
com.sun.tools.classfile.ReferenceFinder.Filter#accept(ConstantPool, CPRefInfo)->boolean:::Decides if the given CPRefInfo entry should be accepted or filtered.
com.sun.tools.classfile.ReferenceFinder.Visitor#visit(ClassFile, Method, List)->void:::Invoked for a method containing one or more accepted CPRefInfo entries
com.sun.tools.classfile.ReferenceFinder#parse(ClassFile)->boolean:::Parses a given ClassFile and invoke the visitor if there is any reference to the constant pool entries referencing field, method, or interface method that are accepted
com.sun.tools.classfile.RuntimeInvisibleAnnotations_attribute#accept(Visitor, P)->R::: runtime invisible annotations_attribute accept
com.sun.tools.classfile.RuntimeInvisibleParameterAnnotations_attribute#accept(Visitor, P)->R::: runtime invisible parameter annotations_attribute accept
com.sun.tools.classfile.RuntimeInvisibleTypeAnnotations_attribute#accept(Visitor, P)->R::: runtime invisible type annotations_attribute accept
com.sun.tools.classfile.RuntimeVisibleAnnotations_attribute#accept(Visitor, P)->R::: runtime visible annotations_attribute accept
com.sun.tools.classfile.RuntimeVisibleParameterAnnotations_attribute#accept(Visitor, P)->R::: runtime visible parameter annotations_attribute accept
com.sun.tools.classfile.RuntimeVisibleTypeAnnotations_attribute#accept(Visitor, P)->R::: runtime visible type annotations_attribute accept
com.sun.tools.classfile.Signature#getType(ConstantPool)->Type::: signature get type
com.sun.tools.classfile.Signature#getParameterCount(ConstantPool)->int::: signature get parameter count
com.sun.tools.classfile.Signature#getParameterTypes(ConstantPool)->String::: signature get parameter types
com.sun.tools.classfile.Signature#getReturnType(ConstantPool)->String::: signature get return type
com.sun.tools.classfile.Signature#getFieldType(ConstantPool)->String::: signature get field type
com.sun.tools.classfile.Signature_attribute#getSignature(ConstantPool)->String::: signature_attribute get signature
com.sun.tools.classfile.Signature_attribute#getParsedSignature()->Signature::: signature_attribute get parsed signature
com.sun.tools.classfile.Signature_attribute#accept(Visitor, D)->R::: signature_attribute accept
com.sun.tools.classfile.SourceDebugExtension_attribute#getValue()->String::: source debug extension_attribute get value
com.sun.tools.classfile.SourceDebugExtension_attribute#accept(Visitor, D)->R::: source debug extension_attribute accept
com.sun.tools.classfile.SourceFile_attribute#getSourceFile(ConstantPool)->String::: source file_attribute get source file
com.sun.tools.classfile.SourceFile_attribute#accept(Visitor, P)->R::: source file_attribute accept
com.sun.tools.classfile.SourceID_attribute#getSourceID(ConstantPool)->String::: source d_attribute get source d
com.sun.tools.classfile.SourceID_attribute#accept(Visitor, D)->R::: source d_attribute accept
com.sun.tools.classfile.StackMapTable_attribute#accept(Visitor, D)->R::: stack map table_attribute accept
com.sun.tools.classfile.StackMapTable_attribute#length(stack_map_frame[])->int::: stack map table_attribute length
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame#read(ClassReader)->stack_map_frame:::stack_map_frame read
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame#length()->int:::stack_map_frame length
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame#getOffsetDelta()->int:::stack_map_frame get offset delta
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame#accept(Visitor, D)->R:::stack_map_frame accept
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame.Visitor#visit_same_frame(same_frame, P)->R::: visitor visit_same_frame
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame.Visitor#visit_same_locals_1_stack_item_frame(same_locals_1_stack_item_frame, P)->R::: visitor visit_same_locals_1_stack_item_frame
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame.Visitor#visit_same_locals_1_stack_item_frame_extended(same_locals_1_stack_item_frame_extended, P)->R::: visitor visit_same_locals_1_stack_item_frame_extended
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame.Visitor#visit_chop_frame(chop_frame, P)->R::: visitor visit_chop_frame
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame.Visitor#visit_same_frame_extended(same_frame_extended, P)->R::: visitor visit_same_frame_extended
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame.Visitor#visit_append_frame(append_frame, P)->R::: visitor visit_append_frame
com.sun.tools.classfile.StackMapTable_attribute.stack_map_frame.Visitor#visit_full_frame(full_frame, P)->R::: visitor visit_full_frame
com.sun.tools.classfile.StackMapTable_attribute.same_frame#accept(Visitor, D)->R:::same_frame accept
com.sun.tools.classfile.StackMapTable_attribute.same_frame#getOffsetDelta()->int:::same_frame get offset delta
com.sun.tools.classfile.StackMapTable_attribute.same_locals_1_stack_item_frame#length()->int:::same_locals_1_stack_item_frame length
com.sun.tools.classfile.StackMapTable_attribute.same_locals_1_stack_item_frame#accept(Visitor, D)->R:::same_locals_1_stack_item_frame accept
com.sun.tools.classfile.StackMapTable_attribute.same_locals_1_stack_item_frame#getOffsetDelta()->int:::same_locals_1_stack_item_frame get offset delta
com.sun.tools.classfile.StackMapTable_attribute.same_locals_1_stack_item_frame_extended#length()->int:::same_locals_1_stack_item_frame_extended length
com.sun.tools.classfile.StackMapTable_attribute.same_locals_1_stack_item_frame_extended#accept(Visitor, D)->R:::same_locals_1_stack_item_frame_extended accept
com.sun.tools.classfile.StackMapTable_attribute.same_locals_1_stack_item_frame_extended#getOffsetDelta()->int:::same_locals_1_stack_item_frame_extended get offset delta
com.sun.tools.classfile.StackMapTable_attribute.chop_frame#length()->int:::chop_frame length
com.sun.tools.classfile.StackMapTable_attribute.chop_frame#accept(Visitor, D)->R:::chop_frame accept
com.sun.tools.classfile.StackMapTable_attribute.chop_frame#getOffsetDelta()->int:::chop_frame get offset delta
com.sun.tools.classfile.StackMapTable_attribute.same_frame_extended#length()->int:::same_frame_extended length
com.sun.tools.classfile.StackMapTable_attribute.same_frame_extended#accept(Visitor, D)->R:::same_frame_extended accept
com.sun.tools.classfile.StackMapTable_attribute.same_frame_extended#getOffsetDelta()->int:::same_frame_extended get offset delta
com.sun.tools.classfile.StackMapTable_attribute.append_frame#length()->int:::append_frame length
com.sun.tools.classfile.StackMapTable_attribute.append_frame#accept(Visitor, D)->R:::append_frame accept
com.sun.tools.classfile.StackMapTable_attribute.append_frame#getOffsetDelta()->int:::append_frame get offset delta
com.sun.tools.classfile.StackMapTable_attribute.full_frame#length()->int:::full_frame length
com.sun.tools.classfile.StackMapTable_attribute.full_frame#accept(Visitor, D)->R:::full_frame accept
com.sun.tools.classfile.StackMapTable_attribute.full_frame#getOffsetDelta()->int:::full_frame get offset delta
com.sun.tools.classfile.StackMapTable_attribute.verification_type_info#read(ClassReader)->verification_type_info:::verification_type_info read
com.sun.tools.classfile.StackMapTable_attribute.verification_type_info#length()->int:::verification_type_info length
com.sun.tools.classfile.StackMapTable_attribute.Object_variable_info#length()->int::: object_variable_info length
com.sun.tools.classfile.StackMapTable_attribute.Uninitialized_variable_info#length()->int::: uninitialized_variable_info length
com.sun.tools.classfile.StackMap_attribute#accept(Visitor, D)->R::: stack map_attribute accept
com.sun.tools.classfile.Synthetic_attribute#accept(Visitor, D)->R::: synthetic_attribute accept
com.sun.tools.classfile.Type#isObject()->boolean::: type is object
com.sun.tools.classfile.Type#accept(Visitor, D)->R::: type accept
com.sun.tools.classfile.Type#append(StringBuilder, String, List, String)->void::: type append
com.sun.tools.classfile.Type#appendIfNotEmpty(StringBuilder, String, List, String)->void::: type append if not empty
com.sun.tools.classfile.Type.Visitor#visitSimpleType(SimpleType, P)->R::: visitor visit simple type
com.sun.tools.classfile.Type.Visitor#visitArrayType(ArrayType, P)->R::: visitor visit array type
com.sun.tools.classfile.Type.Visitor#visitMethodType(MethodType, P)->R::: visitor visit method type
com.sun.tools.classfile.Type.Visitor#visitClassSigType(ClassSigType, P)->R::: visitor visit class sig type
com.sun.tools.classfile.Type.Visitor#visitClassType(ClassType, P)->R::: visitor visit class type
com.sun.tools.classfile.Type.Visitor#visitTypeParamType(TypeParamType, P)->R::: visitor visit type param type
com.sun.tools.classfile.Type.Visitor#visitWildcardType(WildcardType, P)->R::: visitor visit wildcard type
com.sun.tools.classfile.Type.SimpleType#accept(Visitor, D)->R::: simple type accept
com.sun.tools.classfile.Type.SimpleType#isPrimitiveType()->boolean::: simple type is primitive type
com.sun.tools.classfile.Type.SimpleType#toString()->String::: simple type to string
com.sun.tools.classfile.Type.ArrayType#accept(Visitor, D)->R::: array type accept
com.sun.tools.classfile.Type.ArrayType#toString()->String::: array type to string
com.sun.tools.classfile.Type.MethodType#accept(Visitor, D)->R::: method type accept
com.sun.tools.classfile.Type.MethodType#toString()->String::: method type to string
com.sun.tools.classfile.Type.ClassSigType#accept(Visitor, D)->R::: class sig type accept
com.sun.tools.classfile.Type.ClassSigType#toString()->String::: class sig type to string
com.sun.tools.classfile.Type.ClassType#accept(Visitor, D)->R::: class type accept
com.sun.tools.classfile.Type.ClassType#getBinaryName()->String::: class type get binary name
com.sun.tools.classfile.Type.ClassType#toString()->String::: class type to string
com.sun.tools.classfile.Type.ClassType#isObject()->boolean::: class type is object
com.sun.tools.classfile.Type.TypeParamType#accept(Visitor, D)->R::: type param type accept
com.sun.tools.classfile.Type.TypeParamType#toString()->String::: type param type to string
com.sun.tools.classfile.Type.WildcardType#accept(Visitor, D)->R::: wildcard type accept
com.sun.tools.classfile.Type.WildcardType#toString()->String::: wildcard type to string
com.sun.tools.classfile.TypeAnnotation#length()->int::: type annotation length
com.sun.tools.classfile.TypeAnnotation#toString()->String::: type annotation to string
com.sun.tools.classfile.TypeAnnotation.Position.TypePathEntry#fromBinary(int, int)->TypePathEntry::: type path entry from binary
com.sun.tools.classfile.TypeAnnotation.Position.TypePathEntry#toString()->String::: type path entry to string
com.sun.tools.classfile.TypeAnnotation.Position.TypePathEntry#equals(Object)->boolean::: type path entry equals
com.sun.tools.classfile.TypeAnnotation.Position.TypePathEntry#hashCode()->int::: type path entry hash code
com.sun.tools.classfile.TypeAnnotation.Position#toString()->String::: position to string
com.sun.tools.classfile.TypeAnnotation.Position#emitToClassfile()->boolean:::Indicates whether the target tree of the annotation has been optimized away from classfile or not.
com.sun.tools.classfile.TypeAnnotation.Position#getTypePathFromBinary(List)->List:::Decode the binary representation for a type path and set the location field.
com.sun.tools.classfile.TypeAnnotation.Position#getBinaryFromTypePath(List)->List::: position get binary from type path
