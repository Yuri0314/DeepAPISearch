JVMCI#initialize()::: i initialize:::
JVMCI#initializeRuntime()::: i initialize runtime:::
JVMCI#getRuntime():::Gets the singleton JVMCIRuntime instance available to the application.:::result->if->synchronized->if->if->return->try->initializeRuntime->catch->javaHome->Services->getSavedProperty->vmName->Services->getSavedProperty->errorMessage->new->Formatter->errorMessage->format->errorMessage->format->errorMessage->format->throw->errorMessage->toString->new->UnsupportedOperationException->finally->return
JVMCIBackend#getMetaAccess()::: backend get meta access:::return
JVMCIBackend#getCodeCache()::: backend get code cache:::return
JVMCIBackend#getConstantReflection()::: backend get constant reflection:::return
JVMCIBackend#getTarget()::: backend get target:::return->codeCache->getTarget
JVMCIBackend#getStackIntrospection()::: backend get stack introspection:::return
JVMCICompiler#compileMethod(CompilationRequest):::Services a compilation request:::
JVMCICompilerFactory#getCompilerName():::Get the name of this compiler:::
JVMCICompilerFactory#onSelection():::Notifies this object that it has been selected to #createCompiler(JVMCIRuntime) create a compiler and it should now perform any heavy weight initialization that it deferred during construction.:::
JVMCICompilerFactory#createCompiler(JVMCIRuntime):::Create a new instance of a JVMCICompiler.:::
JVMCICompilerFactory#printProperties(PrintStream):::Prints a description of the properties used to configure this compiler.:::
JVMCIRuntime#getCompiler():::Gets the default system compiler.:::
JVMCIRuntime#getHostJVMCIBackend():::Gets the host JVMCI backend.:::
JVMCIRuntime#getJVMCIBackend(Class):::Gets the backend for a given architecture.:::
