jdk.internal.jimage.decompressor.CompressedResourceHeader#isTerminal()->boolean::: compressed resource header is terminal
jdk.internal.jimage.decompressor.CompressedResourceHeader#getDecompressorNameOffset()->int::: compressed resource header get decompressor name offset
jdk.internal.jimage.decompressor.CompressedResourceHeader#getContentOffset()->int::: compressed resource header get content offset
jdk.internal.jimage.decompressor.CompressedResourceHeader#getStoredContent(StringsProvider)->String::: compressed resource header get stored content
jdk.internal.jimage.decompressor.CompressedResourceHeader#getUncompressedSize()->long::: compressed resource header get uncompressed size
jdk.internal.jimage.decompressor.CompressedResourceHeader#getResourceSize()->long::: compressed resource header get resource size
jdk.internal.jimage.decompressor.CompressedResourceHeader#getBytes(ByteOrder)->byte[]::: compressed resource header get bytes
jdk.internal.jimage.decompressor.CompressedResourceHeader#getSize()->int::: compressed resource header get size
jdk.internal.jimage.decompressor.CompressedResourceHeader#readFromResource(ByteOrder, byte[])->CompressedResourceHeader::: compressed resource header read from resource
jdk.internal.jimage.decompressor.CompressIndexes#decompressFlow(byte[])->List::: compress indexes decompress flow
jdk.internal.jimage.decompressor.CompressIndexes#readInt(DataInputStream)->int::: compress indexes read int
jdk.internal.jimage.decompressor.CompressIndexes#decompress(byte[], int)->int::: compress indexes decompress
jdk.internal.jimage.decompressor.CompressIndexes#compress(int)->byte[]::: compress indexes compress
jdk.internal.jimage.decompressor.Decompressor#decompressResource(ByteOrder, StringsProvider, byte[])->byte[]:::Decompress a resource.
jdk.internal.jimage.decompressor.ResourceDecompressor.StringsProvider#getString(int)->String::: strings provider get string
jdk.internal.jimage.decompressor.ResourceDecompressor#getName()->String:::Decompressor unique name.
jdk.internal.jimage.decompressor.ResourceDecompressor#decompress(StringsProvider, byte[], int, long)->byte[]:::Decompress a resource.
jdk.internal.jimage.decompressor.ResourceDecompressorFactory#getName()->String:::The Factory name.
jdk.internal.jimage.decompressor.ResourceDecompressorFactory#newDecompressor(Properties)->ResourceDecompressor:::To build a new decompressor.
jdk.internal.jimage.decompressor.ResourceDecompressorRepository#newResourceDecompressor(Properties, String)->ResourceDecompressor:::Build a new decompressor for the passed name.
jdk.internal.jimage.decompressor.SignatureParser#reconstruct(String, List)->String::: signature parser reconstruct
jdk.internal.jimage.decompressor.SignatureParser#parseSignatureDescriptor(String)->ParseResult::: signature parser parse signature descriptor
jdk.internal.jimage.decompressor.StringSharingDecompressor#getSizes()->int[]::: string sharing decompressor get sizes
jdk.internal.jimage.decompressor.StringSharingDecompressor#normalize(StringsProvider, byte[], int)->byte[]::: string sharing decompressor normalize
jdk.internal.jimage.decompressor.StringSharingDecompressor#getEncoded(String)->byte[]::: string sharing decompressor get encoded
jdk.internal.jimage.decompressor.StringSharingDecompressor#getName()->String::: string sharing decompressor get name
jdk.internal.jimage.decompressor.StringSharingDecompressor#decompress(StringsProvider, byte[], int, long)->byte[]::: string sharing decompressor decompress
jdk.internal.jimage.decompressor.StringSharingDecompressorFactory#newDecompressor(Properties)->ResourceDecompressor::: string sharing decompressor factory new decompressor
jdk.internal.jimage.decompressor.ZipDecompressor#getName()->String::: zip decompressor get name
jdk.internal.jimage.decompressor.ZipDecompressor#decompress(byte[], int)->byte[]::: zip decompressor decompress
jdk.internal.jimage.decompressor.ZipDecompressor#decompress(StringsProvider, byte[], int, long)->byte[]::: zip decompressor decompress
jdk.internal.jimage.decompressor.ZipDecompressorFactory#newDecompressor(Properties)->ResourceDecompressor::: zip decompressor factory new decompressor
