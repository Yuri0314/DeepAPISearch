Attributes#get(Object):::Returns the value of the specified attribute name, or null if the attribute name was not found.:::return->map->get
Attributes#getValue(String):::Returns the value of the specified attribute name, specified as a string, or null if the attribute was not found:::return->Name->of->get
Attributes#getValue(Name):::Returns the value of the specified Attributes.Name, or null if the attribute was not found:::return->get
Attributes#put(Object, Object):::Associates the specified value with the specified attribute name (key) in this Map:::return->map->put
Attributes#putValue(String, String):::Associates the specified value with the specified attribute name, specified as a String:::return->Name->of->put
Attributes#remove(Object):::Removes the attribute with the specified name (key) from this Map:::return->map->remove
Attributes#containsValue(Object):::Returns true if this Map maps one or more attribute names (keys) to the specified value.:::return->map->containsValue
Attributes#containsKey(Object):::Returns true if this Map contains the specified attribute name (key).:::return->map->containsKey
Attributes#putAll(Map):::Copies all of the attribute name-value mappings from the specified Attributes to this Map:::if->isInstance->throw->new->ClassCastException->foreach->entrySet->me->getKey->me->getValue->put
Attributes#clear():::Removes all attributes from this Map.:::map->clear
Attributes#size():::Returns the number of attributes in this Map.:::return->map->size
Attributes#isEmpty():::Returns true if this Map contains no attributes.:::return->map->isEmpty
Attributes#keySet():::Returns a Set view of the attribute names (keys) contained in this Map.:::return->map->keySet
Attributes#values():::Returns a Collection view of the attribute values contained in this Map.:::return->map->values
Attributes#entrySet():::Returns a Collection view of the attribute name-value mappings contained in this Map.:::return->map->entrySet
Attributes#equals(Object):::Compares the specified Attributes object with this Map for equality:::return->map->equals
Attributes#hashCode():::Returns the hash code value for this Map.:::return->map->hashCode
Attributes#clone():::Returns a copy of the Attributes, implemented as follows:      public Object clone() { return new Attributes(this); }  Since the attribute names and values are themselves immutable, the Attributes returned can be safely modified without affecting the original.:::return->new->Attributes
Attributes.Name#equals(Object):::Compares this attribute name to another for equality.:::if->return->if->other->return->equalsIgnoreCase->else->return
Attributes.Name#hashCode():::Computes the hash value for this attribute name.:::return
Attributes.Name#toString():::Returns the attribute name as a String.:::return
JarEntry#getAttributes():::Returns the Manifest Attributes for this entry, or null if none.:::return
JarEntry#getCertificates():::Returns the Certificate objects for this entry, or null if none:::return->certs->clone
JarEntry#getCodeSigners():::Returns the CodeSigner objects for this entry, or null if none:::return->signers->clone
JarEntry#getRealName():::Returns the real name of this JarEntry:::return->super->getName
JarFile#baseVersion():::Returns the version that represents the unversioned configuration of a multi-release jar file.:::return
JarFile#runtimeVersion():::Returns the version that represents the effective runtime versioned configuration of a multi-release jar file:::return
JarFile#getVersion():::Returns the maximum version used when searching for versioned entries:::return->isMultiRelease
JarFile#isMultiRelease():::Indicates whether or not this jar file is a multi-release jar file.:::if->return->if->try->checkForSpecialAttributes->catch->finally->return
JarFile#getManifest():::Returns the jar file manifest, or null if none.:::return->getManifestFromReference
JarFile#getJarEntry(String):::Returns the JarEntry for the given base entry name or null if not found:::return->getEntry
JarFile#getEntry(String):::Returns the ZipEntry for the given base entry name or null if not found:::je->getEntry0->if->isMultiRelease->return->getVersionedEntry->return
JarFile#entries():::Returns an enumeration of the jar file entries.:::return->JUZFA->JarFileEntry->new->entries
JarFile#stream():::Returns an ordered Stream over the jar file entries:::return->JUZFA->JarFileEntry->new->stream
JarFile#versionedStream():::Returns a Stream of the versioned jar file entries:::if->isMultiRelease->return->JUZFA->entryNameStream->this->getBasename->map->Objects->nonNull->filter->distinct->this->getJarEntry->map->return->stream
JarFile#getInputStream(ZipEntry):::Returns an input stream for reading the contents of the specified zip file entry.:::maybeInstantiateVerifier->if->return->super->getInputStream->if->initializeVerifier->if->return->super->getInputStream->return->getManifestFromReference->verifiableEntry->super->getInputStream->new->JarVerifier.VerifierStream
JarFile#hasClassPathAttribute():::Returns true iff this JAR file has a manifest with the Class-Path attribute:::checkForSpecialAttributes->return
JarFile#entries2():::Returns an enumeration of the zip file entries excluding internal JAR mechanism entries and including signed entries missing from the ZIP directory.:::ensureInitialization->if->return->jv->JUZFA->JarFileEntry->new->entries->entries2->unfilteredEntries->JUZFA->JarFileEntry->new->entries->return->new->Enumeration<>
JarInputStream#getManifest():::Returns the Manifest for this JAR file, or null if none.:::return
JarInputStream#getNextEntry():::Reads the next ZIP file entry and positions the stream at the beginning of the entry data:::e->if->super->getNextEntry->if->checkManifest->else->if->first->getName->equalsIgnoreCase->if->if->jv->nothingToVerify->else->jv->beginEntry->return
JarInputStream#getNextJarEntry():::Reads the next JAR file entry and positions the stream at the beginning of the entry data:::return->getNextEntry
JarInputStream#read(byte[], int, int):::Reads from the current JAR file entry into an array of bytes:::n->if->super->read->else->if->jv->update->return
JarInputStream#createZipEntry(String):::Creates a new JarEntry (ZipEntry) for the specified JAR file entry name:::e->new->JarEntry->if->man->getAttributes->return
JarOutputStream#putNextEntry(ZipEntry):::Begins writing a new JAR file entry and positions the stream to the start of the entry data:::if->edata->ze->getExtra->if->hasMagic->if->new->byteArr->else->tmp->new->byteArr->System->arraycopy->set16->set16->ze->setExtra->super->putNextEntry
JarVerifier#beginEntry(JarEntry, ManifestEntryVerifier):::This method scans to see which entry we're parsing and keeps various state information depending on what type of file is being parsed.:::if->return->if->debug->je->getName->println->name->je->getName->if->uname->name->toUpperCase->if->uname->startsWith->uname->startsWith->if->je->isDirectory->mev->setEntry->return->if->uname->equals->uname->equals->return->if->SignatureFileVerifier->isBlockOrSF->baos->reset->mev->setEntry->return->if->doneWithMeta->if->je->isDirectory->mev->setEntry->return->if->name->startsWith->name->substring->if->name->startsWith->name->substring->if->name->equals->if->sigFileSigners->get->verifiedSigners->get->mev->setEntry->return->mev->setEntry->return
JarVerifier#getCerts(String):::Return an array of java.security.cert.Certificate objects for the given file in the jar.:::return->getCodeSigners->mapSignersToCertArray
JarVerifier#getCodeSigners(String):::return an array of CodeSigner objects for the given file in the jar:::return->verifiedSigners->get
JarVerifier#nothingToVerify():::returns true if there no files to verify:::return
JarVerifier#doneWithMeta():::called to let us know we have processed all the META-INF entries, and if we re-read one of them, don't re-process it:::sigFileSigners->isEmpty->if->sigFileSigners->containsKey->codeSigners->sigFileSigners->remove->verifiedSigners->put
JarVerifier#isTrustedManifestEntry(String):::Returns whether the name is trusted:::forMan->verifiedSigners->get->if->return->forName->sigFileSigners->get->if->verifiedSigners->get->return
Manifest#getMainAttributes():::Returns the main Attributes for the Manifest.:::return
Manifest#getEntries():::Returns a Map of the entries contained in this Manifest:::return
Manifest#getAttributes(String):::Returns the Attributes for the specified entry name:::return->getEntries->get
Manifest#getTrustedAttributes(String):::Returns the Attributes for the specified entry name, if trusted.:::result->getAttributes->if->jv->isTrustedManifestEntry->throw->new->SecurityException->return
Manifest#clear():::Clears the main Attributes as well as the entries in this Manifest.:::attr->clear->entries->clear
Manifest#write(OutputStream):::Writes the Manifest to the specified OutputStream:::dos->new->DataOutputStream->attr->writeMain->foreach->entries->entrySet->buffer->new->StringBuffer->value->e->getKey->if->vb->value->getBytes->new->String->buffer->append->make72Safe->buffer->append->dos->buffer->toString->writeBytes->e->getValue->write->dos->flush
Manifest#make72Safe(StringBuffer):::Adds line breaks to enforce a maximum 72 bytes per line.:::length->line->length->index->while->line->insert->return
Manifest#read(InputStream):::Reads the Manifest from the specified InputStream:::fis->new->FastInputStream->lbuf->new->byteArr->attr->read->ecount->acount->asize->len->name->skipEmptyLines->lastline->while->fis->readLine->c->if->throw->new->IOException->if->if->continue->if->parseName->if->throw->new->IOException->if->fis->peek->new->byteArr->System->arraycopy->continue->else->buf->new->byteArr->System->arraycopy->System->arraycopy->if->fis->peek->continue->new->String->attr->getAttributes->if->new->Attributes->entries->put->attr->read->attr->size->Math->max
Manifest#equals(Object):::Returns true if the specified Object is also a Manifest and has the same main Attributes and entries.:::if->m->return->attr->m->getMainAttributes->equals->entries->m->getEntries->equals->else->return
Manifest#hashCode():::Returns the hash code for this Manifest.:::return->attr->hashCode->entries->hashCode
Manifest#clone():::Returns a shallow copy of this Manifest:::return->new->Manifest
Pack200#newPacker():::Obtain new instance of a class that implements Packer:::return->newInstance
Pack200.Packer#properties():::Get the set of this engine's properties:::
Pack200.Packer#pack(JarFile, OutputStream):::Takes a JarFile and converts it into a Pack200 archive:::
Pack200.Packer#pack(JarInputStream, OutputStream):::Takes a JarInputStream and converts it into a Pack200 archive:::
Pack200.Unpacker#properties():::Get the set of this engine's properties:::
Pack200.Unpacker#unpack(InputStream, JarOutputStream):::Read a Pack200 archive, and write the encoded JAR to a JarOutputStream:::
Pack200.Unpacker#unpack(File, JarOutputStream):::Read a Pack200 archive, and write the encoded JAR to a JarOutputStream:::
