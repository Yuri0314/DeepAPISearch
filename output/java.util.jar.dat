Attributes#get(Object):::Returns the value of the specified attribute name, or null if the attribute name was not found.
Attributes#getValue(String):::Returns the value of the specified attribute name, specified as a string, or null if the attribute was not found
Attributes#getValue(Name):::Returns the value of the specified Attributes.Name, or null if the attribute was not found
Attributes#put(Object, Object):::Associates the specified value with the specified attribute name (key) in this Map
Attributes#putValue(String, String):::Associates the specified value with the specified attribute name, specified as a String
Attributes#remove(Object):::Removes the attribute with the specified name (key) from this Map
Attributes#containsValue(Object):::Returns true if this Map maps one or more attribute names (keys) to the specified value.
Attributes#containsKey(Object):::Returns true if this Map contains the specified attribute name (key).
Attributes#putAll(Map):::Copies all of the attribute name-value mappings from the specified Attributes to this Map
Attributes#clear():::Removes all attributes from this Map.
Attributes#size():::Returns the number of attributes in this Map.
Attributes#isEmpty():::Returns true if this Map contains no attributes.
Attributes#keySet():::Returns a Set view of the attribute names (keys) contained in this Map.
Attributes#values():::Returns a Collection view of the attribute values contained in this Map.
Attributes#entrySet():::Returns a Collection view of the attribute name-value mappings contained in this Map.
Attributes#equals(Object):::Compares the specified Attributes object with this Map for equality
Attributes#hashCode():::Returns the hash code value for this Map.
Attributes#clone():::Returns a copy of the Attributes, implemented as follows:      public Object clone() { return new Attributes(this); }  Since the attribute names and values are themselves immutable, the Attributes returned can be safely modified without affecting the original.
Attributes.Name#equals(Object):::Compares this attribute name to another for equality.
Attributes.Name#hashCode():::Computes the hash value for this attribute name.
Attributes.Name#toString():::Returns the attribute name as a String.
JarEntry#getAttributes():::Returns the Manifest Attributes for this entry, or null if none.
JarEntry#getCertificates():::Returns the Certificate objects for this entry, or null if none
JarEntry#getCodeSigners():::Returns the CodeSigner objects for this entry, or null if none
JarEntry#getRealName():::Returns the real name of this JarEntry
JarFile#baseVersion():::Returns the version that represents the unversioned configuration of a multi-release jar file.
JarFile#runtimeVersion():::Returns the version that represents the effective runtime versioned configuration of a multi-release jar file
JarFile#getVersion():::Returns the maximum version used when searching for versioned entries
JarFile#isMultiRelease():::Indicates whether or not this jar file is a multi-release jar file.
JarFile#getManifest():::Returns the jar file manifest, or null if none.
JarFile#getJarEntry(String):::Returns the JarEntry for the given base entry name or null if not found
JarFile#getEntry(String):::Returns the ZipEntry for the given base entry name or null if not found
JarFile#entries():::Returns an enumeration of the jar file entries.
JarFile#stream():::Returns an ordered Stream over the jar file entries
JarFile#versionedStream():::Returns a Stream of the versioned jar file entries
JarFile#getInputStream(ZipEntry):::Returns an input stream for reading the contents of the specified zip file entry.
JarFile#hasClassPathAttribute():::Returns true iff this JAR file has a manifest with the Class-Path attribute
JarFile#entries2():::Returns an enumeration of the zip file entries excluding internal JAR mechanism entries and including signed entries missing from the ZIP directory.
JarInputStream#getManifest():::Returns the Manifest for this JAR file, or null if none.
JarInputStream#getNextEntry():::Reads the next ZIP file entry and positions the stream at the beginning of the entry data
JarInputStream#getNextJarEntry():::Reads the next JAR file entry and positions the stream at the beginning of the entry data
JarInputStream#read(byte[], int, int):::Reads from the current JAR file entry into an array of bytes
JarInputStream#createZipEntry(String):::Creates a new JarEntry (ZipEntry) for the specified JAR file entry name
JarOutputStream#putNextEntry(ZipEntry):::Begins writing a new JAR file entry and positions the stream to the start of the entry data
JarVerifier#beginEntry(JarEntry, ManifestEntryVerifier):::This method scans to see which entry we're parsing and keeps various state information depending on what type of file is being parsed.
JarVerifier#getCerts(String):::Return an array of java.security.cert.Certificate objects for the given file in the jar.
JarVerifier#getCodeSigners(String):::return an array of CodeSigner objects for the given file in the jar
JarVerifier#nothingToVerify():::returns true if there no files to verify
JarVerifier#doneWithMeta():::called to let us know we have processed all the META-INF entries, and if we re-read one of them, don't re-process it
JarVerifier#isTrustedManifestEntry(String):::Returns whether the name is trusted
Manifest#getMainAttributes():::Returns the main Attributes for the Manifest.
Manifest#getEntries():::Returns a Map of the entries contained in this Manifest
Manifest#getAttributes(String):::Returns the Attributes for the specified entry name
Manifest#getTrustedAttributes(String):::Returns the Attributes for the specified entry name, if trusted.
Manifest#clear():::Clears the main Attributes as well as the entries in this Manifest.
Manifest#write(OutputStream):::Writes the Manifest to the specified OutputStream
Manifest#make72Safe(StringBuffer):::Adds line breaks to enforce a maximum 72 bytes per line.
Manifest#read(InputStream):::Reads the Manifest from the specified InputStream
Manifest#equals(Object):::Returns true if the specified Object is also a Manifest and has the same main Attributes and entries.
Manifest#hashCode():::Returns the hash code for this Manifest.
Manifest#clone():::Returns a shallow copy of this Manifest
Pack200#newPacker():::Obtain new instance of a class that implements Packer
Pack200.Packer#properties():::Get the set of this engine's properties
Pack200.Packer#pack(JarFile, OutputStream):::Takes a JarFile and converts it into a Pack200 archive
Pack200.Packer#pack(JarInputStream, OutputStream):::Takes a JarInputStream and converts it into a Pack200 archive
Pack200.Unpacker#properties():::Get the set of this engine's properties
Pack200.Unpacker#unpack(InputStream, JarOutputStream):::Read a Pack200 archive, and write the encoded JAR to a JarOutputStream
Pack200.Unpacker#unpack(File, JarOutputStream):::Read a Pack200 archive, and write the encoded JAR to a JarOutputStream
