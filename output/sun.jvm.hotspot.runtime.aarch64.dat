AARCH64CurrentFrameGuess#run(long):::Returns false if not able to find a frame within a reasonable range.:::sp->context->getRegisterAsAddress->pc->context->getRegisterAsAddress->fp->context->getRegisterAsAddress->if->if->thread->getLastJavaSP->thread->getLastJavaSP->thread->getLastJavaFP->setValues->return->return->end->sp->addOffsetTo->vm->VM->getVM->setValues->if->vm->isJavaPCDbg->if->vm->isClientCompiler->setValues->return->else->if->vm->getInterpreter->contains->if->println->setValues->return->for->offset->vm->getAddressSize->return->else->if->thread->getLastJavaSP->thread->getLastJavaFP->println->if->thread->getLastJavaSP->return->thread->getLastJavaPC->thread->getLastJavaFP->thread->getLastJavaSP->if->cc->vm->getCodeCache->if->cc->contains->cb->cc->findBlob->if->cb->getFrameSize->println->link_offset->cb->getFrameSize->VM->getVM->getAddressSize->if->sp->addOffsetTo->setValues->return
AARCH64CurrentFrameGuess#getSP()::: h64 current frame guess get p:::return
AARCH64CurrentFrameGuess#getFP()::: h64 current frame guess get p:::return
AARCH64CurrentFrameGuess#getPC():::May be null if getting values from thread-local storage; take       care to call the correct AARCH64Frame constructor to recover this if       necessary:::return
AARCH64CurrentFrameGuess#setValues(Address, Address, Address)::: h64 current frame guess set values:::
AARCH64Frame#initialize(TypeDataBase)::: h64 frame initialize:::
AARCH64Frame#adjustForDeopt()::: h64 frame adjust for deopt:::if->cb->VM->getVM->getCodeCache->findBlob->if->cb->isJavaMethod->nm->if->pc->nm->deoptHandlerBegin->equals->if->Assert->this->getUnextendedSP->that->this->getUnextendedSP->nm->origPCOffset->getAddressAt
AARCH64Frame#clone()::: h64 frame clone:::frame->new->AARCH64Frame->return
AARCH64Frame#equals(Object)::: h64 frame equals:::if->return->if->return->other->return->AddressOps->getSP->other->getSP->equal->AddressOps->getUnextendedSP->other->getUnextendedSP->equal->AddressOps->getFP->other->getFP->equal->AddressOps->getPC->other->getPC->equal
AARCH64Frame#hashCode()::: h64 frame hash code:::if->return->return->raw_sp->hashCode
AARCH64Frame#toString()::: h64 frame to string:::return->getSP->getSP->toString->getUnextendedSP->getUnextendedSP->toString->getFP->getFP->toString->pc->toString
AARCH64Frame#getFP()::: h64 frame get p:::return
AARCH64Frame#getSP()::: h64 frame get p:::return
AARCH64Frame#getID()::: h64 frame get d:::return
AARCH64Frame#isSignalHandlerFrameDbg()::: h64 frame is signal handler frame dbg:::return
AARCH64Frame#getSignalNumberDbg()::: h64 frame get signal number dbg:::return
AARCH64Frame#getSignalNameDbg()::: h64 frame get signal name dbg:::return
AARCH64Frame#isInterpretedFrameValid()::: h64 frame is interpreted frame valid:::if->Assert->isInterpretedFrame->that->if->getFP->getFP->andWithMask->return->if->getSP->getSP->andWithMask->return->if->getFP->VM->getVM->getAddressSize->addOffsetTo->getSP->lessThan->return->if->getFP->getSP->lessThanOrEqual->return->if->getFP->getSP->minus->VM->getVM->getAddressSize->return->return
AARCH64Frame#sender(RegisterMap, CodeBlob)::: h64 frame sender:::map->if->Assert->that->map->setIncludeArgumentOops->if->isEntryFrame->return->senderForEntryFrame->if->isInterpretedFrame->return->senderForInterpreterFrame->if->VM->getVM->getCodeCache->getPC->findBlob->else->if->Assert->cb->VM->getVM->getCodeCache->getPC->findBlob->equals->that->if->return->senderForCompiledFrame->return->getSenderSP->getLink->getSenderPC->new->AARCH64Frame
AARCH64Frame#senderForEntryFrame(AARCH64RegisterMap)::: h64 frame sender for entry frame:::if->println->if->Assert->that->jcw->getEntryFrameCallWrapper->if->Assert->entryFrameIsFirst->that->Assert->jcw->getLastJavaSP->getSP->greaterThan->that->fr->if->jcw->getLastJavaPC->jcw->getLastJavaSP->jcw->getLastJavaFP->jcw->getLastJavaPC->new->AARCH64Frame->else->jcw->getLastJavaSP->jcw->getLastJavaFP->new->AARCH64Frame->map->clear->if->Assert->map->getIncludeArgumentOops->that->return
AARCH64Frame#adjustUnextendedSP()::: h64 frame adjust unextended p:::cb->cb->senderNm->cb->asNMethodOrNull->if->if->senderNm->getPC->isDeoptMhEntry->getFP->else->if->senderNm->getPC->isDeoptEntry->else->if->senderNm->getPC->isMethodHandleReturn->getFP
AARCH64Frame#senderForInterpreterFrame(AARCH64RegisterMap)::: h64 frame sender for interpreter frame:::if->println->unextendedSP->addressOfStackSlot->getAddressAt->sp->addressOfStackSlot->if->map->getUpdateMap->addressOfStackSlot->updateMapWithSavedLink->return->getLink->getSenderPC->new->AARCH64Frame
AARCH64Frame#updateMapWithSavedLink(RegisterMap, Address)::: h64 frame update map with saved link:::map->setLocation
AARCH64Frame#senderForCompiledFrame(AARCH64RegisterMap, CodeBlob)::: h64 frame sender for compiled frame:::if->println->if->Assert->that->if->Assert->cb->getFrameSize->that->senderSP->getUnextendedSP->cb->getFrameSize->addOffsetTo->senderPC->senderSP->VM->getVM->getAddressSize->getAddressAt->savedFPAddr->senderSP->VM->getVM->getAddressSize->addOffsetTo->if->map->getUpdateMap->map->cb->callerMustGCArguments->setIncludeArgumentOops->if->cb->getOopMaps->ImmutableOopMapSet->updateRegisterMap->updateMapWithSavedLink->return->savedFPAddr->getAddressAt->new->AARCH64Frame
AARCH64Frame#hasSenderPD()::: h64 frame has sender d:::return
AARCH64Frame#frameSize()::: h64 frame frame size:::return->getSenderSP->getSP->minus->VM->getVM->getAddressSize
AARCH64Frame#getLink()::: h64 frame get link:::try->if->addressOfStackSlot->addressOfStackSlot->getAddressAt->println->return->addressOfStackSlot->getAddressAt->catch->if->println->return->finally
AARCH64Frame#getUnextendedSP()::: h64 frame get unextended p:::return
AARCH64Frame#getSenderPCAddr()::: h64 frame get sender addr:::return->addressOfStackSlot
AARCH64Frame#getSenderPC()::: h64 frame get sender c:::return->getSenderPCAddr->getAddressAt
AARCH64Frame#getNativeParamAddr(int)::: h64 frame get native param addr:::return->addressOfStackSlot
AARCH64Frame#getSenderSP()::: h64 frame get sender p:::return->addressOfStackSlot
AARCH64Frame#addressOfInterpreterFrameLocals()::: h64 frame address of interpreter frame locals:::return->addressOfStackSlot
AARCH64Frame#addressOfInterpreterFrameBCX()::: h64 frame address of interpreter frame x:::return->addressOfStackSlot
AARCH64Frame#getInterpreterFrameBCI()::: h64 frame get interpreter frame i:::bcp->addressOfInterpreterFrameBCX->getAddressAt->methodHandle->addressOfInterpreterFrameMethod->getAddressAt->method->Metadata->instantiateWrapperFor->return->bcpToBci
AARCH64Frame#addressOfInterpreterFrameMDX()::: h64 frame address of interpreter frame x:::return->addressOfStackSlot
AARCH64Frame#addressOfInterpreterFrameExpressionStack()::: h64 frame address of interpreter frame expression stack:::monitorEnd->interpreterFrameMonitorEnd->address->return->monitorEnd->VM->getVM->getAddressSize->addOffsetTo
AARCH64Frame#getInterpreterFrameExpressionStackDirection()::: h64 frame get interpreter frame expression stack direction:::return
AARCH64Frame#addressOfInterpreterFrameTOS()::: h64 frame address of interpreter frame s:::return->getSP
AARCH64Frame#addressOfInterpreterFrameTOSAt(int):::Expression stack from top down:::return->addressOfInterpreterFrameTOS->VM->getVM->getAddressSize->addOffsetTo
AARCH64Frame#getInterpreterFrameSenderSP()::: h64 frame get interpreter frame sender p:::if->Assert->isInterpretedFrame->that->return->addressOfStackSlot->getAddressAt
AARCH64Frame#interpreterFrameMonitorBegin()::: h64 frame interpreter frame monitor begin:::return->addressOfStackSlot->new->BasicObjectLock
AARCH64Frame#interpreterFrameMonitorEnd()::: h64 frame interpreter frame monitor end:::result->addressOfStackSlot->getAddressAt->if->Assert->AddressOps->getFP->gt->that->Assert->AddressOps->getSP->lte->that->return->new->BasicObjectLock
AARCH64Frame#interpreterFrameMonitorSize()::: h64 frame interpreter frame monitor size:::return->BasicObjectLock->size
AARCH64Frame#addressOfInterpreterFrameMethod()::: h64 frame address of interpreter frame method:::return->addressOfStackSlot
AARCH64Frame#addressOfInterpreterFrameCPCache()::: h64 frame address of interpreter frame cache:::return->addressOfStackSlot
AARCH64Frame#getEntryFrameCallWrapper()::: h64 frame get entry frame call wrapper:::return->addressOfStackSlot->getAddressAt->new->AARCH64JavaCallWrapper
AARCH64Frame#addressOfSavedOopResult()::: h64 frame address of saved oop result:::return->getSP->VM->getVM->isClientCompiler->VM->getVM->getAddressSize->addOffsetTo
AARCH64Frame#addressOfSavedReceiver()::: h64 frame address of saved receiver:::return->getSP->VM->getVM->getAddressSize->addOffsetTo
AARCH64Frame#dumpStack()::: h64 frame dump stack:::for->addr->getSP->VM->getVM->getAddressSize->addOffsetTo->AddressOps->getSP->lt->addr->VM->getVM->getAddressSize->addOffsetTo->println->for->addr->getSP->AddressOps->getSP->VM->getVM->getAddressSize->addOffsetTo->lte->addr->VM->getVM->getAddressSize->addOffsetTo
AARCH64JavaCallWrapper#initialize(TypeDataBase)::: h64 java call wrapper initialize:::type->db->lookupType->type->getAddressField
AARCH64JavaCallWrapper#getLastJavaFP()::: h64 java call wrapper get last java p:::return->lastJavaFPField->addr->anchorField->getOffset->addOffsetTo->getValue
AARCH64RegisterMap#clone()::: h64 register map clone:::retval->new->AARCH64RegisterMap->return
AARCH64RegisterMap#clearPD()::: h64 register map clear d:::
AARCH64RegisterMap#initializePD()::: h64 register map initialize d:::
AARCH64RegisterMap#initializeFromPD(RegisterMap)::: h64 register map initialize from d:::
AARCH64RegisterMap#getLocationPD(VMReg)::: h64 register map get location d:::return
