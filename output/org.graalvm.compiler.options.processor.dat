OptionProcessor#getSupportedSourceVersion()::: option processor get supported source version:::return->SourceVersion->latest
OptionProcessor#processElement(Element, OptionsInfo)::: option processor process element:::if->element->getModifiers->contains->processingEnv->getMessager->printMessage->return->if->element->getModifiers->contains->processingEnv->getMessager->printMessage->return->annotation->getAnnotation->field->fieldName->field->getSimpleName->toString->types->processingEnv->getTypeUtils->fieldType->field->asType->if->fieldType->getKind->processingEnv->getMessager->printMessage->return->declaredFieldType->if->types->types->erasure->isSubtype->msg->String->format->processingEnv->getMessager->printMessage->return->if->field->getModifiers->contains->processingEnv->getMessager->printMessage->return->if->field->getModifiers->contains->processingEnv->getMessager->printMessage->return->optionName->getAnnotationValue->if->optionName->equals->if->Character->optionName->charAt->isUpperCase->processingEnv->getMessager->printMessage->return->declaredOptionKeyType->while->types->types->erasure->types->erasure->isSameType->directSupertypes->types->directSupertypes->directSupertypes->get->optionType->declaredOptionKeyType->getTypeArguments->get->toString->if->optionType->startsWith->optionType->length->substring->enclosing->element->getEnclosingElement->declaringClass->separator->originatingElementsList->originatingElementsList->add->enclosingPackage->while->if->enclosing->getKind->enclosing->getKind->enclosing->getKind->if->enclosing->getModifiers->contains->msg->String->enclosing->getKind->name->toLowerCase->format->processingEnv->getMessager->printMessage->return->originatingElementsList->add->enclosing->getSimpleName->else->if->enclosing->getKind->break->else->processingEnv->getMessager->enclosing->getKind->printMessage->return->enclosing->getEnclosingElement->if->enclosingPackage->isUnnamed->processingEnv->getMessager->printMessage->return->helpValue->getAnnotationValueList->help->extraHelp->new->ArrayList<>->if->helpValue->size->helpValue->get->if->help->startsWith->path->help->length->substring->filer->processingEnv->getFiler->try->file->try->filer->enclosingPackage->getQualifiedName->getResource->catch->filer->enclosingPackage->getQualifiedName->getResource->finally->try->br->file->openInputStream->new->InputStreamReader->new->BufferedReader->br->readLine->if->line->br->readLine->while->extraHelp->add->br->readLine->catch->finally->catch->msg->String->format->processingEnv->getMessager->printMessage->return->finally->else->if->helpValue->size->helpValue->get->helpValue->helpValue->size->subList->if->help->length->firstChar->help->charAt->if->Character->isUpperCase->processingEnv->getMessager->printMessage->return->optionStabilityName->getAnnotationValue->getSimpleName->toString->if->optionStabilityName->equals->if->help->length->processingEnv->getMessager->printMessage->return->optionTypeName->getAnnotationValue->getSimpleName->toString->field->getSimpleName->toString->new->OptionInfo->add
OptionProcessor#createOptionsDescriptorsFile(ProcessingEnvironment, OptionsInfo)::: option processor create options descriptors file:::originatingElements->size->new->ElementArr->toArray->optionsDescriptorsClassName->getSimpleName->filer->processingEnv->getFiler->try->out->createSourceFile->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->getPackageName->println->out->println->out->println->out->getSimpleName->println->desc->getSimpleName->Collections->sort->out->println->out->println->out->println->out->println->foreach->name->optionField->out->println->optionType->type->help->extraHelp->declaringClass->fieldName->out->printf->out->printf->out->getSimpleName->printf->out->printf->out->printf->if->extraHelp->size->out->printf->foreach->out->line->replace->replace->printf->out->printf->out->printf->out->printf->out->printf->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->println->out->size->println->out->println->out->println->out->println->out->println->for->i->size->out->println->out->println->out->println->out->println->out->println->out->println->catch->finally
OptionProcessor#createSourceFile(String, String, Filer, Element...)::: option processor create source file:::try->className->sourceFile->filer->createSourceFile->return->sourceFile->openWriter->new->PrintWriter->catch->throw->new->RuntimeException->finally
OptionProcessor.OptionInfo#compareTo(OptionInfo)::: option info compare to:::return->name->compareTo
OptionProcessor.OptionInfo#toString()::: option info to string:::return
OptionProcessor#topDeclaringType(Element)::: option processor top declaring type:::enclosing->element->getEnclosingElement->if->enclosing->getKind->return->return->topDeclaringType
OptionProcessor#doProcess(Set, RoundEnvironment)::: option processor do process:::if->roundEnv->processingOver->return->optionTypeElement->getTypeElement->optionTypeElement->asType->getTypeElement->asType->map->new->HashMap<>->foreach->roundEnv->getElementsAnnotatedWith->if->processed->contains->processed->add->topDeclaringType->topDeclaringType->options->map->get->if->pkg->topDeclaringType->getEnclosingElement->getQualifiedName->toString->topDeclaringClass->topDeclaringType->getSimpleName->toString->new->OptionsInfo->map->put->if->element->getEnclosingElement->getSimpleName->toString->endsWith->processingEnv->getMessager->element->getEnclosingElement->printMessage->processElement->ok->uniqueness->new->HashMap<>->foreach->map->entrySet->info->e->getValue->foreach->conflict->uniqueness->put->if->processingEnv->getMessager->e->getKey->printMessage->if->foreach->map->values->createOptionsDescriptorsFile->return
