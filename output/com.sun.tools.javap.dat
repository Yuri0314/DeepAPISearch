AnnotationWriter#instance(Context)::: annotation writer instance:::instance->context->get->if->new->AnnotationWriter->return
AnnotationWriter#write(Annotation)::: annotation writer write:::write->println->indent->write->indent
AnnotationWriter#write(Annotation, boolean)::: annotation writer write:::writeDescriptor->if->showParens->if->println->indent->for->i->if->indent->print->else->print->for->i->print
AnnotationWriter#write(TypeAnnotation)::: annotation writer write:::write->println->indent->write->indent
AnnotationWriter#write(TypeAnnotation, boolean, boolean)::: annotation writer write:::write->print->write
AnnotationWriter#write(TypeAnnotation.Position, boolean)::: annotation writer write:::print->switch->if->print->print->break->if->print->break->print->for->i->print->break->print->print->break->break->print->print->break->print->print->print->print->break->print->print->break->print->print->break->print->print->break->if->print->print->print->print->break->break->throw->new->AssertionError->throw->new->AssertionError->if->isEmpty->print->print
AnnotationWriter#write(Annotation.element_value_pair, boolean)::: annotation writer write:::writeIndex->print->write
AnnotationWriter#write(Annotation.element_value)::: annotation writer write:::write->println->indent->write->indent
AnnotationWriter#write(Annotation.element_value, boolean)::: annotation writer write:::ev_writer->write
AnnotationWriter#writeDescriptor(int, boolean)::: annotation writer write descriptor:::if->try->constant_pool->classWriter->getClassFile->d->new->Descriptor->d->getFieldType->print->return->catch->finally->print
AnnotationWriter#writeIndex(int, boolean)::: annotation writer write index:::if->constantWriter->stringValue->print->else->print
AnnotationWriter.element_value_Writer#write(Annotation.element_value, boolean):::element_value_ writer write:::value->accept
AnnotationWriter.element_value_Writer#visitPrimitive(Primitive_element_value, Boolean):::element_value_ writer visit primitive:::if->index->switch->print->constantWriter->stringValue->print->break->print->constantWriter->charValue->print->print->break->constantWriter->stringValue->print->break->print->constantWriter->stringValue->print->break->constantWriter->booleanValue->print->break->print->constantWriter->stringValue->print->print->break->print->break->else->print->return
AnnotationWriter.element_value_Writer#visitEnum(Enum_element_value, Boolean):::element_value_ writer visit enum:::if->writeIndex->print->writeIndex->else->print->return
AnnotationWriter.element_value_Writer#visitClass(Class_element_value, Boolean):::element_value_ writer visit class:::if->print->writeIndex->else->print->return
AnnotationWriter.element_value_Writer#visitAnnotation(Annotation_element_value, Boolean):::element_value_ writer visit annotation:::print->AnnotationWriter.this->write->return
AnnotationWriter.element_value_Writer#visitArray(Array_element_value, Boolean):::element_value_ writer visit array:::print->for->i->print->return
AttributeWriter#instance(Context)::: attribute writer instance:::instance->context->get->if->new->AttributeWriter->return
AttributeWriter#write(Object, Attribute, ConstantPool)::: attribute writer write:::if->Assert->checkNonNull->Assert->checkNonNull->attr->accept
AttributeWriter#write(Object, Attributes, ConstantPool)::: attribute writer write:::if->Assert->checkNonNull->Assert->checkNonNull->foreach->attr->accept
AttributeWriter#visitDefault(DefaultAttribute, Void)::: attribute writer visit default:::if->report->data->i->j->print->try->attr->getName->print->catch->report->print->finally->print->toHex->println->print->while->toHex->print->if->println->print->else->print->println->return
AttributeWriter#visitAnnotationDefault(AnnotationDefault_attribute, Void)::: attribute writer visit annotation default:::println->indent->print->annotationWriter->write->indent->println->return
AttributeWriter#visitBootstrapMethods(BootstrapMethods_attribute, Void)::: attribute writer visit bootstrap methods:::println->for->i->return
AttributeWriter#visitCharacterRangeTable(CharacterRangeTable_attribute, Void)::: attribute writer visit character range table:::println->indent->foreach->String->format->print->tab->String->format->print->if->print->if->print->if->print->if->print->if->print->if->print->if->print->if->print->if->print->println->indent->return
AttributeWriter#visitCode(Code_attribute, Void)::: attribute writer visit code:::codeWriter->write->return
AttributeWriter#visitCompilationID(CompilationID_attribute, Void)::: attribute writer visit compilation d:::constantWriter->write->return
AttributeWriter#visitConstantValue(ConstantValue_attribute, Void)::: attribute writer visit constant value:::print->constantWriter->write->println->return
AttributeWriter#visitDeprecated(Deprecated_attribute, Void)::: attribute writer visit deprecated:::println->return
AttributeWriter#visitEnclosingMethod(EnclosingMethod_attribute, Void)::: attribute writer visit enclosing method:::print->tab->getJavaClassName->print->if->getMethodName->print->println->return
AttributeWriter#getJavaClassName(EnclosingMethod_attribute)::: attribute writer get java class name:::try->return->a->getClassName->getJavaName->catch->return->report->finally
AttributeWriter#getMethodName(EnclosingMethod_attribute)::: attribute writer get method name:::try->return->a->getMethodName->catch->return->report->finally
AttributeWriter#visitExceptions(Exceptions_attribute, Void)::: attribute writer visit exceptions:::println->indent->print->for->i->println->indent->return
AttributeWriter#getJavaException(Exceptions_attribute, int)::: attribute writer get java exception:::try->return->attr->getException->getJavaName->catch->return->report->finally
AttributeWriter#visitInnerClasses(InnerClasses_attribute, Void)::: attribute writer visit inner classes:::first->foreach->access_flags->if->options->checkAccess->if->writeInnerClassHeader->foreach->access_flags->getInnerClassModifiers->print->if->print->print->if->print->print->tab->print->if->getInnerName->print->constantWriter->write->if->print->constantWriter->write->println->if->indent->return
AttributeWriter#getInnerName(ConstantPool, InnerClasses_attribute.Info)::: attribute writer get inner name:::try->return->info->getInnerName->catch->return->report->finally
AttributeWriter#writeInnerClassHeader()::: attribute writer write inner class header:::println->indent
AttributeWriter#visitLineNumberTable(LineNumberTable_attribute, Void)::: attribute writer visit line number table:::println->indent->foreach->println->indent->return
AttributeWriter#visitLocalVariableTable(LocalVariableTable_attribute, Void)::: attribute writer visit local variable table:::println->indent->println->foreach->String->constantWriter->stringValue->constantWriter->stringValue->format->println->indent->return
AttributeWriter#visitLocalVariableTypeTable(LocalVariableTypeTable_attribute, Void)::: attribute writer visit local variable type table:::println->indent->println->foreach->String->constantWriter->stringValue->constantWriter->stringValue->format->println->indent->return
AttributeWriter#visitNestHost(NestHost_attribute, Void)::: attribute writer visit nest host:::print->constantWriter->write->println->return
AttributeWriter#getJavaClassName(ModuleMainClass_attribute)::: attribute writer get java class name:::try->return->a->getMainClassName->getJavaName->catch->return->report->finally
AttributeWriter#visitMethodParameters(MethodParameters_attribute, Void)::: attribute writer visit method parameters:::header->String->format->println->indent->println->foreach->namestr->constantWriter->stringValue->flagstr->String->format->println->indent->return
AttributeWriter#visitModule(Module_attribute, Void)::: attribute writer visit module:::println->indent->print->print->String->format->print->tab->constantWriter->stringValue->print->if->print->if->print->if->print->println->print->if->tab->constantWriter->stringValue->print->println->printRequiresTable->printExportsTable->printOpensTable->printUsesTable->printProvidesTable->indent->return
AttributeWriter#printRequiresTable(Module_attribute)::: attribute writer print requires table:::entries->print->tab->println->indent->foreach->String->format->print->tab->constantWriter->stringValue->print->if->print->if->print->if->print->if->print->println->print->if->tab->constantWriter->stringValue->print->println->indent
AttributeWriter#printExportsTable(Module_attribute)::: attribute writer print exports table:::entries->print->tab->println->indent->foreach->printExportOpenEntry->indent
AttributeWriter#printOpensTable(Module_attribute)::: attribute writer print opens table:::entries->print->tab->println->indent->foreach->printExportOpenEntry->indent
AttributeWriter#printExportOpenEntry(int, int, int[])::: attribute writer print export open entry:::String->format->print->tab->print->constantWriter->stringValue->print->if->print->if->print->if->println->else->println->indent->foreach->print->tab->constantWriter->stringValue->println->indent
AttributeWriter#printUsesTable(Module_attribute)::: attribute writer print uses table:::entries->print->tab->println->indent->foreach->print->tab->constantWriter->stringValue->println->indent
AttributeWriter#printProvidesTable(Module_attribute)::: attribute writer print provides table:::entries->print->tab->println->indent->foreach->print->tab->print->constantWriter->stringValue->print->println->indent->foreach->print->tab->constantWriter->stringValue->println->indent->indent
AttributeWriter#visitModuleHashes(ModuleHashes_attribute, Void)::: attribute writer visit module hashes:::println->indent->print->tab->getAlgorithm->println->print->tab->println->foreach->print->tab->getModuleName->println->println->toHex->println->indent->return
AttributeWriter#getAlgorithm(ModuleHashes_attribute)::: attribute writer get algorithm:::try->return->constant_pool->getUTF8Value->catch->return->report->finally
AttributeWriter#getModuleName(ModuleHashes_attribute.Entry)::: attribute writer get module name:::try->utf8Index->constant_pool->getModuleInfo->return->constant_pool->getUTF8Value->catch->return->report->finally
AttributeWriter#visitModuleMainClass(ModuleMainClass_attribute, Void)::: attribute writer visit module main class:::print->tab->getJavaClassName->print->println->return
AttributeWriter#visitModulePackages(ModulePackages_attribute, Void)::: attribute writer visit module packages:::println->indent->for->i->indent->return
AttributeWriter#getJavaPackage(ModulePackages_attribute, int)::: attribute writer get java package:::try->return->attr->getPackage->getJavaName->catch->return->report->finally
AttributeWriter#visitModuleResolution(ModuleResolution_attribute, Void)::: attribute writer visit module resolution:::println->indent->String->format->print->tab->print->flags->if->print->if->print->if->print->if->print->println->indent->return
AttributeWriter#visitModuleTarget(ModuleTarget_attribute, Void)::: attribute writer visit module target:::println->indent->print->if->tab->getTargetPlatform->print->println->indent->return
AttributeWriter#getTargetPlatform(ModuleTarget_attribute)::: attribute writer get target platform:::try->return->constant_pool->getUTF8Value->catch->return->report->finally
AttributeWriter#visitNestMembers(NestMembers_attribute, Void)::: attribute writer visit nest members:::println->indent->try->children->attr->getChildren->for->i->indent->catch->throw->new->AssertionError->finally->return
AttributeWriter#visitRuntimeVisibleAnnotations(RuntimeVisibleAnnotations_attribute, Void)::: attribute writer visit runtime visible annotations:::println->indent->for->i->indent->return
AttributeWriter#visitRuntimeInvisibleAnnotations(RuntimeInvisibleAnnotations_attribute, Void)::: attribute writer visit runtime invisible annotations:::println->indent->for->i->indent->return
AttributeWriter#visitRuntimeVisibleTypeAnnotations(RuntimeVisibleTypeAnnotations_attribute, Void)::: attribute writer visit runtime visible type annotations:::println->indent->for->i->indent->return
AttributeWriter#visitRuntimeInvisibleTypeAnnotations(RuntimeInvisibleTypeAnnotations_attribute, Void)::: attribute writer visit runtime invisible type annotations:::println->indent->for->i->indent->return
AttributeWriter#visitParameterAnnotations(String, RuntimeParameterAnnotations_attribute)::: attribute writer visit parameter annotations:::println->indent->for->param->indent
AttributeWriter#visitRuntimeVisibleParameterAnnotations(RuntimeVisibleParameterAnnotations_attribute, Void)::: attribute writer visit runtime visible parameter annotations:::visitParameterAnnotations->return
AttributeWriter#visitRuntimeInvisibleParameterAnnotations(RuntimeInvisibleParameterAnnotations_attribute, Void)::: attribute writer visit runtime invisible parameter annotations:::visitParameterAnnotations->return
AttributeWriter#visitSignature(Signature_attribute, Void)::: attribute writer visit signature:::print->tab->getSignature->println->return
AttributeWriter#getSignature(Signature_attribute)::: attribute writer get signature:::try->return->info->getSignature->catch->return->report->finally
AttributeWriter#visitSourceDebugExtension(SourceDebugExtension_attribute, Void)::: attribute writer visit source debug extension:::println->indent->foreach->attr->getValue->split->println->indent->return
AttributeWriter#visitSourceFile(SourceFile_attribute, Void)::: attribute writer visit source file:::getSourceFile->println->return
AttributeWriter#getSourceFile(SourceFile_attribute)::: attribute writer get source file:::try->return->attr->getSourceFile->catch->return->report->finally
AttributeWriter#visitSourceID(SourceID_attribute, Void)::: attribute writer visit source d:::constantWriter->write->return
AttributeWriter#visitStackMap(StackMap_attribute, Void)::: attribute writer visit stack map:::println->indent->w->new->StackMapTableWriter->foreach->w->write->indent->return
AttributeWriter#visitStackMapTable(StackMapTable_attribute, Void)::: attribute writer visit stack map table:::println->indent->w->new->StackMapTableWriter->foreach->w->write->indent->return
AttributeWriter.StackMapTableWriter#write(StackMapTable_attribute.stack_map_frame)::: stack map table writer write:::frame->accept
AttributeWriter.StackMapTableWriter#visit_same_frame(StackMapTable_attribute.same_frame, Void)::: stack map table writer visit_same_frame:::printHeader->return
AttributeWriter.StackMapTableWriter#visit_same_locals_1_stack_item_frame(StackMapTable_attribute.same_locals_1_stack_item_frame, Void)::: stack map table writer visit_same_locals_1_stack_item_frame:::printHeader->indent->printMap->indent->return
AttributeWriter.StackMapTableWriter#visit_same_locals_1_stack_item_frame_extended(StackMapTable_attribute.same_locals_1_stack_item_frame_extended, Void)::: stack map table writer visit_same_locals_1_stack_item_frame_extended:::printHeader->indent->println->printMap->indent->return
AttributeWriter.StackMapTableWriter#visit_chop_frame(StackMapTable_attribute.chop_frame, Void)::: stack map table writer visit_chop_frame:::printHeader->indent->println->indent->return
AttributeWriter.StackMapTableWriter#visit_same_frame_extended(StackMapTable_attribute.same_frame_extended, Void)::: stack map table writer visit_same_frame_extended:::printHeader->indent->println->indent->return
AttributeWriter.StackMapTableWriter#visit_append_frame(StackMapTable_attribute.append_frame, Void)::: stack map table writer visit_append_frame:::printHeader->indent->println->printMap->indent->return
AttributeWriter.StackMapTableWriter#visit_full_frame(StackMapTable_attribute.full_frame, Void)::: stack map table writer visit_full_frame:::if->printHeader->indent->else->printHeader->indent->println->printMap->printMap->indent->return
AttributeWriter.StackMapTableWriter#printHeader(StackMapTable_attribute.stack_map_frame, String)::: stack map table writer print header:::print->println
AttributeWriter.StackMapTableWriter#printMap(String, StackMapTable_attribute.verification_type_info[])::: stack map table writer print map:::print->for->i->println
AttributeWriter.StackMapTableWriter#mapTypeName(int)::: stack map table writer map type name:::switch->return->return->return->return->return->return->return->return->return->report->return
AttributeWriter#visitSynthetic(Synthetic_attribute, Void)::: attribute writer visit synthetic:::println->return
AttributeWriter#getJavaName(String)::: attribute writer get java name:::return->name->replace
AttributeWriter#toHex(byte, int)::: attribute writer to hex:::return->toHex
AttributeWriter#toHex(int)::: attribute writer to hex:::return->StringUtils->Integer->toString->toUpperCase
AttributeWriter#toHex(int, int)::: attribute writer to hex:::s->StringUtils->Integer->toHexString->toUpperCase->while->s->length->return->StringUtils->toUpperCase
AttributeWriter#toHex(byte[])::: attribute writer to hex:::sb->new->StringBuilder->foreach->sb->String->format->append->return->sb->toString
BasicWriter#print(String)::: basic writer print:::lineWriter->print
BasicWriter#print(Object)::: basic writer print:::lineWriter->o->toString->print
BasicWriter#println()::: basic writer println:::lineWriter->println
BasicWriter#println(String)::: basic writer println:::lineWriter->print->lineWriter->println
BasicWriter#println(Object)::: basic writer println:::lineWriter->o->toString->print->lineWriter->println
BasicWriter#indent(int)::: basic writer indent:::lineWriter->indent
BasicWriter#tab()::: basic writer tab:::lineWriter->tab
BasicWriter#setPendingNewline(boolean)::: basic writer set pending newline:::
BasicWriter#report(AttributeException)::: basic writer report:::out->e->getMessage->println->return
BasicWriter#report(ConstantPoolException)::: basic writer report:::out->e->getMessage->println->return
BasicWriter#report(DescriptorException)::: basic writer report:::out->e->getMessage->println->return
BasicWriter#report(String)::: basic writer report:::out->println->return
BasicWriter#space(int)::: basic writer space:::if->return->sb->new->StringBuilder->for->i->s->sb->toString->if->return
BasicWriter.LineWriter#instance(Context)::: line writer instance:::instance->context->get->if->new->LineWriter->return
BasicWriter.LineWriter#print(String)::: line writer print:::if->println->if->for->i->s->length
BasicWriter.LineWriter#println()::: line writer println:::out->println->buffer->setLength
BasicWriter.LineWriter#indent(int)::: line writer indent:::
BasicWriter.LineWriter#tab()::: line writer tab:::col->buffer->length->buffer->length
BasicWriter.LineWriter#indent()::: line writer indent:::
ClassWriter#instance(Context)::: class writer instance:::instance->context->get->if->new->ClassWriter->return
ClassWriter#setDigest(String, byte[])::: class writer set digest:::
ClassWriter#setFile(URI)::: class writer set file:::
ClassWriter#setFileSize(int)::: class writer set file size:::
ClassWriter#setLastModified(long)::: class writer set last modified:::
ClassWriter#getClassFile()::: class writer get class file:::return
ClassWriter#setClassFile(ClassFile)::: class writer set class file:::
ClassWriter#getMethod()::: class writer get method:::return
ClassWriter#setMethod(Method)::: class writer set method:::
ClassWriter#write(ClassFile)::: class writer write:::setClassFile->if->if->if->uri->getScheme->equals->uri->getPath->println->else->println->indent->if->lm->new->Date->df->DateFormat->getDateInstance->if->df->format->println->else->df->format->println->else->if->println->if->sb->new->StringBuilder->foreach->sb->String->format->append->println->sfa->cf->getAttribute->if->getSourceFile->println->if->indent->flags->flags->getClassModifiers->writeModifiers->if->is->attr->get->if->modAttr->name->try->if->constant_pool->get->getTag->constant_pool->getModuleInfo->getName->getJavaName->else->constant_pool->getUTF8Value->getJavaName->catch->report->finally->if->print->print->print->if->print->getUTF8Value->print->else->print->getJavaName->print->else->if->classFile->isClass->print->else->if->classFile->isInterface->print->getJavaName->print->sigAttr->getSignature->if->if->classFile->isClass->sn->getJavaSuperclassName->if->sn->equals->print->print->for->i->else->try->t->sigAttr->getParsedSignature->getType->p->classFile->isInterface->new->JavaTypePrinter->if->p->print->print->else->if->t->isObject->print->p->print->print->catch->report->print->finally->if->println->indent->println->println->String->format->flags->getClassFlags->writeList->print->if->tab->constantWriter->stringValue->print->println->print->if->tab->constantWriter->stringValue->print->println->print->print->print->println->indent->constantWriter->writeConstantPool->else->print->println->indent->if->flags->is->writeDirectives->writeFields->writeMethods->indent->println->if->attrWriter->write
ClassWriter.JavaTypePrinter#print(Type)::: java type printer print:::return->t->new->StringBuilder->accept->toString
ClassWriter.JavaTypePrinter#printTypeArgs(List)::: java type printer print type args:::builder->new->StringBuilder->appendIfNotEmpty->return->builder->toString
ClassWriter.JavaTypePrinter#visitSimpleType(SimpleType, StringBuilder)::: java type printer visit simple type:::sb->getJavaName->append->return
ClassWriter.JavaTypePrinter#visitArrayType(ArrayType, StringBuilder)::: java type printer visit array type:::append->sb->append->return
ClassWriter.JavaTypePrinter#visitMethodType(MethodType, StringBuilder)::: java type printer visit method type:::appendIfNotEmpty->append->append->appendIfNotEmpty->return
ClassWriter.JavaTypePrinter#visitClassSigType(ClassSigType, StringBuilder)::: java type printer visit class sig type:::appendIfNotEmpty->if->appendIfNotEmpty->else->if->isObject->sb->append->append->appendIfNotEmpty->return
ClassWriter.JavaTypePrinter#visitClassType(ClassType, StringBuilder)::: java type printer visit class type:::if->append->sb->append->sb->getJavaName->append->appendIfNotEmpty->return
ClassWriter.JavaTypePrinter#visitTypeParamType(TypeParamType, StringBuilder)::: java type printer visit type param type:::sb->append->sep->if->isObject->sb->append->append->if->foreach->sb->append->append->return
ClassWriter.JavaTypePrinter#visitWildcardType(WildcardType, StringBuilder)::: java type printer visit wildcard type:::switch->sb->append->break->sb->append->append->break->sb->append->append->break->throw->new->AssertionError->return
ClassWriter.JavaTypePrinter#append(StringBuilder, Type)::: java type printer append:::t->accept
ClassWriter.JavaTypePrinter#append(StringBuilder, String, List, String)::: java type printer append:::sb->append->sep->foreach->sb->append->append->sb->append
ClassWriter.JavaTypePrinter#appendIfNotEmpty(StringBuilder, String, List, String)::: java type printer append if not empty:::if->isEmpty->append
ClassWriter.JavaTypePrinter#isEmpty(List)::: java type printer is empty:::return->list->isEmpty
ClassWriter#writeFields()::: class writer write fields:::foreach->writeField
ClassWriter#writeField(Field)::: class writer write field:::if->options->checkAccess->return->flags->flags->getFieldModifiers->writeModifiers->sigAttr->getSignature->if->getJavaFieldType->print->else->try->t->sigAttr->getParsedSignature->getType->t->toString->getJavaName->print->catch->getJavaFieldType->print->finally->print->getFieldName->print->if->a->get->if->print->cv->getConstantValue->print->print->println->indent->showBlank->if->getValue->println->if->String->format->flags->getFieldFlags->writeList->if->foreach->attrWriter->write->indent->if->println
ClassWriter#writeMethods()::: class writer write methods:::foreach->writeMethod->setPendingNewline
ClassWriter#writeMethod(Method)::: class writer write method:::if->options->checkAccess->return->flags->d->methodType->methodExceptions->sigAttr->getSignature->if->else->methodSig->sigAttr->getParsedSignature->try->methodSig->getType->if->methodExceptions->isEmpty->catch->finally->flags->getMethodModifiers->writeModifiers->if->new->JavaTypePrinter->printTypeArgs->print->switch->getName->getJavaName->print->getJavaParameterTypes->print->break->print->break->getJavaReturnType->print->print->getName->print->getJavaParameterTypes->print->break->e_attr->get->if->if->exceptions->print->if->writeList->else->for->i->else->report->println->indent->if->getValue->println->if->String->format->flags->getMethodFlags->writeList->code->c_attr->get->if->if->else->report->if->attrs->foreach->attrWriter->write->else->if->if->println->codeWriter->writeInstrs->codeWriter->writeExceptionTable->if->attrWriter->get->write->attrWriter->get->write->indent->setPendingNewline
ClassWriter#writeModifiers(Collection)::: class writer write modifiers:::foreach->print->print
ClassWriter#writeDirectives()::: class writer write directives:::attr->get->if->return->m->foreach->print->if->print->if->print->print->mname->try->getModuleName->catch->report->finally->print->println->foreach->print->print->pname->try->getPackageName->replace->catch->report->finally->print->first->foreach->mname->try->getModuleName->catch->report->finally->if->println->indent->else->println->print->println->if->indent->foreach->print->print->pname->try->getPackageName->replace->catch->report->finally->print->first->foreach->mname->try->getModuleName->catch->report->finally->if->println->indent->else->println->print->println->if->indent->foreach->print->getClassName->replace->print->println->foreach->print->getClassName->replace->print->first->foreach->if->println->indent->else->println->getClassName->replace->print->println->if->indent
ClassWriter#getModuleName(int)::: class writer get module name:::if->constant_pool->get->getTag->return->constant_pool->getModuleInfo->getName->else->return->constant_pool->getUTF8Value
ClassWriter#getPackageName(int)::: class writer get package name:::if->constant_pool->get->getTag->return->constant_pool->getPackageInfo->getName->else->return->constant_pool->getUTF8Value
ClassWriter#getUTF8Value(int)::: class writer get f8 value:::try->return->getUTF8Value->catch->return->report->finally
ClassWriter#getClassName(int)::: class writer get class name:::try->return->getClassInfo->getName->catch->return->report->finally
ClassWriter#writeList(String, Collection, String)::: class writer write list:::print->sep->foreach->print->print->print
ClassWriter#writeListIfNotEmpty(String, List, String)::: class writer write list if not empty:::if->items->size->writeList
ClassWriter#getSignature(Attributes)::: class writer get signature:::return->attributes->get
ClassWriter#adjustVarargs(AccessFlags, String)::: class writer adjust varargs:::if->flags->is->i->params->lastIndexOf->if->return->params->substring->params->substring->return
ClassWriter#getJavaName(ClassFile)::: class writer get java name:::try->return->cf->getName->getJavaName->catch->return->report->finally
ClassWriter#getJavaSuperclassName(ClassFile)::: class writer get java superclass name:::try->return->cf->getSuperclassName->getJavaName->catch->return->report->finally
ClassWriter#getJavaInterfaceName(ClassFile, int)::: class writer get java interface name:::try->return->cf->getInterfaceName->getJavaName->catch->return->report->finally
ClassWriter#getJavaFieldType(Descriptor)::: class writer get java field type:::try->return->d->getFieldType->getJavaName->catch->return->report->return->report->finally
ClassWriter#getJavaReturnType(Descriptor)::: class writer get java return type:::try->return->d->getReturnType->getJavaName->catch->return->report->return->report->finally
ClassWriter#getJavaParameterTypes(Descriptor, AccessFlags)::: class writer get java parameter types:::try->return->d->getParameterTypes->adjustVarargs->getJavaName->catch->return->report->return->report->finally
ClassWriter#getJavaException(Exceptions_attribute, int)::: class writer get java exception:::try->return->attr->getException->getJavaName->catch->return->report->finally
ClassWriter#getValue(Descriptor)::: class writer get value:::try->return->d->getValue->catch->return->report->finally
ClassWriter#getFieldName(Field)::: class writer get field name:::try->return->f->getName->catch->return->report->finally
ClassWriter#getName(Method)::: class writer get name:::try->return->m->getName->catch->return->report->finally
ClassWriter#getJavaName(String)::: class writer get java name:::return->name->replace
ClassWriter#getSourceFile(SourceFile_attribute)::: class writer get source file:::try->return->attr->getSourceFile->catch->return->report->finally
ClassWriter#getConstantValue(Descriptor, int):::Get the value of an entry in the constant pool as a Java constant:::try->cpInfo->constant_pool->get->switch->cpInfo->getTag->info->t->d->getValue->switch->return->getConstantCharValue->return->String->valueOf->return->String->valueOf->info->return->info->getString->getConstantStringValue->return->constantWriter->stringValue->catch->return->finally
ClassWriter#getConstantCharValue(char)::: class writer get constant char value:::sb->new->StringBuilder->sb->append->sb->esc->append->sb->append->return->sb->toString
ClassWriter#getConstantStringValue(String)::: class writer get constant string value:::sb->new->StringBuilder->sb->append->for->i->s->length->sb->append->return->sb->toString
ClassWriter#esc(char, char)::: class writer esc:::if->return->String->valueOf->else->switch->return->return->return->return->return->return->return->return->return->String->format
CodeWriter#instance(Context)::: code writer instance:::instance->context->get->if->new->CodeWriter->return
CodeWriter#write(Code_attribute, ConstantPool)::: code writer write:::println->indent->writeVerboseHeader->writeInstrs->writeExceptionTable->attrWriter->write->indent
CodeWriter#writeVerboseHeader(Code_attribute, ConstantPool)::: code writer write verbose header:::method->classWriter->getMethod->argCount->try->n->getParameterCount->if->is->Integer->toString->catch->report->report->finally->println
CodeWriter#writeInstrs(Code_attribute)::: code writer write instrs:::detailWriters->getDetailWriters->foreach->attr->getInstructions->try->foreach->w->writeDetails->writeInstr->catch->instr->getPC->report->println->break->finally->foreach->w->flush
CodeWriter#writeInstr(Instruction)::: code writer write instr:::String->instr->getPC->instr->getMnemonic->format->print->indentWidth->indent->instr->accept->println
CodeWriter#writeExceptionTable(Code_attribute)::: code writer write exception table:::if->println->indent->println->for->i->indent
CodeWriter#printConstant(int)::: code writer print constant:::constantWriter->write
CodeWriter#getDetailWriters(Code_attribute)::: code writer get detail writers:::detailWriters->new->ArrayList<>->if->contains->sourceWriter->classWriter->getClassFile->reset->if->sourceWriter->hasSource->detailWriters->add->else->println->if->contains->localVariableTableWriter->reset->detailWriters->add->if->contains->localVariableTypeTableWriter->reset->detailWriters->add->if->contains->stackMapWriter->reset->stackMapWriter->writeInitialDetails->detailWriters->add->if->contains->tryBlockWriter->reset->detailWriters->add->if->contains->typeAnnotationWriter->reset->detailWriters->add->return
ConstantWriter#instance(Context)::: constant writer instance:::instance->context->get->if->new->ConstantWriter->return
ConstantWriter#writeConstantPool()::: constant writer write constant pool:::constant_pool->classWriter->getClassFile->writeConstantPool
ConstantWriter#writeConstantPool(ConstantPool)::: constant writer write constant pool:::v->new->ConstantPool.Visitor<Integer,Void>->println->indent->width->String->constant_pool->size->valueOf->length->cpx->while->constant_pool->size->String->format->print->try->cpInfo->constant_pool->get->String->cpTagName->format->print->cpInfo->accept->catch->finally->indent
ConstantWriter#write(int)::: constant writer write:::classFile->classWriter->getClassFile->if->print->return->cpInfo->try->get->catch->print->return->finally->tag->cpInfo->getTag->switch->ref->try->if->get->catch->finally->tagName->stringValue->print
ConstantWriter#cpTagName(CPInfo)::: constant writer cp tag name:::n->cpInfo->getClass->getSimpleName->return->n->replace->replace
ConstantWriter#tagName(int)::: constant writer tag name:::switch->return->return->return->return->return->return->return->return->return->return->return->return->return->return->return->return
ConstantWriter#booleanValue(int)::: constant writer boolean value:::classFile->classWriter->getClassFile->try->info->get->if->value->switch->return->return->return->catch->return->report->finally
ConstantWriter#charValue(int)::: constant writer char value:::classFile->classWriter->getClassFile->try->info->get->if->value->return->String->valueOf->else->return->catch->return->report->finally
ConstantWriter#stringValue(int)::: constant writer string value:::classFile->classWriter->getClassFile->try->return->get->stringValue->catch->return->report->finally
ConstantWriter#stringValue(CPInfo)::: constant writer string value:::return->stringValueVisitor->visit
ConstantWriter.StringValueVisitor#visit(CPInfo)::: string value visitor visit:::return->info->accept
ConstantWriter.StringValueVisitor#visitClass(CONSTANT_Class_info, Void)::: string value visitor visit class:::return->getCheckedName
ConstantWriter.StringValueVisitor#getCheckedName(CONSTANT_Class_info)::: string value visitor get checked name:::try->return->info->getName->checkName->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitDouble(CONSTANT_Double_info, Void)::: string value visitor visit double:::return
ConstantWriter.StringValueVisitor#visitFieldref(CONSTANT_Fieldref_info, Void)::: string value visitor visit fieldref:::return->visitRef
ConstantWriter.StringValueVisitor#visitFloat(CONSTANT_Float_info, Void)::: string value visitor visit float:::return
ConstantWriter.StringValueVisitor#visitInteger(CONSTANT_Integer_info, Void)::: string value visitor visit integer:::return->String->valueOf
ConstantWriter.StringValueVisitor#visitInterfaceMethodref(CONSTANT_InterfaceMethodref_info, Void)::: string value visitor visit interface methodref:::return->visitRef
ConstantWriter.StringValueVisitor#visitInvokeDynamic(CONSTANT_InvokeDynamic_info, Void)::: string value visitor visit invoke dynamic:::try->callee->info->getNameAndTypeInfo->stringValue->return->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitDynamicConstant(CONSTANT_Dynamic_info, Void)::: string value visitor visit dynamic constant:::try->callee->info->getNameAndTypeInfo->stringValue->return->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitLong(CONSTANT_Long_info, Void)::: string value visitor visit long:::return
ConstantWriter.StringValueVisitor#visitModule(CONSTANT_Module_info, Void)::: string value visitor visit module:::try->return->info->getName->checkName->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitNameAndType(CONSTANT_NameAndType_info, Void)::: string value visitor visit name and type:::return->getCheckedName->getType
ConstantWriter.StringValueVisitor#getCheckedName(CONSTANT_NameAndType_info)::: string value visitor get checked name:::try->return->info->getName->checkName->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitPackage(CONSTANT_Package_info, Void)::: string value visitor visit package:::try->return->info->getName->checkName->catch->return->report->finally
ConstantWriter.StringValueVisitor#getType(CONSTANT_NameAndType_info)::: string value visitor get type:::try->return->info->getType->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitMethodHandle(CONSTANT_MethodHandle_info, Void)::: string value visitor visit method handle:::try->return->info->getCPRefInfo->stringValue->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitMethodType(CONSTANT_MethodType_info, Void)::: string value visitor visit method type:::try->return->info->getType->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitMethodref(CONSTANT_Methodref_info, Void)::: string value visitor visit methodref:::return->visitRef
ConstantWriter.StringValueVisitor#visitString(CONSTANT_String_info, Void)::: string value visitor visit string:::try->classFile->classWriter->getClassFile->string_index->return->getUTF8Info->stringValue->catch->return->report->finally
ConstantWriter.StringValueVisitor#visitUtf8(CONSTANT_Utf8_info, Void)::: string value visitor visit utf8:::s->sb->new->StringBuilder->for->i->s->length->return->sb->toString
ConstantWriter.StringValueVisitor#visitRef(CPRefInfo, Void)::: string value visitor visit ref:::cn->getCheckedClassName->nat->try->info->getNameAndTypeInfo->stringValue->catch->report->finally->return
ConstantWriter.StringValueVisitor#getCheckedClassName(CPRefInfo)::: string value visitor get checked class name:::try->return->info->getClassName->checkName->catch->return->report->finally
ConstantWriter#checkName(String)::: constant writer check name:::if->return->len->name->length->if->return->cc->cp->for->k->Character->charCount->return
ConstantWriter#addEscapes(String)::: constant writer add escapes:::esc->rep->buf->nextk->len->name->length->for->k->if->return->if->buf->append->return->buf->toString
Context#get(Class)::: context get:::return->map->get
Context#put(Class, T)::: context put:::return->map->put
DisassemblerTool#getTask(Writer, JavaFileManager, DiagnosticListener, Iterable, Iterable):::Creates a future for a disassembly task with the given components and arguments:::
DisassemblerTool#getStandardFileManager(DiagnosticListener, Locale, Charset):::Returns a new instance of the standard file manager implementation for this tool:::
DisassemblerTool.DisassemblerTask#setLocale(Locale):::Set the locale to be applied when formatting diagnostics and other localized data.:::
DisassemblerTool.DisassemblerTask#call():::Performs this compilation task:::
InstructionDetailWriter#writeDetails(Instruction)::: instruction detail writer write details:::
InstructionDetailWriter#flush()::: instruction detail writer flush:::
JavapFileManager#create(DiagnosticListener, PrintWriter)::: javap file manager create:::javac_context->new->Context->if->javac_context->put->javac_context->put->return->new->JavapFileManager
JavapTask.BadArgs#showUsage(boolean)::: bad args show usage:::return
JavapTask.Option#matches(String)::: option matches:::foreach->if->a->equals->return->return
JavapTask.Option#ignoreRest()::: option ignore rest:::return
JavapTask.Option#process(JavapTask, String, String)::: option process:::
JavapTask#setLocale(Locale)::: javap task set locale:::if->Locale->getDefault
JavapTask#setLog(Writer)::: javap task set log:::getPrintWriterForWriter
JavapTask#setLog(OutputStream)::: javap task set log:::getPrintWriterForStream->setLog
JavapTask#getPrintWriterForStream(OutputStream)::: javap task get print writer for stream:::return->new->PrintWriter
JavapTask#getPrintWriterForWriter(Writer)::: javap task get print writer for writer:::if->return->getPrintWriterForStream->else->if->return->else->return->new->PrintWriter
JavapTask#setDiagnosticListener(DiagnosticListener)::: javap task set diagnostic listener:::
JavapTask#setDiagnosticListener(OutputStream)::: javap task set diagnostic listener:::getDiagnosticListenerForStream->setDiagnosticListener
JavapTask#getDiagnosticListenerForStream(OutputStream)::: javap task get diagnostic listener for stream:::return->getPrintWriterForStream->getDiagnosticListenerForWriter
JavapTask#getDiagnosticListenerForWriter(Writer)::: javap task get diagnostic listener for writer:::pw->getPrintWriterForWriter->return->switch->diagnostic->getKind->pw->getMessage->print->break->pw->getMessage->print->break->pw->getMessage->print->break->pw->print->pw->diagnostic->getMessage->println
JavapTask#run(String[])::: javap task run:::try->try->handleOptions->if->classes->size->if->return->else->return->return->run->catch->finally->if->try->defaultFileManager->close->catch->throw->new->InternalError->finally->catch->reportError->if->getMessage->printLines->return->e_args->if->e->getCause->else->new->ObjectArr->e->getCause->System->arraycopy->reportError->return->finally->log->flush
JavapTask#handleOptions(String[])::: javap task handle options:::Arrays->asList->handleOptions
JavapTask#handleOptions(Iterable, boolean)::: javap task handle options:::if->getPrintWriterForStream->if->getDiagnosticListenerForStream->else->if->getDiagnosticListenerForWriter->if->getDefaultFileManager->iter->args->iterator->noArgs->iter->hasNext->while->iter->hasNext->arg->iter->next->if->arg->startsWith->handleOption->else->if->if->new->ArrayList<>->classes->add->while->iter->hasNext->classes->iter->next->add->else->throw->new->BadArgs->showUsage->if->size->sb->new->StringBuilder->foreach->if->sb->length->sb->append->sb->append->throw->new->BadArgs->if->classes->size->throw->new->BadArgs->if->showHelp->if->showVersion
JavapTask#handleOption(String, Iterator)::: javap task handle option:::foreach->if->o->matches->if->if->rest->hasNext->o->rest->next->process->else->throw->new->BadArgs->showUsage->else->o->process->if->o->ignoreRest->while->rest->hasNext->rest->next->return->try->if->fileManager->handleOption->return->catch->throw->new->BadArgs->showUsage->finally->throw->new->BadArgs->showUsage
JavapTask#call()::: javap task call:::return->run
JavapTask#run()::: javap task run:::if->classes->isEmpty->return->context->put->classWriter->ClassWriter->instance->sourceWriter->SourceWriter->instance->sourceWriter->setFileManager->if->try->findModule->if->reportError->return->catch->reportError->return->finally->result->foreach->try->writeClass->catch->e->getLocalizedMessage->reportError->reportError->e->getLocalizedMessage->reportError->msg->e->getLocalizedMessage->if->reportError->reportError->sw->new->StringWriter->pw->new->PrintWriter->t->printStackTrace->pw->close->t->toString->sw->toString->reportError->finally->return
JavapTask#writeClass(ClassWriter, String)::: javap task write class:::fo->open->if->reportError->return->cfInfo->read->if->className->endsWith->if->if->className->equals->fo->getName->reportWarning->else->cfName->getName->if->cfName->replaceAll->className->replaceAll->equals->fo->getName->reportWarning->write->if->cf->a->cf->getAttribute->if->inners->try->result->for->i->return->catch->reportError->return->finally->else->if->reportError->return->return
JavapTask#open(String)::: javap task open:::fo->getClassFileObject->if->return->cn->lastDot->while->cn->lastIndexOf->cn->substring->cn->substring->getClassFileObject->if->return->if->className->endsWith->return->if->sfm->try->sfm->getJavaFileObjects->iterator->next->if->fo->getLastModified->return->catch->finally->if->className->matches->try->uri->new->URI->url->uri->toURL->conn->url->openConnection->conn->setUseCaches->return->new->JavaFileObject->catch->finally->return
JavapTask#read(JavaFileObject)::: javap task read:::in->fo->openInputStream->try->sizeIn->md->if->try->MessageDigest->getInstance->catch->finally->new->DigestInputStream->new->SizeInputStream->cf->ClassFile->read->digest->md->digest->size->sizeIn->size->return->new->ClassFileInfo->catch->finally->in->close
JavapTask#write(ClassFileInfo)::: javap task write:::classWriter->ClassWriter->instance->if->classWriter->toUri->setFile->classWriter->getLastModified->setLastModified->classWriter->setDigest->classWriter->setFileSize->classWriter->write
JavapTask#setClassFile(ClassFile)::: javap task set class file:::classWriter->ClassWriter->instance->classWriter->setClassFile
JavapTask#setMethod(Method)::: javap task set method:::classWriter->ClassWriter->instance->classWriter->setMethod
JavapTask#write(Attribute)::: javap task write:::attrWriter->AttributeWriter->instance->classWriter->ClassWriter->instance->cf->classWriter->getClassFile->attrWriter->write
JavapTask#write(Attributes)::: javap task write:::attrWriter->AttributeWriter->instance->classWriter->ClassWriter->instance->cf->classWriter->getClassFile->attrWriter->write
JavapTask#write(ConstantPool)::: javap task write:::constantWriter->ConstantWriter->instance->constantWriter->writeConstantPool
JavapTask#write(ConstantPool, int)::: javap task write:::constantWriter->ConstantWriter->instance->constantWriter->write
JavapTask#write(ConstantPool.CPInfo)::: javap task write:::constantWriter->ConstantWriter->instance->constantWriter->println
JavapTask#write(Field)::: javap task write:::classWriter->ClassWriter->instance->classWriter->writeField
JavapTask#write(Method)::: javap task write:::classWriter->ClassWriter->instance->classWriter->writeMethod
JavapTask#getDefaultFileManager(DiagnosticListener, PrintWriter)::: javap task get default file manager:::if->JavapFileManager->create->return
JavapTask#getClassFileObject(String)::: javap task get class file object:::try->fo->if->fileManager->getJavaFileForInput->else->fileManager->getJavaFileForInput->if->fileManager->getJavaFileForInput->return->catch->return->finally
JavapTask#findModule(String)::: javap task find module:::locns->foreach->foreach->fileManager->listLocationsForModules->result->foreach->name->fileManager->inferModuleName->if->name->equals->if->else->throw->new->IOException->if->return->return
JavapTask#showHelp()::: javap task show help:::getMessage->printLines->foreach->name->replaceAll->replaceAll->if->name->startsWith->name->equals->name->equals->name->equals->continue->getMessage->printLines->fmOptions->foreach->if->fileManager->isSupportedOption->continue->name->o->replaceAll->replaceAll->getMessage->printLines->getMessage->printLines
JavapTask#showVersion(boolean)::: javap task show version:::version->printLines
JavapTask#printLines(String)::: javap task print lines:::log->msg->replace->println
JavapTask#version(String)::: javap task version:::if->try->ResourceBundle->getBundle->catch->return->System->getProperty->getMessage->finally->try->return->versionRB->getString->catch->return->System->getProperty->getMessage->finally
JavapTask#reportError(String, Object...)::: javap task report error:::diagnosticListener->createDiagnostic->report
JavapTask#reportNote(String, Object...)::: javap task report note:::diagnosticListener->createDiagnostic->report
JavapTask#reportWarning(String, Object...)::: javap task report warning:::diagnosticListener->createDiagnostic->report
JavapTask#createDiagnostic(Diagnostic.Kind, String, Object...)::: javap task create diagnostic:::return->new->Diagnostic<JavaFileObject>
JavapTask#getMessage(String, Object...)::: javap task get message:::return->getMessage
JavapTask#getMessage(Locale, String, Object...)::: javap task get message:::if->new->HashMap<>->if->Locale->getDefault->b->bundles->get->if->try->ResourceBundle->getBundle->bundles->put->catch->throw->new->InternalError->finally->try->return->MessageFormat->b->getString->format->catch->throw->new->InternalError->finally
JavapTask.SizeInputStream#size()::: size input stream size:::return
JavapTask.SizeInputStream#read(byte[], int, int)::: size input stream read:::n->super->read->if->return
JavapTask.SizeInputStream#read()::: size input stream read:::b->super->read->return
LocalVariableTableWriter#instance(Context)::: local variable table writer instance:::instance->context->get->if->new->LocalVariableTableWriter->return
LocalVariableTableWriter#reset(Code_attribute)::: local variable table writer reset:::new->HashMap<>->lvt->get->if->return->for->i
LocalVariableTableWriter#writeDetails(Instruction)::: local variable table writer write details:::pc->instr->getPC->writeLocalVariables->writeLocalVariables
LocalVariableTableWriter#flush()::: local variable table writer flush:::pc->writeLocalVariables
LocalVariableTableWriter#writeLocalVariables(int, NoteKind)::: local variable table writer write local variables:::constant_pool->classWriter->getClassFile->indent->space->entries->pcMap->get->if->for->iter->entries->entries->size->listIterator->iter->hasPrevious->iter->hasNext
LocalVariableTableWriter#put(int, LocalVariableTable_attribute.Entry)::: local variable table writer put:::list->pcMap->get->if->new->ArrayList<>->pcMap->put->if->list->contains->list->add
LocalVariableTypeTableWriter#instance(Context)::: local variable type table writer instance:::instance->context->get->if->new->LocalVariableTypeTableWriter->return
LocalVariableTypeTableWriter#reset(Code_attribute)::: local variable type table writer reset:::new->HashMap<>->lvt->get->if->return->for->i
LocalVariableTypeTableWriter#writeDetails(Instruction)::: local variable type table writer write details:::pc->instr->getPC->writeLocalVariables->writeLocalVariables
LocalVariableTypeTableWriter#flush()::: local variable type table writer flush:::pc->writeLocalVariables
LocalVariableTypeTableWriter#writeLocalVariables(int, NoteKind)::: local variable type table writer write local variables:::constant_pool->classWriter->getClassFile->indent->space->entries->pcMap->get->if->for->iter->entries->entries->size->listIterator->iter->hasPrevious->iter->hasNext
LocalVariableTypeTableWriter#put(int, LocalVariableTypeTable_attribute.Entry)::: local variable type table writer put:::list->pcMap->get->if->new->ArrayList<>->pcMap->put->if->list->contains->list->add
Main#main(String[]):::Main entry point for the launcher:::t->new->JavapTask->rc->t->run->System->exit
Main#run(String[], PrintWriter):::Entry point that does not call System.exit.:::t->new->JavapTask->t->setLog->return->t->run
Main.JavapToolProvider#name()::: javap tool provider name:::return
Main.JavapToolProvider#run(PrintWriter, PrintWriter, String...)::: javap tool provider run:::return->Main->run
Messages#getMessage(String, Object...)::: messages get message:::
Messages#getMessage(Locale, String, Object...)::: messages get message:::
Options#instance(Context)::: options instance:::instance->context->get->if->new->Options->return
Options#checkAccess(AccessFlags):::Checks access of class, field or method.:::isPublic->flags->is->isProtected->flags->is->isPrivate->flags->is->isPackage->if->return->else->if->return->else->if->return->else->return
SourceWriter#instance(Context)::: source writer instance:::instance->context->get->if->new->SourceWriter->return
SourceWriter#setFileManager(JavaFileManager)::: source writer set file manager:::
SourceWriter#reset(ClassFile, Code_attribute)::: source writer reset:::setSource->setLineMap
SourceWriter#writeDetails(Instruction)::: source writer write details:::indent->space->lines->lineMap->instr->getPC->get->if->foreach->print->String->format->print->if->print->println->nextLine->nextLine->for->i
SourceWriter#hasSource()::: source writer has source:::return
SourceWriter#setLineMap(Code_attribute)::: source writer set line map:::map->new->TreeMap<>->allLines->new->TreeSet<>->foreach->if->t->foreach->start_pc->line->pcLines->map->get->if->new->TreeSet<>->map->put->pcLines->add->allLines->add->new->ArrayList<>
SourceWriter#setSource(ClassFile)::: source writer set source:::if->readSource->splitLines
SourceWriter#readSource(ClassFile)::: source writer read source:::if->return->location->if->fileManager->hasLocation->else->try->className->cf->getName->sf->get->if->messages->getMessage->report->return->sourceFile->sf->getSourceFile->fileBase->sourceFile->endsWith->sourceFile->sourceFile->length->substring->sep->className->lastIndexOf->pkgName->className->substring->topClassName->replace->fo->fileManager->getJavaFileForInput->if->messages->getMessage->report->return->return->fo->getCharContent->toString->catch->report->return->e->getLocalizedMessage->report->return->finally
SourceWriter#splitLines(String)::: source writer split lines:::if->return->new->StringArr->lines->new->ArrayList<>->lines->add->try->r->new->StringReader->new->BufferedReader->line->while->r->readLine->lines->add->catch->finally->return->lines->lines->size->new->StringArr->toArray
SourceWriter#nextLine(int)::: source writer next line:::i->lineList->indexOf->if->lineList->size->return->return->lineList->get
StackMapWriter#instance(Context)::: stack map writer instance:::instance->context->get->if->new->StackMapWriter->return
StackMapWriter#reset(Code_attribute)::: stack map writer reset:::get->setStackMap
StackMapWriter#setStackMap(StackMapTable_attribute)::: stack map writer set stack map:::if->return->m->classWriter->getMethod->d->args->try->cp->classWriter->getClassFile->argString->d->getParameterTypes->argString->argString->length->substring->split->catch->return->finally->isStatic->is->initialLocals->new->verification_type_infoArr->if->new->CustomVerificationTypeInfo->for->i->new->HashMap<>->builder->new->StackMapBuilder->pc->map->new->StackMap->put->for->i
StackMapWriter#writeInitialDetails()::: stack map writer write initial details:::writeDetails
StackMapWriter#writeDetails(Instruction)::: stack map writer write details:::instr->getPC->writeDetails
StackMapWriter#writeDetails(int)::: stack map writer write details:::if->return->m->map->get->if->print->print
StackMapWriter#print(String, verification_type_info[])::: stack map writer print:::print->for->i->println
StackMapWriter#print(verification_type_info)::: stack map writer print:::if->print->return->switch->print->break->print->break->print->break->print->break->print->break->print->break->print->break->print->break->try->cp->classWriter->getClassFile->class_info->cp->getClassInfo->cp->getUTF8Value->print->catch->print->finally->break->print->break
StackMapWriter.StackMapBuilder#visit_same_frame(same_frame, Integer)::: stack map builder visit_same_frame:::new_pc->frame->getOffsetDelta->m->map->get->map->put->return
StackMapWriter.StackMapBuilder#visit_same_locals_1_stack_item_frame(same_locals_1_stack_item_frame, Integer)::: stack map builder visit_same_locals_1_stack_item_frame:::new_pc->frame->getOffsetDelta->prev->map->get->m->new->StackMap->map->put->return
StackMapWriter.StackMapBuilder#visit_same_locals_1_stack_item_frame_extended(same_locals_1_stack_item_frame_extended, Integer)::: stack map builder visit_same_locals_1_stack_item_frame_extended:::new_pc->frame->getOffsetDelta->prev->map->get->m->new->StackMap->map->put->return
StackMapWriter.StackMapBuilder#visit_chop_frame(chop_frame, Integer)::: stack map builder visit_chop_frame:::new_pc->frame->getOffsetDelta->prev->map->get->k->new_locals->Arrays->copyOf->m->new->StackMap->map->put->return
StackMapWriter.StackMapBuilder#visit_same_frame_extended(same_frame_extended, Integer)::: stack map builder visit_same_frame_extended:::new_pc->frame->getOffsetDelta->m->map->get->map->put->return
StackMapWriter.StackMapBuilder#visit_append_frame(append_frame, Integer)::: stack map builder visit_append_frame:::new_pc->frame->getOffsetDelta->prev->map->get->new_locals->new->verification_type_infoArr->System->arraycopy->System->arraycopy->m->new->StackMap->map->put->return
StackMapWriter.StackMapBuilder#visit_full_frame(full_frame, Integer)::: stack map builder visit_full_frame:::new_pc->frame->getOffsetDelta->m->new->StackMap->map->put->return
TryBlockWriter#instance(Context)::: try block writer instance:::instance->context->get->if->new->TryBlockWriter->return
TryBlockWriter#reset(Code_attribute)::: try block writer reset:::new->HashMap<>->new->HashMap<>->for->i
TryBlockWriter#writeDetails(Instruction)::: try block writer write details:::writeTrys->writeTrys->writeTrys
TryBlockWriter#writeTrys(Instruction, NoteKind)::: try block writer write trys:::indent->space->pc->instr->getPC->entries->pcMap->get->if->for->iter->entries->entries->size->listIterator->iter->hasPrevious->iter->hasNext
TryBlockWriter#put(int, Exception_data)::: try block writer put:::list->pcMap->get->if->new->ArrayList<>->pcMap->put->if->list->contains->list->add
TypeAnnotationWriter#instance(Context)::: type annotation writer instance:::instance->context->get->if->new->TypeAnnotationWriter->return
TypeAnnotationWriter#reset(Code_attribute)::: type annotation writer reset:::m->classWriter->getMethod->new->HashMap<>->get->check->get->check
TypeAnnotationWriter#check(NoteKind, RuntimeTypeAnnotations_attribute)::: type annotation writer check:::if->return->foreach->p->note->if->new->Note->addNote->if->for->i
TypeAnnotationWriter#addNote(int, Note)::: type annotation writer add note:::list->pcMap->get->if->pcMap->new->ArrayList<>->put->list->add
TypeAnnotationWriter#writeDetails(Instruction)::: type annotation writer write details:::indent->space->pc->instr->getPC->notes->pcMap->get->if->foreach->print->print->annotationWriter->write->print->StringUtils->toString->toLowerCase->println
