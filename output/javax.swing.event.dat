javax.swing.event.AncestorEvent#getAncestor()->Container:::Returns the ancestor that the event actually occurred on.
javax.swing.event.AncestorEvent#getAncestorParent()->Container:::Returns the parent of the ancestor the event actually occurred on
javax.swing.event.AncestorEvent#getComponent()->JComponent:::Returns the component that the listener was added to.
javax.swing.event.AncestorListener#ancestorAdded(AncestorEvent)->void:::Called when the source or one of its ancestors is made visible either by setVisible(true) being called or by its being added to the component hierarchy
javax.swing.event.AncestorListener#ancestorRemoved(AncestorEvent)->void:::Called when the source or one of its ancestors is made invisible either by setVisible(false) being called or by its being removed from the component hierarchy
javax.swing.event.AncestorListener#ancestorMoved(AncestorEvent)->void:::Called when either the source or one of its ancestors is moved.
javax.swing.event.CaretEvent#getDot()->int:::Fetches the location of the caret.
javax.swing.event.CaretEvent#getMark()->int:::Fetches the location of other end of a logical selection
javax.swing.event.CaretListener#caretUpdate(CaretEvent)->void:::Called when the caret position is updated.
javax.swing.event.CellEditorListener#editingStopped(ChangeEvent)->void:::This tells the listeners the editor has ended editing
javax.swing.event.CellEditorListener#editingCanceled(ChangeEvent)->void:::This tells the listeners the editor has canceled editing
javax.swing.event.ChangeListener#stateChanged(ChangeEvent)->void:::Invoked when the target of the listener has changed its state.
javax.swing.event.DocumentEvent#getOffset()->int:::Returns the offset within the document of the start of the change.
javax.swing.event.DocumentEvent#getLength()->int:::Returns the length of the change.
javax.swing.event.DocumentEvent#getDocument()->Document:::Gets the document that sourced the change event.
javax.swing.event.DocumentEvent#getType()->EventType:::Gets the type of event.
javax.swing.event.DocumentEvent#getChange(Element)->ElementChange:::Gets the change information for the given element
javax.swing.event.DocumentEvent.EventType#toString()->String:::Converts the type to a string.
javax.swing.event.DocumentEvent.ElementChange#getElement()->Element:::Returns the element represented
javax.swing.event.DocumentEvent.ElementChange#getIndex()->int:::Fetches the index within the element represented
javax.swing.event.DocumentEvent.ElementChange#getChildrenRemoved()->Element[]:::Gets the child elements that were removed from the given parent element
javax.swing.event.DocumentEvent.ElementChange#getChildrenAdded()->Element[]:::Gets the child elements that were added to the given parent element
javax.swing.event.DocumentListener#insertUpdate(DocumentEvent)->void:::Gives notification that there was an insert into the document
javax.swing.event.DocumentListener#removeUpdate(DocumentEvent)->void:::Gives notification that a portion of the document has been removed
javax.swing.event.DocumentListener#changedUpdate(DocumentEvent)->void:::Gives notification that an attribute or set of attributes changed.
javax.swing.event.EventListenerList#getListenerList()->Object[]:::Passes back the event listener list as an array of ListenerType-listener pairs
javax.swing.event.EventListenerList#getListeners(Class)->T[]:::Return an array of all the listeners of the given type.
javax.swing.event.EventListenerList#getListenerCount()->int:::Returns the total number of listeners for this listener list.
javax.swing.event.EventListenerList#getListenerCount(Class)->int:::Returns the total number of listeners of the supplied type for this listener list.
javax.swing.event.EventListenerList#add(Class, T)->void:::Adds the listener as a listener of the specified type.
javax.swing.event.EventListenerList#remove(Class, T)->void:::Removes the listener as a listener of the specified type.
javax.swing.event.EventListenerList#toString()->String:::Returns a string representation of the EventListenerList.
javax.swing.event.HyperlinkEvent#getEventType()->EventType:::Gets the type of event.
javax.swing.event.HyperlinkEvent#getDescription()->String:::Get the description of the link as a string
javax.swing.event.HyperlinkEvent#getURL()->URL:::Gets the URL that the link refers to.
javax.swing.event.HyperlinkEvent#getSourceElement()->Element:::Returns the Element that corresponds to the source of the event
javax.swing.event.HyperlinkEvent#getInputEvent()->InputEvent:::Returns the InputEvent that triggered the hyperlink event
javax.swing.event.HyperlinkEvent.EventType#toString()->String:::Converts the type to a string.
javax.swing.event.HyperlinkListener#hyperlinkUpdate(HyperlinkEvent)->void:::Called when a hypertext link is updated.
javax.swing.event.InternalFrameAdapter#internalFrameOpened(InternalFrameEvent)->void:::Invoked when an internal frame has been opened.
javax.swing.event.InternalFrameAdapter#internalFrameClosing(InternalFrameEvent)->void:::Invoked when an internal frame is in the process of being closed
javax.swing.event.InternalFrameAdapter#internalFrameClosed(InternalFrameEvent)->void:::Invoked when an internal frame has been closed.
javax.swing.event.InternalFrameAdapter#internalFrameIconified(InternalFrameEvent)->void:::Invoked when an internal frame is iconified.
javax.swing.event.InternalFrameAdapter#internalFrameDeiconified(InternalFrameEvent)->void:::Invoked when an internal frame is de-iconified.
javax.swing.event.InternalFrameAdapter#internalFrameActivated(InternalFrameEvent)->void:::Invoked when an internal frame is activated.
javax.swing.event.InternalFrameAdapter#internalFrameDeactivated(InternalFrameEvent)->void:::Invoked when an internal frame is de-activated.
javax.swing.event.InternalFrameEvent#paramString()->String:::Returns a parameter string identifying this event
javax.swing.event.InternalFrameEvent#getInternalFrame()->JInternalFrame::: internal frame event get internal frame
javax.swing.event.InternalFrameListener#internalFrameOpened(InternalFrameEvent)->void:::Invoked when a internal frame has been opened.
javax.swing.event.InternalFrameListener#internalFrameClosing(InternalFrameEvent)->void:::Invoked when an internal frame is in the process of being closed
javax.swing.event.InternalFrameListener#internalFrameClosed(InternalFrameEvent)->void:::Invoked when an internal frame has been closed.
javax.swing.event.InternalFrameListener#internalFrameIconified(InternalFrameEvent)->void:::Invoked when an internal frame is iconified.
javax.swing.event.InternalFrameListener#internalFrameDeiconified(InternalFrameEvent)->void:::Invoked when an internal frame is de-iconified.
javax.swing.event.InternalFrameListener#internalFrameActivated(InternalFrameEvent)->void:::Invoked when an internal frame is activated.
javax.swing.event.InternalFrameListener#internalFrameDeactivated(InternalFrameEvent)->void:::Invoked when an internal frame is de-activated.
javax.swing.event.ListDataEvent#getType()->int:::Returns the event type
javax.swing.event.ListDataEvent#getIndex0()->int:::Returns the lower index of the range
javax.swing.event.ListDataEvent#getIndex1()->int:::Returns the upper index of the range
javax.swing.event.ListDataEvent#toString()->String:::Returns a string representation of this ListDataEvent
javax.swing.event.ListDataListener#intervalAdded(ListDataEvent)->void:::Sent after the indices in the index0,index1 interval have been inserted in the data model
javax.swing.event.ListDataListener#intervalRemoved(ListDataEvent)->void:::Sent after the indices in the index0,index1 interval have been removed from the data model
javax.swing.event.ListDataListener#contentsChanged(ListDataEvent)->void:::Sent when the contents of the list has changed in a way that's too complex to characterize with the previous methods
javax.swing.event.ListSelectionEvent#getFirstIndex()->int:::Returns the index of the first row whose selection may have changed
javax.swing.event.ListSelectionEvent#getLastIndex()->int:::Returns the index of the last row whose selection may have changed
javax.swing.event.ListSelectionEvent#getValueIsAdjusting()->boolean:::Returns whether or not this is one in a series of multiple events, where changes are still being made
javax.swing.event.ListSelectionEvent#toString()->String:::Returns a String that displays and identifies this object's properties.
javax.swing.event.ListSelectionListener#valueChanged(ListSelectionEvent)->void:::Called whenever the value of the selection changes.
javax.swing.event.MenuDragMouseEvent#getPath()->MenuElement[]:::Returns the path to the selected menu item.
javax.swing.event.MenuDragMouseEvent#getMenuSelectionManager()->MenuSelectionManager:::Returns the current menu selection manager.
javax.swing.event.MenuDragMouseListener#menuDragMouseEntered(MenuDragMouseEvent)->void:::Invoked when the dragged mouse has entered a menu component's display area.
javax.swing.event.MenuDragMouseListener#menuDragMouseExited(MenuDragMouseEvent)->void:::Invoked when the dragged mouse has left a menu component's display area.
javax.swing.event.MenuDragMouseListener#menuDragMouseDragged(MenuDragMouseEvent)->void:::Invoked when the mouse is being dragged in a menu component's display area.
javax.swing.event.MenuDragMouseListener#menuDragMouseReleased(MenuDragMouseEvent)->void:::Invoked when a dragged mouse is release in a menu component's display area.
javax.swing.event.MenuKeyEvent#getPath()->MenuElement[]:::Returns the path to the menu item referenced by this event.
javax.swing.event.MenuKeyEvent#getMenuSelectionManager()->MenuSelectionManager:::Returns the current menu selection manager.
javax.swing.event.MenuKeyListener#menuKeyTyped(MenuKeyEvent)->void:::Invoked when a key has been typed
javax.swing.event.MenuKeyListener#menuKeyPressed(MenuKeyEvent)->void:::Invoked when a key has been pressed.
javax.swing.event.MenuKeyListener#menuKeyReleased(MenuKeyEvent)->void:::Invoked when a key has been released.
javax.swing.event.MenuListener#menuSelected(MenuEvent)->void:::Invoked when a menu is selected.
javax.swing.event.MenuListener#menuDeselected(MenuEvent)->void:::Invoked when the menu is deselected.
javax.swing.event.MenuListener#menuCanceled(MenuEvent)->void:::Invoked when the menu is canceled.
javax.swing.event.PopupMenuListener#popupMenuWillBecomeVisible(PopupMenuEvent)->void::: This method is called before the popup menu becomes visible
javax.swing.event.PopupMenuListener#popupMenuWillBecomeInvisible(PopupMenuEvent)->void:::This method is called before the popup menu becomes invisible Note that a JPopupMenu can become invisible any time
javax.swing.event.PopupMenuListener#popupMenuCanceled(PopupMenuEvent)->void:::This method is called when the popup menu is canceled
javax.swing.event.RowSorterEvent#getSource()->RowSorter:::Returns the source of the event as a RowSorter.
javax.swing.event.RowSorterEvent#getType()->Type:::Returns the type of event.
javax.swing.event.RowSorterEvent#convertPreviousRowIndexToModel(int)->int:::Returns the location of index in terms of the model prior to the sort
javax.swing.event.RowSorterEvent#getPreviousRowCount()->int:::Returns the number of rows before the sort
javax.swing.event.RowSorterListener#sorterChanged(RowSorterEvent)->void:::Notification that the RowSorter has changed
javax.swing.event.SwingPropertyChangeSupport#firePropertyChange(PropertyChangeEvent)->void:::If {@link #isNotifyOnEDT is true and called off the Event Dispatch Thread this implementation uses SwingUtilities.invokeLater to send out the notification on the Event Dispatch Thread
javax.swing.event.SwingPropertyChangeSupport#isNotifyOnEDT()->boolean:::Returns notifyOnEDT property.
javax.swing.event.TableColumnModelEvent#getFromIndex()->int:::Returns the fromIndex
javax.swing.event.TableColumnModelEvent#getToIndex()->int:::Returns the toIndex
javax.swing.event.TableColumnModelListener#columnAdded(TableColumnModelEvent)->void:::Tells listeners that a column was added to the model.
javax.swing.event.TableColumnModelListener#columnRemoved(TableColumnModelEvent)->void:::Tells listeners that a column was removed from the model.
javax.swing.event.TableColumnModelListener#columnMoved(TableColumnModelEvent)->void:::Tells listeners that a column was repositioned.
javax.swing.event.TableColumnModelListener#columnMarginChanged(ChangeEvent)->void:::Tells listeners that a column was moved due to a margin change.
javax.swing.event.TableColumnModelListener#columnSelectionChanged(ListSelectionEvent)->void:::Tells listeners that the selection model of the TableColumnModel changed.
javax.swing.event.TableModelEvent#getFirstRow()->int:::Returns the first row that changed
javax.swing.event.TableModelEvent#getLastRow()->int:::Returns the last row that changed.
javax.swing.event.TableModelEvent#getColumn()->int::: Returns the column for the event
javax.swing.event.TableModelEvent#getType()->int::: Returns the type of event - one of: INSERT, UPDATE and DELETE.
javax.swing.event.TableModelListener#tableChanged(TableModelEvent)->void:::This fine grain notification tells listeners the exact range of cells, rows, or columns that changed.
javax.swing.event.TreeExpansionEvent#getPath()->TreePath:::Returns the path to the value that has been expanded/collapsed.
javax.swing.event.TreeExpansionListener#treeExpanded(TreeExpansionEvent)->void:::Called whenever an item in the tree has been expanded.
javax.swing.event.TreeExpansionListener#treeCollapsed(TreeExpansionEvent)->void:::Called whenever an item in the tree has been collapsed.
javax.swing.event.TreeModelEvent#getTreePath()->TreePath:::For all events, except treeStructureChanged, returns the parent of the changed nodes
javax.swing.event.TreeModelEvent#getPath()->Object[]:::Convenience method to get the array of objects from the TreePath instance that this event wraps.
javax.swing.event.TreeModelEvent#getChildren()->Object[]:::Returns the objects that are children of the node identified by getPath at the locations specified by getChildIndices
javax.swing.event.TreeModelEvent#getChildIndices()->int[]:::Returns the values of the child indexes
javax.swing.event.TreeModelEvent#toString()->String:::Returns a string that displays and identifies this object's properties.
javax.swing.event.TreeModelListener#treeNodesChanged(TreeModelEvent)->void:::Invoked after a node (or a set of siblings) has changed in some way
javax.swing.event.TreeModelListener#treeNodesInserted(TreeModelEvent)->void:::Invoked after nodes have been inserted into the tree.  Use e.getPath() to get the parent of the new node(s)
javax.swing.event.TreeModelListener#treeNodesRemoved(TreeModelEvent)->void:::Invoked after nodes have been removed from the tree
javax.swing.event.TreeModelListener#treeStructureChanged(TreeModelEvent)->void:::Invoked after the tree has drastically changed structure from a given node down
javax.swing.event.TreeSelectionEvent#getPaths()->TreePath[]:::Returns the paths that have been added or removed from the selection.
javax.swing.event.TreeSelectionEvent#getPath()->TreePath:::Returns the first path element.
javax.swing.event.TreeSelectionEvent#isAddedPath()->boolean:::Returns whether the path identified by getPath was added to the selection
javax.swing.event.TreeSelectionEvent#isAddedPath(TreePath)->boolean:::Returns whether the specified path was added to the selection
javax.swing.event.TreeSelectionEvent#isAddedPath(int)->boolean:::Returns whether the path at getPaths()[index] was added to the selection
javax.swing.event.TreeSelectionEvent#getOldLeadSelectionPath()->TreePath:::Returns the path that was previously the lead path.
javax.swing.event.TreeSelectionEvent#getNewLeadSelectionPath()->TreePath:::Returns the current lead path.
javax.swing.event.TreeSelectionEvent#cloneWithSource(Object)->Object:::Returns a copy of the receiver, but with the source being newSource.
javax.swing.event.TreeSelectionListener#valueChanged(TreeSelectionEvent)->void:::Called whenever the value of the selection changes.
javax.swing.event.TreeWillExpandListener#treeWillExpand(TreeExpansionEvent)->void:::Invoked whenever a node in the tree is about to be expanded.
javax.swing.event.TreeWillExpandListener#treeWillCollapse(TreeExpansionEvent)->void:::Invoked whenever a node in the tree is about to be collapsed.
javax.swing.event.UndoableEditEvent#getEdit()->UndoableEdit:::Returns the edit value.
javax.swing.event.UndoableEditListener#undoableEditHappened(UndoableEditEvent)->void:::An undoable edit happened
