AllocationStageVerifier#run(TargetDescription, LIRGenerationResult, AllocationContext)::: allocation stage verifier run:::lirGenRes->getLIR->verifyLIR
AllocationStageVerifier#verifyLIR(LIR)::: allocation stage verifier verify r:::foreach->lir->getControlFlowGraph->getBlocks->verifyBlock
AllocationStageVerifier#verifyBlock(LIR, AbstractBlockBase)::: allocation stage verifier verify block:::foreach->lir->getLIRforBlock->verifyInstruction
AllocationStageVerifier#verifyInstruction(LIRInstruction)::: allocation stage verifier verify instruction:::inst->this->verifyOperands->visitEachInput->inst->this->verifyOperands->visitEachOutput->inst->this->verifyOperands->visitEachAlive->inst->this->verifyOperands->visitEachTemp
AllocationStageVerifier#verifyOperands(LIRInstruction, Value, OperandMode, EnumSet)::: allocation stage verifier verify operands:::
OutOfRegistersException#getDescription()::: out of registers exception get description:::return
RegisterAllocationPhase#setNeverSpillConstants(boolean)::: register allocation phase set never spill constants:::
RegisterAllocationPhase#getNeverSpillConstants()::: register allocation phase get never spill constants:::return
SaveCalleeSaveRegisters#run(TargetDescription, LIRGenerationResult, PreAllocationOptimizationContext)::: save callee save registers run:::calleeSaveRegisters->lirGenRes->getRegisterConfig->getCalleeSaveRegisters->if->calleeSaveRegisters->size->return->lir->lirGenRes->getLIR->savedRegisters->saveAtEntry->foreach->lir->codeEmittingOrder->if->continue->if->block->getSuccessorCount->getSpillMoveFactory->restoreAtExit
SaveCalleeSaveRegisters#saveAtEntry(LIR, LIRGeneratorTool, LIRGenerationResult, RegisterArray, Architecture)::: save callee save registers save at entry:::startBlock->lir->getControlFlowGraph->getStartBlock->instructions->lir->getLIRforBlock->insertionIndex->buffer->new->LIRInsertionBuffer->buffer->init->entry->instructions->get->savedRegisterValues->calleeSaveRegisters->size->new->RegisterValueArr->savedRegisterValueIndex->saveMap->new->RegisterMap<>->foreach->registerPlatformKind->arch->register->getRegisterCategory->getLargestStorableKind->lirKind->LIRKind->value->registerValue->register->asValue->saveVariable->lirGen->newVariable->save->lirGen->getSpillMoveFactory->createMove->buffer->append->save->setComment->saveMap->put->entry->addIncomingValues->buffer->finish->return
SaveCalleeSaveRegisters#restoreAtExit(LIR, LIRGeneratorTool.MoveFactory, LIRGenerationResult, RegisterMap, AbstractBlockBase)::: save callee save registers restore at exit:::instructions->lir->getLIRforBlock->insertionIndex->instructions->size->buffer->new->LIRInsertionBuffer->buffer->init->calleeSaveRegisters->restore->moveFactory->register->saved->getValueKind->asValue->createMove->buffer->append->restore->setComment->forEach->buffer->finish
