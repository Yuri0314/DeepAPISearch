DOM2SAX#getDTDHandler():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getErrorHandler():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getFeature(String):::This class is only used internally so this method should never be called.:::return
DOM2SAX#setFeature(String, boolean):::This class is only used internally so this method should never be called.:::
DOM2SAX#parse(String):::This class is only used internally so this method should never be called.:::throw->new->IOException
DOM2SAX#setDTDHandler(DTDHandler):::This class is only used internally so this method should never be called.:::
DOM2SAX#setEntityResolver(EntityResolver):::This class is only used internally so this method should never be called.:::
DOM2SAX#getEntityResolver():::This class is only used internally so this method should never be called.:::return
DOM2SAX#setErrorHandler(ErrorHandler):::This class is only used internally so this method should never be called.:::
DOM2SAX#setProperty(String, Object):::This class is only used internally so this method should never be called.:::
DOM2SAX#getProperty(String):::This class is only used internally so this method should never be called.:::return
DOM2SAX#getColumnNumber():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getLineNumber():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getPublicId():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getSystemId():::This class is only used internally so this method should never be called.:::return
DOM2TO#getDTDHandler():::This class is only used internally so this method should never be called.:::return
DOM2TO#getErrorHandler():::This class is only used internally so this method should never be called.:::return
DOM2TO#getFeature(String):::This class is only used internally so this method should never be called.:::return
DOM2TO#setFeature(String, boolean):::This class is only used internally so this method should never be called.:::
DOM2TO#parse(String):::This class is only used internally so this method should never be called.:::throw->new->IOException
DOM2TO#setDTDHandler(DTDHandler):::This class is only used internally so this method should never be called.:::
DOM2TO#setEntityResolver(EntityResolver):::This class is only used internally so this method should never be called.:::
DOM2TO#getEntityResolver():::This class is only used internally so this method should never be called.:::return
DOM2TO#setErrorHandler(ErrorHandler):::This class is only used internally so this method should never be called.:::
DOM2TO#setProperty(String, Object):::This class is only used internally so this method should never be called.:::
DOM2TO#getProperty(String):::This class is only used internally so this method should never be called.:::return
DOM2TO#getColumnNumber():::This class is only used internally so this method should never be called.:::return
DOM2TO#getLineNumber():::This class is only used internally so this method should never be called.:::return
DOM2TO#getPublicId():::This class is only used internally so this method should never be called.:::return
DOM2TO#getSystemId():::This class is only used internally so this method should never be called.:::return
SAX2DOM#ignorableWhitespace(char[], int, int):::This class is only used internally so this method should never be called.:::
SAX2DOM#processingInstruction(String, String):::adds processing instruction node to DOM.:::appendTextNode->last->_nodeStk->peek->pi->_document->createProcessingInstruction->if->if->last->insertBefore->else->last->appendChild
SAX2DOM#setDocumentLocator(Locator):::This class is only used internally so this method should never be called.:::
SAX2DOM#skippedEntity(String):::This class is only used internally so this method should never be called.:::
SAX2DOM#comment(char[], int, int):::Lexical Handler method to create comment node in DOM tree.:::appendTextNode->last->_nodeStk->peek->comment->_document->new->String->createComment->if->if->last->insertBefore->else->last->appendChild
SAX2StAXBaseWriter#reportException(String, SAXException):::Used to report a SAXExceptionto the XMLReporter registered with this handler.:::if->try->reporter->e->getMessage->getCurrentLocation->report->catch->throw->new->SAXException->finally
SAX2StAXBaseWriter#parseQName(String, String[]):::Parses an XML qualified name, and places the resulting prefix and local name in the provided String array.:::prefix->local->idx->qName->indexOf->if->qName->substring->qName->substring->else
StAXEvent2SAX#getDTDHandler():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getErrorHandler():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getFeature(String):::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#setFeature(String, boolean):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#parse(String):::This class is only used internally so this method should never be called.:::throw->new->IOException
StAXEvent2SAX#setDTDHandler(DTDHandler):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#setEntityResolver(EntityResolver):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#getEntityResolver():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#setErrorHandler(ErrorHandler):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#setProperty(String, Object):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#getProperty(String):::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getColumnNumber():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getLineNumber():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getPublicId():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getSystemId():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#parse(String):::This class is only used internally so this method should never be called.:::throw->new->IOException
StAXStream2SAX#getDTDHandler():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getErrorHandler():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getFeature(String):::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#setFeature(String, boolean):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#setDTDHandler(DTDHandler):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#setEntityResolver(EntityResolver):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#getEntityResolver():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#setErrorHandler(ErrorHandler):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#setProperty(String, Object):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#getProperty(String):::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getColumnNumber():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getLineNumber():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getPublicId():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getSystemId():::This class is only used internally so this method should never be called.:::return
TemplatesHandlerImpl#getSystemId():::Implements javax.xml.transform.sax.TemplatesHandler.getSystemId() Get the base ID (URI or system ID) from where relative URLs will be resolved.:::return
TemplatesHandlerImpl#setSystemId(String):::Implements javax.xml.transform.sax.TemplatesHandler.setSystemId() Get the base ID (URI or system ID) from where relative URLs will be resolved.:::
TemplatesHandlerImpl#setURIResolver(URIResolver):::Store URIResolver needed for Transformers.:::
TemplatesHandlerImpl#getTemplates():::Implements javax.xml.transform.sax.TemplatesHandler.getTemplates() When a TemplatesHandler object is used as a ContentHandler or DocumentHandler for the parsing of transformation instructions, it creates a Templates object, which the caller can get once the SAX events have been completed.:::return
TemplatesHandlerImpl#loadSource(String, String, XSLTC):::This method implements XSLTC's SourceLoader interface:::try->source->_uriResolver->resolve->if->return->Util->getInputSource->catch->finally->return
TemplatesHandlerImpl#startDocument():::Re-initialize parser and forward SAX2 event.:::xsltc->_parser->getXSLTC->xsltc->init->xsltc->setOutputType->_parser->startDocument
TemplatesHandlerImpl#endDocument():::Just forward SAX2 event to parser object.:::_parser->endDocument->try->xsltc->_parser->getXSLTC->transletName->if->Util->baseName->else->_tfactory->getAttribute->xsltc->setClassName->xsltc->getClassName->stylesheet->root->_parser->getDocumentRoot->if->_parser->errorsFound->_parser->makeStylesheet->stylesheet->setSystemId->stylesheet->setParentStylesheet->if->xsltc->getTemplateInlining->stylesheet->setTemplateInlining->else->stylesheet->setTemplateInlining->if->_catalogFeatures->get->stylesheet->setSourceLoader->_parser->setCurrentStylesheet->xsltc->setStylesheet->_parser->createAST->if->_parser->errorsFound->stylesheet->xsltc->isMultiDocument->setMultiDocument->stylesheet->xsltc->hasIdCall->setHasIdCall->synchronized->xsltc->getClass->stylesheet->translate->if->_parser->errorsFound->bytecodes->xsltc->getBytecodes->if->xsltc->getBytecodes->_parser->getOutputProperties->new->TemplatesImpl->if->_templates->setURIResolver->else->errorMessage->new->StringBuilder->errors->_parser->getErrors->count->errors->size->for->i->throw->errorMessage->toString->new->TransformerException->new->SAXException->catch->throw->new->SAXException->finally
TemplatesHandlerImpl#startPrefixMapping(String, String):::Just forward SAX2 event to parser object.:::_parser->startPrefixMapping
TemplatesHandlerImpl#endPrefixMapping(String):::Just forward SAX2 event to parser object.:::_parser->endPrefixMapping
TemplatesHandlerImpl#startElement(String, String, String, Attributes):::Just forward SAX2 event to parser object.:::_parser->startElement
TemplatesHandlerImpl#endElement(String, String, String):::Just forward SAX2 event to parser object.:::_parser->endElement
TemplatesHandlerImpl#characters(char[], int, int):::Just forward SAX2 event to parser object.:::_parser->characters
TemplatesHandlerImpl#processingInstruction(String, String):::Just forward SAX2 event to parser object.:::_parser->processingInstruction
TemplatesHandlerImpl#ignorableWhitespace(char[], int, int):::Just forward SAX2 event to parser object.:::_parser->ignorableWhitespace
TemplatesHandlerImpl#skippedEntity(String):::Just forward SAX2 event to parser object.:::_parser->skippedEntity
TemplatesHandlerImpl#setDocumentLocator(Locator):::Set internal system Id and forward SAX2 event to parser object.:::locator->getSystemId->setSystemId->_parser->setDocumentLocator
TemplatesImpl.TransletClassLoader#defineClass(byte[]):::Access to final protected superclass member from outer class.:::return->defineClass
TemplatesImpl#overrideDefaultParser():::Return the state of the services mechanism feature.:::return
TemplatesImpl#setURIResolver(URIResolver):::Store URIResolver needed for Transformers.:::
TemplatesImpl#getTransletIndex():::Returns the index of the main class in array of bytecodes:::try->if->defineTransletClasses->catch->finally->return
TemplatesImpl#setTransletName(String):::The TransformerFactory should call this method to set the translet name:::
TemplatesImpl#getTransletName():::Returns the name of the main translet class stored in this template:::return
TemplatesImpl#newTransformer():::Implements JAXP's Templates.newTransformer():::transformer->getTransletInstance->new->TransformerImpl->if->transformer->setURIResolver->if->_tfactory->getFeature->transformer->setSecureProcessing->return
TemplatesImpl#getOutputProperties():::Implements JAXP's Templates.getOutputProperties():::try->return->newTransformer->getOutputProperties->catch->return->finally
TemplatesImpl#getStylesheetDOM():::Return the thread local copy of the stylesheet DOM.:::return->_sdom->get
TemplatesImpl#setStylesheetDOM(DOM):::Set the thread local copy of the stylesheet DOM.:::_sdom->set
TransformerFactoryImpl#setErrorListener(ErrorListener):::javax.xml.transform.sax.TransformerFactory implementation:::if->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException
TransformerFactoryImpl#getErrorListener():::javax.xml.transform.sax.TransformerFactory implementation:::return
TransformerFactoryImpl#getPackageName():::Returns the package name.:::return
TransformerFactoryImpl#getAttribute(String):::javax.xml.transform.sax.TransformerFactory implementation:::if->name->equals->return->else->if->name->equals->return->else->if->name->equals->return->else->if->name->equals->if->return->else->return->else->if->name->equals->return->else->if->name->equals->return->else->if->equals->return->else->if->equals->return->else->if->equals->return->else->if->equals->return->else->if->equals->return->buildCatalogFeatures->else->if->equals->return->propertyValue->_xmlSecurityManager->getLimitAsString->if->return->else->_xmlSecurityPropertyMgr->getValue->if->return->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException
TransformerFactoryImpl#setAttribute(String, Object):::javax.xml.transform.sax.TransformerFactory implementation:::if->name->equals->return->else->if->name->equals->return->else->if->name->equals->return->else->if->name->equals->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->try->Integer->parseInt->return->catch->finally->else->if->return->else->if->name->equals->if->return->else->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->else->if->equals->CatalogFeatures->builder->with->return->else->if->equals->CatalogFeatures->builder->with->return->else->if->equals->CatalogFeatures->builder->with->return->else->if->equals->CatalogFeatures->builder->with->return->else->if->equals->JdkXmlUtils->getValue->return->if->_xmlSecurityManager->setLimit->return->if->_xmlSecurityPropertyMgr->setValue->_xmlSecurityPropertyMgr->getValue->_xmlSecurityPropertyMgr->getValue->return->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException
TransformerFactoryImpl#setFeature(String, boolean):::Set a feature for this TransformerFactory and Transformers or Templates created by this factory.   Feature names are fully qualified java.net.URIs:::if->err->new->ErrorMsg->throw->err->toString->new->NullPointerException->else->if->name->equals->if->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->_xmlSecurityManager->setSecureProcessing->if->_xmlSecurityPropertyMgr->setValue->_xmlSecurityPropertyMgr->setValue->_xmlSecurityPropertyMgr->getValue->_xmlSecurityPropertyMgr->getValue->if->_xmlFeatures->setFeature->else->if->name->equals->if->return->if->_xmlFeatures->setFeature->if->name->equals->name->equals->_xmlFeatures->getFeature->return->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException
TransformerFactoryImpl#getFeature(String):::javax.xml.transform.sax.TransformerFactory implementation:::features->if->err->new->ErrorMsg->throw->err->toString->new->NullPointerException->for->i->if->name->equals->return->index->_xmlFeatures->getIndex->if->return->_xmlFeatures->getFeature->return
TransformerFactoryImpl#overrideDefaultParser():::Return the state of the services mechanism feature.:::return
TransformerFactoryImpl#getURIResolver():::javax.xml.transform.sax.TransformerFactory implementation:::return
TransformerFactoryImpl#setURIResolver(URIResolver):::javax.xml.transform.sax.TransformerFactory implementation:::
TransformerFactoryImpl#getAssociatedStylesheet(Source, String, String, String):::javax.xml.transform.sax.TransformerFactory implementation:::baseId->reader->isource->_stylesheetPIHandler->new->StylesheetPIHandler->try->if->domsrc->domsrc->getSystemId->node->domsrc->getNode->dom2sax->new->DOM2SAX->_stylesheetPIHandler->setBaseId->dom2sax->setContentHandler->dom2sax->parse->else->if->getXMLReader->SAXSource->sourceToInputSource->isource->getSystemId->if->JdkXmlUtils->getXMLReader->_stylesheetPIHandler->setBaseId->reader->setContentHandler->reader->parse->if->_stylesheetPIHandler->setURIResolver->catch->throw->new->TransformerConfigurationException->finally->return->_stylesheetPIHandler->getAssociatedStylesheet
TransformerFactoryImpl#newTransformer():::javax.xml.transform.sax.TransformerFactory implementation:::buildCatalogFeatures->result->new->Properties->new->TransformerImpl->if->result->setURIResolver->if->result->setSecureProcessing->return
TransformerFactoryImpl#newTransformer(Source):::javax.xml.transform.sax.TransformerFactory implementation:::templates->newTemplates->transformer->templates->newTransformer->if->transformer->setURIResolver->return
TransformerFactoryImpl#newTemplates(Source):::javax.xml.transform.sax.TransformerFactory implementation:::templates->if->transletName->getTransletBaseName->if->try->clazz->ObjectFactory->findProviderClass->resetTransientAttributes->new->Class<?>Arr->new->TemplatesImpl->if->templates->setURIResolver->return->catch->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->err->new->ErrorMsg->e->getMessage->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->finally->if->bytecodes->transletClassName->getTransletBaseName->if->if->getBytecodesFromJar->else->getBytecodesFromClasses->if->if->if->new->ErrorMsg->println->else->new->ErrorMsg->println->resetTransientAttributes->new->TemplatesImpl->if->templates->setURIResolver->return->xsltc->new->XSLTC->if->xsltc->setDebug->if->xsltc->setTemplateInlining->else->xsltc->setTemplateInlining->if->xsltc->setSecureProcessing->xsltc->setProperty->xsltc->setProperty->xsltc->setProperty->xsltc->setProperty->buildCatalogFeatures->xsltc->setProperty->xsltc->init->if->xsltc->getExternalExtensionFunctions->if->_xmlFeatures->getFeature->xsltc->setSourceLoader->if->_piParams->get->p->_piParams->get->if->xsltc->setPIParameters->outputType->if->xsltc->getTransletBaseName->setClassName->if->xsltc->setDestDirectory->else->xslName->getStylesheetFileName->if->xslFile->new->File->xslDir->xslFile->getParent->if->xsltc->setDestDirectory->if->xsltc->setPackageName->if->xsltc->setJarFileName->else->input->Util->getInputSource->bytecodes->xsltc->compile->transletName->xsltc->getClassName->if->try->xsltc->outputToJar->catch->finally->resetTransientAttributes->if->try->xsltc->getWarnings->passWarningsToListener->catch->throw->new->TransformerConfigurationException->finally->else->xsltc->printWarnings->if->errs->xsltc->getErrors->err->if->errs->errs->size->get->else->new->ErrorMsg->cause->err->getCause->exc->if->cause->getMessage->new->TransformerConfigurationException->else->err->toString->new->TransformerConfigurationException->if->xsltc->getErrors->passErrorsToListener->try->_errorListener->fatalError->catch->finally->else->xsltc->printErrors->throw->xsltc->getOutputProperties->new->TemplatesImpl->if->templates->setURIResolver->return
TransformerFactoryImpl#newTemplatesHandler():::javax.xml.transform.sax.SAXTransformerFactory implementation:::buildCatalogFeatures->handler->new->TemplatesHandlerImpl->if->handler->setURIResolver->return
TransformerFactoryImpl#newTransformerHandler():::javax.xml.transform.sax.SAXTransformerFactory implementation:::transformer->newTransformer->if->transformer->setURIResolver->return->new->TransformerHandlerImpl
TransformerFactoryImpl#newTransformerHandler(Source):::javax.xml.transform.sax.SAXTransformerFactory implementation:::transformer->newTransformer->if->transformer->setURIResolver->return->new->TransformerHandlerImpl
TransformerFactoryImpl#newTransformerHandler(Templates):::javax.xml.transform.sax.SAXTransformerFactory implementation:::transformer->templates->newTransformer->internal->return->new->TransformerHandlerImpl
TransformerFactoryImpl#newXMLFilter(Source):::javax.xml.transform.sax.SAXTransformerFactory implementation:::templates->newTemplates->if->return->return->newXMLFilter
TransformerFactoryImpl#newXMLFilter(Templates):::javax.xml.transform.sax.SAXTransformerFactory implementation:::try->return->new->com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter->catch->if->try->_errorListener->fatalError->return->catch->new->TransformerConfigurationException->finally->throw->finally
TransformerFactoryImpl#error(TransformerException):::Receive notification of a recoverable error:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println->throw
TransformerFactoryImpl#fatalError(TransformerException):::Receive notification of a non-recoverable error:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println->throw
TransformerFactoryImpl#warning(TransformerException):::Receive notification of a warning:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println
TransformerFactoryImpl#loadSource(String, String, XSLTC):::This method implements XSLTC's SourceLoader interface:::try->source->if->_uriResolver->resolve->if->_xmlFeatures->getFeature->if->CatalogManager->catalogResolver->_catalogUriResolver->resolve->if->return->Util->getInputSource->catch->msg->e->getMessage->new->ErrorMsg->xsltc->getParser->reportError->msg->e->getMessage->new->ErrorMsg->xsltc->getParser->reportError->finally->return
TransformerFactoryImpl#createNewDTMManagerInstance():::Returns a new instance of the XSLTC DTM Manager service.:::return->XSLTCDTMManager->createNewDTMManagerInstance
TransformerHandlerImpl#getSystemId():::Implements javax.xml.transform.sax.TransformerHandler.getSystemId() Get the base ID (URI or system ID) from where relative URLs will be resolved.:::return
TransformerHandlerImpl#setSystemId(String):::Implements javax.xml.transform.sax.TransformerHandler.setSystemId() Get the base ID (URI or system ID) from where relative URLs will be resolved.:::
TransformerHandlerImpl#getTransformer():::Implements javax.xml.transform.sax.TransformerHandler.getTransformer() Get the Transformer associated with this handler, which is needed in order to set parameters and output properties.:::return
TransformerHandlerImpl#setResult(Result):::Implements javax.xml.transform.sax.TransformerHandler.setResult() Enables the user of the TransformerHandler to set the to set the Result for the transformation.:::if->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->if->try->outputHandler->_transformer->getOutputHandler->_transformer->transferOutputProperties->catch->finally->else->if->try->_transformer->setDOM->_transformer->transform->catch->throw->e->getMessage->new->IllegalArgumentException->finally
TransformerHandlerImpl#characters(char[], int, int):::Implements org.xml.sax.ContentHandler.characters() Receive notification of character data.:::_handler->characters
TransformerHandlerImpl#startDocument():::Implements org.xml.sax.ContentHandler.startDocument() Receive notification of the beginning of a document.:::if->err->new->ErrorMsg->throw->err->toString->new->SAXException->if->hasIdCall->_translet->hasIdCall->dtmManager->try->_transformer->getTransformerFactory->createNewDTMManagerInstance->catch->throw->new->SAXException->finally->wsFilter->if->new->DOMWSFilter->else->dtmManager->getDTM->_dom->getBuilder->_dom->setDocumentURI->if->_handler->setDocumentLocator->_handler->startDocument
TransformerHandlerImpl#endDocument():::Implements org.xml.sax.ContentHandler.endDocument() Receive notification of the end of a document.:::_handler->endDocument->if->if->try->_transformer->setDOM->_transformer->transform->catch->throw->new->SAXException->finally->_transformer->setDOM->if->_transformer->getTransletOutputHandlerFactory->getNode->setNode
TransformerHandlerImpl#startElement(String, String, String, Attributes):::Implements org.xml.sax.ContentHandler.startElement() Receive notification of the beginning of an element.:::_handler->startElement
TransformerHandlerImpl#endElement(String, String, String):::Implements org.xml.sax.ContentHandler.endElement() Receive notification of the end of an element.:::_handler->endElement
TransformerHandlerImpl#processingInstruction(String, String):::Implements org.xml.sax.ContentHandler.processingInstruction() Receive notification of a processing instruction.:::_handler->processingInstruction
TransformerHandlerImpl#startCDATA():::Implements org.xml.sax.ext.LexicalHandler.startCDATA():::if->_lexHandler->startCDATA
TransformerHandlerImpl#endCDATA():::Implements org.xml.sax.ext.LexicalHandler.endCDATA():::if->_lexHandler->endCDATA
TransformerHandlerImpl#comment(char[], int, int):::Implements org.xml.sax.ext.LexicalHandler.comment() Receieve notification of a comment:::if->_lexHandler->comment
TransformerHandlerImpl#ignorableWhitespace(char[], int, int):::Implements org.xml.sax.ContentHandler.ignorableWhitespace() Receive notification of ignorable whitespace in element content:::_handler->ignorableWhitespace
TransformerHandlerImpl#setDocumentLocator(Locator):::Implements org.xml.sax.ContentHandler.setDocumentLocator() Receive an object for locating the origin of SAX document events.:::if->_handler->setDocumentLocator
TransformerHandlerImpl#skippedEntity(String):::Implements org.xml.sax.ContentHandler.skippedEntity() Receive notification of a skipped entity.:::_handler->skippedEntity
TransformerHandlerImpl#startPrefixMapping(String, String):::Implements org.xml.sax.ContentHandler.startPrefixMapping() Begin the scope of a prefix-URI Namespace mapping.:::_handler->startPrefixMapping
TransformerHandlerImpl#endPrefixMapping(String):::Implements org.xml.sax.ContentHandler.endPrefixMapping() End the scope of a prefix-URI Namespace mapping.:::_handler->endPrefixMapping
TransformerHandlerImpl#startDTD(String, String, String):::Implements org.xml.sax.ext.LexicalHandler.startDTD():::if->_lexHandler->startDTD
TransformerHandlerImpl#endDTD():::Implements org.xml.sax.ext.LexicalHandler.endDTD():::if->_lexHandler->endDTD
TransformerHandlerImpl#startEntity(String):::Implements org.xml.sax.ext.LexicalHandler.startEntity():::if->_lexHandler->startEntity
TransformerHandlerImpl#endEntity(String):::Implements org.xml.sax.ext.LexicalHandler.endEntity():::if->_lexHandler->endEntity
TransformerHandlerImpl#unparsedEntityDecl(String, String, String, String):::Implements org.xml.sax.DTDHandler.unparsedEntityDecl():::if->_dtdHandler->unparsedEntityDecl
TransformerHandlerImpl#notationDecl(String, String, String):::Implements org.xml.sax.DTDHandler.notationDecl():::if->_dtdHandler->notationDecl
TransformerHandlerImpl#attributeDecl(String, String, String, String, String):::Implements org.xml.sax.ext.DeclHandler.attributeDecl():::if->_declHandler->attributeDecl
TransformerHandlerImpl#elementDecl(String, String):::Implements org.xml.sax.ext.DeclHandler.elementDecl():::if->_declHandler->elementDecl
TransformerHandlerImpl#externalEntityDecl(String, String, String):::Implements org.xml.sax.ext.DeclHandler.externalEntityDecl():::if->_declHandler->externalEntityDecl
TransformerHandlerImpl#internalEntityDecl(String, String):::Implements org.xml.sax.ext.DeclHandler.externalEntityDecl():::if->_declHandler->internalEntityDecl
TransformerHandlerImpl#reset():::Implementation of the reset() method:::
TransformerImpl#isSecureProcessing():::Return the state of the secure processing feature.:::return
TransformerImpl#setSecureProcessing(boolean):::Set the state of the secure processing feature.:::_readerManager->setFeature
TransformerImpl#overrideDefaultParser():::Return the state of the services mechanism feature.:::return
TransformerImpl#setOverrideDefaultParser(boolean):::Set the state of the services mechanism feature.:::
TransformerImpl#getTranslet():::Returns the translet wrapped inside this Transformer or null if this is the identity transform.:::return
TransformerImpl#transform(Source, Result):::Implements JAXP's Transformer.transform():::if->if->err->new->ErrorMsg->throw->err->toString->new->TransformerException->transferOutputProperties->toHandler->getOutputHandler->if->err->new->ErrorMsg->throw->err->toString->new->TransformerException->if->_tfactory->getFeature->_tfactory->getAttribute->_translet->setDOMCache->if->transferOutputProperties->transform->try->if->_tohFactory->getNode->setNode->else->if->if->getXMLEventWriter->_tohFactory->getXMLEventWriter->flush->else->if->getXMLStreamWriter->_tohFactory->getXMLStreamWriter->flush->catch->println->finally
TransformerImpl#getOutputHandler(Result):::Create an output handler for the transformation output based on the type and contents of the TrAX Result object passed to the transform() method.:::_properties->get->_properties->getProperty->TransletOutputHandlerFactory->newInstance->_tohFactory->setEncoding->if->_tohFactory->setOutputMethod->if->_tohFactory->setIndentNumber->try->if->target->handler->target->getHandler->_tohFactory->setHandler->lexicalHandler->target->getLexicalHandler->if->_tohFactory->setLexicalHandler->_tohFactory->setOutputType->return->_tohFactory->getSerializationHandler->else->if->if->getXMLEventWriter->_tohFactory->getXMLEventWriter->setXMLEventWriter->else->if->getXMLStreamWriter->_tohFactory->getXMLStreamWriter->setXMLStreamWriter->_tohFactory->setOutputType->return->_tohFactory->getSerializationHandler->else->if->_tohFactory->getNode->setNode->_tohFactory->getNextSibling->setNextSibling->_tohFactory->setOutputType->return->_tohFactory->getSerializationHandler->else->if->target->_tohFactory->setOutputType->writer->target->getWriter->if->_tohFactory->setWriter->return->_tohFactory->getSerializationHandler->ostream->target->getOutputStream->if->_tohFactory->setOutputStream->return->_tohFactory->getSerializationHandler->systemId->result->getSystemId->if->err->new->ErrorMsg->throw->err->toString->new->TransformerException->url->if->systemId->startsWith->try->uri->new->URI->host->uri->getHost->path->uri->getPath->if->if->else->catch->finally->new->URL->url->getFile->new->FileOutputStream->_tohFactory->setOutputStream->return->_tohFactory->getSerializationHandler->else->if->systemId->startsWith->new->URL->connection->url->openConnection->_tohFactory->connection->getOutputStream->setOutputStream->return->_tohFactory->getSerializationHandler->else->_tohFactory->new->File->new->FileOutputStream->setOutputStream->return->_tohFactory->getSerializationHandler->catch->throw->new->TransformerException->throw->new->TransformerException->throw->new->TransformerException->finally->return
TransformerImpl#setDOM(DOM):::Set the internal DOM that will be used for the next transformation:::
TransformerImpl#getTransformerFactory():::Returns the com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl object that create this Transformer.:::return
TransformerImpl#getTransletOutputHandlerFactory():::Returns the com.sun.org.apache.xalan.internal.xsltc.runtime.output.TransletOutputHandlerFactory object that create the TransletOutputHandler.:::return
TransformerImpl#getErrorListener():::Implements JAXP's Transformer.getErrorListener() Get the error event handler in effect for the transformation.:::return
TransformerImpl#setErrorListener(ErrorListener):::Implements JAXP's Transformer.setErrorListener() Set the error event listener in effect for the transformation:::if->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->if->_translet->new->MessageHandler->setMessageHandler
TransformerImpl#getOutputProperties():::Implements JAXP's Transformer.getOutputProperties():::return->_properties->clone
TransformerImpl#getOutputProperty(String):::Implements JAXP's Transformer.getOutputProperty():::if->validOutputProperty->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->return->_properties->getProperty
TransformerImpl#setOutputProperties(Properties):::Implements JAXP's Transformer.setOutputProperties():::if->names->properties->propertyNames->while->names->hasMoreElements->name->names->nextElement->if->isDefaultProperty->continue->if->validOutputProperty->_properties->properties->getProperty->setProperty->else->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->else->_propertiesClone->clone
TransformerImpl#setOutputProperty(String, String):::Implements JAXP's Transformer.setOutputProperty():::if->validOutputProperty->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->_properties->setProperty
TransformerImpl#transferOutputProperties(SerializationHandler):::This method is used to pass any properties to the output handler when running the identity transform.:::if->return->doctypePublic->doctypeSystem->names->_properties->propertyNames->while->names->hasMoreElements->name->names->nextElement->value->_properties->get->if->continue->if->name->equals->else->if->name->equals->else->if->name->equals->handler->setMediaType->else->if->name->equals->handler->setStandalone->else->if->name->equals->handler->setVersion->else->if->name->equals->handler->value->toLowerCase->equals->setOmitXMLDeclaration->else->if->name->equals->handler->value->toLowerCase->equals->setIndent->else->if->name->equals->if->handler->Integer->parseInt->setIndentAmount->else->if->name->equals->if->handler->Integer->parseInt->setIndentAmount->else->if->name->equals->if->value->equals->handler->setIsStandalone->else->if->name->equals->if->e->new->StringTokenizer->uriAndLocalNames->while->e->hasMoreTokens->token->e->nextToken->lastcolon->token->lastIndexOf->uri->localName->if->token->substring->token->substring->else->if->new->ArrayList<>->uriAndLocalNames->add->uriAndLocalNames->add->handler->setCdataSectionElements->if->handler->setDoctype
TransformerImpl#setParameter(String, Object):::Implements JAXP's Transformer.setParameter() Add a parameter for the transformation:::if->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->if->if->new->HashMap<>->_parameters->put->else->_translet->addParameter
TransformerImpl#clearParameters():::Implements JAXP's Transformer.clearParameters() Clear all parameters set with setParameter:::if->_parameters->clear->else->_translet->clearParameters
TransformerImpl#getParameter(String):::Implements JAXP's Transformer.getParameter() Returns the value of a given parameter:::if->return->_parameters->get->else->return->_translet->getParameter
TransformerImpl#getURIResolver():::Implements JAXP's Transformer.getURIResolver() Set the object currently used to resolve URIs used in document().:::return
TransformerImpl#setURIResolver(URIResolver):::Implements JAXP's Transformer.setURIResolver() Set an object that will be used to resolve URIs used in document().:::
TransformerImpl#retrieveDocument(String, String, Translet):::This class should only be used as a DOMCache for the translet if the URIResolver has been set:::try->if->href->length->resolvedSource->if->_uriResolver->resolve->if->_catalogFeatures->get->if->CatalogManager->catalogResolver->_catalogUriResolver->resolve->if->streamSource->SystemIDResolver->getAbsoluteURI->new->StreamSource->return->getDOM->return->getDOM->catch->if->e->getMessage->postErrorToListener->return->finally
TransformerImpl#error(TransformerException):::Receive notification of a recoverable error:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println->throw
TransformerImpl#fatalError(TransformerException):::Receive notification of a non-recoverable error:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println->throw
TransformerImpl#warning(TransformerException):::Receive notification of a warning:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println
TransformerImpl#reset():::This method resets  the Transformer to its original configuration Transformer code is reset to the same state it was when it was created:::setOutputProperties
Util#getInputSource(XSLTC, Source):::Creates a SAX2 InputSource object from a TrAX Source object:::input->systemId->source->getSystemId->try->if->sax->sax->getInputSource->try->reader->sax->getXMLReader->if->overrideDefaultParser->xsltc->getFeature->JdkXmlUtils->xsltc->isSecureProcessing->getXMLReader->else->reader->setFeature->reader->setFeature->JdkXmlUtils->xsltc->getProperty->setXMLReaderPropertyIfSupport->JdkXmlUtils->xsltc->getProperty->setXMLReaderPropertyIfSupport->lastProperty->try->securityManager->xsltc->getProperty->if->foreach->values->limit->apiProperty->reader->securityManager->getLimitValueAsString->setProperty->if->securityManager->printEntityCountInfo->reader->setProperty->catch->XMLSecurityManager->reader->getClass->getName->printWarning->finally->supportCatalog->useCatalog->xsltc->getFeature->try->reader->setFeature->catch->finally->if->try->cf->xsltc->getProperty->if->foreach->values->reader->f->getPropertyName->cf->get->setProperty->catch->finally->xsltc->setXMLReader->catch->throw->new->TransformerConfigurationException->throw->new->TransformerConfigurationException->finally->else->if->domsrc->dom->domsrc->getNode->dom2sax->new->DOM2SAX->xsltc->setXMLReader->SAXSource->sourceToInputSource->if->domsrc->getSystemId->new->InputSource->else->if->staxSource->staxevent2sax->staxStream2SAX->if->staxSource->getXMLEventReader->xmlEventReader->staxSource->getXMLEventReader->new->StAXEvent2SAX->xsltc->setXMLReader->else->if->staxSource->getXMLStreamReader->xmlStreamReader->staxSource->getXMLStreamReader->new->StAXStream2SAX->xsltc->setXMLReader->SAXSource->sourceToInputSource->if->staxSource->getSystemId->new->InputSource->else->if->stream->istream->stream->getInputStream->reader->stream->getReader->xsltc->setXMLReader->if->new->InputSource->else->if->new->InputSource->else->new->InputSource->else->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->input->setSystemId->catch->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->finally->return
XSLTCSource#setSystemId(String):::Implements javax.xml.transform.Source.setSystemId() Set the system identifier for this Source:::if->_source->setSystemId
XSLTCSource#getSystemId():::Implements javax.xml.transform.Source.getSystemId() Get the system identifier that was set with setSystemId.:::if->return->_source->getSystemId->else->return
XSLTCSource#getDOM(XSLTCDTMManager, AbstractTranslet):::Internal interface which returns a DOM for a given DTMManager and translet.:::idom->_dom->get->if->if->idom->migrateTo->else->source->if->if->_systemId->length->new->StreamSource->else->err->new->ErrorMsg->throw->err->toString->new->SAXException->wsfilter->if->new->DOMWSFilter->hasIdCall->translet->hasIdCall->if->XSLTCDTMManager->newInstance->dtmManager->getDTM->systemId->getSystemId->if->idom->setDocumentURI->_dom->set->return
