DOM2SAX#getContentHandler()::: m2 x get content handler:::return
DOM2SAX#setContentHandler(ContentHandler)::: m2 x set content handler:::if->if
DOM2SAX#startPrefixMapping(String, String):::Begin the scope of namespace prefix:::pushed->uriStack->_nsPrefixes->get->if->if->uriStack->isEmpty->_sax->startPrefixMapping->uriStack->push->else->lastUri->uriStack->peek->if->lastUri->equals->_sax->startPrefixMapping->uriStack->push->else->else->_sax->startPrefixMapping->_nsPrefixes->new->Stack<>->put->uriStack->push->return
DOM2SAX#endPrefixMapping(String)::: m2 x end prefix mapping:::uriStack->_nsPrefixes->get->if->_sax->endPrefixMapping->uriStack->pop
DOM2SAX#parse(InputSource)::: m2 x parse:::parse
DOM2SAX#parse()::: m2 x parse:::if->isIncomplete->_dom->getNodeType->if->_sax->startDocument->parse->_sax->endDocument->else->parse
DOM2SAX#parse(Node):::Traverse the DOM and generate SAX events for a handler:::if->return->switch->node->getNodeType->break->cdata->node->getNodeValue->if->_lex->startCDATA->_sax->cdata->toCharArray->cdata->length->characters->_lex->endCDATA->else->_sax->cdata->toCharArray->cdata->length->characters->break->if->value->node->getNodeValue->_lex->value->toCharArray->value->length->comment->break->_sax->setDocumentLocator->_sax->startDocument->next->node->getFirstChild->while->parse->next->getNextSibling->_sax->endDocument->break->prefix->pushedPrefixes->new->ArrayList<>->attrs->new->AttributesImpl->map->node->getAttributes->length->map->getLength->for->i->for->i->qname->node->getNodeName->uri->node->getNamespaceURI->localName->node->getLocalName->if->colon->qname->lastIndexOf->qname->substring->if->startPrefixMapping->pushedPrefixes->add->if->_saxImpl->startElement->else->_sax->startElement->node->getFirstChild->while->parse->next->getNextSibling->_sax->endElement->nPushedPrefixes->pushedPrefixes->size->for->i->break->_sax->node->getNodeName->node->getNodeValue->processingInstruction->break->data->node->getNodeValue->_sax->data->toCharArray->data->length->characters->break
DOM2SAX#getDTDHandler():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getErrorHandler():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getFeature(String):::This class is only used internally so this method should never be called.:::return
DOM2SAX#setFeature(String, boolean):::This class is only used internally so this method should never be called.:::
DOM2SAX#parse(String):::This class is only used internally so this method should never be called.:::throw->new->IOException
DOM2SAX#setDTDHandler(DTDHandler):::This class is only used internally so this method should never be called.:::
DOM2SAX#setEntityResolver(EntityResolver):::This class is only used internally so this method should never be called.:::
DOM2SAX#getEntityResolver():::This class is only used internally so this method should never be called.:::return
DOM2SAX#setErrorHandler(ErrorHandler):::This class is only used internally so this method should never be called.:::
DOM2SAX#setProperty(String, Object):::This class is only used internally so this method should never be called.:::
DOM2SAX#getProperty(String):::This class is only used internally so this method should never be called.:::return
DOM2SAX#getColumnNumber():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getLineNumber():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getPublicId():::This class is only used internally so this method should never be called.:::return
DOM2SAX#getSystemId():::This class is only used internally so this method should never be called.:::return
DOM2TO#getContentHandler()::: m2 o get content handler:::return
DOM2TO#setContentHandler(ContentHandler)::: m2 o set content handler:::
DOM2TO#parse(InputSource)::: m2 o parse:::parse
DOM2TO#parse()::: m2 o parse:::if->isIncomplete->_dom->getNodeType->if->_handler->startDocument->parse->_handler->endDocument->else->parse
DOM2TO#parse(Node):::Traverse the DOM and generate TO events for a handler:::if->return->switch->node->getNodeType->break->_handler->startCDATA->_handler->node->getNodeValue->characters->_handler->endCDATA->break->_handler->node->getNodeValue->comment->break->setDocumentInfo->_handler->setDocumentLocator->_handler->startDocument->next->node->getFirstChild->while->parse->next->getNextSibling->_handler->endDocument->break->node->getFirstChild->while->parse->next->getNextSibling->break->qname->node->getNodeName->_handler->startElement->colon->prefix->map->node->getAttributes->length->map->getLength->for->i->nm->new->NamespaceMappings->for->i->uri->node->getNamespaceURI->localName->node->getLocalName->if->qname->lastIndexOf->qname->substring->_handler->namespaceAfterStartElement->else->if->_handler->namespaceAfterStartElement->node->getFirstChild->while->parse->next->getNextSibling->_handler->endElement->break->_handler->node->getNodeName->node->getNodeValue->processingInstruction->break->_handler->node->getNodeValue->characters->break
DOM2TO#getDTDHandler():::This class is only used internally so this method should never be called.:::return
DOM2TO#getErrorHandler():::This class is only used internally so this method should never be called.:::return
DOM2TO#getFeature(String):::This class is only used internally so this method should never be called.:::return
DOM2TO#setFeature(String, boolean):::This class is only used internally so this method should never be called.:::
DOM2TO#parse(String):::This class is only used internally so this method should never be called.:::throw->new->IOException
DOM2TO#setDTDHandler(DTDHandler):::This class is only used internally so this method should never be called.:::
DOM2TO#setEntityResolver(EntityResolver):::This class is only used internally so this method should never be called.:::
DOM2TO#getEntityResolver():::This class is only used internally so this method should never be called.:::return
DOM2TO#setErrorHandler(ErrorHandler):::This class is only used internally so this method should never be called.:::
DOM2TO#setProperty(String, Object):::This class is only used internally so this method should never be called.:::
DOM2TO#getProperty(String):::This class is only used internally so this method should never be called.:::return
DOM2TO#getColumnNumber():::This class is only used internally so this method should never be called.:::return
DOM2TO#getLineNumber():::This class is only used internally so this method should never be called.:::return
DOM2TO#getPublicId():::This class is only used internally so this method should never be called.:::return
DOM2TO#getSystemId():::This class is only used internally so this method should never be called.:::return
DOM2TO#setDocumentInfo(Document)::: m2 o set document info:::if->document->getXmlStandalone->_handler->Boolean->document->getXmlStandalone->toString->setStandalone->document->getXmlVersion->setXMLVersion->document->getXmlEncoding->setEncoding
DOM2TO#getXMLVersion()::: m2 o get version:::return
DOM2TO#setXMLVersion(String)::: m2 o set version:::if->_handler->setVersion
DOM2TO#getEncoding()::: m2 o get encoding:::return
DOM2TO#setEncoding(String)::: m2 o set encoding:::if->_handler->setEncoding
DOM2TO#getNodeTypeFromCode(short)::: m2 o get node type from code:::retval->switch->break->break->break->break->break->break->break->break->break->break->break->break->return
OutputSettings#getProperties()::: output settings get properties:::properties->new->Properties->return
SAX2DOM#getDOM()::: x2 m get m:::return
SAX2DOM#characters(char[], int, int)::: x2 m characters:::if->return->last->_nodeStk->peek->if->_textBuffer->append
SAX2DOM#appendTextNode()::: x2 m append text node:::if->_textBuffer->length->last->_nodeStk->peek->if->last->_document->_textBuffer->toString->createTextNode->insertBefore->else->last->_document->_textBuffer->toString->createTextNode->appendChild->_textBuffer->setLength
SAX2DOM#startDocument()::: x2 m start document:::_nodeStk->push
SAX2DOM#endDocument()::: x2 m end document:::_nodeStk->pop
SAX2DOM#setDocumentInfo()::: x2 m set document info:::if->return->try->_document->getXMLVersion->setXmlVersion->catch->finally
SAX2DOM#startElement(String, String, String, Attributes)::: x2 m start element:::appendTextNode->if->setDocumentInfo->tmp->_document->createElementNS->if->nDecls->_namespaceDecls->size->for->i->_namespaceDecls->clear->nattrs->attrs->getLength->for->i->last->_nodeStk->peek->if->last->insertBefore->else->last->appendChild->_nodeStk->push
SAX2DOM#endElement(String, String, String)::: x2 m end element:::appendTextNode->_nodeStk->pop
SAX2DOM#startPrefixMapping(String, String)::: x2 m start prefix mapping:::if->new->ArrayList<>->_namespaceDecls->add->_namespaceDecls->add
SAX2DOM#endPrefixMapping(String)::: x2 m end prefix mapping:::
SAX2DOM#ignorableWhitespace(char[], int, int):::This class is only used internally so this method should never be called.:::
SAX2DOM#processingInstruction(String, String):::adds processing instruction node to DOM.:::appendTextNode->last->_nodeStk->peek->pi->_document->createProcessingInstruction->if->if->last->insertBefore->else->last->appendChild
SAX2DOM#setDocumentLocator(Locator):::This class is only used internally so this method should never be called.:::
SAX2DOM#skippedEntity(String):::This class is only used internally so this method should never be called.:::
SAX2DOM#comment(char[], int, int):::Lexical Handler method to create comment node in DOM tree.:::appendTextNode->last->_nodeStk->peek->comment->_document->new->String->createComment->if->if->last->insertBefore->else->last->appendChild
SAX2DOM#startCDATA()::: x2 m start a:::
SAX2DOM#endCDATA()::: x2 m end a:::
SAX2DOM#startEntity(java.lang.String)::: x2 m start entity:::
SAX2DOM#endDTD()::: x2 m end d:::
SAX2DOM#endEntity(String)::: x2 m end entity:::
SAX2DOM#startDTD(String, String, String)::: x2 m start d:::
SAX2DOM#createDocument(boolean)::: x2 m create document:::if->JdkXmlUtils->getDOMFactory->if->doc->if->_factory->newDocumentBuilder->newDocument->else->synchronized->_factory->newDocumentBuilder->newDocument->return
SAX2StAXBaseWriter#setXMLReporter(XMLReporter)::: x2 st base writer set reporter:::
SAX2StAXBaseWriter#setDocumentLocator(Locator)::: x2 st base writer set document locator:::
SAX2StAXBaseWriter#getCurrentLocation()::: x2 st base writer get current location:::if->return->new->SAXLocation->else->return
SAX2StAXBaseWriter#error(SAXParseException)::: x2 st base writer error:::reportException
SAX2StAXBaseWriter#fatalError(SAXParseException)::: x2 st base writer fatal error:::reportException
SAX2StAXBaseWriter#warning(SAXParseException)::: x2 st base writer warning:::reportException
SAX2StAXBaseWriter#startDocument()::: x2 st base writer start document:::new->ArrayList<>
SAX2StAXBaseWriter#endDocument()::: x2 st base writer end document:::
SAX2StAXBaseWriter#startElement(String, String, String, Attributes)::: x2 st base writer start element:::
SAX2StAXBaseWriter#endElement(String, String, String)::: x2 st base writer end element:::
SAX2StAXBaseWriter#startPrefixMapping(String, String)::: x2 st base writer start prefix mapping:::if->else->if->prefix->equals->return->if->new->ArrayList<>->namespaces->add->namespaces->add
SAX2StAXBaseWriter#endPrefixMapping(String)::: x2 st base writer end prefix mapping:::
SAX2StAXBaseWriter#startCDATA()::: x2 st base writer start a:::if->new->StringBuffer->else->CDATABuffer->setLength
SAX2StAXBaseWriter#characters(char[], int, int)::: x2 st base writer characters:::if->CDATABuffer->append
SAX2StAXBaseWriter#endCDATA()::: x2 st base writer end a:::CDATABuffer->setLength
SAX2StAXBaseWriter#comment(char[], int, int)::: x2 st base writer comment:::
SAX2StAXBaseWriter#endDTD()::: x2 st base writer end d:::
SAX2StAXBaseWriter#endEntity(String)::: x2 st base writer end entity:::
SAX2StAXBaseWriter#startDTD(String, String, String)::: x2 st base writer start d:::
SAX2StAXBaseWriter#startEntity(String)::: x2 st base writer start entity:::
SAX2StAXBaseWriter#reportException(String, SAXException):::Used to report a SAXExceptionto the XMLReporter registered with this handler.:::if->try->reporter->e->getMessage->getCurrentLocation->report->catch->throw->new->SAXException->finally
SAX2StAXBaseWriter#parseQName(String, String[]):::Parses an XML qualified name, and places the resulting prefix and local name in the provided String array.:::prefix->local->idx->qName->indexOf->if->qName->substring->qName->substring->else
SAX2StAXBaseWriter.SAXLocation#getLineNumber()::: location get line number:::return
SAX2StAXBaseWriter.SAXLocation#getColumnNumber()::: location get column number:::return
SAX2StAXBaseWriter.SAXLocation#getCharacterOffset()::: location get character offset:::return
SAX2StAXBaseWriter.SAXLocation#getPublicId()::: location get public id:::return
SAX2StAXBaseWriter.SAXLocation#getSystemId()::: location get system id:::return
SAX2StAXEventWriter#getEventWriter()::: x2 st event writer get event writer:::return
SAX2StAXEventWriter#setEventWriter(XMLEventWriter)::: x2 st event writer set event writer:::
SAX2StAXEventWriter#getEventFactory()::: x2 st event writer get event factory:::return
SAX2StAXEventWriter#setEventFactory(XMLEventFactory)::: x2 st event writer set event factory:::
SAX2StAXEventWriter#startDocument()::: x2 st event writer start document:::super->startDocument->namespaceStack->clear->eventFactory->getCurrentLocation->setLocation
SAX2StAXEventWriter#writeStartDocument()::: x2 st event writer write start document:::try->if->writer->eventFactory->createStartDocument->add->else->try->writer->eventFactory->getEncoding->getXMLVersion->createStartDocument->add->catch->writer->eventFactory->createStartDocument->add->finally->catch->throw->new->SAXException->finally
SAX2StAXEventWriter#endDocument()::: x2 st event writer end document:::eventFactory->getCurrentLocation->setLocation->try->writer->eventFactory->createEndDocument->add->catch->throw->new->SAXException->finally->super->endDocument->namespaceStack->clear
SAX2StAXEventWriter#startElement(String, String, String, Attributes)::: x2 st event writer start element:::if->writeStartDocument->eventFactory->getCurrentLocation->setLocation->events->createStartEvents->namespaceStack->add->try->qname->parseQName->writer->eventFactory->iterator->iterator->createStartElement->add->catch->throw->new->SAXException->finally->super->startElement
SAX2StAXEventWriter#endElement(String, String, String)::: x2 st event writer end element:::super->endElement->eventFactory->getCurrentLocation->setLocation->qname->parseQName->nsList->namespaceStack->namespaceStack->size->remove->nsIter->nsList->iterator->try->writer->eventFactory->createEndElement->add->catch->throw->new->SAXException->finally
SAX2StAXEventWriter#comment(char[], int, int)::: x2 st event writer comment:::if->writeStartDocument->super->comment->eventFactory->getCurrentLocation->setLocation->try->writer->eventFactory->new->String->createComment->add->catch->throw->new->SAXException->finally
SAX2StAXEventWriter#characters(char[], int, int)::: x2 st event writer characters:::super->characters->try->if->eventFactory->getCurrentLocation->setLocation->writer->eventFactory->new->String->createCharacters->add->catch->throw->new->SAXException->finally
SAX2StAXEventWriter#ignorableWhitespace(char[], int, int)::: x2 st event writer ignorable whitespace:::super->ignorableWhitespace->characters
SAX2StAXEventWriter#processingInstruction(String, String)::: x2 st event writer processing instruction:::if->writeStartDocument->super->processingInstruction->try->writer->eventFactory->createProcessingInstruction->add->catch->throw->new->SAXException->finally
SAX2StAXEventWriter#endCDATA()::: x2 st event writer end a:::eventFactory->getCurrentLocation->setLocation->try->writer->eventFactory->CDATABuffer->toString->createCData->add->catch->throw->new->SAXException->finally->super->endCDATA
SAX2StAXEventWriter#createStartEvents(Attributes, Collection[])::: x2 st event writer create start events:::nsMap->attrs->if->nDecls->namespaces->size->for->i->qname->for->i->s->attributes->getLength->nsMap->values
SAX2StAXEventWriter#createNamespace(String, String)::: x2 st event writer create namespace:::if->prefix->length->return->eventFactory->createNamespace->else->return->eventFactory->createNamespace
SAX2StAXStreamWriter#getStreamWriter()::: x2 st stream writer get stream writer:::return
SAX2StAXStreamWriter#setStreamWriter(XMLStreamWriter)::: x2 st stream writer set stream writer:::
SAX2StAXStreamWriter#startDocument()::: x2 st stream writer start document:::super->startDocument
SAX2StAXStreamWriter#endDocument()::: x2 st stream writer end document:::try->writer->writeEndDocument->catch->throw->new->SAXException->finally->super->endDocument
SAX2StAXStreamWriter#startElement(String, String, String, Attributes)::: x2 st stream writer start element:::if->try->if->writer->writeStartDocument->else->try->writer->getXMLVersion->writeStartDocument->catch->writer->writeStartDocument->finally->catch->throw->new->SAXException->finally->try->qname->parseQName->writer->writeStartElement->for->i->s->attributes->getLength->catch->throw->new->SAXException->finally->super->startElement
SAX2StAXStreamWriter#endElement(String, String, String)::: x2 st stream writer end element:::try->writer->writeEndElement->catch->throw->new->SAXException->finally->super->endElement
SAX2StAXStreamWriter#comment(char[], int, int)::: x2 st stream writer comment:::super->comment->try->writer->new->String->writeComment->catch->throw->new->SAXException->finally
SAX2StAXStreamWriter#characters(char[], int, int)::: x2 st stream writer characters:::super->characters->try->if->writer->writeCharacters->catch->throw->new->SAXException->finally
SAX2StAXStreamWriter#endCDATA()::: x2 st stream writer end a:::try->writer->CDATABuffer->toString->writeCData->catch->throw->new->SAXException->finally->super->endCDATA
SAX2StAXStreamWriter#ignorableWhitespace(char[], int, int)::: x2 st stream writer ignorable whitespace:::super->ignorableWhitespace->try->writer->writeCharacters->catch->throw->new->SAXException->finally
SAX2StAXStreamWriter#processingInstruction(String, String)::: x2 st stream writer processing instruction:::super->processingInstruction->try->writer->writeProcessingInstruction->catch->throw->new->SAXException->finally
StAXEvent2SAX#getContentHandler()::: st event2 x get content handler:::return
StAXEvent2SAX#setContentHandler(ContentHandler)::: st event2 x set content handler:::if->if
StAXEvent2SAX#parse(InputSource)::: st event2 x parse:::try->bridge->catch->throw->new->SAXException->finally
StAXEvent2SAX#parse()::: st event2 x parse:::bridge
StAXEvent2SAX#bridge()::: st event2 x bridge:::try->depth->startedAtDocument->event->staxEventReader->peek->if->event->isStartDocument->event->isStartElement->throw->new->IllegalStateException->if->event->getEventType->getVersion->if->encodingSet->getCharacterEncodingScheme->staxEventReader->nextEvent->staxEventReader->nextEvent->handleStartDocument->while->event->getEventType->switch->event->getEventType->event->asCharacters->handleCharacters->break->handlePI->break->handleComment->break->handleDTD->break->handleSpace->break->throw->new->InternalError->staxEventReader->nextEvent->do->switch->event->getEventType->event->asStartElement->handleStartElement->break->event->asEndElement->handleEndElement->break->event->asCharacters->handleCharacters->break->handleEntityReference->break->handlePI->break->handleComment->break->handleDTD->break->handleAttribute->break->handleNamespace->break->handleCDATA->break->handleEntityDecl->break->handleNotationDecl->break->handleSpace->break->throw->new->InternalError->staxEventReader->nextEvent->while->if->while->event->getEventType->switch->event->getEventType->event->asCharacters->handleCharacters->break->handlePI->break->handleComment->break->handleSpace->break->throw->new->InternalError->staxEventReader->nextEvent->handleEndDocument->catch->throw->new->XMLStreamException->finally
StAXEvent2SAX#handleEndDocument()::: st event2 x handle end document:::_sax->endDocument
StAXEvent2SAX#handleStartDocument(XMLEvent)::: st event2 x handle start document:::_sax->new->Locator2->setDocumentLocator->_sax->startDocument
StAXEvent2SAX#handlePI(ProcessingInstruction)::: st event2 x handle i:::try->_sax->event->getTarget->event->getData->processingInstruction->catch->throw->new->XMLStreamException->finally
StAXEvent2SAX#handleCharacters(Characters)::: st event2 x handle characters:::try->_sax->event->getData->toCharArray->event->getData->length->characters->catch->throw->new->XMLStreamException->finally
StAXEvent2SAX#handleEndElement(EndElement)::: st event2 x handle end element:::qName->event->getName->qname->if->qName->getPrefix->qName->getPrefix->trim->length->qName->getPrefix->qName->getLocalPart->try->_sax->qName->getNamespaceURI->qName->getLocalPart->endElement->for->i->event->getNamespaces->i->hasNext->catch->throw->new->XMLStreamException->finally
StAXEvent2SAX#handleStartElement(StartElement)::: st event2 x handle start element:::try->for->i->event->getNamespaces->i->hasNext->qName->event->getName->prefix->qName->getPrefix->rawname->if->prefix->length->qName->getLocalPart->else->qName->getLocalPart->saxAttrs->getAttributes->_sax->qName->getNamespaceURI->qName->getLocalPart->startElement->catch->throw->new->XMLStreamException->finally
StAXEvent2SAX#getAttributes(StartElement):::Get the attributes associated with the given START_ELEMENT StAXevent.:::attrs->new->AttributesImpl->if->event->isStartElement->throw->new->InternalError->for->i->event->getAttributes->i->hasNext->return
StAXEvent2SAX#handleNamespace()::: st event2 x handle namespace:::
StAXEvent2SAX#handleAttribute()::: st event2 x handle attribute:::
StAXEvent2SAX#handleDTD()::: st event2 x handle d:::
StAXEvent2SAX#handleComment()::: st event2 x handle comment:::
StAXEvent2SAX#handleEntityReference()::: st event2 x handle entity reference:::
StAXEvent2SAX#handleSpace()::: st event2 x handle space:::
StAXEvent2SAX#handleNotationDecl()::: st event2 x handle notation decl:::
StAXEvent2SAX#handleEntityDecl()::: st event2 x handle entity decl:::
StAXEvent2SAX#handleCDATA()::: st event2 x handle a:::
StAXEvent2SAX#getDTDHandler():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getErrorHandler():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getFeature(String):::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#setFeature(String, boolean):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#parse(String):::This class is only used internally so this method should never be called.:::throw->new->IOException
StAXEvent2SAX#setDTDHandler(DTDHandler):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#setEntityResolver(EntityResolver):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#getEntityResolver():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#setErrorHandler(ErrorHandler):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#setProperty(String, Object):::This class is only used internally so this method should never be called.:::
StAXEvent2SAX#getProperty(String):::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getColumnNumber():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getLineNumber():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getPublicId():::This class is only used internally so this method should never be called.:::return
StAXEvent2SAX#getSystemId():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getContentHandler()::: st stream2 x get content handler:::return
StAXStream2SAX#setContentHandler(ContentHandler)::: st stream2 x set content handler:::if->if
StAXStream2SAX#parse(InputSource)::: st stream2 x parse:::try->bridge->catch->throw->new->SAXException->finally
StAXStream2SAX#parse()::: st stream2 x parse:::bridge
StAXStream2SAX#parse(String):::This class is only used internally so this method should never be called.:::throw->new->IOException
StAXStream2SAX#bridge()::: st stream2 x bridge:::try->depth->event->staxStreamReader->getEventType->if->staxStreamReader->next->if->staxStreamReader->nextTag->if->throw->new->IllegalStateException->handleStartDocument->do->switch->handleStartElement->break->handleEndElement->break->handleCharacters->break->handleEntityReference->break->handlePI->break->handleComment->break->handleDTD->break->handleAttribute->break->handleNamespace->break->handleCDATA->break->handleEntityDecl->break->handleNotationDecl->break->handleSpace->break->throw->new->InternalError->staxStreamReader->next->while->handleEndDocument->catch->throw->new->XMLStreamException->finally
StAXStream2SAX#handleEndDocument()::: st stream2 x handle end document:::_sax->endDocument
StAXStream2SAX#handleStartDocument()::: st stream2 x handle start document:::_sax->new->Locator2->setDocumentLocator->_sax->startDocument
StAXStream2SAX#handlePI()::: st stream2 x handle i:::try->_sax->staxStreamReader->getPITarget->staxStreamReader->getPIData->processingInstruction->catch->throw->new->XMLStreamException->finally
StAXStream2SAX#handleCharacters()::: st stream2 x handle characters:::textLength->staxStreamReader->getTextLength->chars->new->charArr->staxStreamReader->getTextCharacters->try->_sax->characters->catch->throw->new->XMLStreamException->finally
StAXStream2SAX#handleEndElement()::: st stream2 x handle end element:::qName->staxStreamReader->getName->try->qname->if->qName->getPrefix->qName->getPrefix->trim->length->qName->getPrefix->qName->getLocalPart->_sax->qName->getNamespaceURI->qName->getLocalPart->endElement->nsCount->staxStreamReader->getNamespaceCount->for->i->catch->throw->new->XMLStreamException->finally
StAXStream2SAX#handleStartElement()::: st stream2 x handle start element:::try->nsCount->staxStreamReader->getNamespaceCount->for->i->qName->staxStreamReader->getName->prefix->qName->getPrefix->rawname->if->prefix->length->qName->getLocalPart->else->qName->getLocalPart->attrs->getAttributes->_sax->qName->getNamespaceURI->qName->getLocalPart->startElement->catch->throw->new->XMLStreamException->finally
StAXStream2SAX#getAttributes():::Get the attributes associated with the given START_ELEMENT or ATTRIBUTE StAXevent.:::attrs->new->AttributesImpl->eventType->staxStreamReader->getEventType->if->throw->new->InternalError->for->i->staxStreamReader->getAttributeCount->return
StAXStream2SAX#handleNamespace()::: st stream2 x handle namespace:::
StAXStream2SAX#handleAttribute()::: st stream2 x handle attribute:::
StAXStream2SAX#handleDTD()::: st stream2 x handle d:::
StAXStream2SAX#handleComment()::: st stream2 x handle comment:::
StAXStream2SAX#handleEntityReference()::: st stream2 x handle entity reference:::
StAXStream2SAX#handleSpace()::: st stream2 x handle space:::
StAXStream2SAX#handleNotationDecl()::: st stream2 x handle notation decl:::
StAXStream2SAX#handleEntityDecl()::: st stream2 x handle entity decl:::
StAXStream2SAX#handleCDATA()::: st stream2 x handle a:::
StAXStream2SAX#getDTDHandler():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getErrorHandler():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getFeature(String):::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#setFeature(String, boolean):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#setDTDHandler(DTDHandler):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#setEntityResolver(EntityResolver):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#getEntityResolver():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#setErrorHandler(ErrorHandler):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#setProperty(String, Object):::This class is only used internally so this method should never be called.:::
StAXStream2SAX#getProperty(String):::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getColumnNumber():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getLineNumber():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getPublicId():::This class is only used internally so this method should never be called.:::return
StAXStream2SAX#getSystemId():::This class is only used internally so this method should never be called.:::return
TemplatesHandlerImpl#getSystemId():::Implements javax.xml.transform.sax.TemplatesHandler.getSystemId() Get the base ID (URI or system ID) from where relative URLs will be resolved.:::return
TemplatesHandlerImpl#setSystemId(String):::Implements javax.xml.transform.sax.TemplatesHandler.setSystemId() Get the base ID (URI or system ID) from where relative URLs will be resolved.:::
TemplatesHandlerImpl#setURIResolver(URIResolver):::Store URIResolver needed for Transformers.:::
TemplatesHandlerImpl#getTemplates():::Implements javax.xml.transform.sax.TemplatesHandler.getTemplates() When a TemplatesHandler object is used as a ContentHandler or DocumentHandler for the parsing of transformation instructions, it creates a Templates object, which the caller can get once the SAX events have been completed.:::return
TemplatesHandlerImpl#loadSource(String, String, XSLTC):::This method implements XSLTC's SourceLoader interface:::try->source->_uriResolver->resolve->if->return->Util->getInputSource->catch->finally->return
TemplatesHandlerImpl#startDocument():::Re-initialize parser and forward SAX2 event.:::xsltc->_parser->getXSLTC->xsltc->init->xsltc->setOutputType->_parser->startDocument
TemplatesHandlerImpl#endDocument():::Just forward SAX2 event to parser object.:::_parser->endDocument->try->xsltc->_parser->getXSLTC->transletName->if->Util->baseName->else->_tfactory->getAttribute->xsltc->setClassName->xsltc->getClassName->stylesheet->root->_parser->getDocumentRoot->if->_parser->errorsFound->_parser->makeStylesheet->stylesheet->setSystemId->stylesheet->setParentStylesheet->if->xsltc->getTemplateInlining->stylesheet->setTemplateInlining->else->stylesheet->setTemplateInlining->if->_catalogFeatures->get->stylesheet->setSourceLoader->_parser->setCurrentStylesheet->xsltc->setStylesheet->_parser->createAST->if->_parser->errorsFound->stylesheet->xsltc->isMultiDocument->setMultiDocument->stylesheet->xsltc->hasIdCall->setHasIdCall->synchronized->xsltc->getClass->stylesheet->translate->if->_parser->errorsFound->bytecodes->xsltc->getBytecodes->if->xsltc->getBytecodes->_parser->getOutputProperties->new->TemplatesImpl->if->_templates->setURIResolver->else->errorMessage->new->StringBuilder->errors->_parser->getErrors->count->errors->size->for->i->throw->errorMessage->toString->new->TransformerException->new->SAXException->catch->throw->new->SAXException->finally
TemplatesHandlerImpl#startPrefixMapping(String, String):::Just forward SAX2 event to parser object.:::_parser->startPrefixMapping
TemplatesHandlerImpl#endPrefixMapping(String):::Just forward SAX2 event to parser object.:::_parser->endPrefixMapping
TemplatesHandlerImpl#startElement(String, String, String, Attributes):::Just forward SAX2 event to parser object.:::_parser->startElement
TemplatesHandlerImpl#endElement(String, String, String):::Just forward SAX2 event to parser object.:::_parser->endElement
TemplatesHandlerImpl#characters(char[], int, int):::Just forward SAX2 event to parser object.:::_parser->characters
TemplatesHandlerImpl#processingInstruction(String, String):::Just forward SAX2 event to parser object.:::_parser->processingInstruction
TemplatesHandlerImpl#ignorableWhitespace(char[], int, int):::Just forward SAX2 event to parser object.:::_parser->ignorableWhitespace
TemplatesHandlerImpl#skippedEntity(String):::Just forward SAX2 event to parser object.:::_parser->skippedEntity
TemplatesHandlerImpl#setDocumentLocator(Locator):::Set internal system Id and forward SAX2 event to parser object.:::locator->getSystemId->setSystemId->_parser->setDocumentLocator
TemplatesImpl.TransletClassLoader#loadClass(String)::: translet class loader load class:::ret->if->_loadedExternalExtensionFunctions->get->if->super->loadClass->return
TemplatesImpl.TransletClassLoader#defineClass(byte[]):::Access to final protected superclass member from outer class.:::return->defineClass
TemplatesImpl.TransletClassLoader#defineClass(byte[], ProtectionDomain)::: translet class loader define class:::return->defineClass
TemplatesImpl#init(String, Properties, int, TransformerFactoryImpl)::: templates impl init:::tfactory->overrideDefaultParser->tfactory->getAttribute
TemplatesImpl#readObject(ObjectInputStream)::: Overrides the default readObject implementation since we decided  it would be cleaner not to serialize the entire tranformer  factory:::security->System->getSecurityManager->if->temp->SecuritySupport->getSystemProperty->if->temp->length->temp->equalsIgnoreCase->err->new->ErrorMsg->throw->err->toString->new->UnsupportedOperationException->gf->is->readFields->gf->get->gf->get->gf->get->gf->get->gf->get->gf->get->if->is->readBoolean->is->readObject->new->TransformerFactoryImpl
TemplatesImpl#writeObject(ObjectOutputStream)::: This is to fix bugzilla bug 22438  If the user defined class implements URIResolver and Serializable  then we want it to get serialized:::if->throw->new->NotSerializableException->pf->os->putFields->pf->put->pf->put->pf->put->pf->put->pf->put->pf->put->os->writeFields->if->os->writeBoolean->os->writeObject->else->os->writeBoolean
TemplatesImpl#overrideDefaultParser():::Return the state of the services mechanism feature.:::return
TemplatesImpl#setURIResolver(URIResolver):::Store URIResolver needed for Transformers.:::
TemplatesImpl#setTransletBytecodes(byte[][]):::The TransformerFactory must pass us the translet bytecodes using this method before we can create any translet instances  Note: This method is private for security reasons:::
TemplatesImpl#getTransletBytecodes():::Returns the translet bytecodes stored in this template  Note: This method is private for security reasons:::return
TemplatesImpl#getTransletClasses():::Returns the translet bytecodes stored in this template  Note: This method is private for security reasons:::try->if->defineTransletClasses->catch->finally->return
TemplatesImpl#getTransletIndex():::Returns the index of the main class in array of bytecodes:::try->if->defineTransletClasses->catch->finally->return
TemplatesImpl#setTransletName(String):::The TransformerFactory should call this method to set the translet name:::
TemplatesImpl#getTransletName():::Returns the name of the main translet class stored in this template:::return
TemplatesImpl#createModule(ModuleDescriptor, ClassLoader):::Creates a module layer with one module that is defined to the given class loader.:::mn->descriptor->name->mref->new->ModuleReference->finder->new->ModuleFinder->bootLayer->ModuleLayer->boot->cf->bootLayer->configuration->ModuleFinder->of->Set->of->resolve->pa->bootLayer->defineModules->layer->AccessController->doPrivileged->m->layer->findModule->get->return
TemplatesImpl#defineTransletClasses():::Defines the translet class and auxiliary classes:::if->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->loader->AccessController->new->PrivilegedAction<TransletClassLoader>->doPrivileged->try->classCount->new->Class<?>Arr->if->new->HashMap<>->mn->pn->_tfactory->getPackageName->descriptor->ModuleDescriptor->Set->of->newModule->requires->Set->of->exports->build->m->createModule->thisModule->getModule->perms->new->RuntimePermission->newPermissionCollection->Arrays->asList->thisModule->addExports->perms->new->RuntimePermission->add->forEach->codeSource->new->CodeSource->pd->new->ProtectionDomain->thisModule->addReads->for->i->if->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->catch->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->finally
TemplatesImpl#getTransletInstance():::This method generates an instance of the translet class that is wrapped inside this Template:::try->if->return->if->defineTransletClasses->translet->getConstructor->newInstance->translet->postInitialization->translet->setTemplates->translet->setOverrideDefaultParser->translet->setAllowedProtocols->if->translet->setAuxiliaryClasses->return->catch->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->finally
TemplatesImpl#newTransformer():::Implements JAXP's Templates.newTransformer():::transformer->getTransletInstance->new->TransformerImpl->if->transformer->setURIResolver->if->_tfactory->getFeature->transformer->setSecureProcessing->return
TemplatesImpl#getOutputProperties():::Implements JAXP's Templates.getOutputProperties():::try->return->newTransformer->getOutputProperties->catch->return->finally
TemplatesImpl#getStylesheetDOM():::Return the thread local copy of the stylesheet DOM.:::return->_sdom->get
TemplatesImpl#setStylesheetDOM(DOM):::Set the thread local copy of the stylesheet DOM.:::_sdom->set
TransformerFactoryImpl#getExternalExtensionsMap()::: transformer factory impl get external extensions map:::return
TransformerFactoryImpl#setErrorListener(ErrorListener):::javax.xml.transform.sax.TransformerFactory implementation:::if->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException
TransformerFactoryImpl#getErrorListener():::javax.xml.transform.sax.TransformerFactory implementation:::return
TransformerFactoryImpl#getPackageName():::Returns the package name.:::return
TransformerFactoryImpl#getAttribute(String):::javax.xml.transform.sax.TransformerFactory implementation:::if->name->equals->return->else->if->name->equals->return->else->if->name->equals->return->else->if->name->equals->if->return->else->return->else->if->name->equals->return->else->if->name->equals->return->else->if->equals->return->else->if->equals->return->else->if->equals->return->else->if->equals->return->else->if->equals->return->buildCatalogFeatures->else->if->equals->return->propertyValue->_xmlSecurityManager->getLimitAsString->if->return->else->_xmlSecurityPropertyMgr->getValue->if->return->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException
TransformerFactoryImpl#setAttribute(String, Object):::javax.xml.transform.sax.TransformerFactory implementation:::if->name->equals->return->else->if->name->equals->return->else->if->name->equals->return->else->if->name->equals->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->return->else->if->equalsIgnoreCase->return->else->if->name->equals->if->try->Integer->parseInt->return->catch->finally->else->if->return->else->if->name->equals->if->return->else->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->else->if->equals->CatalogFeatures->builder->with->return->else->if->equals->CatalogFeatures->builder->with->return->else->if->equals->CatalogFeatures->builder->with->return->else->if->equals->CatalogFeatures->builder->with->return->else->if->equals->JdkXmlUtils->getValue->return->if->_xmlSecurityManager->setLimit->return->if->_xmlSecurityPropertyMgr->setValue->_xmlSecurityPropertyMgr->getValue->_xmlSecurityPropertyMgr->getValue->return->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException
TransformerFactoryImpl#setFeature(String, boolean):::Set a feature for this TransformerFactory and Transformers or Templates created by this factory.   Feature names are fully qualified java.net.URIs:::if->err->new->ErrorMsg->throw->err->toString->new->NullPointerException->else->if->name->equals->if->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->_xmlSecurityManager->setSecureProcessing->if->_xmlSecurityPropertyMgr->setValue->_xmlSecurityPropertyMgr->setValue->_xmlSecurityPropertyMgr->getValue->_xmlSecurityPropertyMgr->getValue->if->_xmlFeatures->setFeature->else->if->name->equals->if->return->if->_xmlFeatures->setFeature->if->name->equals->name->equals->_xmlFeatures->getFeature->return->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException
TransformerFactoryImpl#getFeature(String):::javax.xml.transform.sax.TransformerFactory implementation:::features->if->err->new->ErrorMsg->throw->err->toString->new->NullPointerException->for->i->if->name->equals->return->index->_xmlFeatures->getIndex->if->return->_xmlFeatures->getFeature->return
TransformerFactoryImpl#overrideDefaultParser():::Return the state of the services mechanism feature.:::return
TransformerFactoryImpl#getJdkXmlFeatures()::: transformer factory impl get jdk xml features:::return
TransformerFactoryImpl#getURIResolver():::javax.xml.transform.sax.TransformerFactory implementation:::return
TransformerFactoryImpl#setURIResolver(URIResolver):::javax.xml.transform.sax.TransformerFactory implementation:::
TransformerFactoryImpl#getAssociatedStylesheet(Source, String, String, String):::javax.xml.transform.sax.TransformerFactory implementation:::baseId->reader->isource->_stylesheetPIHandler->new->StylesheetPIHandler->try->if->domsrc->domsrc->getSystemId->node->domsrc->getNode->dom2sax->new->DOM2SAX->_stylesheetPIHandler->setBaseId->dom2sax->setContentHandler->dom2sax->parse->else->if->getXMLReader->SAXSource->sourceToInputSource->isource->getSystemId->if->JdkXmlUtils->getXMLReader->_stylesheetPIHandler->setBaseId->reader->setContentHandler->reader->parse->if->_stylesheetPIHandler->setURIResolver->catch->throw->new->TransformerConfigurationException->finally->return->_stylesheetPIHandler->getAssociatedStylesheet
TransformerFactoryImpl#newTransformer():::javax.xml.transform.sax.TransformerFactory implementation:::buildCatalogFeatures->result->new->Properties->new->TransformerImpl->if->result->setURIResolver->if->result->setSecureProcessing->return
TransformerFactoryImpl#newTransformer(Source):::javax.xml.transform.sax.TransformerFactory implementation:::templates->newTemplates->transformer->templates->newTransformer->if->transformer->setURIResolver->return
TransformerFactoryImpl#passWarningsToListener(List):::Pass warning messages from the compiler to the error listener:::if->return->count->messages->size->for->pos
TransformerFactoryImpl#passErrorsToListener(List):::Pass error messages from the compiler to the error listener:::try->if->return->count->messages->size->for->pos->catch->finally
TransformerFactoryImpl#newTemplates(Source):::javax.xml.transform.sax.TransformerFactory implementation:::templates->if->transletName->getTransletBaseName->if->try->clazz->ObjectFactory->findProviderClass->resetTransientAttributes->new->Class<?>Arr->new->TemplatesImpl->if->templates->setURIResolver->return->catch->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->err->new->ErrorMsg->e->getMessage->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->finally->if->bytecodes->transletClassName->getTransletBaseName->if->if->getBytecodesFromJar->else->getBytecodesFromClasses->if->if->if->new->ErrorMsg->println->else->new->ErrorMsg->println->resetTransientAttributes->new->TemplatesImpl->if->templates->setURIResolver->return->xsltc->new->XSLTC->if->xsltc->setDebug->if->xsltc->setTemplateInlining->else->xsltc->setTemplateInlining->if->xsltc->setSecureProcessing->xsltc->setProperty->xsltc->setProperty->xsltc->setProperty->xsltc->setProperty->buildCatalogFeatures->xsltc->setProperty->xsltc->init->if->xsltc->getExternalExtensionFunctions->if->_xmlFeatures->getFeature->xsltc->setSourceLoader->if->_piParams->get->p->_piParams->get->if->xsltc->setPIParameters->outputType->if->xsltc->getTransletBaseName->setClassName->if->xsltc->setDestDirectory->else->xslName->getStylesheetFileName->if->xslFile->new->File->xslDir->xslFile->getParent->if->xsltc->setDestDirectory->if->xsltc->setPackageName->if->xsltc->setJarFileName->else->input->Util->getInputSource->bytecodes->xsltc->compile->transletName->xsltc->getClassName->if->try->xsltc->outputToJar->catch->finally->resetTransientAttributes->if->try->xsltc->getWarnings->passWarningsToListener->catch->throw->new->TransformerConfigurationException->finally->else->xsltc->printWarnings->if->errs->xsltc->getErrors->err->if->errs->errs->size->get->else->new->ErrorMsg->cause->err->getCause->exc->if->cause->getMessage->new->TransformerConfigurationException->else->err->toString->new->TransformerConfigurationException->if->xsltc->getErrors->passErrorsToListener->try->_errorListener->fatalError->catch->finally->else->xsltc->printErrors->throw->xsltc->getOutputProperties->new->TemplatesImpl->if->templates->setURIResolver->return
TransformerFactoryImpl#newTemplatesHandler():::javax.xml.transform.sax.SAXTransformerFactory implementation:::buildCatalogFeatures->handler->new->TemplatesHandlerImpl->if->handler->setURIResolver->return
TransformerFactoryImpl#newTransformerHandler():::javax.xml.transform.sax.SAXTransformerFactory implementation:::transformer->newTransformer->if->transformer->setURIResolver->return->new->TransformerHandlerImpl
TransformerFactoryImpl#newTransformerHandler(Source):::javax.xml.transform.sax.SAXTransformerFactory implementation:::transformer->newTransformer->if->transformer->setURIResolver->return->new->TransformerHandlerImpl
TransformerFactoryImpl#newTransformerHandler(Templates):::javax.xml.transform.sax.SAXTransformerFactory implementation:::transformer->templates->newTransformer->internal->return->new->TransformerHandlerImpl
TransformerFactoryImpl#newXMLFilter(Source):::javax.xml.transform.sax.SAXTransformerFactory implementation:::templates->newTemplates->if->return->return->newXMLFilter
TransformerFactoryImpl#newXMLFilter(Templates):::javax.xml.transform.sax.SAXTransformerFactory implementation:::try->return->new->com.sun.org.apache.xalan.internal.xsltc.trax.TrAXFilter->catch->if->try->_errorListener->fatalError->return->catch->new->TransformerConfigurationException->finally->throw->finally
TransformerFactoryImpl#error(TransformerException):::Receive notification of a recoverable error:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println->throw
TransformerFactoryImpl#fatalError(TransformerException):::Receive notification of a non-recoverable error:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println->throw
TransformerFactoryImpl#warning(TransformerException):::Receive notification of a warning:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println
TransformerFactoryImpl#loadSource(String, String, XSLTC):::This method implements XSLTC's SourceLoader interface:::try->source->if->_uriResolver->resolve->if->_xmlFeatures->getFeature->if->CatalogManager->catalogResolver->_catalogUriResolver->resolve->if->return->Util->getInputSource->catch->msg->e->getMessage->new->ErrorMsg->xsltc->getParser->reportError->msg->e->getMessage->new->ErrorMsg->xsltc->getParser->reportError->finally->return
TransformerFactoryImpl#buildCatalogFeatures():::Build the CatalogFeatures object when a newTemplates or newTransformer is created:::if->cfBuilder->build->_catalogFeatures->get->_catalogFeatures->get->_catalogFeatures->get->_catalogFeatures->get->return
TransformerFactoryImpl#resetTransientAttributes():::Reset the per-session attributes to their default values:::
TransformerFactoryImpl#getBytecodesFromClasses(Source, String):::Load the translet classes from local .class files and return the bytecode array.:::if->return->xslFileName->getStylesheetFileName->xslFile->if->new->File->transletName->lastDotIndex->fullClassName->lastIndexOf->if->fullClassName->substring->else->transletPath->fullClassName->replace->if->else->if->xslFile->getParent->xslFile->getParent->else->transletFile->new->File->if->transletFile->exists->return->if->xslFile->exists->xslTimestamp->xslFile->lastModified->transletTimestamp->transletFile->lastModified->if->return->bytecodes->new->ArrayList<>->fileLength->transletFile->length->if->input->try->new->FileInputStream->catch->return->finally->bytes->new->byteArr->try->readFromInputStream->input->close->catch->return->finally->bytecodes->add->else->return->transletParentDir->transletFile->getParent->if->SecuritySupport->getSystemProperty->transletParentFile->new->File->transletAuxPrefix->auxfiles->transletParentFile->new->FilenameFilter->listFiles->for->i->count->bytecodes->size->if->result->new->byteArrs->for->i->return->else->return
TransformerFactoryImpl#getBytecodesFromJar(Source, String):::Load the translet classes from the jar file and return the bytecode.:::xslFileName->getStylesheetFileName->xslFile->if->new->File->jarPath->if->else->if->xslFile->getParent->xslFile->getParent->else->file->new->File->if->file->exists->return->if->xslFile->exists->xslTimestamp->xslFile->lastModified->transletTimestamp->file->lastModified->if->return->jarFile->try->new->ZipFile->catch->return->finally->transletPath->fullClassName->replace->transletAuxPrefix->transletFullName->bytecodes->new->ArrayList<>->entries->jarFile->entries->while->entries->hasMoreElements->entry->entries->nextElement->entryName->entry->getName->if->entry->getSize->entryName->equals->entryName->endsWith->entryName->startsWith->try->input->jarFile->getInputStream->size->entry->getSize->bytes->new->byteArr->readFromInputStream->input->close->bytecodes->add->catch->return->finally->count->bytecodes->size->if->result->new->byteArrs->for->i->return->else->return
TransformerFactoryImpl#readFromInputStream(byte[], InputStream, int):::Read a given number of bytes from the InputStream into a byte array.:::n->offset->length->while->input->read
TransformerFactoryImpl#getTransletBaseName(Source):::Return the base class name of the translet:::transletBaseName->if->_transletName->equals->return->else->systemId->source->getSystemId->if->baseName->Util->baseName->if->Util->noExtName->Util->toJavaName->return
TransformerFactoryImpl#getStylesheetFileName(Source)::: Return the local file name from the systemId of the Source object:::systemId->source->getSystemId->if->file->new->File->if->file->exists->return->else->url->try->new->URL->catch->return->finally->if->url->getProtocol->equals->return->url->getFile->else->return->else->return
TransformerFactoryImpl#createNewDTMManagerInstance():::Returns a new instance of the XSLTC DTM Manager service.:::return->XSLTCDTMManager->createNewDTMManagerInstance
TransformerHandlerImpl#getSystemId():::Implements javax.xml.transform.sax.TransformerHandler.getSystemId() Get the base ID (URI or system ID) from where relative URLs will be resolved.:::return
TransformerHandlerImpl#setSystemId(String):::Implements javax.xml.transform.sax.TransformerHandler.setSystemId() Get the base ID (URI or system ID) from where relative URLs will be resolved.:::
TransformerHandlerImpl#getTransformer():::Implements javax.xml.transform.sax.TransformerHandler.getTransformer() Get the Transformer associated with this handler, which is needed in order to set parameters and output properties.:::return
TransformerHandlerImpl#setResult(Result):::Implements javax.xml.transform.sax.TransformerHandler.setResult() Enables the user of the TransformerHandler to set the to set the Result for the transformation.:::if->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->if->try->outputHandler->_transformer->getOutputHandler->_transformer->transferOutputProperties->catch->finally->else->if->try->_transformer->setDOM->_transformer->transform->catch->throw->e->getMessage->new->IllegalArgumentException->finally
TransformerHandlerImpl#characters(char[], int, int):::Implements org.xml.sax.ContentHandler.characters() Receive notification of character data.:::_handler->characters
TransformerHandlerImpl#startDocument():::Implements org.xml.sax.ContentHandler.startDocument() Receive notification of the beginning of a document.:::if->err->new->ErrorMsg->throw->err->toString->new->SAXException->if->hasIdCall->_translet->hasIdCall->dtmManager->try->_transformer->getTransformerFactory->createNewDTMManagerInstance->catch->throw->new->SAXException->finally->wsFilter->if->new->DOMWSFilter->else->dtmManager->getDTM->_dom->getBuilder->_dom->setDocumentURI->if->_handler->setDocumentLocator->_handler->startDocument
TransformerHandlerImpl#endDocument():::Implements org.xml.sax.ContentHandler.endDocument() Receive notification of the end of a document.:::_handler->endDocument->if->if->try->_transformer->setDOM->_transformer->transform->catch->throw->new->SAXException->finally->_transformer->setDOM->if->_transformer->getTransletOutputHandlerFactory->getNode->setNode
TransformerHandlerImpl#startElement(String, String, String, Attributes):::Implements org.xml.sax.ContentHandler.startElement() Receive notification of the beginning of an element.:::_handler->startElement
TransformerHandlerImpl#endElement(String, String, String):::Implements org.xml.sax.ContentHandler.endElement() Receive notification of the end of an element.:::_handler->endElement
TransformerHandlerImpl#processingInstruction(String, String):::Implements org.xml.sax.ContentHandler.processingInstruction() Receive notification of a processing instruction.:::_handler->processingInstruction
TransformerHandlerImpl#startCDATA():::Implements org.xml.sax.ext.LexicalHandler.startCDATA():::if->_lexHandler->startCDATA
TransformerHandlerImpl#endCDATA():::Implements org.xml.sax.ext.LexicalHandler.endCDATA():::if->_lexHandler->endCDATA
TransformerHandlerImpl#comment(char[], int, int):::Implements org.xml.sax.ext.LexicalHandler.comment() Receieve notification of a comment:::if->_lexHandler->comment
TransformerHandlerImpl#ignorableWhitespace(char[], int, int):::Implements org.xml.sax.ContentHandler.ignorableWhitespace() Receive notification of ignorable whitespace in element content:::_handler->ignorableWhitespace
TransformerHandlerImpl#setDocumentLocator(Locator):::Implements org.xml.sax.ContentHandler.setDocumentLocator() Receive an object for locating the origin of SAX document events.:::if->_handler->setDocumentLocator
TransformerHandlerImpl#skippedEntity(String):::Implements org.xml.sax.ContentHandler.skippedEntity() Receive notification of a skipped entity.:::_handler->skippedEntity
TransformerHandlerImpl#startPrefixMapping(String, String):::Implements org.xml.sax.ContentHandler.startPrefixMapping() Begin the scope of a prefix-URI Namespace mapping.:::_handler->startPrefixMapping
TransformerHandlerImpl#endPrefixMapping(String):::Implements org.xml.sax.ContentHandler.endPrefixMapping() End the scope of a prefix-URI Namespace mapping.:::_handler->endPrefixMapping
TransformerHandlerImpl#startDTD(String, String, String):::Implements org.xml.sax.ext.LexicalHandler.startDTD():::if->_lexHandler->startDTD
TransformerHandlerImpl#endDTD():::Implements org.xml.sax.ext.LexicalHandler.endDTD():::if->_lexHandler->endDTD
TransformerHandlerImpl#startEntity(String):::Implements org.xml.sax.ext.LexicalHandler.startEntity():::if->_lexHandler->startEntity
TransformerHandlerImpl#endEntity(String):::Implements org.xml.sax.ext.LexicalHandler.endEntity():::if->_lexHandler->endEntity
TransformerHandlerImpl#unparsedEntityDecl(String, String, String, String):::Implements org.xml.sax.DTDHandler.unparsedEntityDecl():::if->_dtdHandler->unparsedEntityDecl
TransformerHandlerImpl#notationDecl(String, String, String):::Implements org.xml.sax.DTDHandler.notationDecl():::if->_dtdHandler->notationDecl
TransformerHandlerImpl#attributeDecl(String, String, String, String, String):::Implements org.xml.sax.ext.DeclHandler.attributeDecl():::if->_declHandler->attributeDecl
TransformerHandlerImpl#elementDecl(String, String):::Implements org.xml.sax.ext.DeclHandler.elementDecl():::if->_declHandler->elementDecl
TransformerHandlerImpl#externalEntityDecl(String, String, String):::Implements org.xml.sax.ext.DeclHandler.externalEntityDecl():::if->_declHandler->externalEntityDecl
TransformerHandlerImpl#internalEntityDecl(String, String):::Implements org.xml.sax.ext.DeclHandler.externalEntityDecl():::if->_declHandler->internalEntityDecl
TransformerHandlerImpl#reset():::Implementation of the reset() method:::
TransformerImpl.MessageHandler#displayMessage(String)::: message handler display message:::if->println->else->try->_errorListener->new->TransformerException->warning->catch->finally
TransformerImpl#isSecureProcessing():::Return the state of the secure processing feature.:::return
TransformerImpl#setSecureProcessing(boolean):::Set the state of the secure processing feature.:::_readerManager->setFeature
TransformerImpl#overrideDefaultParser():::Return the state of the services mechanism feature.:::return
TransformerImpl#setOverrideDefaultParser(boolean):::Set the state of the services mechanism feature.:::
TransformerImpl#getTranslet():::Returns the translet wrapped inside this Transformer or null if this is the identity transform.:::return
TransformerImpl#isIdentity()::: transformer impl is identity:::return
TransformerImpl#transform(Source, Result):::Implements JAXP's Transformer.transform():::if->if->err->new->ErrorMsg->throw->err->toString->new->TransformerException->transferOutputProperties->toHandler->getOutputHandler->if->err->new->ErrorMsg->throw->err->toString->new->TransformerException->if->_tfactory->getFeature->_tfactory->getAttribute->_translet->setDOMCache->if->transferOutputProperties->transform->try->if->_tohFactory->getNode->setNode->else->if->if->getXMLEventWriter->_tohFactory->getXMLEventWriter->flush->else->if->getXMLStreamWriter->_tohFactory->getXMLStreamWriter->flush->catch->println->finally
TransformerImpl#getOutputHandler(Result):::Create an output handler for the transformation output based on the type and contents of the TrAX Result object passed to the transform() method.:::_properties->get->_properties->getProperty->TransletOutputHandlerFactory->newInstance->_tohFactory->setEncoding->if->_tohFactory->setOutputMethod->if->_tohFactory->setIndentNumber->try->if->target->handler->target->getHandler->_tohFactory->setHandler->lexicalHandler->target->getLexicalHandler->if->_tohFactory->setLexicalHandler->_tohFactory->setOutputType->return->_tohFactory->getSerializationHandler->else->if->if->getXMLEventWriter->_tohFactory->getXMLEventWriter->setXMLEventWriter->else->if->getXMLStreamWriter->_tohFactory->getXMLStreamWriter->setXMLStreamWriter->_tohFactory->setOutputType->return->_tohFactory->getSerializationHandler->else->if->_tohFactory->getNode->setNode->_tohFactory->getNextSibling->setNextSibling->_tohFactory->setOutputType->return->_tohFactory->getSerializationHandler->else->if->target->_tohFactory->setOutputType->writer->target->getWriter->if->_tohFactory->setWriter->return->_tohFactory->getSerializationHandler->ostream->target->getOutputStream->if->_tohFactory->setOutputStream->return->_tohFactory->getSerializationHandler->systemId->result->getSystemId->if->err->new->ErrorMsg->throw->err->toString->new->TransformerException->url->if->systemId->startsWith->try->uri->new->URI->host->uri->getHost->path->uri->getPath->if->if->else->catch->finally->new->URL->url->getFile->new->FileOutputStream->_tohFactory->setOutputStream->return->_tohFactory->getSerializationHandler->else->if->systemId->startsWith->new->URL->connection->url->openConnection->_tohFactory->connection->getOutputStream->setOutputStream->return->_tohFactory->getSerializationHandler->else->_tohFactory->new->File->new->FileOutputStream->setOutputStream->return->_tohFactory->getSerializationHandler->catch->throw->new->TransformerException->throw->new->TransformerException->throw->new->TransformerException->finally->return
TransformerImpl#setDOM(DOM):::Set the internal DOM that will be used for the next transformation:::
TransformerImpl#getDOM(Source):::Builds an internal DOM from a TrAX Source object:::try->dom->if->wsfilter->if->new->DOMWSFilter->else->hasIdCall->_translet->hasIdCall->if->_tfactory->createNewDTMManagerInstance->_dtmManager->setOverrideDefaultParser->_dtmManager->getDTM->else->if->else->return->if->_translet->prepassDocument->return->catch->if->e->getMessage->postErrorToListener->throw->new->TransformerException->finally
TransformerImpl#getTransformerFactory():::Returns the com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl object that create this Transformer.:::return
TransformerImpl#getTransletOutputHandlerFactory():::Returns the com.sun.org.apache.xalan.internal.xsltc.runtime.output.TransletOutputHandlerFactory object that create the TransletOutputHandler.:::return
TransformerImpl#transformIdentity(Source, SerializationHandler)::: transformer impl transform identity:::if->source->getSystemId->if->stream->streamInput->stream->getInputStream->streamReader->stream->getReader->reader->_readerManager->getXMLReader->try->try->reader->setProperty->reader->setFeature->catch->finally->reader->setContentHandler->input->if->new->InputSource->input->setSystemId->else->if->new->InputSource->input->setSystemId->else->if->new->InputSource->else->err->new->ErrorMsg->throw->err->toString->new->TransformerException->reader->parse->catch->finally->_readerManager->releaseXMLReader->else->if->sax->reader->sax->getXMLReader->input->sax->getInputSource->userReader->try->if->_readerManager->getXMLReader->try->reader->setProperty->reader->setFeature->catch->finally->reader->setContentHandler->reader->parse->catch->finally->if->_readerManager->releaseXMLReader->else->if->staxSource->staxevent2sax->staxStream2SAX->if->staxSource->getXMLEventReader->xmlEventReader->staxSource->getXMLEventReader->new->StAXEvent2SAX->staxevent2sax->setContentHandler->staxevent2sax->parse->handler->flushPending->else->if->staxSource->getXMLStreamReader->xmlStreamReader->staxSource->getXMLStreamReader->new->StAXStream2SAX->staxStream2SAX->setContentHandler->staxStream2SAX->parse->handler->flushPending->else->if->domsrc->domsrc->getNode->new->DOM2TO->parse->else->if->dom->getDOM->copy->else->err->new->ErrorMsg->throw->err->toString->new->TransformerException
TransformerImpl#transform(Source, SerializationHandler, String):::Internal transformation method - uses the internal APIs of XSLTC:::try->if->source->getSystemId->getInputStream->getReader->getInputSource->getXMLReader->getNode->supportCatalog->builderF->JdkXmlUtils->getDOMFactory->try->builderF->setFeature->catch->finally->if->cf->_tfactory->getAttribute->if->foreach->values->builderF->f->getPropertyName->cf->get->setAttribute->builder->builderF->newDocumentBuilder->systemID->source->getSystemId->builder->newDocument->new->DOMSource->if->source->setSystemId->if->transformIdentity->else->_translet->getDOM->transform->catch->if->e->getMessage->postErrorToListener->throw->new->TransformerException->if->e->getMessage->postErrorToListener->throw->new->TransformerException->if->e->getMessage->postErrorToListener->throw->new->TransformerException->finally->if->try->_ostream->close->catch->finally
TransformerImpl#getErrorListener():::Implements JAXP's Transformer.getErrorListener() Get the error event handler in effect for the transformation.:::return
TransformerImpl#setErrorListener(ErrorListener):::Implements JAXP's Transformer.setErrorListener() Set the error event listener in effect for the transformation:::if->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->if->_translet->new->MessageHandler->setMessageHandler
TransformerImpl#postErrorToListener(String):::Inform TrAX error listener of an error:::try->_errorListener->new->TransformerException->error->catch->finally
TransformerImpl#postWarningToListener(String):::Inform TrAX error listener of a warning:::try->_errorListener->new->TransformerException->warning->catch->finally
TransformerImpl#getOutputProperties():::Implements JAXP's Transformer.getOutputProperties():::return->_properties->clone
TransformerImpl#getOutputProperty(String):::Implements JAXP's Transformer.getOutputProperty():::if->validOutputProperty->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->return->_properties->getProperty
TransformerImpl#setOutputProperties(Properties):::Implements JAXP's Transformer.setOutputProperties():::if->names->properties->propertyNames->while->names->hasMoreElements->name->names->nextElement->if->isDefaultProperty->continue->if->validOutputProperty->_properties->properties->getProperty->setProperty->else->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->else->_propertiesClone->clone
TransformerImpl#setOutputProperty(String, String):::Implements JAXP's Transformer.setOutputProperty():::if->validOutputProperty->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->_properties->setProperty
TransformerImpl#transferOutputProperties(AbstractTranslet):::Internal method to pass any properties to the translet prior to initiating the transformation:::if->return->names->_properties->propertyNames->while->names->hasMoreElements->name->names->nextElement->value->_properties->get->if->continue->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->else->if->name->equals->value->toLowerCase->equals->else->if->name->equals->value->toLowerCase->equals->else->if->name->equals->if->Integer->parseInt->else->if->name->equals->if->Integer->parseInt->else->if->name->equals->if->e->new->StringTokenizer->while->e->hasMoreTokens->translet->e->nextToken->addCdataElement->else->if->name->equals->if->value->equals
TransformerImpl#transferOutputProperties(SerializationHandler):::This method is used to pass any properties to the output handler when running the identity transform.:::if->return->doctypePublic->doctypeSystem->names->_properties->propertyNames->while->names->hasMoreElements->name->names->nextElement->value->_properties->get->if->continue->if->name->equals->else->if->name->equals->else->if->name->equals->handler->setMediaType->else->if->name->equals->handler->setStandalone->else->if->name->equals->handler->setVersion->else->if->name->equals->handler->value->toLowerCase->equals->setOmitXMLDeclaration->else->if->name->equals->handler->value->toLowerCase->equals->setIndent->else->if->name->equals->if->handler->Integer->parseInt->setIndentAmount->else->if->name->equals->if->handler->Integer->parseInt->setIndentAmount->else->if->name->equals->if->value->equals->handler->setIsStandalone->else->if->name->equals->if->e->new->StringTokenizer->uriAndLocalNames->while->e->hasMoreTokens->token->e->nextToken->lastcolon->token->lastIndexOf->uri->localName->if->token->substring->token->substring->else->if->new->ArrayList<>->uriAndLocalNames->add->uriAndLocalNames->add->handler->setCdataSectionElements->if->handler->setDoctype
TransformerImpl#createOutputProperties(Properties):::Internal method to create the initial set of properties:::defaults->new->Properties->setDefaults->base->new->Properties->if->names->outputProperties->propertyNames->while->names->hasMoreElements->name->names->nextElement->base->outputProperties->getProperty->setProperty->else->base->setProperty->if->base->setProperty->method->base->getProperty->if->if->method->equals->setDefaults->else->if->method->equals->setDefaults->return
TransformerImpl#setDefaults(Properties, String):::Internal method to get the default properties from the serializer factory and set them on the property object.:::method_props->OutputPropertiesFactory->getDefaultMethodProperties->names->method_props->propertyNames->while->names->hasMoreElements->name->names->nextElement->props->method_props->getProperty->setProperty
TransformerImpl#validOutputProperty(String):::Verifies if a given output property name is a property defined in the JAXP 1.1 / TrAX spec:::return->name->equals->name->equals->name->equals->name->equals->name->equals->name->equals->name->equals->name->equals->name->equals->name->equals->name->equals->name->charAt
TransformerImpl#isDefaultProperty(String, Properties):::Checks if a given output property is default (2nd layer only):::return->properties->get
TransformerImpl#setParameter(String, Object):::Implements JAXP's Transformer.setParameter() Add a parameter for the transformation:::if->err->new->ErrorMsg->throw->err->toString->new->IllegalArgumentException->if->if->new->HashMap<>->_parameters->put->else->_translet->addParameter
TransformerImpl#clearParameters():::Implements JAXP's Transformer.clearParameters() Clear all parameters set with setParameter:::if->_parameters->clear->else->_translet->clearParameters
TransformerImpl#getParameter(String):::Implements JAXP's Transformer.getParameter() Returns the value of a given parameter:::if->return->_parameters->get->else->return->_translet->getParameter
TransformerImpl#getURIResolver():::Implements JAXP's Transformer.getURIResolver() Set the object currently used to resolve URIs used in document().:::return
TransformerImpl#setURIResolver(URIResolver):::Implements JAXP's Transformer.setURIResolver() Set an object that will be used to resolve URIs used in document().:::
TransformerImpl#retrieveDocument(String, String, Translet):::This class should only be used as a DOMCache for the translet if the URIResolver has been set:::try->if->href->length->resolvedSource->if->_uriResolver->resolve->if->_catalogFeatures->get->if->CatalogManager->catalogResolver->_catalogUriResolver->resolve->if->streamSource->SystemIDResolver->getAbsoluteURI->new->StreamSource->return->getDOM->return->getDOM->catch->if->e->getMessage->postErrorToListener->return->finally
TransformerImpl#error(TransformerException):::Receive notification of a recoverable error:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println->throw
TransformerImpl#fatalError(TransformerException):::Receive notification of a non-recoverable error:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println->throw
TransformerImpl#warning(TransformerException):::Receive notification of a warning:::wrapped->e->getException->if->e->getMessageAndLocation->wrapped->getMessage->new->ErrorMsg->println->else->e->getMessageAndLocation->new->ErrorMsg->println
TransformerImpl#reset():::This method resets  the Transformer to its original configuration Transformer code is reset to the same state it was when it was created:::setOutputProperties
TrAXFilter#getTransformer()::: tr filter get transformer:::return
TrAXFilter#createParent()::: tr filter create parent:::parent->JdkXmlUtils->_transformer->isSecureProcessing->getXMLReader->setParent
TrAXFilter#parse(InputSource)::: tr filter parse:::managedReader->try->if->getParent->try->XMLReaderManager->getInstance->getXMLReader->setParent->catch->throw->e->toString->new->SAXException->finally->getParent->parse->catch->finally->if->XMLReaderManager->getInstance->releaseXMLReader
TrAXFilter#parse(String)::: tr filter parse:::new->InputSource->parse
TrAXFilter#setContentHandler(ContentHandler)::: tr filter set content handler:::_transformerHandler->new->SAXResult->setResult->if->getParent->try->createParent->catch->return->finally->getParent->setContentHandler
TrAXFilter#setErrorListener(ErrorListener)::: tr filter set error listener:::
Util#baseName(String)::: util base name:::return->baseName
Util#noExtName(String)::: util no ext name:::return->noExtName
Util#toJavaName(String)::: util to java name:::return->toJavaName
Util#getInputSource(XSLTC, Source):::Creates a SAX2 InputSource object from a TrAX Source object:::input->systemId->source->getSystemId->try->if->sax->sax->getInputSource->try->reader->sax->getXMLReader->if->overrideDefaultParser->xsltc->getFeature->JdkXmlUtils->xsltc->isSecureProcessing->getXMLReader->else->reader->setFeature->reader->setFeature->JdkXmlUtils->xsltc->getProperty->setXMLReaderPropertyIfSupport->JdkXmlUtils->xsltc->getProperty->setXMLReaderPropertyIfSupport->lastProperty->try->securityManager->xsltc->getProperty->if->foreach->values->limit->apiProperty->reader->securityManager->getLimitValueAsString->setProperty->if->securityManager->printEntityCountInfo->reader->setProperty->catch->XMLSecurityManager->reader->getClass->getName->printWarning->finally->supportCatalog->useCatalog->xsltc->getFeature->try->reader->setFeature->catch->finally->if->try->cf->xsltc->getProperty->if->foreach->values->reader->f->getPropertyName->cf->get->setProperty->catch->finally->xsltc->setXMLReader->catch->throw->new->TransformerConfigurationException->throw->new->TransformerConfigurationException->finally->else->if->domsrc->dom->domsrc->getNode->dom2sax->new->DOM2SAX->xsltc->setXMLReader->SAXSource->sourceToInputSource->if->domsrc->getSystemId->new->InputSource->else->if->staxSource->staxevent2sax->staxStream2SAX->if->staxSource->getXMLEventReader->xmlEventReader->staxSource->getXMLEventReader->new->StAXEvent2SAX->xsltc->setXMLReader->else->if->staxSource->getXMLStreamReader->xmlStreamReader->staxSource->getXMLStreamReader->new->StAXStream2SAX->xsltc->setXMLReader->SAXSource->sourceToInputSource->if->staxSource->getSystemId->new->InputSource->else->if->stream->istream->stream->getInputStream->reader->stream->getReader->xsltc->setXMLReader->if->new->InputSource->else->if->new->InputSource->else->new->InputSource->else->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->input->setSystemId->catch->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->err->new->ErrorMsg->throw->err->toString->new->TransformerConfigurationException->finally->return
XSLTCSource#setSystemId(String):::Implements javax.xml.transform.Source.setSystemId() Set the system identifier for this Source:::if->_source->setSystemId
XSLTCSource#getSystemId():::Implements javax.xml.transform.Source.getSystemId() Get the system identifier that was set with setSystemId.:::if->return->_source->getSystemId->else->return
XSLTCSource#getDOM(XSLTCDTMManager, AbstractTranslet):::Internal interface which returns a DOM for a given DTMManager and translet.:::idom->_dom->get->if->if->idom->migrateTo->else->source->if->if->_systemId->length->new->StreamSource->else->err->new->ErrorMsg->throw->err->toString->new->SAXException->wsfilter->if->new->DOMWSFilter->hasIdCall->translet->hasIdCall->if->XSLTCDTMManager->newInstance->dtmManager->getDTM->systemId->getSystemId->if->idom->setDocumentURI->_dom->set->return
