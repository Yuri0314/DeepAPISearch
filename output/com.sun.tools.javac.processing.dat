JavacFiler#newRound():::Update internal state for a new round.:::clearRoundState
JavacFiler#displayState():::Debugging function to display internal state.:::xout->context->get->getWriter->xout->println->xout->println->xout->println->xout->generatedClasses->keySet->println->xout->println->xout->println
JavacMessager#printMessage(Diagnostic.Kind, CharSequence, Element, AnnotationMirror):::Prints a message of the specified kind at the location of the annotation mirror of the annotated element.:::printMessage
JavacMessager#printMessage(Diagnostic.Kind, CharSequence, Element, AnnotationMirror, AnnotationValue):::Prints a message of the specified kind at the location of the annotation value inside the annotation mirror of the annotated element.:::oldSource->newSource->pos->elemUtils->processingEnv->getElementUtils->treeTop->elemUtils->getTreeAndTopLevel->if->if->log->useSource->pos->try->switch->log->Errors->msg->toString->ProcMessager->error->break->log->Warnings->msg->toString->ProcMessager->warning->break->log->Warnings->msg->toString->ProcMessager->mandatoryWarning->break->log->Notes->msg->toString->ProcMessager->note->break->catch->finally->if->log->useSource
JavacMessager#printError(String):::Prints an error message:::printMessage
JavacMessager#printWarning(String):::Prints a warning message:::printMessage
JavacMessager#printNotice(String):::Prints a notice.:::printMessage
JavacProcessingEnvironment#instance(Context):::Get the JavacProcessingEnvironment instance for this context.:::instance->context->get->if->new->JavacProcessingEnvironment->return
JavacProcessingEnvironment.ProcessorState#removeSupportedOptions(Set):::Remove options that are matched by this processor.:::unmatchedProcessorOptions->removeAll
JavacProcessingEnvironment.DiscoveredProcessors.ProcessorStateIterator#runContributingProcs(RoundEnvironment):::Run all remaining processors on the procStateList that have not already run this round with an empty set of annotations.:::if->emptyTypeElements->Collections->emptySet->while->innerIter->hasNext->ps->innerIter->next->if->callProcessor
JavacProcessingEnvironment.DiscoveredProcessors#close():::Free jar files, etc:::if->close
JavacProcessingEnvironment.Round#next(Set, Map>):::Create the next round to be used.:::return->new->Round
JavacProcessingEnvironment.Round#finalCompiler():::Prepare the compiler for the final compilation.:::newRound
JavacProcessingEnvironment.Round#errorCount():::Return the number of errors found so far in this round:::return->compiler->errorCount
JavacProcessingEnvironment.Round#warningCount():::Return the number of warnings found so far in this round.:::return->compiler->warningCount
JavacProcessingEnvironment.Round#unrecoverableError():::Return whether or not an unrecoverable error has occurred.:::if->messager->errorRaised->return->foreach->deferredDiagnosticHandler->getDiagnostics->switch->d->getKind->if->return->break->if->d->isFlagSet->return->break->return
JavacProcessingEnvironment.Round#findAnnotationsPresent():::Find the set of annotations present in the set of top level  classes and package info files to be processed this round.:::annotationComputer->new->ComputeAnnotationSet->new->LinkedHashSet<>->foreach->annotationComputer->scan->foreach->annotationComputer->scan->foreach->annotationComputer->scan
JavacProcessingEnvironment.Round#run(boolean, boolean):::Run a processing round.:::printRoundInfo->if->taskListener->isEmpty->taskListener->new->TaskEvent->started->try->if->filer->setLastRound->emptyRootElements->Collections->emptySet->renv->new->JavacRoundEnvironment->discoveredProcs->iterator->runContributingProcs->else->discoverAndRunProcs->catch->deferredDiagnosticHandler->reportDeferredDiagnostics->log->popDiagnosticHandler->compiler->setDeferredDiagnosticHandler->throw->finally->if->taskListener->isEmpty->taskListener->new->TaskEvent->finished
JavacProcessingEnvironment#close():::Free resources related to annotation processing.:::filer->close->if->discoveredProcs->close
JavacProcessingEnvironment#getOptions():::  Command line options suitable for presenting to annotation processors:::return
JavacProcessingEnvironment#getContext():::For internal use only:::return
JavacProcessingEnvironment#getProcessorClassLoader():::For internal use only:::return
JavacRoundEnvironment#errorRaised():::Returns true if an error was raised in the prior round of processing; returns false otherwise.:::return
JavacRoundEnvironment#getRootElements():::Returns the type elements specified by the prior round.:::return
JavacRoundEnvironment#getElementsAnnotatedWith(TypeElement):::Returns the elements annotated with the given annotation type:::throwIfNotAnnotation->result->Collections->emptySet->scanner->new->AnnotationSetScanner->foreach->scanner->scan->return
ServiceProxy#hasService(Class, URL[]):::Return true if a description for at least one service is found in the service configuration files in the given URLs.:::foreach->try->fullName->service->getName->u->new->URL->found->parse->if->return->catch->finally->return
