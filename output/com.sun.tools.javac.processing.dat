com.sun.tools.javac.processing.JavacFiler#createSourceFile(CharSequence, Element...)->JavaFileObject::: javac filer create source file
com.sun.tools.javac.processing.JavacFiler#createClassFile(CharSequence, Element...)->JavaFileObject::: javac filer create class file
com.sun.tools.javac.processing.JavacFiler#createResource(JavaFileManager.Location, CharSequence, CharSequence, Element...)->FileObject::: javac filer create resource
com.sun.tools.javac.processing.JavacFiler#getResource(JavaFileManager.Location, CharSequence, CharSequence)->FileObject::: javac filer get resource
com.sun.tools.javac.processing.JavacFiler#newFiles()->boolean::: javac filer new files
com.sun.tools.javac.processing.JavacFiler#getGeneratedSourceNames()->Set::: javac filer get generated source names
com.sun.tools.javac.processing.JavacFiler#getGeneratedSourceFileObjects()->Set::: javac filer get generated source file objects
com.sun.tools.javac.processing.JavacFiler#getGeneratedClasses()->Map>::: javac filer get generated classes
com.sun.tools.javac.processing.JavacFiler#warnIfUnclosedFiles()->void::: javac filer warn if unclosed files
com.sun.tools.javac.processing.JavacFiler#newRound()->void:::Update internal state for a new round.
com.sun.tools.javac.processing.JavacFiler#setLastRound(boolean)->void::: javac filer set last round
com.sun.tools.javac.processing.JavacFiler#setInitialState(Collection, Collection)->void::: javac filer set initial state
com.sun.tools.javac.processing.JavacFiler#close()->void::: javac filer close
com.sun.tools.javac.processing.JavacFiler#displayState()->void:::Debugging function to display internal state.
com.sun.tools.javac.processing.JavacFiler#toString()->String::: javac filer to string
com.sun.tools.javac.processing.JavacMessager#printMessage(Diagnostic.Kind, CharSequence)->void::: javac messager print message
com.sun.tools.javac.processing.JavacMessager#printMessage(Diagnostic.Kind, CharSequence, Element)->void::: javac messager print message
com.sun.tools.javac.processing.JavacMessager#printMessage(Diagnostic.Kind, CharSequence, Element, AnnotationMirror)->void:::Prints a message of the specified kind at the location of the annotation mirror of the annotated element.
com.sun.tools.javac.processing.JavacMessager#printMessage(Diagnostic.Kind, CharSequence, Element, AnnotationMirror, AnnotationValue)->void:::Prints a message of the specified kind at the location of the annotation value inside the annotation mirror of the annotated element.
com.sun.tools.javac.processing.JavacMessager#printError(String)->void:::Prints an error message
com.sun.tools.javac.processing.JavacMessager#printWarning(String)->void:::Prints a warning message
com.sun.tools.javac.processing.JavacMessager#printNotice(String)->void:::Prints a notice.
com.sun.tools.javac.processing.JavacMessager#errorRaised()->boolean::: javac messager error raised
com.sun.tools.javac.processing.JavacMessager#errorCount()->int::: javac messager error count
com.sun.tools.javac.processing.JavacMessager#warningCount()->int::: javac messager warning count
com.sun.tools.javac.processing.JavacMessager#newRound()->void::: javac messager new round
com.sun.tools.javac.processing.JavacMessager#toString()->String::: javac messager to string
com.sun.tools.javac.processing.JavacProcessingEnvironment#instance(Context)->JavacProcessingEnvironment:::Get the JavacProcessingEnvironment instance for this context.
com.sun.tools.javac.processing.JavacProcessingEnvironment#setProcessors(Iterable)->void::: javac processing environment set processors
com.sun.tools.javac.processing.JavacProcessingEnvironment#getServiceLoader(Class)->ServiceLoader::: javac processing environment get service loader
com.sun.tools.javac.processing.JavacProcessingEnvironment#atLeastOneProcessor()->boolean::: javac processing environment at least one processor
com.sun.tools.javac.processing.JavacProcessingEnvironment.ProcessorState#annotationSupported(String)->boolean::: processor state annotation supported
com.sun.tools.javac.processing.JavacProcessingEnvironment.ProcessorState#removeSupportedOptions(Set)->void:::Remove options that are matched by this processor.
com.sun.tools.javac.processing.JavacProcessingEnvironment.DiscoveredProcessors.ProcessorStateIterator#next()->ProcessorState::: processor state iterator next
com.sun.tools.javac.processing.JavacProcessingEnvironment.DiscoveredProcessors.ProcessorStateIterator#hasNext()->boolean::: processor state iterator has next
com.sun.tools.javac.processing.JavacProcessingEnvironment.DiscoveredProcessors.ProcessorStateIterator#remove()->void::: processor state iterator remove
com.sun.tools.javac.processing.JavacProcessingEnvironment.DiscoveredProcessors.ProcessorStateIterator#runContributingProcs(RoundEnvironment)->void:::Run all remaining processors on the procStateList that have not already run this round with an empty set of annotations.
com.sun.tools.javac.processing.JavacProcessingEnvironment.DiscoveredProcessors#iterator()->ProcessorStateIterator::: discovered processors iterator
com.sun.tools.javac.processing.JavacProcessingEnvironment.DiscoveredProcessors#close()->void:::Free jar files, etc
com.sun.tools.javac.processing.JavacProcessingEnvironment.ComputeAnnotationSet#visitPackage(PackageElement, Set)->Set::: compute annotation set visit package
com.sun.tools.javac.processing.JavacProcessingEnvironment.ComputeAnnotationSet#visitType(TypeElement, Set)->Set::: compute annotation set visit type
com.sun.tools.javac.processing.JavacProcessingEnvironment.ComputeAnnotationSet#visitExecutable(ExecutableElement, Set)->Set::: compute annotation set visit executable
com.sun.tools.javac.processing.JavacProcessingEnvironment.ComputeAnnotationSet#addAnnotations(Element, Set)->void::: compute annotation set add annotations
com.sun.tools.javac.processing.JavacProcessingEnvironment.ComputeAnnotationSet#scan(Element, Set)->Set::: compute annotation set scan
com.sun.tools.javac.processing.JavacProcessingEnvironment.Round#next(Set, Map>)->Round:::Create the next round to be used.
com.sun.tools.javac.processing.JavacProcessingEnvironment.Round#finalCompiler()->void:::Prepare the compiler for the final compilation.
com.sun.tools.javac.processing.JavacProcessingEnvironment.Round#errorCount()->int:::Return the number of errors found so far in this round
com.sun.tools.javac.processing.JavacProcessingEnvironment.Round#warningCount()->int:::Return the number of warnings found so far in this round.
com.sun.tools.javac.processing.JavacProcessingEnvironment.Round#unrecoverableError()->boolean:::Return whether or not an unrecoverable error has occurred.
com.sun.tools.javac.processing.JavacProcessingEnvironment.Round#findAnnotationsPresent()->void:::Find the set of annotations present in the set of top level  classes and package info files to be processed this round.
com.sun.tools.javac.processing.JavacProcessingEnvironment.Round#run(boolean, boolean)->void:::Run a processing round.
com.sun.tools.javac.processing.JavacProcessingEnvironment.Round#showDiagnostics(boolean)->void::: round show diagnostics
com.sun.tools.javac.processing.JavacProcessingEnvironment#doProcessing(List, List, Iterable, Log.DeferredDiagnosticHandler)->boolean::: javac processing environment do processing
com.sun.tools.javac.processing.JavacProcessingEnvironment#close()->void:::Free resources related to annotation processing.
com.sun.tools.javac.processing.JavacProcessingEnvironment.ImplicitCompleter#complete(Symbol)->void::: implicit completer complete
com.sun.tools.javac.processing.JavacProcessingEnvironment#getOptions()->Map:::  Command line options suitable for presenting to annotation processors
com.sun.tools.javac.processing.JavacProcessingEnvironment#getMessager()->Messager::: javac processing environment get messager
com.sun.tools.javac.processing.JavacProcessingEnvironment#getFiler()->JavacFiler::: javac processing environment get filer
com.sun.tools.javac.processing.JavacProcessingEnvironment#getElementUtils()->JavacElements::: javac processing environment get element utils
com.sun.tools.javac.processing.JavacProcessingEnvironment#getTypeUtils()->JavacTypes::: javac processing environment get type utils
com.sun.tools.javac.processing.JavacProcessingEnvironment#getSourceVersion()->SourceVersion::: javac processing environment get source version
com.sun.tools.javac.processing.JavacProcessingEnvironment#getLocale()->Locale::: javac processing environment get locale
com.sun.tools.javac.processing.JavacProcessingEnvironment#getSpecifiedPackages()->Set::: javac processing environment get specified packages
com.sun.tools.javac.processing.JavacProcessingEnvironment#getContext()->Context:::For internal use only
com.sun.tools.javac.processing.JavacProcessingEnvironment#getProcessorClassLoader()->ClassLoader:::For internal use only
com.sun.tools.javac.processing.JavacProcessingEnvironment#toString()->String::: javac processing environment to string
com.sun.tools.javac.processing.JavacProcessingEnvironment#isValidOptionName(String)->boolean::: javac processing environment is valid option name
com.sun.tools.javac.processing.JavacRoundEnvironment#toString()->String::: javac round environment to string
com.sun.tools.javac.processing.JavacRoundEnvironment#processingOver()->boolean::: javac round environment processing over
com.sun.tools.javac.processing.JavacRoundEnvironment#errorRaised()->boolean:::Returns true if an error was raised in the prior round of processing; returns false otherwise.
com.sun.tools.javac.processing.JavacRoundEnvironment#getRootElements()->Set:::Returns the type elements specified by the prior round.
com.sun.tools.javac.processing.JavacRoundEnvironment#getElementsAnnotatedWith(TypeElement)->Set:::Returns the elements annotated with the given annotation type
com.sun.tools.javac.processing.JavacRoundEnvironment#getElementsAnnotatedWithAny(TypeElement...)->Set::: javac round environment get elements annotated with any
com.sun.tools.javac.processing.JavacRoundEnvironment#getElementsAnnotatedWith(Class)->Set::: javac round environment get elements annotated with
com.sun.tools.javac.processing.JavacRoundEnvironment#getElementsAnnotatedWithAny(Set>)->Set::: javac round environment get elements annotated with any
com.sun.tools.javac.processing.PrintingProcessor#setWriter(Writer)->void::: printing processor set writer
com.sun.tools.javac.processing.PrintingProcessor#process(Set, RoundEnvironment)->boolean::: printing processor process
com.sun.tools.javac.processing.PrintingProcessor#print(Element)->void::: printing processor print
com.sun.tools.javac.processing.PrintingProcessor.PrintingElementVisitor#defaultAction(Element, Boolean)->PrintingElementVisitor::: printing element visitor default action
com.sun.tools.javac.processing.PrintingProcessor.PrintingElementVisitor#visitExecutable(ExecutableElement, Boolean)->PrintingElementVisitor::: printing element visitor visit executable
com.sun.tools.javac.processing.PrintingProcessor.PrintingElementVisitor#visitType(TypeElement, Boolean)->PrintingElementVisitor::: printing element visitor visit type
com.sun.tools.javac.processing.PrintingProcessor.PrintingElementVisitor#visitVariable(VariableElement, Boolean)->PrintingElementVisitor::: printing element visitor visit variable
com.sun.tools.javac.processing.PrintingProcessor.PrintingElementVisitor#visitTypeParameter(TypeParameterElement, Boolean)->PrintingElementVisitor::: printing element visitor visit type parameter
com.sun.tools.javac.processing.PrintingProcessor.PrintingElementVisitor#visitPackage(PackageElement, Boolean)->PrintingElementVisitor::: printing element visitor visit package
com.sun.tools.javac.processing.PrintingProcessor.PrintingElementVisitor#visitModule(ModuleElement, Boolean)->PrintingElementVisitor::: printing element visitor visit module
com.sun.tools.javac.processing.PrintingProcessor.PrintingElementVisitor#flush()->void::: printing element visitor flush
com.sun.tools.javac.processing.ServiceProxy#hasService(Class, URL[])->boolean:::Return true if a description for at least one service is found in the service configuration files in the given URLs.
