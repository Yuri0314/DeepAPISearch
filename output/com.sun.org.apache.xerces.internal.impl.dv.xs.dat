com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#getAllowedFacets()->short::: abstract date time v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#isIdentical(Object, Object)->boolean::: abstract date time v is identical
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#compare(Object, Object)->int::: abstract date time v compare
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#compareDates(DateTimeData, DateTimeData, boolean)->short:::Compare algorithm described in dateDime (3.2.7)
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#compareOrder(DateTimeData, DateTimeData)->short:::Given normalized values, determines order-relation between give date/time objects.
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#getTime(String, int, int, DateTimeData)->void:::Parses time hh:mm:ss.sss and time zone if any
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#getDate(String, int, int, DateTimeData)->int:::Parses date CCYY-MM-DD
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#getYearMonth(String, int, int, DateTimeData)->int:::Parses date CCYY-MM
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#parseTimeZone(String, int, int, DateTimeData)->void:::Shared code from Date and YearMonth datatypes
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#getTimeZone(String, DateTimeData, int, int)->void:::Parses time zone: 'Z' or {+,-} followed by hh:mm
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#indexOf(String, int, int, char)->int:::Computes index of given char within StringBuffer
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#validateDateTime(DateTimeData)->void:::Validates given date/time object accoring to W3C PR Schema [D.1 ISO 8601 Conventions]
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#findUTCSign(String, int, int)->int:::Return index of UTC char: 'Z', '+', '-'
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#isNextCharUTCSign(String, int, int)->boolean:::Returns true if the character at start is 'Z', '+' or '-'.
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#parseInt(String, int, int)->int:::Given start and end position, parses string value
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#parseIntYear(String, int)->int::: abstract date time v parse int year
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#normalize(DateTimeData)->void:::If timezone present - normalize dateTime [E Adding durations to dateTimes]
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#saveUnnormalized(DateTimeData)->void::: abstract date time v save unnormalized
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#resetDateObj(DateTimeData)->void:::Resets object representation of date/time
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#maxDayInMonthFor(int, int)->int:::Given {year,month} computes maximum number of days for given month
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#mod(int, int, int)->int::: abstract date time v mod
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#fQuotient(int, int)->int::: abstract date time v f quotient
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#modulo(int, int, int)->int::: abstract date time v modulo
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#fQuotient(int, int, int)->int::: abstract date time v f quotient
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#dateToString(DateTimeData)->String::: abstract date time v date to string
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#append(StringBuffer, int, int)->void::: abstract date time v append
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#append(StringBuffer, double)->void::: abstract date time v append
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#append2(StringBuffer, double)->void::: abstract date time v append2
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#parseSecond(String, int, int)->double::: abstract date time v parse second
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#equals(Object)->boolean::: date time data equals
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#hashCode()->int::: date time data hash code
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#toString()->String::: date time data to string
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getYears()->int::: date time data get years
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getMonths()->int::: date time data get months
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getDays()->int::: date time data get days
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getHours()->int::: date time data get hours
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getMinutes()->int::: date time data get minutes
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getSeconds()->double::: date time data get seconds
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#hasTimeZone()->boolean::: date time data has time zone
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getTimeZoneHours()->int::: date time data get time zone hours
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getTimeZoneMinutes()->int::: date time data get time zone minutes
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getLexicalValue()->String::: date time data get lexical value
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#normalize()->XSDateTime::: date time data normalize
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#isNormalized()->boolean::: date time data is normalized
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#clone()->Object::: date time data clone
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getXMLGregorianCalendar()->XMLGregorianCalendar::: date time data get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV.DateTimeData#getDuration()->Duration::: date time data get duration
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: abstract date time v get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#getDuration(DateTimeData)->Duration::: abstract date time v get duration
com.sun.org.apache.xerces.internal.impl.dv.xs.AbstractDateTimeDV#getFractionalSecondsAsBigDecimal(DateTimeData)->BigDecimal::: abstract date time v get fractional seconds as big decimal
com.sun.org.apache.xerces.internal.impl.dv.xs.AnyAtomicDV#getAllowedFacets()->short::: any atomic v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.AnyAtomicDV#getActualValue(String, ValidationContext)->Object::: any atomic v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.AnySimpleDV#getAllowedFacets()->short::: any simple v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.AnySimpleDV#getActualValue(String, ValidationContext)->Object::: any simple v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.AnyURIDV#getAllowedFacets()->short::: any v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.AnyURIDV#getActualValue(String, ValidationContext)->Object::: any v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.Base64BinaryDV#getAllowedFacets()->short::: base64 binary v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.Base64BinaryDV#getActualValue(String, ValidationContext)->Object::: base64 binary v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.Base64BinaryDV#getDataLength(Object)->int::: base64 binary v get data length
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseDVFactory#getBuiltInType(String)->XSSimpleType:::Get a built-in simple type of the given name REVISIT: its still not decided within the Schema WG how to define the          ur-types and if all simple types should be derived from a          complex type, so as of now we ignore the fact that anySimpleType          is derived from anyType, and pass 'null' as the base of          anySimpleType
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseDVFactory#getBuiltInTypes()->SymbolHash:::get all built-in simple types, which are stored in a hashtable keyed by the name
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseDVFactory#createTypeRestriction(String, String, short, XSSimpleType, XSObjectList)->XSSimpleType:::Create a new simple type which is derived by restriction from another simple type.
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseDVFactory#createTypeList(String, String, short, XSSimpleType, XSObjectList)->XSSimpleType:::Create a new simple type which is derived by list from another simple type.
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseDVFactory#createTypeUnion(String, String, short, XSSimpleType[], XSObjectList)->XSSimpleType:::Create a new simple type which is derived by union from a list of other simple types.
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseDVFactory#createBuiltInTypes(SymbolHash)->void::: base factory create built in types
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseSchemaDVFactory#createBuiltInTypes(SymbolHash, XSSimpleTypeDecl)->void::: base schema factory create built in types
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseSchemaDVFactory#createTypeRestriction(String, String, short, XSSimpleType, XSObjectList)->XSSimpleType:::Create a new simple type which is derived by restriction from another simple type.
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseSchemaDVFactory#createTypeList(String, String, short, XSSimpleType, XSObjectList)->XSSimpleType:::Create a new simple type which is derived by list from another simple type.
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseSchemaDVFactory#createTypeUnion(String, String, short, XSSimpleType[], XSObjectList)->XSSimpleType:::Create a new simple type which is derived by union from a list of other simple types.
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseSchemaDVFactory#setDeclPool(XSDeclarationPool)->void::: base schema factory set decl pool
com.sun.org.apache.xerces.internal.impl.dv.xs.BaseSchemaDVFactory#newXSSimpleTypeDecl()->XSSimpleTypeDecl:::Implementation internal *
com.sun.org.apache.xerces.internal.impl.dv.xs.BooleanDV#getAllowedFacets()->short::: boolean v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.BooleanDV#getActualValue(String, ValidationContext)->Object::: boolean v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.DateDV#getActualValue(String, ValidationContext)->Object::: date v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.DateDV#parse(String)->DateTimeData:::Parses, validates and computes normalized version of dateTime object
com.sun.org.apache.xerces.internal.impl.dv.xs.DateDV#dateToString(DateTimeData)->String::: date v date to string
com.sun.org.apache.xerces.internal.impl.dv.xs.DateDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: date v get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.DateTimeDV#getActualValue(String, ValidationContext)->Object::: date time v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.DateTimeDV#parse(String)->DateTimeData:::Parses, validates and computes normalized version of dateTime object
com.sun.org.apache.xerces.internal.impl.dv.xs.DateTimeDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: date time v get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.DayDV#getActualValue(String, ValidationContext)->Object::: day v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.DayDV#parse(String)->DateTimeData:::Parses, validates and computes normalized version of gDay object
com.sun.org.apache.xerces.internal.impl.dv.xs.DayDV#dateToString(DateTimeData)->String:::Converts gDay object representation to String
com.sun.org.apache.xerces.internal.impl.dv.xs.DayDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: day v get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.DayTimeDurationDV#getActualValue(String, ValidationContext)->Object::: day time duration v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.DayTimeDurationDV#getDuration(DateTimeData)->Duration::: day time duration v get duration
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV#getAllowedFacets()->short::: decimal v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV#getActualValue(String, ValidationContext)->Object::: decimal v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV#compare(Object, Object)->int::: decimal v compare
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV#getTotalDigits(Object)->int::: decimal v get total digits
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV#getFractionDigits(Object)->int::: decimal v get fraction digits
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#initD(String)->void::: decimal init d
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#initI(String)->void::: decimal init i
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#equals(Object)->boolean::: decimal equals
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#hashCode()->int::: decimal hash code
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#compareTo(XDecimal)->int::: decimal compare to
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#toString()->String::: decimal to string
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#getBigDecimal()->BigDecimal::: decimal get big decimal
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#getBigInteger()->BigInteger::: decimal get big integer
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#getLong()->long::: decimal get long
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#getInt()->int::: decimal get int
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#getShort()->short::: decimal get short
com.sun.org.apache.xerces.internal.impl.dv.xs.DecimalDV.XDecimal#getByte()->byte::: decimal get byte
com.sun.org.apache.xerces.internal.impl.dv.xs.DoubleDV#getAllowedFacets()->short::: double v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.DoubleDV#getActualValue(String, ValidationContext)->Object::: double v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.DoubleDV#compare(Object, Object)->int::: double v compare
com.sun.org.apache.xerces.internal.impl.dv.xs.DoubleDV#isIdentical(Object, Object)->boolean::: double v is identical
com.sun.org.apache.xerces.internal.impl.dv.xs.DoubleDV#isPossibleFP(String)->boolean:::Returns true if it's possible that the given string represents a valid floating point value (excluding NaN, INF and -INF).
com.sun.org.apache.xerces.internal.impl.dv.xs.DurationDV#getActualValue(String, ValidationContext)->Object::: duration v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.DurationDV#parse(String, int)->DateTimeData:::Parses, validates and computes normalized version of duration object
com.sun.org.apache.xerces.internal.impl.dv.xs.DurationDV#compareDates(DateTimeData, DateTimeData, boolean)->short:::Compares 2 given durations
com.sun.org.apache.xerces.internal.impl.dv.xs.DurationDV#parseSecond(String, int, int)->double::: duration v parse second
com.sun.org.apache.xerces.internal.impl.dv.xs.DurationDV#dateToString(DateTimeData)->String::: duration v date to string
com.sun.org.apache.xerces.internal.impl.dv.xs.DurationDV#getDuration(DateTimeData)->Duration::: duration v get duration
com.sun.org.apache.xerces.internal.impl.dv.xs.EntityDV#getAllowedFacets()->short::: entity v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.EntityDV#getActualValue(String, ValidationContext)->Object::: entity v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.EntityDV#checkExtraRules(Object, ValidationContext)->void::: entity v check extra rules
com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl#createBuiltInTypes()->void::: extended schema factory impl create built in types
com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl#getBuiltInType(String)->XSSimpleType:::Get a built-in simple type of the given name REVISIT: its still not decided within the Schema WG how to define the          ur-types and if all simple types should be derived from a          complex type, so as of now we ignore the fact that anySimpleType          is derived from anyType, and pass 'null' as the base of          anySimpleType
com.sun.org.apache.xerces.internal.impl.dv.xs.ExtendedSchemaDVFactoryImpl#getBuiltInTypes()->SymbolHash:::get all built-in simple types, which are stored in a hashtable keyed by the name
com.sun.org.apache.xerces.internal.impl.dv.xs.FloatDV#getAllowedFacets()->short::: float v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.FloatDV#getActualValue(String, ValidationContext)->Object::: float v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.FloatDV#compare(Object, Object)->int::: float v compare
com.sun.org.apache.xerces.internal.impl.dv.xs.FloatDV#isIdentical(Object, Object)->boolean::: float v is identical
com.sun.org.apache.xerces.internal.impl.dv.xs.FullDVFactory#getBuiltInType(String)->XSSimpleType:::Get a built-in simple type of the given name REVISIT: its still not decided within the Schema WG how to define the          ur-types and if all simple types should be derived from a          complex type, so as of now we ignore the fact that anySimpleType          is derived from anyType, and pass 'null' as the base of          anySimpleType
com.sun.org.apache.xerces.internal.impl.dv.xs.FullDVFactory#getBuiltInTypes()->SymbolHash:::get all built-in simple types, which are stored in a hashtable keyed by the name
com.sun.org.apache.xerces.internal.impl.dv.xs.FullDVFactory#createBuiltInTypes(SymbolHash)->void::: full factory create built in types
com.sun.org.apache.xerces.internal.impl.dv.xs.HexBinaryDV#getAllowedFacets()->short::: hex binary v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.HexBinaryDV#getActualValue(String, ValidationContext)->Object::: hex binary v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.HexBinaryDV#getDataLength(Object)->int::: hex binary v get data length
com.sun.org.apache.xerces.internal.impl.dv.xs.IDDV#getAllowedFacets()->short::: v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.IDDV#getActualValue(String, ValidationContext)->Object::: v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.IDDV#checkExtraRules(Object, ValidationContext)->void::: v check extra rules
com.sun.org.apache.xerces.internal.impl.dv.xs.IDREFDV#getAllowedFacets()->short::: v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.IDREFDV#getActualValue(String, ValidationContext)->Object::: v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.IDREFDV#checkExtraRules(Object, ValidationContext)->void::: v check extra rules
com.sun.org.apache.xerces.internal.impl.dv.xs.IntegerDV#getActualValue(String, ValidationContext)->Object::: integer v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV#getAllowedFacets()->short::: list v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV#getActualValue(String, ValidationContext)->Object::: list v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV#getDataLength(Object)->int::: list v get data length
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV.ListData#toString()->String::: list data to string
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV.ListData#getLength()->int::: list data get length
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV.ListData#equals(Object)->boolean::: list data equals
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV.ListData#hashCode()->int::: list data hash code
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV.ListData#contains(Object)->boolean::: list data contains
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV.ListData#item(int)->Object::: list data item
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV.ListData#get(int)->Object::: list data get
com.sun.org.apache.xerces.internal.impl.dv.xs.ListDV.ListData#size()->int::: list data size
com.sun.org.apache.xerces.internal.impl.dv.xs.MonthDayDV#getActualValue(String, ValidationContext)->Object:::Convert a string to a compiled form
com.sun.org.apache.xerces.internal.impl.dv.xs.MonthDayDV#parse(String)->DateTimeData:::Parses, validates and computes normalized version of gMonthDay object
com.sun.org.apache.xerces.internal.impl.dv.xs.MonthDayDV#dateToString(DateTimeData)->String:::Converts gMonthDay object representation to String
com.sun.org.apache.xerces.internal.impl.dv.xs.MonthDayDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: month day v get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.MonthDV#getActualValue(String, ValidationContext)->Object:::Convert a string to a compiled form
com.sun.org.apache.xerces.internal.impl.dv.xs.MonthDV#parse(String)->DateTimeData:::Parses, validates and computes normalized version of gMonth object
com.sun.org.apache.xerces.internal.impl.dv.xs.MonthDV#dateToString(DateTimeData)->String:::Converts month object representation to String
com.sun.org.apache.xerces.internal.impl.dv.xs.MonthDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: month v get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV.XPrecisionDecimal#initD(String)->void::: precision decimal init d
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV.XPrecisionDecimal#equals(Object)->boolean::: precision decimal equals
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV.XPrecisionDecimal#hashCode()->int::: precision decimal hash code
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV.XPrecisionDecimal#compareTo(XPrecisionDecimal)->int::: precision decimal compare to
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV.XPrecisionDecimal#toString()->String::: precision decimal to string
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV.XPrecisionDecimal#isIdentical(XPrecisionDecimal)->boolean::: precision decimal is identical
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV#getAllowedFacets()->short::: precision decimal v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV#getActualValue(String, ValidationContext)->Object::: precision decimal v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV#compare(Object, Object)->int::: precision decimal v compare
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV#getFractionDigits(Object)->int::: precision decimal v get fraction digits
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV#getTotalDigits(Object)->int::: precision decimal v get total digits
com.sun.org.apache.xerces.internal.impl.dv.xs.PrecisionDecimalDV#isIdentical(Object, Object)->boolean::: precision decimal v is identical
com.sun.org.apache.xerces.internal.impl.dv.xs.QNameDV#getAllowedFacets()->short::: name v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.QNameDV#getActualValue(String, ValidationContext)->Object::: name v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.QNameDV#getDataLength(Object)->int::: name v get data length
com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl#createBuiltInTypes()->void::: schema factory impl create built in types
com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl#getBuiltInType(String)->XSSimpleType:::Get a built-in simple type of the given name REVISIT: its still not decided within the Schema WG how to define the          ur-types and if all simple types should be derived from a          complex type, so as of now we ignore the fact that anySimpleType          is derived from anyType, and pass 'null' as the base of          anySimpleType
com.sun.org.apache.xerces.internal.impl.dv.xs.SchemaDVFactoryImpl#getBuiltInTypes()->SymbolHash:::get all built-in simple types, which are stored in a hashtable keyed by the name
com.sun.org.apache.xerces.internal.impl.dv.xs.StringDV#getAllowedFacets()->short::: string v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.StringDV#getActualValue(String, ValidationContext)->Object::: string v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.TimeDV#getActualValue(String, ValidationContext)->Object:::Convert a string to a compiled form
com.sun.org.apache.xerces.internal.impl.dv.xs.TimeDV#parse(String)->DateTimeData:::Parses, validates and computes normalized version of time object
com.sun.org.apache.xerces.internal.impl.dv.xs.TimeDV#dateToString(DateTimeData)->String:::Converts time object representation to String
com.sun.org.apache.xerces.internal.impl.dv.xs.TimeDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: time v get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#getAllowedFacets()->short::: type validator get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#getActualValue(String, ValidationContext)->Object::: type validator get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#checkExtraRules(Object, ValidationContext)->void::: type validator check extra rules
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#isIdentical(Object, Object)->boolean::: type validator is identical
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#compare(Object, Object)->int::: type validator compare
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#getDataLength(Object)->int::: type validator get data length
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#getTotalDigits(Object)->int::: type validator get total digits
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#getFractionDigits(Object)->int::: type validator get fraction digits
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#isDigit(char)->boolean::: type validator is digit
com.sun.org.apache.xerces.internal.impl.dv.xs.TypeValidator#getDigit(char)->int::: type validator get digit
com.sun.org.apache.xerces.internal.impl.dv.xs.UnionDV#getAllowedFacets()->short::: union v get allowed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.UnionDV#getActualValue(String, ValidationContext)->Object::: union v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getGDVs()->TypeValidator[]::: simple type decl get vs
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#setDVs(TypeValidator[])->void::: simple type decl set vs
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#setRestrictionValues(XSSimpleTypeDecl, String, String, short, XSObjectList)->XSSimpleTypeDecl::: simple type decl set restriction values
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#setListValues(String, String, short, XSSimpleTypeDecl, XSObjectList)->XSSimpleTypeDecl::: simple type decl set list values
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#setUnionValues(String, String, short, XSSimpleTypeDecl[], XSObjectList)->XSSimpleTypeDecl::: simple type decl set union values
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getType()->short::: simple type decl get type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getTypeCategory()->short::: simple type decl get type category
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getName()->String::: simple type decl get name
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getTypeName()->String::: simple type decl get type name
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getNamespace()->String::: simple type decl get namespace
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getFinal()->short::: simple type decl get final
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#isFinal(short)->boolean::: simple type decl is final
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getBaseType()->XSTypeDefinition::: simple type decl get base type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getAnonymous()->boolean::: simple type decl get anonymous
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getVariety()->short::: simple type decl get variety
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#isIDType()->boolean::: simple type decl is type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getWhitespace()->short::: simple type decl get whitespace
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getPrimitiveKind()->short::: simple type decl get primitive kind
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getBuiltInKind()->short:::Returns the closest built-in type category this type represents or derived from
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getPrimitiveType()->XSSimpleTypeDefinition:::If variety is atomic the primitive type definition (a built-in primitive datatype definition or the simple ur-type definition) is available, otherwise null.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getItemType()->XSSimpleTypeDefinition:::If variety is list the item type definition (an atomic or union simple type definition) is available, otherwise null.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getMemberTypes()->XSObjectList:::If variety is union the list of member type definitions (a non-empty sequence of simple type definitions) is available, otherwise an empty XSObjectList.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#applyFacets(XSFacets, short, short, ValidationContext)->void:::If <restriction> is chosen
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#applyFacets1(XSFacets, short, short)->void:::built-in derived types by restriction
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#applyFacets1(XSFacets, short, short, short)->void:::built-in derived types by restriction
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#applyFacets(XSFacets, short, short, short, ValidationContext)->void:::If <restriction> is chosen, or built-in derived types by restriction
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#validate(String, ValidationContext, ValidatedInfo)->Object:::validate a value, and return the compiled form
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getActualEnumValue(String, ValidationContext, ValidatedInfo)->ValidatedInfo::: simple type decl get actual enum value
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#validateWithInfo(String, ValidationContext, ValidatedInfo)->ValidatedInfo:::validate a value, and return the compiled form
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#validate(Object, ValidationContext, ValidatedInfo)->Object:::validate a value, and return the compiled form
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#validate(ValidationContext, ValidatedInfo)->void:::validate an actual value against this DV
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#isEqual(Object, Object)->boolean::: simple type decl is equal
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#isIdentical(Object, Object)->boolean::: simple type decl is identical
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#normalize(String, short)->String::: simple type decl normalize
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#normalize(Object, short)->String::: simple type decl normalize
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#reportError(String, Object[])->void::: simple type decl report error
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getOrdered()->short::: Fundamental Facet: ordered.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getBounded()->boolean:::Fundamental Facet: bounded.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getFinite()->boolean:::Fundamental Facet: cardinality.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getNumeric()->boolean:::Fundamental Facet: numeric.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#isDefinedFacet(short)->boolean:::Convenience method
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getDefinedFacets()->short:::[facets]: all facets defined on this type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#isFixedFacet(short)->boolean:::Convenience method
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getFixedFacets()->short:::[facets]: all defined facets for this type which are fixed.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getLexicalFacetValue(short)->String:::Convenience method
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getLexicalEnumeration()->StringList:::A list of enumeration values if it exists, otherwise an empty StringList.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getActualEnumeration()->ObjectList:::A list of actual enumeration values if it exists, otherwise an empty ObjectList.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getEnumerationItemTypeList()->ObjectList:::A list of enumeration type values (as a list of ShortList objects) if it exists, otherwise returns null
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getEnumerationTypeList()->ShortList::: simple type decl get enumeration type list
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getLexicalPattern()->StringList:::A list of pattern values if it exists, otherwise an empty StringList.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getAnnotations()->XSObjectList:::[annotations]: a set of annotations for this simple type component if it exists, otherwise an empty XSObjectList.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#derivedFromType(XSTypeDefinition, short)->boolean::: simple type decl derived from type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#derivedFrom(String, String, short)->boolean::: simple type decl derived from
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#isDOMDerivedFrom(String, String, int)->boolean:::Checks if a type is derived from another by restriction, given the name and namespace
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#setNSContext(NamespaceContext)->void::: validation context impl set context
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#needFacetChecking()->boolean::: validation context impl need facet checking
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#needExtraChecking()->boolean::: validation context impl need extra checking
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#needToNormalize()->boolean::: validation context impl need to normalize
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#useNamespaces()->boolean::: validation context impl use namespaces
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#isEntityDeclared(String)->boolean::: validation context impl is entity declared
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#isEntityUnparsed(String)->boolean::: validation context impl is entity unparsed
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#isIdDeclared(String)->boolean::: validation context impl is id declared
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#addId(String)->void::: validation context impl add id
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#addIdRef(String)->void::: validation context impl add id ref
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#getSymbol(String)->String::: validation context impl get symbol
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#getURI(String)->String::: validation context impl get i
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl.ValidationContextImpl#getLocale()->Locale::: validation context impl get locale
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#reset()->void::: simple type decl reset
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getNamespaceItem()->XSNamespaceItem::: simple type decl get namespace item
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#setNamespaceItem(XSNamespaceItem)->void::: simple type decl set namespace item
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#toString()->String::: simple type decl to string
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getFacets()->XSObjectList::: A list of constraining facets if it exists, otherwise an empty XSObjectList
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getFacet(int)->XSObject::: simple type decl get facet
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getMultiValueFacets()->XSObjectList::: A list of enumeration and pattern constraining facets if it exists, otherwise an empty XSObjectList.
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getMinInclusiveValue()->Object::: simple type decl get min inclusive value
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getMinExclusiveValue()->Object::: simple type decl get min exclusive value
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getMaxInclusiveValue()->Object::: simple type decl get max inclusive value
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getMaxExclusiveValue()->Object::: simple type decl get max exclusive value
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#setAnonymous(boolean)->void::: simple type decl set anonymous
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#getTypeNamespace()->String::: simple type decl get type namespace
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDecl#isDerivedFrom(String, String, int)->boolean::: simple type decl is derived from
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getWrappedXSSimpleType()->XSSimpleType::: simple type delegate get wrapped simple type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getAnnotations()->XSObjectList::: simple type delegate get annotations
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getBounded()->boolean::: simple type delegate get bounded
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getBuiltInKind()->short::: simple type delegate get built in kind
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getDefinedFacets()->short::: simple type delegate get defined facets
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getFacets()->XSObjectList::: simple type delegate get facets
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getFacet(int)->XSObject::: simple type delegate get facet
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getFinite()->boolean::: simple type delegate get finite
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getFixedFacets()->short::: simple type delegate get fixed facets
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getItemType()->XSSimpleTypeDefinition::: simple type delegate get item type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getLexicalEnumeration()->StringList::: simple type delegate get lexical enumeration
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getLexicalFacetValue(short)->String::: simple type delegate get lexical facet value
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getLexicalPattern()->StringList::: simple type delegate get lexical pattern
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getMemberTypes()->XSObjectList::: simple type delegate get member types
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getMultiValueFacets()->XSObjectList::: simple type delegate get multi value facets
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getNumeric()->boolean::: simple type delegate get numeric
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getOrdered()->short::: simple type delegate get ordered
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getPrimitiveType()->XSSimpleTypeDefinition::: simple type delegate get primitive type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getVariety()->short::: simple type delegate get variety
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#isDefinedFacet(short)->boolean::: simple type delegate is defined facet
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#isFixedFacet(short)->boolean::: simple type delegate is fixed facet
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#derivedFrom(String, String, short)->boolean::: simple type delegate derived from
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#derivedFromType(XSTypeDefinition, short)->boolean::: simple type delegate derived from type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getAnonymous()->boolean::: simple type delegate get anonymous
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getBaseType()->XSTypeDefinition::: simple type delegate get base type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getFinal()->short::: simple type delegate get final
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getTypeCategory()->short::: simple type delegate get type category
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#isFinal(short)->boolean::: simple type delegate is final
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getName()->String::: simple type delegate get name
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getNamespace()->String::: simple type delegate get namespace
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getNamespaceItem()->XSNamespaceItem::: simple type delegate get namespace item
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getType()->short::: simple type delegate get type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#applyFacets(XSFacets, short, short, ValidationContext)->void::: simple type delegate apply facets
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getPrimitiveKind()->short::: simple type delegate get primitive kind
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#getWhitespace()->short::: simple type delegate get whitespace
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#isEqual(Object, Object)->boolean::: simple type delegate is equal
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#isIDType()->boolean::: simple type delegate is type
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#validate(ValidationContext, ValidatedInfo)->void::: simple type delegate validate
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#validate(String, ValidationContext, ValidatedInfo)->Object::: simple type delegate validate
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#validate(Object, ValidationContext, ValidatedInfo)->Object::: simple type delegate validate
com.sun.org.apache.xerces.internal.impl.dv.xs.XSSimpleTypeDelegate#toString()->String::: simple type delegate to string
com.sun.org.apache.xerces.internal.impl.dv.xs.YearDV#getActualValue(String, ValidationContext)->Object:::Convert a string to a compiled form
com.sun.org.apache.xerces.internal.impl.dv.xs.YearDV#parse(String)->DateTimeData:::Parses, validates and computes normalized version of gYear object
com.sun.org.apache.xerces.internal.impl.dv.xs.YearDV#dateToString(DateTimeData)->String:::Converts year object representation to String
com.sun.org.apache.xerces.internal.impl.dv.xs.YearDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: year v get gregorian calendar
com.sun.org.apache.xerces.internal.impl.dv.xs.YearMonthDurationDV#getActualValue(String, ValidationContext)->Object::: year month duration v get actual value
com.sun.org.apache.xerces.internal.impl.dv.xs.YearMonthDurationDV#getDuration(DateTimeData)->Duration::: year month duration v get duration
com.sun.org.apache.xerces.internal.impl.dv.xs.YearMonthDV#getActualValue(String, ValidationContext)->Object:::Convert a string to a compiled form
com.sun.org.apache.xerces.internal.impl.dv.xs.YearMonthDV#parse(String)->DateTimeData:::Parses, validates and computes normalized version of gYearMonth object
com.sun.org.apache.xerces.internal.impl.dv.xs.YearMonthDV#dateToString(DateTimeData)->String::: year month v date to string
com.sun.org.apache.xerces.internal.impl.dv.xs.YearMonthDV#getXMLGregorianCalendar(DateTimeData)->XMLGregorianCalendar::: year month v get gregorian calendar
