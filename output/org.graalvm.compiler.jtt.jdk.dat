CharacterBits#test(char)::: character bits test:::return->Character->reverseBytes
CharacterBits#run0()::: character bits run0:::runTest
CharacterBits#run1()::: character bits run1:::runTest
CharacterBits#run2()::: character bits run2:::runTest->runTest->runTest->runTest->runTest->runTest->runTest
Class_getName#test(int)::: class_get name test:::if->return->getName->return
Class_getName#run0()::: class_get name run0:::runTest
DivideUnsigned#divUInt(int, int)::: divide unsigned div int:::return->Integer->divideUnsigned
DivideUnsigned#remUInt(int, int)::: divide unsigned rem int:::return->Integer->remainderUnsigned
DivideUnsigned#divULong(long, long)::: divide unsigned div long:::return->Long->divideUnsigned
DivideUnsigned#remULong(long, long)::: divide unsigned rem long:::return->Long->remainderUnsigned
DivideUnsigned#testInt(int, int)::: divide unsigned test int:::runTest->runTest
DivideUnsigned#testLong(long, long)::: divide unsigned test long:::runTest->runTest
DivideUnsigned#testIntPP()::: divide unsigned test int p:::testInt
DivideUnsigned#testIntNP()::: divide unsigned test int p:::testInt
DivideUnsigned#testIntPN()::: divide unsigned test int n:::testInt
DivideUnsigned#testIntNN()::: divide unsigned test int n:::testInt
DivideUnsigned#testLongPP()::: divide unsigned test long p:::testLong
DivideUnsigned#testLongNP()::: divide unsigned test long p:::testLong
DivideUnsigned#testLongPN()::: divide unsigned test long n:::testLong
DivideUnsigned#testLongNN()::: divide unsigned test long n:::testLong
EnumMap01#test(int)::: enum map01 test:::return->map->Enum->values->get
EnumMap01#run0()::: enum map01 run0:::runTest
EnumMap01#run1()::: enum map01 run1:::runTest
EnumMap01#run2()::: enum map01 run2:::runTest
EnumMap02#test(int)::: enum map02 test:::map->new->EnumMap<>->map->put->map->put->map->put->return->map->Enum->values->get
EnumMap02#run0()::: enum map02 run0:::runTest
EnumMap02#run1()::: enum map02 run1:::runTest
EnumMap02#run2()::: enum map02 run2:::runTest
IntegerBits#test(int)::: integer bits test:::return->Integer->reverseBytes
IntegerBits#test2(int)::: integer bits test2:::return->Integer->numberOfLeadingZeros
IntegerBits#test3(int)::: integer bits test3:::return->Integer->numberOfTrailingZeros
IntegerBits#test4(int)::: integer bits test4:::return->Integer->bitCount
IntegerBits#run0()::: integer bits run0:::runTest
IntegerBits#run1()::: integer bits run1:::runTest
IntegerBits#run2()::: integer bits run2:::runTest
IntegerBits#run3()::: integer bits run3:::runTest
IntegerBits#run4()::: integer bits run4:::runTest
IntegerBits#run5()::: integer bits run5:::runTest
IntegerBits#run6()::: integer bits run6:::runTest
IntegerBits#run7()::: integer bits run7:::runTest
IntegerBits#run8()::: integer bits run8:::runTest
IntegerBits#run9()::: integer bits run9:::runTest
IntegerBits#run10()::: integer bits run10:::runTest
IntegerBits#run11()::: integer bits run11:::runTest
IntegerBits#run12()::: integer bits run12:::runTest
IntegerBits#run17()::: integer bits run17:::runTest
IntegerBits#run18()::: integer bits run18:::runTest
IntegerBits#run13()::: integer bits run13:::runTest
IntegerBits#run14()::: integer bits run14:::runTest
IntegerBits#run15()::: integer bits run15:::runTest
IntegerBits#run16()::: integer bits run16:::runTest
IntegerBits#run19()::: integer bits run19:::runTest
IntegerBits#run20()::: integer bits run20:::runTest
IntegerBits#run21()::: integer bits run21:::runTest
IntegerBits#test5(int)::: integer bits test5:::return->Integer->reverseBytes
IntegerBits#run22()::: integer bits run22:::runTest
LongBits#test(long)::: long bits test:::return->Long->reverseBytes
LongBits#test2(long)::: long bits test2:::return->Long->numberOfLeadingZeros
LongBits#test3(long)::: long bits test3:::return->Long->numberOfTrailingZeros
LongBits#test4(long)::: long bits test4:::return->Long->bitCount
LongBits#run0()::: long bits run0:::runTest
LongBits#run1()::: long bits run1:::runTest
LongBits#run2()::: long bits run2:::runTest
LongBits#run3()::: long bits run3:::runTest
LongBits#run4()::: long bits run4:::runTest
LongBits#run5()::: long bits run5:::runTest
LongBits#run6()::: long bits run6:::runTest
LongBits#run7()::: long bits run7:::runTest
LongBits#run8()::: long bits run8:::runTest
LongBits#run9()::: long bits run9:::runTest
LongBits#run10()::: long bits run10:::runTest
LongBits#run11()::: long bits run11:::runTest
LongBits#run12()::: long bits run12:::runTest
LongBits#run13()::: long bits run13:::runTest
LongBits#run14()::: long bits run14:::runTest->runTest->runTest->runTest->runTest->runTest->runTest
ShortBits#test(short)::: short bits test:::return->Short->reverseBytes
ShortBits#run0()::: short bits run0:::runTest
ShortBits#run1()::: short bits run1:::runTest
ShortBits#run2()::: short bits run2:::runTest->runTest->runTest->runTest->runTest->runTest->runTest
System_currentTimeMillis01#test()::: system_current time millis01 test:::start->System->currentTimeMillis->for->i->return
System_currentTimeMillis01#run0()::: system_current time millis01 run0:::runTest
System_currentTimeMillis02#test()::: system_current time millis02 test:::for->i->if->GraalDirectives->inCompiledCode->return->return
System_currentTimeMillis02#run0()::: system_current time millis02 run0:::runTest
System_nanoTime01#test()::: system_nano time01 test:::start->System->nanoTime->for->i->return
System_nanoTime01#run0()::: system_nano time01 run0:::runTest
System_nanoTime02#test()::: system_nano time02 test:::for->i->if->GraalDirectives->inCompiledCode->return->return
System_nanoTime02#run0()::: system_nano time02 run0:::runTest
System_setOut#test(int)::: system_set out test:::oldOut->sum->for->i->System->setOut->return
System_setOut#doPrint(int)::: system_set out do print:::out->for->i
System_setOut#main(String[])::: system_set out main:::out->out->test->println
System_setOut#run0()::: system_set out run0:::runTest
Thread_setName#test(String)::: thread_set name test:::oldName->Thread->currentThread->getName->Thread->currentThread->setName->name2->Thread->currentThread->getName->Thread->currentThread->setName->return
Thread_setName#run0()::: thread_set name run0:::runTest
UnsafeAccess01#test()::: unsafe access01 test:::object->new->TestClass->value->UNSAFE->getInt->return
UnsafeAccess01#run0()::: unsafe access01 run0:::runTest
UnsafeAccess01#runDiamond()::: unsafe access01 run diamond:::runTest
UnsafeAccess01#testDiamond()::: unsafe access01 test diamond:::object->oldValue->if->UNSAFE->putInt->else->UNSAFE->putInt->UNSAFE->putInt->return
UnsafeAllocateInstance01#testInstance()::: unsafe allocate instance01 test instance:::newObject->UNSAFE->allocateInstance->return
UnsafeAllocateInstance01#testClassForException(Class)::: unsafe allocate instance01 test class for exception:::UNSAFE->allocateInstance
UnsafeAllocateInstance01#executeExpected(ResolvedJavaMethod, Object, Object...)::: unsafe allocate instance01 execute expected:::if->cl->if->cl->isArray->return->cl->getName->new->InstantiationException->new->Result->return->super->executeExpected
UnsafeAllocateInstance01#run0()::: unsafe allocate instance01 run0:::runTest
UnsafeAllocateInstance01#run1()::: unsafe allocate instance01 run1:::runTest
UnsafeAllocateInstance01#run7()::: unsafe allocate instance01 run7:::runTest
UnsafeAllocateInstance01#run2()::: unsafe allocate instance01 run2:::runTest
UnsafeAllocateInstance01#run3()::: unsafe allocate instance01 run3:::runTest
UnsafeAllocateInstance01#run4()::: unsafe allocate instance01 run4:::runTest
UnsafeAllocateInstance01#run5()::: unsafe allocate instance01 run5:::runTest
UnsafeAllocateInstance01#run6()::: unsafe allocate instance01 run6:::runTest
Unsafe_compareAndSwap#test(Unsafe_compareAndSwap, Object, String, String)::: unsafe_compare and swap test:::UNSAFE->compareAndSwapObject->UNSAFE->compareAndSwapObject->return
Unsafe_compareAndSwap#before(ResolvedJavaMethod)::: unsafe_compare and swap before:::
Unsafe_compareAndSwap#run0()::: unsafe_compare and swap run0:::runTest
Unsafe_compareAndSwapNullCheck#test(Unsafe_compareAndSwapNullCheck, long, long)::: unsafe_compare and swap null check test:::l->UNSAFE->compareAndSwapLong
Unsafe_compareAndSwapNullCheck#run0()::: unsafe_compare and swap null check run0:::getInitialOptions->runTest
