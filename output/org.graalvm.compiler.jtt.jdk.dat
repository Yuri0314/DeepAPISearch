org.graalvm.compiler.jtt.jdk.CharacterBits#test(char)->char::: character bits test
org.graalvm.compiler.jtt.jdk.CharacterBits#run0()->void::: character bits run0
org.graalvm.compiler.jtt.jdk.CharacterBits#run1()->void::: character bits run1
org.graalvm.compiler.jtt.jdk.CharacterBits#run2()->void::: character bits run2
org.graalvm.compiler.jtt.jdk.Class_getName#test(int)->String::: class_get name test
org.graalvm.compiler.jtt.jdk.Class_getName#run0()->void::: class_get name run0
org.graalvm.compiler.jtt.jdk.DivideUnsigned#divUInt(int, int)->int::: divide unsigned div int
org.graalvm.compiler.jtt.jdk.DivideUnsigned#remUInt(int, int)->int::: divide unsigned rem int
org.graalvm.compiler.jtt.jdk.DivideUnsigned#divULong(long, long)->long::: divide unsigned div long
org.graalvm.compiler.jtt.jdk.DivideUnsigned#remULong(long, long)->long::: divide unsigned rem long
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testInt(int, int)->void::: divide unsigned test int
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testLong(long, long)->void::: divide unsigned test long
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testIntPP()->void::: divide unsigned test int p
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testIntNP()->void::: divide unsigned test int p
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testIntPN()->void::: divide unsigned test int n
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testIntNN()->void::: divide unsigned test int n
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testLongPP()->void::: divide unsigned test long p
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testLongNP()->void::: divide unsigned test long p
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testLongPN()->void::: divide unsigned test long n
org.graalvm.compiler.jtt.jdk.DivideUnsigned#testLongNN()->void::: divide unsigned test long n
org.graalvm.compiler.jtt.jdk.EnumMap01#test(int)->String::: enum map01 test
org.graalvm.compiler.jtt.jdk.EnumMap01#run0()->void::: enum map01 run0
org.graalvm.compiler.jtt.jdk.EnumMap01#run1()->void::: enum map01 run1
org.graalvm.compiler.jtt.jdk.EnumMap01#run2()->void::: enum map01 run2
org.graalvm.compiler.jtt.jdk.EnumMap02#test(int)->String::: enum map02 test
org.graalvm.compiler.jtt.jdk.EnumMap02#run0()->void::: enum map02 run0
org.graalvm.compiler.jtt.jdk.EnumMap02#run1()->void::: enum map02 run1
org.graalvm.compiler.jtt.jdk.EnumMap02#run2()->void::: enum map02 run2
org.graalvm.compiler.jtt.jdk.IntegerBits#test(int)->int::: integer bits test
org.graalvm.compiler.jtt.jdk.IntegerBits#test2(int)->int::: integer bits test2
org.graalvm.compiler.jtt.jdk.IntegerBits#test3(int)->int::: integer bits test3
org.graalvm.compiler.jtt.jdk.IntegerBits#test4(int)->int::: integer bits test4
org.graalvm.compiler.jtt.jdk.IntegerBits#run0()->void::: integer bits run0
org.graalvm.compiler.jtt.jdk.IntegerBits#run1()->void::: integer bits run1
org.graalvm.compiler.jtt.jdk.IntegerBits#run2()->void::: integer bits run2
org.graalvm.compiler.jtt.jdk.IntegerBits#run3()->void::: integer bits run3
org.graalvm.compiler.jtt.jdk.IntegerBits#run4()->void::: integer bits run4
org.graalvm.compiler.jtt.jdk.IntegerBits#run5()->void::: integer bits run5
org.graalvm.compiler.jtt.jdk.IntegerBits#run6()->void::: integer bits run6
org.graalvm.compiler.jtt.jdk.IntegerBits#run7()->void::: integer bits run7
org.graalvm.compiler.jtt.jdk.IntegerBits#run8()->void::: integer bits run8
org.graalvm.compiler.jtt.jdk.IntegerBits#run9()->void::: integer bits run9
org.graalvm.compiler.jtt.jdk.IntegerBits#run10()->void::: integer bits run10
org.graalvm.compiler.jtt.jdk.IntegerBits#run11()->void::: integer bits run11
org.graalvm.compiler.jtt.jdk.IntegerBits#run12()->void::: integer bits run12
org.graalvm.compiler.jtt.jdk.IntegerBits#run17()->void::: integer bits run17
org.graalvm.compiler.jtt.jdk.IntegerBits#run18()->void::: integer bits run18
org.graalvm.compiler.jtt.jdk.IntegerBits#run13()->void::: integer bits run13
org.graalvm.compiler.jtt.jdk.IntegerBits#run14()->void::: integer bits run14
org.graalvm.compiler.jtt.jdk.IntegerBits#run15()->void::: integer bits run15
org.graalvm.compiler.jtt.jdk.IntegerBits#run16()->void::: integer bits run16
org.graalvm.compiler.jtt.jdk.IntegerBits#run19()->void::: integer bits run19
org.graalvm.compiler.jtt.jdk.IntegerBits#run20()->void::: integer bits run20
org.graalvm.compiler.jtt.jdk.IntegerBits#run21()->void::: integer bits run21
org.graalvm.compiler.jtt.jdk.IntegerBits#test5(int)->int::: integer bits test5
org.graalvm.compiler.jtt.jdk.IntegerBits#run22()->void::: integer bits run22
org.graalvm.compiler.jtt.jdk.LongBits#test(long)->long::: long bits test
org.graalvm.compiler.jtt.jdk.LongBits#test2(long)->int::: long bits test2
org.graalvm.compiler.jtt.jdk.LongBits#test3(long)->int::: long bits test3
org.graalvm.compiler.jtt.jdk.LongBits#test4(long)->int::: long bits test4
org.graalvm.compiler.jtt.jdk.LongBits#run0()->void::: long bits run0
org.graalvm.compiler.jtt.jdk.LongBits#run1()->void::: long bits run1
org.graalvm.compiler.jtt.jdk.LongBits#run2()->void::: long bits run2
org.graalvm.compiler.jtt.jdk.LongBits#run3()->void::: long bits run3
org.graalvm.compiler.jtt.jdk.LongBits#run4()->void::: long bits run4
org.graalvm.compiler.jtt.jdk.LongBits#run5()->void::: long bits run5
org.graalvm.compiler.jtt.jdk.LongBits#run6()->void::: long bits run6
org.graalvm.compiler.jtt.jdk.LongBits#run7()->void::: long bits run7
org.graalvm.compiler.jtt.jdk.LongBits#run8()->void::: long bits run8
org.graalvm.compiler.jtt.jdk.LongBits#run9()->void::: long bits run9
org.graalvm.compiler.jtt.jdk.LongBits#run10()->void::: long bits run10
org.graalvm.compiler.jtt.jdk.LongBits#run11()->void::: long bits run11
org.graalvm.compiler.jtt.jdk.LongBits#run12()->void::: long bits run12
org.graalvm.compiler.jtt.jdk.LongBits#run13()->void::: long bits run13
org.graalvm.compiler.jtt.jdk.LongBits#run14()->void::: long bits run14
org.graalvm.compiler.jtt.jdk.ShortBits#test(short)->short::: short bits test
org.graalvm.compiler.jtt.jdk.ShortBits#run0()->void::: short bits run0
org.graalvm.compiler.jtt.jdk.ShortBits#run1()->void::: short bits run1
org.graalvm.compiler.jtt.jdk.ShortBits#run2()->void::: short bits run2
org.graalvm.compiler.jtt.jdk.System_currentTimeMillis01#test()->int::: system_current time millis01 test
org.graalvm.compiler.jtt.jdk.System_currentTimeMillis01#run0()->void::: system_current time millis01 run0
org.graalvm.compiler.jtt.jdk.System_currentTimeMillis02#test()->boolean::: system_current time millis02 test
org.graalvm.compiler.jtt.jdk.System_currentTimeMillis02#run0()->void::: system_current time millis02 run0
org.graalvm.compiler.jtt.jdk.System_nanoTime01#test()->int::: system_nano time01 test
org.graalvm.compiler.jtt.jdk.System_nanoTime01#run0()->void::: system_nano time01 run0
org.graalvm.compiler.jtt.jdk.System_nanoTime02#test()->boolean::: system_nano time02 test
org.graalvm.compiler.jtt.jdk.System_nanoTime02#run0()->void::: system_nano time02 run0
org.graalvm.compiler.jtt.jdk.System_setOut#test(int)->int::: system_set out test
org.graalvm.compiler.jtt.jdk.System_setOut#main(String[])->void::: system_set out main
org.graalvm.compiler.jtt.jdk.System_setOut#run0()->void::: system_set out run0
org.graalvm.compiler.jtt.jdk.Thread_setName#test(String)->String::: thread_set name test
org.graalvm.compiler.jtt.jdk.Thread_setName#run0()->void::: thread_set name run0
org.graalvm.compiler.jtt.jdk.UnsafeAccess01#test()->int::: unsafe access01 test
org.graalvm.compiler.jtt.jdk.UnsafeAccess01#run0()->void::: unsafe access01 run0
org.graalvm.compiler.jtt.jdk.UnsafeAccess01#runDiamond()->void::: unsafe access01 run diamond
org.graalvm.compiler.jtt.jdk.UnsafeAccess01#testDiamond()->int::: unsafe access01 test diamond
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#testInstance()->int::: unsafe allocate instance01 test instance
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#testClassForException(Class)->void::: unsafe allocate instance01 test class for exception
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#executeExpected(ResolvedJavaMethod, Object, Object...)->Result::: unsafe allocate instance01 execute expected
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#run0()->void::: unsafe allocate instance01 run0
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#run1()->void::: unsafe allocate instance01 run1
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#run7()->void::: unsafe allocate instance01 run7
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#run2()->void::: unsafe allocate instance01 run2
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#run3()->void::: unsafe allocate instance01 run3
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#run4()->void::: unsafe allocate instance01 run4
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#run5()->void::: unsafe allocate instance01 run5
org.graalvm.compiler.jtt.jdk.UnsafeAllocateInstance01#run6()->void::: unsafe allocate instance01 run6
org.graalvm.compiler.jtt.jdk.Unsafe_compareAndSwap#test(Unsafe_compareAndSwap, Object, String, String)->String::: unsafe_compare and swap test
org.graalvm.compiler.jtt.jdk.Unsafe_compareAndSwap#before(ResolvedJavaMethod)->void::: unsafe_compare and swap before
org.graalvm.compiler.jtt.jdk.Unsafe_compareAndSwap#run0()->void::: unsafe_compare and swap run0
org.graalvm.compiler.jtt.jdk.Unsafe_compareAndSwapNullCheck#test(Unsafe_compareAndSwapNullCheck, long, long)->void::: unsafe_compare and swap null check test
org.graalvm.compiler.jtt.jdk.Unsafe_compareAndSwapNullCheck#run0()->void::: unsafe_compare and swap null check run0
