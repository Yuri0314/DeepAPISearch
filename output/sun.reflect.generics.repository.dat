sun.reflect.generics.repository.AbstractRepository#getTree()->T:::Accessor for tree.
sun.reflect.generics.repository.AbstractRepository#getReifier()->Reifier:::Returns a Reifier used to convert parts of the AST into reflective objects.
sun.reflect.generics.repository.AbstractRepository#parse(String)->T:::Returns the AST for the generic type info of this entity.
sun.reflect.generics.repository.ClassRepository#parse(String)->ClassSignature::: class repository parse
sun.reflect.generics.repository.ClassRepository#make(String, GenericsFactory)->ClassRepository:::Static factory method.
sun.reflect.generics.repository.ClassRepository#getSuperclass()->Type::: class repository get superclass
sun.reflect.generics.repository.ClassRepository#getSuperInterfaces()->Type[]::: class repository get super interfaces
sun.reflect.generics.repository.ConstructorRepository#parse(String)->MethodTypeSignature::: constructor repository parse
sun.reflect.generics.repository.ConstructorRepository#make(String, GenericsFactory)->ConstructorRepository:::Static factory method.
sun.reflect.generics.repository.ConstructorRepository#getParameterTypes()->Type[]::: constructor repository get parameter types
sun.reflect.generics.repository.ConstructorRepository#getExceptionTypes()->Type[]::: constructor repository get exception types
sun.reflect.generics.repository.FieldRepository#parse(String)->TypeSignature::: field repository parse
sun.reflect.generics.repository.FieldRepository#make(String, GenericsFactory)->FieldRepository:::Static factory method.
sun.reflect.generics.repository.FieldRepository#getGenericType()->Type::: field repository get generic type
sun.reflect.generics.repository.GenericDeclRepository#getTypeParameters()->TypeVariable[]:::Returns the formal type parameters of this generic declaration.
sun.reflect.generics.repository.MethodRepository#make(String, GenericsFactory)->MethodRepository:::Static factory method.
sun.reflect.generics.repository.MethodRepository#getReturnType()->Type::: method repository get return type
