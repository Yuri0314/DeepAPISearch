sun.jvmstat.perfdata.monitor.protocol.local.LocalEventTimer#getInstance()->LocalEventTimer:::Get the singleton LocalEventTimer instance
sun.jvmstat.perfdata.monitor.protocol.local.LocalMonitoredVm#detach()->void:::.
sun.jvmstat.perfdata.monitor.protocol.local.LocalMonitoredVm#addVmListener(VmListener)->void:::.
sun.jvmstat.perfdata.monitor.protocol.local.LocalMonitoredVm#removeVmListener(VmListener)->void:::.
sun.jvmstat.perfdata.monitor.protocol.local.LocalMonitoredVm#setInterval(int)->void:::.
sun.jvmstat.perfdata.monitor.protocol.local.LocalMonitoredVm#fireMonitorStatusChangedEvents(List, List)->void:::Fire MonitoredVmStructureChanged events.
sun.jvmstat.perfdata.monitor.protocol.local.LocalMonitoredVm#fireMonitorsUpdatedEvents()->void:::Fire MonitoredUpdated events.
sun.jvmstat.perfdata.monitor.protocol.local.LocalMonitoredVm#cast(Object)->T::: local monitored vm cast
sun.jvmstat.perfdata.monitor.protocol.local.LocalVmManager#activeVms()->Set:::Return the current set of monitorable Java Virtual Machines
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostLocalService#getMonitoredHost(HostIdentifier)->MonitoredHost::: monitored host local service get monitored host
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostLocalService#getScheme()->String::: monitored host local service get scheme
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostProvider#getMonitoredVm(VmIdentifier)->MonitoredVm::: monitored host provider get monitored vm
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostProvider#getMonitoredVm(VmIdentifier, int)->MonitoredVm::: monitored host provider get monitored vm
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostProvider#detach(MonitoredVm)->void::: monitored host provider detach
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostProvider#addHostListener(HostListener)->void::: monitored host provider add host listener
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostProvider#removeHostListener(HostListener)->void::: monitored host provider remove host listener
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostProvider#setInterval(int)->void::: monitored host provider set interval
sun.jvmstat.perfdata.monitor.protocol.local.MonitoredHostProvider#activeVms()->Set::: monitored host provider active vms
sun.jvmstat.perfdata.monitor.protocol.local.PerfDataFile#getFile(int)->File:::Get a File object for the instrumentation backing store file for the JVM identified by the given local Vm Identifier
sun.jvmstat.perfdata.monitor.protocol.local.PerfDataFile#getFile(String, int)->File:::Return the File object for the backing store file for the specified Java Virtual Machine
sun.jvmstat.perfdata.monitor.protocol.local.PerfDataFile#getLocalVmId(File)->int:::Method to extract a local Java Virtual Machine Identifier from the file name of the given File object.
sun.jvmstat.perfdata.monitor.protocol.local.PerfDataFile#getTempDirectory()->String:::Return the name of the temporary directory being searched for HotSpot PerfData backing store files
sun.jvmstat.perfdata.monitor.protocol.local.PerfDataFile#getTempDirectory(String)->String:::Return the name of the temporary directory to be searched for HotSpot PerfData backing store files for a given user
sun.jvmstat.perfdata.monitor.protocol.local.PerfDataFile#getTempDirectories(String, int)->List:::Return the names of the temporary directories being searched for HotSpot PerfData backing store files
