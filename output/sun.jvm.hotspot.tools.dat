ClassLoaderStats#getName()::: class loader stats get name:::return
ClassLoaderStats#main(String[])::: class loader stats main:::cls->new->ClassLoaderStats->cls->execute
ClassLoaderStats#run()::: class loader stats run:::printClassLoaderStatistics
ClassLoaderStats#printClassLoaderStatistics()::: class loader stats print class loader statistics:::out->err->loaderMap->new->HashMap->bootstrapLoaderData->new->LoaderData->if->err->print->vm->VM->getVM->heap->vm->getObjectHeap->classLoaderKlass->vm->getSystemDictionary->getClassLoaderKlass->try->heap->new->DefaultHeapVisitor->iterateObjectsOfKlass->catch->se->printStackTrace->finally->if->err->println->err->print->cldg->VM->getVM->getClassLoaderDataGraph->cldg->new->ClassLoaderDataGraph.ClassVisitor->classesDo->if->err->println->err->print->analysis->new->ReversePtrsAnalysis->if->analysis->new->HeapProgressThunk->setHeapProgressThunk->try->analysis->run->catch->if->err->println->finally->liveness->VM->getVM->getRevPtrs->out->println->out->println->numClassLoaders->totalNumClasses->totalClassSize->numAliveLoaders->numDeadLoaders->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->println->for->keyItr->loaderMap->keySet->iterator->keyItr->hasNext->out->println->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->print->out->println
ClassLoaderStats#objectSize(Oop)::: class loader stats object size:::return->oop->getObjectSize
ClassLoaderStats#arraySize(GenericArray)::: class loader stats array size:::return->arr->getLength->arr->getSize
ClassLoaderStats#computeSize(InstanceKlass)::: class loader stats compute size:::size->k->getSize->cp->k->getConstants->cp->getSize->if->cp->getCache->cp->getCache->getSize->cp->getTags->arraySize->k->getLocalInterfaces->arraySize->k->getTransitiveInterfaces->arraySize->k->getInnerClasses->arraySize->k->getFields->arraySize->methods->k->getMethods->nmethods->methods->getLength->if->methods->getSize->for->i->return
FinalizerInfo#getName()::: finalizer info get name:::return
FinalizerInfo#main(String[])::: finalizer info main:::finfo->new->FinalizerInfo->finfo->execute
FinalizerInfo#run()::: finalizer info run:::ik->SystemDictionaryHelper->findInstanceKlass->queueref->new->OopArr->ik->new->DefaultOopVisitor->iterateStaticFields->queue->k->queue->getKlass->queueLengthField->k->findField->queueLength->queueLengthField->getValue->headField->k->findField->head->headField->getValue->println->if->head->getKlass->referentField->k->findField->nextField->k->findField->map->new->HashMap->for->list->new->ArrayList->list->map->values->addAll->Collections->new->Comparator->sort->println->println->println->for->i->list->size
FlagDumper#run()::: flag dumper run:::flags->VM->getVM->getCommandLineFlags->out->if->out->println->else->for->f
FlagDumper#main(String[])::: flag dumper main:::fd->new->FlagDumper->fd->execute
HeapDumper#getName()::: heap dumper get name:::return
HeapDumper#printFlagsUsage()::: heap dumper print flags usage:::println->println->super->printFlagsUsage
HeapDumper#run()::: heap dumper run:::println->try->new->HeapHprofBinWriter->write->println->catch->ioe->getMessage->println->finally
HeapDumper#main(String[])::: heap dumper main:::dumper->new->HeapDumper->dumper->runWithArgs
HeapDumper#runWithArgs(String...)::: heap dumper run with args:::if->if->equals->newargs->new->StringArr->System->arraycopy->execute
HeapSummary#main(String[])::: heap summary main:::hs->new->HeapSummary->hs->execute
HeapSummary#getName()::: heap summary get name:::return
HeapSummary#run()::: heap summary run:::heap->VM->getVM->getUniverse->heap->flags->VM->getVM->getCommandLineFlags->flagMap->new->HashMap->if->println->else->for->f->println->printGCAlgorithm->println->println->getFlagValue->printValue->getFlagValue->printValue->getFlagValue->printValMB->getFlagValue->printValMB->getFlagValue->printValMB->getFlagValue->printValMB->getFlagValue->printValue->getFlagValue->printValue->getFlagValue->printValMB->getFlagValue->printValMB->getFlagValue->printValMB->HeapRegion->grainBytes->printValMB->println->println->if->genHeap->for->n->genHeap->nGens->else->if->printG1HeapSummary->else->if->psh->youngGen->psh->youngGen->printPSYoungGen->oldGen->psh->oldGen->oldFree->oldGen->capacity->oldGen->used->println->oldGen->capacity->printValMB->oldGen->used->printValMB->printValMB->oldGen->used->oldGen->capacity->println->else->if->eh->eh->space->printSpace->else->if->zheap->zheap->printOn->else->throw->heap->getClass->new->RuntimeException->println
HeapSummary#printGCAlgorithm(Map)::: heap summary print algorithm:::l->getFlagValue->if->println->getFlagValue->if->println->return->getFlagValue->if->print->getFlagValue->println->return->getFlagValue->if->print->getFlagValue->println->return->getFlagValue->if->println->return->getFlagValue->if->print->getFlagValue->println->return->println
HeapSummary#printPSYoungGen(PSYoungGen)::: heap summary print young gen:::println->eden->youngGen->edenSpace->println->printMutableSpace->from->youngGen->fromSpace->println->printMutableSpace->to->youngGen->toSpace->println->printMutableSpace
HeapSummary#printMutableSpace(MutableSpace)::: heap summary print mutable space:::space->capacity->printValMB->space->used->printValMB->free->space->capacity->space->used->printValMB->space->used->space->capacity->println
HeapSummary#printGen(Generation)::: heap summary print gen:::gen->capacity->printValMB->gen->used->printValMB->gen->free->printValMB->gen->used->gen->capacity->println
HeapSummary#printSpace(ContiguousSpace)::: heap summary print space:::space->capacity->printValMB->space->used->printValMB->space->free->printValMB->space->used->space->capacity->println
HeapSummary#printG1HeapSummary(G1CollectedHeap)::: heap summary print g1 heap summary:::g1mm->g1h->g1mm->edenRegionNum->g1mm->edenRegionNum->survivorRegionNum->g1mm->survivorRegionNum->oldSet->g1h->oldSet->humongousSet->g1h->humongousSet->oldRegionNum->oldSet->length->humongousSet->length->g1h->n_regions->g1h->used->g1h->capacity->printG1Space->println->g1mm->edenUsed->g1mm->edenCommitted->printG1Space->g1mm->survivorUsed->g1mm->survivorCommitted->printG1Space->g1mm->oldUsed->g1mm->oldCommitted->printG1Space
HeapSummary#printG1Space(String, long, long, long)::: heap summary print g1 space:::free->println->printValue->printValMB->printValMB->printValMB->occPerc->println
HeapSummary#printValMB(String, long)::: heap summary print val b:::if->println->else->mb->println
HeapSummary#printValue(String, long)::: heap summary print value:::println
HeapSummary#getFlagValue(String, Map)::: heap summary get flag value:::f->flagMap->get->if->if->f->isBool->return->f->getBool->else->return->Long->f->getValue->parseLong->else->return
JInfo#needsJavaPrefix()::: info needs java prefix:::return
JInfo#getName()::: info get name:::return
JInfo#printFlagsUsage()::: info print flags usage:::println->println->println->super->printFlagsUsage
JInfo#run()::: info run:::tool->switch->printVMFlags->return->new->SysPropsDumper->break->new->Tool->break->usage->break->tool->getAgent->setAgent->tool->run
JInfo#runWithArgs(String...)::: info run with args:::mode->switch->if->charAt->usage->else->break->modeFlag->if->modeFlag->equals->else->if->modeFlag->equals->else->if->modeFlag->charAt->usage->else->if->newArgs->new->StringArr->for->i->break->usage->execute
JInfo#main(String[])::: info main:::jinfo->new->JInfo->jinfo->runWithArgs
JInfo#printVMFlags()::: info print flags:::flags->VM->getVM->getCommandLineFlags->print->foreach->if->flag->getOrigin->continue->if->flag->isBool->onoff->flag->getBool->flag->getName->print->else->flag->getName->flag->getValue->print->println->print->str->Arguments->getJVMFlags->if->print->Arguments->getJVMArgs->if->print->println
JMap#needsJavaPrefix()::: map needs java prefix:::return
JMap#getName()::: map get name:::return
JMap#getCommandFlags()::: map get command flags:::return
JMap#printFlagsUsage()::: map print flags usage:::println->println->println->println->println->println->super->printFlagsUsage
JMap#run()::: map run:::tool->switch->new->HeapSummary->break->new->ObjectHistogram->break->new->ClassLoaderStats->break->new->PMap->break->writeHeapHprofBin->return->writeHeapGXL->return->new->FinalizerInfo->break->usage->break->tool->getAgent->setAgent->tool->getDebugeeType->setDebugeeType->tool->run
JMap#main(String[])::: map main:::mode->if->modeFlag->copyArgs->if->modeFlag->equals->else->if->modeFlag->equals->else->if->modeFlag->equals->else->if->modeFlag->equals->else->index->modeFlag->indexOf->if->options->modeFlag->substring->split->foreach->keyValue->option->split->if->equals->if->equals->else->if->equals->else->println->System->exit->else->if->equals->if->equals->println->System->exit->else->println->System->exit->else->if->newArgs->new->StringArr->for->i->jmap->new->JMap->jmap->execute
JMap#writeHeapHprofBin(String)::: map write heap hprof bin:::try->hgw->new->HeapHprofBinWriter->hgw->write->println->return->catch->exp->getMessage->println->return->finally
JMap#writeHeapHprofBin()::: map write heap hprof bin:::return->writeHeapHprofBin
JMap#writeHeapGXL(String)::: map write heap l:::try->hgw->new->HeapGXLWriter->hgw->write->println->return->catch->exp->getMessage->println->return->finally
JMap#writeHeapGXL()::: map write heap l:::return->writeHeapGXL
JSnap#run()::: snap run:::out->if->PerfMemory->initialized->prologue->PerfMemory->prologue->if->prologue->accessible->PerfMemory->new->PerfMemory.PerfDataEntryVisitor->iterate->else->out->println->else->out->println
JSnap#printFlagsUsage()::: snap print flags usage:::println->super->printFlagsUsage
JSnap#main(String[])::: snap main:::js->new->JSnap->Arrays->stream->s->equals->anyMatch->if->Arrays->stream->s->equals->filter->Collectors->toList->collect->new->StringArr->toArray->js->execute
JStack#needsJavaPrefix()::: stack needs java prefix:::return
JStack#getName()::: stack get name:::return
JStack#printFlagsUsage()::: stack print flags usage:::println->println->super->printFlagsUsage
JStack#run()::: stack run:::tool->if->new->PStack->else->new->StackTrace->tool->getAgent->setAgent->tool->getDebugeeType->setDebugeeType->tool->run
JStack#runWithArgs(String...)::: stack run with args:::used->for->i->if->newArgs->new->StringArr->for->i->execute
JStack#main(String[])::: stack main:::jstack->new->JStack->jstack->runWithArgs
ObjectHistogram#getName()::: object histogram get name:::return
ObjectHistogram#run()::: object histogram run:::run
ObjectHistogram#run(PrintStream, PrintStream)::: object histogram run:::heap->VM->getVM->getObjectHeap->histogram->new->sun.jvm.hotspot.oops.ObjectHistogram->err->println->startTime->System->currentTimeMillis->heap->iterate->endTime->System->currentTimeMillis->histogram->printOn->secs->err->println
ObjectHistogram#main(String[])::: object histogram main:::oh->new->ObjectHistogram->oh->execute
PMap#getName()::: map get name:::return
PMap#run()::: map run:::run
PMap#run(PrintStream)::: map run:::getAgent->getDebugger->run
PMap#run(PrintStream, Debugger)::: map run:::cdbg->dbg->getCDebugger->if->l->cdbg->getLoadObjectList->for->itr->l->iterator->itr->hasNext->else->if->getDebugeeType->out->println->else->out->println
PMap#main(String[])::: map main:::t->new->PMap->t->execute
PStack#run()::: stack run:::run
PStack#run(PrintStream)::: stack run:::dbg->getAgent->getDebugger->run
PStack#run(PrintStream, Debugger)::: stack run:::if->PlatformInfo->getOS->equals->out->println->return->cdbg->dbg->getCDebugger->if->concLocksPrinter->initJFrameCache->if->new->ConcurrentLocksPrinter->try->DeadlockDetector->print->catch->out->exp->getMessage->println->finally->l->cdbg->getThreadList->cdbgCanDemangle->cdbg->canDemangle->for->itr->l->iterator->itr->hasNext->else->if->getDebugeeType->out->println->else->out->println
PStack#main(String[])::: stack main:::t->new->PStack->t->execute
PStack#initJFrameCache()::: stack init frame cache:::new->HashMap->new->HashMap->threads->VM->getVM->getThreads->for->cur->threads->first->cur->next
PStack#printUnknown(PrintStream)::: stack print unknown:::out->println
PStack#getJavaNames(ThreadProxy, Address)::: stack get java names:::if->return->jvframes->jframeCache->get->if->return->names->new->ArrayList->for->fCount->res->names->size->new->StringArr->System->names->toArray->arraycopy->return
StackTrace#run()::: stack trace run:::run
StackTrace#run(java.io.PrintStream)::: stack trace run:::try->DeadlockDetector->print->catch->exp->printStackTrace->tty->exp->getMessage->println->finally->try->concLocksPrinter->if->new->ConcurrentLocksPrinter->threads->VM->getVM->getThreads->i->for->cur->threads->first->cur->next->catch->Long->e->getAddress->toHexString->println->e->printStackTrace->finally
StackTrace#main(String[])::: stack trace main:::st->new->StackTrace->st->execute
SysPropsDumper#run()::: sys props dumper run:::sysProps->VM->getVM->getSystemProperties->out->if->keys->sysProps->keys->while->keys->hasMoreElements->key->keys->nextElement->out->print->out->print->out->sysProps->get->println->else->out->println
SysPropsDumper#main(String[])::: sys props dumper main:::pd->new->SysPropsDumper->pd->execute
Tool#getName()::: tool get name:::return->getClass->getName
Tool#needsJavaPrefix()::: tool needs java prefix:::return
Tool#setAgent(HotSpotAgent)::: tool set agent:::
Tool#setDebugeeType(int)::: tool set debugee type:::
Tool#getAgent()::: tool get agent:::return
Tool#getDebugeeType()::: tool get debugee type:::return
Tool#printUsage()::: tool print usage:::name->if->needsJavaPrefix->getName->else->getName->println->println->println->println->println->println->println->println->printFlagsUsage
Tool#printFlagsUsage()::: tool print flags usage:::println
Tool#usage()::: tool usage:::printUsage
Tool#execute(String[])::: tool execute:::returnStatus->try->start->catch->finally->stop->System->exit
Tool#stop()::: tool stop:::if->agent->detach
Tool#start(String[])::: tool start:::if->usage->return->if->startsWith->usage->return->else->if->startsWith->usage->return->err->out->pid->coreFileName->executableName->remoteServer->switch->try->Integer->parseInt->catch->finally->break->break->usage->return->new->HotSpotAgent->try->switch->out->println->agent->attach->break->out->println->agent->attach->break->out->println->agent->attach->break->catch->switch->err->print->break->err->print->break->err->print->break->if->e->getMessage->err->e->getMessage->println->e->printStackTrace->err->println->return->finally->out->println->startInternal->return
Tool#start()::: tool start:::if->throw->new->RuntimeException->new->HotSpotAgent->agent->attach->startInternal
Tool#startInternal()::: tool start internal:::out->vm->VM->getVM->if->vm->isCore->out->println->else->if->vm->isClientCompiler->out->println->else->if->vm->isServerCompiler->out->println->else->throw->new->RuntimeException->version->vm->getVMRelease->if->out->print->out->println->run
