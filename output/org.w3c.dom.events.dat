org.w3c.dom.events.DocumentEvent#createEvent(String)->Event::: document event create event
org.w3c.dom.events.Event#getType()->String:::The name of the event (case-insensitive)
org.w3c.dom.events.Event#getTarget()->EventTarget:::Used to indicate the EventTarget to which the event was originally dispatched.
org.w3c.dom.events.Event#getCurrentTarget()->EventTarget:::Used to indicate the EventTarget whose EventListeners are currently being processed
org.w3c.dom.events.Event#getEventPhase()->short:::Used to indicate which phase of event flow is currently being evaluated.
org.w3c.dom.events.Event#getBubbles()->boolean:::Used to indicate whether or not an event is a bubbling event
org.w3c.dom.events.Event#getCancelable()->boolean:::Used to indicate whether or not an event can have its default action prevented
org.w3c.dom.events.Event#getTimeStamp()->long::: Used to specify the time (in milliseconds relative to the epoch) at which the event was created
org.w3c.dom.events.Event#stopPropagation()->void:::The stopPropagation method is used prevent further propagation of an event during event flow
org.w3c.dom.events.Event#preventDefault()->void:::If an event is cancelable, the preventDefault method is used to signify that the event is to be canceled, meaning any default action normally taken by the implementation as a result of the event will not occur
org.w3c.dom.events.Event#initEvent(String, boolean, boolean)->void:::The initEvent method is used to initialize the value of an Event created through the DocumentEvent interface
org.w3c.dom.events.EventListener#handleEvent(Event)->void::: This method is called whenever an event occurs of the type for which the  EventListener interface was registered.
org.w3c.dom.events.EventTarget#addEventListener(String, EventListener, boolean)->void:::This method allows the registration of event listeners on the event target
org.w3c.dom.events.EventTarget#removeEventListener(String, EventListener, boolean)->void:::This method allows the removal of event listeners from the event target
org.w3c.dom.events.EventTarget#dispatchEvent(Event)->boolean:::This method allows the dispatch of events into the implementations event model
org.w3c.dom.events.MouseEvent#getScreenX()->int:::The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system.
org.w3c.dom.events.MouseEvent#getScreenY()->int:::The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system.
org.w3c.dom.events.MouseEvent#getClientX()->int:::The horizontal coordinate at which the event occurred relative to the DOM implementation's client area.
org.w3c.dom.events.MouseEvent#getClientY()->int:::The vertical coordinate at which the event occurred relative to the DOM implementation's client area.
org.w3c.dom.events.MouseEvent#getCtrlKey()->boolean:::Used to indicate whether the 'ctrl' key was depressed during the firing of the event.
org.w3c.dom.events.MouseEvent#getShiftKey()->boolean:::Used to indicate whether the 'shift' key was depressed during the firing of the event.
org.w3c.dom.events.MouseEvent#getAltKey()->boolean:::Used to indicate whether the 'alt' key was depressed during the firing of the event
org.w3c.dom.events.MouseEvent#getMetaKey()->boolean:::Used to indicate whether the 'meta' key was depressed during the firing of the event
org.w3c.dom.events.MouseEvent#getButton()->short:::During mouse events caused by the depression or release of a mouse button, button is used to indicate which mouse button changed state
org.w3c.dom.events.MouseEvent#getRelatedTarget()->EventTarget:::Used to identify a secondary EventTarget related to a UI event
org.w3c.dom.events.MouseEvent#initMouseEvent(String, boolean, boolean, AbstractView, int, int, int, int, int, boolean, boolean, boolean, boolean, short, EventTarget)->void:::The initMouseEvent method is used to initialize the value of a MouseEvent created through the DocumentEvent interface
org.w3c.dom.events.MutationEvent#getRelatedNode()->Node::: relatedNode is used to identify a secondary node related to a mutation event
org.w3c.dom.events.MutationEvent#getPrevValue()->String::: prevValue indicates the previous value of the Attr node in DOMAttrModified events, and of the CharacterData node in DOMCharacterDataModified events.
org.w3c.dom.events.MutationEvent#getNewValue()->String::: newValue indicates the new value of the Attr node in DOMAttrModified events, and of the CharacterData node in DOMCharacterDataModified events.
org.w3c.dom.events.MutationEvent#getAttrName()->String::: attrName indicates the name of the changed Attr node in a DOMAttrModified event.
org.w3c.dom.events.MutationEvent#getAttrChange()->short::: attrChange indicates the type of change which triggered the DOMAttrModified event
org.w3c.dom.events.MutationEvent#initMutationEvent(String, boolean, boolean, Node, String, String, String, short)->void:::The initMutationEvent method is used to initialize the value of a MutationEvent created through the DocumentEvent interface
org.w3c.dom.events.UIEvent#getView()->AbstractView:::The view attribute identifies the AbstractView  from which the event was generated.
org.w3c.dom.events.UIEvent#getDetail()->int:::Specifies some detail information about the Event, depending on the type of event.
org.w3c.dom.events.UIEvent#initUIEvent(String, boolean, boolean, AbstractView, int)->void:::The initUIEvent method is used to initialize the value of a UIEvent created through the DocumentEvent interface
