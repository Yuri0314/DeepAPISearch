DocumentEvent#createEvent(String)::: document event create event:::
Event#getType():::The name of the event (case-insensitive):::
Event#getTarget():::Used to indicate the EventTarget to which the event was originally dispatched.:::
Event#getCurrentTarget():::Used to indicate the EventTarget whose EventListeners are currently being processed:::
Event#getEventPhase():::Used to indicate which phase of event flow is currently being evaluated.:::
Event#getBubbles():::Used to indicate whether or not an event is a bubbling event:::
Event#getCancelable():::Used to indicate whether or not an event can have its default action prevented:::
Event#getTimeStamp()::: Used to specify the time (in milliseconds relative to the epoch) at which the event was created:::
Event#stopPropagation():::The stopPropagation method is used prevent further propagation of an event during event flow:::
Event#preventDefault():::If an event is cancelable, the preventDefault method is used to signify that the event is to be canceled, meaning any default action normally taken by the implementation as a result of the event will not occur:::
Event#initEvent(String, boolean, boolean):::The initEvent method is used to initialize the value of an Event created through the DocumentEvent interface:::
EventListener#handleEvent(Event)::: This method is called whenever an event occurs of the type for which the  EventListener interface was registered.:::
EventTarget#addEventListener(String, EventListener, boolean):::This method allows the registration of event listeners on the event target:::
EventTarget#removeEventListener(String, EventListener, boolean):::This method allows the removal of event listeners from the event target:::
EventTarget#dispatchEvent(Event):::This method allows the dispatch of events into the implementations event model:::
MouseEvent#getScreenX():::The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system.:::
MouseEvent#getScreenY():::The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system.:::
MouseEvent#getClientX():::The horizontal coordinate at which the event occurred relative to the DOM implementation's client area.:::
MouseEvent#getClientY():::The vertical coordinate at which the event occurred relative to the DOM implementation's client area.:::
MouseEvent#getCtrlKey():::Used to indicate whether the 'ctrl' key was depressed during the firing of the event.:::
MouseEvent#getShiftKey():::Used to indicate whether the 'shift' key was depressed during the firing of the event.:::
MouseEvent#getAltKey():::Used to indicate whether the 'alt' key was depressed during the firing of the event:::
MouseEvent#getMetaKey():::Used to indicate whether the 'meta' key was depressed during the firing of the event:::
MouseEvent#getButton():::During mouse events caused by the depression or release of a mouse button, button is used to indicate which mouse button changed state:::
MouseEvent#getRelatedTarget():::Used to identify a secondary EventTarget related to a UI event:::
MouseEvent#initMouseEvent(String, boolean, boolean, AbstractView, int, int, int, int, int, boolean, boolean, boolean, boolean, short, EventTarget):::The initMouseEvent method is used to initialize the value of a MouseEvent created through the DocumentEvent interface:::
MutationEvent#getRelatedNode()::: relatedNode is used to identify a secondary node related to a mutation event:::
MutationEvent#getPrevValue()::: prevValue indicates the previous value of the Attr node in DOMAttrModified events, and of the CharacterData node in DOMCharacterDataModified events.:::
MutationEvent#getNewValue()::: newValue indicates the new value of the Attr node in DOMAttrModified events, and of the CharacterData node in DOMCharacterDataModified events.:::
MutationEvent#getAttrName()::: attrName indicates the name of the changed Attr node in a DOMAttrModified event.:::
MutationEvent#getAttrChange()::: attrChange indicates the type of change which triggered the DOMAttrModified event:::
MutationEvent#initMutationEvent(String, boolean, boolean, Node, String, String, String, short):::The initMutationEvent method is used to initialize the value of a MutationEvent created through the DocumentEvent interface:::
UIEvent#getView():::The view attribute identifies the AbstractView  from which the event was generated.:::
UIEvent#getDetail():::Specifies some detail information about the Event, depending on the type of event.:::
UIEvent#initUIEvent(String, boolean, boolean, AbstractView, int):::The initUIEvent method is used to initialize the value of a UIEvent created through the DocumentEvent interface:::
