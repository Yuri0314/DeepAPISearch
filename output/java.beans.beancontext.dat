java.beans.beancontext.BeanContext#instantiateChild(String)->Object:::Instantiate the javaBean named as a child of this BeanContext
java.beans.beancontext.BeanContext#getResourceAsStream(String, BeanContextChild)->InputStream:::Analagous to java.lang.ClassLoader.getResourceAsStream(), this method allows a BeanContext implementation to interpose behavior between the child Component and underlying ClassLoader.
java.beans.beancontext.BeanContext#getResource(String, BeanContextChild)->URL:::Analagous to java.lang.ClassLoader.getResource(), this method allows a BeanContext implementation to interpose behavior between the child Component and underlying ClassLoader.
java.beans.beancontext.BeanContext#addBeanContextMembershipListener(BeanContextMembershipListener)->void:::Adds the specified BeanContextMembershipListener to receive BeanContextMembershipEvents from this BeanContext whenever it adds or removes a child Component(s).
java.beans.beancontext.BeanContext#removeBeanContextMembershipListener(BeanContextMembershipListener)->void:::Removes the specified BeanContextMembershipListener so that it no longer receives BeanContextMembershipEvents when the child Component(s) are added or removed.
java.beans.beancontext.BeanContextChild#setBeanContext(BeanContext)->void::: Objects that implement this interface, shall fire a java.beans.PropertyChangeEvent, with parameters:  propertyName "beanContext", oldValue (the previous nesting BeanContext instance, or null), newValue (the current nesting BeanContext instance, or null)
java.beans.beancontext.BeanContextChild#getBeanContext()->BeanContext:::Gets the BeanContext associated with this BeanContextChild.
java.beans.beancontext.BeanContextChild#addPropertyChangeListener(String, PropertyChangeListener)->void:::Adds a PropertyChangeListener to this BeanContextChild in order to receive a PropertyChangeEvent whenever the specified property has changed.
java.beans.beancontext.BeanContextChild#removePropertyChangeListener(String, PropertyChangeListener)->void:::Removes a PropertyChangeListener from this BeanContextChild  so that it no longer receives PropertyChangeEvents when the specified property is changed.
java.beans.beancontext.BeanContextChild#addVetoableChangeListener(String, VetoableChangeListener)->void:::Adds a VetoableChangeListener to this BeanContextChild to receive events whenever the specified property changes.
java.beans.beancontext.BeanContextChild#removeVetoableChangeListener(String, VetoableChangeListener)->void:::Removes a VetoableChangeListener from this BeanContextChild so that it no longer receives events when the specified property changes.
java.beans.beancontext.BeanContextChildComponentProxy#getComponent()->Component::: bean context child component proxy get component
java.beans.beancontext.BeanContextChildSupport#setBeanContext(BeanContext)->void:::Sets the BeanContext for this BeanContextChildSupport.
java.beans.beancontext.BeanContextChildSupport#getBeanContext()->BeanContext:::Gets the nesting BeanContext for this BeanContextChildSupport.
java.beans.beancontext.BeanContextChildSupport#addPropertyChangeListener(String, PropertyChangeListener)->void:::Add a PropertyChangeListener for a specific property
java.beans.beancontext.BeanContextChildSupport#removePropertyChangeListener(String, PropertyChangeListener)->void:::Remove a PropertyChangeListener for a specific property
java.beans.beancontext.BeanContextChildSupport#addVetoableChangeListener(String, VetoableChangeListener)->void:::Add a VetoableChangeListener for a specific property
java.beans.beancontext.BeanContextChildSupport#removeVetoableChangeListener(String, VetoableChangeListener)->void:::Removes a VetoableChangeListener
java.beans.beancontext.BeanContextChildSupport#serviceRevoked(BeanContextServiceRevokedEvent)->void:::A service provided by the nesting BeanContext has been revoked
java.beans.beancontext.BeanContextChildSupport#serviceAvailable(BeanContextServiceAvailableEvent)->void:::A new service is available from the nesting BeanContext
java.beans.beancontext.BeanContextChildSupport#getBeanContextChildPeer()->BeanContextChild:::Gets the BeanContextChild associated with this BeanContextChildSupport.
java.beans.beancontext.BeanContextChildSupport#isDelegated()->boolean:::Reports whether or not this class is a delegate of another.
java.beans.beancontext.BeanContextChildSupport#firePropertyChange(String, Object, Object)->void:::Report a bound property update to any registered listeners
java.beans.beancontext.BeanContextChildSupport#fireVetoableChange(String, Object, Object)->void:::Report a vetoable property update to any registered listeners
java.beans.beancontext.BeanContextChildSupport#validatePendingSetBeanContext(BeanContext)->boolean:::Called from setBeanContext to validate (or otherwise) the pending change in the nesting BeanContext property value
java.beans.beancontext.BeanContextChildSupport#releaseBeanContextResources()->void::: bean context child support release bean context resources
java.beans.beancontext.BeanContextChildSupport#initializeBeanContextResources()->void::: bean context child support initialize bean context resources
java.beans.beancontext.BeanContextContainerProxy#getContainer()->Container:::Gets the java.awt.Container associated with this BeanContext.
java.beans.beancontext.BeanContextEvent#getBeanContext()->BeanContext:::Gets the BeanContext associated with this event.
java.beans.beancontext.BeanContextEvent#setPropagatedFrom(BeanContext)->void:::Sets the BeanContext from which this event was propagated.
java.beans.beancontext.BeanContextEvent#getPropagatedFrom()->BeanContext:::Gets the BeanContext from which this event was propagated.
java.beans.beancontext.BeanContextEvent#isPropagated()->boolean:::Reports whether or not this event is propagated from some other BeanContext.
java.beans.beancontext.BeanContextMembershipEvent#size()->int:::Gets the number of children affected by the notification.
java.beans.beancontext.BeanContextMembershipEvent#contains(Object)->boolean:::Is the child specified affected by the event?
java.beans.beancontext.BeanContextMembershipEvent#toArray()->Object[]:::Gets the array of children affected by this event.
java.beans.beancontext.BeanContextMembershipEvent#iterator()->Iterator:::Gets the array of children affected by this event.
java.beans.beancontext.BeanContextMembershipListener#childrenAdded(BeanContextMembershipEvent)->void:::Called when a child or list of children is added to a BeanContext that this listener is registered with.
java.beans.beancontext.BeanContextMembershipListener#childrenRemoved(BeanContextMembershipEvent)->void:::Called when a child or list of children is removed from a BeanContext that this listener is registered with.
java.beans.beancontext.BeanContextProxy#getBeanContextProxy()->BeanContextChild:::Gets the BeanContextChild (or subinterface) associated with this object.
java.beans.beancontext.BeanContextServiceAvailableEvent#getSourceAsBeanContextServices()->BeanContextServices:::Gets the source as a reference of type BeanContextServices.
java.beans.beancontext.BeanContextServiceAvailableEvent#getServiceClass()->Class:::Gets the service class that is the subject of this notification.
java.beans.beancontext.BeanContextServiceAvailableEvent#getCurrentServiceSelectors()->Iterator:::Gets the list of service dependent selectors.
java.beans.beancontext.BeanContextServiceProvider#getService(BeanContextServices, Object, Class, Object)->Object:::Invoked by BeanContextServices, this method requests an instance of a service from this BeanContextServiceProvider.
java.beans.beancontext.BeanContextServiceProvider#releaseService(BeanContextServices, Object, Object)->void:::Invoked by BeanContextServices, this method releases a nested BeanContextChild's (or any arbitrary object associated with a BeanContextChild) reference to the specified service.
java.beans.beancontext.BeanContextServiceProvider#getCurrentServiceSelectors(BeanContextServices, Class)->Iterator:::Invoked by BeanContextServices, this method gets the current service selectors for the specified service
java.beans.beancontext.BeanContextServiceProviderBeanInfo#getServicesBeanInfo()->BeanInfo[]:::Gets a BeanInfo array, one for each service class or interface statically available from this ServiceProvider.
java.beans.beancontext.BeanContextServiceRevokedEvent#getSourceAsBeanContextServices()->BeanContextServices:::Gets the source as a reference of type BeanContextServices
java.beans.beancontext.BeanContextServiceRevokedEvent#getServiceClass()->Class:::Gets the service class that is the subject of this notification
java.beans.beancontext.BeanContextServiceRevokedEvent#isServiceClass(Class)->boolean:::Checks this event to determine whether or not the service being revoked is of a particular class.
java.beans.beancontext.BeanContextServiceRevokedEvent#isCurrentServiceInvalidNow()->boolean:::Reports if the current service is being forcibly revoked, in which case the references are now invalidated and unusable.
java.beans.beancontext.BeanContextServiceRevokedListener#serviceRevoked(BeanContextServiceRevokedEvent)->void:::The service named has been revoked
java.beans.beancontext.BeanContextServices#addService(Class, BeanContextServiceProvider)->boolean:::Adds a service to this BeanContext
java.beans.beancontext.BeanContextServices#revokeService(Class, BeanContextServiceProvider, boolean)->void:::BeanContextServiceProviders wishing to remove a currently registered service from this context may do so via invocation of this method
java.beans.beancontext.BeanContextServices#hasService(Class)->boolean:::Reports whether or not a given service is currently available from this context.
java.beans.beancontext.BeanContextServices#getService(BeanContextChild, Object, Class, Object, BeanContextServiceRevokedListener)->Object:::A BeanContextChild, or any arbitrary object associated with a BeanContextChild, may obtain a reference to a currently registered service from its nesting BeanContextServices via invocation of this method
java.beans.beancontext.BeanContextServices#releaseService(BeanContextChild, Object, Object)->void:::Releases a BeanContextChild's (or any arbitrary object associated with a BeanContextChild) reference to the specified service by calling releaseService() on the underlying BeanContextServiceProvider.
java.beans.beancontext.BeanContextServices#getCurrentServiceClasses()->Iterator:::Gets the currently available services for this context.
java.beans.beancontext.BeanContextServices#getCurrentServiceSelectors(Class)->Iterator:::Gets the list of service dependent service parameters (Service Selectors) for the specified service, by calling getCurrentServiceSelectors() on the underlying BeanContextServiceProvider.
java.beans.beancontext.BeanContextServices#addBeanContextServicesListener(BeanContextServicesListener)->void:::Adds a BeanContextServicesListener to this BeanContext
java.beans.beancontext.BeanContextServices#removeBeanContextServicesListener(BeanContextServicesListener)->void:::Removes a BeanContextServicesListener from this BeanContext
java.beans.beancontext.BeanContextServicesListener#serviceAvailable(BeanContextServiceAvailableEvent)->void:::The service named has been registered
java.beans.beancontext.BeanContextServicesSupport#initialize()->void::: bean context services support initialize
java.beans.beancontext.BeanContextServicesSupport#getBeanContextServicesPeer()->BeanContextServices:::Gets the BeanContextServices associated with this BeanContextServicesSupport.
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#addRequestor(Object, BeanContextServiceRevokedListener)->void::: service class ref add requestor
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#removeRequestor(Object)->void::: service class ref remove requestor
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#verifyRequestor(Object, BeanContextServiceRevokedListener)->void::: service class ref verify requestor
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#verifyAndMaybeSetProvider(BeanContextServiceProvider, boolean)->void::: service class ref verify and maybe set provider
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#cloneOfEntries()->Iterator>::: service class ref clone of entries
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#entries()->Iterator>::: service class ref entries
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#isEmpty()->boolean::: service class ref is empty
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#getServiceClass()->Class::: service class ref get service class
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#getServiceProvider()->BeanContextServiceProvider::: service class ref get service provider
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#getDelegateProvider()->BeanContextServiceProvider::: service class ref get delegate provider
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#isDelegated()->boolean::: service class ref is delegated
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#addRef(boolean)->void::: service class ref add ref
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#releaseRef(boolean)->void::: service class ref release ref
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#getRefs()->int::: service class ref get refs
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#getDelegateRefs()->int::: service class ref get delegate refs
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceClassRef#getServiceRefs()->int::: service class ref get service refs
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef#addRef()->void::: service ref add ref
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef#release()->int::: service ref release
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef#getServiceClassRef()->BCSSCServiceClassRef::: service ref get service class ref
java.beans.beancontext.BeanContextServicesSupport.BCSSChild.BCSSCServiceRef#isDelegated()->boolean::: service ref is delegated
java.beans.beancontext.BeanContextServicesSupport.BCSSChild#usingService(Object, Object, Class, BeanContextServiceProvider, boolean, BeanContextServiceRevokedListener)->void::: child using service
java.beans.beancontext.BeanContextServicesSupport.BCSSChild#releaseService(Object, Object)->void::: child release service
java.beans.beancontext.BeanContextServicesSupport.BCSSChild#revokeService(Class, boolean, boolean)->void::: child revoke service
java.beans.beancontext.BeanContextServicesSupport.BCSSChild#cleanupReferences()->void::: child cleanup references
java.beans.beancontext.BeanContextServicesSupport.BCSSChild#revokeAllDelegatedServicesNow()->void::: child revoke all delegated services now
java.beans.beancontext.BeanContextServicesSupport#createBCSChild(Object, Object)->BCSChild::: bean context services support create child
java.beans.beancontext.BeanContextServicesSupport.BCSSServiceProvider#getServiceProvider()->BeanContextServiceProvider:::Returns the service provider.
java.beans.beancontext.BeanContextServicesSupport#createBCSSServiceProvider(Class, BeanContextServiceProvider)->BCSSServiceProvider::: bean context services support create service provider
java.beans.beancontext.BeanContextServicesSupport#addBeanContextServicesListener(BeanContextServicesListener)->void::: bean context services support add bean context services listener
java.beans.beancontext.BeanContextServicesSupport#removeBeanContextServicesListener(BeanContextServicesListener)->void::: bean context services support remove bean context services listener
java.beans.beancontext.BeanContextServicesSupport#addService(Class, BeanContextServiceProvider)->boolean::: bean context services support add service
java.beans.beancontext.BeanContextServicesSupport#addService(Class, BeanContextServiceProvider, boolean)->boolean::: bean context services support add service
java.beans.beancontext.BeanContextServicesSupport#revokeService(Class, BeanContextServiceProvider, boolean)->void::: bean context services support revoke service
java.beans.beancontext.BeanContextServicesSupport#hasService(Class)->boolean::: bean context services support has service
java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider#getService(BeanContextServices, Object, Class, Object)->Object::: proxy service provider get service
java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider#releaseService(BeanContextServices, Object, Object)->void::: proxy service provider release service
java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider#getCurrentServiceSelectors(BeanContextServices, Class)->Iterator::: proxy service provider get current service selectors
java.beans.beancontext.BeanContextServicesSupport.BCSSProxyServiceProvider#serviceRevoked(BeanContextServiceRevokedEvent)->void::: proxy service provider service revoked
java.beans.beancontext.BeanContextServicesSupport#getService(BeanContextChild, Object, Class, Object, BeanContextServiceRevokedListener)->Object::: bean context services support get service
java.beans.beancontext.BeanContextServicesSupport#releaseService(BeanContextChild, Object, Object)->void::: bean context services support release service
java.beans.beancontext.BeanContextServicesSupport#getCurrentServiceClasses()->Iterator::: bean context services support get current service classes
java.beans.beancontext.BeanContextServicesSupport#getCurrentServiceSelectors(Class)->Iterator::: bean context services support get current service selectors
java.beans.beancontext.BeanContextServicesSupport#serviceAvailable(BeanContextServiceAvailableEvent)->void::: bean context services support service available
java.beans.beancontext.BeanContextServicesSupport#serviceRevoked(BeanContextServiceRevokedEvent)->void::: bean context services support service revoked
java.beans.beancontext.BeanContextServicesSupport#getChildBeanContextServicesListener(Object)->BeanContextServicesListener:::Gets the BeanContextServicesListener (if any) of the specified child.
java.beans.beancontext.BeanContextServicesSupport#childJustRemovedHook(Object, BCSChild)->void::: bean context services support child just removed hook
java.beans.beancontext.BeanContextServicesSupport#releaseBeanContextResources()->void::: bean context services support release bean context resources
java.beans.beancontext.BeanContextServicesSupport#initializeBeanContextResources()->void::: bean context services support initialize bean context resources
java.beans.beancontext.BeanContextServicesSupport#fireServiceAdded(Class)->void:::Fires a BeanContextServiceEvent notifying of a new service.
java.beans.beancontext.BeanContextServicesSupport#fireServiceAdded(BeanContextServiceAvailableEvent)->void:::Fires a BeanContextServiceAvailableEvent indicating that a new service has become available.
java.beans.beancontext.BeanContextServicesSupport#fireServiceRevoked(BeanContextServiceRevokedEvent)->void:::Fires a BeanContextServiceEvent notifying of a service being revoked.
java.beans.beancontext.BeanContextServicesSupport#fireServiceRevoked(Class, boolean)->void:::Fires a BeanContextServiceRevokedEvent indicating that a particular service is no longer available.
java.beans.beancontext.BeanContextServicesSupport#bcsPreSerializationHook(ObjectOutputStream)->void::: bean context services support bcs pre serialization hook
java.beans.beancontext.BeanContextServicesSupport#bcsPreDeserializationHook(ObjectInputStream)->void::: bean context services support bcs pre deserialization hook
java.beans.beancontext.BeanContextSupport#getBeanContextPeer()->BeanContext:::Gets the instance of BeanContext that this object is providing the implementation for.
java.beans.beancontext.BeanContextSupport#instantiateChild(String)->Object::: The instantiateChild method is a convenience hook in BeanContext to simplify the task of instantiating a Bean, nested, into a BeanContext
java.beans.beancontext.BeanContextSupport#size()->int:::Gets the number of children currently nested in this BeanContext.
java.beans.beancontext.BeanContextSupport#isEmpty()->boolean:::Reports whether or not this BeanContext is empty
java.beans.beancontext.BeanContextSupport#contains(Object)->boolean:::Determines whether or not the specified object is currently a child of this BeanContext.
java.beans.beancontext.BeanContextSupport#containsKey(Object)->boolean:::Determines whether or not the specified object is currently a child of this BeanContext.
java.beans.beancontext.BeanContextSupport#iterator()->Iterator:::Gets all JavaBean or BeanContext instances currently nested in this BeanContext.
java.beans.beancontext.BeanContextSupport#toArray()->Object[]:::Gets all JavaBean or BeanContext instances currently nested in this BeanContext.
java.beans.beancontext.BeanContextSupport#toArray(Object[])->Object[]:::Gets an array containing all children of this BeanContext that match the types contained in arry.
java.beans.beancontext.BeanContextSupport.BCSIterator#hasNext()->boolean::: iterator has next
java.beans.beancontext.BeanContextSupport.BCSIterator#next()->Object::: iterator next
java.beans.beancontext.BeanContextSupport.BCSIterator#remove()->void::: iterator remove
java.beans.beancontext.BeanContextSupport.BCSChild#getChild()->Object::: child get child
java.beans.beancontext.BeanContextSupport.BCSChild#setRemovePending(boolean)->void::: child set remove pending
java.beans.beancontext.BeanContextSupport.BCSChild#isRemovePending()->boolean::: child is remove pending
java.beans.beancontext.BeanContextSupport.BCSChild#isProxyPeer()->boolean::: child is proxy peer
java.beans.beancontext.BeanContextSupport.BCSChild#getProxyPeer()->Object::: child get proxy peer
java.beans.beancontext.BeanContextSupport#createBCSChild(Object, Object)->BCSChild::: bean context support create child
java.beans.beancontext.BeanContextSupport#add(Object)->boolean:::Adds/nests a child within this BeanContext
java.beans.beancontext.BeanContextSupport#remove(Object)->boolean:::Removes a child from this BeanContext
java.beans.beancontext.BeanContextSupport#remove(Object, boolean)->boolean:::internal remove used when removal caused by unexpected setBeanContext or by remove() invocation.
java.beans.beancontext.BeanContextSupport#containsAll(Collection)->boolean:::Tests to see if all objects in the specified Collection are children of this BeanContext.
java.beans.beancontext.BeanContextSupport#addAll(Collection)->boolean:::add Collection to set of Children (Unsupported) implementations must synchronized on the hierarchy lock and "children" protected field
java.beans.beancontext.BeanContextSupport#removeAll(Collection)->boolean:::remove all specified children (Unsupported) implementations must synchronized on the hierarchy lock and "children" protected field
java.beans.beancontext.BeanContextSupport#retainAll(Collection)->boolean:::retain only specified children (Unsupported) implementations must synchronized on the hierarchy lock and "children" protected field
java.beans.beancontext.BeanContextSupport#clear()->void:::clear the children (Unsupported) implementations must synchronized on the hierarchy lock and "children" protected field
java.beans.beancontext.BeanContextSupport#addBeanContextMembershipListener(BeanContextMembershipListener)->void::: bean context support add bean context membership listener
java.beans.beancontext.BeanContextSupport#removeBeanContextMembershipListener(BeanContextMembershipListener)->void::: bean context support remove bean context membership listener
java.beans.beancontext.BeanContextSupport#getResourceAsStream(String, BeanContextChild)->InputStream::: bean context support get resource as stream
java.beans.beancontext.BeanContextSupport#getResource(String, BeanContextChild)->URL::: bean context support get resource
java.beans.beancontext.BeanContextSupport#setDesignTime(boolean)->void:::Sets the new design time value for this BeanContext.
java.beans.beancontext.BeanContextSupport#isDesignTime()->boolean:::Reports whether or not this object is in currently in design time mode.
java.beans.beancontext.BeanContextSupport#setLocale(Locale)->void:::Sets the locale of this BeanContext.
java.beans.beancontext.BeanContextSupport#getLocale()->Locale:::Gets the locale for this BeanContext.
java.beans.beancontext.BeanContextSupport#needsGui()->boolean::: This method is typically called from the environment in order to determine if the implementor "needs" a GUI
java.beans.beancontext.BeanContextSupport#dontUseGui()->void::: bean context support dont use gui
java.beans.beancontext.BeanContextSupport#okToUseGui()->void::: bean context support ok to use gui
java.beans.beancontext.BeanContextSupport#avoidingGui()->boolean:::Used to determine if the BeanContext child is avoiding using its GUI.
java.beans.beancontext.BeanContextSupport#isSerializing()->boolean:::Is this BeanContext in the process of being serialized?
java.beans.beancontext.BeanContextSupport#bcsChildren()->Iterator:::Returns an iterator of all children of this BeanContext.
java.beans.beancontext.BeanContextSupport#bcsPreSerializationHook(ObjectOutputStream)->void::: bean context support bcs pre serialization hook
java.beans.beancontext.BeanContextSupport#bcsPreDeserializationHook(ObjectInputStream)->void::: bean context support bcs pre deserialization hook
java.beans.beancontext.BeanContextSupport#childDeserializedHook(Object, BCSChild)->void:::Called by readObject with the newly deserialized child and BCSChild.
java.beans.beancontext.BeanContextSupport#serialize(ObjectOutputStream, Collection)->void:::Used by writeObject to serialize a Collection.
java.beans.beancontext.BeanContextSupport#deserialize(ObjectInputStream, Collection)->void:::used by readObject to deserialize a collection.
java.beans.beancontext.BeanContextSupport#writeChildren(ObjectOutputStream)->void:::Used to serialize all children of this BeanContext.
java.beans.beancontext.BeanContextSupport#readChildren(ObjectInputStream)->void::: bean context support read children
java.beans.beancontext.BeanContextSupport#vetoableChange(PropertyChangeEvent)->void::: bean context support vetoable change
java.beans.beancontext.BeanContextSupport#propertyChange(PropertyChangeEvent)->void::: bean context support property change
java.beans.beancontext.BeanContextSupport#validatePendingAdd(Object)->boolean::: bean context support validate pending add
java.beans.beancontext.BeanContextSupport#validatePendingRemove(Object)->boolean::: bean context support validate pending remove
java.beans.beancontext.BeanContextSupport#childJustAddedHook(Object, BCSChild)->void::: bean context support child just added hook
java.beans.beancontext.BeanContextSupport#childJustRemovedHook(Object, BCSChild)->void::: bean context support child just removed hook
java.beans.beancontext.BeanContextSupport#getChildVisibility(Object)->Visibility:::Gets the Component (if any) associated with the specified child.
java.beans.beancontext.BeanContextSupport#getChildSerializable(Object)->Serializable:::Gets the Serializable (if any) associated with the specified Child
java.beans.beancontext.BeanContextSupport#getChildPropertyChangeListener(Object)->PropertyChangeListener:::Gets the PropertyChangeListener (if any) of the specified child
java.beans.beancontext.BeanContextSupport#getChildVetoableChangeListener(Object)->VetoableChangeListener:::Gets the VetoableChangeListener (if any) of the specified child
java.beans.beancontext.BeanContextSupport#getChildBeanContextMembershipListener(Object)->BeanContextMembershipListener:::Gets the BeanContextMembershipListener (if any) of the specified child
java.beans.beancontext.BeanContextSupport#getChildBeanContextChild(Object)->BeanContextChild:::Gets the BeanContextChild (if any) of the specified child
java.beans.beancontext.BeanContextSupport#fireChildrenAdded(BeanContextMembershipEvent)->void::: bean context support fire children added
java.beans.beancontext.BeanContextSupport#fireChildrenRemoved(BeanContextMembershipEvent)->void::: bean context support fire children removed
java.beans.beancontext.BeanContextSupport#initialize()->void::: bean context support initialize
java.beans.beancontext.BeanContextSupport#copyChildren()->Object[]:::Gets a copy of the this BeanContext's children.
java.beans.beancontext.BeanContextSupport#classEquals(Class, Class)->boolean:::Tests to see if two class objects, or their names are equal.
