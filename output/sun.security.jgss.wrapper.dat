sun.security.jgss.wrapper.GSSCredElement#doServicePermCheck()->void::: cred element do service perm check
sun.security.jgss.wrapper.GSSCredElement#getProvider()->Provider::: cred element get provider
sun.security.jgss.wrapper.GSSCredElement#dispose()->void::: cred element dispose
sun.security.jgss.wrapper.GSSCredElement#getName()->GSSNameElement::: cred element get name
sun.security.jgss.wrapper.GSSCredElement#getInitLifetime()->int::: cred element get init lifetime
sun.security.jgss.wrapper.GSSCredElement#getAcceptLifetime()->int::: cred element get accept lifetime
sun.security.jgss.wrapper.GSSCredElement#isInitiatorCredential()->boolean::: cred element is initiator credential
sun.security.jgss.wrapper.GSSCredElement#isAcceptorCredential()->boolean::: cred element is acceptor credential
sun.security.jgss.wrapper.GSSCredElement#getMechanism()->Oid::: cred element get mechanism
sun.security.jgss.wrapper.GSSCredElement#toString()->String::: cred element to string
sun.security.jgss.wrapper.GSSCredElement#finalize()->void::: cred element finalize
sun.security.jgss.wrapper.GSSCredElement#impersonate(GSSNameSpi)->GSSCredentialSpi::: cred element impersonate
sun.security.jgss.wrapper.GSSLibStub#init(String, boolean)->boolean:::Initialization routine to dynamically load function pointers.
sun.security.jgss.wrapper.GSSLibStub#indicateMechs()->Oid[]::: lib stub indicate mechs
sun.security.jgss.wrapper.GSSLibStub#inquireNamesForMech()->Oid[]::: lib stub inquire names for mech
sun.security.jgss.wrapper.GSSLibStub#releaseName(long)->void::: lib stub release name
sun.security.jgss.wrapper.GSSLibStub#importName(byte[], Oid)->long::: lib stub import name
sun.security.jgss.wrapper.GSSLibStub#compareName(long, long)->boolean::: lib stub compare name
sun.security.jgss.wrapper.GSSLibStub#canonicalizeName(long)->long::: lib stub canonicalize name
sun.security.jgss.wrapper.GSSLibStub#exportName(long)->byte[]::: lib stub export name
sun.security.jgss.wrapper.GSSLibStub#displayName(long)->Object[]::: lib stub display name
sun.security.jgss.wrapper.GSSLibStub#acquireCred(long, int, int)->long::: lib stub acquire cred
sun.security.jgss.wrapper.GSSLibStub#releaseCred(long)->long::: lib stub release cred
sun.security.jgss.wrapper.GSSLibStub#getCredName(long)->long::: lib stub get cred name
sun.security.jgss.wrapper.GSSLibStub#getCredTime(long)->int::: lib stub get cred time
sun.security.jgss.wrapper.GSSLibStub#getCredUsage(long)->int::: lib stub get cred usage
sun.security.jgss.wrapper.GSSLibStub#importContext(byte[])->NativeGSSContext::: lib stub import context
sun.security.jgss.wrapper.GSSLibStub#initContext(long, long, ChannelBinding, byte[], NativeGSSContext)->byte[]::: lib stub init context
sun.security.jgss.wrapper.GSSLibStub#acceptContext(long, ChannelBinding, byte[], NativeGSSContext)->byte[]::: lib stub accept context
sun.security.jgss.wrapper.GSSLibStub#inquireContext(long)->long[]::: lib stub inquire context
sun.security.jgss.wrapper.GSSLibStub#getContextMech(long)->Oid::: lib stub get context mech
sun.security.jgss.wrapper.GSSLibStub#getContextName(long, boolean)->long::: lib stub get context name
sun.security.jgss.wrapper.GSSLibStub#getContextTime(long)->int::: lib stub get context time
sun.security.jgss.wrapper.GSSLibStub#deleteContext(long)->long::: lib stub delete context
sun.security.jgss.wrapper.GSSLibStub#wrapSizeLimit(long, int, int, int)->int::: lib stub wrap size limit
sun.security.jgss.wrapper.GSSLibStub#exportContext(long)->byte[]::: lib stub export context
sun.security.jgss.wrapper.GSSLibStub#getMic(long, int, byte[])->byte[]::: lib stub get mic
sun.security.jgss.wrapper.GSSLibStub#verifyMic(long, byte[], byte[], MessageProp)->void::: lib stub verify mic
sun.security.jgss.wrapper.GSSLibStub#wrap(long, byte[], MessageProp)->byte[]::: lib stub wrap
sun.security.jgss.wrapper.GSSLibStub#unwrap(long, byte[], MessageProp)->byte[]::: lib stub unwrap
sun.security.jgss.wrapper.GSSLibStub#getInstance(Oid)->GSSLibStub::: lib stub get instance
sun.security.jgss.wrapper.GSSLibStub#equals(Object)->boolean::: lib stub equals
sun.security.jgss.wrapper.GSSLibStub#hashCode()->int::: lib stub hash code
sun.security.jgss.wrapper.GSSLibStub#getMech()->Oid::: lib stub get mech
sun.security.jgss.wrapper.GSSNameElement#getKrbName()->String::: name element get krb name
sun.security.jgss.wrapper.GSSNameElement#getProvider()->Provider::: name element get provider
sun.security.jgss.wrapper.GSSNameElement#equals(GSSNameSpi)->boolean::: name element equals
sun.security.jgss.wrapper.GSSNameElement#equals(Object)->boolean::: name element equals
sun.security.jgss.wrapper.GSSNameElement#hashCode()->int::: name element hash code
sun.security.jgss.wrapper.GSSNameElement#export()->byte[]::: name element export
sun.security.jgss.wrapper.GSSNameElement#getMechanism()->Oid::: name element get mechanism
sun.security.jgss.wrapper.GSSNameElement#toString()->String::: name element to string
sun.security.jgss.wrapper.GSSNameElement#getStringNameType()->Oid::: name element get string name type
sun.security.jgss.wrapper.GSSNameElement#isAnonymousName()->boolean::: name element is anonymous name
sun.security.jgss.wrapper.GSSNameElement#dispose()->void::: name element dispose
sun.security.jgss.wrapper.GSSNameElement#finalize()->void::: name element finalize
sun.security.jgss.wrapper.Krb5Util#getTGSName(GSSNameElement)->String::: krb5 util get name
sun.security.jgss.wrapper.Krb5Util#checkServicePermission(String, String)->void::: krb5 util check service permission
sun.security.jgss.wrapper.NativeGSSContext#getProvider()->Provider::: native context get provider
sun.security.jgss.wrapper.NativeGSSContext#initSecContext(InputStream, int)->byte[]::: native context init sec context
sun.security.jgss.wrapper.NativeGSSContext#acceptSecContext(InputStream, int)->byte[]::: native context accept sec context
sun.security.jgss.wrapper.NativeGSSContext#isEstablished()->boolean::: native context is established
sun.security.jgss.wrapper.NativeGSSContext#dispose()->void::: native context dispose
sun.security.jgss.wrapper.NativeGSSContext#getWrapSizeLimit(int, boolean, int)->int::: native context get wrap size limit
sun.security.jgss.wrapper.NativeGSSContext#wrap(byte[], int, int, MessageProp)->byte[]::: native context wrap
sun.security.jgss.wrapper.NativeGSSContext#wrap(byte[], int, int, OutputStream, MessageProp)->void::: native context wrap
sun.security.jgss.wrapper.NativeGSSContext#wrap(byte[], int, int, byte[], int, MessageProp)->int::: native context wrap
sun.security.jgss.wrapper.NativeGSSContext#wrap(InputStream, OutputStream, MessageProp)->void::: native context wrap
sun.security.jgss.wrapper.NativeGSSContext#unwrap(byte[], int, int, MessageProp)->byte[]::: native context unwrap
sun.security.jgss.wrapper.NativeGSSContext#unwrap(byte[], int, int, byte[], int, MessageProp)->int::: native context unwrap
sun.security.jgss.wrapper.NativeGSSContext#unwrap(InputStream, OutputStream, MessageProp)->void::: native context unwrap
sun.security.jgss.wrapper.NativeGSSContext#unwrap(InputStream, byte[], int, MessageProp)->int::: native context unwrap
sun.security.jgss.wrapper.NativeGSSContext#getMIC(byte[], int, int, MessageProp)->byte[]::: native context get c
sun.security.jgss.wrapper.NativeGSSContext#getMIC(InputStream, OutputStream, MessageProp)->void::: native context get c
sun.security.jgss.wrapper.NativeGSSContext#verifyMIC(byte[], int, int, byte[], int, int, MessageProp)->void::: native context verify c
sun.security.jgss.wrapper.NativeGSSContext#verifyMIC(InputStream, InputStream, MessageProp)->void::: native context verify c
sun.security.jgss.wrapper.NativeGSSContext#export()->byte[]::: native context export
sun.security.jgss.wrapper.NativeGSSContext#requestMutualAuth(boolean)->void::: native context request mutual auth
sun.security.jgss.wrapper.NativeGSSContext#requestReplayDet(boolean)->void::: native context request replay det
sun.security.jgss.wrapper.NativeGSSContext#requestSequenceDet(boolean)->void::: native context request sequence det
sun.security.jgss.wrapper.NativeGSSContext#requestCredDeleg(boolean)->void::: native context request cred deleg
sun.security.jgss.wrapper.NativeGSSContext#requestAnonymity(boolean)->void::: native context request anonymity
sun.security.jgss.wrapper.NativeGSSContext#requestConf(boolean)->void::: native context request conf
sun.security.jgss.wrapper.NativeGSSContext#requestInteg(boolean)->void::: native context request integ
sun.security.jgss.wrapper.NativeGSSContext#requestDelegPolicy(boolean)->void::: native context request deleg policy
sun.security.jgss.wrapper.NativeGSSContext#requestLifetime(int)->void::: native context request lifetime
sun.security.jgss.wrapper.NativeGSSContext#setChannelBinding(ChannelBinding)->void::: native context set channel binding
sun.security.jgss.wrapper.NativeGSSContext#getCredDelegState()->boolean::: native context get cred deleg state
sun.security.jgss.wrapper.NativeGSSContext#getMutualAuthState()->boolean::: native context get mutual auth state
sun.security.jgss.wrapper.NativeGSSContext#getReplayDetState()->boolean::: native context get replay det state
sun.security.jgss.wrapper.NativeGSSContext#getSequenceDetState()->boolean::: native context get sequence det state
sun.security.jgss.wrapper.NativeGSSContext#getAnonymityState()->boolean::: native context get anonymity state
sun.security.jgss.wrapper.NativeGSSContext#isTransferable()->boolean::: native context is transferable
sun.security.jgss.wrapper.NativeGSSContext#isProtReady()->boolean::: native context is prot ready
sun.security.jgss.wrapper.NativeGSSContext#getConfState()->boolean::: native context get conf state
sun.security.jgss.wrapper.NativeGSSContext#getIntegState()->boolean::: native context get integ state
sun.security.jgss.wrapper.NativeGSSContext#getDelegPolicyState()->boolean::: native context get deleg policy state
sun.security.jgss.wrapper.NativeGSSContext#getLifetime()->int::: native context get lifetime
sun.security.jgss.wrapper.NativeGSSContext#getSrcName()->GSSNameSpi::: native context get src name
sun.security.jgss.wrapper.NativeGSSContext#getTargName()->GSSNameSpi::: native context get targ name
sun.security.jgss.wrapper.NativeGSSContext#getMech()->Oid::: native context get mech
sun.security.jgss.wrapper.NativeGSSContext#getDelegCred()->GSSCredentialSpi::: native context get deleg cred
sun.security.jgss.wrapper.NativeGSSContext#isInitiator()->boolean::: native context is initiator
sun.security.jgss.wrapper.NativeGSSContext#finalize()->void::: native context finalize
sun.security.jgss.wrapper.NativeGSSContext#inquireSecContext(String)->Object::: native context inquire sec context
sun.security.jgss.wrapper.NativeGSSFactory#setMech(Oid)->void::: native factory set mech
sun.security.jgss.wrapper.NativeGSSFactory#getNameElement(String, Oid)->GSSNameSpi::: native factory get name element
sun.security.jgss.wrapper.NativeGSSFactory#getNameElement(byte[], Oid)->GSSNameSpi::: native factory get name element
sun.security.jgss.wrapper.NativeGSSFactory#getCredentialElement(GSSNameSpi, int, int, int)->GSSCredentialSpi::: native factory get credential element
sun.security.jgss.wrapper.NativeGSSFactory#getMechanismContext(GSSNameSpi, GSSCredentialSpi, int)->GSSContextSpi::: native factory get mechanism context
sun.security.jgss.wrapper.NativeGSSFactory#getMechanismContext(GSSCredentialSpi)->GSSContextSpi::: native factory get mechanism context
sun.security.jgss.wrapper.NativeGSSFactory#getMechanismContext(byte[])->GSSContextSpi::: native factory get mechanism context
sun.security.jgss.wrapper.NativeGSSFactory#getMechanismOid()->Oid::: native factory get mechanism oid
sun.security.jgss.wrapper.NativeGSSFactory#getProvider()->Provider::: native factory get provider
sun.security.jgss.wrapper.NativeGSSFactory#getNameTypes()->Oid[]::: native factory get name types
sun.security.jgss.wrapper.SunNativeProvider#debug(String)->void::: sun native provider debug
