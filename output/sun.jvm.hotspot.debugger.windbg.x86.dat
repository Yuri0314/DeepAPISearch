WindbgX86Thread#getContext()::: windbg x86 thread get context:::data->debugger->getThreadID->getThreadIntegerRegisterSet->context->new->WindbgX86ThreadContext->for->i->return
WindbgX86Thread#canSetContext()::: windbg x86 thread can set context:::return
WindbgX86Thread#setContext(ThreadContext)::: windbg x86 thread set context:::throw->new->DebuggerException
WindbgX86Thread#equals(Object)::: windbg x86 thread equals:::if->return->return->getThreadID->getThreadID
WindbgX86Thread#hashCode()::: windbg x86 thread hash code:::return->getThreadID
WindbgX86Thread#toString()::: windbg x86 thread to string:::return->Long->getThreadID->toString
WindbgX86Thread#getThreadID():::Retrieves the thread ID of this thread by examining the Thread       Information Block.:::if->debugger->getThreadIdFromSysId->return
WindbgX86ThreadContext#setRegisterAsAddress(int, Address)::: windbg x86 thread context set register as address:::debugger->getAddressValue->setRegister
WindbgX86ThreadContext#getRegisterAsAddress(int)::: windbg x86 thread context get register as address:::return->debugger->getRegister->newAddress
WindbgX86ThreadFactory#createThreadWrapper(Address)::: windbg x86 thread factory create thread wrapper:::return->new->WindbgX86Thread
WindbgX86ThreadFactory#createThreadWrapper(long)::: windbg x86 thread factory create thread wrapper:::return->new->WindbgX86Thread
