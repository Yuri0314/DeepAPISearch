jdk.nashorn.tools.jjs.Console#readLine(String)->String::: console read line
jdk.nashorn.tools.jjs.Console#close()->void::: console close
jdk.nashorn.tools.jjs.Console#getHistory()->EditingHistory::: console get history
jdk.nashorn.tools.jjs.Console#terminalEditorRunning()->boolean::: console terminal editor running
jdk.nashorn.tools.jjs.Console#suspend()->void::: console suspend
jdk.nashorn.tools.jjs.Console#resume()->void::: console resume
jdk.nashorn.tools.jjs.Console.JJSUnixTerminal#isRaw()->boolean::: unix terminal is raw
jdk.nashorn.tools.jjs.Console.JJSUnixTerminal#disableInterruptCharacter()->void::: unix terminal disable interrupt character
jdk.nashorn.tools.jjs.Console.JJSUnixTerminal#enableInterruptCharacter()->void::: unix terminal enable interrupt character
jdk.nashorn.tools.jjs.Console.JJSWindowsTerminal#init()->void::: windows terminal init
jdk.nashorn.tools.jjs.EditObject#getDefaultValue(Class)->Object::: edit object get default value
jdk.nashorn.tools.jjs.EditObject#toString()->String::: edit object to string
jdk.nashorn.tools.jjs.EditObject#keySet()->Set::: edit object key set
jdk.nashorn.tools.jjs.EditObject#getMember(String)->Object::: edit object get member
jdk.nashorn.tools.jjs.EditObject#setMember(String, Object)->void::: edit object set member
jdk.nashorn.tools.jjs.EditObject.SaveHandler#accept(String)->void::: save handler accept
jdk.nashorn.tools.jjs.EditObject#call(Object, Object...)->Object::: edit object call
jdk.nashorn.tools.jjs.EditObject#isFunction()->boolean::: edit object is function
jdk.nashorn.tools.jjs.ExternalEditor#edit(String, Consumer, String, Consumer, Console)->void::: external editor edit
jdk.nashorn.tools.jjs.HistoryObject#isFunction()->boolean::: history object is function
jdk.nashorn.tools.jjs.HistoryObject#call(Object, Object...)->Object::: history object call
jdk.nashorn.tools.jjs.HistoryObject#getMember(String)->Object::: history object get member
jdk.nashorn.tools.jjs.HistoryObject#getDefaultValue(Class)->Object::: history object get default value
jdk.nashorn.tools.jjs.HistoryObject#toString()->String::: history object to string
jdk.nashorn.tools.jjs.HistoryObject#keySet()->Set::: history object key set
jdk.nashorn.tools.jjs.JavacPackagesHelper#isAvailable()->boolean:::Is this class available?
jdk.nashorn.tools.jjs.JavacPackagesHelper#close()->void::: javac packages helper close
jdk.nashorn.tools.jjs.JavacPackagesHelper#listPackage(String)->Set::: javac packages helper list package
jdk.nashorn.tools.jjs.JrtPackagesHelper#close()->void::: jrt packages helper close
jdk.nashorn.tools.jjs.JrtPackagesHelper#listPackage(String)->Set::: jrt packages helper list package
jdk.nashorn.tools.jjs.Main#main(String[])->void:::Main entry point with the default input, output and error streams.
jdk.nashorn.tools.jjs.Main#main(InputStream, OutputStream, OutputStream, String[])->int:::Starting point for executing a Shell
jdk.nashorn.tools.jjs.Main#readEvalPrint(Context, Global)->int:::read-eval-print loop for Nashorn shell.
jdk.nashorn.tools.jjs.Main#getMessage(String)->String::: main get message
jdk.nashorn.tools.jjs.NashornCompleter#isSyntaxErrorAt(Throwable, int, int)->boolean:::Is this a ECMAScript SyntaxError thrown for parse issue at the given line and column?
jdk.nashorn.tools.jjs.NashornCompleter#isParseErrorAt(Throwable, int, int)->boolean:::Is this a parse error at the given line and column?
jdk.nashorn.tools.jjs.NashornCompleter#readMoreLines(String, Exception, Console, String, PrintWriter)->String:::Read more lines of code if we got SyntaxError at EOF and we can it fine by by reading more lines of code from the user
jdk.nashorn.tools.jjs.NashornCompleter#isComplete(String)->boolean::: nashorn completer is complete
jdk.nashorn.tools.jjs.NashornCompleter#complete(String, int, List)->int::: nashorn completer complete
jdk.nashorn.tools.jjs.PackagesHelper#create(Context)->PackagesHelper::: packages helper create
jdk.nashorn.tools.jjs.PackagesHelper#getPackageProperties(String)->List:::Return the list of properties of the given Java package or package prefix
jdk.nashorn.tools.jjs.PackagesHelper#close()->void:::Close resources (like file system) used, if any.
jdk.nashorn.tools.jjs.PackagesHelper#listPackage(String)->Set:::Return the set of properties of a given package object.
jdk.nashorn.tools.jjs.PackagesHelper#isClassAccessible(String)->boolean::: packages helper is class accessible
jdk.nashorn.tools.jjs.PackagesHelper#isPackageAccessible(String)->boolean::: packages helper is package accessible
jdk.nashorn.tools.jjs.PropertiesHelper#close()->void::: properties helper close
jdk.nashorn.tools.jjs.PropertiesHelper#getProperties(Object)->List:::returns the list of properties of the given object.
jdk.nashorn.tools.jjs.PropertiesHelper#getProperties(Object, String)->List:::Returns the list of properties of the given object that start with the given prefix.
