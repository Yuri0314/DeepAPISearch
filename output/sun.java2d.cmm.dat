sun.java2d.cmm.CMMServiceProvider#getColorManagementModule()->PCMM::: service provider get color management module
sun.java2d.cmm.CMMServiceProvider#getModule()->PCMM::: service provider get module
sun.java2d.cmm.CMSManager#getModule()->PCMM::: manager get module
sun.java2d.cmm.CMSManager#canCreateModule()->boolean::: manager can create module
sun.java2d.cmm.CMSManager.CMMTracer#loadProfile(byte[])->Profile::: tracer load profile
sun.java2d.cmm.CMSManager.CMMTracer#freeProfile(Profile)->void::: tracer free profile
sun.java2d.cmm.CMSManager.CMMTracer#getProfileSize(Profile)->int::: tracer get profile size
sun.java2d.cmm.CMSManager.CMMTracer#getProfileData(Profile, byte[])->void::: tracer get profile data
sun.java2d.cmm.CMSManager.CMMTracer#getTagSize(Profile, int)->int::: tracer get tag size
sun.java2d.cmm.CMSManager.CMMTracer#getTagData(Profile, int, byte[])->void::: tracer get tag data
sun.java2d.cmm.CMSManager.CMMTracer#setTagData(Profile, int, byte[])->void::: tracer set tag data
sun.java2d.cmm.CMSManager.CMMTracer#createTransform(ICC_Profile, int, int)->ColorTransform::: tracer create transform
sun.java2d.cmm.CMSManager.CMMTracer#createTransform(ColorTransform[])->ColorTransform::: tracer create transform
sun.java2d.cmm.ColorTransform#getNumInComponents()->int::: color transform get num in components
sun.java2d.cmm.ColorTransform#getNumOutComponents()->int::: color transform get num out components
sun.java2d.cmm.ColorTransform#colorConvert(BufferedImage, BufferedImage)->void::: color transform color convert
sun.java2d.cmm.ColorTransform#colorConvert(Raster, WritableRaster, float[], float[], float[], float[])->void::: color transform color convert
sun.java2d.cmm.ColorTransform#colorConvert(Raster, WritableRaster)->void::: color transform color convert
sun.java2d.cmm.ColorTransform#colorConvert(short[], short[])->short[]::: color transform color convert
sun.java2d.cmm.ColorTransform#colorConvert(byte[], byte[])->byte[]::: color transform color convert
sun.java2d.cmm.PCMM#loadProfile(byte[])->Profile::: m load profile
sun.java2d.cmm.PCMM#freeProfile(Profile)->void::: m free profile
sun.java2d.cmm.PCMM#getProfileSize(Profile)->int::: m get profile size
sun.java2d.cmm.PCMM#getProfileData(Profile, byte[])->void::: m get profile data
sun.java2d.cmm.PCMM#getTagData(Profile, int, byte[])->void::: m get tag data
sun.java2d.cmm.PCMM#getTagSize(Profile, int)->int::: m get tag size
sun.java2d.cmm.PCMM#setTagData(Profile, int, byte[])->void::: m set tag data
sun.java2d.cmm.PCMM#createTransform(ICC_Profile, int, int)->ColorTransform::: m create transform
sun.java2d.cmm.PCMM#createTransform(ColorTransform[])->ColorTransform::: m create transform
sun.java2d.cmm.Profile#getNativePtr()->long::: profile get native ptr
sun.java2d.cmm.ProfileActivator#activate()->void:::Activate a previously deferred ICC_Profile object.
sun.java2d.cmm.ProfileDataVerifier#verify(byte[])->void:::Throws an IllegalArgumentException if the data does not correspond to a valid ICC Profile.
sun.java2d.cmm.ProfileDeferralInfo#read()->int:::Implements the abstract read() method of InputStream.
sun.java2d.cmm.ProfileDeferralMgr#registerDeferral(ProfileActivator)->void:::Records a ProfileActivator object whose activate method will be called if the CMM needs to be activated.
sun.java2d.cmm.ProfileDeferralMgr#unregisterDeferral(ProfileActivator)->void:::Removes a ProfileActivator object from the vector of ProfileActivator objects whose activate method will be called if the CMM needs to be activated.
sun.java2d.cmm.ProfileDeferralMgr#activateProfiles()->void:::Removes a ProfileActivator object from the vector of ProfileActivator objects whose activate method will be called if the CMM needs to be activated.
