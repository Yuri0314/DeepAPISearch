java.lang.instrument.ClassDefinition#getDefinitionClass()->Class:::Returns the class.
java.lang.instrument.ClassDefinition#getDefinitionClassFile()->byte[]:::Returns the array of bytes that contains the new class file.
java.lang.instrument.ClassFileTransformer#transform(ClassLoader, String, Class, ProtectionDomain, byte[])->byte[]:::Transforms the given class file and returns a new replacement class file
java.lang.instrument.ClassFileTransformer#transform(Module, ClassLoader, String, Class, ProtectionDomain, byte[])->byte[]:::Transforms the given class file and returns a new replacement class file.
java.lang.instrument.Instrumentation#addTransformer(ClassFileTransformer, boolean)->void:::Registers the supplied transformer
java.lang.instrument.Instrumentation#addTransformer(ClassFileTransformer)->void:::Registers the supplied transformer
java.lang.instrument.Instrumentation#removeTransformer(ClassFileTransformer)->boolean:::Unregisters the supplied transformer
java.lang.instrument.Instrumentation#isRetransformClassesSupported()->boolean:::Returns whether or not the current JVM configuration supports retransformation of classes
java.lang.instrument.Instrumentation#retransformClasses(Class...)->void:::Retransform the supplied set of classes
java.lang.instrument.Instrumentation#isRedefineClassesSupported()->boolean:::Returns whether or not the current JVM configuration supports redefinition of classes
java.lang.instrument.Instrumentation#redefineClasses(ClassDefinition...)->void:::Redefine the supplied set of classes using the supplied class files
java.lang.instrument.Instrumentation#isModifiableClass(Class)->boolean:::Tests whether a class is modifiable by #retransformClasses retransformation or #redefineClasses redefinition
java.lang.instrument.Instrumentation#getAllLoadedClasses()->Class[]:::Returns an array of all classes currently loaded by the JVM.
java.lang.instrument.Instrumentation#getInitiatedClasses(ClassLoader)->Class[]:::Returns an array of all classes for which loader is an initiating loader
java.lang.instrument.Instrumentation#getObjectSize(Object)->long:::Returns an implementation-specific approximation of the amount of storage consumed by the specified object
java.lang.instrument.Instrumentation#appendToBootstrapClassLoaderSearch(JarFile)->void:::Specifies a JAR file with instrumentation classes to be defined by the bootstrap class loader
java.lang.instrument.Instrumentation#appendToSystemClassLoaderSearch(JarFile)->void:::Specifies a JAR file with instrumentation classes to be defined by the system class loader
java.lang.instrument.Instrumentation#isNativeMethodPrefixSupported()->boolean:::Returns whether the current JVM configuration supports #setNativeMethodPrefix(ClassFileTransformer,String) setting a native method prefix
java.lang.instrument.Instrumentation#setNativeMethodPrefix(ClassFileTransformer, String)->void:::This method modifies the failure handling of native method resolution by allowing retry with a prefix applied to the name
java.lang.instrument.Instrumentation#redefineModule(Module, Set, Map>, Map>, Set>, Map, List>>)->void:::Redefine a module to expand the set of modules that it reads, the set of packages that it exports or opens, or the services that it uses or provides
java.lang.instrument.Instrumentation#isModifiableModule(Module)->boolean:::Tests whether a module can be modified with #redefineModule redefineModule
