sun.jvm.hotspot.tools.jcore.ByteCodeRewriter#debugMessage(String)->void::: byte code rewriter debug message
sun.jvm.hotspot.tools.jcore.ByteCodeRewriter#getConstantPoolIndexFromRefMap(int, int)->short::: byte code rewriter get constant pool index from ref map
sun.jvm.hotspot.tools.jcore.ByteCodeRewriter#getConstantPoolIndex(int, int)->short::: byte code rewriter get constant pool index
sun.jvm.hotspot.tools.jcore.ByteCodeRewriter#rewrite()->void::: byte code rewriter rewrite
sun.jvm.hotspot.tools.jcore.ClassDump#setClassFilter(ClassFilter)->void::: class dump set class filter
sun.jvm.hotspot.tools.jcore.ClassDump#setOutputDirectory(String)->void::: class dump set output directory
sun.jvm.hotspot.tools.jcore.ClassDump#setJarOutput(String)->void::: class dump set jar output
sun.jvm.hotspot.tools.jcore.ClassDump#run()->void::: class dump run
sun.jvm.hotspot.tools.jcore.ClassDump#getName()->String::: class dump get name
sun.jvm.hotspot.tools.jcore.ClassDump#main(String[])->void::: class dump main
sun.jvm.hotspot.tools.jcore.ClassFilter#canInclude(InstanceKlass)->boolean::: class filter can include
sun.jvm.hotspot.tools.jcore.ClassWriter#debugMessage(String)->void::: class writer debug message
sun.jvm.hotspot.tools.jcore.ClassWriter#extractHighShortFromInt(int)->int::: class writer extract high short from int
sun.jvm.hotspot.tools.jcore.ClassWriter#extractLowShortFromInt(int)->int::: class writer extract low short from int
sun.jvm.hotspot.tools.jcore.ClassWriter#write()->void::: class writer write
sun.jvm.hotspot.tools.jcore.ClassWriter#writeVersion()->void::: class writer write version
sun.jvm.hotspot.tools.jcore.ClassWriter#writeIndex(int)->void::: class writer write index
sun.jvm.hotspot.tools.jcore.ClassWriter#writeConstantPool()->void::: class writer write constant pool
sun.jvm.hotspot.tools.jcore.ClassWriter#writeClassAccessFlags()->void::: class writer write class access flags
sun.jvm.hotspot.tools.jcore.ClassWriter#writeThisClass()->void::: class writer write this class
sun.jvm.hotspot.tools.jcore.ClassWriter#writeSuperClass()->void::: class writer write super class
sun.jvm.hotspot.tools.jcore.ClassWriter#writeInterfaces()->void::: class writer write interfaces
sun.jvm.hotspot.tools.jcore.ClassWriter#writeFields()->void::: class writer write fields
sun.jvm.hotspot.tools.jcore.ClassWriter#isSynthetic(short)->boolean::: class writer is synthetic
sun.jvm.hotspot.tools.jcore.ClassWriter#hasSyntheticAttribute(short)->boolean::: class writer has synthetic attribute
sun.jvm.hotspot.tools.jcore.ClassWriter#writeSynthetic()->void::: class writer write synthetic
sun.jvm.hotspot.tools.jcore.ClassWriter#writeMethods()->void::: class writer write methods
sun.jvm.hotspot.tools.jcore.ClassWriter#writeMethod(Method)->void::: class writer write method
sun.jvm.hotspot.tools.jcore.ClassWriter#rewriteByteCode(Method, byte[])->void::: class writer rewrite byte code
sun.jvm.hotspot.tools.jcore.ClassWriter#writeGenericSignature(String)->void::: class writer write generic signature
sun.jvm.hotspot.tools.jcore.ClassWriter#writeClassAttributes()->void::: class writer write class attributes
sun.jvm.hotspot.tools.jcore.NameFilter#canInclude(InstanceKlass)->boolean::: name filter can include
sun.jvm.hotspot.tools.jcore.PackageNameFilter#canInclude(InstanceKlass)->boolean::: package name filter can include
