NewDependencyCollector#finished(TaskEvent)::: new dependency collector finished:::if->e->getKind->collectPubApisOfDependencies->getDependencies->getDependencies
NewDependencyCollector#getDependencies(boolean)::: new dependency collector get dependencies:::return
NewDependencyCollector#getDependencyNodes(Context, Collection, boolean)::: new dependency collector get dependency nodes:::deps->GraphDependencies->instance->return->deps->getNodes->stream->map->n->getClassSymbol->filter->explicitJFOs->n->getClassSymbol->contains->filter->Collectors->toSet->collect
NewDependencyCollector#collectPubApisOfDependencies(Context, Collection)::: new dependency collector collect pub apis of dependencies:::pubApis->PubAPIs->instance->foreach->getDependencyNodes->cs->cDepNode->getClassSymbol->outermostClass->loc->getLocationOf->if->pubApis->visitPubapi
NewDependencyCollector#getLocationOf(ClassSymbol)::: new dependency collector get location of:::jfo->cs->outermostClass->if->return->getLocation->return
NewDependencyCollector#getDependencies(Context, Collection, boolean)::: new dependency collector get dependencies:::result->new->HashMap<>->foreach->getDependencyNodes->fqDep->cnode->getClassSymbol->outermostClass->toString->depPkg->Util->pkgNameOfClassName->depsForThisClass->result->get->if->result->new->HashMap<>->put->fqDeps->depsForThisClass->get->if->depsForThisClass->new->HashSet<>->put->foreach->getAllDependencies->cDepNode->if->continue->if->cDepNode->getClassSymbol->continue->if->cDepNode->getClassSymbol->isSymbolRelevant->fqDeps->cDepNode->getClassSymbol->outermostClass->toString->add->foreach->cnode->getClassSymbol->allSupertypes->if->isSymbolRelevant->fqDeps->cs->outermostClass->toString->add->return
NewDependencyCollector#isSymbolRelevant(boolean, ClassSymbol)::: new dependency collector is symbol relevant:::csLoc->getLocationOf->relevantLocation->return
NewDependencyCollector#allSupertypes(TypeSymbol)::: new dependency collector all supertypes:::if->return->Collections->emptySet->result->new->HashSet<>->cs->result->add->result->cs->getSuperclass->allSupertypes->addAll->foreach->cs->getInterfaces->result->allSupertypes->addAll->return
NewDependencyCollector#getAllDependencies(CompletionNode)::: new dependency collector get all dependencies:::return->Stream->cnode->getSupportedDependencyKinds->of->cnode->getDependenciesByKind->stream->flatMap->Collectors->toSet->collect
PublicApiCollector#finished(TaskEvent)::: public api collector finished:::switch->e->getKind->e->getCompilationUnit->collectClassSymbols->break->Log->debug->Log->debug->foreach->Log->debug->extractPubApis->pa->PubAPIs->instance->pa->getPubapis->pa->getPubapis->Log->debug->break
PublicApiCollector#collectClassSymbols(JCCompilationUnit)::: public api collector collect class symbols:::foreach->cu->getTypeDecls->if->classSymbols->add
PublicApiCollector#extractPubApis()::: public api collector extract pub apis:::pubApis->PubAPIs->instance->classSymbols->pubApis->visitPubapi->forEach
PublicApiCollector#getPubApis(boolean)::: public api collector get pub apis:::return
