com.sun.tools.jdeprscan.scan.ClassFinder#addDir(String)->void:::Adds a directory to this finder's search path, ignoring errors.
com.sun.tools.jdeprscan.scan.ClassFinder#addJar(String)->void:::Adds a jar file to this finder's search path, ignoring errors.
com.sun.tools.jdeprscan.scan.ClassFinder#addJrt()->void:::Adds the JRT filesystem to this finder's search path.
com.sun.tools.jdeprscan.scan.ClassFinder#find(String)->ClassFile:::Searches the class path for a class with the given name, returning a ClassFile for it
com.sun.tools.jdeprscan.scan.ClassFinder.PathEntry#find(String)->ClassFile:::Returns a ClassFile instance corresponding to this name, or null if it's not present in this entry.
com.sun.tools.jdeprscan.scan.ClassFinder.JarPathEntry#find(String)->ClassFile::: jar path entry find
com.sun.tools.jdeprscan.scan.ClassFinder.DirPathEntry#find(String)->ClassFile::: dir path entry find
com.sun.tools.jdeprscan.scan.ClassFinder.JrtPathEntry#find(String)->ClassFile::: jrt path entry find
com.sun.tools.jdeprscan.scan.CPEntries#loadFrom(ClassFile)->CPEntries::: entries load from
com.sun.tools.jdeprscan.scan.CPEntries#toString()->String::: entries to string
com.sun.tools.jdeprscan.scan.CPSelector#visitClass(ConstantPool.CONSTANT_Class_info, CPEntries)->Void::: selector visit class
com.sun.tools.jdeprscan.scan.CPSelector#visitDouble(ConstantPool.CONSTANT_Double_info, CPEntries)->Void::: selector visit double
com.sun.tools.jdeprscan.scan.CPSelector#visitFieldref(ConstantPool.CONSTANT_Fieldref_info, CPEntries)->Void::: selector visit fieldref
com.sun.tools.jdeprscan.scan.CPSelector#visitFloat(ConstantPool.CONSTANT_Float_info, CPEntries)->Void::: selector visit float
com.sun.tools.jdeprscan.scan.CPSelector#visitInteger(ConstantPool.CONSTANT_Integer_info, CPEntries)->Void::: selector visit integer
com.sun.tools.jdeprscan.scan.CPSelector#visitInterfaceMethodref(ConstantPool.CONSTANT_InterfaceMethodref_info, CPEntries)->Void::: selector visit interface methodref
com.sun.tools.jdeprscan.scan.CPSelector#visitInvokeDynamic(ConstantPool.CONSTANT_InvokeDynamic_info, CPEntries)->Void::: selector visit invoke dynamic
com.sun.tools.jdeprscan.scan.CPSelector#visitDynamicConstant(CONSTANT_Dynamic_info, CPEntries)->Void::: selector visit dynamic constant
com.sun.tools.jdeprscan.scan.CPSelector#visitLong(ConstantPool.CONSTANT_Long_info, CPEntries)->Void::: selector visit long
com.sun.tools.jdeprscan.scan.CPSelector#visitMethodref(ConstantPool.CONSTANT_Methodref_info, CPEntries)->Void::: selector visit methodref
com.sun.tools.jdeprscan.scan.CPSelector#visitMethodHandle(ConstantPool.CONSTANT_MethodHandle_info, CPEntries)->Void::: selector visit method handle
com.sun.tools.jdeprscan.scan.CPSelector#visitMethodType(ConstantPool.CONSTANT_MethodType_info, CPEntries)->Void::: selector visit method type
com.sun.tools.jdeprscan.scan.CPSelector#visitModule(ConstantPool.CONSTANT_Module_info, CPEntries)->Void::: selector visit module
com.sun.tools.jdeprscan.scan.CPSelector#visitNameAndType(ConstantPool.CONSTANT_NameAndType_info, CPEntries)->Void::: selector visit name and type
com.sun.tools.jdeprscan.scan.CPSelector#visitPackage(ConstantPool.CONSTANT_Package_info, CPEntries)->Void::: selector visit package
com.sun.tools.jdeprscan.scan.CPSelector#visitString(ConstantPool.CONSTANT_String_info, CPEntries)->Void::: selector visit string
com.sun.tools.jdeprscan.scan.CPSelector#visitUtf8(ConstantPool.CONSTANT_Utf8_info, CPEntries)->Void::: selector visit utf8
com.sun.tools.jdeprscan.scan.MethodSig#fromDesc(String)->MethodSig:::Parses the method descriptor and returns a MethodSig instance.
com.sun.tools.jdeprscan.scan.MethodSig#getReturnType()->String:::Returns this method's return type.
com.sun.tools.jdeprscan.scan.MethodSig#getParameters()->List:::Returns a list of parameters of this method.
com.sun.tools.jdeprscan.scan.MethodSig#toString()->String:::Returns a string describing this method.
com.sun.tools.jdeprscan.scan.Scan#nameFromDescType(String)->String:::Given a descriptor type, extracts and returns the class name from it, if any
com.sun.tools.jdeprscan.scan.Scan#nameFromRefType(String)->String:::Given a ref type name, extracts and returns the class name from it, if any
com.sun.tools.jdeprscan.scan.Scan#typeKind(ClassFile)->String::: scan type kind
com.sun.tools.jdeprscan.scan.Scan#dep(boolean)->String::: scan dep
com.sun.tools.jdeprscan.scan.Scan#printType(String, ClassFile, String, boolean)->void::: scan print type
com.sun.tools.jdeprscan.scan.Scan#printMethod(String, ClassFile, String, String, String, boolean)->void::: scan print method
com.sun.tools.jdeprscan.scan.Scan#printField(String, ClassFile, String, String, boolean)->void::: scan print field
com.sun.tools.jdeprscan.scan.Scan#printFieldType(String, ClassFile, String, String, String, boolean)->void::: scan print field type
com.sun.tools.jdeprscan.scan.Scan#printHasField(ClassFile, String, String, boolean)->void::: scan print has field
com.sun.tools.jdeprscan.scan.Scan#printHasMethodParmType(ClassFile, String, String, boolean)->void::: scan print has method parm type
com.sun.tools.jdeprscan.scan.Scan#printHasMethodRetType(ClassFile, String, String, boolean)->void::: scan print has method ret type
com.sun.tools.jdeprscan.scan.Scan#printHasOverriddenMethod(ClassFile, String, String, String, boolean)->void::: scan print has overridden method
com.sun.tools.jdeprscan.scan.Scan#errorException(Exception)->void::: scan error exception
com.sun.tools.jdeprscan.scan.Scan#errorNoClass(String)->void::: scan error no class
com.sun.tools.jdeprscan.scan.Scan#errorNoFile(String)->void::: scan error no file
com.sun.tools.jdeprscan.scan.Scan#errorNoMethod(String, String, String)->void::: scan error no method
com.sun.tools.jdeprscan.scan.Scan#isMemberPresent(ClassFile, String, String, boolean)->boolean:::Checks whether a member (method or field) is present in a class
com.sun.tools.jdeprscan.scan.Scan#addInterfaces(Deque, ClassFile)->void:::Adds all interfaces from this class to the deque of interfaces.
com.sun.tools.jdeprscan.scan.Scan#resolveMember(ClassFile, String, String, String, boolean, boolean)->String:::Resolves a member by searching this class and all its superclasses and implemented interfaces
com.sun.tools.jdeprscan.scan.Scan#checkSuper(ClassFile)->void:::Checks the superclass of this class.
com.sun.tools.jdeprscan.scan.Scan#checkInterfaces(ClassFile)->void:::Checks the interfaces of this class.
com.sun.tools.jdeprscan.scan.Scan#checkClasses(ClassFile, CPEntries)->void:::Checks Class_info entries in the constant pool.
com.sun.tools.jdeprscan.scan.Scan#checkMethodRef(ClassFile, String, CONSTANT_NameAndType_info, String)->void:::Checks methods referred to from the constant pool.
com.sun.tools.jdeprscan.scan.Scan#checkFieldRef(ClassFile, ConstantPool.CONSTANT_Fieldref_info)->void:::Checks fields referred to from the constant pool.
com.sun.tools.jdeprscan.scan.Scan#checkFields(ClassFile)->void:::Checks the fields declared in this class.
com.sun.tools.jdeprscan.scan.Scan#checkMethods(ClassFile)->void:::Checks the methods declared in this class.
com.sun.tools.jdeprscan.scan.Scan#processClass(ClassFile)->void:::Processes a single class file.
com.sun.tools.jdeprscan.scan.Scan#scanJar(String)->boolean:::Scans a jar file for uses of deprecated APIs.
com.sun.tools.jdeprscan.scan.Scan#scanDir(String)->boolean:::Scans class files in the named directory hierarchy for uses of deprecated APIs.
com.sun.tools.jdeprscan.scan.Scan#processClassName(String)->boolean:::Scans the named class for uses of deprecated APIs.
com.sun.tools.jdeprscan.scan.Scan#processClassFile(String)->boolean:::Scans the named class file for uses of deprecated APIs.
