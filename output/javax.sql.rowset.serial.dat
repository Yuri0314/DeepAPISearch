SerialArray#free():::This method frees the SerialArray object and releases the resources that it holds:::if
SerialArray#getArray():::Returns a new array that is a copy of this SerialArray object.:::isValid->dst->new->ObjectArr->System->arraycopy->return
SerialArray#getArray(Map>):::Returns a new array that is a copy of this SerialArray object, using the given type map for the custom mapping of each element when the elements are SQL UDTs:::isValid->dst->new->ObjectArr->System->arraycopy->return
SerialArray#getArray(long, int):::Returns a new array that is a copy of a slice of this SerialArray object, starting with the element at the given index and containing the given number of consecutive elements.:::isValid->dst->new->ObjectArr->System->arraycopy->return
SerialArray#getArray(long, int, Map>):::Returns a new array that is a copy of a slice of this SerialArray object, starting with the element at the given index and containing the given number of consecutive elements:::isValid->dst->new->ObjectArr->System->arraycopy->return
SerialArray#getBaseType():::Retrieves the SQL type of the elements in this SerialArray object:::isValid->return
SerialArray#getBaseTypeName():::Retrieves the DBMS-specific type name for the elements in this SerialArray object.:::isValid->return
SerialArray#getResultSet(long, int):::Retrieves a ResultSet object holding the elements of the subarray that starts at index index and contains up to count successive elements:::se->new->SerialException->se->new->UnsupportedOperationException->initCause->throw
SerialArray#getResultSet(Map>):::Retrieves a ResultSet object that contains all of the elements of the SQL ARRAY value represented by this SerialArray object:::se->new->SerialException->se->new->UnsupportedOperationException->initCause->throw
SerialArray#getResultSet():::Retrieves a ResultSet object that contains all of the elements in the ARRAY value that this SerialArray object represents:::se->new->SerialException->se->new->UnsupportedOperationException->initCause->throw
SerialArray#getResultSet(long, int, Map>):::Retrieves a result set holding the elements of the subarray that starts at Retrieves a ResultSet object that contains a subarray of the elements in this SerialArray object, starting at index index and containing up to count successive elements:::se->new->SerialException->se->new->UnsupportedOperationException->initCause->throw
SerialArray#equals(Object):::Compares this SerialArray to the specified object:::if->return->if->sa->return->baseTypeName->equals->Arrays->equals->return
SerialArray#hashCode():::Returns a hash code for this SerialArray:::return->Arrays->hashCode->baseTypeName->hashCode
SerialArray#clone():::Returns a clone of this SerialArray:::try->sa->super->clone->Arrays->copyOf->return->catch->throw->new->InternalError->finally
SerialBlob#getBytes(long, int):::Copies the specified number of bytes, starting at the given position, from this SerialBlob object to another array of bytes:::isValid->if->if->throw->new->SerialException->b->new->byteArr->for->i->return
SerialBlob#length():::Retrieves the number of bytes in this SerialBlob object's array of bytes.:::isValid->return
SerialBlob#getBinaryStream():::Returns this SerialBlob object as an input stream:::isValid->stream->new->ByteArrayInputStream->return
SerialBlob#position(byte[], long):::Returns the position in this SerialBlob object where the given pattern of bytes begins, starting the search at the specified position.:::isValid->if->return->pos->i->patlen->while->if->if->return->else->if->return
SerialBlob#position(Blob, long):::Returns the position in this SerialBlob object where the given Blob object begins, starting the search at the specified position.:::isValid->return->pattern->pattern->length->getBytes->position
SerialBlob#setBytes(long, byte[]):::Writes the given array of bytes to the BLOB value that this Blob object represents, starting at position pos, and returns the number of bytes written.:::return->setBytes
SerialBlob#setBytes(long, byte[], int, int):::Writes all or part of the given byte array to the BLOB value that this Blob object represents and returns the number of bytes written:::isValid->if->throw->new->SerialException->if->this->length->throw->new->SerialException->if->throw->new->SerialException->if->throw->new->SerialException->i->while->return
SerialBlob#setBinaryStream(long):::Retrieves a stream that can be used to write to the BLOB value that this Blob object represents:::isValid->if->return->setBinaryStream->else->throw->new->SerialException
SerialBlob#truncate(long):::Truncates the BLOB value that this Blob object represents to be len bytes in length.:::isValid->if->throw->new->SerialException->else->if->new->byteArr->else->this->getBytes
SerialBlob#getBinaryStream(long, long):::Returns an InputStream object that contains a partial Blob value, starting with the byte specified by pos, which is length bytes in length.:::isValid->if->this->length->throw->new->SerialException->if->throw->new->SerialException->return->new->ByteArrayInputStream
SerialBlob#free():::This method frees the SerialBlob object and releases the resources that it holds:::if->if->blob->free
SerialBlob#equals(Object):::Compares this SerialBlob to the specified object:::if->return->if->sb->if->return->Arrays->equals->return
SerialBlob#hashCode():::Returns a hash code for this SerialBlob.:::return->Arrays->hashCode
SerialBlob#clone():::Returns a clone of this SerialBlob:::try->sb->super->clone->Arrays->copyOf->return->catch->throw->new->InternalError->finally
SerialClob#length():::Retrieves the number of characters in this SerialClob object's array of characters.:::isValid->return
SerialClob#getCharacterStream():::Returns this SerialClob object's data as a stream of Unicode characters:::isValid->return->new->CharArrayReader
SerialClob#getAsciiStream():::Retrieves the CLOB value designated by this SerialClob object as an ascii stream:::isValid->if->return->getAsciiStream->else->throw->new->SerialException
SerialClob#getSubString(long, int):::Returns a copy of the substring contained in this SerialClob object, starting at the given position and continuing for the specified number or characters.:::isValid->if->this->length->throw->new->SerialException->if->this->length->throw->new->SerialException->try->return->new->String->catch->throw->e->getMessage->new->SerialException->finally
SerialClob#position(String, long):::Returns the position in this SerialClob object where the given String object begins, starting the search at the specified position:::isValid->if->return->pattern->searchStr->toCharArray->pos->i->patlen->while->if->if->return->else->if->return
SerialClob#position(Clob, long):::Returns the position in this SerialClob object where the given Clob signature begins, starting the search at the specified position:::isValid->return->searchStr->searchStr->length->getSubString->position
SerialClob#setString(long, String):::Writes the given Java String to the CLOB value that this SerialClob object represents, at the position pos.:::return->str->length->setString
SerialClob#setString(long, String, int, int):::Writes len characters of str, starting at character offset, to the CLOB value that this Clob represents.:::isValid->temp->str->substring->cPattern->temp->toCharArray->if->str->length->throw->new->SerialException->if->this->length->throw->new->SerialException->if->throw->new->SerialException->if->str->length->throw->new->SerialException->i->while->str->length->return
SerialClob#setAsciiStream(long):::Retrieves a stream to be used to write Ascii characters to the CLOB value that this SerialClob object represents, starting at position pos:::isValid->if->return->setAsciiStream->else->throw->new->SerialException
SerialClob#setCharacterStream(long):::Retrieves a stream to be used to write a stream of Unicode characters to the CLOB value that this SerialClob object represents, at position pos:::isValid->if->return->setCharacterStream->else->throw->new->SerialException
SerialClob#truncate(long):::Truncates the CLOB value that this SerialClob object represents so that it has a length of len characters:::isValid->if->throw->new->SerialException->else->if->new->charArr->else->this->getSubString->toCharArray
SerialClob#getCharacterStream(long, long):::Returns a Reader object that contains a partial SerialClob value, starting with the character specified by pos, which is length characters in length.:::isValid->if->throw->new->SerialException->if->throw->new->SerialException->if->throw->new->SerialException->return->new->CharArrayReader
SerialClob#free():::This method frees the SerialClob object and releases the resources that it holds:::if->if->clob->free
SerialClob#equals(Object):::Compares this SerialClob to the specified object:::if->return->if->sc->if->return->Arrays->equals->return
SerialClob#hashCode():::Returns a hash code for this SerialClob.:::return->Arrays->hashCode
SerialClob#clone():::Returns a clone of this SerialClob:::try->sc->super->clone->Arrays->copyOf->return->catch->throw->new->InternalError->finally
SerialDatalink#getDatalink():::Returns a new URL that is a copy of this SerialDatalink object.:::aURL->try->toString->new->URL->catch->throw->e->getMessage->new->SerialException->finally->return
SerialDatalink#equals(Object):::Compares this SerialDatalink to the specified object:::if->return->if->sdl->return->url->equals->return
SerialDatalink#hashCode():::Returns a hash code for this SerialDatalink:::return->url->hashCode
SerialDatalink#clone():::Returns a clone of this SerialDatalink.:::try->sdl->super->clone->return->catch->throw->new->InternalError->finally
SerialJavaObject#getObject():::Returns an Object that is a copy of this SerialJavaObject object.:::return
SerialJavaObject#getFields():::Returns an array of Field objects that contains each field of the object that this helper class is serializing.:::if->c->getClass->sm->System->getSecurityManager->if->caller->Reflection->getCallerClass->if->ReflectUtil->caller->getClassLoader->c->getClassLoader->needsPackageAccessCheck->ReflectUtil->checkPackageAccess->return->c->getFields->else->throw->new->SerialException
SerialJavaObject#equals(Object):::Compares this SerialJavaObject to the specified object:::if->return->if->sjo->return->obj->equals->return
SerialJavaObject#hashCode():::Returns a hash code for this SerialJavaObject:::return->obj->hashCode
SerialRef#getBaseTypeName():::Returns a string describing the base type name of the Ref.:::return
SerialRef#getObject(java.util.Map>):::Returns an Object representing the SQL structured type to which this SerialRef object refers:::new->Hashtable<String,Class<?>>->if->return->map->get->else->throw->new->SerialException
SerialRef#getObject():::Returns an Object representing the SQL structured type to which this SerialRef object refers.:::if->try->return->reference->getObject->catch->throw->e->getMessage->new->SerialException->finally->if->return->throw->new->SerialException
SerialRef#setObject(Object):::Sets the SQL structured type that this SerialRef object references to the given Object object.:::try->reference->setObject->catch->throw->e->getMessage->new->SerialException->finally
SerialRef#equals(Object):::Compares this SerialRef to the specified object:::if->return->if->ref->return->baseTypeName->equals->object->equals->return
SerialRef#hashCode():::Returns a hash code for this SerialRef.:::return->object->hashCode->baseTypeName->hashCode
SerialRef#clone():::Returns a clone of this SerialRef:::try->ref->super->clone->return->catch->throw->new->InternalError->finally
SerialStruct#getSQLTypeName():::Retrieves the SQL type name for this SerialStruct object:::return
SerialStruct#getAttributes():::Retrieves an array of Object values containing the attributes of the SQL structured type that this SerialStruct object represents.:::val->return->Arrays->copyOf
SerialStruct#getAttributes(Map>):::Retrieves the attributes for the SQL structured type that this SerialStruct represents as an array of Object values, using the given type map for custom mapping if appropriate.:::val->return->Arrays->copyOf
SerialStruct#equals(Object):::Compares this SerialStruct to the specified object:::if->return->if->ss->return->SQLTypeName->equals->Arrays->equals->return
SerialStruct#hashCode():::Returns a hash code for this SerialStruct:::return->Arrays->hashCode->SQLTypeName->hashCode
SerialStruct#clone():::Returns a clone of this SerialStruct:::try->ss->super->clone->Arrays->copyOf->return->catch->throw->new->InternalError->finally
SQLInputImpl#readString():::Retrieves the next attribute in this SQLInputImpl object as a String in the Java programming language:::return->getNextAttribute
SQLInputImpl#readBoolean():::Retrieves the next attribute in this SQLInputImpl object as a boolean in the Java programming language:::attrib->getNextAttribute->return->attrib->booleanValue
SQLInputImpl#readByte():::Retrieves the next attribute in this SQLInputImpl object as a byte in the Java programming language:::attrib->getNextAttribute->return->attrib->byteValue
SQLInputImpl#readShort():::Retrieves the next attribute in this SQLInputImpl object as a short in the Java programming language:::attrib->getNextAttribute->return->attrib->shortValue
SQLInputImpl#readInt():::Retrieves the next attribute in this SQLInputImpl object as an int in the Java programming language:::attrib->getNextAttribute->return->attrib->intValue
SQLInputImpl#readLong():::Retrieves the next attribute in this SQLInputImpl object as a long in the Java programming language:::attrib->getNextAttribute->return->attrib->longValue
SQLInputImpl#readFloat():::Retrieves the next attribute in this SQLInputImpl object as a float in the Java programming language:::attrib->getNextAttribute->return->attrib->floatValue
SQLInputImpl#readDouble():::Retrieves the next attribute in this SQLInputImpl object as a double in the Java programming language:::attrib->getNextAttribute->return->attrib->doubleValue
SQLInputImpl#readBigDecimal():::Retrieves the next attribute in this SQLInputImpl object as a java.math.BigDecimal:::return->getNextAttribute
SQLInputImpl#readBytes():::Retrieves the next attribute in this SQLInputImpl object as an array of bytes:::return->getNextAttribute
SQLInputImpl#readDate():::Retrieves the next attribute in this SQLInputImpl as a java.sql.Date object:::return->getNextAttribute
SQLInputImpl#readTime():::Retrieves the next attribute in this SQLInputImpl object as a java.sql.Time object:::return->getNextAttribute
SQLInputImpl#readTimestamp():::Retrieves the next attribute in this SQLInputImpl object as a java.sql.Timestamp object.:::return->getNextAttribute
SQLInputImpl#readCharacterStream():::Retrieves the next attribute in this SQLInputImpl object as a stream of Unicode characters:::return->getNextAttribute
SQLInputImpl#readAsciiStream():::Returns the next attribute in this SQLInputImpl object as a stream of ASCII characters:::return->getNextAttribute
SQLInputImpl#readBinaryStream():::Returns the next attribute in this SQLInputImpl object as a stream of uninterpreted bytes:::return->getNextAttribute
SQLInputImpl#readObject():::Retrieves the value at the head of this SQLInputImpl object as an Object in the Java programming language:::attrib->getNextAttribute->if->s->c->map->s->getSQLTypeName->get->if->obj->try->ReflectUtil->checkPackageAccess->tmp->c->newInstance->catch->throw->new->SQLException->finally->attribs->s->getAttributes->sqlInput->new->SQLInputImpl->obj->s->getSQLTypeName->readSQL->return->return
SQLInputImpl#readRef():::Retrieves the value at the head of this SQLInputImpl object as a Ref object in the Java programming language.:::return->getNextAttribute
SQLInputImpl#readBlob():::Retrieves the BLOB value at the head of this SQLInputImpl object as a Blob object in the Java programming language:::return->getNextAttribute
SQLInputImpl#readClob():::Retrieves the CLOB value at the head of this SQLInputImpl object as a Clob object in the Java programming language:::return->getNextAttribute
SQLInputImpl#readArray():::Reads an SQL ARRAY value from the stream and returns it as an Array object in the Java programming language:::return->getNextAttribute
SQLInputImpl#wasNull():::Ascertains whether the last value read from this SQLInputImpl object was null.:::return
SQLInputImpl#readURL():::Reads an SQL DATALINK value from the stream and returns it as an URL object in the Java programming language:::return->getNextAttribute
SQLInputImpl#readNClob():::Reads an SQL NCLOB value from the stream and returns it as a Clob object in the Java programming language.:::return->getNextAttribute
SQLInputImpl#readNString():::Reads the next attribute in the stream and returns it as a String in the Java programming language:::return->getNextAttribute
SQLInputImpl#readSQLXML():::Reads an SQL XML value from the stream and returns it as a SQLXML object in the Java programming language.:::return->getNextAttribute
SQLInputImpl#readRowId():::Reads an SQL ROWID value from the stream and returns it as a RowId object in the Java programming language.:::return->getNextAttribute
SQLOutputImpl#writeString(String):::Writes a String in the Java programming language to this SQLOutputImpl object:::attribs->add
SQLOutputImpl#writeBoolean(boolean):::Writes a boolean in the Java programming language to this SQLOutputImpl object:::attribs->Boolean->valueOf->add
SQLOutputImpl#writeByte(byte):::Writes a byte in the Java programming language to this SQLOutputImpl object:::attribs->Byte->valueOf->add
SQLOutputImpl#writeShort(short):::Writes a short in the Java programming language to this SQLOutputImpl object:::attribs->Short->valueOf->add
SQLOutputImpl#writeInt(int):::Writes an int in the Java programming language to this SQLOutputImpl object:::attribs->Integer->valueOf->add
SQLOutputImpl#writeLong(long):::Writes a long in the Java programming language to this SQLOutputImpl object:::attribs->Long->valueOf->add
SQLOutputImpl#writeFloat(float):::Writes a float in the Java programming language to this SQLOutputImpl object:::attribs->Float->valueOf->add
SQLOutputImpl#writeDouble(double):::Writes a double in the Java programming language to this SQLOutputImpl object:::attribs->Double->valueOf->add
SQLOutputImpl#writeBigDecimal(java.math.BigDecimal):::Writes a java.math.BigDecimal object in the Java programming language to this SQLOutputImpl object:::attribs->add
SQLOutputImpl#writeBytes(byte[]):::Writes an array of bytes in the Java programming language to this SQLOutputImpl object:::attribs->add
SQLOutputImpl#writeDate(java.sql.Date):::Writes a java.sql.Date object in the Java programming language to this SQLOutputImpl object:::attribs->add
SQLOutputImpl#writeTime(java.sql.Time):::Writes a java.sql.Time object in the Java programming language to this SQLOutputImpl object:::attribs->add
SQLOutputImpl#writeTimestamp(java.sql.Timestamp):::Writes a java.sql.Timestamp object in the Java programming language to this SQLOutputImpl object:::attribs->add
SQLOutputImpl#writeCharacterStream(java.io.Reader):::Writes a stream of Unicode characters to this SQLOutputImpl object:::bufReader->new->BufferedReader->try->i->while->bufReader->read->ch->strBuf->new->StringBuffer->strBuf->append->str->new->String->strLine->bufReader->readLine->str->concat->writeString->catch->finally
SQLOutputImpl#writeAsciiStream(java.io.InputStream):::Writes a stream of ASCII characters to this SQLOutputImpl object:::bufReader->new->InputStreamReader->new->BufferedReader->try->i->while->bufReader->read->ch->strBuf->new->StringBuffer->strBuf->append->str->new->String->strLine->bufReader->readLine->str->concat->writeString->catch->throw->ioe->getMessage->new->SQLException->finally
SQLOutputImpl#writeBinaryStream(java.io.InputStream):::Writes a stream of uninterpreted bytes to this SQLOutputImpl object.:::bufReader->new->InputStreamReader->new->BufferedReader->try->i->while->bufReader->read->ch->strBuf->new->StringBuffer->strBuf->append->str->new->String->strLine->bufReader->readLine->str->concat->writeString->catch->throw->ioe->getMessage->new->SQLException->finally
SQLOutputImpl#writeObject(SQLData):::Writes to the stream the data contained in the given SQLData object:::if->attribs->add->else->attribs->new->SerialStruct->add
SQLOutputImpl#writeRef(Ref):::Writes a Ref object in the Java programming language to this SQLOutputImpl object:::if->attribs->add->else->attribs->new->SerialRef->add
SQLOutputImpl#writeBlob(Blob):::Writes a Blob object in the Java programming language to this SQLOutputImpl object:::if->attribs->add->else->attribs->new->SerialBlob->add
SQLOutputImpl#writeClob(Clob):::Writes a Clob object in the Java programming language to this SQLOutputImpl object:::if->attribs->add->else->attribs->new->SerialClob->add
SQLOutputImpl#writeStruct(Struct):::Writes a Struct object in the Java programming language to this SQLOutputImpl object:::s->new->SerialStruct->attribs->add
SQLOutputImpl#writeArray(Array):::Writes an Array object in the Java programming language to this SQLOutputImpl object:::if->attribs->add->else->attribs->new->SerialArray->add
SQLOutputImpl#writeURL(java.net.URL):::Writes an java.sql.Type.DATALINK object in the Java programming language to this SQLOutputImpl object:::if->attribs->add->else->attribs->new->SerialDatalink->add
SQLOutputImpl#writeNString(String):::Writes the next attribute to the stream as a String in the Java programming language:::attribs->add
SQLOutputImpl#writeNClob(NClob):::Writes an SQL NCLOB value to the stream.:::attribs->add
SQLOutputImpl#writeRowId(RowId):::Writes an SQL ROWID value to the stream.:::attribs->add
SQLOutputImpl#writeSQLXML(SQLXML):::Writes an SQL XML value to the stream.:::attribs->add
