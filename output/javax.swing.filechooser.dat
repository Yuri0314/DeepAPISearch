FileFilter#accept(File):::Whether the given file is accepted by this filter.:::
FileFilter#getDescription():::The description of this filter:::
FileNameExtensionFilter#accept(File):::Tests the specified file, returning true if the file is accepted, false otherwise:::if->if->f->isDirectory->return->fileName->f->getName->i->fileName->lastIndexOf->if->fileName->length->desiredExtension->fileName->substring->toLowerCase->foreach->if->desiredExtension->equals->return->return
FileNameExtensionFilter#getDescription():::The description of this filter:::return
FileNameExtensionFilter#getExtensions():::Returns the set of file name extensions files are tested against.:::result->new->StringArr->System->arraycopy->return
FileNameExtensionFilter#toString():::Returns a string representation of the FileNameExtensionFilter:::return->super->toString->getDescription->getExtensions->asList
FileSystemView#getFileSystemView():::Returns the file system view.:::if->if->new->WindowsFileSystemView->return->if->if->new->UnixFileSystemView->return->if->new->GenericFileSystemView->return
FileSystemView#isRoot(File):::Determines if the given file is a root in the navigable tree(s):::if->f->isAbsolute->return->roots->getRoots->foreach->if->root->equals->return->return
FileSystemView#isTraversable(File):::Returns true if the file (directory) can be visited:::return->Boolean->f->isDirectory->valueOf
FileSystemView#getSystemDisplayName(File):::Name of a file, directory, or folder as it would be displayed in a system file browser:::if->return->name->f->getName->if->name->equals->name->equals->isFileSystem->isFileSystemRoot->f->exists->try->getShellFolder->getDisplayName->catch->return->finally->if->name->length->f->getPath->return
FileSystemView#getSystemTypeDescription(File):::Type description for a file, directory, or folder as it would be displayed in a system file browser:::return
FileSystemView#getSystemIcon(File):::Icon for a file, directory, or folder as it would be displayed in a system file browser:::if->return->sf->try->getShellFolder->catch->return->finally->img->sf->getIcon->if->return->sf->getFolderType->new->ImageIcon->else->return->UIManager->f->isDirectory->getIcon
FileSystemView#isParent(File, File):::On Windows, a file can appear in multiple folders, other than its parent directory in the filesystem:::if->return->else->if->parent->file->getParentFile->if->parent->equals->return->children->getFiles->foreach->if->file->equals->return->return->else->return->folder->file->getParentFile->equals
FileSystemView#getChild(File, String)::: file system view get child:::if->children->getFiles->foreach->if->child->getName->equals->return->return->createFileObject
FileSystemView#isFileSystem(File):::Checks if f represents a real directory or file as opposed to a special folder such as "Desktop":::if->sf->return->sf->isFileSystem->sf->isLink->sf->isDirectory->else->return
FileSystemView#createNewFolder(File):::Creates a new folder with a default folder name.:::
FileSystemView#isHiddenFile(File):::Returns whether a file is hidden or not.:::return->f->isHidden
FileSystemView#isFileSystemRoot(File):::Is dir the root of a tree in the file system, such as a drive or partition:::return->ShellFolder->isFileSystemRoot
FileSystemView#isDrive(File):::Used by UI classes to decide whether to display a special icon for drives or partitions, e.g:::return
FileSystemView#isFloppyDrive(File):::Used by UI classes to decide whether to display a special icon for a floppy disk:::return
FileSystemView#isComputerNode(File):::Used by UI classes to decide whether to display a special icon for a computer node, e.g:::return->ShellFolder->isComputerNode
FileSystemView#getRoots():::Returns all root partitions on this system:::roots->ShellFolder->get->for->i->return
FileSystemView#getHomeDirectory():::Returns the home directory.:::return->System->getProperty->createFileObject
FileSystemView#getDefaultDirectory():::Return the user's default starting directory for the file chooser.:::f->ShellFolder->get->if->isFileSystemRoot->createFileSystemRoot->return
FileSystemView#createFileObject(File, String):::Returns a File object constructed in dir from the given filename.:::if->return->new->File->else->return->new->File
FileSystemView#createFileObject(String):::Returns a File object constructed from the given path string.:::f->new->File->if->isFileSystemRoot->createFileSystemRoot->return
FileSystemView#getFiles(File, boolean):::Gets the list of shown (i.e:::files->new->ArrayList<File>->if->try->getShellFolder->catch->return->new->FileArr->finally->names->listFiles->if->return->new->FileArr->foreach->if->Thread->currentThread->isInterrupted->break->if->if->isFileSystemRoot->createFileSystemRoot->try->ShellFolder->getShellFolder->catch->continue->continue->finally->if->isHiddenFile->files->add->return->files->files->size->new->FileArr->toArray
FileSystemView#getParentDirectory(File):::Returns the parent directory of dir.:::if->dir->exists->return->sf->try->getShellFolder->catch->return->finally->psf->sf->getParentFile->if->return->if->isFileSystem->f->if->f->exists->ppsf->psf->getParentFile->if->isFileSystem->createFileSystemRoot->return->else->return
FileSystemView#getChooserComboBoxFiles():::Returns an array of files representing the values to show by default in the file chooser selector.:::return->ShellFolder->get
FileSystemView#isLink(File):::Returns whether the specified file denotes a shell interpreted link which can be obtained by the #getLinkLocation(File).:::if->throw->new->NullPointerException->try->return->ShellFolder->getShellFolder->isLink->catch->return->finally
FileSystemView#getLinkLocation(File):::Returns the regular file referenced by the specified link file if the specified file is a shell interpreted link:::if->throw->new->NullPointerException->shellFolder->try->ShellFolder->getShellFolder->catch->return->finally->return->shellFolder->isLink->shellFolder->getLinkLocation
FileSystemView#getShellFolder(File):::Throws FileNotFoundException if file not found or current thread was interrupted:::if->isFileSystemRoot->createFileSystemRoot->try->return->ShellFolder->getShellFolder->catch->println->e->printStackTrace->return->finally
FileSystemView#createFileSystemRoot(File):::Creates a new File object for f with correct behavior for a file system root directory.:::return->new->FileSystemRoot
FileSystemView.FileSystemRoot#isDirectory()::: file system root is directory:::return
FileSystemView.FileSystemRoot#getName()::: file system root get name:::return->getPath
UnixFileSystemView#createNewFolder(File):::Creates a new folder with a default folder name.:::if->throw->new->IOException->newFolder->createFileObject->i->while->newFolder->exists->MessageFormat->format->createFileObject->if->newFolder->exists->throw->newFolder->getAbsolutePath->new->IOException->else->if->newFolder->mkdirs->throw->newFolder->getAbsolutePath->new->IOException->return
UnixFileSystemView#isFileSystemRoot(File)::: unix file system view is file system root:::return->dir->getAbsolutePath->equals
UnixFileSystemView#isDrive(File)::: unix file system view is drive:::return->isFloppyDrive
UnixFileSystemView#isFloppyDrive(File)::: unix file system view is floppy drive:::return
UnixFileSystemView#isComputerNode(File)::: unix file system view is computer node:::if->parent->dir->getParent->if->parent->equals->return->return
WindowsFileSystemView#isTraversable(File)::: windows file system view is traversable:::return->Boolean->isFileSystemRoot->isComputerNode->f->isDirectory->valueOf
WindowsFileSystemView#getChild(File, String)::: windows file system view get child:::if->fileName->startsWith->fileName->startsWith->isFileSystem->path->parent->getAbsolutePath->if->path->length->path->charAt->Character->path->charAt->isLetter->return->path->substring->createFileObject->return->super->getChild
WindowsFileSystemView#getSystemTypeDescription(File):::Type description for a file, directory, or folder as it would be displayed in a system file browser:::if->return->try->return->getShellFolder->getFolderType->catch->return->finally
WindowsFileSystemView#getHomeDirectory()::: windows file system view get home directory:::roots->getRoots->return
WindowsFileSystemView#createNewFolder(File):::Creates a new folder with a default folder name.:::if->throw->new->IOException->newFolder->createFileObject->i->while->newFolder->exists->MessageFormat->format->createFileObject->if->newFolder->exists->throw->newFolder->getAbsolutePath->new->IOException->else->if->newFolder->mkdirs->throw->newFolder->getAbsolutePath->new->IOException->return
WindowsFileSystemView#isDrive(File)::: windows file system view is drive:::return->isFileSystemRoot
WindowsFileSystemView#isFloppyDrive(File)::: windows file system view is floppy drive:::path->AccessController->new->PrivilegedAction<String>->doPrivileged->return->path->equals->path->equals
WindowsFileSystemView#createFileObject(String):::Returns a File object constructed from the given path string.:::if->path->length->path->charAt->Character->path->charAt->isLetter->if->path->length->else->if->path->charAt->path->substring->path->substring->return->super->createFileObject
WindowsFileSystemView#createFileSystemRoot(File)::: windows file system view create file system root:::return->new->FileSystemRoot
GenericFileSystemView#createNewFolder(File):::Creates a new folder with a default folder name.:::if->throw->new->IOException->newFolder->createFileObject->if->newFolder->exists->throw->newFolder->getAbsolutePath->new->IOException->else->if->newFolder->mkdirs->throw->newFolder->getAbsolutePath->new->IOException->return
FileView#getName(File):::The name of the file:::return
FileView#getDescription(File):::A human readable description of the file:::return
FileView#getTypeDescription(File):::A human readable description of the type of the file:::return
FileView#getIcon(File):::The icon that represents this file in the JFileChooser.:::return
FileView#isTraversable(File):::Whether the directory is traversable or not:::return
