AnimationController#getAnimationController()::: animation controller get animation controller:::appContext->AppContext->getAppContext->obj->appContext->get->if->new->AnimationController->appContext->put->return
AnimationController#triggerAnimation(JComponent, Part, State)::: animation controller trigger animation:::if->return->controller->AnimationController->getAnimationController->oldState->controller->getState->if->controller->putState->if->if->duration->if->else->xp->XPStyle->getXP->xp->normalizeState->normalizeState->getThemeTransitionDuration->controller->startAnimation
AnimationController#normalizeState(State)::: animation controller normalize state:::rv->switch->break->break->break->break->break->return
AnimationController#getState(JComponent, Part)::: animation controller get state:::rv->tmpObject->component->PartUIClientPropertyKey->getKey->getClientProperty->if->return
AnimationController#putState(JComponent, Part, State)::: animation controller put state:::component->PartUIClientPropertyKey->getKey->putClientProperty
AnimationController#startAnimation(JComponent, Part, State, State, long)::: animation controller start animation:::isForwardAndReverse->if->map->animationStateMap->get->if->if->map->remove->if->map->size->animationStateMap->remove->return->if->new->EnumMap<Part,AnimationState>->animationStateMap->put->map->new->AnimationState->put->if->timer->isRunning->timer->start
AnimationController#paintSkin(JComponent, Skin, Graphics, int, int, int, int, State)::: animation controller paint skin:::if->skin->paintSkinRaw->return->triggerAnimation->controller->getAnimationController->synchronized->animationState->map->get->if->map->get->if->animationState->paintSkin->else->skin->paintSkinRaw
AnimationController#propertyChange(PropertyChangeEvent)::: animation controller property change:::if->e->getPropertyName->e->getNewValue->dispose
AnimationController#actionPerformed(ActionEvent)::: animation controller action performed:::componentsToRemove->partsToRemove->foreach->animationStateMap->keySet->component->repaint->if->partsToRemove->clear->map->animationStateMap->get->if->component->isShowing->map->size->if->new->ArrayList<JComponent>->componentsToRemove->add->continue->foreach->map->keySet->if->map->get->isDone->if->new->ArrayList<Part>->partsToRemove->add->if->if->partsToRemove->size->map->size->if->new->ArrayList<JComponent>->componentsToRemove->add->else->foreach->map->remove->if->foreach->animationStateMap->remove->if->animationStateMap->size->timer->stop
AnimationController#dispose()::: animation controller dispose:::timer->stop->UIManager->removePropertyChangeListener->synchronized->AppContext->getAppContext->put
AnimationController.AnimationState#updateProgress()::: animation state update progress:::if->isDone->return->currentTime->System->nanoTime->Math->max->if->if
AnimationController.AnimationState#paintSkin(Skin, Graphics, int, int, int, int, State)::: animation state paint skin:::updateProgress->if->isDone->g->_g->create->if->skin->haveToSwitchStates->skin->paintSkinRaw->g->derive->setComposite->skin->paintSkinRaw->else->skin->paintSkinRaw->alpha->if->else->g->derive->setComposite->skin->paintSkinRaw->g->dispose->else->skin->paintSkinRaw->skin->switchStates
AnimationController.AnimationState#isDone()::: animation state is done:::return
AnimationController.PartUIClientPropertyKey#getKey(Part)::: part client property key get key:::rv->map->get->if->new->PartUIClientPropertyKey->map->put->return
AnimationController.PartUIClientPropertyKey#toString()::: part client property key to string:::return->part->toString
WindowsBorders#getProgressBarBorder():::Returns a  border instance for a Windows Progress Bar:::table->UIManager->getLookAndFeelDefaults->progressBarBorder->table->getColor->table->getColor->new->WindowsBorders.ProgressBarBorder->new->EmptyBorder->new->BorderUIResource.CompoundBorderUIResource->return
WindowsBorders#getToolBarBorder():::Returns a border instance for a Windows ToolBar:::table->UIManager->getLookAndFeelDefaults->toolBarBorder->table->getColor->table->getColor->new->WindowsBorders.ToolBarBorder->return
WindowsBorders#getFocusCellHighlightBorder():::Returns an new instance of a border used to indicate which cell item has focus.:::return->new->ComplementDashedBorder
WindowsBorders#getTableHeaderBorder()::: windows borders get table header border:::table->UIManager->getLookAndFeelDefaults->tableHeaderBorder->table->getColor->table->getColor->table->getColor->table->getColor->new->BasicBorders.ButtonBorder->new->BasicBorders.MarginBorder->new->BorderUIResource.CompoundBorderUIResource->return
WindowsBorders#getInternalFrameBorder()::: windows borders get internal frame border:::table->UIManager->getLookAndFeelDefaults->internalFrameBorder->BorderFactory->table->getColor->table->getColor->table->getColor->table->getColor->createBevelBorder->table->getColor->table->getColor->table->getInt->new->WindowsBorders.InternalFrameLineBorder->new->BorderUIResource.CompoundBorderUIResource->return
WindowsBorders.ProgressBarBorder#paintBorder(Component, Graphics, int, int, int, int)::: progress bar border paint border:::g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine
WindowsBorders.ProgressBarBorder#getBorderInsets(Component, Insets)::: progress bar border get border insets:::insets->set->return
WindowsBorders.ToolBarBorder#paintBorder(Component, Graphics, int, int, int, int)::: tool bar border paint border:::if->return->g->translate->xp->XPStyle->getXP->if->xpBorder->xp->getBorder->if->xpBorder->paintBorder->if->isFloatable->vertical->getOrientation->if->part->skin->xp->getSkin->dx->dy->dw->dh->if->skin->getHeight->else->skin->getWidth->c->getComponentOrientation->isLeftToRight->skin->paintSkin->else->if->if->c->getComponentOrientation->isLeftToRight->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->else->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->else->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->translate
WindowsBorders.ToolBarBorder#getBorderInsets(Component, Insets)::: tool bar border get border insets:::insets->set->if->return->if->isFloatable->gripInset->XPStyle->getXP->if->getOrientation->if->c->getComponentOrientation->isLeftToRight->else->else->return
WindowsBorders.DashedBorder#paintBorder(Component, Graphics, int, int, int, int)::: dashed border paint border:::oldColor->g->getColor->i->g->setColor->for->g->setColor
WindowsBorders.ComplementDashedBorder#paintBorder(Component, Graphics, int, int, int, int)::: complement dashed border paint border:::color->c->getBackground->if->origColor->getRGB->new->Color->g->setColor->BasicGraphicsUtils->drawDashedRect
WindowsBorders.InternalFrameLineBorder#paintBorder(Component, Graphics, int, int, int, int)::: internal frame line border paint border:::jif->if->else->if->getInternalFrame->else->return->if->jif->isSelected->super->paintBorder->else->super->paintBorder
WindowsButtonUI#createUI(JComponent)::: windows button i create i:::appContext->AppContext->getAppContext->windowsButtonUI->appContext->get->if->new->WindowsButtonUI->appContext->put->return
WindowsButtonUI#installDefaults(AbstractButton)::: windows button i install defaults:::super->installDefaults->if->pp->getPropertyPrefix->UIManager->getInt->UIManager->getInt->UIManager->getInt->UIManager->getInt->UIManager->getColor->xp->XPStyle->getXP->if->b->xp->getXPButtonType->getBorder->setBorder->LookAndFeel->installProperty
WindowsButtonUI#uninstallDefaults(AbstractButton)::: windows button i uninstall defaults:::super->uninstallDefaults
WindowsButtonUI#getFocusColor()::: windows button i get focus color:::return
WindowsButtonUI#paintText(Graphics, AbstractButton, Rectangle, String):::Overridden method to render the text without the mnemonic:::WindowsGraphicsUtils->getTextShiftOffset->paintText
WindowsButtonUI#paintFocus(Graphics, AbstractButton, Rectangle, Rectangle, Rectangle)::: windows button i paint focus:::width->b->getWidth->height->b->getHeight->g->getFocusColor->setColor->BasicGraphicsUtils->drawDashedRect
WindowsButtonUI#paintButtonPressed(Graphics, AbstractButton)::: windows button i paint button pressed:::setTextShiftOffset
WindowsButtonUI#getPreferredSize(JComponent)::: windows button i get preferred size:::d->super->getPreferredSize->b->if->b->isFocusPainted->if->if->return
WindowsButtonUI#paint(Graphics, JComponent)::: windows button i paint:::if->XPStyle->getXP->WindowsButtonUI->paintXPButtonBackground->super->paint
WindowsButtonUI#getXPButtonType(AbstractButton)::: windows button i get button type:::if->return->if->return->toolbar->b->getParent->return
WindowsButtonUI#getXPButtonState(AbstractButton)::: windows button i get button state:::part->getXPButtonType->model->b->getModel->state->switch->if->model->isEnabled->model->isSelected->else->if->model->isPressed->model->isArmed->model->isSelected->else->if->model->isRollover->model->isSelected->else->model->isSelected->break->toolbar->b->getParent->if->if->model->isArmed->model->isPressed->else->if->model->isEnabled->else->if->model->isSelected->model->isRollover->else->if->model->isSelected->else->if->model->isRollover->else->if->b->hasFocus->else->if->model->isArmed->model->isPressed->model->isSelected->else->if->model->isEnabled->else->if->model->isRollover->model->isPressed->else->if->isDefaultButton->else->if->b->hasFocus->break->return
WindowsButtonUI#paintXPButtonBackground(Graphics, JComponent)::: windows button i paint button background:::b->xp->XPStyle->getXP->part->getXPButtonType->if->b->isContentAreaFilled->b->getBorder->b->isBorderPainted->skin->xp->getSkin->state->getXPButtonState->d->c->getSize->dx->dy->dw->dh->border->c->getBorder->insets->if->WindowsButtonUI->getOpaqueInsets->else->c->getInsets->if->skin->paintSkin
WindowsButtonUI#getOpaqueInsets(Border, Component):::returns - b.getBorderInsets(c) if border is opaque         - null if border is completely non-opaque         - somewhere inbetween if border is compound and              outside border is opaque and inside isn't:::if->return->if->b->isBorderOpaque->return->b->getBorderInsets->else->if->cb->iOut->cb->getOutsideBorder->getOpaqueInsets->if->iOut->cb->getOutsideBorder->getBorderInsets->equals->iIn->cb->getInsideBorder->getOpaqueInsets->if->return->else->return->new->Insets->else->return->else->return
WindowsCheckBoxMenuItemUI#createUI(JComponent)::: windows check box menu item i create i:::return->new->WindowsCheckBoxMenuItemUI
WindowsCheckBoxMenuItemUI#paintBackground(Graphics, JMenuItem, Color)::: windows check box menu item i paint background:::if->WindowsMenuItemUI->isVistaPainting->WindowsMenuItemUI->paintBackground->return->super->paintBackground
WindowsCheckBoxMenuItemUI#paintText(Graphics, JMenuItem, Rectangle, String):::Method which renders the text of the current menu item.:::if->WindowsMenuItemUI->isVistaPainting->WindowsMenuItemUI->paintText->return->model->menuItem->getModel->oldColor->g->getColor->if->model->isEnabled->model->isArmed->g->setColor->WindowsGraphicsUtils->paintText->g->setColor
WindowsCheckBoxUI#createUI(JComponent)::: windows check box i create i:::appContext->AppContext->getAppContext->windowsCheckBoxUI->appContext->get->if->new->WindowsCheckBoxUI->appContext->put->return
WindowsCheckBoxUI#getPropertyPrefix()::: windows check box i get property prefix:::return
WindowsCheckBoxUI#installDefaults(AbstractButton)::: windows check box i install defaults:::super->installDefaults->if->UIManager->getPropertyPrefix->getIcon
WindowsCheckBoxUI#uninstallDefaults(AbstractButton)::: windows check box i uninstall defaults:::super->uninstallDefaults
WindowsClassicLookAndFeel#getName()::: windows classic look and feel get name:::return
WindowsComboBoxUI#createUI(JComponent)::: windows combo box i create i:::return->new->WindowsComboBoxUI
WindowsComboBoxUI#installUI(JComponent)::: windows combo box i install i:::super->installUI->comboBox->setRequestFocusEnabled->if->XPStyle->getXP->comboBox->addMouseListener->arrowButton->addMouseListener->comboBox->new->EmptyBorder->setBorder
WindowsComboBoxUI#uninstallUI(JComponent)::: windows combo box i uninstall i:::comboBox->removeMouseListener->if->arrowButton->removeMouseListener->super->uninstallUI
WindowsComboBoxUI#installListeners()::: windows combo box i install listeners:::super->installListeners->xp->XPStyle->getXP->if->xp->isSkinDefined->comboBox->addPropertyChangeListener
WindowsComboBoxUI#uninstallListeners()::: windows combo box i uninstall listeners:::super->uninstallListeners->comboBox->removePropertyChangeListener
WindowsComboBoxUI#configureEditor()::: windows combo box i configure editor:::super->configureEditor->if->XPStyle->getXP->editor->addMouseListener
WindowsComboBoxUI#unconfigureEditor()::: windows combo box i unconfigure editor:::super->unconfigureEditor->editor->removeMouseListener
WindowsComboBoxUI#paint(Graphics, JComponent)::: windows combo box i paint:::if->XPStyle->getXP->paintXPComboBoxBackground->super->paint
WindowsComboBoxUI#getXPComboBoxState(JComponent)::: windows combo box i get combo box state:::state->if->c->isEnabled->else->if->isPopupVisible->else->if->comboBox->isEditable->comboBox->getEditor->getEditorComponent->isFocusOwner->else->if->return
WindowsComboBoxUI#paintXPComboBoxBackground(Graphics, JComponent)::: windows combo box i paint combo box background:::xp->XPStyle->getXP->if->return->state->getXPComboBoxState->skin->if->comboBox->isEditable->xp->isSkinDefined->xp->getSkin->if->xp->getSkin->skin->c->getWidth->c->getHeight->paintSkin
WindowsComboBoxUI#paintCurrentValue(Graphics, Rectangle, boolean):::If necessary paints the currently selected item.:::xp->XPStyle->getXP->if->else->if->comboBox->isEditable->xp->isSkinDefined->renderer->comboBox->getRenderer->c->if->isPopupVisible->renderer->comboBox->getSelectedItem->getListCellRendererComponent->else->renderer->comboBox->getSelectedItem->getListCellRendererComponent->c->comboBox->getFont->setFont->if->comboBox->isEnabled->c->comboBox->getForeground->setForeground->c->comboBox->getBackground->setBackground->else->c->DefaultLookup->getColor->setForeground->c->DefaultLookup->getColor->setBackground->shouldValidate->if->currentValuePane->paintComponent->else->super->paintCurrentValue
WindowsComboBoxUI#paintCurrentValueBackground(Graphics, Rectangle, boolean)::: windows combo box i paint current value background:::if->XPStyle->getXP->super->paintCurrentValueBackground
WindowsComboBoxUI#getMinimumSize(JComponent)::: windows combo box i get minimum size:::d->super->getMinimumSize->if->XPStyle->getXP->isEditable->if->isEditable->else->return
WindowsComboBoxUI#createLayoutManager():::Creates a layout manager for managing the components which make up the combo box.:::return->new->BasicComboBoxUI.ComboBoxLayoutManager
WindowsComboBoxUI#installKeyboardActions()::: windows combo box i install keyboard actions:::super->installKeyboardActions
WindowsComboBoxUI#createPopup()::: windows combo box i create popup:::return->new->WinComboPopUp
WindowsComboBoxUI#createEditor():::Creates the default editor that will be used in editable combo boxes:::return->new->WindowsComboBoxEditor
WindowsComboBoxUI#createRenderer()::: windows combo box i create renderer:::xp->XPStyle->getXP->if->xp->isSkinDefined->return->new->WindowsComboBoxRenderer->else->return->super->createRenderer
WindowsComboBoxUI#createArrowButton():::Creates an button which will be used as the control to show or hide the popup portion of the combo box.:::xp->XPStyle->getXP->if->return->new->XPComboBoxButton->else->return->super->createArrowButton
WindowsComboBoxUI.XPComboBoxButton#getState()::: combo box button get state:::rv->getModel->comboBox->isPopupVisible->setPressed->super->getState->xp->XPStyle->getXP->if->comboBox->isEditable->xp->isSkinDefined->if->skin->switchStates->if->return
WindowsComboBoxUI.XPComboBoxButton#getPreferredSize()::: combo box button get preferred size:::return->new->Dimension
WindowsComboBoxUI.XPComboBoxButton#setPart(Part)::: combo box button set part:::setPart
WindowsComboBoxUI.XPComboBoxButton#getWindowsComboBoxUI()::: combo box button get windows combo box i:::return
WindowsComboBoxUI.WindowsComboPopup#createKeyListener()::: windows combo popup create key listener:::return->new->InvocationKeyHandler
WindowsComboBoxUI.WinComboPopUp#createKeyListener()::: win combo pop up create key listener:::return->new->InvocationKeyHandler
WindowsComboBoxUI.WinComboPopUp#paintComponent(Graphics)::: win combo pop up paint component:::super->paintComponent->if->this->getX->this->getY->this->getWidth->this->getHeight->paintSkinRaw
WindowsComboBoxUI.WindowsComboBoxEditor#createEditorComponent()::: windows combo box editor create editor component:::editor->super->createEditorComponent->border->UIManager->get->if->editor->setBorder->editor->setOpaque->return
WindowsComboBoxUI.WindowsComboBoxEditor#setItem(Object)::: windows combo box editor set item:::super->setItem->focus->KeyboardFocusManager->getCurrentKeyboardFocusManager->getFocusOwner->if->editor->getParent->editor->selectAll
WindowsComboBoxUI.WindowsComboBoxRenderer.WindowsComboBoxDashedBorder#getBorderInsets(Component, Insets)::: windows combo box dashed border get border insets:::return->new->Insets
WindowsComboBoxUI.WindowsComboBoxRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: windows combo box renderer get list cell renderer component:::rv->super->getListCellRendererComponent->if->component->if->border->component->getBorder->dashedBorder->list->getForeground->new->WindowsComboBoxDashedBorder->component->setBorder->if->component->getClientProperty->component->putClientProperty->else->if->component->getBorder->storedBorder->component->getClientProperty->if->component->setBorder->component->putClientProperty->if->component->setOpaque->component->list->getForeground->setForeground->else->component->setOpaque->return
WindowsDesktopIconUI#createUI(JComponent)::: windows desktop icon i create i:::return->new->WindowsDesktopIconUI
WindowsDesktopIconUI#installDefaults()::: windows desktop icon i install defaults:::super->installDefaults->UIManager->getInt
WindowsDesktopIconUI#installUI(JComponent)::: windows desktop icon i install i:::super->installUI->c->XPStyle->getXP->setOpaque
WindowsDesktopIconUI#uninstallUI(JComponent)::: windows desktop icon i uninstall i:::thePane->super->uninstallUI->thePane->uninstallListeners
WindowsDesktopIconUI#installComponents()::: windows desktop icon i install components:::new->WindowsInternalFrameTitlePane->desktopIcon->new->BorderLayout->setLayout->desktopIcon->add->if->XPStyle->getXP->desktopIcon->setBorder
WindowsDesktopIconUI#getPreferredSize(JComponent)::: windows desktop icon i get preferred size:::return->getMinimumSize
WindowsDesktopIconUI#getMinimumSize(JComponent):::Windows desktop icons are restricted to a width of 160 pixels by default:::dim->super->getMinimumSize->return
WindowsDesktopManager#activateFrame(JInternalFrame)::: windows desktop manager activate frame:::currentFrame->currentFrameRef->get->try->super->activateFrame->if->if->currentFrame->isClosed->currentFrame->isMaximum->f->getClientProperty->if->currentFrame->isIcon->currentFrame->setMaximum->if->f->isMaximizable->if->f->isMaximum->f->setMaximum->else->if->f->isMaximum->f->isIcon->f->setIcon->else->f->setMaximum->if->currentFrame->isSelected->currentFrame->setSelected->if->f->isSelected->f->setSelected->catch->finally->if->new->WeakReference<JInternalFrame>
WindowsDesktopPaneUI#createUI(JComponent)::: windows desktop pane i create i:::return->new->WindowsDesktopPaneUI
WindowsDesktopPaneUI#installDesktopManager()::: windows desktop pane i install desktop manager:::desktop->getDesktopManager->if->new->WindowsDesktopManager->desktop->setDesktopManager
WindowsDesktopPaneUI#installDefaults()::: windows desktop pane i install defaults:::super->installDefaults
WindowsDesktopPaneUI#installKeyboardActions()::: windows desktop pane i install keyboard actions:::super->installKeyboardActions->if->desktop->requestDefaultFocus->desktop->requestFocus
WindowsDesktopProperty#updateAllUIs():::Updates the UIs of all the known Frames.:::uiClass->UIManager->getLookAndFeel->getClass->if->uiClass->getPackage->getPackage->equals->XPStyle->invalidateStyle->super->updateAllUIs
WindowsEditorPaneUI#createUI(JComponent):::Creates a UI for a JEditorPane.:::return->new->WindowsEditorPaneUI
WindowsEditorPaneUI#createCaret():::Creates the object to use for a caret:::return->new->WindowsTextUI.WindowsCaret
WindowsFileChooserUI#populateFileNameLabel()::: windows file chooser i populate file name label:::if->getFileChooser->getFileSelectionMode->fileNameLabel->setText->fileNameLabel->setDisplayedMnemonic->else->fileNameLabel->setText->fileNameLabel->setDisplayedMnemonic
WindowsFileChooserUI#createUI(JComponent)::: windows file chooser i create i:::return->new->WindowsFileChooserUI
WindowsFileChooserUI#installUI(JComponent)::: windows file chooser i install i:::super->installUI
WindowsFileChooserUI#uninstallComponents(JFileChooser)::: windows file chooser i uninstall components:::fc->removeAll
WindowsFileChooserUI.WindowsFileChooserUIAccessor#getFileChooser()::: windows file chooser accessor get file chooser:::return->WindowsFileChooserUI.this->getFileChooser
WindowsFileChooserUI.WindowsFileChooserUIAccessor#getModel()::: windows file chooser accessor get model:::return->WindowsFileChooserUI.this->getModel
WindowsFileChooserUI.WindowsFileChooserUIAccessor#createList()::: windows file chooser accessor create list:::return->WindowsFileChooserUI.this->getFileChooser->createList
WindowsFileChooserUI.WindowsFileChooserUIAccessor#createDetailsView()::: windows file chooser accessor create details view:::return->WindowsFileChooserUI.this->getFileChooser->createDetailsView
WindowsFileChooserUI.WindowsFileChooserUIAccessor#isDirectorySelected()::: windows file chooser accessor is directory selected:::return->WindowsFileChooserUI.this->isDirectorySelected
WindowsFileChooserUI.WindowsFileChooserUIAccessor#getDirectory()::: windows file chooser accessor get directory:::return->WindowsFileChooserUI.this->getDirectory
WindowsFileChooserUI.WindowsFileChooserUIAccessor#getChangeToParentDirectoryAction()::: windows file chooser accessor get change to parent directory action:::return->WindowsFileChooserUI.this->getChangeToParentDirectoryAction
WindowsFileChooserUI.WindowsFileChooserUIAccessor#getApproveSelectionAction()::: windows file chooser accessor get approve selection action:::return->WindowsFileChooserUI.this->getApproveSelectionAction
WindowsFileChooserUI.WindowsFileChooserUIAccessor#getNewFolderAction()::: windows file chooser accessor get new folder action:::return->WindowsFileChooserUI.this->getNewFolderAction
WindowsFileChooserUI.WindowsFileChooserUIAccessor#createDoubleClickListener(JList)::: windows file chooser accessor create double click listener:::return->WindowsFileChooserUI.this->getFileChooser->createDoubleClickListener
WindowsFileChooserUI.WindowsFileChooserUIAccessor#createListSelectionListener()::: windows file chooser accessor create list selection listener:::return->WindowsFileChooserUI.this->getFileChooser->createListSelectionListener
WindowsFileChooserUI#installComponents(JFileChooser)::: windows file chooser i install components:::new->WindowsFileChooserUIAccessor->new->FilePane->fc->addPropertyChangeListener->fsv->fc->getFileSystemView->fc->new->EmptyBorder->setBorder->fc->new->BorderLayout->setLayout->updateUseShellFolder->topPanel->new->JToolBar->topPanel->setFloatable->topPanel->putClientProperty->fc->add->tmp1->new->JLabel->lookInLabel->setDisplayedMnemonic->lookInLabel->setAlignmentX->lookInLabel->setAlignmentY->topPanel->add->topPanel->Box->new->Dimension->createRigidArea->add->tmp2->new->JComboBox<File>->directoryComboBox->putClientProperty->lookInLabel->setLabelFor->createDirectoryComboBoxModel->directoryComboBox->setModel->directoryComboBox->addActionListener->directoryComboBox->createDirectoryComboBoxRenderer->setRenderer->directoryComboBox->setAlignmentX->directoryComboBox->setAlignmentY->directoryComboBox->setMaximumRowCount->topPanel->add->topPanel->Box->createRigidArea->add->upFolderButton->getChangeToParentDirectoryAction->createToolButton->topPanel->add->if->UIManager->getBoolean->newFolderButton->filePane->getNewFolderAction->createToolButton->topPanel->add->viewButtonGroup->new->ButtonGroup->viewTypePopupMenu->new->JPopupMenu->listViewMenuItem->filePane->getViewTypeAction->new->JRadioButtonMenuItem->listViewMenuItem->filePane->getViewType->setSelected->viewTypePopupMenu->add->viewButtonGroup->add->detailsViewMenuItem->filePane->getViewTypeAction->new->JRadioButtonMenuItem->detailsViewMenuItem->filePane->getViewType->setSelected->viewTypePopupMenu->add->viewButtonGroup->add->image->viewMenuIcon->getIconWidth->viewMenuIcon->getIconHeight->new->BufferedImage->graphics->image->getGraphics->viewMenuIcon->paintIcon->x->image->getWidth->y->image->getHeight->graphics->setColor->graphics->new->intArr->new->intArr->fillPolygon->viewMenuButton->new->ImageIcon->createToolButton->viewMenuButton->new->MouseAdapter->addMouseListener->viewMenuButton->new->KeyAdapter->addKeyListener->viewTypePopupMenu->new->PopupMenuListener->addPopupMenuListener->topPanel->add->topPanel->Box->new->Dimension->createRigidArea->add->filePane->new->PropertyChangeListener->addPropertyChangeListener->new->BorderLayout->new->JPanel->centerPanel->getAccessoryPanel->add->accessory->fc->getAccessory->if->getAccessoryPanel->add->filePane->setPreferredSize->centerPanel->add->fc->add->getBottomPanel->getBottomPanel->new->BoxLayout->setLayout->centerPanel->getBottomPanel->add->labelPanel->new->JPanel->labelPanel->new->BoxLayout->setLayout->labelPanel->Box->createRigidArea->add->new->JLabel->populateFileNameLabel->fileNameLabel->setAlignmentY->labelPanel->add->labelPanel->Box->new->Dimension->createRigidArea->add->ftl->new->JLabel->ftl->setDisplayedMnemonic->labelPanel->add->getBottomPanel->add->getBottomPanel->Box->new->Dimension->createRigidArea->add->fileAndFilterPanel->new->JPanel->fileAndFilterPanel->Box->createRigidArea->add->fileAndFilterPanel->new->BoxLayout->setLayout->tmp3->new->JTextField->fileNameLabel->setLabelFor->filenameTextField->new->FocusAdapter->addFocusListener->if->fc->isMultiSelectionEnabled->fc->getSelectedFiles->fileNameString->setFileName->else->fc->getSelectedFile->fileNameString->setFileName->fileAndFilterPanel->add->fileAndFilterPanel->Box->createRigidArea->add->createFilterComboBoxModel->fc->addPropertyChangeListener->new->JComboBox<FileFilter>->ftl->setLabelFor->filterComboBox->createFilterComboBoxRenderer->setRenderer->fileAndFilterPanel->add->getBottomPanel->add->getBottomPanel->Box->new->Dimension->createRigidArea->add->getButtonPanel->getButtonPanel->new->BoxLayout->setLayout->tmp4->getApproveButtonText->new->JButton->buttonMargin->approveButton->getMargin->new->InsetsUIResource->approveButton->setMargin->approveButton->getApproveButtonMnemonic->setMnemonic->approveButton->getApproveSelectionAction->addActionListener->approveButton->getApproveButtonToolTipText->setToolTipText->getButtonPanel->Box->createRigidArea->add->getButtonPanel->add->getButtonPanel->Box->createRigidArea->add->tmp5->new->JButton->cancelButton->setMargin->cancelButton->setToolTipText->cancelButton->getCancelSelectionAction->addActionListener->getButtonPanel->add->if->fc->getControlButtonsAreShown->addControlButtons
WindowsFileChooserUI#updateUseShellFolder()::: windows file chooser i update use shell folder:::fc->getFileChooser->if->FilePane->usesShellFolder->if->UIManager->getBoolean->XPStyle->getXP->new->WindowsPlacesBar->fc->add->fc->addPropertyChangeListener->else->if->fc->remove->fc->removePropertyChangeListener
WindowsFileChooserUI#getButtonPanel()::: windows file chooser i get button panel:::if->new->JPanel->return
WindowsFileChooserUI#getBottomPanel()::: windows file chooser i get bottom panel:::if->new->JPanel->return
WindowsFileChooserUI#installStrings(JFileChooser)::: windows file chooser i install strings:::super->installStrings->l->fc->getLocale->getMnemonic->UIManager->getString->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString
WindowsFileChooserUI#getMnemonic(String, Locale)::: windows file chooser i get mnemonic:::return->SwingUtilities2->getUIDefaultsInt
WindowsFileChooserUI#installListeners(JFileChooser)::: windows file chooser i install listeners:::super->installListeners->actionMap->getActionMap->SwingUtilities->replaceUIActionMap
WindowsFileChooserUI#getActionMap()::: windows file chooser i get action map:::return->createActionMap
WindowsFileChooserUI#createActionMap()::: windows file chooser i create action map:::map->new->ActionMapUIResource->FilePane->filePane->getActions->addActionsToMap->return
WindowsFileChooserUI#createList(JFileChooser)::: windows file chooser i create list:::return->filePane->createList
WindowsFileChooserUI#createDetailsView(JFileChooser)::: windows file chooser i create details view:::return->filePane->createDetailsView
WindowsFileChooserUI#createListSelectionListener(JFileChooser):::Creates a selection listener for the list of files and directories.:::return->super->createListSelectionListener
WindowsFileChooserUI#uninstallUI(JComponent)::: windows file chooser i uninstall i:::c->removePropertyChangeListener->c->removePropertyChangeListener->if->c->removePropertyChangeListener->cancelButton->getCancelSelectionAction->removeActionListener->approveButton->getApproveSelectionAction->removeActionListener->filenameTextField->getApproveSelectionAction->removeActionListener->if->filePane->uninstallUI->super->uninstallUI
WindowsFileChooserUI#getPreferredSize(JComponent):::Returns the preferred size of the specified JFileChooser:::prefWidth->d->c->getLayout->preferredLayoutSize->if->return->new->Dimension->else->return->new->Dimension
WindowsFileChooserUI#getMinimumSize(JComponent):::Returns the minimum size of the JFileChooser.:::return->new->Dimension
WindowsFileChooserUI#getMaximumSize(JComponent):::Returns the maximum size of the JFileChooser.:::return->new->Dimension
WindowsFileChooserUI#fileNameString(File)::: windows file chooser i file name string:::if->return->else->fc->getFileChooser->if->fc->isDirectorySelectionEnabled->fc->isFileSelectionEnabled->fc->isDirectorySelectionEnabled->fc->isFileSelectionEnabled->fc->getFileSystemView->isFileSystemRoot->return->file->getPath->else->return->file->getName
WindowsFileChooserUI#fileNameString(File[])::: windows file chooser i file name string:::buf->new->StringBuilder->for->i->return->buf->toString
WindowsFileChooserUI#doSelectedFileChanged(PropertyChangeEvent)::: windows file chooser i do selected file changed:::f->e->getNewValue->fc->getFileChooser->if->fc->isFileSelectionEnabled->f->isDirectory->f->isDirectory->fc->isDirectorySelectionEnabled->fileNameString->setFileName
WindowsFileChooserUI#doSelectedFilesChanged(PropertyChangeEvent)::: windows file chooser i do selected files changed:::files->e->getNewValue->fc->getFileChooser->if->fc->isDirectorySelectionEnabled->isDirectory->fileNameString->setFileName
WindowsFileChooserUI#doDirectoryChanged(PropertyChangeEvent)::: windows file chooser i do directory changed:::fc->getFileChooser->fsv->fc->getFileSystemView->clearIconCache->currentDirectory->fc->getCurrentDirectory->if->directoryComboBoxModel->addItem->if->fc->isDirectorySelectionEnabled->fc->isFileSelectionEnabled->if->fsv->isFileSystem->currentDirectory->getPath->setFileName->else->setFileName
WindowsFileChooserUI#doFilterChanged(PropertyChangeEvent)::: windows file chooser i do filter changed:::clearIconCache
WindowsFileChooserUI#doFileSelectionModeChanged(PropertyChangeEvent)::: windows file chooser i do file selection mode changed:::if->populateFileNameLabel->clearIconCache->fc->getFileChooser->currentDirectory->fc->getCurrentDirectory->if->fc->isDirectorySelectionEnabled->fc->isFileSelectionEnabled->fc->getFileSystemView->isFileSystem->currentDirectory->getPath->setFileName->else->setFileName
WindowsFileChooserUI#doAccessoryChanged(PropertyChangeEvent)::: windows file chooser i do accessory changed:::if->getAccessoryPanel->if->e->getOldValue->getAccessoryPanel->e->getOldValue->remove->accessory->e->getNewValue->if->getAccessoryPanel->add
WindowsFileChooserUI#doApproveButtonTextChanged(PropertyChangeEvent)::: windows file chooser i do approve button text changed:::chooser->getFileChooser->approveButton->getApproveButtonText->setText->approveButton->getApproveButtonToolTipText->setToolTipText->approveButton->getApproveButtonMnemonic->setMnemonic
WindowsFileChooserUI#doDialogTypeChanged(PropertyChangeEvent)::: windows file chooser i do dialog type changed:::chooser->getFileChooser->approveButton->getApproveButtonText->setText->approveButton->getApproveButtonToolTipText->setToolTipText->approveButton->getApproveButtonMnemonic->setMnemonic->if->chooser->getDialogType->lookInLabel->setText->else->lookInLabel->setText
WindowsFileChooserUI#doApproveButtonMnemonicChanged(PropertyChangeEvent)::: windows file chooser i do approve button mnemonic changed:::approveButton->getFileChooser->getApproveButtonMnemonic->setMnemonic
WindowsFileChooserUI#doControlButtonsChanged(PropertyChangeEvent)::: windows file chooser i do control buttons changed:::if->getFileChooser->getControlButtonsAreShown->addControlButtons->else->removeControlButtons
WindowsFileChooserUI#createPropertyChangeListener(JFileChooser)::: windows file chooser i create property change listener:::return->new->PropertyChangeListener
WindowsFileChooserUI#removeControlButtons()::: windows file chooser i remove control buttons:::getBottomPanel->getButtonPanel->remove
WindowsFileChooserUI#addControlButtons()::: windows file chooser i add control buttons:::getBottomPanel->getButtonPanel->add
WindowsFileChooserUI#ensureFileIsVisible(JFileChooser, File)::: windows file chooser i ensure file is visible:::filePane->ensureFileIsVisible
WindowsFileChooserUI#rescanCurrentDirectory(JFileChooser)::: windows file chooser i rescan current directory:::filePane->rescanCurrentDirectory
WindowsFileChooserUI#getFileName()::: windows file chooser i get file name:::if->return->filenameTextField->getText->else->return
WindowsFileChooserUI#setFileName(String)::: windows file chooser i set file name:::if->filenameTextField->setText
WindowsFileChooserUI#setDirectorySelected(boolean):::Property to remember whether a directory is currently selected in the UI:::super->setDirectorySelected->chooser->getFileChooser->if->approveButton->setText->approveButton->setToolTipText->approveButton->setMnemonic->else->approveButton->getApproveButtonText->setText->approveButton->getApproveButtonToolTipText->setToolTipText->approveButton->getApproveButtonMnemonic->setMnemonic
WindowsFileChooserUI#getDirectoryName()::: windows file chooser i get directory name:::return
WindowsFileChooserUI#setDirectoryName(String)::: windows file chooser i set directory name:::
WindowsFileChooserUI#createDirectoryComboBoxRenderer(JFileChooser)::: windows file chooser i create directory combo box renderer:::return->new->DirectoryComboBoxRenderer
WindowsFileChooserUI#createToolButton(Action, Icon, String, String)::: windows file chooser i create tool button:::result->new->JButton->result->setText->result->setIcon->result->setToolTipText->result->setRequestFocusEnabled->result->putClientProperty->result->putClientProperty->result->setAlignmentX->result->setAlignmentY->result->setMargin->result->setFocusPainted->result->new->DefaultButtonModel->setModel->result->new->FocusAdapter->addFocusListener->return
WindowsFileChooserUI.DirectoryComboBoxRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: directory combo box renderer get list cell renderer component:::super->getListCellRendererComponent->if->setText->return->directory->getFileChooser->getName->setText->icon->getFileChooser->getIcon->directoryComboBoxModel->getDepth->setIcon->return
WindowsFileChooserUI.IndentIcon#paintIcon(Component, Graphics, int, int)::: indent icon paint icon:::if->c->getComponentOrientation->isLeftToRight->icon->paintIcon->else->icon->paintIcon
WindowsFileChooserUI.IndentIcon#getIconWidth()::: indent icon get icon width:::return->icon->getIconWidth
WindowsFileChooserUI.IndentIcon#getIconHeight()::: indent icon get icon height:::return->icon->getIconHeight
WindowsFileChooserUI#createDirectoryComboBoxModel(JFileChooser)::: windows file chooser i create directory combo box model:::return->new->DirectoryComboBoxModel
WindowsFileChooserUI.DirectoryComboBoxModel#addItem(File):::Adds the directory to the model and sets it to be selected, additionally clears out the previous selected directory and the paths leading up to it, if any.:::if->return->useShellFolder->FilePane->usesShellFolder->directories->clear->baseFolders->ShellFolder->get->fsv->getRoots->directories->Arrays->asList->addAll->canonical->try->directory->getCanonicalFile->catch->finally->try->sf->ShellFolder->getShellFolder->f->path->new->Vector<File>->do->path->addElement->while->f->getParentFile->pathCount->path->size->for->i->calculateDepths->setSelectedItem->catch->calculateDepths->finally
WindowsFileChooserUI.DirectoryComboBoxModel#calculateDepths()::: directory combo box model calculate depths:::directories->size->new->intArr->for->i
WindowsFileChooserUI.DirectoryComboBoxModel#getDepth(int)::: directory combo box model get depth:::return
WindowsFileChooserUI.DirectoryComboBoxModel#setSelectedItem(Object)::: directory combo box model set selected item:::fireContentsChanged
WindowsFileChooserUI.DirectoryComboBoxModel#getSelectedItem()::: directory combo box model get selected item:::return
WindowsFileChooserUI.DirectoryComboBoxModel#getSize()::: directory combo box model get size:::return->directories->size
WindowsFileChooserUI.DirectoryComboBoxModel#getElementAt(int)::: directory combo box model get element at:::return->directories->elementAt
WindowsFileChooserUI#createFilterComboBoxRenderer()::: windows file chooser i create filter combo box renderer:::return->new->FilterComboBoxRenderer
WindowsFileChooserUI.FilterComboBoxRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: filter combo box renderer get list cell renderer component:::super->getListCellRendererComponent->if->getDescription->setText->return
WindowsFileChooserUI#createFilterComboBoxModel()::: windows file chooser i create filter combo box model:::return->new->FilterComboBoxModel
WindowsFileChooserUI.FilterComboBoxModel#propertyChange(PropertyChangeEvent)::: filter combo box model property change:::prop->e->getPropertyName->if->e->getNewValue->fireContentsChanged->else->if->fireContentsChanged
WindowsFileChooserUI.FilterComboBoxModel#setSelectedItem(Object)::: filter combo box model set selected item:::if->getFileChooser->setFileFilter->fireContentsChanged
WindowsFileChooserUI.FilterComboBoxModel#getSelectedItem()::: filter combo box model get selected item:::currentFilter->getFileChooser->getFileFilter->found->if->foreach->if->if->getFileChooser->addChoosableFileFilter->return->getFileChooser->getFileFilter
WindowsFileChooserUI.FilterComboBoxModel#getSize()::: filter combo box model get size:::if->return->else->return
WindowsFileChooserUI.FilterComboBoxModel#getElementAt(int)::: filter combo box model get element at:::if->getSize->return->getFileChooser->getFileFilter->if->return->else->return
WindowsFileChooserUI#valueChanged(ListSelectionEvent)::: windows file chooser i value changed:::fc->getFileChooser->f->fc->getSelectedFile->if->e->getValueIsAdjusting->getFileChooser->isTraversable->fileNameString->setFileName
WindowsFileChooserUI.DirectoryComboBoxAction#actionPerformed(ActionEvent)::: directory combo box action action performed:::f->directoryComboBox->getSelectedItem->getFileChooser->setCurrentDirectory
WindowsFileChooserUI#getApproveButton(JFileChooser)::: windows file chooser i get approve button:::return
WindowsFileChooserUI#getFileView(JFileChooser)::: windows file chooser i get file view:::return
WindowsFileChooserUI.WindowsFileView#getIcon(File)::: windows file view get icon:::icon->getCachedIcon->if->return->if->getFileChooser->getFileSystemView->getSystemIcon->if->super->getIcon->cacheIcon->return
WindowsGraphicsUtils#paintText(Graphics, AbstractButton, Rectangle, String, int):::Renders a text String in Windows without the mnemonic:::fm->SwingUtilities2->getFontMetrics->mnemIndex->b->getDisplayedMnemonicIndex->if->WindowsLookAndFeel->isMnemonicHidden->xp->XPStyle->getXP->if->fm->getAscent->paintXPText->else->fm->getAscent->paintClassicText
WindowsGraphicsUtils#paintClassicText(AbstractButton, Graphics, int, int, String, int)::: windows graphics utils paint classic text:::model->b->getModel->color->b->getForeground->if->model->isEnabled->if->model->isArmed->model->isSelected->model->isRollover->g->b->getForeground->setColor->SwingUtilities2->drawStringUnderlineCharAt->else->getDisabledTextColor->if->UIManager->getColor->shadow->UIManager->getColor->if->model->isArmed->UIManager->getColor->else->if->b->getBackground->darker->g->setColor->SwingUtilities2->drawStringUnderlineCharAt->if->b->getBackground->brighter->g->setColor->SwingUtilities2->drawStringUnderlineCharAt
WindowsGraphicsUtils#getDisabledTextColor(AbstractButton)::: windows graphics utils get disabled text color:::if->return->UIManager->getColor->else->if->return->UIManager->getColor->else->if->return->UIManager->getColor->else->if->return->UIManager->getColor->return
WindowsGraphicsUtils#paintXPText(AbstractButton, Graphics, int, int, String, int)::: windows graphics utils paint text:::part->WindowsButtonUI->getXPButtonType->state->WindowsButtonUI->getXPButtonState->paintXPText
WindowsGraphicsUtils#paintXPText(AbstractButton, Part, State, Graphics, int, int, String, int)::: windows graphics utils paint text:::xp->XPStyle->getXP->if->return->textColor->if->b->isEnabled->b->getForeground->else->getDisabledTextColor->if->xp->b->getForeground->getColor->if->enabledColor->xp->b->getForeground->getColor->if->textColor->equals->xp->getColor->shadowType->xp->getTypeEnum->if->shadowColor->xp->getColor->offset->xp->getPoint->if->g->setColor->SwingUtilities2->drawStringUnderlineCharAt->g->setColor->SwingUtilities2->drawStringUnderlineCharAt
WindowsGraphicsUtils#isLeftToRight(Component)::: windows graphics utils is left to right:::return->c->getComponentOrientation->isLeftToRight
WindowsGraphicsUtils#repaintMnemonicsInWindow(Window)::: windows graphics utils repaint mnemonics in window:::if->w->isShowing->return->ownedWindows->w->getOwnedWindows->for->i->repaintMnemonicsInContainer
WindowsGraphicsUtils#repaintMnemonicsInContainer(Container)::: windows graphics utils repaint mnemonics in container:::c->for->i->cont->getComponentCount
WindowsIconFactory#getMenuItemCheckIcon()::: windows icon factory get menu item check icon:::if->new->MenuItemCheckIcon->return
WindowsIconFactory#getMenuItemArrowIcon()::: windows icon factory get menu item arrow icon:::if->new->MenuItemArrowIcon->return
WindowsIconFactory#getMenuArrowIcon()::: windows icon factory get menu arrow icon:::if->new->MenuArrowIcon->return
WindowsIconFactory#getCheckBoxIcon()::: windows icon factory get check box icon:::if->new->CheckBoxIcon->return
WindowsIconFactory#getRadioButtonIcon()::: windows icon factory get radio button icon:::if->new->RadioButtonIcon->return
WindowsIconFactory#getCheckBoxMenuItemIcon()::: windows icon factory get check box menu item icon:::if->new->CheckBoxMenuItemIcon->return
WindowsIconFactory#getRadioButtonMenuItemIcon()::: windows icon factory get radio button menu item icon:::if->new->RadioButtonMenuItemIcon->return
WindowsIconFactory#getMenuItemCheckIconFactory()::: windows icon factory get menu item check icon factory:::if->new->VistaMenuItemCheckIconFactory->return
WindowsIconFactory#createFrameCloseIcon()::: windows icon factory create frame close icon:::if->new->FrameButtonIcon->return
WindowsIconFactory#createFrameIconifyIcon()::: windows icon factory create frame iconify icon:::if->new->FrameButtonIcon->return
WindowsIconFactory#createFrameMaximizeIcon()::: windows icon factory create frame maximize icon:::if->new->FrameButtonIcon->return
WindowsIconFactory#createFrameMinimizeIcon()::: windows icon factory create frame minimize icon:::if->new->FrameButtonIcon->return
WindowsIconFactory#createFrameResizeIcon()::: windows icon factory create frame resize icon:::if->new->ResizeIcon->return
WindowsIconFactory.FrameButtonIcon#paintIcon(Component, Graphics, int, int)::: frame button icon paint icon:::width->getIconWidth->height->getIconHeight->xp->XPStyle->getXP->if->skin->xp->getSkin->b->model->b->getModel->jif->SwingUtilities->getAncestorOfClass->jifSelected->jif->isSelected->state->if->if->model->isEnabled->else->if->model->isArmed->model->isPressed->else->if->model->isRollover->else->else->if->model->isEnabled->else->if->model->isArmed->model->isPressed->else->if->model->isRollover->else->skin->paintSkin->else->g->setColor->x->y->h->w->thickness2->Math->max->thickness->Math->max->if->lineWidth->if->else->if->else->if->else->if->else->if->else->if->if->g->drawLine->g->drawLine->else->if->if->g->drawLine->g->drawLine->g->drawLine->g->drawLine->else->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->for->i->else->if->g->fillRect->else->if->g->fillRect->g->fillRect->g->fillRect->g->fillRect->else->if->g->fillRect->g->fillRect->g->fillRect->g->fillRect->g->fillRect->g->fillRect->g->fillRect->g->fillRect
WindowsIconFactory.FrameButtonIcon#getIconWidth()::: frame button icon get icon width:::width->if->XPStyle->getXP->UIManager->getInt->d->XPStyle->getPartSize->if->else->UIManager->getInt->if->XPStyle->getXP->return
WindowsIconFactory.FrameButtonIcon#getIconHeight()::: frame button icon get icon height:::height->UIManager->getInt->return
WindowsIconFactory.ResizeIcon#paintIcon(Component, Graphics, int, int)::: resize icon paint icon:::g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->drawLine->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine
WindowsIconFactory.ResizeIcon#getIconWidth()::: resize icon get icon width:::return
WindowsIconFactory.ResizeIcon#getIconHeight()::: resize icon get icon height:::return
WindowsIconFactory.CheckBoxIcon#paintIcon(Component, Graphics, int, int)::: check box icon paint icon:::cb->model->cb->getModel->xp->XPStyle->getXP->if->state->if->model->isSelected->if->model->isEnabled->else->if->model->isPressed->model->isArmed->else->if->model->isRollover->else->if->model->isEnabled->else->if->model->isPressed->model->isArmed->else->if->model->isRollover->part->xp->getSkin->paintSkin->else->if->cb->isBorderPaintedFlat->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->if->model->isPressed->model->isArmed->model->isEnabled->g->UIManager->getColor->setColor->else->g->UIManager->getColor->setColor->g->fillRect->else->g->UIManager->getColor->setColor->g->drawRect->if->model->isPressed->model->isArmed->model->isEnabled->g->UIManager->getColor->setColor->else->g->UIManager->getColor->setColor->g->fillRect->if->model->isEnabled->g->UIManager->getColor->setColor->else->g->UIManager->getColor->setColor->if->model->isSelected->if->SwingUtilities2->isScaledGraphics->xPoints->yPoints->g->translate->g->fillPolygon->g->drawPolygon->g->translate->else->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine
WindowsIconFactory.CheckBoxIcon#getIconWidth()::: check box icon get icon width:::xp->XPStyle->getXP->if->return->xp->getSkin->getWidth->else->return
WindowsIconFactory.CheckBoxIcon#getIconHeight()::: check box icon get icon height:::xp->XPStyle->getXP->if->return->xp->getSkin->getHeight->else->return
WindowsIconFactory.RadioButtonIcon#paintIcon(Component, Graphics, int, int)::: radio button icon paint icon:::b->model->b->getModel->xp->XPStyle->getXP->if->part->skin->xp->getSkin->state->index->if->model->isSelected->if->model->isEnabled->else->if->model->isPressed->model->isArmed->else->if->model->isRollover->else->if->model->isEnabled->else->if->model->isPressed->model->isArmed->else->if->model->isRollover->skin->paintSkin->else->if->model->isPressed->model->isArmed->model->isEnabled->g->UIManager->getColor->setColor->else->g->UIManager->getColor->setColor->g->fillRect->isScaledGraphics->SwingUtilities2->isScaledGraphics->if->g2d->oldStroke->g2d->getStroke->g2d->new->BasicStroke->setStroke->aaHint->g2d->getRenderingHint->g2d->setRenderingHint->g->UIManager->getColor->setColor->g->drawArc->g->UIManager->getColor->setColor->g->drawArc->g->UIManager->getColor->setColor->g->drawArc->g->UIManager->getColor->setColor->g->drawArc->g2d->setStroke->if->model->isSelected->if->model->isEnabled->g->UIManager->getColor->setColor->else->g->UIManager->getColor->setColor->g->fillOval->g2d->setRenderingHint->else->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->UIManager->getColor->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->if->model->isSelected->if->model->isEnabled->g->UIManager->getColor->setColor->else->g->UIManager->getColor->setColor->g->fillRect->g->fillRect
WindowsIconFactory.RadioButtonIcon#getIconWidth()::: radio button icon get icon width:::xp->XPStyle->getXP->if->return->xp->getSkin->getWidth->else->return
WindowsIconFactory.RadioButtonIcon#getIconHeight()::: radio button icon get icon height:::xp->XPStyle->getXP->if->return->xp->getSkin->getHeight->else->return
WindowsIconFactory.CheckBoxMenuItemIcon#paintIcon(Component, Graphics, int, int)::: check box menu item icon paint icon:::b->model->b->getModel->isSelected->model->isSelected->if->getIconHeight->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine
WindowsIconFactory.CheckBoxMenuItemIcon#getIconWidth()::: check box menu item icon get icon width:::return
WindowsIconFactory.CheckBoxMenuItemIcon#getIconHeight()::: check box menu item icon get icon height:::return
WindowsIconFactory.RadioButtonMenuItemIcon#paintIcon(Component, Graphics, int, int)::: radio button menu item icon paint icon:::b->model->b->getModel->if->b->isSelected->g->getIconWidth->getIconHeight->fillRoundRect
WindowsIconFactory.RadioButtonMenuItemIcon#getIconWidth()::: radio button menu item icon get icon width:::return
WindowsIconFactory.RadioButtonMenuItemIcon#getIconHeight()::: radio button menu item icon get icon height:::return
WindowsIconFactory.MenuItemCheckIcon#paintIcon(Component, Graphics, int, int)::: menu item check icon paint icon:::
WindowsIconFactory.MenuItemCheckIcon#getIconWidth()::: menu item check icon get icon width:::return
WindowsIconFactory.MenuItemCheckIcon#getIconHeight()::: menu item check icon get icon height:::return
WindowsIconFactory.MenuItemArrowIcon#paintIcon(Component, Graphics, int, int)::: menu item arrow icon paint icon:::
WindowsIconFactory.MenuItemArrowIcon#getIconWidth()::: menu item arrow icon get icon width:::return
WindowsIconFactory.MenuItemArrowIcon#getIconHeight()::: menu item arrow icon get icon height:::return
WindowsIconFactory.MenuArrowIcon#paintIcon(Component, Graphics, int, int)::: menu arrow icon paint icon:::xp->XPStyle->getXP->if->WindowsMenuItemUI->isVistaPainting->state->if->getModel->isEnabled->skin->xp->getSkin->if->WindowsGraphicsUtils->isLeftToRight->skin->paintSkin->else->g2d->g->create->g2d->skin->getWidth->translate->g2d->scale->skin->paintSkin->g2d->dispose->else->g->translate->if->WindowsGraphicsUtils->isLeftToRight->g->drawLine->g->drawLine->g->drawLine->g->drawLine->else->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->translate
WindowsIconFactory.MenuArrowIcon#getIconWidth()::: menu arrow icon get icon width:::xp->XPStyle->getXP->if->WindowsMenuItemUI->isVistaPainting->skin->xp->getSkin->return->skin->getWidth->else->return
WindowsIconFactory.MenuArrowIcon#getIconHeight()::: menu arrow icon get icon height:::xp->XPStyle->getXP->if->WindowsMenuItemUI->isVistaPainting->skin->xp->getSkin->return->skin->getHeight->else->return
WindowsIconFactory.VistaMenuItemCheckIconFactory#getIcon(JMenuItem)::: vista menu item check icon factory get icon:::return->new->VistaMenuItemCheckIcon
WindowsIconFactory.VistaMenuItemCheckIconFactory#isCompatible(Object, String)::: vista menu item check icon factory is compatible:::return->getType
WindowsIconFactory.VistaMenuItemCheckIconFactory#getIcon(String)::: vista menu item check icon factory get icon:::return->new->VistaMenuItemCheckIcon
WindowsIconFactory.VistaMenuItemCheckIconFactory#getIconWidth()::: vista menu item check icon factory get icon width:::xp->XPStyle->getXP->return->xp->getSkin->getWidth
WindowsIconFactory.VistaMenuItemCheckIconFactory#getType(Component)::: vista menu item check icon factory get type:::rv->if->else->if->else->if->else->if->return
WindowsIconFactory.VistaMenuItemCheckIconFactory#getType(String)::: vista menu item check icon factory get type:::rv->if->else->if->else->if->else->if->else->return
WindowsIconFactory.VistaMenuItemCheckIconFactory.VistaMenuItemCheckIcon#getIconHeight()::: vista menu item check icon get icon height:::lafIcon->getLaFIcon->if->return->lafIcon->getIconHeight->icon->getIcon->height->if->icon->getIconHeight->else->xp->XPStyle->getXP->if->skin->xp->getSkin->skin->getHeight->else->return
WindowsIconFactory.VistaMenuItemCheckIconFactory.VistaMenuItemCheckIcon#getIconWidth()::: vista menu item check icon get icon width:::lafIcon->getLaFIcon->if->return->lafIcon->getIconWidth->icon->getIcon->width->if->icon->getIconWidth->else->VistaMenuItemCheckIconFactory->getIconWidth->return
WindowsIconFactory.VistaMenuItemCheckIconFactory.VistaMenuItemCheckIcon#paintIcon(Component, Graphics, int, int)::: vista menu item check icon paint icon:::lafIcon->getLaFIcon->if->lafIcon->paintIcon->return->icon->getIcon->if->b->if->b->isSelected->backgroundPart->part->backgroundState->state->if->isEnabled->else->xp->XPStyle->getXP->if->skin->xp->getSkin->skin->getIconWidth->getIconHeight->paintSkin->if->xp->getSkin->skin->paintSkin->if->icon->paintIcon
WindowsIconFactory.VistaMenuItemCheckIconFactory.VistaMenuItemCheckIcon#getAccessor(JMenuItem)::: vista menu item check icon get accessor:::rv->uiObject->menuItem->getUI->if->else->if->else->if->else->if->return
WindowsIconFactory.VistaMenuItemCheckIconFactory.VistaMenuItemCheckIcon#isEnabled(Component, State)::: vista menu item check icon is enabled:::if->accessor->getAccessor->if->accessor->getState->if->if->return->c->isEnabled->else->return->else->return
WindowsIconFactory.VistaMenuItemCheckIconFactory.VistaMenuItemCheckIcon#getIcon()::: vista menu item check icon get icon:::rv->if->return->accessor->getAccessor->state->accessor->getState->if->isEnabled->if->menuItem->getPressedIcon->else->menuItem->getIcon->else->menuItem->getDisabledIcon->return
WindowsIconFactory.VistaMenuItemCheckIconFactory.VistaMenuItemCheckIcon#getLaFIcon():::Check if developer changed icon in the UI table.:::rv->UIManager->getDefaults->typeToString->get->if->return
WindowsIconFactory.VistaMenuItemCheckIconFactory.VistaMenuItemCheckIcon#typeToString(Class)::: vista menu item check icon type to string:::sb->type->getName->new->StringBuilder->sb->sb->lastIndexOf->delete->sb->append->return->sb->toString
WindowsInternalFrameTitlePane#addSubComponents()::: windows internal frame title pane add sub components:::add->add->add->add
WindowsInternalFrameTitlePane#installDefaults()::: windows internal frame title pane install defaults:::super->installDefaults->UIManager->getInt->UIManager->getInt->UIManager->getInt->obj->UIManager->get->if->XPStyle->getXP->d->XPStyle->getPartSize->if->else->activeBorderColor->UIManager->getColor->BorderFactory->createLineBorder->setBorder->UIManager->getColor->UIManager->getColor
WindowsInternalFrameTitlePane#uninstallListeners()::: windows internal frame title pane uninstall listeners:::super->uninstallListeners
WindowsInternalFrameTitlePane#createButtons()::: windows internal frame title pane create buttons:::super->createButtons->if->XPStyle->getXP->iconButton->setContentAreaFilled->maxButton->setContentAreaFilled->closeButton->setContentAreaFilled
WindowsInternalFrameTitlePane#setButtonIcons()::: windows internal frame title pane set button icons:::super->setButtonIcons->if->iconButton->setToolTipText->maxButton->setToolTipText->closeButton->setToolTipText
WindowsInternalFrameTitlePane#paintComponent(Graphics)::: windows internal frame title pane paint component:::xp->XPStyle->getXP->paintTitleBackground->title->frame->getTitle->if->isSelected->frame->isSelected->oldFont->g->getFont->newFont->getFont->g->setFont->fm->SwingUtilities2->getFontMetrics->baseline->getHeight->fm->getAscent->fm->getLeading->fm->getDescent->lastIconBounds->new->Rectangle->if->frame->isIconifiable->iconButton->getBounds->else->if->frame->isMaximizable->maxButton->getBounds->else->if->frame->isClosable->closeButton->getBounds->titleX->titleW->gap->if->WindowsGraphicsUtils->isLeftToRight->if->frame->getWidth->frame->getInsets->systemLabel->getX->systemLabel->getWidth->if->else->if->frame->getInsets->SwingUtilities2->stringWidth->minTitleX->if->availableWidth->systemLabel->getX->if->systemLabel->getX->else->frame->getTitle->getTitle->if->shadowType->if->xp->getString->if->equalsIgnoreCase->shadowOffset->xp->getPoint->shadowColor->xp->getColor->if->g->setColor->SwingUtilities2->drawString->g->setColor->SwingUtilities2->drawString->g->setFont
WindowsInternalFrameTitlePane#getPreferredSize()::: windows internal frame title pane get preferred size:::return->getMinimumSize
WindowsInternalFrameTitlePane#getMinimumSize()::: windows internal frame title pane get minimum size:::d->super->getMinimumSize->new->Dimension->xp->XPStyle->getXP->if->if->frame->isMaximum->else->return
WindowsInternalFrameTitlePane#paintTitleBackground(Graphics)::: windows internal frame title pane paint title background:::xp->XPStyle->getXP->if->part->frame->isIcon->frame->isMaximum->state->frame->isSelected->skin->xp->getSkin->skin->getWidth->getHeight->paintSkin->else->gradientsOn->LookAndFeel->Boolean->valueOf->getDesktopPropertyValue->if->gradientsOn->booleanValue->g2->savePaint->g2->getPaint->isSelected->frame->isSelected->w->getWidth->if->titleGradient->new->GradientPaint->g2->setPaint->else->titleGradient->new->GradientPaint->g2->setPaint->g2->getWidth->getHeight->fillRect->g2->setPaint->else->super->paintTitleBackground
WindowsInternalFrameTitlePane#assembleSystemMenu()::: windows internal frame title pane assemble system menu:::new->JPopupMenu->addSystemMenuItems->enableActions->tmp->frame->getFrameIcon->new->JLabel->systemLabel->new->MouseAdapter->addMouseListener
WindowsInternalFrameTitlePane#addSystemMenuItems(JPopupMenu)::: windows internal frame title pane add system menu items:::mi->menu->add->mi->getButtonMnemonic->setMnemonic->menu->add->mi->getButtonMnemonic->setMnemonic->menu->add->mi->getButtonMnemonic->setMnemonic->menu->add->mi->getButtonMnemonic->setMnemonic->menu->add->mi->getButtonMnemonic->setMnemonic->menu->new->JSeparator->add->menu->add->mi->getButtonMnemonic->setMnemonic
WindowsInternalFrameTitlePane#getButtonMnemonic(String)::: windows internal frame title pane get button mnemonic:::try->return->Integer->UIManager->getString->parseInt->catch->return->finally
WindowsInternalFrameTitlePane#showSystemMenu()::: windows internal frame title pane show system menu:::showSystemPopupMenu
WindowsInternalFrameTitlePane#showSystemPopupMenu(Component)::: windows internal frame title pane show system popup menu:::dim->new->Dimension->border->frame->getBorder->if->border->getBorderInsets->border->getBorderInsets->border->getBorderInsets->border->getBorderInsets->if->frame->isIcon->systemPopupMenu->getX->getY->getHeight->show->else->systemPopupMenu->getX->getY->systemPopupMenu->getPreferredSize->show
WindowsInternalFrameTitlePane#createPropertyChangeListener()::: windows internal frame title pane create property change listener:::return->new->WindowsPropertyChangeHandler
WindowsInternalFrameTitlePane#createLayout()::: windows internal frame title pane create layout:::return->new->WindowsTitlePaneLayout
WindowsInternalFrameTitlePane.WindowsTitlePaneLayout#layoutButton(JComponent, Part, int, int, int, int, int, boolean)::: windows title pane layout layout button:::if->button->setBounds->if->else->return
WindowsInternalFrameTitlePane.WindowsTitlePaneLayout#layoutContainer(Container)::: windows title pane layout layout container:::leftToRight->WindowsGraphicsUtils->isLeftToRight->x->y->w->getWidth->h->getHeight->iconSize->if->else->layoutButton->if->if->frame->isMaximum->else->else->if->frame->isClosable->layoutButton->if->frame->isMaximizable->layoutButton->if->frame->isIconifiable->layoutButton
WindowsInternalFrameTitlePane.WindowsPropertyChangeHandler#propertyChange(PropertyChangeEvent)::: windows property change handler property change:::prop->evt->getPropertyName->if->equals->systemLabel->frame->getFrameIcon->setIcon->super->propertyChange
WindowsInternalFrameTitlePane.ScalableIconUIResource#getBestIcon(int)::: scalable icon resource get best icon:::if->bestIndex->minDiff->for->i->return->else->return
WindowsInternalFrameTitlePane.ScalableIconUIResource#paintIcon(Component, Graphics, int, int)::: scalable icon resource paint icon:::g2d->g->create->size->getIconWidth->scale->g2d->getTransform->getScaleX->icon->getBestIcon->iconSize->if->icon->getIconWidth->drawScale->g2d->translate->g2d->scale->icon->paintIcon->g2d->dispose
WindowsInternalFrameTitlePane.ScalableIconUIResource#getIconWidth()::: scalable icon resource get icon width:::return
WindowsInternalFrameTitlePane.ScalableIconUIResource#getIconHeight()::: scalable icon resource get icon height:::return
WindowsInternalFrameUI#installDefaults()::: windows internal frame i install defaults:::super->installDefaults->if->frame->new->XPBorder->setBorder->else->frame->UIManager->getBorder->setBorder
WindowsInternalFrameUI#installUI(JComponent)::: windows internal frame i install i:::super->installUI->LookAndFeel->installProperty
WindowsInternalFrameUI#uninstallDefaults()::: windows internal frame i uninstall defaults:::frame->setBorder->super->uninstallDefaults
WindowsInternalFrameUI#createUI(JComponent)::: windows internal frame i create i:::return->new->WindowsInternalFrameUI
WindowsInternalFrameUI#createDesktopManager()::: windows internal frame i create desktop manager:::return->new->WindowsDesktopManager
WindowsInternalFrameUI#createNorthPane(JInternalFrame)::: windows internal frame i create north pane:::new->WindowsInternalFrameTitlePane->return
WindowsInternalFrameUI.XPBorder#paintBorder(Component, Graphics, int, int, int, int)::: border paint border:::state->isSelected->topBorderHeight->titlePane->getSize->bottomSkin->bottomSkin->getHeight->bottomSkin->getHeight->paintSkin->leftSkin->leftSkin->getWidth->bottomSkin->getHeight->paintSkin->rightSkin->rightSkin->getWidth->rightSkin->getWidth->bottomSkin->getHeight->paintSkin
WindowsInternalFrameUI.XPBorder#getBorderInsets(Component, Insets)::: border get border insets:::leftSkin->getWidth->rightSkin->getWidth->bottomSkin->getHeight->return
WindowsInternalFrameUI.XPBorder#isBorderOpaque()::: border is border opaque:::return
WindowsLabelUI#createUI(JComponent)::: windows label i create i:::appContext->AppContext->getAppContext->windowsLabelUI->appContext->get->if->new->WindowsLabelUI->appContext->put->return
WindowsLabelUI#paintEnabledText(JLabel, Graphics, String, int, int)::: windows label i paint enabled text:::mnemonicIndex->l->getDisplayedMnemonicIndex->if->WindowsLookAndFeel->isMnemonicHidden->g->l->getForeground->setColor->SwingUtilities2->drawStringUnderlineCharAt
WindowsLabelUI#paintDisabledText(JLabel, Graphics, String, int, int)::: windows label i paint disabled text:::mnemonicIndex->l->getDisplayedMnemonicIndex->if->WindowsLookAndFeel->isMnemonicHidden->if->UIManager->getColor->UIManager->getColor->g->UIManager->getColor->setColor->SwingUtilities2->drawStringUnderlineCharAt->g->UIManager->getColor->setColor->SwingUtilities2->drawStringUnderlineCharAt->else->background->l->getBackground->g->background->brighter->setColor->SwingUtilities2->drawStringUnderlineCharAt->g->background->darker->setColor->SwingUtilities2->drawStringUnderlineCharAt
WindowsLookAndFeel#getName()::: windows look and feel get name:::return
WindowsLookAndFeel#getDescription()::: windows look and feel get description:::return
WindowsLookAndFeel#getID()::: windows look and feel get d:::return
WindowsLookAndFeel#isNativeLookAndFeel()::: windows look and feel is native look and feel:::return->OSInfo->getOSType
WindowsLookAndFeel#isSupportedLookAndFeel()::: windows look and feel is supported look and feel:::return->isNativeLookAndFeel
WindowsLookAndFeel#initialize()::: windows look and feel initialize:::super->initialize->if->OSInfo->getWindowsVersion->compareTo->else->XPStyle->invalidateStyle->systemFonts->new->GetPropertyAction->doPrivileged->Boolean->valueOf->booleanValue->if->value->UIManager->get->equals->KeyboardFocusManager->getCurrentKeyboardFocusManager->addKeyEventPostProcessor
WindowsLookAndFeel#initClassDefaults(UIDefaults):::Initialize the uiClassID to BasicComponentUI mapping:::super->initClassDefaults->windowsPackageName->uiDefaults->table->putDefaults
WindowsLookAndFeel#initSystemColorDefaults(UIDefaults):::Load the SystemColors into the defaults table:::defaultSystemColors->isNativeLookAndFeel->loadSystemColors
WindowsLookAndFeel#initResourceBundle(UIDefaults):::Initialize the defaults table with the name of the ResourceBundle used for getting localized defaults.:::SwingAccessor->getUIDefaultsAccessor->addInternalBundle
WindowsLookAndFeel#initComponentDefaults(UIDefaults)::: windows look and feel init component defaults:::super->initComponentDefaults->initResourceBundle->dialogPlain12->new->FontUIResource->sansSerifPlain12->new->FontUIResource->monospacedPlain12->new->FontUIResource->dialogBold12->new->FontUIResource->red->new->ColorUIResource->black->new->ColorUIResource->white->new->ColorUIResource->gray->new->ColorUIResource->darkGray->new->ColorUIResource->scrollBarTrackHighlight->OSInfo->getWindowsVersion->compareTo->treeExpandedIcon->createExpandedIcon->treeCollapsedIcon->createCollapsedIcon->fieldInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->passwordInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->multilineInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->menuItemAcceleratorDelimiter->ControlBackgroundColor->table->get->new->WindowsDesktopProperty->ControlLightColor->table->get->new->WindowsDesktopProperty->ControlHighlightColor->table->get->new->WindowsDesktopProperty->ControlShadowColor->table->get->new->WindowsDesktopProperty->ControlDarkShadowColor->table->get->new->WindowsDesktopProperty->ControlTextColor->table->get->new->WindowsDesktopProperty->MenuBackgroundColor->table->get->new->WindowsDesktopProperty->MenuBarBackgroundColor->table->get->new->WindowsDesktopProperty->MenuTextColor->table->get->new->WindowsDesktopProperty->SelectionBackgroundColor->table->get->new->WindowsDesktopProperty->SelectionTextColor->table->get->new->WindowsDesktopProperty->WindowBackgroundColor->table->get->new->WindowsDesktopProperty->WindowTextColor->table->get->new->WindowsDesktopProperty->WindowBorderWidth->Integer->valueOf->new->WindowsDesktopProperty->TitlePaneHeight->Integer->valueOf->new->WindowsDesktopProperty->TitleButtonWidth->Integer->valueOf->new->WindowsDesktopProperty->TitleButtonHeight->Integer->valueOf->new->WindowsDesktopProperty->InactiveTextColor->table->get->new->WindowsDesktopProperty->ScrollbarBackgroundColor->table->get->new->WindowsDesktopProperty->buttonFocusColor->new->FocusColorProperty->TextBackground->new->XPColorValue->ReadOnlyTextBackground->DisabledTextBackground->MenuFont->FixedControlFont->ControlFont->MessageFont->WindowFont->ToolTipFont->IconFont->scrollBarWidth->Integer->valueOf->new->WindowsDesktopProperty->menuBarHeight->new->WindowsDesktopProperty->hotTrackingOn->new->WindowsDesktopProperty->showMnemonics->new->WindowsDesktopProperty->if->getDesktopFontValue->getDesktopFontValue->getDesktopFontValue->getDesktopFontValue->getDesktopFontValue->getDesktopFontValue->getDesktopFontValue->SwingUtilities2->putAATextInfo->new->FontDesktopProperty->if->new->WindowsFontSizeProperty->new->WindowsFontSizeProperty->new->WindowsFontSizeProperty->new->WindowsFontSizeProperty->new->WindowsFontSizeProperty->new->WindowsFontSizeProperty->new->WindowsFontSizeProperty->if->OSInfo->getOSType->OSInfo->getWindowsVersion->compareTo->AccessController->new->GetPropertyAction->doPrivileged->new->TriggerDesktopProperty->new->TriggerDesktopProperty->new->TriggerDesktopProperty->new->TriggerDesktopProperty->defaults->Boolean->valueOf->Integer->valueOf->Integer->valueOf->new->XPValue->Integer->valueOf->Integer->valueOf->new->XPValue->Integer->valueOf->Integer->valueOf->new->XPValue->Integer->valueOf->Integer->valueOf->new->XPValue->Integer->valueOf->Integer->valueOf->new->XPValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->WindowsDesktopProperty->new->ObjectArr->new->UIDefaults.LazyInputMap->new->Insets->new->EmptyBorder->new->EmptyBorder->new->XPValue->new->XPColorValue->new->XPColorValue->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->new->WindowsDesktopProperty->new->ObjectArr->new->UIDefaults.LazyInputMap->Integer->valueOf->new->LazyWindowsIcon->new->XPColorValue->BorderUIResource->getLoweredBevelBorderUIResource->new->XPBorderValue->new->LazyWindowsIcon->new->LazyWindowsIcon->new->LazyWindowsIcon->new->LazyWindowsIcon->new->LazyWindowsIcon->new->WindowsDesktopProperty->new->ObjectArr->new->UIDefaults.LazyInputMap->SwingUtilities2->getClass->makeIcon->SwingUtilities2->getClass->makeIcon->SwingUtilities2->getClass->makeIcon->SwingUtilities2->getClass->makeIcon->SwingUtilities2->getClass->makeIcon->table->get->new->WindowsDesktopProperty->table->get->new->WindowsDesktopProperty->table->get->new->WindowsDesktopProperty->table->get->new->WindowsDesktopProperty->table->get->new->WindowsDesktopProperty->table->get->new->WindowsDesktopProperty->table->get->new->WindowsDesktopProperty->table->get->new->WindowsDesktopProperty->WindowsIconFactory->createFrameMaximizeIcon->WindowsIconFactory->createFrameMinimizeIcon->WindowsIconFactory->createFrameIconifyIcon->WindowsIconFactory->createFrameCloseIcon->new->ObjectArr->SwingUtilities2->getClass->makeIcon->SwingUtilities2->getClass->makeIcon->new->WindowsInternalFrameTitlePane.ScalableIconUIResource->new->ObjectArr->new->ObjectArr->new->UIDefaults.LazyInputMap->Integer->valueOf->Integer->valueOf->Integer->valueOf->Integer->valueOf->new->XPValue->new->ObjectArr->new->ObjectArr->new->UIDefaults.LazyInputMap->new->Insets->new->XPDLUValue->new->LazyWindowsIcon->new->LazyWindowsIcon->new->LazyWindowsIcon->new->LazyWindowsIcon->new->ObjectArr->new->ObjectArr->new->UIDefaults.LazyInputMap->new->XPValue->Integer->valueOf->Integer->valueOf->new->Insets->new->ObjectArr->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->Integer->valueOf->new->ObjectArr->new->UIDefaults.LazyInputMap->new->XPValue->new->InsetsUIResource->new->InsetsUIResource->new->XPValue->new->InsetsUIResource->new->InsetsUIResource->new->XPValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->XPValue->new->XPColorValue->Integer->valueOf->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->new->WindowsDesktopProperty->table->get->new->WindowsDesktopProperty->Integer->valueOf->Integer->valueOf->new->ActiveWindowsIcon->new->ActiveWindowsIcon->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->table->putDefaults->table->getLazyValueDefaults->putDefaults->initVistaComponentDefaults
WindowsLookAndFeel#isOnVista()::: windows look and feel is on vista:::return->OSInfo->getOSType->OSInfo->getWindowsVersion->compareTo
WindowsLookAndFeel#isOnWindows7()::: windows look and feel is on windows7:::return->OSInfo->getOSType->OSInfo->getWindowsVersion->compareTo
WindowsLookAndFeel#initVistaComponentDefaults(UIDefaults)::: windows look and feel init vista component defaults:::if->isOnVista->return->menuClasses->menuDefaults->new->ObjectArr->for->i->j->table->putDefaults->for->i->j->table->putDefaults->menuItemCheckIconFactory->WindowsIconFactory->getMenuItemCheckIconFactory->for->i->j->table->putDefaults->for->i->j->table->putDefaults->for->i->j->table->putDefaults->if->isOnWindows7->insets->new->InsetsUIResource->for->i->j->table->putDefaults->checkIconOffsetInteger->Integer->valueOf->for->i->j->table->putDefaults->afterCheckIconGap->WindowsPopupMenuUI->getSpanBeforeGutter->WindowsPopupMenuUI->getGutterWidth->WindowsPopupMenuUI->getSpanAfterGutter->for->i->j->table->putDefaults->minimumTextOffset->new->UIDefaults.ActiveValue->for->i->j->table->putDefaults->POPUP_MENU_BORDER->popupMenuBorder->BasicBorders->getInternalFrameBorder->BorderFactory->createEmptyBorder->new->XPBorderValue->table->put->table->new->SkinIcon->new->ClassicSortArrowIcon->new->XPValue->put->table->new->SkinIcon->new->ClassicSortArrowIcon->new->XPValue->put
WindowsLookAndFeel#getDesktopFontValue(String, Object):::If we support loading of fonts from the desktop this will return a WindowsDesktopProperty representing the font:::if->return->new->WindowsFontProperty->return
WindowsLookAndFeel#getLazyValueDefaults()::: windows look and feel get lazy value defaults:::buttonBorder->BasicBorders->getButtonBorder->new->XPBorderValue->textFieldBorder->BasicBorders->getTextFieldBorder->new->XPBorderValue->textFieldMargin->new->InsetsUIResource->new->InsetsUIResource->new->XPValue->spinnerBorder->new->EmptyBorder->new->XPBorderValue->spinnerArrowInsets->new->InsetsUIResource->new->XPValue->comboBoxBorder->new->XPBorderValue->focusCellHighlightBorder->WindowsBorders->getFocusCellHighlightBorder->etchedBorder->BorderUIResource->getEtchedBorderUIResource->internalFrameBorder->WindowsBorders->getInternalFrameBorder->loweredBevelBorder->BorderUIResource->getLoweredBevelBorderUIResource->marginBorder->new->BasicBorders.MarginBorder->menuBarBorder->BasicBorders->getMenuBarBorder->popupMenuBorder->BasicBorders->getInternalFrameBorder->new->XPBorderValue->progressBarBorder->WindowsBorders->getProgressBarBorder->radioButtonBorder->BasicBorders->getRadioButtonBorder->scrollPaneBorder->new->XPBorderValue->tableScrollPaneBorder->new->XPBorderValue->tableHeaderBorder->WindowsBorders->getTableHeaderBorder->toolBarBorder->WindowsBorders->getToolBarBorder->toolTipBorder->BorderUIResource->getBlackLineBorderUIResource->checkBoxIcon->WindowsIconFactory->getCheckBoxIcon->radioButtonIcon->WindowsIconFactory->getRadioButtonIcon->radioButtonMenuItemIcon->WindowsIconFactory->getRadioButtonMenuItemIcon->menuItemCheckIcon->WindowsIconFactory->getMenuItemCheckIcon->menuItemArrowIcon->WindowsIconFactory->getMenuItemArrowIcon->menuArrowIcon->WindowsIconFactory->getMenuArrowIcon->highlight->Toolkit->getDefaultToolkit->getDesktopProperty->shadow->Toolkit->getDefaultToolkit->getDesktopProperty->lazyDefaults->new->Dimension->new->UIDefaults.LazyValue->new->XPValue->new->SortArrowIcon->new->ClassicSortArrowIcon->new->XPValue->new->SortArrowIcon->new->ClassicSortArrowIcon->new->XPValue->return
WindowsLookAndFeel#uninitialize()::: windows look and feel uninitialize:::super->uninitialize->if->MenuSelectionManager->defaultManager->removeChangeListener->KeyboardFocusManager->getCurrentKeyboardFocusManager->removeKeyEventPostProcessor->WindowsDesktopProperty->flushUnreferencedProperties
WindowsLookAndFeel#setMnemonicHidden(boolean):::Sets the state of the hide mnemonic flag:::if->UIManager->getBoolean->else
WindowsLookAndFeel#isMnemonicHidden():::Gets the state of the hide mnemonic flag:::if->UIManager->getBoolean->return
WindowsLookAndFeel#isClassicWindows():::Gets the state of the flag which indicates if the old Windows look and feel should be rendered:::return
WindowsLookAndFeel#provideErrorFeedback(Component)::: Invoked when the user attempts an invalid operation, such as pasting into an uneditable JTextField that has focus:::super->provideErrorFeedback
WindowsLookAndFeel#getLayoutStyle()::: windows look and feel get layout style:::style->if->new->WindowsLayoutStyle->return
WindowsLookAndFeel#createAudioAction(Object):::Returns an Action:::if->audioKey->audioValue->UIManager->get->return->new->AudioAction->else->return
WindowsLookAndFeel#repaintRootPane(Component)::: windows look and feel repaint root pane:::root->for->c->getParent->if->root->repaint->else->c->repaint
WindowsLookAndFeel.AudioAction#actionPerformed(ActionEvent)::: audio action action performed:::if->Toolkit->getDefaultToolkit->getDesktopProperty->if->new->Thread->start
WindowsLookAndFeel.LazyWindowsIcon#createValue(UIDefaults)::: lazy windows icon create value:::if->image->ShellFolder->get->if->return->new->ImageIcon->return->SwingUtilities2->getClass->makeIcon
WindowsLookAndFeel.ActiveWindowsIcon#createValue(UIDefaults)::: active windows icon create value:::if->image->ShellFolder->get->if->new->ImageIconUIResource->if->fallback->SwingUtilities2->makeIcon->fallback->createValue->return
WindowsLookAndFeel.SkinIcon#paintIcon(Component, Graphics, int, int):::Draw the icon at the specified location:::xp->XPStyle->getXP->if->skin->xp->getSkin->skin->paintSkin
WindowsLookAndFeel.SkinIcon#getIconWidth():::Returns the icon's width.:::width->xp->XPStyle->getXP->if->skin->xp->getSkin->skin->getWidth->return
WindowsLookAndFeel.SkinIcon#getIconHeight():::Returns the icon's height.:::height->xp->XPStyle->getXP->if->skin->xp->getSkin->skin->getHeight->return
WindowsLookAndFeel.WindowsFontProperty#invalidate(LookAndFeel)::: windows font property invalidate:::if->getKey->equals->super->invalidate
WindowsLookAndFeel.WindowsFontProperty#configureValue(Object)::: windows font property configure value:::if->font->if->font->getName->equals->size->font->getSize->dpi->try->Toolkit->getDefaultToolkit->getScreenResolution->catch->finally->if->Math->round->Math->round->msFont->font->getStyle->new->FontUIResource->if->msFont->getName->msFont->getName->msFont->getFamily->equals->else->if->font->getSize->font->getStyle->new->FontUIResource->if->FontUtilities->fontSupportsDefaultEncoding->if->new->FontUIResource->else->FontUtilities->getCompositeFontUIResource->return->return->super->configureValue
WindowsLookAndFeel.WindowsFontSizeProperty#configureValue(Object)::: windows font size property configure value:::if->new->FontUIResource->else->if->intValue->new->FontUIResource->return
WindowsLookAndFeel.XPValue#createValue(UIDefaults)::: value create value:::value->if->XPStyle->getXP->getXPValue->if->getClassicValue->else->if->return
WindowsLookAndFeel.XPValue#getXPValue(UIDefaults)::: value get value:::return->recursiveCreateValue
WindowsLookAndFeel.XPValue#getClassicValue(UIDefaults)::: value get classic value:::return->recursiveCreateValue
WindowsLookAndFeel.XPValue#recursiveCreateValue(Object, UIDefaults)::: value recursive create value:::if->createValue->if->return->createValue->else->return
WindowsLookAndFeel.XPBorderValue#getXPValue(UIDefaults)::: border value get value:::xp->XPStyle->getXP->xpBorder->xp->getBorder->if->return->new->BorderUIResource.CompoundBorderUIResource->else->return
WindowsLookAndFeel.XPColorValue#getXPValue(UIDefaults)::: color value get value:::key->xp->XPStyle->getXP->return->xp->getColor
WindowsLookAndFeel.XPDLUValue#getXPValue(UIDefaults)::: value get value:::px->intValue->dluToPixels->return->Integer->valueOf
WindowsLookAndFeel.XPDLUValue#getClassicValue(UIDefaults)::: value get classic value:::px->intValue->dluToPixels->return->Integer->valueOf
WindowsLookAndFeel.TriggerDesktopProperty#updateUI()::: trigger desktop property update i:::super->updateUI->getValueFromDesktop
WindowsLookAndFeel.FontDesktopProperty#updateUI()::: font desktop property update i:::defaults->UIManager->getLookAndFeelDefaults->SwingUtilities2->putAATextInfo->super->updateUI
WindowsLookAndFeel.WindowsLayoutStyle#getPreferredGap(JComponent, JComponent, ComponentPlacement, int, Container)::: windows layout style get preferred gap:::super->getPreferredGap->switch->if->indent->getIndent->if->return->return->if->isLabelAndNonlabel->return->dluToPixels->getButtonGap->return->dluToPixels->getButtonGap->return->dluToPixels->getButtonGap->return
WindowsLookAndFeel.WindowsLayoutStyle#getContainerGap(JComponent, int, Container)::: windows layout style get container gap:::super->getContainerGap->return->dluToPixels->getButtonGap
WindowsLookAndFeel#dluToPixels(int, int):::Converts the dialog unit argument to pixels along the specified axis.:::if->calculateBaseUnits->if->return->return
WindowsLookAndFeel#calculateBaseUnits():::Calculates the dialog unit mapping.:::metrics->Toolkit->getDefaultToolkit->UIManager->getFont->getFontMetrics->metrics->stringWidth->metrics->getAscent->metrics->getDescent
WindowsLookAndFeel#getDisabledIcon(JComponent, Icon)::: windows look and feel get disabled icon:::if->component->getClientProperty->equals->icon->getIconWidth->icon->getIconHeight->img->icon->getIconWidth->icon->getIconWidth->new->BufferedImage->icon->img->getGraphics->paintIcon->filter->new->RGBGrayFilter->producer->img->getSource->new->FilteredImageSource->resultImage->component->createImage->return->new->ImageIconUIResource->return->super->getDisabledIcon
WindowsLookAndFeel.RGBGrayFilter#filterRGB(int, int, int)::: gray filter filter b:::avg->alpha->Math->min->rgbval->return
WindowsLookAndFeel.FocusColorProperty#configureValue(Object)::: focus color property configure value:::highContrastOn->Toolkit->getDefaultToolkit->getDesktopProperty->if->booleanValue->return->return->equals
WindowsMenuBarUI#createUI(JComponent)::: windows menu bar i create i:::return->new->WindowsMenuBarUI
WindowsMenuBarUI#uninstallListeners()::: windows menu bar i uninstall listeners:::uninstallWindowListener->if->menuBar->removeHierarchyListener->super->uninstallListeners
WindowsMenuBarUI#installWindowListener()::: windows menu bar i install window listener:::if->component->menuBar->getTopLevelAncestor->if->new->WindowAdapter->addWindowListener
WindowsMenuBarUI#uninstallWindowListener()::: windows menu bar i uninstall window listener:::if->window->removeWindowListener
WindowsMenuBarUI#installListeners()::: windows menu bar i install listeners:::if->WindowsLookAndFeel->isOnVista->installWindowListener->new->HierarchyListener->menuBar->addHierarchyListener->super->installListeners
WindowsMenuBarUI#installKeyboardActions()::: windows menu bar i install keyboard actions:::super->installKeyboardActions->map->SwingUtilities->getUIActionMap->if->new->ActionMapUIResource->SwingUtilities->replaceUIActionMap->map->new->TakeFocus->put
WindowsMenuBarUI.TakeFocus#actionPerformed(ActionEvent)::: take focus action performed:::menuBar->e->getSource->menu->menuBar->getMenu->if->msm->MenuSelectionManager->defaultManager->path->new->MenuElementArr->msm->setSelectedPath->WindowsLookAndFeel->setMnemonicHidden->WindowsLookAndFeel->repaintRootPane
WindowsMenuBarUI#paint(Graphics, JComponent)::: windows menu bar i paint:::xp->XPStyle->getXP->if->WindowsMenuItemUI->isVistaPainting->skin->xp->getSkin->width->c->getWidth->height->c->getHeight->state->isActive->skin->paintSkin->else->super->paint
WindowsMenuBarUI#isActive(JComponent):::Checks if component belongs to an active window.:::rootPane->c->getRootPane->if->component->rootPane->getParent->if->return->isActive->return
WindowsMenuItemUI#createUI(JComponent)::: windows menu item i create i:::return->new->WindowsMenuItemUI
WindowsMenuItemUI#paintText(Graphics, JMenuItem, Rectangle, String):::Method which renders the text of the current menu item.:::if->WindowsMenuItemUI->isVistaPainting->WindowsMenuItemUI->paintText->return->model->menuItem->getModel->oldColor->g->getColor->if->model->isEnabled->model->isArmed->model->isSelected->g->setColor->WindowsGraphicsUtils->paintText->g->setColor
WindowsMenuItemUI#paintBackground(Graphics, JMenuItem, Color)::: windows menu item i paint background:::if->WindowsMenuItemUI->isVistaPainting->WindowsMenuItemUI->paintBackground->return->super->paintBackground
WindowsMenuItemUI#paintBackground(WindowsMenuItemUIAccessor, Graphics, JMenuItem, Color)::: windows menu item i paint background:::xp->XPStyle->getXP->if->isVistaPainting->menuWidth->menuItem->getWidth->menuHeight->menuItem->getHeight->if->menuItem->isOpaque->oldColor->g->getColor->g->menuItem->getBackground->setColor->g->fillRect->g->setColor->part->menuItemUI->getPart->skin->xp->getSkin->skin->menuItemUI->getState->paintSkin
WindowsMenuItemUI#paintText(WindowsMenuItemUIAccessor, Graphics, JMenuItem, Rectangle, String)::: windows menu item i paint text:::if->isVistaPainting->state->menuItemUI->getState->fm->SwingUtilities2->getFontMetrics->mnemIndex->menuItem->getDisplayedMnemonicIndex->if->WindowsLookAndFeel->isMnemonicHidden->WindowsGraphicsUtils->menuItemUI->getPart->fm->getAscent->paintXPText
WindowsMenuItemUI#getState(WindowsMenuItemUIAccessor, JMenuItem)::: windows menu item i get state:::state->model->menuItem->getModel->if->model->isArmed->model->isEnabled->else->model->isEnabled->return
WindowsMenuItemUI#getPart(WindowsMenuItemUIAccessor, JMenuItem)::: windows menu item i get part:::return
WindowsMenuItemUI#isVistaPainting(XPStyle)::: windows menu item i is vista painting:::return->xp->isSkinDefined
WindowsMenuItemUI#isVistaPainting()::: windows menu item i is vista painting:::return->XPStyle->getXP->isVistaPainting
WindowsMenuItemUIAccessor#getMenuItem()::: windows menu item accessor get menu item:::
WindowsMenuItemUIAccessor#getState(JMenuItem)::: windows menu item accessor get state:::
WindowsMenuItemUIAccessor#getPart(JMenuItem)::: windows menu item accessor get part:::
WindowsMenuUI#createUI(JComponent)::: windows menu i create i:::return->new->WindowsMenuUI
WindowsMenuUI#installDefaults()::: windows menu i install defaults:::super->installDefaults->if->WindowsLookAndFeel->isClassicWindows->menuItem->setRolloverEnabled->UIManager->getInt->obj->UIManager->get
WindowsMenuUI#paintBackground(Graphics, JMenuItem, Color):::Draws the background of the menu.:::if->WindowsMenuItemUI->isVistaPainting->WindowsMenuItemUI->paintBackground->return->menu->model->menu->getModel->if->WindowsLookAndFeel->isClassicWindows->menu->isTopLevelMenu->XPStyle->getXP->model->isArmed->model->isSelected->super->paintBackground->return->oldColor->g->getColor->menuWidth->menu->getWidth->menuHeight->menu->getHeight->table->UIManager->getLookAndFeelDefaults->highlight->table->getColor->shadow->table->getColor->g->menu->getBackground->setColor->g->fillRect->if->menu->isOpaque->if->model->isArmed->model->isSelected->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->else->if->model->isRollover->model->isEnabled->otherMenuSelected->menus->menu->getParent->getSubElements->for->i->if->if->XPStyle->getXP->g->setColor->g->fillRect->else->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->setColor
WindowsMenuUI#paintText(Graphics, JMenuItem, Rectangle, String):::Method which renders the text of the current menu item.:::if->WindowsMenuItemUI->isVistaPainting->WindowsMenuItemUI->paintText->return->menu->model->menuItem->getModel->oldColor->g->getColor->paintRollover->model->isRollover->if->menu->isTopLevelMenu->menus->menu->getParent->getSubElements->for->i->if->model->isSelected->WindowsLookAndFeel->isClassicWindows->menu->isTopLevelMenu->XPStyle->getXP->model->isArmed->model->isSelected->g->setColor->WindowsGraphicsUtils->paintText->g->setColor
WindowsMenuUI#createMouseInputListener(JComponent)::: windows menu i create mouse input listener:::return->new->WindowsMouseInputHandler
WindowsMenuUI.WindowsMouseInputHandler#mouseEntered(MouseEvent)::: windows mouse input handler mouse entered:::super->mouseEntered->menu->evt->getSource->if->menu->isTopLevelMenu->menu->isRolloverEnabled->menu->getModel->setRollover->menuItem->repaint
WindowsMenuUI.WindowsMouseInputHandler#mouseExited(MouseEvent)::: windows mouse input handler mouse exited:::super->mouseExited->menu->evt->getSource->model->menu->getModel->if->menu->isRolloverEnabled->model->setRollover->menuItem->repaint
WindowsMenuUI#getPreferredMenuItemSize(JComponent, Icon, Icon, int)::: windows menu i get preferred menu item size:::d->super->getPreferredMenuItemSize->if->isTopLevelMenu->return
WindowsPasswordFieldUI#createUI(JComponent):::Creates a UI for a JPasswordField:::return->new->WindowsPasswordFieldUI
WindowsPasswordFieldUI#createCaret():::Creates the object to use for a caret:::return->new->WindowsTextUI.WindowsCaret
WindowsPopupMenuSeparatorUI#createUI(JComponent)::: windows popup menu separator i create i:::return->new->WindowsPopupMenuSeparatorUI
WindowsPopupMenuSeparatorUI#paint(Graphics, JComponent)::: windows popup menu separator i paint:::s->c->getSize->xp->XPStyle->getXP->if->WindowsMenuItemUI->isVistaPainting->x->parent->c->getParent->if->gutterOffsetObject->getClientProperty->if->intValue->c->getX->WindowsPopupMenuUI->getGutterWidth->skin->xp->getSkin->skinHeight->skin->getHeight->y->skin->paintSkin->else->y->g->c->getForeground->setColor->g->drawLine->g->c->getBackground->setColor->g->drawLine
WindowsPopupMenuSeparatorUI#getPreferredSize(JComponent)::: windows popup menu separator i get preferred size:::fontHeight->font->c->getFont->if->c->getFontMetrics->getHeight->return->new->Dimension
WindowsPopupMenuUI#createUI(JComponent)::: windows popup menu i create i:::return->new->WindowsPopupMenuUI
WindowsPopupMenuUI#installListeners()::: windows popup menu i install listeners:::super->installListeners->if->UIManager->getBoolean->new->MnemonicListener->MenuSelectionManager->defaultManager->addChangeListener
WindowsPopupMenuUI#getPopup(JPopupMenu, int, int):::Returns the Popup that will be responsible for displaying the JPopupMenu.:::popupFactory->PopupFactory->getSharedInstance->return->popupFactory->popupMenu->getInvoker->getPopup
WindowsPopupMenuUI.MnemonicListener#stateChanged(ChangeEvent)::: mnemonic listener state changed:::msm->ev->getSource->path->msm->getSelectedPath->if->if->WindowsLookAndFeel->isMnemonicHidden->WindowsLookAndFeel->setMnemonicHidden->if->win->SwingUtilities->getWindowAncestor->WindowsGraphicsUtils->repaintMnemonicsInWindow->else->c->if->getInvoker->SwingUtilities->getRootPane
WindowsPopupMenuUI#getTextOffset(JComponent):::Returns offset for the text:::rv->maxTextOffset->c->getClientProperty->if->menuItemOffset->component->c->getComponent->if->component->getX->return
WindowsPopupMenuUI#getSpanBeforeGutter():::Returns span before gutter:::return
WindowsPopupMenuUI#getSpanAfterGutter():::Returns span after gutter:::return
WindowsPopupMenuUI#getGutterWidth():::Returns gutter width:::rv->xp->XPStyle->getXP->if->skin->xp->getSkin->skin->getWidth->return
WindowsPopupMenuUI#isLeftToRight(JComponent):::Checks if PopupMenu is leftToRight The orientation is derived from the children of the component:::leftToRight->for->i->c->getComponentCount->return
WindowsPopupMenuUI#paint(Graphics, JComponent)::: windows popup menu i paint:::xp->XPStyle->getXP->if->WindowsMenuItemUI->isVistaPainting->skin->xp->getSkin->skin->c->getWidth->c->getHeight->paintSkin->textOffset->getTextOffset->if->isLeftToRight->xp->getSkin->gutterWidth->getGutterWidth->gutterOffset->getSpanAfterGutter->c->Integer->valueOf->putClientProperty->insets->c->getInsets->skin->c->getHeight->paintSkin->else->if->c->getClientProperty->c->putClientProperty->else->super->paint
WindowsPopupWindow#setWindowType(int)::: windows popup window set window type:::
WindowsPopupWindow#getWindowType()::: windows popup window get window type:::return
WindowsPopupWindow#update(Graphics)::: windows popup window update:::paint
WindowsPopupWindow#hide()::: windows popup window hide:::super->hide->removeNotify
WindowsPopupWindow#show()::: windows popup window show:::super->show->this->pack
WindowsProgressBarUI#createUI(JComponent)::: windows progress bar i create i:::return->new->WindowsProgressBarUI
WindowsProgressBarUI#installDefaults()::: windows progress bar i install defaults:::super->installDefaults->if->XPStyle->getXP->LookAndFeel->installProperty->progressBar->setBorder->UIManager->getInsets
WindowsProgressBarUI#getBaseline(JComponent, int, int):::Returns the baseline.:::baseline->super->getBaseline->if->XPStyle->getXP->progressBar->isStringPainted->progressBar->getOrientation->metrics->progressBar->progressBar->getFont->getFontMetrics->y->progressBar->getInsets->if->progressBar->isIndeterminate->else->metrics->getAscent->metrics->getLeading->metrics->getDescent->return
WindowsProgressBarUI#getPreferredInnerHorizontal()::: windows progress bar i get preferred inner horizontal:::xp->XPStyle->getXP->if->skin->xp->getSkin->return->super->getPreferredInnerHorizontal->getWidth->skin->getHeight->new->Dimension->return->super->getPreferredInnerHorizontal
WindowsProgressBarUI#getPreferredInnerVertical()::: windows progress bar i get preferred inner vertical:::xp->XPStyle->getXP->if->skin->xp->getSkin->return->skin->getWidth->super->getPreferredInnerVertical->getHeight->new->Dimension->return->super->getPreferredInnerVertical
WindowsProgressBarUI#paintDeterminate(Graphics, JComponent)::: windows progress bar i paint determinate:::xp->XPStyle->getXP->if->vertical->progressBar->getOrientation->isLeftToRight->WindowsGraphicsUtils->isLeftToRight->barRectWidth->progressBar->getWidth->barRectHeight->progressBar->getHeight->amountFull->getAmountFull->paintXPBackground->if->progressBar->isStringPainted->g->progressBar->getForeground->setColor->if->return->g2->g2->new->BasicStroke->setStroke->if->if->g2->drawLine->else->g2->drawLine->paintString->else->g2->drawLine->paintString->else->skin->xp->getSkin->thickness->if->else->chunkSize->xp->getInt->spaceSize->xp->getInt->nChunks->if->for->i->else->super->paintDeterminate
WindowsProgressBarUI#setAnimationIndex(int)::: windows progress bar i set animation index:::super->setAnimationIndex->xp->XPStyle->getXP->if->if->chunk->getFullChunkBounds->if->chunk->add->progressBar->repaint->else->progressBar->repaint
WindowsProgressBarUI#getBoxLength(int, int)::: windows progress bar i get box length:::xp->XPStyle->getXP->if->return->return->super->getBoxLength
WindowsProgressBarUI#getBox(Rectangle)::: windows progress bar i get box:::rect->super->getBox->xp->XPStyle->getXP->if->vertical->progressBar->getOrientation->part->ins->currentFrame->getAnimationIndex->framecount->getFrameCount->gap->xp->getInt->if->progressBar->getHeight->len->progressBar->getWidth->delta->else->progressBar->getWidth->len->progressBar->getHeight->delta->return
WindowsProgressBarUI#paintIndeterminate(Graphics, JComponent)::: windows progress bar i paint indeterminate:::xp->XPStyle->getXP->if->vertical->progressBar->getOrientation->barRectWidth->progressBar->getWidth->barRectHeight->progressBar->getHeight->paintXPBackground->getBox->if->g->progressBar->getForeground->setColor->if->return->paintIndeterminateFrame->if->progressBar->isStringPainted->if->paintString->else->paintString->else->super->paintIndeterminate
WindowsProgressBarUI#getFullChunkBounds(Rectangle)::: windows progress bar i get full chunk bounds:::vertical->progressBar->getOrientation->xp->XPStyle->getXP->gap->xp->getInt->if->chunksize->return->new->Rectangle->else->chunksize->return->new->Rectangle
WindowsProgressBarUI#paintIndeterminateFrame(Rectangle, Graphics2D, boolean, int, int)::: windows progress bar i paint indeterminate frame:::xp->XPStyle->getXP->if->return->gfx->g->create->part->chunk->gap->xp->getInt->deltax->deltay->if->else->fullBox->getFullChunkBounds->ins->progbarExtents->new->Rectangle->repaintArea->progbarExtents->intersection->gfx->clip->skin->xp->getSkin->gfx->AlphaComposite->getInstance->setComposite->skin->paintSkin->box->translate->gfx->AlphaComposite->getInstance->setComposite->skin->paintSkin->box->translate->gfx->AlphaComposite->getInstance->setComposite->skin->paintSkin->gfx->dispose
WindowsProgressBarUI#paintXPBackground(Graphics, boolean, int, int)::: windows progress bar i paint background:::xp->XPStyle->getXP->if->return->part->skin->xp->getSkin->skin->paintSkin
WindowsRadioButtonMenuItemUI#createUI(JComponent)::: windows radio button menu item i create i:::return->new->WindowsRadioButtonMenuItemUI
WindowsRadioButtonMenuItemUI#paintBackground(Graphics, JMenuItem, Color)::: windows radio button menu item i paint background:::if->WindowsMenuItemUI->isVistaPainting->WindowsMenuItemUI->paintBackground->return->super->paintBackground
WindowsRadioButtonMenuItemUI#paintText(Graphics, JMenuItem, Rectangle, String):::Method which renders the text of the current menu item.:::if->WindowsMenuItemUI->isVistaPainting->WindowsMenuItemUI->paintText->return->model->menuItem->getModel->oldColor->g->getColor->if->model->isEnabled->model->isArmed->g->setColor->WindowsGraphicsUtils->paintText->g->setColor
WindowsRadioButtonUI#createUI(JComponent)::: windows radio button i create i:::appContext->AppContext->getAppContext->windowsRadioButtonUI->appContext->get->if->new->WindowsRadioButtonUI->appContext->put->return
WindowsRadioButtonUI#installDefaults(AbstractButton)::: windows radio button i install defaults:::super->installDefaults->if->UIManager->get->intValue->UIManager->get->intValue->UIManager->get->intValue->UIManager->get->intValue->UIManager->getPropertyPrefix->getColor->if->XPStyle->getXP->LookAndFeel->installProperty
WindowsRadioButtonUI#uninstallDefaults(AbstractButton)::: windows radio button i uninstall defaults:::super->uninstallDefaults
WindowsRadioButtonUI#getFocusColor()::: windows radio button i get focus color:::return
WindowsRadioButtonUI#paintText(Graphics, AbstractButton, Rectangle, String):::Overridden method to render the text without the mnemonic:::WindowsGraphicsUtils->getTextShiftOffset->paintText
WindowsRadioButtonUI#paintFocus(Graphics, Rectangle, Dimension)::: windows radio button i paint focus:::g->getFocusColor->setColor->BasicGraphicsUtils->drawDashedRect
WindowsRadioButtonUI#getPreferredSize(JComponent)::: windows radio button i get preferred size:::d->super->getPreferredSize->b->if->b->isFocusPainted->if->if->return
WindowsRootPaneUI#createUI(JComponent)::: windows root pane i create i:::return
WindowsRootPaneUI.AltProcessor#altPressed(KeyEvent)::: alt processor alt pressed:::msm->MenuSelectionManager->defaultManager->path->msm->getSelectedPath->if->msm->clearSelectedPath->ev->consume->else->if->WindowsLookAndFeel->setMnemonicHidden->WindowsGraphicsUtils->repaintMnemonicsInWindow->ev->consume->else->WindowsLookAndFeel->setMnemonicHidden->WindowsGraphicsUtils->repaintMnemonicsInWindow->mbar->root->getJMenuBar->if->getJMenuBar->menu->mbar->getMenu->if->ev->consume
WindowsRootPaneUI.AltProcessor#altReleased(KeyEvent)::: alt processor alt released:::if->WindowsLookAndFeel->setMnemonicHidden->WindowsGraphicsUtils->repaintMnemonicsInWindow->return->msm->MenuSelectionManager->defaultManager->if->msm->getSelectedPath->mbar->root->getJMenuBar->if->getJMenuBar->menu->mbar->getMenu->skip->tk->Toolkit->getDefaultToolkit->if->originalSource->AWTAccessor->getKeyEventAccessor->getOriginalSource->SunToolkit->getContainingWindow->ev->getWhen->getWindowDeactivationTime->if->path->new->MenuElementArr->msm->setSelectedPath->else->if->WindowsLookAndFeel->isMnemonicHidden->WindowsLookAndFeel->setMnemonicHidden->WindowsGraphicsUtils->repaintMnemonicsInWindow->else->if->msm->getSelectedPath->WindowsLookAndFeel->setMnemonicHidden->WindowsGraphicsUtils->repaintMnemonicsInWindow
WindowsRootPaneUI.AltProcessor#postProcessKeyEvent(KeyEvent)::: alt processor post process key event:::if->ev->isConsumed->ev->getKeyCode->return->if->ev->getKeyCode->SwingUtilities->ev->getComponent->getRootPane->SwingUtilities->getWindowAncestor->if->ev->getID->if->altPressed->return->else->if->ev->getID->if->altReleased->else->msm->MenuSelectionManager->defaultManager->path->msm->getSelectedPath->if->WindowsLookAndFeel->setMnemonicHidden->WindowsGraphicsUtils->repaintMnemonicsInWindow->else->if->WindowsLookAndFeel->isMnemonicHidden->ev->isAltDown->WindowsLookAndFeel->setMnemonicHidden->WindowsGraphicsUtils->repaintMnemonicsInWindow->return
WindowsScrollBarUI#createUI(JComponent):::Creates a UI for a JScrollBar.:::return->new->WindowsScrollBarUI
WindowsScrollBarUI#installDefaults()::: windows scroll bar i install defaults:::super->installDefaults->xp->XPStyle->getXP->if->scrollbar->setBorder->getSize->getSize->else
WindowsScrollBarUI#getSize(Component, XPStyle, Part)::: windows scroll bar i get size:::skin->xp->getSkin->return->skin->getWidth->skin->getHeight->new->Dimension
WindowsScrollBarUI#getMinimumThumbSize()::: windows scroll bar i get minimum thumb size:::if->return->super->getMinimumThumbSize->return->scrollbar->getOrientation
WindowsScrollBarUI#uninstallUI(JComponent)::: windows scroll bar i uninstall i:::super->uninstallUI
WindowsScrollBarUI#configureScrollBarColors()::: windows scroll bar i configure scroll bar colors:::super->configureScrollBarColors->color->UIManager->getColor->if->Grid->getGrid->UIManager->getColor->if->Grid->getGrid
WindowsScrollBarUI#createDecreaseButton(int)::: windows scroll bar i create decrease button:::return->UIManager->getColor->UIManager->getColor->UIManager->getColor->UIManager->getColor->new->WindowsArrowButton
WindowsScrollBarUI#createIncreaseButton(int)::: windows scroll bar i create increase button:::return->UIManager->getColor->UIManager->getColor->UIManager->getColor->UIManager->getColor->new->WindowsArrowButton
WindowsScrollBarUI#createArrowButtonListener()::: windows scroll bar i create arrow button listener:::if->XPStyle->isVista->return->new->ArrowButtonListener->else->return->super->createArrowButtonListener
WindowsScrollBarUI#paintTrack(Graphics, JComponent, Rectangle)::: windows scroll bar i paint track:::v->scrollbar->getOrientation->xp->XPStyle->getXP->if->sb->state->if->sb->isEnabled->part->xp->getSkin->paintSkin->else->if->super->paintTrack->else->thumbGrid->paint->if->paintDecreaseHighlight->else->if->paintIncreaseHighlight
WindowsScrollBarUI#paintThumb(Graphics, JComponent, Rectangle)::: windows scroll bar i paint thumb:::v->scrollbar->getOrientation->xp->XPStyle->getXP->if->sb->state->if->sb->isEnabled->else->if->else->if->isThumbRollover->else->if->XPStyle->isVista->if->incrButton->getModel->isRollover->decrButton->getModel->isRollover->thumbPart->xp->getSkin->paintSkin->gripperPart->skin->xp->getSkin->gripperInsets->xp->getMargin->if->skin->getHeight->skin->getWidth->skin->skin->getWidth->skin->getHeight->skin->getWidth->skin->getHeight->paintSkin->else->super->paintThumb
WindowsScrollBarUI#paintDecreaseHighlight(Graphics)::: windows scroll bar i paint decrease highlight:::if->super->paintDecreaseHighlight->else->insets->scrollbar->getInsets->thumbR->getThumbBounds->x->y->w->h->if->scrollbar->getOrientation->decrButton->getY->decrButton->getHeight->scrollbar->getWidth->else->decrButton->getX->decrButton->getHeight->scrollbar->getHeight->highlightGrid->paint
WindowsScrollBarUI#paintIncreaseHighlight(Graphics)::: windows scroll bar i paint increase highlight:::if->super->paintDecreaseHighlight->else->insets->scrollbar->getInsets->thumbR->getThumbBounds->x->y->w->h->if->scrollbar->getOrientation->scrollbar->getWidth->incrButton->getY->else->incrButton->getX->scrollbar->getHeight->highlightGrid->paint
WindowsScrollBarUI#setThumbRollover(boolean)::: windows scroll bar i set thumb rollover:::old->isThumbRollover->super->setThumbRollover->if->XPStyle->isVista->scrollbar->repaint
WindowsScrollBarUI.WindowsArrowButton#paint(Graphics)::: windows arrow button paint:::xp->XPStyle->getXP->if->model->getModel->skin->xp->getSkin->state->jointRollover->XPStyle->isVista->isThumbRollover->decrButton->getModel->isRollover->incrButton->getModel->isRollover->if->model->isArmed->model->isPressed->switch->break->break->break->break->else->if->model->isEnabled->switch->break->break->break->break->else->if->model->isRollover->model->isPressed->switch->break->break->break->break->else->if->switch->break->break->break->break->else->switch->break->break->break->break->skin->getWidth->getHeight->paintSkin->else->super->paint
WindowsScrollBarUI.WindowsArrowButton#getPreferredSize()::: windows arrow button get preferred size:::size->if->switch->scrollbar->getOrientation->scrollbar->getWidth->break->scrollbar->getHeight->break->Math->max->return->new->Dimension
WindowsScrollBarUI.Grid#getGrid(Color, Color)::: grid get grid:::key->fg->getRGB->bg->getRGB->ref->map->get->grid->ref->get->if->new->Grid->map->new->WeakReference<Grid>->put->return
WindowsScrollBarUI.Grid#paint(Graphics, int, int, int, int):::Paints the grid into the specified Graphics at the specified location.:::clipRect->g->getClipBounds->minX->Math->max->minY->Math->max->maxX->Math->min->maxY->Math->min->if->return->xOffset->for->xCounter
WindowsScrollBarUI.Grid#paintGrid(Graphics, Color, Color):::Actually renders the grid into the Graphics g.:::clipRect->g->getClipBounds->g->setColor->g->fillRect->g->setColor->g->translate->width->height->xCounter->for->end->for->end->yCounter->for->end->for->end->g->translate
WindowsSliderUI#createUI(JComponent)::: windows slider i create i:::return->new->WindowsSliderUI
WindowsSliderUI#createTrackListener(JSlider):::Overrides to return a private track listener subclass which handles the HOT, PRESSED, and FOCUSED states.:::return->new->WindowsTrackListener
WindowsSliderUI.WindowsTrackListener#mouseMoved(MouseEvent)::: windows track listener mouse moved:::thumbRect->e->getX->e->getY->contains->updateRollover->super->mouseMoved
WindowsSliderUI.WindowsTrackListener#mouseEntered(MouseEvent)::: windows track listener mouse entered:::thumbRect->e->getX->e->getY->contains->updateRollover->super->mouseEntered
WindowsSliderUI.WindowsTrackListener#mouseExited(MouseEvent)::: windows track listener mouse exited:::updateRollover->super->mouseExited
WindowsSliderUI.WindowsTrackListener#mousePressed(MouseEvent)::: windows track listener mouse pressed:::thumbRect->e->getX->e->getY->contains->updatePressed->super->mousePressed
WindowsSliderUI.WindowsTrackListener#mouseReleased(MouseEvent)::: windows track listener mouse released:::updatePressed->super->mouseReleased
WindowsSliderUI.WindowsTrackListener#updatePressed(boolean)::: windows track listener update pressed:::if->slider->isEnabled->return->if->slider->repaint
WindowsSliderUI.WindowsTrackListener#updateRollover(boolean)::: windows track listener update rollover:::if->slider->isEnabled->return->if->slider->repaint
WindowsSliderUI#paintTrack(Graphics)::: windows slider i paint track:::xp->XPStyle->getXP->if->vertical->slider->getOrientation->part->skin->xp->getSkin->if->x->skin->getWidth->skin->skin->getWidth->paintSkin->else->y->skin->getHeight->skin->skin->getHeight->paintSkin->else->super->paintTrack
WindowsSliderUI#paintMinorTickForHorizSlider(Graphics, Rectangle, int)::: windows slider i paint minor tick for horiz slider:::xp->XPStyle->getXP->if->g->xp->getColor->setColor->super->paintMinorTickForHorizSlider
WindowsSliderUI#paintMajorTickForHorizSlider(Graphics, Rectangle, int)::: windows slider i paint major tick for horiz slider:::xp->XPStyle->getXP->if->g->xp->getColor->setColor->super->paintMajorTickForHorizSlider
WindowsSliderUI#paintMinorTickForVertSlider(Graphics, Rectangle, int)::: windows slider i paint minor tick for vert slider:::xp->XPStyle->getXP->if->g->xp->getColor->setColor->super->paintMinorTickForVertSlider
WindowsSliderUI#paintMajorTickForVertSlider(Graphics, Rectangle, int)::: windows slider i paint major tick for vert slider:::xp->XPStyle->getXP->if->g->xp->getColor->setColor->super->paintMajorTickForVertSlider
WindowsSliderUI#paintThumb(Graphics)::: windows slider i paint thumb:::xp->XPStyle->getXP->if->part->getXPThumbPart->state->if->slider->hasFocus->if->if->if->slider->isEnabled->xp->getSkin->paintSkin->else->super->paintThumb
WindowsSliderUI#getThumbSize()::: windows slider i get thumb size:::xp->XPStyle->getXP->if->size->new->Dimension->s->xp->getXPThumbPart->getSkin->s->getWidth->s->getHeight->return->else->return->super->getThumbSize
WindowsSliderUI#getXPThumbPart()::: windows slider i get thumb part:::part->vertical->slider->getOrientation->leftToRight->slider->getComponentOrientation->isLeftToRight->paintThumbArrowShape->slider->getClientProperty->if->slider->getPaintTicks->else->return
WindowsSpinnerUI#createUI(JComponent)::: windows spinner i create i:::return->new->WindowsSpinnerUI
WindowsSpinnerUI#paint(Graphics, JComponent)::: windows spinner i paint:::if->XPStyle->getXP->paintXPBackground->super->paint
WindowsSpinnerUI#getXPState(JComponent)::: windows spinner i get state:::state->if->c->isEnabled->return
WindowsSpinnerUI#paintXPBackground(Graphics, JComponent)::: windows spinner i paint background:::xp->XPStyle->getXP->if->return->skin->xp->getSkin->state->getXPState->skin->c->getWidth->c->getHeight->paintSkin
WindowsSpinnerUI#createPreviousButton()::: windows spinner i create previous button:::if->XPStyle->getXP->xpButton->new->XPStyle.GlyphButton->size->UIManager->getDimension->xpButton->setPreferredSize->xpButton->setRequestFocusEnabled->installPreviousButtonListeners->return->return->super->createPreviousButton
WindowsSpinnerUI#createNextButton()::: windows spinner i create next button:::if->XPStyle->getXP->xpButton->new->XPStyle.GlyphButton->size->UIManager->getDimension->xpButton->setPreferredSize->xpButton->setRequestFocusEnabled->installNextButtonListeners->return->return->super->createNextButton
WindowsSpinnerUI#getUIResource(Object[])::: windows spinner i get resource:::for->counter->return
WindowsSplitPaneDivider#paint(Graphics):::Paints the divider.:::bgColor->splitPane->hasFocus->UIManager->getColor->getBackground->size->getSize->if->g->setColor->g->fillRect->super->paint
WindowsSplitPaneUI#createUI(JComponent):::Creates a new WindowsSplitPaneUI instance:::return->new->WindowsSplitPaneUI
WindowsSplitPaneUI#createDefaultDivider():::Creates the default divider.:::return->new->WindowsSplitPaneDivider
WindowsTabbedPaneUI#installDefaults()::: windows tabbed pane i install defaults:::super->installDefaults->UIManager->getBoolean->if->new->HashSet<KeyStroke>->managingFocusForwardTraversalKeys->KeyStroke->getKeyStroke->add->tabPane->setFocusTraversalKeys->if->new->HashSet<KeyStroke>->managingFocusBackwardTraversalKeys->KeyStroke->getKeyStroke->add->tabPane->setFocusTraversalKeys
WindowsTabbedPaneUI#uninstallDefaults()::: windows tabbed pane i uninstall defaults:::tabPane->setFocusTraversalKeys->tabPane->setFocusTraversalKeys->super->uninstallDefaults
WindowsTabbedPaneUI#createUI(JComponent)::: windows tabbed pane i create i:::return->new->WindowsTabbedPaneUI
WindowsTabbedPaneUI#setRolloverTab(int)::: windows tabbed pane i set rollover tab:::if->XPStyle->getXP->oldRolloverTab->getRolloverTab->super->setRolloverTab->r1->r2->if->tabPane->getTabCount->getTabBounds->if->getTabBounds->if->if->tabPane->r1->union->repaint->else->tabPane->repaint->else->if->tabPane->repaint
WindowsTabbedPaneUI#paintContentBorder(Graphics, int, int)::: windows tabbed pane i paint content border:::xp->XPStyle->getXP->if->tabPane->isOpaque->skin->xp->getSkin->if->insets->tabPane->getInsets->tabAreaInsets->UIManager->getInsets->x->y->w->tabPane->getWidth->h->tabPane->getHeight->if->tabWidth->calculateTabAreaWidth->if->else->tabHeight->calculateTabAreaHeight->if->paintRotatedSkin->return->super->paintContentBorder
WindowsTabbedPaneUI#paintTabBackground(Graphics, int, int, int, int, int, int, boolean)::: windows tabbed pane i paint tab background:::if->XPStyle->getXP->super->paintTabBackground
WindowsTabbedPaneUI#paintTabBorder(Graphics, int, int, int, int, int, int, boolean)::: windows tabbed pane i paint tab border:::xp->XPStyle->getXP->if->part->tabCount->tabPane->getTabCount->tabRun->getRunForTab->if->else->if->lastTabInRun->if->if->else->else->state->if->else->if->getRolloverTab->xp->getSkin->paintRotatedSkin->else->super->paintTabBorder
WindowsTabbedPaneUI#paintRotatedSkin(Graphics, Skin, int, int, int, int, int, State)::: windows tabbed pane i paint rotated skin:::g2d->g->create->g2d->translate->switch->g2d->translate->g2d->Math->toRadians->rotate->skin->paintSkin->break->g2d->scale->g2d->Math->toRadians->rotate->skin->paintSkin->break->g2d->translate->g2d->scale->g2d->Math->toRadians->rotate->skin->paintSkin->break->skin->paintSkin->g2d->dispose
WindowsTableHeaderUI#createUI(JComponent)::: windows table header i create i:::return->new->WindowsTableHeaderUI
WindowsTableHeaderUI#installUI(JComponent)::: windows table header i install i:::super->installUI->if->XPStyle->getXP->header->getDefaultRenderer->if->header->new->XPDefaultRenderer->setDefaultRenderer
WindowsTableHeaderUI#uninstallUI(JComponent)::: windows table header i uninstall i:::if->header->getDefaultRenderer->header->setDefaultRenderer->super->uninstallUI
WindowsTableHeaderUI#rolloverColumnUpdated(int, int)::: windows table header i rollover column updated:::if->XPStyle->getXP->header->header->getHeaderRect->repaint->header->header->getHeaderRect->repaint
WindowsTableHeaderUI.XPDefaultRenderer#getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)::: default renderer get table cell renderer component:::super->getTableCellRendererComponent->getRolloverColumn->if->xp->XPStyle->getXP->xp->getSkin->margins->skin->getContentMargin->border->contentTop->contentLeft->contentBottom->contentRight->if->sortIcon->if->WindowsLookAndFeel->isOnVista->getIcon->setIcon->sortOrder->getColumnSortOrder->if->switch->UIManager->getIcon->break->UIManager->getIcon->break->if->sortIcon->getIconHeight->new->IconBorder->else->UIManager->getIcon->sortIconHeight->sortIcon->getIconHeight->if->new->EmptyBorder->else->new->EmptyBorder->setBorder->return
WindowsTableHeaderUI.XPDefaultRenderer#paint(Graphics)::: default renderer paint:::size->getSize->state->draggedColumn->header->getDraggedColumn->if->SwingUtilities2->header->getColumnModel->draggedColumn->getModelIndex->convertColumnIndexToView->else->if->if->WindowsLookAndFeel->isOnVista->sortOrder->header->getTable->getColumnSortOrder->if->switch->switch->break->break->break->break->skin->paintSkin->super->paint
WindowsTableHeaderUI.IconBorder#getBorderInsets(Component)::: icon border get border insets:::return->icon->getIconHeight->new->Insets
WindowsTableHeaderUI.IconBorder#isBorderOpaque()::: icon border is border opaque:::return
WindowsTableHeaderUI.IconBorder#paintBorder(Component, Graphics, int, int, int, int)::: icon border paint border:::icon->icon->getIconWidth->paintIcon
WindowsTextAreaUI#createCaret():::Creates the object to use for a caret:::return->new->WindowsTextUI.WindowsCaret
WindowsTextAreaUI#createUI(JComponent):::Creates a UI for a JTextField.:::return->new->WindowsTextAreaUI
WindowsTextFieldUI#createUI(JComponent):::Creates a UI for a JTextField.:::return->new->WindowsTextFieldUI
WindowsTextFieldUI#paintBackground(Graphics):::Paints a background for the view:::super->paintBackground
WindowsTextFieldUI#createCaret():::Creates the caret for a field.:::return->new->WindowsFieldCaret
WindowsTextFieldUI.WindowsFieldCaret#adjustVisibility(Rectangle):::Adjusts the visibility of the caret according to the windows feel which seems to be to move the caret out into the field by about a quarter of a field length if not visible.:::SwingUtilities->new->SafeScroller->invokeLater
WindowsTextFieldUI.WindowsFieldCaret#getSelectionPainter():::Gets the painter for the Highlighter.:::return
WindowsTextFieldUI.WindowsFieldCaret.SafeScroller#run()::: safe scroller run:::field->getComponent->if->ui->field->getUI->dot->getDot->bias->startRect->try->ui->modelToView->catch->finally->i->field->getInsets->vis->field->getHorizontalVisibility->x->vis->getValue->quarterSpan->vis->getExtent->if->vis->setValue->else->if->vis->getExtent->vis->setValue->if->try->endRect->ui->modelToView->if->endRect->equals->damage->catch->finally
WindowsTextPaneUI#createUI(JComponent):::Creates a UI for a JTextPane.:::return->new->WindowsTextPaneUI
WindowsTextPaneUI#createCaret():::Creates the object to use for a caret:::return->new->WindowsTextUI.WindowsCaret
WindowsTextUI#createCaret():::Creates the object to use for a caret:::return->new->WindowsCaret
WindowsTextUI.WindowsCaret#getSelectionPainter():::Gets the painter for the Highlighter.:::return
WindowsTextUI.WindowsHighlightPainter#paint(Graphics, int, int, Shape, JTextComponent):::Paints a highlight.:::alloc->bounds->getBounds->try->mapper->c->getUI->p0->mapper->modelToView->p1->mapper->modelToView->color->getColor->if->g->c->getSelectionColor->setColor->else->g->setColor->firstIsDot->secondIsDot->if->c->isEditable->dot->c->getCaretPosition->if->r->p0->union->if->if->else->if->g->fillRect->else->p0ToMarginWidth->if->g->fillRect->if->g->fillRect->if->g->fillRect->catch->finally
WindowsTextUI.WindowsHighlightPainter#paintLayer(Graphics, int, int, Shape, JTextComponent, View):::Paints a portion of a highlight.:::color->getColor->if->g->c->getSelectionColor->setColor->else->g->setColor->firstIsDot->secondIsDot->if->c->isEditable->dot->c->getCaretPosition->if->view->getStartOffset->view->getEndOffset->alloc->if->else->bounds->getBounds->if->g->fillRect->else->if->g->fillRect->else->g->fillRect->return->else->try->shape->view->modelToView->r->shape->getBounds->if->g->fillRect->else->if->g->fillRect->else->g->fillRect->return->catch->finally->return
WindowsToggleButtonUI#createUI(JComponent)::: windows toggle button i create i:::appContext->AppContext->getAppContext->windowsToggleButtonUI->appContext->get->if->new->WindowsToggleButtonUI->appContext->put->return
WindowsToggleButtonUI#installDefaults(AbstractButton)::: windows toggle button i install defaults:::super->installDefaults->if->pp->getPropertyPrefix->UIManager->get->intValue->UIManager->get->intValue->UIManager->get->intValue->UIManager->get->intValue->UIManager->getColor->xp->XPStyle->getXP->if->b->xp->WindowsButtonUI->getXPButtonType->getBorder->setBorder->LookAndFeel->installProperty->LookAndFeel->installProperty
WindowsToggleButtonUI#uninstallDefaults(AbstractButton)::: windows toggle button i uninstall defaults:::super->uninstallDefaults
WindowsToggleButtonUI#getFocusColor()::: windows toggle button i get focus color:::return
WindowsToggleButtonUI#paintButtonPressed(Graphics, AbstractButton)::: windows toggle button i paint button pressed:::if->XPStyle->getXP->b->isContentAreaFilled->oldColor->g->getColor->c1->b->getBackground->c2->UIManager->getColor->if->r1->c1->getRed->r2->c2->getRed->g1->c1->getGreen->g2->c2->getGreen->b1->c1->getBlue->b2->c2->getBlue->Math->min->Math->abs->Math->min->Math->abs->Math->min->Math->abs->new->Color->g->setColor->g->b->getWidth->b->getHeight->fillRect->g->setColor
WindowsToggleButtonUI#paint(Graphics, JComponent)::: windows toggle button i paint:::if->XPStyle->getXP->WindowsButtonUI->paintXPButtonBackground->super->paint
WindowsToggleButtonUI#paintText(Graphics, AbstractButton, Rectangle, String):::Overridden method to render the text without the mnemonic:::WindowsGraphicsUtils->getTextShiftOffset->paintText
WindowsToggleButtonUI#paintFocus(Graphics, AbstractButton, Rectangle, Rectangle, Rectangle)::: windows toggle button i paint focus:::g->getFocusColor->setColor->BasicGraphicsUtils->b->getWidth->b->getHeight->drawDashedRect
WindowsToggleButtonUI#getPreferredSize(JComponent)::: windows toggle button i get preferred size:::d->super->getPreferredSize->b->if->b->isFocusPainted->if->if->return
WindowsToolBarSeparatorUI#createUI(JComponent)::: windows tool bar separator i create i:::return->new->WindowsToolBarSeparatorUI
WindowsToolBarSeparatorUI#getPreferredSize(JComponent)::: windows tool bar separator i get preferred size:::size->getSeparatorSize->if->size->getSize->else->new->Dimension->xp->XPStyle->getXP->if->vertical->getOrientation->part->skin->xp->getSkin->skin->getWidth->skin->getHeight->if->getOrientation->else->return
WindowsToolBarSeparatorUI#getMaximumSize(JComponent)::: windows tool bar separator i get maximum size:::pref->getPreferredSize->if->getOrientation->return->new->Dimension->else->return->new->Dimension
WindowsToolBarSeparatorUI#paint(Graphics, JComponent)::: windows tool bar separator i paint:::vertical->getOrientation->size->c->getSize->xp->XPStyle->getXP->if->part->skin->xp->getSkin->dx->skin->getWidth->dy->skin->getHeight->dw->skin->getWidth->dh->skin->getHeight->skin->paintSkin->else->temp->g->getColor->table->UIManager->getLookAndFeelDefaults->shadow->table->getColor->highlight->table->getColor->if->x->g->setColor->g->drawLine->g->setColor->g->drawLine->else->y->g->setColor->g->drawLine->g->setColor->g->drawLine->g->setColor
WindowsToolBarUI#createUI(JComponent)::: windows tool bar i create i:::return->new->WindowsToolBarUI
WindowsToolBarUI#installDefaults()::: windows tool bar i install defaults:::if->XPStyle->getXP->setRolloverBorders->super->installDefaults
WindowsToolBarUI#createRolloverBorder()::: windows tool bar i create rollover border:::if->XPStyle->getXP->return->new->EmptyBorder->else->return->super->createRolloverBorder
WindowsToolBarUI#createNonRolloverBorder()::: windows tool bar i create non rollover border:::if->XPStyle->getXP->return->new->EmptyBorder->else->return->super->createNonRolloverBorder
WindowsToolBarUI#paint(Graphics, JComponent)::: windows tool bar i paint:::xp->XPStyle->getXP->if->xp->getSkin->c->getWidth->c->getHeight->paintSkin->else->super->paint
WindowsToolBarUI#getRolloverBorder(AbstractButton)::: windows tool bar i get rollover border:::xp->XPStyle->getXP->if->return->xp->WindowsButtonUI->getXPButtonType->getBorder->else->return->super->getRolloverBorder
WindowsTreeUI#createUI(JComponent)::: windows tree i create i:::return->new->WindowsTreeUI
WindowsTreeUI#ensureRowsAreVisible(int, int):::Ensures that the rows identified by beginRow through endRow are visible.:::if->getRowCount->visRect->tree->getVisibleRect->if->scrollBounds->getPathForRow->getPathBounds->if->tree->scrollRectToVisible->else->beginRect->getPathForRow->getPathBounds->if->testRect->beginY->maxY->for->counter->if->return->tree->new->Rectangle->scrollRectToVisible
WindowsTreeUI#createDefaultCellRenderer():::Returns the default cell renderer that is used to do the stamping of each node.:::return->new->WindowsTreeCellRenderer
WindowsTreeUI.ExpandedIcon#createExpandedIcon()::: expanded icon create expanded icon:::return->new->ExpandedIcon
WindowsTreeUI.ExpandedIcon#getSkin(Component)::: expanded icon get skin:::xp->XPStyle->getXP->return->xp->getSkin
WindowsTreeUI.ExpandedIcon#paintIcon(Component, Graphics, int, int)::: expanded icon paint icon:::skin->getSkin->if->skin->paintSkin->return->backgroundColor->c->getBackground->if->g->setColor->else->g->setColor->g->fillRect->g->setColor->g->drawRect->g->setColor->g->drawLine
WindowsTreeUI.ExpandedIcon#getIconWidth()::: expanded icon get icon width:::skin->getSkin->return->skin->getWidth
WindowsTreeUI.ExpandedIcon#getIconHeight()::: expanded icon get icon height:::skin->getSkin->return->skin->getHeight
WindowsTreeUI.CollapsedIcon#createCollapsedIcon()::: collapsed icon create collapsed icon:::return->new->CollapsedIcon
WindowsTreeUI.CollapsedIcon#paintIcon(Component, Graphics, int, int)::: collapsed icon paint icon:::skin->getSkin->if->skin->paintSkin->else->super->paintIcon->g->drawLine
WindowsTreeUI.WindowsTreeCellRenderer#getTreeCellRendererComponent(JTree, Object, boolean, boolean, boolean, int, boolean):::Configures the renderer based on the passed in components:::super->getTreeCellRendererComponent->if->tree->isEnabled->setEnabled->if->getLeafIcon->setDisabledIcon->else->if->getOpenIcon->setDisabledIcon->else->getClosedIcon->setDisabledIcon->else->setEnabled->if->getLeafIcon->setIcon->else->if->getOpenIcon->setIcon->else->getClosedIcon->setIcon->return
XPStyle#invalidateStyle():::Static method for clearing the hashmap and loading the current XP style and theme:::skinPainter->flush
XPStyle#getXP():::Get the singleton instance of this class:::if->toolkit->Toolkit->getDefaultToolkit->toolkit->getDesktopProperty->if->if->themeActive->booleanValue->propertyAction->new->GetPropertyAction->if->AccessController->doPrivileged->ThemeReader->isThemed->UIManager->getLookAndFeel->new->XPStyle->return->ThemeReader->isXPStyleEnabled
XPStyle#isVista()::: style is vista:::xp->XPStyle->getXP->return->xp->isSkinDefined
XPStyle#getString(Component, Part, State, Prop):::Get a named String value from the current style:::return->getTypeEnumName
XPStyle#getTypeEnum(Component, Part, State, Prop)::: style get type enum:::enumValue->ThemeReader->part->getControlName->part->getValue->State->getValue->prop->getValue->getEnum->return->TypeEnum->getTypeEnum
XPStyle#getTypeEnumName(Component, Part, State, Prop)::: style get type enum name:::enumValue->ThemeReader->part->getControlName->part->getValue->State->getValue->prop->getValue->getEnum->if->return->return->TypeEnum->getTypeEnum->getName
XPStyle#getInt(Component, Part, State, Prop, int):::Get a named int value from the current style:::return->ThemeReader->part->getControlName->part->getValue->State->getValue->prop->getValue->getInt
XPStyle#getDimension(Component, Part, State, Prop):::Get a named Dimension value from the current style:::d->ThemeReader->part->getControlName->part->getValue->State->getValue->prop->getValue->getPosition->return->new->Dimension
XPStyle#getPoint(Component, Part, State, Prop):::Get a named Point (e.g:::d->ThemeReader->part->getControlName->part->getValue->State->getValue->prop->getValue->getPosition->return->new->Point->new->Point
XPStyle#getMargin(Component, Part, State, Prop):::Get a named Insets value from the current style:::insets->ThemeReader->part->getControlName->part->getValue->State->getValue->prop->getValue->getThemeMargins->return->new->Insets
XPStyle#getColor(Skin, Prop, Color):::Get a named Color value from the current style:::key->skin->toString->prop->name->part->color->colorMap->get->if->ThemeReader->part->getControlName->part->getValue->State->getValue->prop->getValue->getColor->if->new->ColorUIResource->colorMap->put->return
XPStyle#getColor(Component, Part, State, Prop, Color)::: style get color:::return->new->Skin->getColor
XPStyle#getBorder(Component, Part):::Get a named Border value from the current style:::if->if->return->UIManager->getColor->new->XPFillBorder->else->return->skin->new->Skin->border->borderMap->get->if->bgType->getTypeEnumName->if->equalsIgnoreCase->thickness->getInt->color->getColor->new->XPFillBorder->if->new->XPStatefulFillBorder->else->if->equalsIgnoreCase->m->getMargin->if->if->getBoolean->new->XPImageBorder->else->if->new->EmptyBorder->else->if->new->Insets->new->XPEmptyBorder->else->new->XPEmptyBorder->if->borderMap->put->return
XPStyle.XPFillBorder#getBorderInsets(Component, Insets)::: fill border get border insets:::margin->if->getMargin->else->if->getMargin->else->if->getMargin->return
XPStyle.XPStatefulFillBorder#paintBorder(Component, Graphics, int, int, int, int)::: stateful fill border paint border:::state->if->cb->if->cb->getUI->wcb->cb->getUI->wcb->getXPComboBoxState->getColor->super->paintBorder
XPStyle.XPImageBorder#paintBorder(Component, Graphics, int, int, int, int)::: image border paint border:::skin->paintSkin
XPStyle.XPImageBorder#getBorderInsets(Component, Insets)::: image border get border insets:::margin->borderInsets->skin->getContentMargin->if->new->Insets->if->getMargin->else->if->getMargin->else->if->getMargin->return
XPStyle.XPEmptyBorder#getBorderInsets(Component, Insets)::: empty border get border insets:::super->getBorderInsets->margin->if->m->getMargin->if->c->getParent->else->else->if->getMargin->else->if->getMargin->if->return
XPStyle#isSkinDefined(Component, Part)::: style is skin defined:::return->part->getValue->ThemeReader->part->getControlName->part->getValue->isThemePartDefined
XPStyle#getSkin(Component, Part):::Get a Skin object from the current style for a named part (component type):::return->new->Skin
XPStyle#getThemeTransitionDuration(Component, Part, State, State, Prop)::: style get theme transition duration:::return->ThemeReader->part->getControlName->part->getValue->State->getValue->State->getValue->prop->getValue->getThemeTransitionDuration
XPStyle.Skin#getContentMargin()::: skin get content margin:::boundingWidth->boundingHeight->insets->ThemeReader->part->getControlName->part->getValue->getThemeBackgroundContentMargins->return->new->Insets
XPStyle.Skin#haveToSwitchStates()::: skin have to switch states:::return
XPStyle.Skin#switchStates(boolean)::: skin switch states:::
XPStyle.Skin#getWidth(State)::: skin get width:::if->getPartSize->return
XPStyle.Skin#getWidth()::: skin get width:::return->getWidth
XPStyle.Skin#getHeight(State)::: skin get height:::if->getPartSize->return
XPStyle.Skin#getHeight()::: skin get height:::return->getHeight
XPStyle.Skin#toString()::: skin to string:::return
XPStyle.Skin#equals(Object)::: skin equals:::return->equals
XPStyle.Skin#hashCode()::: skin hash code:::return->string->hashCode
XPStyle.Skin#paintSkin(Graphics, int, int, State):::Paint a skin at x, y.:::if->getWidth->getHeight->paintSkin
XPStyle.Skin#paintSkin(Graphics, Rectangle, State):::Paint a skin in an area defined by a rectangle.:::paintSkin
XPStyle.Skin#paintSkin(Graphics, int, int, int, int, State):::Paint a skin at a defined position and size  This method supports animation.:::if->XPStyle->getXP->return->if->ThemeReader->isGetThemeTransitionDurationDefined->SwingUtilities->getAncestorOfClass->AnimationController->paintSkin->else->paintSkinRaw
XPStyle.Skin#paintSkinRaw(Graphics, int, int, int, int, State):::Paint a skin at a defined position and size:::if->XPStyle->getXP->return->skinPainter->paint
XPStyle.Skin#paintSkin(Graphics, int, int, int, int, State, boolean):::Paint a skin at a defined position and size:::if->XPStyle->getXP->return->if->getTypeEnumName->equals->return->skinPainter->paint
XPStyle.SkinPainter#flush()::: skin painter flush:::super->flush
XPStyle.SkinPainter#paintToImage(Component, Image, Graphics, int, int, Object[])::: skin painter paint to image:::skin->part->state->if->if->bi->bi->getWidth->bi->getHeight->raster->bi->getRaster->dbi->raster->getDataBuffer->ThemeReader->SunWritableRaster->stealData->part->getControlName->part->getValue->State->getValue->paintBackground->SunWritableRaster->markDirty
XPStyle.SkinPainter#createImage(Component, int, int, GraphicsConfiguration, Object[])::: skin painter create image:::return->new->BufferedImage
XPStyle.GlyphButton#isFocusTraversable()::: glyph button is focus traversable:::return
XPStyle.GlyphButton#getState()::: glyph button get state:::state->if->isEnabled->else->if->getModel->isPressed->else->if->getModel->isRollover->return
XPStyle.GlyphButton#paintComponent(Graphics)::: glyph button paint component:::if->XPStyle->getXP->return->d->getSize->skin->getState->paintSkin
XPStyle.GlyphButton#setPart(Component, Part)::: glyph button set part:::xp->getXP->xp->getSkin->revalidate->repaint
XPStyle.GlyphButton#paintBorder(Graphics)::: glyph button paint border:::
XPStyle#getBoolean(Component, Part, State, Prop)::: style get boolean:::return->ThemeReader->part->getControlName->part->getValue->State->getValue->prop->getValue->getBoolean
XPStyle#getPartSize(Part, State)::: style get part size:::return->ThemeReader->part->getControlName->part->getValue->State->getValue->getPartSize
XPStyle#getSysBoolean(Prop)::: style get sys boolean:::return->ThemeReader->prop->getValue->getSysBoolean
