BadAddressTreeNodeAdapter#generateMessage(long, String)::: bad address tree node adapter generate message:::return->Long->toHexString
BadAddressTreeNodeAdapter#getChildCount()::: bad address tree node adapter get child count:::return
BadAddressTreeNodeAdapter#getChild(int)::: bad address tree node adapter get child:::throw->new->RuntimeException
BadAddressTreeNodeAdapter#isLeaf()::: bad address tree node adapter is leaf:::return
BadAddressTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: bad address tree node adapter get index of child:::throw->new->RuntimeException
BadAddressTreeNodeAdapter#getValue()::: bad address tree node adapter get value:::return
BooleanTreeNodeAdapter#getChildCount()::: boolean tree node adapter get child count:::return
BooleanTreeNodeAdapter#getChild(int)::: boolean tree node adapter get child:::return
BooleanTreeNodeAdapter#isLeaf()::: boolean tree node adapter is leaf:::return
BooleanTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: boolean tree node adapter get index of child:::return
BooleanTreeNodeAdapter#getValue()::: boolean tree node adapter get value:::return
CharTreeNodeAdapter#getChildCount()::: char tree node adapter get child count:::return
CharTreeNodeAdapter#getChild(int)::: char tree node adapter get child:::return
CharTreeNodeAdapter#isLeaf()::: char tree node adapter is leaf:::return
CharTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: char tree node adapter get index of child:::return
CharTreeNodeAdapter#getValue()::: char tree node adapter get value:::return
CStringTreeNodeAdapter#getChildCount()::: string tree node adapter get child count:::return
CStringTreeNodeAdapter#getChild(int)::: string tree node adapter get child:::return
CStringTreeNodeAdapter#isLeaf()::: string tree node adapter is leaf:::return
CStringTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: string tree node adapter get index of child:::return
CStringTreeNodeAdapter#getValue()::: string tree node adapter get value:::return
CTypeTreeNodeAdapter#collectFields(Type, ArrayList, boolean, boolean)::: type tree node adapter collect fields:::supertype->type->getSuperclass->if->collectFields->i->type->getFields->while->i->hasNext->f->i->next->if->f->isStatic->list->new->CTypeFieldIdentifier->add
CTypeTreeNodeAdapter#getFields()::: type tree node adapter get fields:::if->f->new->ArrayList->collectFields->f->new->CTypeFieldIdentifierArr->toArray->return
CTypeTreeNodeAdapter.CTypeFieldIdentifier#getField()::: type field identifier get field:::return
CTypeTreeNodeAdapter.CTypeFieldIdentifier#getName()::: type field identifier get name:::return->field->getType->getName->holder->getName->field->getName
CTypeTreeNodeAdapter#getChildCount()::: type tree node adapter get child count:::return->getFields
CTypeTreeNodeAdapter#getChild(int)::: type tree node adapter get child:::cf->getFields->f->cf->getField->t->f->getType->try->if->t->isOopType->handle->if->f->isStatic->f->getOopHandle->else->f->getOopHandle->try->oop->VM->getVM->getObjectHeap->newOop->return->getTreeTableMode->new->OopTreeNodeAdapter->catch->return->new->CTypeFieldIdentifier->getTreeTableMode->new->BadAddressTreeNodeAdapter->return->new->CTypeFieldIdentifier->getTreeTableMode->new->BadAddressTreeNodeAdapter->finally->else->if->t->isCIntegerType->value->if->f->isStatic->f->getCInteger->else->f->getCInteger->return->getTreeTableMode->new->LongTreeNodeAdapter->else->if->t->isJavaPrimitiveType->isStatic->f->isStatic->if->value->f->getJByte->f->getJByte->return->getTreeTableMode->new->LongTreeNodeAdapter->else->if->value->f->getJShort->f->getJShort->return->getTreeTableMode->new->LongTreeNodeAdapter->else->if->value->f->getJInt->f->getJInt->return->getTreeTableMode->new->LongTreeNodeAdapter->else->if->value->f->getJLong->f->getJLong->return->getTreeTableMode->new->LongTreeNodeAdapter->else->if->value->f->getJChar->f->getJChar->return->getTreeTableMode->new->CharTreeNodeAdapter->else->if->value->f->getJBoolean->f->getJBoolean->return->getTreeTableMode->new->BooleanTreeNodeAdapter->else->if->value->f->getJFloat->f->getJFloat->return->getTreeTableMode->new->DoubleTreeNodeAdapter->else->if->value->f->getJDouble->f->getJDouble->return->getTreeTableMode->new->DoubleTreeNodeAdapter->else->throw->t->getName->new->RuntimeException->else->if->t->isPointerType->ptr->if->f->isStatic->f->getAddress->else->f->getAddress->if->t->isCStringType->return->CStringUtilities->getString->new->CStringTreeNodeAdapter->return->getTargetType->getTreeTableMode->new->CTypeTreeNodeAdapter->else->if->f->isStatic->return->f->getStaticFieldAddress->f->getType->getTreeTableMode->new->CTypeTreeNodeAdapter->else->return->addr->f->getOffset->addOffsetTo->f->getType->getTreeTableMode->new->CTypeTreeNodeAdapter->catch->return->e->getAddress->new->CTypeFieldIdentifier->getTreeTableMode->new->BadAddressTreeNodeAdapter->finally
CTypeTreeNodeAdapter#isLeaf()::: type tree node adapter is leaf:::return->getFields
CTypeTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: type tree node adapter get index of child:::id->getID->f->getFields->for->i->return
CTypeTreeNodeAdapter#getValue()::: type tree node adapter get value:::if->return->type->getName->else->return
DoubleTreeNodeAdapter#getChildCount()::: double tree node adapter get child count:::return
DoubleTreeNodeAdapter#getChild(int)::: double tree node adapter get child:::return
DoubleTreeNodeAdapter#isLeaf()::: double tree node adapter is leaf:::return
DoubleTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: double tree node adapter get index of child:::return
DoubleTreeNodeAdapter#getValue()::: double tree node adapter get value:::return->Double->toString
FieldTreeNodeAdapter#getID()::: field tree node adapter get d:::return
FieldTreeNodeAdapter#getTreeTableMode():::Defaults to false in subclasses:::return
FieldTreeNodeAdapter#getName()::: field tree node adapter get name:::if->getID->return->getID->getName->return
FieldTreeNodeAdapter#toString()::: field tree node adapter to string:::if->return->getName->else->if->getID->return->getName->getValue->else->return->getValue
FloatTreeNodeAdapter#getChildCount()::: float tree node adapter get child count:::return
FloatTreeNodeAdapter#getChild(int)::: float tree node adapter get child:::return
FloatTreeNodeAdapter#isLeaf()::: float tree node adapter is leaf:::return
FloatTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: float tree node adapter get index of child:::return
FloatTreeNodeAdapter#getValue()::: float tree node adapter get value:::return->Float->toString
LongTreeNodeAdapter#setHexFormat(boolean)::: long tree node adapter set hex format:::
LongTreeNodeAdapter#getHexFormat()::: long tree node adapter get hex format:::return
LongTreeNodeAdapter#getChildCount()::: long tree node adapter get child count:::return
LongTreeNodeAdapter#getChild(int)::: long tree node adapter get child:::return
LongTreeNodeAdapter#isLeaf()::: long tree node adapter is leaf:::return
LongTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: long tree node adapter get index of child:::return
LongTreeNodeAdapter#getValue()::: long tree node adapter get value:::if->return->Long->toHexString->else->return->Long->toString
MetadataTreeNodeAdapter#getMetadata()::: metadata tree node adapter get metadata:::return
MetadataTreeNodeAdapter#getChildCount()::: metadata tree node adapter get child count:::if->return->c->new->Counter->metadata->iterate->return->c->getNumFields->VM->getVM->getRevPtrs
MetadataTreeNodeAdapter#getChild(int)::: metadata tree node adapter get child:::if->return->f->new->Fetcher->metadata->iterate->return->f->getChild
MetadataTreeNodeAdapter#isLeaf()::: metadata tree node adapter is leaf:::return
MetadataTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: metadata tree node adapter get index of child:::if->return->id->getID->f->new->Finder->metadata->iterate->return->f->getIndex->VM->getVM->getRevPtrs
MetadataTreeNodeAdapter#getValue()::: metadata tree node adapter get value:::if->bos->new->ByteArrayOutputStream->metadata->new->PrintStream->printValueOn->return->bos->toString->return
MetadataTreeNodeAdapter.Counter#getNumFields()::: counter get num fields:::return
MetadataTreeNodeAdapter.Counter#prologue()::: counter prologue:::
MetadataTreeNodeAdapter.Counter#doMetadata(MetadataField, boolean)::: counter do metadata:::
MetadataTreeNodeAdapter.Counter#doOop(OopField, boolean)::: counter do oop:::
MetadataTreeNodeAdapter.Counter#doByte(ByteField, boolean)::: counter do byte:::
MetadataTreeNodeAdapter.Counter#doChar(CharField, boolean)::: counter do char:::
MetadataTreeNodeAdapter.Counter#doBoolean(BooleanField, boolean)::: counter do boolean:::
MetadataTreeNodeAdapter.Counter#doShort(ShortField, boolean)::: counter do short:::
MetadataTreeNodeAdapter.Counter#doInt(IntField, boolean)::: counter do int:::
MetadataTreeNodeAdapter.Counter#doLong(LongField, boolean)::: counter do long:::
MetadataTreeNodeAdapter.Counter#doFloat(FloatField, boolean)::: counter do float:::
MetadataTreeNodeAdapter.Counter#doDouble(DoubleField, boolean)::: counter do double:::
MetadataTreeNodeAdapter.Counter#doCInt(CIntField, boolean)::: counter do int:::
MetadataTreeNodeAdapter.Fetcher#getChild()::: fetcher get child:::return
MetadataTreeNodeAdapter.Fetcher#prologue()::: fetcher prologue:::
MetadataTreeNodeAdapter.Fetcher#doMetadata(MetadataField, boolean)::: fetcher do metadata:::if->try->field->getObj->getValue->field->getID->getTreeTableMode->new->MetadataTreeNodeAdapter->catch->getObj->getAddress->field->getOffset->getAddressAt->getTreeTableMode->new->BadAddressTreeNodeAdapter->getObj->getAddress->field->getOffset->getAddressAt->getTreeTableMode->new->BadAddressTreeNodeAdapter->finally
MetadataTreeNodeAdapter.Fetcher#doOop(OopField, boolean)::: fetcher do oop:::if->try->field->getObj->getValue->field->getID->getTreeTableMode->new->OopTreeNodeAdapter->catch->field->getObj->getValueAsOopHandle->getTreeTableMode->new->BadAddressTreeNodeAdapter->field->getObj->getValueAsOopHandle->getTreeTableMode->new->BadAddressTreeNodeAdapter->finally
MetadataTreeNodeAdapter.Fetcher#doByte(ByteField, boolean)::: fetcher do byte:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
MetadataTreeNodeAdapter.Fetcher#doChar(CharField, boolean)::: fetcher do char:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->CharTreeNodeAdapter
MetadataTreeNodeAdapter.Fetcher#doBoolean(BooleanField, boolean)::: fetcher do boolean:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->BooleanTreeNodeAdapter
MetadataTreeNodeAdapter.Fetcher#doShort(ShortField, boolean)::: fetcher do short:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
MetadataTreeNodeAdapter.Fetcher#doInt(IntField, boolean)::: fetcher do int:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
MetadataTreeNodeAdapter.Fetcher#doLong(LongField, boolean)::: fetcher do long:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
MetadataTreeNodeAdapter.Fetcher#doFloat(FloatField, boolean)::: fetcher do float:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->FloatTreeNodeAdapter
MetadataTreeNodeAdapter.Fetcher#doDouble(DoubleField, boolean)::: fetcher do double:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->DoubleTreeNodeAdapter
MetadataTreeNodeAdapter.Fetcher#doCInt(CIntField, boolean)::: fetcher do int:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
MetadataTreeNodeAdapter.Finder#getIndex():::Returns -1 if not found:::return
MetadataTreeNodeAdapter.Finder#prologue()::: finder prologue:::
MetadataTreeNodeAdapter.Finder#doMetadata(MetadataField, boolean)::: finder do metadata:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doOop(OopField, boolean)::: finder do oop:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doByte(ByteField, boolean)::: finder do byte:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doChar(CharField, boolean)::: finder do char:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doBoolean(BooleanField, boolean)::: finder do boolean:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doShort(ShortField, boolean)::: finder do short:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doInt(IntField, boolean)::: finder do int:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doLong(LongField, boolean)::: finder do long:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doFloat(FloatField, boolean)::: finder do float:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doDouble(DoubleField, boolean)::: finder do double:::if->field->getID->equals
MetadataTreeNodeAdapter.Finder#doCInt(CIntField, boolean)::: finder do int:::if->field->getID->equals
OopTreeNodeAdapter#getOop()::: oop tree node adapter get oop:::return
OopTreeNodeAdapter#getChildCount()::: oop tree node adapter get child count:::if->return->c->new->Counter->oop->iterate->return->c->getNumFields->VM->getVM->getRevPtrs
OopTreeNodeAdapter#getChild(int)::: oop tree node adapter get child:::if->return->if->VM->getVM->getRevPtrs->if->return->getTreeTableMode->new->RevPtrsTreeNodeAdapter->else->f->new->Fetcher->oop->iterate->return->f->getChild
OopTreeNodeAdapter#isLeaf()::: oop tree node adapter is leaf:::return
OopTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: oop tree node adapter get index of child:::if->return->id->getID->f->new->Finder->oop->iterate->return->f->getIndex->VM->getVM->getRevPtrs
OopTreeNodeAdapter#getValue()::: oop tree node adapter get value:::if->bos->new->ByteArrayOutputStream->Oop->new->PrintStream->printOopValueOn->return->bos->toString->return
OopTreeNodeAdapter.Counter#getNumFields()::: counter get num fields:::return
OopTreeNodeAdapter.Counter#prologue()::: counter prologue:::
OopTreeNodeAdapter.Counter#doMetadata(MetadataField, boolean)::: counter do metadata:::
OopTreeNodeAdapter.Counter#doOop(OopField, boolean)::: counter do oop:::
OopTreeNodeAdapter.Counter#doByte(ByteField, boolean)::: counter do byte:::
OopTreeNodeAdapter.Counter#doChar(CharField, boolean)::: counter do char:::
OopTreeNodeAdapter.Counter#doBoolean(BooleanField, boolean)::: counter do boolean:::
OopTreeNodeAdapter.Counter#doShort(ShortField, boolean)::: counter do short:::
OopTreeNodeAdapter.Counter#doInt(IntField, boolean)::: counter do int:::
OopTreeNodeAdapter.Counter#doLong(LongField, boolean)::: counter do long:::
OopTreeNodeAdapter.Counter#doFloat(FloatField, boolean)::: counter do float:::
OopTreeNodeAdapter.Counter#doDouble(DoubleField, boolean)::: counter do double:::
OopTreeNodeAdapter.Counter#doCInt(CIntField, boolean)::: counter do int:::
OopTreeNodeAdapter.Fetcher#getChild()::: fetcher get child:::return
OopTreeNodeAdapter.Fetcher#prologue()::: fetcher prologue:::
OopTreeNodeAdapter.Fetcher#doMetadata(MetadataField, boolean)::: fetcher do metadata:::if->try->field->getObj->getValue->field->getID->getTreeTableMode->new->MetadataTreeNodeAdapter->catch->getObj->getHandle->field->getOffset->getAddressAt->getTreeTableMode->new->BadAddressTreeNodeAdapter->getObj->getHandle->field->getOffset->getAddressAt->getTreeTableMode->new->BadAddressTreeNodeAdapter->finally
OopTreeNodeAdapter.Fetcher#doOop(OopField, boolean)::: fetcher do oop:::if->try->field->getObj->getValue->field->getID->getTreeTableMode->new->OopTreeNodeAdapter->catch->field->getObj->getValueAsOopHandle->getTreeTableMode->new->BadAddressTreeNodeAdapter->field->getObj->getValueAsOopHandle->getTreeTableMode->new->BadAddressTreeNodeAdapter->finally
OopTreeNodeAdapter.Fetcher#doByte(ByteField, boolean)::: fetcher do byte:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
OopTreeNodeAdapter.Fetcher#doChar(CharField, boolean)::: fetcher do char:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->CharTreeNodeAdapter
OopTreeNodeAdapter.Fetcher#doBoolean(BooleanField, boolean)::: fetcher do boolean:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->BooleanTreeNodeAdapter
OopTreeNodeAdapter.Fetcher#doShort(ShortField, boolean)::: fetcher do short:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
OopTreeNodeAdapter.Fetcher#doInt(IntField, boolean)::: fetcher do int:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
OopTreeNodeAdapter.Fetcher#doLong(LongField, boolean)::: fetcher do long:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
OopTreeNodeAdapter.Fetcher#doFloat(FloatField, boolean)::: fetcher do float:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->FloatTreeNodeAdapter
OopTreeNodeAdapter.Fetcher#doDouble(DoubleField, boolean)::: fetcher do double:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->DoubleTreeNodeAdapter
OopTreeNodeAdapter.Fetcher#doCInt(CIntField, boolean)::: fetcher do int:::if->field->getObj->getValue->field->getID->getTreeTableMode->new->LongTreeNodeAdapter
OopTreeNodeAdapter.Finder#getIndex():::Returns -1 if not found:::return
OopTreeNodeAdapter.Finder#prologue()::: finder prologue:::
OopTreeNodeAdapter.Finder#doOop(OopField, boolean)::: finder do oop:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doByte(ByteField, boolean)::: finder do byte:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doChar(CharField, boolean)::: finder do char:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doBoolean(BooleanField, boolean)::: finder do boolean:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doShort(ShortField, boolean)::: finder do short:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doInt(IntField, boolean)::: finder do int:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doLong(LongField, boolean)::: finder do long:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doFloat(FloatField, boolean)::: finder do float:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doDouble(DoubleField, boolean)::: finder do double:::if->field->getID->equals
OopTreeNodeAdapter.Finder#doCInt(CIntField, boolean)::: finder do int:::if->field->getID->equals
RevPtrsTreeNodeAdapter#getChildCount()::: rev ptrs tree node adapter get child count:::return->children->size
RevPtrsTreeNodeAdapter#getChild(int)::: rev ptrs tree node adapter get child:::lpe->children->get->ifid->new->IndexableFieldIdentifier->oop->lpe->getObj->if->return->getTreeTableMode->new->OopTreeNodeAdapter->else->nfi->lpe->getField->return->nfi->getName->getTreeTableMode->new->RootTreeNodeAdapter
RevPtrsTreeNodeAdapter#isLeaf()::: rev ptrs tree node adapter is leaf:::return
RevPtrsTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: rev ptrs tree node adapter get index of child:::id->getID->ifid->return->ifid->getIndex
RevPtrsTreeNodeAdapter#getName()::: rev ptrs tree node adapter get name:::return
RevPtrsTreeNodeAdapter#getValue()::: rev ptrs tree node adapter get value:::return
RootTreeNodeAdapter#getChildCount()::: root tree node adapter get child count:::return
RootTreeNodeAdapter#getChild(int)::: root tree node adapter get child:::return
RootTreeNodeAdapter#isLeaf()::: root tree node adapter is leaf:::return
RootTreeNodeAdapter#getIndexOfChild(SimpleTreeNode)::: root tree node adapter get index of child:::return
RootTreeNodeAdapter#getValue()::: root tree node adapter get value:::return
SimpleTreeGroupNode#getChildCount()::: simple tree group node get child count:::return->children->size
SimpleTreeGroupNode#getChild(int)::: simple tree group node get child:::return->children->get
SimpleTreeGroupNode#addChild(SimpleTreeNode)::: simple tree group node add child:::children->add
SimpleTreeGroupNode#removeChild(int)::: simple tree group node remove child:::return->children->remove
SimpleTreeGroupNode#removeAllChildren()::: simple tree group node remove all children:::children->clear
SimpleTreeGroupNode#isLeaf()::: simple tree group node is leaf:::return
SimpleTreeGroupNode#getIndexOfChild(SimpleTreeNode)::: simple tree group node get index of child:::return->children->indexOf
SimpleTreeGroupNode#getName()::: simple tree group node get name:::return
SimpleTreeGroupNode#getValue()::: simple tree group node get value:::return
SimpleTreeModel#setRoot(SimpleTreeNode)::: simple tree model set root:::if->else->fireTreeStructureChanged
SimpleTreeModel#getRoot()::: simple tree model get root:::return
SimpleTreeModel#getChild(Object, int)::: simple tree model get child:::return->getChild
SimpleTreeModel#getChildCount(Object)::: simple tree model get child count:::return->getChildCount
SimpleTreeModel#isLeaf(Object)::: simple tree model is leaf:::if->return->return->isLeaf
SimpleTreeModel#valueForPathChanged(TreePath, Object):::Unsupported operation:::throw->new->UnsupportedOperationException
SimpleTreeModel#getIndexOfChild(Object, Object)::: simple tree model get index of child:::return->getIndexOfChild
SimpleTreeModel#addTreeModelListener(TreeModelListener)::: simple tree model add tree model listener:::listeners->add
SimpleTreeModel#removeTreeModelListener(TreeModelListener)::: simple tree model remove tree model listener:::listeners->remove
SimpleTreeModel#fireTreeStructureChanged()::: simple tree model fire tree structure changed:::e->getRoot->new->ObjectArr->getRoot->new->TreeModelEvent->for->iter->listeners->iterator->iter->hasNext
SimpleTreeNode#getChildCount()::: simple tree node get child count:::
SimpleTreeNode#getChild(int)::: simple tree node get child:::
SimpleTreeNode#isLeaf()::: simple tree node is leaf:::
SimpleTreeNode#getIndexOfChild(SimpleTreeNode)::: simple tree node get index of child:::
SimpleTreeNode#getName():::TreeTable support: get name of the node:::
SimpleTreeNode#getValue():::TreeTable support: get value of the node:::
