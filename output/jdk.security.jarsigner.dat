JarSigner.Builder#digestAlgorithm(String):::Sets the digest algorithm:::MessageDigest->Objects->requireNonNull->getInstance->new->StringArr->return
JarSigner.Builder#digestAlgorithm(String, Provider):::Sets the digest algorithm from the specified provider:::MessageDigest->Objects->requireNonNull->Objects->requireNonNull->getInstance->new->StringArr->return
JarSigner.Builder#signatureAlgorithm(String):::Sets the signature algorithm:::Signature->Objects->requireNonNull->getInstance->AlgorithmId->privateKey->getAlgorithm->checkKeyAndSigAlgMatch->return
JarSigner.Builder#signatureAlgorithm(String, Provider):::Sets the signature algorithm from the specified provider:::Signature->Objects->requireNonNull->Objects->requireNonNull->getInstance->AlgorithmId->privateKey->getAlgorithm->checkKeyAndSigAlgMatch->return
JarSigner.Builder#tsa(URI):::Sets the URI of the Time Stamping Authority (TSA).:::Objects->requireNonNull->return
JarSigner.Builder#signerName(String):::Sets the signer name:::if->name->isEmpty->name->length->throw->new->IllegalArgumentException->name->toUpperCase->for->j->name->length->return
JarSigner.Builder#eventHandler(BiConsumer):::Sets en event handler that will be triggered when a JarEntry is to be added, signed, or updated during the signing process:::Objects->requireNonNull->return
JarSigner.Builder#setProperty(String, String):::Sets an additional implementation-specific property indicated by the specified key.:::Objects->requireNonNull->Objects->requireNonNull->switch->key->toLowerCase->try->MessageDigest->getInstance->catch->throw->new->IllegalArgumentException->finally->break->break->switch->break->break->throw->new->IllegalArgumentException->break->switch->break->break->throw->new->IllegalArgumentException->break->break->break->throw->new->UnsupportedOperationException->return
JarSigner.Builder#getDefaultDigestAlgorithm():::Gets the default digest algorithm.:::return
JarSigner.Builder#getDefaultSignatureAlgorithm(PrivateKey):::Gets the default signature algorithm for a private key:::return->AlgorithmId->Objects->requireNonNull->getDefaultSigAlgForKey
JarSigner.Builder#build():::Builds a JarSigner object from the parameters set by the setter methods:::return->new->JarSigner
JarSigner#sign(ZipFile, OutputStream):::Signs a file into an OutputStream:::try->Objects->requireNonNull->Objects->requireNonNull->sign0->catch->throw->new->JarSignerException->throw->new->JarSignerException->throw->new->JarSignerException->throw->new->JarSignerException->finally
JarSigner#getDigestAlgorithm():::Returns the digest algorithm for this JarSigner:::return
JarSigner#getSignatureAlgorithm():::Returns the signature algorithm for this JarSigner:::return
JarSigner#getTsa():::Returns the URI of the Time Stamping Authority (TSA).:::return
JarSigner#getSignerName():::Returns the signer name of this JarSigner:::return
JarSigner#getProperty(String):::Returns the value of an additional implementation-specific property indicated by the specified key:::Objects->requireNonNull->switch->key->toLowerCase->return->return->return->Boolean->toString->return->Boolean->toString->return->return->throw->new->UnsupportedOperationException
