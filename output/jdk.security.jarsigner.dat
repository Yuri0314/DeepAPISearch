jdk.security.jarsigner.JarSigner.Builder#digestAlgorithm(String)->Builder:::Sets the digest algorithm
jdk.security.jarsigner.JarSigner.Builder#digestAlgorithm(String, Provider)->Builder:::Sets the digest algorithm from the specified provider
jdk.security.jarsigner.JarSigner.Builder#signatureAlgorithm(String)->Builder:::Sets the signature algorithm
jdk.security.jarsigner.JarSigner.Builder#signatureAlgorithm(String, Provider)->Builder:::Sets the signature algorithm from the specified provider
jdk.security.jarsigner.JarSigner.Builder#tsa(URI)->Builder:::Sets the URI of the Time Stamping Authority (TSA).
jdk.security.jarsigner.JarSigner.Builder#signerName(String)->Builder:::Sets the signer name
jdk.security.jarsigner.JarSigner.Builder#eventHandler(BiConsumer)->Builder:::Sets en event handler that will be triggered when a JarEntry is to be added, signed, or updated during the signing process
jdk.security.jarsigner.JarSigner.Builder#setProperty(String, String)->Builder:::Sets an additional implementation-specific property indicated by the specified key.
jdk.security.jarsigner.JarSigner.Builder#getDefaultDigestAlgorithm()->String:::Gets the default digest algorithm.
jdk.security.jarsigner.JarSigner.Builder#getDefaultSignatureAlgorithm(PrivateKey)->String:::Gets the default signature algorithm for a private key
jdk.security.jarsigner.JarSigner.Builder#build()->JarSigner:::Builds a JarSigner object from the parameters set by the setter methods
jdk.security.jarsigner.JarSigner#sign(ZipFile, OutputStream)->void:::Signs a file into an OutputStream
jdk.security.jarsigner.JarSigner#getDigestAlgorithm()->String:::Returns the digest algorithm for this JarSigner
jdk.security.jarsigner.JarSigner#getSignatureAlgorithm()->String:::Returns the signature algorithm for this JarSigner
jdk.security.jarsigner.JarSigner#getTsa()->URI:::Returns the URI of the Time Stamping Authority (TSA).
jdk.security.jarsigner.JarSigner#getSignerName()->String:::Returns the signer name of this JarSigner
jdk.security.jarsigner.JarSigner#getProperty(String)->String:::Returns the value of an additional implementation-specific property indicated by the specified key
jdk.security.jarsigner.JarSigner.SignatureFile#write(OutputStream)->void::: signature file write
jdk.security.jarsigner.JarSigner.SignatureFile#getMetaName()->String::: signature file get meta name
jdk.security.jarsigner.JarSigner.SignatureFile#getBlockName(PrivateKey)->String::: signature file get block name
jdk.security.jarsigner.JarSigner.SignatureFile#generateBlock(ContentSignerParameters, boolean, ContentSigner)->byte[]::: signature file generate block
jdk.security.jarsigner.JarSigner.JarSignerParameters#getCommandLine()->String[]::: jar signer parameters get command line
jdk.security.jarsigner.JarSigner.JarSignerParameters#getTimestampingAuthority()->URI::: jar signer parameters get timestamping authority
jdk.security.jarsigner.JarSigner.JarSignerParameters#getTimestampingAuthorityCertificate()->X509Certificate::: jar signer parameters get timestamping authority certificate
jdk.security.jarsigner.JarSigner.JarSignerParameters#getTSAPolicyID()->String::: jar signer parameters get policy d
jdk.security.jarsigner.JarSigner.JarSignerParameters#getTSADigestAlg()->String::: jar signer parameters get digest alg
jdk.security.jarsigner.JarSigner.JarSignerParameters#getSignature()->byte[]::: jar signer parameters get signature
jdk.security.jarsigner.JarSigner.JarSignerParameters#getSignatureAlgorithm()->String::: jar signer parameters get signature algorithm
jdk.security.jarsigner.JarSigner.JarSignerParameters#getSignerCertificateChain()->X509Certificate[]::: jar signer parameters get signer certificate chain
jdk.security.jarsigner.JarSigner.JarSignerParameters#getContent()->byte[]::: jar signer parameters get content
jdk.security.jarsigner.JarSigner.JarSignerParameters#getSource()->ZipFile::: jar signer parameters get source
