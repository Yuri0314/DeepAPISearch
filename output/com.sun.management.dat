GarbageCollectionNotificationInfo#getGcName():::Returns the name of the garbage collector used to perform the collection:::return
GarbageCollectionNotificationInfo#getGcAction():::Returns the action performed by the garbage collector:::return
GarbageCollectionNotificationInfo#getGcCause():::Returns the cause of the garbage collection:::return
GarbageCollectionNotificationInfo#getGcInfo():::Returns the GC information related to the last garbage collection:::return
GarbageCollectionNotificationInfo#from(CompositeData):::Returns a GarbageCollectionNotificationInfo object represented by the given CompositeData:::if->return->if->return->getGarbageCollectionNotifInfo->else->return->new->GarbageCollectionNotificationInfo
GarbageCollectorMXBean#getLastGcInfo():::Returns the GC information about the most recent GC:::
GcInfo#getId():::Returns the identifier of this garbage collection which is the number of collections that this collector has done.:::return
GcInfo#getStartTime():::Returns the start time of this GC in milliseconds since the Java virtual machine was started.:::return
GcInfo#getEndTime():::Returns the end time of this GC in milliseconds since the Java virtual machine was started.:::return
GcInfo#getDuration():::Returns the elapsed time of this GC in milliseconds.:::return
GcInfo#getMemoryUsageBeforeGc():::Returns the memory usage of all memory pools at the beginning of this GC:::return->Collections->unmodifiableMap
GcInfo#getMemoryUsageAfterGc():::Returns the memory usage of all memory pools at the end of this GC:::return->Collections->unmodifiableMap
GcInfo#from(CompositeData):::Returns a GcInfo object represented by the given CompositeData:::if->return->if->return->getGcInfo->else->return->new->GcInfo
GcInfo#toCompositeData(CompositeType):::Return the CompositeData representation of this GcInfo, including any GC-specific attributes:::return
HotSpotDiagnosticMXBean#dumpHeap(String, boolean):::Dumps the heap to the outputFile file in the same format as the hprof heap dump:::
HotSpotDiagnosticMXBean#getDiagnosticOptions():::Returns a list of VMOption objects for all diagnostic options:::
HotSpotDiagnosticMXBean#getVMOption(String):::Returns a VMOption object for a VM option of the given name.:::
HotSpotDiagnosticMXBean#setVMOption(String, String):::Sets a VM option of the given name to the specified value:::
OperatingSystemMXBean#getCommittedVirtualMemorySize():::Returns the amount of virtual memory that is guaranteed to be available to the running process in bytes, or -1 if this operation is not supported.:::
OperatingSystemMXBean#getTotalSwapSpaceSize():::Returns the total amount of swap space in bytes.:::
OperatingSystemMXBean#getFreeSwapSpaceSize():::Returns the amount of free swap space in bytes.:::
OperatingSystemMXBean#getProcessCpuTime():::Returns the CPU time used by the process on which the Java virtual machine is running in nanoseconds:::
OperatingSystemMXBean#getFreePhysicalMemorySize():::Returns the amount of free physical memory in bytes.:::
OperatingSystemMXBean#getTotalPhysicalMemorySize():::Returns the total amount of physical memory in bytes.:::
OperatingSystemMXBean#getSystemCpuLoad():::Returns the "recent cpu usage" for the whole system:::
OperatingSystemMXBean#getProcessCpuLoad():::Returns the "recent cpu usage" for the Java Virtual Machine process:::
ThreadMXBean#getThreadCpuTime(long[]):::Returns the total CPU time for each thread whose ID is in the input array ids in nanoseconds:::
ThreadMXBean#getThreadUserTime(long[]):::Returns the CPU time that each thread whose ID is in the input array ids has executed in user mode in nanoseconds:::
ThreadMXBean#getThreadAllocatedBytes(long):::Returns an approximation of the total amount of memory, in bytes, allocated in heap memory for the thread of the specified ID:::
ThreadMXBean#getThreadAllocatedBytes(long[]):::Returns an approximation of the total amount of memory, in bytes, allocated in heap memory for each thread whose ID is in the input array ids:::
ThreadMXBean#isThreadAllocatedMemorySupported():::Tests if the Java virtual machine implementation supports thread memory allocation measurement.:::
ThreadMXBean#isThreadAllocatedMemoryEnabled():::Tests if thread memory allocation measurement is enabled.:::
ThreadMXBean#setThreadAllocatedMemoryEnabled(boolean):::Enables or disables thread memory allocation measurement:::
UnixOperatingSystemMXBean#getOpenFileDescriptorCount():::Returns the number of open file descriptors.:::
UnixOperatingSystemMXBean#getMaxFileDescriptorCount():::Returns the maximum number of file descriptors.:::
VMOption#getName():::Returns the name of this VM option.:::return
VMOption#getValue():::Returns the value of this VM option at the time when this VMOption was created:::return
VMOption#getOrigin():::Returns the origin of the value of this VM option:::return
VMOption#isWriteable():::Tests if this VM option is writeable:::return
VMOption#from(CompositeData):::Returns a VMOption object represented by the given CompositeData:::if->return->if->return->getVMOption->else->return->new->VMOption
