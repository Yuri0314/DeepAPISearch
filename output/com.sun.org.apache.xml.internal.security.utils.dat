Base64#getBytes(BigInteger, int):::Returns a byte-array representation of a BigInteger:::if->big->bitLength->throw->I18n->translate->new->IllegalArgumentException->bigBytes->big->toByteArray->if->big->bitLength->big->bitLength->return->startSrc->bigLen->if->big->bitLength->startDst->resizedBytes->new->byteArr->System->arraycopy->return
Base64#encode(BigInteger):::Encode in Base64 the given .:::bytes->XMLUtils->big->bitLength->getBytes->return->XMLUtils->encodeToString
Base64#encode(BigInteger, int):::Returns a byte-array representation of a :::if->big->bitLength->throw->I18n->translate->new->IllegalArgumentException->bigBytes->big->toByteArray->if->big->bitLength->big->bitLength->return->startSrc->bigLen->if->big->bitLength->startDst->resizedBytes->new->byteArr->System->arraycopy->return
Base64#decodeBigIntegerFromElement(Element):::Method decodeBigIntegerFromElement:::return->Base64->decode->new->BigInteger
Base64#decodeBigIntegerFromText(Text):::Decode a base 64 string into a BigInteger:::return->Base64->text->getData->decode->new->BigInteger
Base64#fillElementWithBigInteger(Element, BigInteger):::This method takes an (empty) Element and a BigInteger and adds the base64 encoded BigInteger to the Element.:::encodedInt->encode->if->XMLUtils->ignoreLineBreaks->encodedInt->length->doc->element->getOwnerDocument->text->doc->createTextNode->element->appendChild
Base64#decode(Element):::Method decode  Takes the Text children of the Element and interprets them as input for the Base64.decode() function.:::sibling->element->getFirstChild->sb->new->StringBuilder->while->if->sibling->getNodeType->t->sb->t->getData->append->sibling->getNextSibling->return->sb->toString->decode
Base64#encodeToElement(Document, String, byte[]):::Method encodeToElement:::el->XMLUtils->createElementInSignatureSpace->text->doc->encode->createTextNode->el->appendChild->return
Base64#decode(byte[]):::Method decode:::return->decodeInternal
Base64#encode(byte[]):::Encode a byte array and fold lines at the standard 76th character unless ignore line breaks property is set.:::return->XMLUtils->ignoreLineBreaks->encode->encode
Base64#decode(BufferedReader):::Base64 decode the lines from the reader and return an InputStream with the bytes.:::retBytes->baos->new->UnsyncByteArrayOutputStream->try->line->while->reader->readLine->bytes->decode->baos->write->baos->toByteArray->catch->finally->baos->close->return
Base64#encode(byte[], int):::Encode a byte array in Base64 format and return an optionally wrapped line.:::if->if->return->lengthDataBits->if->return->fewerThan24bits->numberTriplets->numberQuartet->quartesPerLine->numberLines->encodedData->new->charArr->k->l->b1->b2->b3->encodedIndex->dataIndex->i->for->line->for->if->val1->else->if->val1->val2->return->new->String
Base64#decode(String):::Decodes Base64 data into octets:::if->return->bytes->encoded->length->new->byteArr->len->getBytesInternal->return->decodeInternal
Base64#decode(String, OutputStream):::Decodes Base64 data into outputstream:::bytes->base64Data->length->new->byteArr->len->getBytesInternal->decode
Base64#decode(byte[], OutputStream):::Decodes Base64 data into outputstream:::decode
Base64#decode(InputStream, OutputStream):::Decodes Base64 data into  outputstream:::b1->b2->b3->b4->index->data->new->byteArr->read->while->is->read->readed->if->isWhiteSpace->continue->if->isPad->if->is->read->break->if->throw->new->Base64DecodingException->if->continue->os->write->os->write->os->write->d1->d2->d3->d4->if->if->isPad->isPad->if->throw->new->Base64DecodingException->os->write->else->if->isPad->isPad->if->throw->new->Base64DecodingException->os->write->os->write->else->throw->new->Base64DecodingException->else->os->write->os->write->os->write
Base64#removeWhiteSpace(byte[]):::remove WhiteSpace from MIME containing encoded Base64 data.:::if->return->newSize->len->for->i->return
ClassLoaderUtils#loadClass(String, Class):::Load a class with a given name:::try->cl->Thread->currentThread->getContextClassLoader->if->return->cl->loadClass->catch->LOG->e->getMessage->debug->finally->return->loadClass2
ElementProxy#getBaseNamespace():::Returns the namespace of the Elements of the sub-class.:::
ElementProxy#getBaseLocalName():::Returns the localname of the Elements of the sub-class.:::
ElementProxy#createElementForFamily(Document, String, String):::This method creates an Element in a given namespace with a given localname:::result->prefix->ElementProxy->getDefaultPrefix->if->doc->createElementNS->else->if->prefix->length->doc->createElementNS->result->setAttributeNS->else->doc->createElementNS->result->setAttributeNS->return
ElementProxy#setElement(Element, String):::Method setElement:::if->throw->new->XMLSecurityException->LOG->element->getTagName->debug->setElement
ElementProxy#getElement():::Returns the Element which was constructed by the Object.:::return
ElementProxy#getElementPlusReturns():::Returns the Element plus a leading and a trailing CarriageReturn Text node.:::nl->new->HelperNodeList->nl->createText->appendChild->nl->getElement->appendChild->nl->createText->appendChild->return
ElementProxy#getDocument():::Method getDocument:::if->XMLUtils->getOwnerDocument->return
ElementProxy#getBaseURI():::Method getBaseURI:::return
ElementProxy#guaranteeThatElementInCorrectSpace():::Method guaranteeThatElementInCorrectSpace:::expectedLocalName->this->getBaseLocalName->expectedNamespaceUri->this->getBaseNamespace->actualLocalName->getElement->getLocalName->actualNamespaceUri->getElement->getNamespaceURI->if->expectedNamespaceUri->equals->expectedLocalName->equals->exArgs->throw->new->XMLSecurityException
ElementProxy#addBigIntegerElement(BigInteger, String):::Method addBigIntegerElement:::if->e->XMLUtils->getDocument->createElementInSignatureSpace->bytes->XMLUtils->bi->bitLength->getBytes->encodedInt->XMLUtils->encodeToString->doc->e->getOwnerDocument->text->doc->createTextNode->e->appendChild->appendSelf->addReturnToSelf
ElementProxy#addBase64Element(byte[], String):::Method addBase64Element:::if->el->XMLUtils->getDocument->createElementInSignatureSpace->text->getDocument->XMLUtils->encodeToString->createTextNode->el->appendChild->appendSelf->if->XMLUtils->ignoreLineBreaks->createText->appendSelf
ElementProxy#addTextElement(String, String):::Method addTextElement:::e->XMLUtils->getDocument->createElementInSignatureSpace->t->createText->appendOther->appendSelf->addReturnToSelf
ElementProxy#addBase64Text(byte[]):::Method addBase64Text:::if->t->XMLUtils->ignoreLineBreaks->XMLUtils->encodeToString->createText->XMLUtils->encodeToString->createText->appendSelf
ElementProxy#addText(String):::Method addText:::if->t->createText->appendSelf
ElementProxy#getBigIntegerFromChildElement(String, String):::Method getVal:::n->XMLUtils->getFirstChild->selectNode->if->return->XMLUtils->XMLUtils->getFullTextChildrenFromNode->decode->new->BigInteger->return
ElementProxy#getTextFromChildElement(String, String):::Method getTextFromChildElement:::return->XMLUtils->getFirstChild->selectNode->getTextContent
ElementProxy#getBytesFromTextChild():::Method getBytesFromTextChild:::return->XMLUtils->getTextFromTextChild->decode
ElementProxy#getTextFromTextChild():::Method getTextFromTextChild:::return->XMLUtils->getElement->getFullTextChildrenFromNode
ElementProxy#length(String, String):::Method length:::number->sibling->getFirstChild->while->if->localname->sibling->getLocalName->equals->namespace->sibling->getNamespaceURI->equals->sibling->getNextSibling->return
ElementProxy#setXPathNamespaceContext(String, String):::Adds an xmlns: definition to the Element:::ns->if->prefix->length->throw->new->XMLSecurityException->else->if->equals->throw->new->XMLSecurityException->else->if->prefix->startsWith->else->a->getElement->getAttributeNodeNS->if->if->a->getNodeValue->equals->exArgs->getElement->getAttributeNS->throw->new->XMLSecurityException->return->getElement->setAttributeNS
ElementProxy#setDefaultPrefix(String, String):::Method setDefaultPrefix:::JavaUtils->checkRegisterPermission->setNamespacePrefix
ElementProxy#registerDefaultPrefixes():::This method registers the default prefixes.:::setNamespacePrefix->setNamespacePrefix->setNamespacePrefix->setNamespacePrefix->setNamespacePrefix->setNamespacePrefix->setNamespacePrefix->setNamespacePrefix->setNamespacePrefix
ElementProxy#getDefaultPrefix(String):::Method getDefaultPrefix:::return->prefixMappings->get
ElementProxy#setElement(Element):::New value for the wrapped XML element that this object is a proxy for.:::
ElementProxy#setDocument(Document):::Set a new value for the wrapped document that this object is a proxy for.:::
HelperNodeList#item(int):::Method item:::return->nodes->get
HelperNodeList#getLength():::Method getLength:::return->nodes->size
HelperNodeList#appendChild(Node):::Method appendChild:::if->this->getLength->this->item->getParentNode->node->getParentNode->throw->new->IllegalArgumentException->nodes->add
I18n#translate(String, Object[]):::Method translate  translates a message ID into an internationalized String, see alse XMLSecurityException.getExceptionMEssage():::return->getExceptionMessage
I18n#translate(String):::Method translate  translates a message ID into an internationalized String, see also XMLSecurityException.getExceptionMessage():::return->getExceptionMessage
I18n#getExceptionMessage(String):::Method getExceptionMessage:::try->return->resourceBundle->getString->catch->if->isInitialized->return->return->finally
I18n#getExceptionMessage(String, Exception):::Method getExceptionMessage:::try->exArgs->originalException->getMessage->return->MessageFormat->resourceBundle->getString->format->catch->if->isInitialized->return->originalException->getClass->getName->originalException->getMessage->return->finally
I18n#getExceptionMessage(String, Object[]):::Method getExceptionMessage:::try->return->MessageFormat->resourceBundle->getString->format->catch->if->isInitialized->return->return->finally
I18n#init(String, String):::Method init:::if->return->ResourceBundle->new->Locale->getBundle
I18n#init(ResourceBundle):::Method init:::if->return
IdResolver#registerElementById(Element, Attr):::Method registerElementById:::element->setIdAttributeNode
IdResolver#getElementById(Document, String):::Method getElementById:::return->doc->getElementById
JavaUtils#getBytesFromFile(String):::Method getBytesFromFile:::refBytes->try->inputStream->Files->Paths->get->newInputStream->baos->new->UnsyncByteArrayOutputStream->buf->new->byteArr->len->while->inputStream->read->baos->write->baos->toByteArray->catch->finally->return
JavaUtils#writeBytesToFilename(String, byte[]):::Method writeBytesToFilename:::if->try->outputStream->Files->Paths->get->newOutputStream->outputStream->write->catch->LOG->ex->getMessage->debug->finally->else->LOG->debug
JavaUtils#getBytesFromStream(InputStream):::This method reads all bytes from the given InputStream till EOF and returns them as a byte array.:::try->baos->new->UnsyncByteArrayOutputStream->buf->new->byteArr->len->while->inputStream->read->baos->write->return->baos->toByteArray->catch->finally
JavaUtils#convertDsaASN1toXMLDSIG(byte[], int):::Converts an ASN.1 DSA value to a XML Signature DSA Value:::if->throw->new->IOException->rLength->i->for->sLength->j->for->if->throw->new->IOException->else->xmldsigBytes->new->byteArr->System->arraycopy->System->arraycopy->return
JavaUtils#convertDsaXMLDSIGtoASN1(byte[], int):::Converts an XML Signature DSA Value to a ASN.1 DSA value:::totalSize->if->throw->new->IOException->i->for->j->if->k->for->l->if->asn1Bytes->new->byteArr->System->arraycopy->System->arraycopy->return
JavaUtils#checkRegisterPermission():::Throws a SecurityException if a security manager is installed and the caller is not allowed to register an implementation of an algorithm, transform, or other security sensitive XML Signature function.:::sm->System->getSecurityManager->if->sm->checkPermission
JDKXPathAPI#selectNodeList(Node, Node, String, Node)::: Use an XPath string to select a nodelist:::if->str->equals->if->XPathFactory->newInstance->try->xpf->setFeature->catch->throw->new->TransformerException->finally->xpath->xpf->newXPath->xpath->new->DOMNamespaceContext->setNamespaceContext->try->xpath->compile->catch->throw->new->TransformerException->finally->try->return->xpathExpression->evaluate->catch->throw->new->TransformerException->finally
JDKXPathAPI#evaluate(Node, Node, String, Node):::Evaluate an XPath string and return true if the output is to be included or not.:::if->str->equals->if->XPathFactory->newInstance->try->xpf->setFeature->catch->throw->new->TransformerException->finally->xpath->xpf->newXPath->xpath->new->DOMNamespaceContext->setNamespaceContext->try->xpath->compile->catch->throw->new->TransformerException->finally->try->return->xpathExpression->evaluate->catch->throw->new->TransformerException->finally
JDKXPathAPI#clear():::Clear any context information from this object:::
JDKXPathFactory#newXPathAPI():::Get a new XPathAPI instance:::return->new->JDKXPathAPI
RFC2253Parser#rfc2253toXMLdsig(String):::Method rfc2253toXMLdsig:::normalized->normalize->return->rfctoXML
RFC2253Parser#xmldsigtoRFC2253(String):::Method xmldsigtoRFC2253:::normalized->normalize->return->xmltoRFC
RFC2253Parser#normalize(String):::Method normalize:::return->normalize
RFC2253Parser#normalize(String, boolean):::Method normalize:::if->dn->equals->return->try->DN->semicolonToComma->sb->new->StringBuilder->i->l->k->for->j->DN->indexOf->sb->DN->substring->trim->parseRDN->append->return->sb->toString->catch->return->finally
RFC2253Parser#parseRDN(String, boolean):::Method parseRDN:::sb->new->StringBuilder->i->l->k->for->j->str->indexOf->sb->str->substring->trim->parseATAV->append->return->sb->toString
RFC2253Parser#parseATAV(String, boolean):::Method parseATAV:::i->str->indexOf->if->str->charAt->return->attrType->str->substring->normalizeAT->attrValue->if->attrType->charAt->attrType->charAt->str->substring->else->str->substring->normalizeV->return
RFC2253Parser#normalizeAT(String):::Method normalizeAT:::at->str->toUpperCase->trim->if->at->startsWith->at->substring->return
RFC2253Parser#normalizeV(String, boolean):::Method normalizeV:::value->trim->if->value->startsWith->sb->new->StringBuilder->sr->value->value->length->substring->new->StringReader->i->c->while->sr->read->if->sb->append->sb->append->sb->toString->trim->if->if->value->startsWith->else->if->value->startsWith->value->substring->return
RFC2253Parser#rfctoXML(String):::Method rfctoXML:::try->s->changeLess32toXML->return->changeWStoXML->catch->return->finally
RFC2253Parser#xmltoRFC(String):::Method xmltoRFC:::try->s->changeLess32toRFC->return->changeWStoRFC->catch->return->finally
RFC2253Parser#changeLess32toRFC(String):::Method changeLess32toRFC:::sb->new->StringBuilder->sr->new->StringReader->i->c->while->sr->read->if->sb->append->c1->sr->read->c2->sr->read->if->ch->Byte->parseByte->sb->append->else->sb->append->sb->append->else->sb->append->return->sb->toString
RFC2253Parser#changeLess32toXML(String):::Method changeLess32toXML:::sb->new->StringBuilder->sr->new->StringReader->i->while->sr->read->if->sb->append->sb->Integer->toHexString->append->else->sb->append->return->sb->toString
RFC2253Parser#changeWStoXML(String):::Method changeWStoXML:::sb->new->StringBuilder->sr->new->StringReader->i->c->while->sr->read->if->c1->sr->read->if->sb->append->s->sb->append->else->sb->append->sb->append->else->sb->append->return->sb->toString
RFC2253Parser#changeWStoRFC(String):::Method changeWStoRFC:::sb->new->StringBuilder->i->k->for->j->string->indexOf->sb->string->substring->append->return->sb->toString
RFC2253Parser#semicolonToComma(String):::Method semicolonToComma:::return->removeWSandReplace
RFC2253Parser#removeWhiteSpace(String, String):::Method removeWhiteSpace:::return->removeWSandReplace
RFC2253Parser#removeWSandReplace(String, String, String):::Method removeWSandReplace:::sb->new->StringBuilder->i->l->k->for->j->str->indexOf->sb->str->substring->trim->append->return->sb->toString
RFC2253Parser#trim(String):::Method trim:::trimed->str->trim->i->str->indexOf->trimed->length->if->str->length->trimed->endsWith->trimed->endsWith->str->charAt->return
UnsyncByteArrayOutputStream#writeTo(OutputStream):::Takes the contents of this stream and writes it to the output stream out.:::out->write
WeakObjectPool#createObject():::Called whenever a new pool object is desired; subclasses must implement.:::
WeakObjectPool#getObject():::Subclasses can subclass to return a more specific type.:::ref->retValue->do->available->poll->while->ref->get->if->createObject->onLoan->put->return
WeakObjectPool#repool(T):::Adds the given object to the pool, provided that the object was created by this pool.:::if->onLoan->containsKey->synchronized->if->onLoan->remove->return->available->new->WeakReference<T>->offer->return
XalanXPathAPI#selectNodeList(Node, Node, String, Node)::: Use an XPath string to select a nodelist:::list->eval->return->list->nodelist
XalanXPathAPI#evaluate(Node, Node, String, Node):::Evaluate an XPath string and return true if the output is to be included or not.:::object->eval->return->object->bool
XalanXPathAPI#clear():::Clear any context information from this object:::
XalanXPathFactory#newXPathAPI():::Get a new XPathAPI instance:::return->new->XalanXPathAPI
XMLUtils#setDsPrefix(String):::Set the prefix for the digital signature namespace:::JavaUtils->checkRegisterPermission
XMLUtils#setDs11Prefix(String):::Set the prefix for the digital signature 1.1 namespace:::JavaUtils->checkRegisterPermission
XMLUtils#setXencPrefix(String):::Set the prefix for the encryption namespace:::JavaUtils->checkRegisterPermission
XMLUtils#setXenc11Prefix(String):::Set the prefix for the encryption namespace 1.1:::JavaUtils->checkRegisterPermission
XMLUtils#outputDOM(Node, OutputStream):::Outputs a DOM tree to an OutputStream.:::XMLUtils->outputDOM
XMLUtils#outputDOM(Node, OutputStream, boolean):::Outputs a DOM tree to an OutputStream:::try->if->os->getBytes->write->os->Canonicalizer->getInstance->canonicalizeSubtree->write->catch->LOG->ex->getMessage->debug->LOG->ex->getMessage->debug->LOG->ex->getMessage->debug->finally
XMLUtils#outputDOMc14nWithComments(Node, OutputStream):::Serializes the contextNode into the OutputStream, but suppresses all Exceptions:::try->os->Canonicalizer->getInstance->canonicalizeSubtree->write->catch->LOG->ex->getMessage->debug->LOG->ex->getMessage->debug->LOG->ex->getMessage->debug->finally
XMLUtils#getFullTextChildrenFromNode(Node):::Method getFullTextChildrenFromNode:::sb->new->StringBuilder->child->node->getFirstChild->while->if->child->getNodeType->sb->getData->append->child->getNextSibling->return->sb->toString
XMLUtils#createElementInSignatureSpace(Document, String):::Creates an Element in the XML Signature specification namespace.:::if->throw->new->RuntimeException->if->dsPrefix->length->return->doc->createElementNS->return->doc->createElementNS
XMLUtils#createElementInSignature11Space(Document, String):::Creates an Element in the XML Signature 1.1 specification namespace.:::if->throw->new->RuntimeException->if->ds11Prefix->length->return->doc->createElementNS->return->doc->createElementNS
XMLUtils#elementIsInSignatureSpace(Element, String):::Returns true if the element is in XML Signature namespace and the local name equals the supplied one.:::if->return->return->element->getNamespaceURI->equals->element->getLocalName->equals
XMLUtils#elementIsInSignature11Space(Element, String):::Returns true if the element is in XML Signature 1.1 namespace and the local name equals the supplied one.:::if->return->return->element->getNamespaceURI->equals->element->getLocalName->equals
XMLUtils#getOwnerDocument(Node):::This method returns the owner document of a particular node:::if->node->getNodeType->return->try->return->node->getOwnerDocument->catch->throw->I18n->translate->npe->getMessage->new->NullPointerException->finally
XMLUtils#getOwnerDocument(Set):::This method returns the first non-null owner document of the Nodes in this Set:::npe->foreach->nodeType->node->getNodeType->if->return->try->if->return->getOwnerElement->getOwnerDocument->return->node->getOwnerDocument->catch->finally->throw->I18n->translate->npe->getMessage->new->NullPointerException
XMLUtils#createDSctx(Document, String, String):::Method createDSctx:::if->prefix->trim->length->throw->new->IllegalArgumentException->ctx->doc->createElementNS->ctx->prefix->trim->setAttributeNS->return
XMLUtils#addReturnToElement(Element):::Method addReturnToElement:::if->doc->e->getOwnerDocument->e->doc->createTextNode->appendChild
XMLUtils#convertNodelistToSet(NodeList):::Method convertNodelistToSet:::if->return->new->HashSet<>->length->xpathNodeSet->getLength->set->new->HashSet<>->for->i->return
XMLUtils#circumventBug2650(Document):::This method spreads all namespace attributes in a DOM document to their children:::documentElement->doc->getDocumentElement->xmlnsAttr->documentElement->getAttributeNodeNS->if->documentElement->setAttributeNS->XMLUtils->circumventBug2650internal
XMLUtils#getStrFromNode(Node):::Method getStrFromNode:::if->xpathnode->getNodeType->sb->new->StringBuilder->for->currentSibling->xpathnode->getParentNode->getFirstChild->currentSibling->getNextSibling->return->sb->toString->else->if->xpathnode->getNodeType->return->xpathnode->getNodeValue->else->if->xpathnode->getNodeType->return->xpathnode->getNodeValue->return
XMLUtils#isDescendantOrSelf(Node, Node):::Returns true if the descendantOrSelf is on the descendant-or-self axis of the context node.:::if->return->parent->while->if->return->if->return->if->parent->getNodeType->getOwnerElement->else->parent->getParentNode
XMLUtils#getAttributeValue(Element, String):::Returns the attribute value for the attribute with the specified name:::attr->elem->getAttributeNodeNS->return->attr->getValue
XMLUtils#protectAgainstWrappingAttack(Node, String):::This method is a tree-search to help prevent against wrapping attacks:::id->value->trim->if->id->isEmpty->id->charAt->id->substring->startParent->processedNode->foundElement->if->startNode->getParentNode->while->if->startNode->getNodeType->se->attributes->se->getAttributes->if->length->attributes->getLength->for->i->startNode->getFirstChild->if->processedNode->getNextSibling->while->processedNode->getParentNode->if->return->processedNode->getNextSibling->return
XMLUtils#protectAgainstWrappingAttack(Node, Element, String):::This method is a tree-search to help prevent against wrapping attacks:::id->value->trim->if->id->isEmpty->id->charAt->id->substring->startParent->processedNode->if->startNode->getParentNode->while->if->startNode->getNodeType->se->attributes->se->getAttributes->if->length->attributes->getLength->for->i->startNode->getFirstChild->if->processedNode->getNextSibling->while->processedNode->getParentNode->if->return->processedNode->getNextSibling->return
XMLUtils#getBytes(BigInteger, int):::Returns a byte-array representation of a :::if->big->bitLength->throw->I18n->translate->new->IllegalArgumentException->bigBytes->big->toByteArray->if->big->bitLength->big->bitLength->return->startSrc->bigLen->if->big->bitLength->startDst->resizedBytes->new->byteArr->System->arraycopy->return
XPathAPI#selectNodeList(Node, Node, String, Node)::: Use an XPath string to select a nodelist:::
XPathAPI#evaluate(Node, Node, String, Node):::Evaluate an XPath string and return true if the output is to be included or not.:::
XPathAPI#clear():::Clear any context information from this object:::
XPathFactory#newInstance():::Get a new XPathFactory instance:::if->isXalanInstalled->return->new->JDKXPathFactory->if->XalanXPathAPI->isInstalled->return->new->XalanXPathFactory->return->new->JDKXPathFactory
XPathFactory#newXPathAPI():::Get a new XPathAPI instance:::
