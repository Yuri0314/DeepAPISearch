ExtendedSocketOptions.ExtSocketOption#name()::: ext socket option name:::return
ExtendedSocketOptions.ExtSocketOption#type()::: ext socket option type:::return
ExtendedSocketOptions.ExtSocketOption#toString()::: ext socket option to string:::return
ExtendedSocketOptions#options()::: extended socket options options:::options->new->HashSet<>->if->options->add->if->options->add->if->options->Set->of->addAll->return->Collections->unmodifiableSet
ExtendedSocketOptions#checkValueType(Object, Class)::: extended socket options check value type:::if->type->value->getClass->isAssignableFrom->s->value->getClass->throw->new->IllegalArgumentException->return
ExtendedSocketOptions#setFlowOption(FileDescriptor, SocketFlow)::: extended socket options set flow option:::status->platformSocketOptions->fdAccess->get->f->priority->f->bandwidth->setFlowOption->f->status
ExtendedSocketOptions#getFlowOption(FileDescriptor, SocketFlow)::: extended socket options get flow option:::status->platformSocketOptions->fdAccess->get->getFlowOption->f->status
ExtendedSocketOptions#setQuickAckOption(FileDescriptor, boolean)::: extended socket options set quick ack option:::platformSocketOptions->fdAccess->get->setQuickAck
ExtendedSocketOptions#getQuickAckOption(FileDescriptor)::: extended socket options get quick ack option:::return->platformSocketOptions->fdAccess->get->getQuickAck
ExtendedSocketOptions#setTcpkeepAliveProbes(FileDescriptor, int)::: extended socket options set tcpkeep alive probes:::platformSocketOptions->fdAccess->get->setTcpkeepAliveProbes
ExtendedSocketOptions#setTcpKeepAliveTime(FileDescriptor, int)::: extended socket options set tcp keep alive time:::platformSocketOptions->fdAccess->get->setTcpKeepAliveTime
ExtendedSocketOptions#setTcpKeepAliveIntvl(FileDescriptor, int)::: extended socket options set tcp keep alive intvl:::platformSocketOptions->fdAccess->get->setTcpKeepAliveIntvl
ExtendedSocketOptions#getTcpkeepAliveProbes(FileDescriptor)::: extended socket options get tcpkeep alive probes:::return->platformSocketOptions->fdAccess->get->getTcpkeepAliveProbes
ExtendedSocketOptions#getTcpKeepAliveTime(FileDescriptor)::: extended socket options get tcp keep alive time:::return->platformSocketOptions->fdAccess->get->getTcpKeepAliveTime
ExtendedSocketOptions#getTcpKeepAliveIntvl(FileDescriptor)::: extended socket options get tcp keep alive intvl:::return->platformSocketOptions->fdAccess->get->getTcpKeepAliveIntvl
ExtendedSocketOptions.PlatformSocketOptions#newInstance(String)::: platform socket options new instance:::c->try->Class->forName->return->c->new->Class<?>Arr->getConstructor->newInstance->catch->throw->new->AssertionError->finally
ExtendedSocketOptions.PlatformSocketOptions#create()::: platform socket options create:::osname->AccessController->new->PrivilegedAction<String>->doPrivileged->if->equals->return->newInstance->else->if->equals->return->newInstance->else->if->osname->startsWith->return->newInstance->else->return->new->PlatformSocketOptions
ExtendedSocketOptions.PlatformSocketOptions#get()::: platform socket options get:::return
ExtendedSocketOptions.PlatformSocketOptions#setFlowOption(int, int, long)::: platform socket options set flow option:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#getFlowOption(int, SocketFlow)::: platform socket options get flow option:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#flowSupported()::: platform socket options flow supported:::return
ExtendedSocketOptions.PlatformSocketOptions#setQuickAck(int, boolean)::: platform socket options set quick ack:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#getQuickAck(int)::: platform socket options get quick ack:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#quickAckSupported()::: platform socket options quick ack supported:::return
ExtendedSocketOptions.PlatformSocketOptions#keepAliveOptionsSupported()::: platform socket options keep alive options supported:::return
ExtendedSocketOptions.PlatformSocketOptions#setTcpkeepAliveProbes(int, int)::: platform socket options set tcpkeep alive probes:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#setTcpKeepAliveTime(int, int)::: platform socket options set tcp keep alive time:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#setTcpKeepAliveIntvl(int, int)::: platform socket options set tcp keep alive intvl:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#getTcpkeepAliveProbes(int)::: platform socket options get tcpkeep alive probes:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#getTcpKeepAliveTime(int)::: platform socket options get tcp keep alive time:::throw->new->UnsupportedOperationException
ExtendedSocketOptions.PlatformSocketOptions#getTcpKeepAliveIntvl(int)::: platform socket options get tcp keep alive intvl:::throw->new->UnsupportedOperationException
SocketFlow#create():::Creates a new SocketFlow that can be used to set the SO_FLOW_SLA socket option and create a socket flow.:::return->new->SocketFlow
SocketFlow#priority(int):::Sets this SocketFlow's priority:::if->throw->new->IllegalArgumentException->return
SocketFlow#bandwidth(long):::Sets this SocketFlow's bandwidth:::if->throw->new->IllegalArgumentException->return
SocketFlow#priority():::Returns this SocketFlow's priority.:::return
SocketFlow#bandwidth():::Returns this SocketFlow's bandwidth.:::return
SocketFlow#status():::Returns the Status value of this SocketFlow:::return
SocketFlow#status(int)::: socket flow status:::Status->from
SocketFlow#toString()::: socket flow to string:::sb->super->toString->new->StringBuilder->sb->append->priority->append->append->bandwidth->append->append->status->append->append->return->sb->toString
Sockets#setOption(Socket, SocketOption, T):::Sets the value of a socket option on a java.net.Socket:::s->setOption
Sockets#getOption(Socket, SocketOption):::Returns the value of a socket option from a java.net.Socket:::return->s->getOption
Sockets#setOption(ServerSocket, SocketOption, T):::Sets the value of a socket option on a java.net.ServerSocket:::s->setOption
Sockets#getOption(ServerSocket, SocketOption):::Returns the value of a socket option from a java.net.ServerSocket:::return->s->getOption
Sockets#setOption(DatagramSocket, SocketOption, T):::Sets the value of a socket option on a java.net.DatagramSocket or java.net.MulticastSocket:::s->setOption
Sockets#getOption(DatagramSocket, SocketOption):::Returns the value of a socket option from a java.net.DatagramSocket or java.net.MulticastSocket:::return->s->getOption
Sockets#supportedOptions(Class):::Returns a set of java.net.SocketOptions supported by the given socket type:::set->options->get->if->throw->new->IllegalArgumentException->return
Sockets#checkValueType(Object, Class)::: sockets check value type:::if->type->value->getClass->isAssignableFrom->s->value->getClass->toString->type->toString->throw->new->IllegalArgumentException
Sockets#isReusePortAvailable():::Tells whether SO_REUSEPORT is supported.:::if->s->new->Socket->supportedOptions->s->contains->return
Sockets#optionSets()::: sockets option sets:::options->new->HashMap<>->flowsupported->PlatformSocketOptions->get->flowSupported->reuseportsupported->isReusePortAvailable->set->new->HashSet<>->set->add->set->add->set->add->set->add->if->set->add->set->add->set->add->set->add->if->set->add->if->set->add->if->set->Set->of->addAll->Collections->unmodifiableSet->options->put->new->HashSet<>->set->add->set->add->if->set->add->if->set->add->if->set->Set->of->addAll->set->add->Collections->unmodifiableSet->options->put->new->HashSet<>->set->add->set->add->set->add->if->set->add->set->add->if->set->add->Collections->unmodifiableSet->options->put->new->HashSet<>->set->add->set->add->set->add->if->set->add->set->add->set->add->set->add->set->add->if->set->add->Collections->unmodifiableSet->options->put->return->Collections->unmodifiableMap
