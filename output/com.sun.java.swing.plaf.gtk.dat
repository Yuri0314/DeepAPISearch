GTKColorChooserPanel#getDisplayName():::Returns a user presentable description of this GTKColorChooserPane.:::return->UIManager->get
GTKColorChooserPanel#getMnemonic():::Returns the mnemonic to use with getDisplayName.:::m->UIManager->get->if->try->value->Integer->parseInt->return->catch->finally->return
GTKColorChooserPanel#getDisplayedMnemonicIndex():::Character to underline that represents the mnemonic.:::m->UIManager->get->if->try->value->Integer->parseInt->return->catch->finally->return
GTKColorChooserPanel#buildChooser():::Builds and configures the widgets for the GTKColorChooserPanel.:::new->ColorTriangle->triangle->setName->new->OpaqueLabel->label->setName->label->setOpaque->label->new->Dimension->setMinimumSize->label->new->Dimension->setPreferredSize->label->new->Dimension->setMaximumSize->new->OpaqueLabel->lastLabel->setName->lastLabel->setOpaque->lastLabel->new->Dimension->setMinimumSize->lastLabel->new->Dimension->setPreferredSize->lastLabel->new->Dimension->setMaximumSize->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->JTextField->new->GridBagLayout->setLayout->add->add->add->add->add->add->new->JSeparator->new->Insets->new->GridBagConstraints->add->add->new->Insets->new->GridBagConstraints->add->hBox->Box->createHorizontalBox->hBox->add->hBox->add->new->Insets->new->GridBagConstraints->add->new->JSeparator->new->Insets->new->GridBagConstraints->add
GTKColorChooserPanel#updateChooser():::Refreshes the display from the model.:::if->lastLabel->getColorFromModel->setBackground->getColorFromModel->setColor
GTKColorChooserPanel#stateChanged(ChangeEvent):::ChangeListener method, updates the necessary display widgets.:::if->return->color->getColor->if->e->getSource->hueSpinner->getValue->floatValue->setHue->else->if->e->getSource->saturationSpinner->getValue->floatValue->setSaturation->else->if->e->getSource->valueSpinner->getValue->floatValue->setBrightness->else->if->e->getSource->redSpinner->getValue->intValue->setRed->else->if->e->getSource->greenSpinner->getValue->intValue->setGreen->else->if->e->getSource->blueSpinner->getValue->intValue->setBlue
GTKColorType#adjustColor(Color, float, float, float):::Creates and returns a new color derived from the passed in color:::h->l->s->synchronized->hls->color->getRGB->rgbToHLS->Math->min->Math->min->Math->min->return->hlsToRGB->new->ColorUIResource
GTKEngine#getWidgetType(JComponent, Region):::Translate Region and JComponent into WidgetType ordinals:::value->regionToWidgetTypeMap->get->if->return->widgets->if->return->if->return->getOrientation->else->if->separator->if->separator->getParent->return->else->if->separator->getParent->return->return->separator->getOrientation->else->if->return->getOrientation->else->if->return->getOrientation->else->if->return->getOrientation->else->if->if->return->else->return->else->if->name->c->getName->if->name->startsWith->return->else->return->else->if->name->c->getName->if->name->startsWith->return->else->return->else->if->if->c->getParent->prop->c->getClientProperty->dir->prop->intValue->switch->return->return->return->return->return->else->if->c->getParent->return->else->return->return
GTKEngine#paintCachedImage(Graphics, int, int, int, int, Object...):::Paint a cached image identified by its size and a set of additional arguments, if there's one.:::if->return->img->cache->getClass->getImage->if->g->drawImage->return->return
GTKEngine#finishPainting():::Convenience method that delegates to finishPainting() with caching enabled.:::return->finishPainting
GTKEngine#finishPainting(boolean):::Called to indicate that painting is finished:::dataBuffer->new->DataBufferInt->transparency->SunWritableRaster->stealData->nativeFinishPainting->SunWritableRaster->markDirty->bands->raster->Raster->createPackedRaster->cm->img->new->BufferedImage->if->cache->getClass->setImage->graphics->drawImage->return
GTKEngine#themeChanged():::Notify native layer of theme change, and flush cache:::synchronized->native_switch_theme->cache->flush
GTKEngine#setRangeValue(SynthContext, Region, double, double, double, double):::Sets up the GtkAdjustment values for the native GtkRange widget associated with the given region (e.g:::widget->context->getComponent->getWidgetType->ordinal->nativeSetRangeValue
GTKGraphicsUtils#paintText(SynthContext, Graphics, String, Rectangle, int):::Paints text at the specified location:::if->text->length->return->id->context->getRegion->if->context->getComponentState->source->context->getComponent->if->isFocusPainted->synthState->context->getComponentState->style->context->getStyle->focusSize->style->getClassSpecificIntValue->focusPad->style->getClassSpecificIntValue->totalFocus->x->y->w->h->color->g->getColor->paintFocus->g->setColor->super->paintText
GTKLookAndFeel#is2_2():::Returns true if running on system containing at least 2.2.:::return
GTKLookAndFeel#SwingOrientationConstantToGTK(int):::Maps a swing constant to a GTK constant.:::switch->return->return->return->return->return
GTKLookAndFeel#synthStateToGTKStateType(int):::Maps from Synth state to native GTK state using typesafe enumeration StateType:::result->switch->break->break->break->break->break->return
GTKLookAndFeel#synthStateToGTKState(Region, int):::Maps from a Synth state to the corresponding GTK state:::if->if->else->else->if->if->else->if->else->else->if->if->else->if->if->else->if->else->else->else->if->else->if->else->if->else->return
GTKLookAndFeel#createUI(JComponent):::Creates the GTK look and feel class for the passed in Component.:::key->c->getUIClassID->intern->if->return->GTKFileChooserUI->createUI->return->SynthLookAndFeel->createUI
GTKLookAndFeel#getGtkThemeName():::Returns the cached gtkThemeName:::return
GTKLookAndFeel#shouldUpdateStyleOnAncestorChanged():::Returns whether or not the UIs should update their SynthStyles from the SynthStyleFactory when the ancestor of the Component changes.:::return
GTKStyle#getPainter(SynthContext):::Returns a SynthPainter that will route the appropriate calls to a GTKEngine.:::return
GTKStyle#getGTKColor(SynthContext, int, ColorType):::Returns the color for the specified state.:::if->c->context->getComponent->id->context->getRegion->GTKLookAndFeel->synthStateToGTKState->if->id->isSubregion->if->bg->c->getBackground->if->return->else->if->fg->c->getForeground->if->return->return->getStyleSpecificColor
GTKStyle#getXThickness():::Returns the X thickness to use for this GTKStyle.:::return
GTKStyle#getYThickness():::Returns the Y thickness to use for this GTKStyle.:::return
GTKStyle#getInsets(SynthContext, Insets):::Returns the Insets:::id->state->getRegion->component->state->getComponent->name->id->isSubregion->component->getName->if->new->Insets->else->if->if->return->getSimpleInsets->else->return->getButtonInsets->else->if->return->getRadioInsets->else->if->return->getMenuBarInsets->else->if->return->getMenuItemInsets->else->if->return->getTextFieldInsets->else->if->getBorderInsets->else->if->if->return->getButtonInsets->else->if->return->getTextFieldInsets->else->if->return->getSimpleInsets->else->if->return->getSimpleInsets->else->if->return->getSimpleInsets->else->if->return->getThicknessInsets->else->if->return->getScrollBarInsets->else->if->return->getSliderTrackInsets->else->if->return->getTabbedPaneTabInsets->else->if->if->return->getSimpleInsets->return->getTextFieldInsets->else->if->return->getSeparatorInsets->else->if->return->getThicknessInsets->return
GTKStyle#getClassSpecificValue(String):::Returns the value for a class specific property:::synchronized->return->nativeGetClassValue
GTKStyle#getClassSpecificIntValue(SynthContext, String, int):::Convenience method to get a class specific integer value.:::value->getClassSpecificValue->if->return->intValue->return
GTKStyle#getClassSpecificInsetsValue(SynthContext, String, Insets):::Convenience method to get a class specific Insets value.:::value->getClassSpecificValue->if->return->return
GTKStyle#getClassSpecificBoolValue(SynthContext, String, boolean):::Convenience method to get a class specific Boolean value.:::value->getClassSpecificValue->if->return->booleanValue->return
GTKStyle#isOpaque(SynthContext):::Returns the value to initialize the opacity property of the Component to:::region->context->getRegion->if->return->if->GTKLookAndFeel->is3->if->return->c->context->getComponent->name->c->getName->if->return->return
GTKStyle.GTKStockIconInfo#getIconSize(int):::Return the size of a particular icon type (logical size):::iconSizes->getIconSizesMap->return
GTKStyle.GTKStockIconInfo#setIconSize(int, int, int):::Change icon size in a type to size mapping:::iconSizes->getIconSizesMap->if->new->Dimension
GTKStyle.GTKStockIconInfo#getIconType(String):::Return icon type (GtkIconSize value) given a symbolic name which can occur in a theme file.:::if->return->if->initIconTypeMap->n->ICON_TYPE_MAP->get->return->n->intValue
GTKStyleFactory#getStyle(JComponent, Region):::Returns the GTKStyle to use based on the Region id:::wt->GTKEngine->getWidgetType->key->if->if->sb->sp->sb->getParent->horiz->sb->getOrientation->ltr->sb->getComponentOrientation->isLeftToRight->focusable->sb->isFocusable->new->ComplexKey->else->if->if->ltr->c->getComponentOrientation->isLeftToRight->new->ComplexKey->else->if->if->btn->toolButton->btn->getParent->defaultCapable->btn->isDefaultCapable->new->ComplexKey->else->if->if->isTopLevelMenu->UIManager->getBoolean->if->result->stylesCache->get->if->new->GTKStyle->stylesCache->put->return
PangoFonts#lookupFont(String):::Parses a String containing a pango font description and returns a Font object.:::family->style->size->tok->new->StringTokenizer->while->tok->hasMoreTokens->word->tok->nextToken->if->word->equalsIgnoreCase->else->if->word->equalsIgnoreCase->else->if->CHARS_DIGITS->word->charAt->indexOf->try->Integer->parseInt->catch->finally->else->if->family->length->dsize->dpi->value->Toolkit->getDefaultToolkit->getDesktopProperty->if->intValue->if->if->else->if->fcFamilyLC->family->toLowerCase->if->FontUtilities->mapFcName->font->FontUtilities->getFontConfigFUIR->font->deriveFont->return->new->FontUIResource->else->font->new->Font->font->deriveFont->fuir->new->FontUIResource->return->FontUtilities->getCompositeFontUIResource
PangoFonts#getFontSize(String):::Parses a String containing a pango font description and returns the (unscaled) font size as an integer.:::size->tok->new->StringTokenizer->while->tok->hasMoreTokens->word->tok->nextToken->if->CHARS_DIGITS->word->charAt->indexOf->try->Integer->parseInt->catch->finally->return
