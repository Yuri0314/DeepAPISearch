GTKColorChooserPanel#compositeRequestFocus(Component, boolean)::: color chooser panel composite request focus:::if->container->if->container->isFocusCycleRoot->policy->container->getFocusTraversalPolicy->comp->policy->getDefaultComponent->if->comp->requestFocus->return->rootAncestor->container->getFocusCycleRootAncestor->if->policy->rootAncestor->getFocusTraversalPolicy->comp->if->policy->getComponentAfter->else->policy->getComponentBefore->if->comp->requestFocus->return->component->requestFocus
GTKColorChooserPanel#getDisplayName():::Returns a user presentable description of this GTKColorChooserPane.:::return->UIManager->get
GTKColorChooserPanel#getMnemonic():::Returns the mnemonic to use with getDisplayName.:::m->UIManager->get->if->try->value->Integer->parseInt->return->catch->finally->return
GTKColorChooserPanel#getDisplayedMnemonicIndex():::Character to underline that represents the mnemonic.:::m->UIManager->get->if->try->value->Integer->parseInt->return->catch->finally->return
GTKColorChooserPanel#getSmallDisplayIcon()::: color chooser panel get small display icon:::return
GTKColorChooserPanel#getLargeDisplayIcon()::: color chooser panel get large display icon:::return
GTKColorChooserPanel#uninstallChooserPanel(JColorChooser)::: color chooser panel uninstall chooser panel:::super->uninstallChooserPanel->removeAll
GTKColorChooserPanel#buildChooser():::Builds and configures the widgets for the GTKColorChooserPanel.:::new->ColorTriangle->triangle->setName->new->OpaqueLabel->label->setName->label->setOpaque->label->new->Dimension->setMinimumSize->label->new->Dimension->setPreferredSize->label->new->Dimension->setMaximumSize->new->OpaqueLabel->lastLabel->setName->lastLabel->setOpaque->lastLabel->new->Dimension->setMinimumSize->lastLabel->new->Dimension->setPreferredSize->lastLabel->new->Dimension->setMaximumSize->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->SpinnerNumberModel->new->JSpinner->configureSpinner->new->JTextField->new->GridBagLayout->setLayout->add->add->add->add->add->add->new->JSeparator->new->Insets->new->GridBagConstraints->add->add->new->Insets->new->GridBagConstraints->add->hBox->Box->createHorizontalBox->hBox->add->hBox->add->new->Insets->new->GridBagConstraints->add->new->JSeparator->new->Insets->new->GridBagConstraints->add
GTKColorChooserPanel#configureSpinner(JSpinner, String):::Configures the spinner.:::spinner->addChangeListener->spinner->setName->editor->spinner->getEditor->if->ftf->getTextField->ftf->setFocusLostBehavior
GTKColorChooserPanel#add(Container, String, JComponent, int, int):::Adds the widget creating a JLabel with the specified name.:::label->UIManager->getLocale->getString->new->JLabel->mnemonic->UIManager->getLocale->get->if->try->label->Integer->parseInt->setDisplayedMnemonic->catch->finally->mnemonicIndex->UIManager->getLocale->get->if->try->label->Integer->parseInt->setDisplayedMnemonicIndex->catch->finally->label->setLabelFor->if->parent->getComponentCount->if->parent->getComponentCount->con->new->Insets->new->GridBagConstraints->if->parent->add->parent->add
GTKColorChooserPanel#updateChooser():::Refreshes the display from the model.:::if->lastLabel->getColorFromModel->setBackground->getColorFromModel->setColor
GTKColorChooserPanel#setRed(int):::Resets the red component of the selected color.:::getColor->getGreen->getColor->getBlue->setRGB
GTKColorChooserPanel#setGreen(int):::Resets the green component of the selected color.:::getColor->getRed->getColor->getBlue->setRGB
GTKColorChooserPanel#setBlue(int):::Resets the blue component of the selected color.:::getColor->getRed->getColor->getGreen->setRGB
GTKColorChooserPanel#setHue(float, boolean):::Sets the hue of the selected color and updates the display if necessary.:::setHSB->if->hueSpinner->Integer->valueOf->setValue
GTKColorChooserPanel#getHue():::Returns the current amount of hue.:::return
GTKColorChooserPanel#setSaturation(float):::Resets the saturation.:::setHSB
GTKColorChooserPanel#getSaturation():::Returns the saturation.:::return
GTKColorChooserPanel#setBrightness(float):::Sets the brightness.:::setHSB
GTKColorChooserPanel#getBrightness():::Returns the brightness.:::return
GTKColorChooserPanel#setSaturationAndBrightness(float, float, boolean):::Sets the saturation and brightness and updates the display if necessary.:::setHSB->if->saturationSpinner->Integer->valueOf->setValue->valueSpinner->Integer->valueOf->setValue
GTKColorChooserPanel#setRGB(int):::Resets the rgb values.:::color->new->Color->setColor->hueSpinner->Integer->valueOf->setValue->saturationSpinner->Integer->valueOf->setValue->valueSpinner->Integer->valueOf->setValue
GTKColorChooserPanel#setHSB(float, float, float):::Resets the hsb values.:::color->Color->getHSBColor->setColor->redSpinner->Integer->color->getRed->valueOf->setValue->greenSpinner->Integer->color->getGreen->valueOf->setValue->blueSpinner->Integer->color->getBlue->valueOf->setValue
GTKColorChooserPanel#setColor(Color, boolean, boolean, boolean):::Rests the color.:::if->if->hsb->Color->color->getRed->color->getGreen->color->getBlue->RGBtoHSB->if->model->getColorSelectionModel->if->model->setSelectedColor->triangle->setColor->label->setBackground->hexString->Integer->color->getRGB->toHexString->colorNameTF->hexString->substring->setText->if->redSpinner->Integer->color->getRed->valueOf->setValue->greenSpinner->Integer->color->getGreen->valueOf->setValue->blueSpinner->Integer->color->getBlue->valueOf->setValue->hueSpinner->Integer->valueOf->setValue->saturationSpinner->Integer->valueOf->setValue->valueSpinner->Integer->valueOf->setValue
GTKColorChooserPanel#getColor()::: color chooser panel get color:::return->label->getBackground
GTKColorChooserPanel#stateChanged(ChangeEvent):::ChangeListener method, updates the necessary display widgets.:::if->return->color->getColor->if->e->getSource->hueSpinner->getValue->floatValue->setHue->else->if->e->getSource->saturationSpinner->getValue->floatValue->setSaturation->else->if->e->getSource->valueSpinner->getValue->floatValue->setBrightness->else->if->e->getSource->redSpinner->getValue->intValue->setRed->else->if->e->getSource->greenSpinner->getValue->intValue->setGreen->else->if->e->getSource->blueSpinner->getValue->intValue->setBlue
GTKColorChooserPanel.ColorTriangle#getGTKColorChooserPanel():::Returns the GTKColorChooserPanel.:::return
GTKColorChooserPanel.ColorTriangle#focusWheel():::Gives focus to the wheel.:::setFocusType
GTKColorChooserPanel.ColorTriangle#focusTriangle():::Gives focus to the triangle.:::setFocusType
GTKColorChooserPanel.ColorTriangle#isWheelFocused():::Returns true if the wheel currently has focus.:::return->isSet
GTKColorChooserPanel.ColorTriangle#setColor(float, float, float):::Resets the selected color.:::if->isSet->return->setAngleFromHue->setSaturationAndBrightness
GTKColorChooserPanel.ColorTriangle#getColor():::Returns the selected color.:::return->GTKColorChooserPanel.this->getColor
GTKColorChooserPanel.ColorTriangle#getColorX():::Returns the x location of the selected color indicator.:::return->getIndicatorSize->getWheelXOrigin
GTKColorChooserPanel.ColorTriangle#getColorY():::Returns the y location of the selected color indicator.:::return->getIndicatorSize->getWheelYOrigin
GTKColorChooserPanel.ColorTriangle#processEvent(AWTEvent)::: color triangle process event:::if->e->getID->isSet->isSet->e->getID->size->getWheelRadius->x->getX->y->getY->if->hasFocus->requestFocus->if->isSet->e->getID->adjustHue->setFlag->setFocusType->else->if->e->getID->adjustSB->setFlag->setFocusType->else->setFocusType->else->if->e->getID->setFlag->setFlag->else->if->e->getID->setFocusType->else->if->e->getID->if->isSet->isSet->setFlag->setFocusType->repaint->super->processEvent
GTKColorChooserPanel.ColorTriangle#paintComponent(Graphics)::: color triangle paint component:::super->paintComponent->size->getWheelRadius->width->getWheelWidth->image->getImage->g->getWheelXOrigin->getWheelYOrigin->drawImage->if->hasFocus->isSet->g->setColor->g->getWheelXOrigin->getWheelYOrigin->drawOval->g->getWheelXOrigin->getWheelYOrigin->drawOval->if->Math->toDegrees->Math->toDegrees->g->setColor->else->g->setColor->lineX0->Math->cos->lineY0->Math->sin->lineX1->Math->cos->lineY1->Math->sin->g->drawLine->if->hasFocus->isSet->g2->g->create->innerR->getTriangleCircumscribedRadius->a->Math->sqrt->g2->getWheelXOrigin->getWheelYOrigin->translate->rotate->g2->setColor->g2->drawLine->g2->drawLine->g2->drawLine->g2->dispose->g->setColor->g->getIndicatorSize->getIndicatorSize->drawOval->g->setColor->g->getIndicatorSize->getIndicatorSize->drawOval
GTKColorChooserPanel.ColorTriangle#getImage(int):::Returns an image representing the triangle and wheel.:::if->isSet->wheelImage->getWidth->return->if->wheelImage->getWidth->getWheelImage->innerR->getTriangleCircumscribedRadius->triangleSize->a->Math->sqrt->if->triangleImage->getWidth->new->BufferedImage->g->triangleImage->getGraphics->g->new->Color->setColor->g->fillRect->g->translate->getColor->paintTriangle->g->translate->g->dispose->wheelImage->getGraphics->g->new->Color->setColor->g->getWheelWidth->getWheelWidth->getWheelWidth->getWheelWidth->fillOval->rotate->Math->toRadians->g->translate->rotate->g->getWheelWidth->drawImage->rotate->g->getWheelWidth->translate->setFlag->return
GTKColorChooserPanel.ColorTriangle#paintTriangle(Graphics, int, Color)::: color triangle paint triangle:::colors->Color->color->getRed->color->getGreen->color->getBlue->RGBtoHSB->hue->dSize->for->y
GTKColorChooserPanel.ColorTriangle#getWheelImage(int):::Returns a color wheel image for the specified size.:::minSize->getWheelWidth->doubleSize->image->new->BufferedImage->for->y->return
GTKColorChooserPanel.ColorTriangle#adjustSB(int, int, boolean):::Adjusts the saturation and brightness:::innerR->getWheelRadius->getWheelWidth->resetXY->if->return->triangleSize->x1->Math->cos->Math->sin->y1->Math->sin->Math->cos->if->if->return->else->if->if->return->maxY->Math->Math->toRadians->tan->if->if->return->else->if->if->return->x2->Math->Math->toRadians->cos->Math->Math->toRadians->sin->y2->Math->Math->toRadians->sin->Math->Math->toRadians->cos->value->Math->min->maxX->Math->Math->toRadians->tan->saturation->Math->min->setFlag->if->setSaturationAndBrightness->else->getWheelXOrigin->getWheelYOrigin->setSaturationAndBrightness->GTKColorChooserPanel.this->setSaturationAndBrightness->setFlag->return
GTKColorChooserPanel.ColorTriangle#setSaturationAndBrightness(float, float):::Sets the saturation and brightness.:::innerR->getTriangleCircumscribedRadius->triangleSize->x->maxY->Math->Math->toRadians->tan->y->x1->Math->Math->toRadians->cos->Math->Math->toRadians->sin->y1->Math->Math->toRadians->sin->Math->Math->toRadians->cos->newCircleX->getWheelXOrigin->newCircleY->getWheelYOrigin->setSaturationAndBrightness
GTKColorChooserPanel.ColorTriangle#setSaturationAndBrightness(float, float, int, int):::Sets the saturation and brightness.:::getIndicatorSize->getIndicatorSize->minX->Math->min->minY->Math->min->Math->max->getIndicatorSize->Math->max->getIndicatorSize->repaint
GTKColorChooserPanel.ColorTriangle#adjustHue(int, int, boolean):::Adjusts the hue based on the passed in location.:::rad->Math->sqrt->size->getWheelRadius->if->getWheelWidth->angle->if->if->else->else->Math->atan->if->else->if->setFlag->setHue->setFlag->setHueAngle->getSaturation->getBrightness->setSaturationAndBrightness->return->return
GTKColorChooserPanel.ColorTriangle#setAngleFromHue(float):::Rotates the triangle to accommodate the passed in hue.:::setHueAngle
GTKColorChooserPanel.ColorTriangle#setHueAngle(double):::Sets the angle representing the hue.:::oldAngle->if->setFlag->repaint
GTKColorChooserPanel.ColorTriangle#getIndicatorSize():::Returns the size of the color indicator.:::return
GTKColorChooserPanel.ColorTriangle#getTriangleCircumscribedRadius():::Returns the circumscribed radius of the triangle.:::return
GTKColorChooserPanel.ColorTriangle#getWheelXOrigin():::Returns the x origin of the wheel and triangle.:::return
GTKColorChooserPanel.ColorTriangle#getWheelYOrigin():::Returns y origin of the wheel and triangle.:::return
GTKColorChooserPanel.ColorTriangle#getWheelWidth():::Returns the width of the wheel.:::return
GTKColorChooserPanel.ColorTriangle#setFocusType(int):::Sets the focus to one of: 0 no one, 1 the wheel or 2 the triangle.:::if->setFlag->setFlag->repaint->else->toSet->toUnset->if->if->isSet->setFlag->repaint->setFlag
GTKColorChooserPanel.ColorTriangle#getWheelRadius():::Returns the radius of the wheel.:::return
GTKColorChooserPanel.ColorTriangle#setFlag(int, boolean):::Updates the flags bitmask.:::if->else
GTKColorChooserPanel.ColorTriangle#isSet(int):::Returns true if a particular flag has been set.:::return
GTKColorChooserPanel.ColorTriangle#colorWheelLocationToRGB(int, int, double):::Returns the RGB color to use for the specified location:::angle->Math->acos->rgb->if->if->Math->min->else->Math->min->else->if->if->Math->max->else->Math->max->else->if->Math->min->else->Math->min->return
GTKColorChooserPanel.ColorTriangle#incrementHue(boolean):::Increments the hue.:::hue->triangle->getGTKColorChooserPanel->getHue->if->else->if->else->if->getGTKColorChooserPanel->setHue
GTKColorChooserPanel.ColorAction#actionPerformed(ActionEvent)::: color action action performed:::triangle->e->getSource->if->triangle->isWheelFocused->hue->triangle->getGTKColorChooserPanel->getHue->switch->triangle->incrementHue->break->triangle->incrementHue->break->triangle->focusTriangle->break->compositeRequestFocus->break->else->xDelta->yDelta->switch->break->break->break->break->compositeRequestFocus->return->triangle->focusWheel->return->triangle->triangle->getColorX->triangle->getColorY->adjustSB
GTKColorChooserPanel.OpaqueLabel#isOpaque()::: opaque label is opaque:::return
GTKColorType#hlsToRGB(float, float, float)::: color type hls to b:::m2->m1->r->g->b->if->if->else->else->hlsValue->hlsValue->hlsValue->return
GTKColorType#hlsValue(float, float, float)::: color type hls value:::if->else->if->if->return->else->if->return->else->if->return->return
GTKColorType#rgbToHLS(int, float[]):::Converts from RGB color space to HLS colorspace.:::r->g->b->max->Math->Math->max->max->min->Math->Math->min->min->l->s->h->if->delta->if->else->if->else->if->if->new->floatArr->return
GTKColorType#adjustColor(Color, float, float, float):::Creates and returns a new color derived from the passed in color:::h->l->s->synchronized->hls->color->getRGB->rgbToHLS->Math->min->Math->min->Math->min->return->hlsToRGB->new->ColorUIResource
GTKEngine#native_paint_arrow(int, int, int, String, int, int, int, int, int)::: engine native_paint_arrow:::
GTKEngine#native_paint_box(int, int, int, String, int, int, int, int, int, int)::: engine native_paint_box:::
GTKEngine#native_paint_box_gap(int, int, int, String, int, int, int, int, int, int, int)::: engine native_paint_box_gap:::
GTKEngine#native_paint_check(int, int, String, int, int, int, int)::: engine native_paint_check:::
GTKEngine#native_paint_expander(int, int, String, int, int, int, int, int)::: engine native_paint_expander:::
GTKEngine#native_paint_extension(int, int, int, String, int, int, int, int, int)::: engine native_paint_extension:::
GTKEngine#native_paint_flat_box(int, int, int, String, int, int, int, int, boolean)::: engine native_paint_flat_box:::
GTKEngine#native_paint_focus(int, int, String, int, int, int, int)::: engine native_paint_focus:::
GTKEngine#native_paint_handle(int, int, int, String, int, int, int, int, int)::: engine native_paint_handle:::
GTKEngine#native_paint_hline(int, int, String, int, int, int, int)::: engine native_paint_hline:::
GTKEngine#native_paint_option(int, int, String, int, int, int, int)::: engine native_paint_option:::
GTKEngine#native_paint_shadow(int, int, int, String, int, int, int, int, int, int)::: engine native_paint_shadow:::
GTKEngine#native_paint_slider(int, int, int, String, int, int, int, int, int, boolean)::: engine native_paint_slider:::
GTKEngine#native_paint_vline(int, int, String, int, int, int, int)::: engine native_paint_vline:::
GTKEngine#native_paint_background(int, int, int, int, int, int)::: engine native_paint_background:::
GTKEngine#native_get_gtk_setting(int)::: engine native_get_gtk_setting:::
GTKEngine#nativeSetRangeValue(int, double, double, double, double)::: engine native set range value:::
GTKEngine#nativeStartPainting(int, int)::: engine native start painting:::
GTKEngine#nativeFinishPainting(int[], int, int)::: engine native finish painting:::
GTKEngine#native_switch_theme()::: engine native_switch_theme:::
GTKEngine#getWidgetType(JComponent, Region):::Translate Region and JComponent into WidgetType ordinals:::value->regionToWidgetTypeMap->get->if->return->widgets->if->return->if->return->getOrientation->else->if->separator->if->separator->getParent->return->else->if->separator->getParent->return->return->separator->getOrientation->else->if->return->getOrientation->else->if->return->getOrientation->else->if->return->getOrientation->else->if->if->return->else->return->else->if->name->c->getName->if->name->startsWith->return->else->return->else->if->name->c->getName->if->name->startsWith->return->else->return->else->if->if->c->getParent->prop->c->getClientProperty->dir->prop->intValue->switch->return->return->return->return->return->else->if->c->getParent->return->else->return->return
GTKEngine#getTextDirection(SynthContext)::: engine get text direction:::dir->comp->context->getComponent->if->co->comp->getComponentOrientation->if->co->isLeftToRight->return->dir->ordinal
GTKEngine#paintArrow(Graphics, SynthContext, Region, int, ShadowType, ArrowType, String, int, int, int, int)::: engine paint arrow:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->shadowType->ordinal->direction->ordinal->native_paint_arrow
GTKEngine#paintBox(Graphics, SynthContext, Region, int, ShadowType, String, int, int, int, int)::: engine paint box:::gtkState->GTKLookAndFeel->synthStateToGTKStateType->ordinal->synthState->context->getComponentState->dir->getTextDirection->widget->context->getComponent->getWidgetType->ordinal->shadowType->ordinal->native_paint_box
GTKEngine#paintBoxGap(Graphics, SynthContext, Region, int, ShadowType, String, int, int, int, int, PositionType, int, int)::: engine paint box gap:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->shadowType->ordinal->boxGapType->ordinal->native_paint_box_gap
GTKEngine#paintCheck(Graphics, SynthContext, Region, String, int, int, int, int)::: engine paint check:::synthState->context->getComponentState->widget->context->getComponent->getWidgetType->ordinal->native_paint_check
GTKEngine#paintExpander(Graphics, SynthContext, Region, int, ExpanderStyle, String, int, int, int, int)::: engine paint expander:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->expanderStyle->ordinal->native_paint_expander
GTKEngine#paintExtension(Graphics, SynthContext, Region, int, ShadowType, String, int, int, int, int, PositionType, int)::: engine paint extension:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->shadowType->ordinal->placement->ordinal->native_paint_extension
GTKEngine#paintFlatBox(Graphics, SynthContext, Region, int, ShadowType, String, int, int, int, int, ColorType)::: engine paint flat box:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->shadowType->ordinal->context->getComponent->hasFocus->native_paint_flat_box
GTKEngine#paintFocus(Graphics, SynthContext, Region, int, String, int, int, int, int)::: engine paint focus:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->native_paint_focus
GTKEngine#paintHandle(Graphics, SynthContext, Region, int, ShadowType, String, int, int, int, int, Orientation)::: engine paint handle:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->shadowType->ordinal->orientation->ordinal->native_paint_handle
GTKEngine#paintHline(Graphics, SynthContext, Region, int, String, int, int, int, int)::: engine paint hline:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->native_paint_hline
GTKEngine#paintOption(Graphics, SynthContext, Region, String, int, int, int, int)::: engine paint option:::synthState->context->getComponentState->widget->context->getComponent->getWidgetType->ordinal->native_paint_option
GTKEngine#paintShadow(Graphics, SynthContext, Region, int, ShadowType, String, int, int, int, int)::: engine paint shadow:::gtkState->GTKLookAndFeel->synthStateToGTKStateType->ordinal->synthState->context->getComponentState->parent->context->getComponent->getParent->if->GTKLookAndFeel->is3->if->parent->getParent->if->parent->getParent->hasFocus->dir->getTextDirection->widget->context->getComponent->getWidgetType->ordinal->shadowType->ordinal->native_paint_shadow
GTKEngine#paintSlider(Graphics, SynthContext, Region, int, ShadowType, String, int, int, int, int, Orientation, boolean)::: engine paint slider:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->shadowType->ordinal->orientation->ordinal->native_paint_slider
GTKEngine#paintVline(Graphics, SynthContext, Region, int, String, int, int, int, int)::: engine paint vline:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->native_paint_vline
GTKEngine#paintBackground(Graphics, SynthContext, Region, int, Color, int, int, int, int)::: engine paint background:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->widget->context->getComponent->getWidgetType->ordinal->native_paint_background
GTKEngine#paintCachedImage(Graphics, int, int, int, int, Object...):::Paint a cached image identified by its size and a set of additional arguments, if there's one.:::if->return->img->cache->getClass->getImage->if->g->drawImage->return->return
GTKEngine#startPainting(Graphics, int, int, int, int, Object...)::: engine start painting:::nativeStartPainting
GTKEngine#finishPainting():::Convenience method that delegates to finishPainting() with caching enabled.:::return->finishPainting
GTKEngine#finishPainting(boolean):::Called to indicate that painting is finished:::dataBuffer->new->DataBufferInt->transparency->SunWritableRaster->stealData->nativeFinishPainting->SunWritableRaster->markDirty->bands->raster->Raster->createPackedRaster->cm->img->new->BufferedImage->if->cache->getClass->setImage->graphics->drawImage->return
GTKEngine#themeChanged():::Notify native layer of theme change, and flush cache:::synchronized->native_switch_theme->cache->flush
GTKEngine#getSetting(Settings)::: engine get setting:::synchronized->return->property->ordinal->native_get_gtk_setting
GTKEngine#setRangeValue(SynthContext, Region, double, double, double, double):::Sets up the GtkAdjustment values for the native GtkRange widget associated with the given region (e.g:::widget->context->getComponent->getWidgetType->ordinal->nativeSetRangeValue
GTKFileChooserUI#createActionMap()::: file chooser i create action map:::map->new->ActionMapUIResource->map->getApproveSelectionAction->put->map->getCancelSelectionAction->put->map->getChangeToParentDirectoryAction->put->map->getFileNameCompletionAction->put->return
GTKFileChooserUI#getFileName()::: file chooser i get file name:::fc->getFileChooser->typedInName->fileNameTextField->getText->if->fc->isMultiSelectionEnabled->return->mode->fc->getFileSelectionMode->list->files->list->getSelectedValues->len->result->new->Vector<String>->for->i->if->result->contains->result->add->sb->new->StringBuilder->result->size->for->i->return->sb->toString
GTKFileChooserUI#setFileName(String)::: file chooser i set file name:::if->fileNameTextField->setText
GTKFileChooserUI#setDirectoryName(String)::: file chooser i set directory name:::pathField->setText
GTKFileChooserUI#ensureFileIsVisible(JFileChooser, File)::: file chooser i ensure file is visible:::
GTKFileChooserUI#rescanCurrentDirectory(JFileChooser)::: file chooser i rescan current directory:::getModel->validateFileCache
GTKFileChooserUI#getAccessoryPanel()::: file chooser i get accessory panel:::return
GTKFileChooserUI#getFileView(JFileChooser)::: file chooser i get file view:::return
GTKFileChooserUI.GTKFileView#clearIconCache()::: file view clear icon cache:::
GTKFileChooserUI.GTKFileView#getCachedIcon(File)::: file view get cached icon:::return
GTKFileChooserUI.GTKFileView#cacheIcon(File, Icon)::: file view cache icon:::
GTKFileChooserUI.GTKFileView#getIcon(File)::: file view get icon:::return->f->isDirectory
GTKFileChooserUI#updateDefaultButton()::: file chooser i update default button:::filechooser->getFileChooser->root->SwingUtilities->getRootPane->if->return->if->filechooser->getControlButtonsAreShown->if->root->getDefaultButton->root->getApproveButton->setDefaultButton->getCancelButton->setDefaultCapable->else->if->root->getDefaultButton->getApproveButton->root->setDefaultButton
GTKFileChooserUI#doSelectedFileChanged(PropertyChangeEvent)::: file chooser i do selected file changed:::super->doSelectedFileChanged->f->e->getNewValue->if->getFileChooser->getName->setFileName
GTKFileChooserUI#doDirectoryChanged(PropertyChangeEvent)::: file chooser i do directory changed:::directoryList->clearSelection->sm->directoryList->getSelectionModel->if->moveLeadSelectionIndex->sm->setAnchorSelectionIndex->fileList->clearSelection->fileList->getSelectionModel->if->moveLeadSelectionIndex->sm->setAnchorSelectionIndex->currentDirectory->getFileChooser->getCurrentDirectory->if->try->ShellFolder->e->getNewValue->getNormalizedFile->getPath->setDirectoryName->catch->e->getNewValue->getAbsolutePath->setDirectoryName->finally->if->getFileChooser->getFileSelectionMode->getFileChooser->isMultiSelectionEnabled->pathField->getText->setFileName->directoryComboBoxModel->addItem->directoryListModel->directoryChanged->super->doDirectoryChanged
GTKFileChooserUI#doAccessoryChanged(PropertyChangeEvent)::: file chooser i do accessory changed:::if->getAccessoryPanel->if->e->getOldValue->getAccessoryPanel->e->getOldValue->remove->accessory->e->getNewValue->if->getAccessoryPanel->add->getAccessoryPanel->accessory->getPreferredSize->setPreferredSize->getAccessoryPanel->setMaximumSize->else->getAccessoryPanel->setPreferredSize->getAccessoryPanel->setMaximumSize
GTKFileChooserUI#doFileSelectionModeChanged(PropertyChangeEvent)::: file chooser i do file selection mode changed:::directoryList->clearSelection->rightPanel->e->getNewValue->intValue->setVisible->super->doFileSelectionModeChanged
GTKFileChooserUI#doMultiSelectionChanged(PropertyChangeEvent)::: file chooser i do multi selection changed:::if->getFileChooser->isMultiSelectionEnabled->fileList->setSelectionMode->else->fileList->setSelectionMode->fileList->clearSelection->super->doMultiSelectionChanged
GTKFileChooserUI#doControlButtonsChanged(PropertyChangeEvent)::: file chooser i do control buttons changed:::super->doControlButtonsChanged->filechooser->getFileChooser->if->filechooser->getControlButtonsAreShown->filechooser->add->else->filechooser->remove->updateDefaultButton
GTKFileChooserUI#doAncestorChanged(PropertyChangeEvent)::: file chooser i do ancestor changed:::if->e->getOldValue->e->getNewValue->fileNameTextField->selectAll->fileNameTextField->requestFocus->updateDefaultButton->super->doAncestorChanged
GTKFileChooserUI#createListSelectionListener(JFileChooser)::: file chooser i create list selection listener:::return->new->SelectionListener
GTKFileChooserUI.DoubleClickListener#mouseClicked(MouseEvent)::: double click listener mouse clicked:::if->SwingUtilities->isLeftMouseButton->e->getClickCount->index->list->e->getPoint->locationToIndex->if->f->list->getModel->getElementAt->try->ShellFolder->getNormalizedFile->catch->finally->if->getFileChooser->isTraversable->list->clearSelection->if->getFileChooser->getCurrentDirectory->equals->getFileChooser->rescanCurrentDirectory->else->getFileChooser->setCurrentDirectory->else->getFileChooser->approveSelection
GTKFileChooserUI.DoubleClickListener#mouseEntered(MouseEvent)::: double click listener mouse entered:::if->th1->getFileChooser->getTransferHandler->th2->list->getTransferHandler->if->list->setTransferHandler->if->getFileChooser->getDragEnabled->list->getDragEnabled->list->getFileChooser->getDragEnabled->setDragEnabled
GTKFileChooserUI#createDoubleClickListener(JFileChooser, JList)::: file chooser i create double click listener:::return->new->DoubleClickListener
GTKFileChooserUI.SelectionListener#valueChanged(ListSelectionEvent)::: selection listener value changed:::if->e->getValueIsAdjusting->chooser->getFileChooser->list->e->getSource->if->chooser->isMultiSelectionEnabled->files->objects->list->getSelectedValues->if->if->isDirectory->chooser->isTraversable->chooser->getFileSelectionMode->chooser->getFileSystemView->isFileSystem->setDirectorySelected->setDirectory->else->fList->new->ArrayList<File>->foreach->f->if->chooser->isFileSelectionEnabled->f->isFile->chooser->isDirectorySelectionEnabled->f->isDirectory->fList->add->if->fList->size->fList->fList->size->new->FileArr->toArray->setDirectorySelected->chooser->setSelectedFiles->else->file->list->getSelectedValue->if->file->isDirectory->chooser->isTraversable->chooser->getFileSelectionMode->chooser->getFileSystemView->isFileSystem->setDirectorySelected->setDirectory->else->setDirectorySelected->if->chooser->setSelectedFile
GTKFileChooserUI#createUI(JComponent)::: file chooser i create i:::return->new->GTKFileChooserUI
GTKFileChooserUI#installUI(JComponent)::: file chooser i install i:::new->BorderLayout->new->JPanel->accessoryPanel->setName->super->installUI
GTKFileChooserUI#uninstallUI(JComponent)::: file chooser i uninstall i:::c->removePropertyChangeListener->super->uninstallUI->if->accessoryPanel->removeAll->getFileChooser->removeAll
GTKFileChooserUI#installComponents(JFileChooser)::: file chooser i install components:::super->installComponents->leftToRight->fc->getComponentOrientation->isLeftToRight->fc->new->BorderLayout->setLayout->fc->setAlignmentX->topButtonPanel->new->FlowLayout->new->JPanel->topButtonPanel->new->EmptyBorder->setBorder->topButtonPanel->setName->if->UIManager->getBoolean->newFolderButton->getNewFolderAction->new->JButton->newFolderButton->setName->newFolderButton->setMnemonic->newFolderButton->setToolTipText->newFolderButton->setText->topButtonPanel->add->deleteFileButton->new->JButton->deleteFileButton->setName->deleteFileButton->setMnemonic->deleteFileButton->setToolTipText->deleteFileButton->setEnabled->topButtonPanel->add->rfa->new->RenameFileAction->renameFileButton->new->JButton->if->rfa->setEnabled->renameFileButton->setText->renameFileButton->setName->renameFileButton->setMnemonic->renameFileButton->setToolTipText->topButtonPanel->add->fc->add->interior->new->JPanel->interior->new->EmptyBorder->setBorder->interior->setName->align->interior->new->BoxLayout->setLayout->fc->add->comboBoxPanel->new->FlowLayout->new->JPanel->comboBoxPanel->new->EmptyBorder->setBorder->comboBoxPanel->setName->createDirectoryComboBoxModel->new->JComboBox<>->directoryComboBox->setName->directoryComboBox->putClientProperty->directoryComboBox->addActionListener->directoryComboBox->setMaximumRowCount->comboBoxPanel->add->interior->add->centerPanel->new->BorderLayout->new->JPanel->centerPanel->setName->splitPanel->new->JSplitPane->splitPanel->setName->splitPanel->setDividerLocation->leftPanel->new->GridBagLayout->new->JPanel->leftPanel->setName->headerRenderer->new->JTableHeader->getDefaultRenderer->directoryListLabel->headerRenderer->getTableCellRendererComponent->directoryListLabel->setName->leftPanel->new->Insets->new->GridBagConstraints->add->leftPanel->createDirectoryList->new->Insets->new->GridBagConstraints->add->directoryListLabel->setDisplayedMnemonic->directoryListLabel->setLabelFor->new->GridBagLayout->new->JPanel->rightPanel->setName->new->JTableHeader->getDefaultRenderer->fileListLabel->headerRenderer->getTableCellRendererComponent->fileListLabel->setName->rightPanel->new->Insets->new->GridBagConstraints->add->rightPanel->createFilesList->new->Insets->new->GridBagConstraints->add->fileListLabel->setDisplayedMnemonic->fileListLabel->setLabelFor->splitPanel->add->splitPanel->add->centerPanel->add->accessoryPanel->getAccessoryPanel->accessory->fc->getAccessory->if->if->accessoryPanel->setPreferredSize->accessoryPanel->setMaximumSize->else->getAccessoryPanel->add->accessoryPanel->accessory->getPreferredSize->setPreferredSize->accessoryPanel->setMaximumSize->align->centerPanel->add->interior->add->interior->Box->createRigidArea->add->pathFieldPanel->new->FlowLayout->new->JPanel->pathFieldPanel->new->EmptyBorder->setBorder->pathFieldLabel->new->JLabel->pathFieldLabel->setName->pathFieldLabel->setDisplayedMnemonic->align->pathFieldPanel->add->pathFieldPanel->Box->createRigidArea->add->currentDirectory->fc->getCurrentDirectory->curDirName->if->currentDirectory->getPath->tmp->new->JLabel->pathField->setName->align->pathFieldPanel->add->interior->add->tmp2->new->JTextField->pathFieldLabel->setLabelFor->forwardTraversalKeys->fileNameTextField->getFocusTraversalKeys->new->HashSet<AWTKeyStroke>->forwardTraversalKeys->KeyStroke->getKeyStroke->remove->fileNameTextField->setFocusTraversalKeys->fileNameTextField->setName->fileNameTextField->getActionMap->getFileNameCompletionAction->put->fileNameTextField->getInputMap->KeyStroke->getKeyStroke->put->interior->add->panel->new->JPanel->panel->new->FlowLayout->setLayout->panel->new->EmptyBorder->setBorder->filterLabel->new->JLabel->filterLabel->setName->filterLabel->setDisplayedMnemonic->panel->add->createFilterComboBoxModel->fc->addPropertyChangeListener->new->JComboBox<>->filterComboBox->createFilterComboBoxRenderer->setRenderer->filterLabel->setLabelFor->interior->Box->createRigidArea->add->interior->add->interior->add->new->FlowLayout->new->JPanel->bottomButtonPanel->setName->align->pnButtons->new->GridLayout->new->JPanel->cancelButton->getCancelButton->align->cancelButton->setMargin->pnButtons->add->approveButton->getApproveButton->align->approveButton->setMargin->pnButtons->add->bottomButtonPanel->add->if->fc->getControlButtonsAreShown->fc->add
GTKFileChooserUI#installListeners(JFileChooser)::: file chooser i install listeners:::super->installListeners->new->GTKFCPropertyChangeListener->fc->addPropertyChangeListener
GTKFileChooserUI#getMnemonic(String, Locale)::: file chooser i get mnemonic:::return->SwingUtilities2->getUIDefaultsInt
GTKFileChooserUI#uninstallListeners(JFileChooser)::: file chooser i uninstall listeners:::super->uninstallListeners->if->fc->removePropertyChangeListener
GTKFileChooserUI.GTKFCPropertyChangeListener#propertyChange(PropertyChangeEvent)::: property change listener property change:::prop->e->getPropertyName->if->prop->equals->e->getNewValue->equals->else->if->prop->equals->e->getNewValue->equals
GTKFileChooserUI#installDefaults(JFileChooser)::: file chooser i install defaults:::super->installDefaults->UIManager->getBoolean->fc->getClientProperty->equals->fc->getClientProperty->equals
GTKFileChooserUI#installIcons(JFileChooser)::: file chooser i install icons:::UIManager->getIcon->UIManager->getIcon
GTKFileChooserUI#installStrings(JFileChooser)::: file chooser i install strings:::super->installStrings->l->fc->getLocale->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->getMnemonic->getMnemonic->getMnemonic->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->UIManager->getInt
GTKFileChooserUI#uninstallStrings(JFileChooser)::: file chooser i uninstall strings:::super->uninstallStrings
GTKFileChooserUI#createFilesList()::: file chooser i create files list:::new->JList<>->fileList->setName->fileList->putClientProperty->if->getFileChooser->isMultiSelectionEnabled->fileList->setSelectionMode->else->fileList->setSelectionMode->fileList->new->GTKFileListModel->setModel->fileList->getSelectionModel->removeSelectionInterval->fileList->new->FileCellRenderer->setCellRenderer->fileList->getFileChooser->createListSelectionListener->addListSelectionListener->fileList->getFileChooser->createDoubleClickListener->addMouseListener->align->scrollpane->new->JScrollPane->scrollpane->setVerticalScrollBarPolicy->scrollpane->setName->scrollpane->setPreferredSize->scrollpane->setMaximumSize->align->return
GTKFileChooserUI#createDirectoryList()::: file chooser i create directory list:::new->JList<>->directoryList->setName->directoryList->putClientProperty->align->directoryList->new->DirectoryCellRenderer->setCellRenderer->new->GTKDirectoryListModel->directoryList->getSelectionModel->removeSelectionInterval->directoryList->setModel->directoryList->getFileChooser->createDoubleClickListener->addMouseListener->directoryList->getFileChooser->createListSelectionListener->addListSelectionListener->scrollpane->new->JScrollPane->scrollpane->setVerticalScrollBarPolicy->scrollpane->setName->scrollpane->setMaximumSize->scrollpane->setPreferredSize->align->return
GTKFileChooserUI#createModel()::: file chooser i create model:::new->GTKDirectoryModel
GTKFileChooserUI#getModel()::: file chooser i get model:::return
GTKFileChooserUI#getApproveSelectionAction()::: file chooser i get approve selection action:::return
GTKFileChooserUI.GTKDirectoryModel#sort(Vector)::: directory model sort:::getFileChooser->getFileSystemView->Collections->sort
GTKFileChooserUI.GTKDirectoryListModel#getSize()::: directory list model get size:::return->getModel->getDirectories->size
GTKFileChooserUI.GTKDirectoryListModel#getElementAt(int)::: directory list model get element at:::return->getModel->getDirectories->elementAt
GTKFileChooserUI.GTKDirectoryListModel#intervalAdded(ListDataEvent)::: directory list model interval added:::e->getIndex0->e->getIndex1->fireIntervalAdded
GTKFileChooserUI.GTKDirectoryListModel#intervalRemoved(ListDataEvent)::: directory list model interval removed:::e->getIndex0->e->getIndex1->fireIntervalRemoved
GTKFileChooserUI.GTKDirectoryListModel#fireContentsChanged()::: directory list model fire contents changed:::getModel->getDirectories->size->fireContentsChanged
GTKFileChooserUI.GTKDirectoryListModel#contentsChanged(ListDataEvent)::: directory list model contents changed:::fireContentsChanged
GTKFileChooserUI.GTKDirectoryListModel#directoryChanged()::: directory list model directory changed:::getFileChooser->getFileSystemView->getFileChooser->getCurrentDirectory->createFileObject
GTKFileChooserUI.GTKFileListModel#getSize()::: file list model get size:::return->getModel->getFiles->size
GTKFileChooserUI.GTKFileListModel#contains(Object)::: file list model contains:::return->getModel->getFiles->contains
GTKFileChooserUI.GTKFileListModel#indexOf(Object)::: file list model index of:::return->getModel->getFiles->indexOf
GTKFileChooserUI.GTKFileListModel#getElementAt(int)::: file list model get element at:::return->getModel->getFiles->elementAt
GTKFileChooserUI.GTKFileListModel#intervalAdded(ListDataEvent)::: file list model interval added:::e->getIndex0->e->getIndex1->fireIntervalAdded
GTKFileChooserUI.GTKFileListModel#intervalRemoved(ListDataEvent)::: file list model interval removed:::e->getIndex0->e->getIndex1->fireIntervalRemoved
GTKFileChooserUI.GTKFileListModel#fireContentsChanged()::: file list model fire contents changed:::getModel->getFiles->size->fireContentsChanged
GTKFileChooserUI.GTKFileListModel#contentsChanged(ListDataEvent)::: file list model contents changed:::fireContentsChanged
GTKFileChooserUI.FileCellRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: file cell renderer get list cell renderer component:::super->getListCellRendererComponent->getFileChooser->getName->setText->if->getFileChooser->getIcon->setIcon->return
GTKFileChooserUI.DirectoryCellRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: directory cell renderer get list cell renderer component:::super->getListCellRendererComponent->if->getFileChooser->getIcon->setIcon->getFileChooser->getName->setText->else->getFileChooser->getName->setText->return
GTKFileChooserUI#getPreferredSize(JComponent)::: file chooser i get preferred size:::prefSize->new->Dimension->accessory->getFileChooser->getAccessory->if->accessory->getPreferredSize->d->c->getLayout->preferredLayoutSize->if->return->new->Dimension->else->return
GTKFileChooserUI#getMinimumSize(JComponent)::: file chooser i get minimum size:::return->new->Dimension
GTKFileChooserUI#getMaximumSize(JComponent)::: file chooser i get maximum size:::return->new->Dimension
GTKFileChooserUI#align(JComponent)::: file chooser i align:::c->setAlignmentX->c->setAlignmentY
GTKFileChooserUI#getNewFolderAction()::: file chooser i get new folder action:::if->new->NewFolderAction->newFolderAction->setEnabled->return
GTKFileChooserUI#createDirectoryComboBoxModel(JFileChooser)::: file chooser i create directory combo box model:::return->new->DirectoryComboBoxModel
GTKFileChooserUI.DirectoryComboBoxModel#addItem(File):::Adds the directory to the model and sets it to be selected, additionally clears out the previous selected directory and the paths leading up to it, if any.:::if->return->oldSize->directories->size->directories->clear->if->fireIntervalRemoved->canonical->try->fsv->ShellFolder->getNormalizedFile->getPath->createFileObject->catch->finally->f->do->directories->add->while->f->getParentFile->newSize->directories->size->if->fireIntervalAdded->setSelectedItem
GTKFileChooserUI.DirectoryComboBoxModel#setSelectedItem(Object)::: directory combo box model set selected item:::fireContentsChanged
GTKFileChooserUI.DirectoryComboBoxModel#getSelectedItem()::: directory combo box model get selected item:::return
GTKFileChooserUI.DirectoryComboBoxModel#getSize()::: directory combo box model get size:::return->directories->size
GTKFileChooserUI.DirectoryComboBoxModel#getElementAt(int)::: directory combo box model get element at:::return->directories->elementAt
GTKFileChooserUI.DirectoryComboBoxAction#actionPerformed(ActionEvent)::: directory combo box action action performed:::f->directoryComboBox->getSelectedItem->getFileChooser->setCurrentDirectory
GTKFileChooserUI.NewFolderAction#actionPerformed(ActionEvent)::: new folder action action performed:::if->return->fc->getFileChooser->currentDirectory->fc->getCurrentDirectory->dirName->JOptionPane->showInputDialog->if->if->currentDirectory->exists->JOptionPane->MessageFormat->format->showMessageDialog->return->newDir->fc->getFileSystemView->createFileObject->if->newDir->mkdir->JOptionPane->showMessageDialog->fc->rescanCurrentDirectory
GTKFileChooserUI.GTKApproveSelectionAction#actionPerformed(ActionEvent)::: approve selection action action performed:::if->isDirectorySelected->dir->getDirectory->try->if->ShellFolder->getNormalizedFile->catch->finally->if->getFileChooser->getCurrentDirectory->equals->directoryList->clearSelection->fileList->clearSelection->sm->fileList->getSelectionModel->if->moveLeadSelectionIndex->sm->setAnchorSelectionIndex->getFileChooser->rescanCurrentDirectory->return->super->actionPerformed
GTKFileChooserUI.RenameFileAction#actionPerformed(ActionEvent)::: rename file action action performed:::if->getFileName->equals->return->fc->getFileChooser->currentDirectory->fc->getCurrentDirectory->newFileName->JOptionPane->new->MessageFormat->new->ObjectArr->getFileName->format->getFileName->showInputDialog->if->oldFile->fc->getFileSystemView->getFileName->createFileObject->newFile->fc->getFileSystemView->createFileObject->if->getModel->renameFile->JOptionPane->new->MessageFormat->new->ObjectArr->getFileName->format->showMessageDialog->else->getFileChooser->getName->setFileName->fc->rescanCurrentDirectory
GTKFileChooserUI#createFilterComboBoxRenderer()::: file chooser i create filter combo box renderer:::return->new->FilterComboBoxRenderer
GTKFileChooserUI.FilterComboBoxRenderer#getName()::: filter combo box renderer get name:::name->super->getName->if->return->return
GTKFileChooserUI.FilterComboBoxRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: filter combo box renderer get list cell renderer component:::super->getListCellRendererComponent->setName->if->if->getDescription->setText->else->setText->return
GTKFileChooserUI#createFilterComboBoxModel()::: file chooser i create filter combo box model:::return->new->FilterComboBoxModel
GTKFileChooserUI.FilterComboBoxModel#propertyChange(PropertyChangeEvent)::: filter combo box model property change:::prop->e->getPropertyName->if->e->getNewValue->fireContentsChanged->else->if->fireContentsChanged
GTKFileChooserUI.FilterComboBoxModel#setSelectedItem(Object)::: filter combo box model set selected item:::if->getFileChooser->setFileFilter->fireContentsChanged
GTKFileChooserUI.FilterComboBoxModel#getSelectedItem()::: filter combo box model get selected item:::currentFilter->getFileChooser->getFileFilter->found->if->foreach->if->if->getFileChooser->addChoosableFileFilter->return->getFileChooser->getFileFilter
GTKFileChooserUI.FilterComboBoxModel#getSize()::: filter combo box model get size:::if->return->else->return
GTKFileChooserUI.FilterComboBoxModel#getElementAt(int)::: filter combo box model get element at:::if->getSize->return->getFileChooser->getFileFilter->if->return->else->return
GTKGraphicsUtils#paintText(SynthContext, Graphics, String, int, int, int)::: graphics utils paint text:::if->text->length->return->if->context->getRegion->return->componentState->context->getComponentState->themeName->GTKLookAndFeel->getGtkThemeName->if->themeName->startsWith->context->getRegion->shouldShadowText->g->setColor->super->paintText->g->setColor->super->paintText
GTKGraphicsUtils#paintText(SynthContext, Graphics, String, Rectangle, int):::Paints text at the specified location:::if->text->length->return->id->context->getRegion->if->context->getComponentState->source->context->getComponent->if->isFocusPainted->synthState->context->getComponentState->style->context->getStyle->focusSize->style->getClassSpecificIntValue->focusPad->style->getClassSpecificIntValue->totalFocus->x->y->w->h->color->g->getColor->paintFocus->g->setColor->super->paintText
GTKGraphicsUtils#shouldShadowText(Region, int)::: graphics utils should shadow text:::gtkState->GTKLookAndFeel->synthStateToGTKState->return
GTKIconFactory#getIcon(String)::: icon factory get icon:::result->iconsPool->get->if->if->new->SynthExpanderIcon->else->if->new->ToolBarHandleIcon->else->if->new->MenuArrowIcon->else->new->DelegatingIcon->iconsPool->put->return
GTKIconFactory#getAscendingSortIcon()::: icon factory get ascending sort icon:::return->getIcon
GTKIconFactory#getDescendingSortIcon()::: icon factory get descending sort icon:::return->getIcon
GTKIconFactory#getTreeExpandedIcon()::: icon factory get tree expanded icon:::return->getIcon
GTKIconFactory#getTreeCollapsedIcon()::: icon factory get tree collapsed icon:::return->getIcon
GTKIconFactory#getRadioButtonIcon()::: icon factory get radio button icon:::return->getIcon
GTKIconFactory#getCheckBoxIcon()::: icon factory get check box icon:::return->getIcon
GTKIconFactory#getMenuArrowIcon()::: icon factory get menu arrow icon:::return->getIcon
GTKIconFactory#getCheckBoxMenuItemCheckIcon()::: icon factory get check box menu item check icon:::return->getIcon
GTKIconFactory#getRadioButtonMenuItemCheckIcon()::: icon factory get radio button menu item check icon:::return->getIcon
GTKIconFactory#getToolBarHandleIcon()::: icon factory get tool bar handle icon:::return->getIcon
GTKIconFactory#resetIcons()::: icon factory reset icons:::synchronized->foreach->iconsPool->values->di->resetIconDimensions
GTKIconFactory.DelegatingIcon#paintIcon(SynthContext, Graphics, int, int, int, int)::: delegating icon paint icon:::if->getMethod->paintIcon
GTKIconFactory.DelegatingIcon#getIconWidth(SynthContext)::: delegating icon get icon width:::return->getIconDimension
GTKIconFactory.DelegatingIcon#getIconHeight(SynthContext)::: delegating icon get icon height:::return->getIconDimension
GTKIconFactory.DelegatingIcon#resetIconDimensions()::: delegating icon reset icon dimensions:::
GTKIconFactory.DelegatingIcon#getMethod()::: delegating icon get method:::if->resolveMethod->return
GTKIconFactory.DelegatingIcon#getMethodParamTypes()::: delegating icon get method param types:::return
GTKIconFactory.DelegatingIcon#resolveMethod(String)::: delegating icon resolve method:::try->return->getMethodParamTypes->getMethod->catch->finally->return
GTKIconFactory.DelegatingIcon#getIconDimension(SynthContext)::: delegating icon get icon dimension:::if->return->if->return->region->context->getRegion->style->context->getStyle->if->GTKLookAndFeel->is3->value->style->getClassSpecificValue->if->floatValue->style->getFont->getSize2D->style->getClassSpecificIntValue->if->return->style->getClassSpecificIntValue->if->style->getClassSpecificIntValue->else->if->return
GTKIconFactory.SynthExpanderIcon#paintIcon(SynthContext, Graphics, int, int, int, int)::: synth expander icon paint icon:::if->super->paintIcon->updateSizeIfNecessary
GTKIconFactory.SynthExpanderIcon#getIconDimension(SynthContext)::: synth expander icon get icon dimension:::updateSizeIfNecessary->return
GTKIconFactory.SynthExpanderIcon#updateSizeIfNecessary(SynthContext)::: synth expander icon update size if necessary:::if->context->getStyle->getInt
GTKIconFactory.ToolBarHandleIcon#getMethodParamTypes()::: tool bar handle icon get method param types:::return
GTKIconFactory.ToolBarHandleIcon#paintIcon(SynthContext, Graphics, int, int, int, int)::: tool bar handle icon paint icon:::if->toolbar->context->getComponent->orientation->toolbar->getOrientation->if->SynthLookAndFeel->getStyleFactory->context->getComponent->getStyle->new->SynthContext->getMethod->paintIcon
GTKIconFactory.ToolBarHandleIcon#getIconWidth(SynthContext)::: tool bar handle icon get icon width:::if->return->if->context->getComponent->getOrientation->return->else->return->context->getComponent->getWidth
GTKIconFactory.ToolBarHandleIcon#getIconHeight(SynthContext)::: tool bar handle icon get icon height:::if->return->if->context->getComponent->getOrientation->return->context->getComponent->getHeight->else->return
GTKIconFactory.MenuArrowIcon#getMethodParamTypes()::: menu arrow icon get method param types:::return
GTKIconFactory.MenuArrowIcon#paintIcon(SynthContext, Graphics, int, int, int, int)::: menu arrow icon paint icon:::if->arrowDir->if->context->getComponent->getComponentOrientation->isLeftToRight->getMethod->paintIcon
GTKLookAndFeel#is2_2():::Returns true if running on system containing at least 2.2.:::return
GTKLookAndFeel#is3()::: look and feel is3:::return
GTKLookAndFeel#SwingOrientationConstantToGTK(int):::Maps a swing constant to a GTK constant.:::switch->return->return->return->return->return
GTKLookAndFeel#synthStateToGTKStateType(int):::Maps from Synth state to native GTK state using typesafe enumeration StateType:::result->switch->break->break->break->break->break->return
GTKLookAndFeel#synthStateToGTKState(Region, int):::Maps from a Synth state to the corresponding GTK state:::if->if->else->else->if->if->else->if->else->else->if->if->else->if->if->else->if->else->else->else->if->else->if->else->if->else->return
GTKLookAndFeel#isText(Region)::: look and feel is text:::return
GTKLookAndFeel#getDefaults()::: look and feel get defaults:::table->super->getDefaults->table->put->table->put->initResourceBundle->initSystemColorDefaults->initComponentDefaults->installPropertyChangeListeners->return
GTKLookAndFeel#installPropertyChangeListeners()::: look and feel install property change listeners:::if->kit->Toolkit->getDefaultToolkit->pcl->new->WeakPCL->kit->pcl->getKey->addPropertyChangeListener->new->WeakPCL->kit->pcl->getKey->addPropertyChangeListener->new->WeakPCL->kit->pcl->getKey->addPropertyChangeListener->flushUnreferenced
GTKLookAndFeel#initResourceBundle(UIDefaults)::: look and feel init resource bundle:::SwingAccessor->getUIDefaultsAccessor->addInternalBundle
GTKLookAndFeel#initComponentDefaults(UIDefaults)::: look and feel init component defaults:::super->initComponentDefaults->zeroBorder->new->BorderUIResource.EmptyBorderUIResource->focusBorder->new->GTKStyle.GTKLazyValue->focusSelectedBorder->new->GTKStyle.GTKLazyValue->noFocusBorder->new->GTKStyle.GTKLazyValue->factory->getStyleFactory->tableStyle->factory->getStyle->tableBg->tableStyle->getGTKColor->tableFocusCellBg->tableStyle->getGTKColor->tableFocusCellFg->tableStyle->getGTKColor->progStyle->factory->getStyle->progXThickness->progStyle->getXThickness->progYThickness->progStyle->getYThickness->hProgWidth->hProgHeight->vProgWidth->vProgHeight->caretBlinkRate->if->getSetting->equals->Integer->valueOf->else->getSetting->if->Integer->valueOf->zeroInsets->new->InsetsUIResource->defaultCaretAspectRatio->Double->valueOf->caretColor->table->getColor->controlText->table->getColor->fieldInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->passwordInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->editorMargin->new->InsetsUIResource->multilineInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->defaults->new->ObjectArr->Integer->valueOf->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->GTKStyle.GTKLazyValue->new->FontLazyValue->new->GTKStyle.GTKLazyValue->new->FontLazyValue->new->UIDefaults.ActiveValue->new->FontLazyValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->FontLazyValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->GTKStyle.GTKLazyValue->new->ObjectArr->new->FontLazyValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->GTKStyle.GTKLazyValue->new->FontLazyValue->new->ObjectArr->new->FontLazyValue->new->FontLazyValue->new->DimensionUIResource->new->ObjectArr->new->FontLazyValue->new->FontLazyValue->new->FontLazyValue->new->ObjectArr->new->ObjectArr->new->FontLazyValue->new->DimensionUIResource->new->DimensionUIResource->new->FontLazyValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->GTKStyle.GTKLazyValue->new->FontLazyValue->new->GTKStyle.GTKLazyValue->new->FontLazyValue->new->ObjectArr->Integer->valueOf->Integer->valueOf->new->Dimension->new->Dimension->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->Integer->valueOf->Integer->valueOf->Integer->valueOf->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->ObjectArr->new->UIDefaults.LazyInputMap->Integer->valueOf->Integer->valueOf->Integer->valueOf->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->InsetsUIResource->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->GTKStyle.GTKLazyValue->new->GTKStyle.GTKLazyValue->new->FontLazyValue->new->FontLazyValue->new->FontLazyValue->new->FontLazyValue->new->UIDefaults.LazyValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->DimensionUIResource->new->UIDefaults.ActiveValue->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->FontLazyValue->Integer->valueOf->Integer->valueOf->Integer->valueOf->new->GTKStyle.GTKLazyValue->new->GTKStyle.GTKLazyValue->Integer->valueOf->Integer->valueOf->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->FontLazyValue->new->FontLazyValue->table->putDefaults->if->table->put->if->table->putAll
GTKLookAndFeel#initSystemColorDefaults(UIDefaults)::: look and feel init system color defaults:::factory->getStyleFactory->windowStyle->factory->getStyle->table->windowStyle->getGTKColor->put->table->windowStyle->getGTKColor->put->entryStyle->factory->getStyle->table->entryStyle->getGTKColor->put->table->entryStyle->getGTKColor->put->table->entryStyle->getGTKColor->put->table->entryStyle->getGTKColor->put->table->entryStyle->getGTKColor->put->caretColor->entryStyle->getClassSpecificValue->if->table->put->menuStyle->factory->getStyle->table->menuStyle->getGTKColor->put->table->menuStyle->getGTKColor->put->scrollbarStyle->factory->getStyle->table->scrollbarStyle->getGTKColor->put->infoStyle->factory->getStyle->table->infoStyle->getGTKColor->put->table->infoStyle->getGTKColor->put->desktopStyle->factory->getStyle->table->desktopStyle->getGTKColor->put->widgetStyle->factory->getStyle->bg->widgetStyle->getGTKColor->table->put->table->put->table->widgetStyle->getGTKColor->put->table->widgetStyle->getGTKColor->put->table->widgetStyle->getGTKColor->put->table->widgetStyle->getGTKColor->put->table->widgetStyle->getGTKColor->put->table->widgetStyle->getGTKColor->put->table->widgetStyle->getGTKColor->put->table->widgetStyle->getGTKColor->put->table->widgetStyle->getGTKColor->put
GTKLookAndFeel#createUI(JComponent):::Creates the GTK look and feel class for the passed in Component.:::key->c->getUIClassID->intern->if->return->GTKFileChooserUI->createUI->return->SynthLookAndFeel->createUI
GTKLookAndFeel#getGtkThemeName():::Returns the cached gtkThemeName:::return
GTKLookAndFeel#isLeftToRight(Component)::: look and feel is left to right:::return->c->getComponentOrientation->isLeftToRight
GTKLookAndFeel#initialize()::: look and feel initialize:::toolkit->Toolkit->getDefaultToolkit->if->loadGTK->throw->new->InternalError->if->UNIXToolkit->getGtkVersion->version->AccessController->new->GetPropertyAction->doPrivileged->if->version->equals->else->else->if->UNIXToolkit->getGtkVersion->super->initialize->loadStyles->SwingUtilities2->isLocalDisplay->new->HashMap<>->SwingUtilities2->putAATextInfo
GTKLookAndFeel#flushUnreferenced()::: look and feel flush unreferenced:::pcl->while->queue->poll->pcl->dispose
GTKLookAndFeel.WeakPCL#getKey()::: weak l get key:::return
GTKLookAndFeel.WeakPCL#propertyChange(PropertyChangeEvent)::: weak l property change:::lnf->get->if->UIManager->getLookAndFeel->dispose->else->SwingUtilities->new->Runnable->invokeLater
GTKLookAndFeel.WeakPCL#dispose()::: weak l dispose:::kit->removePropertyChangeListener
GTKLookAndFeel#isSupportedLookAndFeel()::: look and feel is supported look and feel:::toolkit->Toolkit->getDefaultToolkit->return->isNativeGTKAvailable
GTKLookAndFeel#isNativeLookAndFeel()::: look and feel is native look and feel:::return
GTKLookAndFeel#getDescription()::: look and feel get description:::return
GTKLookAndFeel#getName()::: look and feel get name:::return
GTKLookAndFeel#getID()::: look and feel get d:::return
GTKLookAndFeel#loadSystemColors(UIDefaults, String[], boolean)::: look and feel load system colors:::super->loadSystemColors
GTKLookAndFeel#loadStyles()::: look and feel load styles:::Toolkit->getDefaultToolkit->getDesktopProperty->getGTKStyleFactory->setStyleFactory->if->table->UIManager->getLookAndFeelDefaults->initSystemColorDefaults->initComponentDefaults
GTKLookAndFeel#getGTKStyleFactory()::: look and feel get style factory:::engine->iconSizes->engine->getSetting->if->if->configIconSizes->println->fontName->Toolkit->getDefaultToolkit->getDesktopProperty->if->engine->getSetting->if->if->new->GTKStyleFactory->defaultFont->PangoFonts->lookupFont->styleFactory->initStyles->return
GTKLookAndFeel#configIconSizes(String)::: look and feel config icon sizes:::sizes->sizeString->split->for->i->return
GTKLookAndFeel#shouldUpdateStyleOnAncestorChanged():::Returns whether or not the UIs should update their SynthStyles from the SynthStyleFactory when the ancestor of the Component changes.:::return
GTKLookAndFeel#getLayoutStyle()::: look and feel get layout style:::return
GTKLookAndFeel.GnomeLayoutStyle#getPreferredGap(JComponent, JComponent, ComponentPlacement, int, Container)::: gnome layout style get preferred gap:::super->getPreferredGap->switch->if->return->if->isLabelAndNonlabel->return->return->return->return
GTKLookAndFeel.GnomeLayoutStyle#getContainerGap(JComponent, int, Container)::: gnome layout style get container gap:::super->getContainerGap->return
GTKPainter#getName(SynthContext)::: painter get name:::return->context->getRegion->isSubregion->context->getComponent->getName
GTKPainter#paintCheckBoxBackground(SynthContext, Graphics, int, int, int, int)::: painter paint check box background:::paintRadioButtonBackground
GTKPainter#paintCheckBoxMenuItemBackground(SynthContext, Graphics, int, int, int, int)::: painter paint check box menu item background:::paintRadioButtonMenuItemBackground
GTKPainter#paintFormattedTextFieldBackground(SynthContext, Graphics, int, int, int, int)::: painter paint formatted text field background:::paintTextBackground
GTKPainter#paintToolBarDragWindowBackground(SynthContext, Graphics, int, int, int, int)::: painter paint tool bar drag window background:::paintToolBarBackground
GTKPainter#paintToolBarBackground(SynthContext, Graphics, int, int, int, int)::: painter paint tool bar background:::id->context->getRegion->state->context->getComponentState->gtkState->GTKLookAndFeel->synthStateToGTKState->orientation->context->getComponent->getOrientation->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintBox->ENGINE->finishPainting
GTKPainter#paintToolBarContentBackground(SynthContext, Graphics, int, int, int, int)::: painter paint tool bar content background:::id->context->getRegion->orientation->context->getComponent->getOrientation->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintBox->ENGINE->finishPainting
GTKPainter#paintPasswordFieldBackground(SynthContext, Graphics, int, int, int, int)::: painter paint password field background:::paintTextBackground
GTKPainter#paintTextFieldBackground(SynthContext, Graphics, int, int, int, int)::: painter paint text field background:::if->getName->paintTreeCellEditorBackground->else->paintTextBackground
GTKPainter#paintRadioButtonBackground(SynthContext, Graphics, int, int, int, int)::: painter paint radio button background:::id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->if->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintFlatBox->ENGINE->finishPainting
GTKPainter#paintRadioButtonMenuItemBackground(SynthContext, Graphics, int, int, int, int)::: painter paint radio button menu item background:::id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->if->synchronized->if->ENGINE->paintCachedImage->shadow->GTKLookAndFeel->is2_2->ENGINE->startPainting->ENGINE->paintBox->ENGINE->finishPainting
GTKPainter#paintLabelBackground(SynthContext, Graphics, int, int, int, int)::: painter paint label background:::name->getName->c->context->getComponent->container->c->getParent->if->paintButtonBackgroundImpl->else->if->container->getParent->paintTextBackground
GTKPainter#paintInternalFrameBorder(SynthContext, Graphics, int, int, int, int)::: painter paint internal frame border:::paintFrameBorder
GTKPainter#paintDesktopPaneBackground(SynthContext, Graphics, int, int, int, int)::: painter paint desktop pane background:::fillArea
GTKPainter#paintDesktopIconBorder(SynthContext, Graphics, int, int, int, int)::: painter paint desktop icon border:::paintFrameBorder
GTKPainter#paintButtonBackground(SynthContext, Graphics, int, int, int, int)::: painter paint button background:::name->getName->if->name->startsWith->paintButtonBackground->else->button->context->getComponent->paintBG->button->isContentAreaFilled->button->isBorderPainted->paintFocus->button->isFocusPainted->defaultCapable->isDefaultCapable->toolButton->button->getParent->paintButtonBackgroundImpl
GTKPainter#paintButtonBackgroundImpl(SynthContext, Graphics, Region, String, int, int, int, int, boolean, boolean, boolean, boolean)::: painter paint button background impl:::state->context->getComponentState->synchronized->if->ENGINE->paintCachedImage->return->ENGINE->startPainting->style->context->getStyle->if->defaultInsets->style->getClassSpecificInsetsValue->if->ENGINE->paintBox->interiorFocus->style->getClassSpecificBoolValue->focusSize->style->getClassSpecificIntValue->focusPad->style->getClassSpecificIntValue->totalFocusSize->xThickness->style->getXThickness->yThickness->style->getYThickness->if->gtkState->GTKLookAndFeel->synthStateToGTKState->paintBg->if->else->if->shadowType->if->ENGINE->paintBox->if->if->else->ENGINE->paintFocus->ENGINE->finishPainting
GTKPainter#paintArrowButtonForeground(SynthContext, Graphics, int, int, int, int, int)::: painter paint arrow button foreground:::id->context->getRegion->c->context->getComponent->name->c->getName->arrowType->switch->break->break->break->break->detail->if->if->else->else->if->else->if->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->shadowType->synchronized->if->ENGINE->paintCachedImage->return->ENGINE->startPainting->ENGINE->paintArrow->ENGINE->finishPainting
GTKPainter#paintArrowButtonBackground(SynthContext, Graphics, int, int, int, int)::: painter paint arrow button background:::id->context->getRegion->button->context->getComponent->name->button->getName->detail->direction->if->prop->button->getClientProperty->prop->intValue->switch->break->break->else->if->else->if->else->if->state->context->getComponentState->synchronized->if->ENGINE->paintCachedImage->return->ENGINE->startPainting->if->detail->startsWith->spinState->button->getParent->isEnabled->mody->modh->ENGINE->paintBox->gtkState->GTKLookAndFeel->synthStateToGTKState->shadowType->if->ENGINE->paintBox->ENGINE->finishPainting
GTKPainter#paintListBackground(SynthContext, Graphics, int, int, int, int)::: painter paint list background:::fillArea
GTKPainter#paintMenuBarBackground(SynthContext, Graphics, int, int, int, int)::: painter paint menu bar background:::id->context->getRegion->synchronized->if->ENGINE->paintCachedImage->return->style->context->getStyle->shadow->style->getClassSpecificIntValue->shadowType->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->ENGINE->startPainting->ENGINE->paintBox->ENGINE->finishPainting
GTKPainter#getBrightness(Color)::: painter get brightness:::return->Math->c->getRed->Math->c->getGreen->c->getBlue->max->max
GTKPainter#getMaxColorDiff(Color, Color)::: painter get max color diff:::return->Math->Math->c1->getRed->c2->getRed->abs->Math->Math->c1->getGreen->c2->getGreen->abs->Math->c1->getBlue->c2->getBlue->abs->max->max
GTKPainter#scaleColorComponent(int, double)::: painter scale color component:::return
GTKPainter#deriveColor(Color, int, int)::: painter derive color:::r->g->b->if->else->scaleFactor->originalColor->getRed->scaleColorComponent->originalColor->getGreen->scaleColorComponent->originalColor->getBlue->scaleColorComponent->return->new->Color
GTKPainter#paintMenuBackground(SynthContext, Graphics, int, int, int, int)::: painter paint menu background:::paintMenuItemBackground
GTKPainter#paintMenuItemBackground(SynthContext, Graphics, int, int, int, int)::: painter paint menu item background:::gtkState->GTKLookAndFeel->context->getRegion->context->getComponentState->synthStateToGTKState->if->if->GTKLookAndFeel->is3->context->getRegion->style->context->getStyle->highlightColor->style->ordinal->getID->getGTKColor->backgroundColor->style->ordinal->getID->getGTKColor->minBrightness->maxBrightness->minBrightnessDifference->actualBrightnessDifference->getMaxColorDiff->if->highlightBrightness->getBrightness->backgroundBrightness->getBrightness->originalHighlightBrightness->if->if->else->else->if->else->g->deriveColor->setColor->g->fillRect->return->id->synchronized->if->ENGINE->paintCachedImage->shadow->GTKLookAndFeel->is2_2->ENGINE->startPainting->ENGINE->paintBox->ENGINE->finishPainting
GTKPainter#paintPopupMenuBackground(SynthContext, Graphics, int, int, int, int)::: painter paint popup menu background:::id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->isHW->SunToolkit->context->getComponent->getHeavyweightComponent->synchronized->if->ENGINE->paintCachedImage->return->ENGINE->startPainting->ENGINE->paintBox->style->context->getStyle->insets->style->getInsets->ENGINE->style->getGTKColor->paintBackground->img->ENGINE->finishPainting->if->border->img->getRGB->if->img->getRGB->g2->img->getGraphics->c->new->Color->g2->Math->c->getRed->max->Math->c->getGreen->max->Math->c->getBlue->max->new->Color->setColor->g2->drawLine->g2->drawLine->g2->drawLine->g2->c->darker->setColor->g2->drawLine->g2->dispose->g->drawImage
GTKPainter#paintProgressBarBackground(SynthContext, Graphics, int, int, int, int)::: painter paint progress bar background:::id->context->getRegion->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintBox->ENGINE->finishPainting
GTKPainter#paintProgressBarForeground(SynthContext, Graphics, int, int, int, int, int)::: painter paint progress bar foreground:::id->context->getRegion->synchronized->if->return->ENGINE->startPainting->ENGINE->paintBox->ENGINE->finishPainting
GTKPainter#paintViewportBorder(SynthContext, Graphics, int, int, int, int)::: painter paint viewport border:::id->context->getRegion->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintShadow->ENGINE->finishPainting
GTKPainter#paintSeparatorBackground(SynthContext, Graphics, int, int, int, int, int)::: painter paint separator background:::id->context->getRegion->state->context->getComponentState->c->context->getComponent->style->context->getStyle->detail->if->style->getClassSpecificBoolValue->insets->c->getInsets->if->else->if->GTKLookAndFeel->is3->if->else->else->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintBox->ENGINE->finishPainting->return->if->pct->sep->size->sep->getSeparatorSize->if->style->getYThickness->else->style->getXThickness->else->insets->c->getInsets->if->else->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->if->ENGINE->paintHline->else->ENGINE->paintVline->ENGINE->finishPainting
GTKPainter#paintSliderTrackBackground(SynthContext, Graphics, int, int, int, int)::: painter paint slider track background:::id->context->getRegion->state->context->getComponentState->focused->focusSize->if->style->context->getStyle->style->getClassSpecificIntValue->style->getClassSpecificIntValue->slider->context->getComponent->if->GTKLookAndFeel->is3->if->slider->getOrientation->else->value->slider->getValue->min->slider->getMinimum->max->slider->getMaximum->visible->synchronized->if->return->ENGINE->startPainting->gtkState->GTKLookAndFeel->synthStateToGTKState->ENGINE->setRangeValue->ENGINE->paintBox->if->ENGINE->paintFocus->ENGINE->finishPainting
GTKPainter#paintSliderThumbBackground(SynthContext, Graphics, int, int, int, int, int)::: painter paint slider thumb background:::id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->hasFocus->GTKLookAndFeel->is3->context->getComponentState->synchronized->if->ENGINE->paintCachedImage->orientation->detail->ENGINE->startPainting->ENGINE->paintSlider->ENGINE->finishPainting
GTKPainter#paintSpinnerBackground(SynthContext, Graphics, int, int, int, int)::: painter paint spinner background:::
GTKPainter#paintSplitPaneDividerBackground(SynthContext, Graphics, int, int, int, int)::: painter paint split pane divider background:::id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->splitPane->context->getComponent->orientation->splitPane->getOrientation->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintHandle->ENGINE->finishPainting
GTKPainter#paintSplitPaneDragDivider(SynthContext, Graphics, int, int, int, int, int)::: painter paint split pane drag divider:::paintSplitPaneDividerForeground
GTKPainter#paintTabbedPaneContentBackground(SynthContext, Graphics, int, int, int, int)::: painter paint tabbed pane content background:::pane->context->getComponent->selectedIndex->pane->getSelectedIndex->placement->GTKLookAndFeel->pane->getTabPlacement->SwingOrientationConstantToGTK->gapStart->gapSize->if->tabBounds->pane->getBoundsAt->if->else->id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintBoxGap->ENGINE->finishPainting
GTKPainter#paintTabbedPaneTabBackground(SynthContext, Graphics, int, int, int, int, int)::: painter paint tabbed pane tab background:::id->context->getRegion->state->context->getComponentState->gtkState->pane->context->getComponent->placement->pane->getTabPlacement->synchronized->if->ENGINE->paintCachedImage->side->ENGINE->startPainting->ENGINE->paintExtension->ENGINE->finishPainting
GTKPainter#paintTextPaneBackground(SynthContext, Graphics, int, int, int, int)::: painter paint text pane background:::paintTextAreaBackground
GTKPainter#paintEditorPaneBackground(SynthContext, Graphics, int, int, int, int)::: painter paint editor pane background:::paintTextAreaBackground
GTKPainter#paintTextAreaBackground(SynthContext, Graphics, int, int, int, int)::: painter paint text area background:::fillArea
GTKPainter#paintTextBackground(SynthContext, Graphics, int, int, int, int)::: painter paint text background:::c->context->getComponent->container->c->getParent->containerParent->style->context->getStyle->id->context->getRegion->state->context->getComponentState->if->container->getParent->if->containerParent->hasFocus->synchronized->if->ENGINE->paintCachedImage->return->gtkState->GTKLookAndFeel->synthStateToGTKState->focusSize->interiorFocus->style->getClassSpecificBoolValue->style->getClassSpecificIntValue->if->xThickness->style->getXThickness->yThickness->style->getYThickness->ENGINE->startPainting->if->GTKLookAndFeel->is3->ENGINE->paintBackground->ENGINE->paintShadow->if->GTKLookAndFeel->is3->ENGINE->paintFlatBox->if->if->else->if->GTKLookAndFeel->is3->GTKLookAndFeel->is3->GTKLookAndFeel->is3->else->GTKLookAndFeel->is3->GTKLookAndFeel->is3->GTKLookAndFeel->is3->GTKLookAndFeel->is3->ENGINE->paintFocus->ENGINE->finishPainting
GTKPainter#paintTreeCellEditorBackground(SynthContext, Graphics, int, int, int, int)::: painter paint tree cell editor background:::id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintFlatBox->ENGINE->finishPainting
GTKPainter#paintRootPaneBackground(SynthContext, Graphics, int, int, int, int)::: painter paint root pane background:::fillArea
GTKPainter#paintToggleButtonBackground(SynthContext, Graphics, int, int, int, int)::: painter paint toggle button background:::id->context->getRegion->toggleButton->context->getComponent->paintBG->toggleButton->isContentAreaFilled->toggleButton->isBorderPainted->paintFocus->toggleButton->isFocusPainted->toolButton->toggleButton->getParent->paintButtonBackgroundImpl
GTKPainter#paintScrollBarBackground(SynthContext, Graphics, int, int, int, int)::: painter paint scroll bar background:::id->context->getRegion->focused->context->getComponentState->synchronized->if->ENGINE->paintCachedImage->return->ENGINE->startPainting->insets->context->getComponent->getInsets->style->context->getStyle->troughBorder->style->getClassSpecificIntValue->ENGINE->paintBox->if->ENGINE->paintFocus->ENGINE->finishPainting
GTKPainter#paintScrollBarThumbBackground(SynthContext, Graphics, int, int, int, int, int)::: painter paint scroll bar thumb background:::id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->sb->context->getComponent->rtl->sb->getOrientation->sb->getComponentOrientation->isLeftToRight->min->max->visible->value->if->sb->getMaximum->sb->getMinimum->sb->getVisibleAmount->else->if->sb->getValue->sb->getMinimum->else->if->sb->getValue->sb->getMaximum->sb->getVisibleAmount->else->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->orientation->ENGINE->setRangeValue->ENGINE->paintSlider->ENGINE->finishPainting
GTKPainter#paintToolTipBackground(SynthContext, Graphics, int, int, int, int)::: painter paint tool tip background:::id->context->getRegion->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintFlatBox->ENGINE->finishPainting
GTKPainter#paintTreeCellBackground(SynthContext, Graphics, int, int, int, int)::: painter paint tree cell background:::id->context->getRegion->state->context->getComponentState->gtkState->GTKLookAndFeel->synthStateToGTKState->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintFlatBox->ENGINE->finishPainting
GTKPainter#paintTreeCellFocus(SynthContext, Graphics, int, int, int, int)::: painter paint tree cell focus:::id->state->context->getComponentState->paintFocus
GTKPainter#paintTreeBackground(SynthContext, Graphics, int, int, int, int)::: painter paint tree background:::fillArea
GTKPainter#paintViewportBackground(SynthContext, Graphics, int, int, int, int)::: painter paint viewport background:::fillArea
GTKPainter#paintFocus(SynthContext, Graphics, Region, int, String, int, int, int, int)::: painter paint focus:::gtkState->GTKLookAndFeel->synthStateToGTKState->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintFocus->ENGINE->finishPainting
GTKPainter#paintMetacityElement(SynthContext, Graphics, int, String, int, int, int, int, ShadowType, ArrowType)::: painter paint metacity element:::synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->if->ENGINE->paintArrow->else->if->ENGINE->paintBox->else->if->ENGINE->paintVline->ENGINE->finishPainting
GTKPainter#paintIcon(SynthContext, Graphics, Method, int, int, int, int)::: painter paint icon:::state->context->getComponentState->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->try->paintMethod->invoke->catch->finally->ENGINE->finishPainting
GTKPainter#paintIcon(SynthContext, Graphics, Method, int, int, int, int, Object)::: painter paint icon:::state->context->getComponentState->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->try->paintMethod->invoke->catch->finally->ENGINE->finishPainting
GTKPainter#paintTreeExpandedIcon(SynthContext, Graphics, int, int, int, int, int)::: painter paint tree expanded icon:::ENGINE->GTKLookAndFeel->context->getRegion->synthStateToGTKState->paintExpander
GTKPainter#paintTreeCollapsedIcon(SynthContext, Graphics, int, int, int, int, int)::: painter paint tree collapsed icon:::ENGINE->GTKLookAndFeel->context->getRegion->synthStateToGTKState->paintExpander
GTKPainter#paintCheckBoxIcon(SynthContext, Graphics, int, int, int, int, int)::: painter paint check box icon:::style->context->getStyle->size->style->getClassSpecificIntValue->offset->style->getClassSpecificIntValue->ENGINE->paintCheck
GTKPainter#paintRadioButtonIcon(SynthContext, Graphics, int, int, int, int, int)::: painter paint radio button icon:::style->context->getStyle->size->style->getClassSpecificIntValue->offset->style->getClassSpecificIntValue->ENGINE->paintOption
GTKPainter#paintMenuArrowIcon(SynthContext, Graphics, int, int, int, int, int, ArrowType)::: painter paint menu arrow icon:::gtkState->GTKLookAndFeel->context->getRegion->synthStateToGTKState->shadow->if->if->GTKLookAndFeel->is3->ENGINE->paintArrow
GTKPainter#paintCheckBoxMenuItemCheckIcon(SynthContext, Graphics, int, int, int, int, int)::: painter paint check box menu item check icon:::style->context->getStyle->size->style->getClassSpecificIntValue->ENGINE->paintCheck
GTKPainter#paintRadioButtonMenuItemCheckIcon(SynthContext, Graphics, int, int, int, int, int)::: painter paint radio button menu item check icon:::style->context->getStyle->size->style->getClassSpecificIntValue->ENGINE->paintOption
GTKPainter#paintToolBarHandleIcon(SynthContext, Graphics, int, int, int, int, int, Orientation)::: painter paint tool bar handle icon:::gtkState->GTKLookAndFeel->context->getRegion->synthStateToGTKState->ENGINE->paintHandle
GTKPainter#paintAscendingSortIcon(SynthContext, Graphics, int, int, int, int, int)::: painter paint ascending sort icon:::ENGINE->paintArrow
GTKPainter#paintDescendingSortIcon(SynthContext, Graphics, int, int, int, int, int)::: painter paint descending sort icon:::ENGINE->paintArrow
GTKPainter#fillArea(SynthContext, Graphics, int, int, int, int, ColorType)::: painter fill area:::if->context->getComponent->isOpaque->id->context->getRegion->gtkState->GTKLookAndFeel->context->getComponentState->synthStateToGTKState->style->context->getStyle->g->style->getGTKColor->setColor->g->fillRect
GTKPainter.ListTableFocusBorder#getSelectedCellBorder()::: list table focus border get selected cell border:::return->new->ListTableFocusBorder
GTKPainter.ListTableFocusBorder#getUnselectedCellBorder()::: list table focus border get unselected cell border:::return->new->ListTableFocusBorder
GTKPainter.ListTableFocusBorder#getNoFocusCellBorder()::: list table focus border get no focus cell border:::return->new->ListTableFocusBorder
GTKPainter.ListTableFocusBorder#getContext(Component)::: list table focus border get context:::context->ui->if->getUI->if->getContext->return
GTKPainter.ListTableFocusBorder#paintBorder(Component, Graphics, int, int, int, int)::: list table focus border paint border:::if->context->getContext->state->if->paintFocus
GTKPainter.ListTableFocusBorder#getBorderInsets(Component, Insets)::: list table focus border get border insets:::context->getContext->if->context->getStyle->getInsets->return
GTKPainter.ListTableFocusBorder#isBorderOpaque()::: list table focus border is border opaque:::return
GTKPainter.TitledBorder#paintBorder(Component, Graphics, int, int, int, int)::: titled border paint border:::context->getContext->id->context->getRegion->state->context->getComponentState->gtkState->GTKLookAndFeel->synthStateToGTKState->synchronized->if->ENGINE->paintCachedImage->ENGINE->startPainting->ENGINE->paintShadow->ENGINE->finishPainting
GTKPainter.TitledBorder#getBorderInsets(Component, Insets)::: titled border get border insets:::context->getContext->return->context->getStyle->getInsets
GTKPainter.TitledBorder#isBorderOpaque()::: titled border is border opaque:::return
GTKPainter.TitledBorder#getStyle(JComponent)::: titled border get style:::return->SynthLookAndFeel->getStyle
GTKPainter.TitledBorder#getContext(JComponent)::: titled border get context:::state->return->getStyle->new->SynthContext
GTKStyle#nativeGetXThickness(int)::: style native get thickness:::
GTKStyle#nativeGetYThickness(int)::: style native get thickness:::
GTKStyle#nativeGetColorForState(int, int, int)::: style native get color for state:::
GTKStyle#nativeGetClassValue(int, String)::: style native get class value:::
GTKStyle#nativeGetPangoFontName(int)::: style native get pango font name:::
GTKStyle#installDefaults(SynthContext)::: style install defaults:::super->installDefaults->aaTextInfo->if->context->getRegion->isSubregion->context->getComponent->aaTextInfo->get->putClientProperty->context->getComponent->aaTextInfo->get->putClientProperty
GTKStyle#getGraphicsUtils(SynthContext)::: style get graphics utils:::return
GTKStyle#getPainter(SynthContext):::Returns a SynthPainter that will route the appropriate calls to a GTKEngine.:::return
GTKStyle#getColorForState(SynthContext, ColorType)::: style get color for state:::if->return->else->if->return->id->context->getRegion->state->context->getComponentState->GTKLookAndFeel->synthStateToGTKState->if->else->if->if->if->else->if->return->getStyleSpecificColor
GTKStyle#getStyleSpecificColor(SynthContext, int, ColorType):::Returns color specific to the current style:::GTKLookAndFeel->synthStateToGTKStateType->ordinal->synchronized->rgb->type->getID->nativeGetColorForState->return->new->ColorUIResource
GTKStyle#getGTKColor(int, ColorType)::: style get color:::return->getGTKColor
GTKStyle#getGTKColor(int, int, int)::: style get color:::synchronized->rgb->nativeGetColorForState->return->new->ColorUIResource
GTKStyle#getGTKColor(SynthContext, int, ColorType):::Returns the color for the specified state.:::if->c->context->getComponent->id->context->getRegion->GTKLookAndFeel->synthStateToGTKState->if->id->isSubregion->if->bg->c->getBackground->if->return->else->if->fg->c->getForeground->if->return->return->getStyleSpecificColor
GTKStyle#getColor(SynthContext, ColorType)::: style get color:::c->context->getComponent->id->context->getRegion->state->context->getComponentState->if->c->getName->if->return->c->getBackground->if->return->c->getForeground->if->if->id->isSubregion->if->return->c->getBackground->else->if->return->c->getForeground->else->if->color->c->getForeground->if->return->return->getColorForState
GTKStyle#getDefaultFont()::: style get default font:::return
GTKStyle#getFontForState(SynthContext)::: style get font for state:::propFont->UIManager->context->getRegion->getName->getFont->if->return->return
GTKStyle#getXThickness():::Returns the X thickness to use for this GTKStyle.:::return
GTKStyle#getYThickness():::Returns the Y thickness to use for this GTKStyle.:::return
GTKStyle#getInsets(SynthContext, Insets):::Returns the Insets:::id->state->getRegion->component->state->getComponent->name->id->isSubregion->component->getName->if->new->Insets->else->if->if->return->getSimpleInsets->else->return->getButtonInsets->else->if->return->getRadioInsets->else->if->return->getMenuBarInsets->else->if->return->getMenuItemInsets->else->if->return->getTextFieldInsets->else->if->getBorderInsets->else->if->if->return->getButtonInsets->else->if->return->getTextFieldInsets->else->if->return->getSimpleInsets->else->if->return->getSimpleInsets->else->if->return->getSimpleInsets->else->if->return->getThicknessInsets->else->if->return->getScrollBarInsets->else->if->return->getSliderTrackInsets->else->if->return->getTabbedPaneTabInsets->else->if->if->return->getSimpleInsets->return->getTextFieldInsets->else->if->return->getSeparatorInsets->else->if->return->getThicknessInsets->return
GTKStyle#getButtonInsets(SynthContext, Insets)::: style get button insets:::CHILD_SPACING->focusSize->getClassSpecificIntValue->focusPad->getClassSpecificIntValue->xThickness->getXThickness->yThickness->getYThickness->w->h->component->context->getComponent->if->component->getParent->isDefaultCapable->defaultInsets->getClassSpecificInsetsValue->return
GTKStyle#getRadioInsets(SynthContext, Insets)::: style get radio insets:::focusSize->getClassSpecificIntValue->focusPad->getClassSpecificIntValue->totalFocus->if->context->getComponent->getComponentOrientation->isLeftToRight->else->return
GTKStyle#getMenuBarInsets(SynthContext, Insets)::: style get menu bar insets:::internalPadding->getClassSpecificIntValue->xThickness->getXThickness->yThickness->getYThickness->return
GTKStyle#getMenuItemInsets(SynthContext, Insets)::: style get menu item insets:::horizPadding->getClassSpecificIntValue->xThickness->getXThickness->yThickness->getYThickness->return
GTKStyle#getThicknessInsets(SynthContext, Insets)::: style get thickness insets:::getXThickness->getYThickness->return
GTKStyle#getSeparatorInsets(SynthContext, Insets)::: style get separator insets:::horizPadding->if->context->getRegion->getClassSpecificIntValue->getXThickness->getYThickness->return
GTKStyle#getSliderTrackInsets(SynthContext, Insets)::: style get slider track insets:::focusSize->getClassSpecificIntValue->focusPad->getClassSpecificIntValue->return
GTKStyle#getSimpleInsets(SynthContext, Insets, int)::: style get simple insets:::return
GTKStyle#getTabbedPaneTabInsets(SynthContext, Insets)::: style get tabbed pane tab insets:::xThickness->getXThickness->yThickness->getYThickness->focusSize->getClassSpecificIntValue->pad->return
GTKStyle#getTextFieldInsets(SynthContext, Insets)::: style get text field insets:::getSimpleInsets->getClassSpecificInsetsValue->xThickness->getXThickness->yThickness->getYThickness->interiorFocus->getClassSpecificBoolValue->focusSize->if->getClassSpecificIntValue->return
GTKStyle#getScrollBarInsets(SynthContext, Insets)::: style get scroll bar insets:::troughBorder->getClassSpecificIntValue->c->context->getComponent->if->c->getParent->spacing->getClassSpecificIntValue->if->getOrientation->else->if->c->getComponentOrientation->isLeftToRight->else->else->if->c->isFocusable->focusSize->getClassSpecificIntValue->focusPad->getClassSpecificIntValue->totalFocus->return
GTKStyle#getClassSpecificValue(WidgetType, String):::Returns the value for a class specific property for a particular WidgetType:::synchronized->return->wt->ordinal->nativeGetClassValue
GTKStyle#getClassSpecificIntValue(WidgetType, String, int):::Convenience method to get a class specific integer value for a particular WidgetType.:::value->getClassSpecificValue->if->return->intValue->return
GTKStyle#getClassSpecificValue(String):::Returns the value for a class specific property:::synchronized->return->nativeGetClassValue
GTKStyle#getClassSpecificIntValue(SynthContext, String, int):::Convenience method to get a class specific integer value.:::value->getClassSpecificValue->if->return->intValue->return
GTKStyle#getClassSpecificInsetsValue(SynthContext, String, Insets):::Convenience method to get a class specific Insets value.:::value->getClassSpecificValue->if->return->return
GTKStyle#getClassSpecificBoolValue(SynthContext, String, boolean):::Convenience method to get a class specific Boolean value.:::value->getClassSpecificValue->if->return->booleanValue->return
GTKStyle#isOpaque(SynthContext):::Returns the value to initialize the opacity property of the Component to:::region->context->getRegion->if->return->if->GTKLookAndFeel->is3->if->return->c->context->getComponent->name->c->getName->if->return->return
GTKStyle#get(SynthContext, Object)::: style get:::classKey->CLASS_SPECIFIC_MAP->get->if->value->getClassSpecificValue->if->if->equals->value->equals->return->return->if->return->new->Insets->getThicknessInsets->else->if->return->getColorForState->else->if->len->getClassSpecificIntValue->if->sb->context->getComponent->if->sb->getOrientation->return->new->DimensionUIResource->else->return->new->DimensionUIResource->else->if->sep->context->getComponent->if->getClassSpecificBoolValue->if->sep->getOrientation->return->getClassSpecificIntValue->else->return->getClassSpecificIntValue->if->sep->getOrientation->return->getYThickness->else->return->getXThickness->else->if->if->getClassSpecificBoolValue->return->getClassSpecificIntValue->getClassSpecificIntValue->new->DimensionUIResource->size->getClassSpecificIntValue->return->new->DimensionUIResource->else->if->sb->context->getComponent->getParent->horiz->sb->getOrientation->wt->sliderWidth->getClassSpecificIntValue->stepperSize->getClassSpecificIntValue->return->new->DimensionUIResource->new->DimensionUIResource->else->if->name->context->getComponent->getName->if->name->startsWith->pangoFontName->synchronized->ordinal->nativeGetPangoFontName->arrowSize->PangoFonts->getFontSize->return->getXThickness->else->if->equals->equals->indicatorSpacing->getClassSpecificIntValue->focusSize->getClassSpecificIntValue->focusPad->getClassSpecificIntValue->return->else->if->GTKLookAndFeel->is3->equals->return->else->if->equals->value->getClassSpecificValue->if->return->return->stockIcon->synchronized->ICONS_MAP->get->if->return->if->value->UIManager->get->if->focusLineWidth->getClassSpecificIntValue->if->Integer->valueOf->return->return
GTKStyle#getStockIcon(SynthContext, String, int)::: style get stock icon:::direction->if->co->context->getComponent->getComponentOrientation->if->co->isLeftToRight->icon->getStyleSpecificIcon->if->return->propName->img->Toolkit->getDefaultToolkit->getDesktopProperty->if->return->new->ImageIcon->return
GTKStyle#getStyleSpecificIcon(String, TextDirection, int)::: style get style specific icon:::tk->Toolkit->getDefaultToolkit->img->tk->direction->ordinal->getStockIcon->return->new->ImageIcon
GTKStyle.GTKStockIconInfo#getIconSizesMap()::: stock icon info get icon sizes map:::appContext->AppContext->getAppContext->iconSizes->appContext->get->if->new->DimensionArr->new->Dimension->new->Dimension->new->Dimension->new->Dimension->new->Dimension->new->Dimension->appContext->put->return
GTKStyle.GTKStockIconInfo#getIconSize(int):::Return the size of a particular icon type (logical size):::iconSizes->getIconSizesMap->return
GTKStyle.GTKStockIconInfo#setIconSize(int, int, int):::Change icon size in a type to size mapping:::iconSizes->getIconSizesMap->if->new->Dimension
GTKStyle.GTKStockIconInfo#getIconType(String):::Return icon type (GtkIconSize value) given a symbolic name which can occur in a theme file.:::if->return->if->initIconTypeMap->n->ICON_TYPE_MAP->get->return->n->intValue
GTKStyle.GTKStockIconInfo#initIconTypeMap()::: stock icon info init icon type map:::new->HashMap<String,Integer>->ICON_TYPE_MAP->Integer->valueOf->put->ICON_TYPE_MAP->Integer->valueOf->put->ICON_TYPE_MAP->Integer->valueOf->put->ICON_TYPE_MAP->Integer->valueOf->put->ICON_TYPE_MAP->Integer->valueOf->put->ICON_TYPE_MAP->Integer->valueOf->put
GTKStyle.GTKStockIcon#paintIcon(SynthContext, Graphics, int, int, int, int)::: stock icon paint icon:::icon->getIcon->if->if->icon->paintIcon->else->icon->context->getComponent->paintIcon
GTKStyle.GTKStockIcon#getIconWidth(SynthContext)::: stock icon get icon width:::icon->getIcon->if->return->icon->getIconWidth->return
GTKStyle.GTKStockIcon#getIconHeight(SynthContext)::: stock icon get icon height:::icon->getIcon->if->return->icon->getIconHeight->return
GTKStyle.GTKStockIcon#getIcon(SynthContext)::: stock icon get icon:::if->co->context->getComponent->getComponentOrientation->style->context->getStyle->if->if->co->isLeftToRight->if->context->getStyle->getStockIcon->return->else->if->context->getStyle->getStockIcon->return->return
GTKStyle.GTKLazyValue#createValue(UIDefaults)::: lazy value create value:::try->c->Class->Thread->currentThread->getContextClassLoader->forName->if->return->c->newInstance->m->c->getMethod->return->m->invoke->catch->finally->return
GTKStyleFactory#getStyle(JComponent, Region):::Returns the GTKStyle to use based on the Region id:::wt->GTKEngine->getWidgetType->key->if->if->sb->sp->sb->getParent->horiz->sb->getOrientation->ltr->sb->getComponentOrientation->isLeftToRight->focusable->sb->isFocusable->new->ComplexKey->else->if->if->ltr->c->getComponentOrientation->isLeftToRight->new->ComplexKey->else->if->if->btn->toolButton->btn->getParent->defaultCapable->btn->isDefaultCapable->new->ComplexKey->else->if->if->isTopLevelMenu->UIManager->getBoolean->if->result->stylesCache->get->if->new->GTKStyle->stylesCache->put->return
GTKStyleFactory#initStyles(Font)::: style factory init styles:::stylesCache->clear
GTKStyleFactory.ComplexKey#hashCode()::: complex key hash code:::hash->wt->hashCode->if->foreach->arg->hashCode->return
GTKStyleFactory.ComplexKey#equals(Object)::: complex key equals:::if->return->that->if->if->return->if->for->i->return->return
GTKStyleFactory.ComplexKey#toString()::: complex key to string:::str->if->for->i->return
Metacity#getTitlePaneLayout()::: metacity get title pane layout:::return
Metacity#getRoundedClipShape(int, int, int, int, int, int, int)::: metacity get rounded clip shape:::if->new->RoundRectClipShape->roundedClipShape->setRoundedRect->return
Metacity#paintButtonBackground(SynthContext, Graphics, int, int, int, int)::: metacity paint button background:::updateFrameGeometry->button->context->getComponent->buttonName->button->getName->buttonState->context->getComponentState->titlePane->button->getParent->titlePaneParent->titlePane->getParent->jif->findInternalFrame->if->return->active->jif->isSelected->button->setOpaque->state->if->else->if->function->location->left_corner->right_corner->if->else->if->nButtons->jif->isIconifiable->jif->isMaximizable->jif->isClosable->switch->break->break->break->else->if->jif->isClosable->jif->isClosable->else->if->frame->new->StringArr->jif->isMaximum->getNode->if->frame_style->new->StringArr->getStringAttr->getNode->if->oldClip->g->getClip->if->getBoolean->getBoolean->buttonLoc->button->getLocation->if->g->getRoundedClipShape->setClip->else->g->getRoundedClipShape->setClip->clipBounds->oldClip->getBounds->g->clipRect->drawButton->drawButton->g->setClip
Metacity#drawButton(Node, String, String, Graphics, int, int, JInternalFrame)::: metacity draw button:::buttonNode->new->StringArr->getNode->if->state->equals->new->StringArr->getNode->if->draw_ops->draw_ops_name->getStringAttr->if->new->StringArr->getNode->else->getNode->variables->put->variables->put->draw
Metacity#findInternalFrame(Component)::: metacity find internal frame:::if->comp->getParent->comp->getParent->if->return->else->if->return->getInternalFrame->return
Metacity#paintFrameBorder(SynthContext, Graphics, int, int, int, int)::: metacity paint frame border:::updateFrameGeometry->comp->context->getComponent->titlePane->findChild->if->return->jif->findInternalFrame->if->return->active->jif->isSelected->oldFont->g->getFont->g->titlePane->getFont->setFont->g->translate->titleRect->calculateTitleArea->menuButton->findChild->frameIcon->jif->getFrameIcon->variables->frameIcon->getIconWidth->put->variables->frameIcon->getIconHeight->put->variables->calculateTitleTextWidth->put->fm->SwingUtilities2->getFontMetrics->variables->fm->getAscent->fm->getDescent->put->variables->put->variables->put->if->frame->new->StringArr->jif->isMaximum->getNode->if->frame_style->new->StringArr->getStringAttr->getNode->if->oldClip->g->getClip->roundTopLeft->getBoolean->roundTopRight->getBoolean->roundBottomLeft->getBoolean->roundBottomRight->getBoolean->if->jif->setOpaque->g->getRoundedClipShape->setClip->clipBounds->oldClip->getBounds->g->clipRect->titleHeight->titlePane->getHeight->minimized->jif->isIcon->insets->getBorderInsets->leftTitlebarEdge->getInt->rightTitlebarEdge->getInt->topTitlebarEdge->getInt->bottomTitlebarEdge->getInt->if->drawPiece->drawPiece->drawPiece->drawPiece->drawPiece->drawPiece->drawPiece->drawPiece->if->drawPiece->drawPiece->drawPiece->drawPiece->g->setClip->g->translate->g->setFont
Metacity.Privileged#doPrivileged(int, Object)::: privileged do privileged:::return->AccessController->doPrivileged
Metacity.Privileged#run()::: privileged run:::if->sep->dirs->new->StringArr->System->getProperty->themeDir->for->i->if->filename->url->getClass->getResource->if->str->url->toString->try->str->str->lastIndexOf->substring->new->URL->catch->finally->return->else->if->try->System->getProperty->theme->System->getProperty->if->return->url->new->File->toURI->toURL->new->URL->reader->url->openStream->new->InputStreamReader->buf->new->charArr->sb->new->StringBuilder->n->while->reader->read->sb->append->reader->close->str->sb->toString->if->strLowerCase->str->toLowerCase->i->strLowerCase->indexOf->if->strLowerCase->indexOf->if->length->i2->str->indexOf->return->str->substring->catch->finally->return->else->if->return->new->ImageIcon->getImage->else->return
Metacity#getThemeDir(String)::: metacity get theme dir:::return->new->Privileged->doPrivileged
Metacity#getUserTheme()::: metacity get user theme:::return->new->Privileged->doPrivileged
Metacity#tileImage(Graphics, Image, int, int, int, int, float[])::: metacity tile image:::g2->oldComp->g2->getComposite->sw->image->getWidth->sh->image->getHeight->y->while->Math->min->x->while->f->i->alpha->if->g2->AlphaComposite->getInstance->setComposite->swm->Math->min->g->drawImage->g2->setComposite
Metacity#getImage(String, Color)::: metacity get image:::image->images->c->getRGB->get->if->imageFilter->getImage->colorize->if->images->c->getRGB->put->return
Metacity#getImage(String)::: metacity get image:::image->images->get->if->if->try->url->new->URL->new->Privileged->doPrivileged->catch->finally->if->images->put->return
Metacity.ColorizeImageFilter#setColor(Color)::: colorize image filter set color:::color->getRed->color->getGreen->color->getBlue
Metacity.ColorizeImageFilter#colorize(Image, Color)::: colorize image filter colorize:::setColor->producer->fromImage->getSource->new->FilteredImageSource->return->context->getComponent->createImage->new->ImageIcon->getImage
Metacity.ColorizeImageFilter#filterRGB(int, int, int)::: colorize image filter filter b:::grayLevel->r->g->b->if->else->return
Metacity#findChild(JComponent, String)::: metacity find child:::n->parent->getComponentCount->for->i->return
Metacity.TitlePaneLayout#addLayoutComponent(String, Component)::: title pane layout add layout component:::
Metacity.TitlePaneLayout#removeLayoutComponent(Component)::: title pane layout remove layout component:::
Metacity.TitlePaneLayout#preferredLayoutSize(Container)::: title pane layout preferred layout size:::return->minimumLayoutSize
Metacity.TitlePaneLayout#minimumLayoutSize(Container)::: title pane layout minimum layout size:::titlePane->titlePaneParent->titlePane->getParent->frame->if->else->if->getInternalFrame->else->return->buttonDim->calculateButtonSize->title_border->getFrameGeometry->get->button_border->getFrameGeometry->get->width->getInt->getInt->if->if->frame->isClosable->if->frame->isMaximizable->if->frame->isIconifiable->fm->frame->titlePane->getFont->getFontMetrics->frameTitle->frame->getTitle->title_w->SwingUtilities2->stringWidth->title_length->frameTitle->length->if->subtitle_w->SwingUtilities2->frameTitle->substring->stringWidth->else->titleHeight->fm->getHeight->getInt->if->buttonHeight->if->height->Math->max->return->new->Dimension
Metacity.TitlePaneLayout#layoutContainer(Container)::: title pane layout layout container:::titlePane->titlePaneParent->titlePane->getParent->frame->if->else->if->getInternalFrame->else->return->gm->getFrameGeometry->w->titlePane->getWidth->h->titlePane->getHeight->menuButton->findChild->minimizeButton->findChild->maximizeButton->findChild->closeButton->findChild->button_border->gm->get->buttonDim->calculateButtonSize->y->if->titlePaneParent->getComponentOrientation->isLeftToRight->x->getInt->menuButton->setBounds->getInt->if->if->frame->isClosable->closeButton->setBounds->if->frame->isMaximizable->maximizeButton->setBounds->if->frame->isIconifiable->minimizeButton->setBounds->else->x->getInt->menuButton->setBounds->getInt->if->if->frame->isClosable->closeButton->setBounds->if->frame->isMaximizable->maximizeButton->setBounds->if->frame->isIconifiable->minimizeButton->setBounds
Metacity#getFrameGeometry()::: metacity get frame geometry:::return
Metacity#setFrameGeometry(JComponent, Map)::: metacity set frame geometry:::if->getInt->gm->Integer->titlePane->getHeight->valueOf->put
Metacity#getInt(String)::: metacity get int:::i->frameGeometry->get->if->variables->get->return->i->intValue
Metacity#getBoolean(String, boolean)::: metacity get boolean:::b->frameGeometry->get->return->b->booleanValue
Metacity#drawArc(Node, Graphics)::: metacity draw arc:::attrs->node->getAttributes->color->getStringAttr->parseColor->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->start_angle->aee->getStringAttr->evaluate->extent_angle->aee->getStringAttr->evaluate->filled->getBooleanAttr->if->getInt->if->getInt->g->setColor->if->g->fillArc->else->g->drawArc
Metacity#drawLine(Node, Graphics)::: metacity draw line:::attrs->node->getAttributes->color->getStringAttr->parseColor->x1->aee->getStringAttr->evaluate->y1->aee->getStringAttr->evaluate->x2->aee->getStringAttr->evaluate->y2->aee->getStringAttr->evaluate->lineWidth->aee->getStringAttr->evaluate->g->setColor->if->g2d->stroke->g2d->getStroke->g2d->new->BasicStroke->setStroke->g2d->drawLine->g2d->setStroke->else->g->drawLine
Metacity#drawRectangle(Node, Graphics)::: metacity draw rectangle:::attrs->node->getAttributes->color->getStringAttr->parseColor->filled->getBooleanAttr->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->g->setColor->if->getInt->if->getInt->if->g->fillRect->else->g->drawRect
Metacity#drawTile(Node, Graphics, JInternalFrame)::: metacity draw tile:::attrs->node->getAttributes->x0->aee->getStringAttr->evaluate->y0->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->tw->aee->getStringAttr->evaluate->th->aee->getStringAttr->evaluate->width->getInt->height->getInt->if->if->oldClip->g->getClip->if->new->Rectangle->clip->variables->put->variables->put->draw_ops->new->StringArr->getStringAttr->getNode->y->while->x->while->g->translate->draw->g->translate->variables->put->variables->put->g->setClip
Metacity#drawTint(Node, Graphics)::: metacity draw tint:::attrs->node->getAttributes->color->getStringAttr->parseColor->alpha->Float->getStringAttr->parseFloat->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->if->getInt->if->getInt->if->g2->oldComp->g2->getComposite->ac->AlphaComposite->getInstance->g2->setComposite->g2->setColor->g2->fillRect->g2->setComposite
Metacity#drawTitle(Node, Graphics, JInternalFrame)::: metacity draw title:::attrs->node->getAttributes->colorStr->getStringAttr->i->colorStr->indexOf->if->colorStr->substring->colorStr->substring->color->parseColor->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->title->jif->getTitle->if->fm->SwingUtilities2->getFontMetrics->SwingUtilities2->calculateTitleArea->clipStringIfNecessary->g->setColor->SwingUtilities2->fm->getAscent->drawString
Metacity#calculateButtonSize(JComponent)::: metacity calculate button size:::buttonHeight->getInt->if->titlePane->getHeight->if->else->button_border->frameGeometry->get->if->buttonWidth->getInt->if->aspect_ratio->frameGeometry->get->if->aspect_ratio->floatValue->return->new->Dimension
Metacity#calculateTitleArea(JInternalFrame)::: metacity calculate title area:::titlePane->findChild->buttonDim->calculateButtonSize->title_border->frameGeometry->get->button_border->getFrameGeometry->get->r->new->Rectangle->getInt->titlePane->getHeight->if->if->titlePane->getParent->getComponentOrientation->isLeftToRight->if->titlePane->getWidth->getInt->if->jif->isClosable->if->jif->isMaximizable->if->jif->isIconifiable->else->if->jif->isClosable->if->jif->isMaximizable->if->jif->isIconifiable->titlePane->getWidth->getInt->if->if->return
Metacity#calculateTitleTextWidth(Graphics, JInternalFrame)::: metacity calculate title text width:::title->jif->getTitle->if->r->calculateTitleArea->return->Math->SwingUtilities2->SwingUtilities2->getFontMetrics->stringWidth->min->return
Metacity#setClip(Node, Graphics)::: metacity set clip:::attrs->node->getAttributes->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->if->getInt->if->getInt->if->new->Rectangle->clip
Metacity#drawGTKArrow(Node, Graphics)::: metacity draw arrow:::attrs->node->getAttributes->arrow->getStringAttr->shadow->getStringAttr->stateStr->getStringAttr->toUpperCase->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->state->if->equals->else->if->equals->else->if->equals->else->if->equals->shadowType->if->equals->else->if->equals->else->if->equals->else->if->equals->else->if->equals->direction->if->equals->else->if->equals->else->if->equals->else->if->equals->paintMetacityElement
Metacity#drawGTKBox(Node, Graphics)::: metacity draw box:::attrs->node->getAttributes->shadow->getStringAttr->stateStr->getStringAttr->toUpperCase->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->state->if->equals->else->if->equals->else->if->equals->else->if->equals->shadowType->if->equals->else->if->equals->else->if->equals->else->if->equals->else->if->equals->paintMetacityElement
Metacity#drawGTKVLine(Node, Graphics)::: metacity draw line:::attrs->node->getAttributes->stateStr->getStringAttr->toUpperCase->x->aee->getStringAttr->evaluate->y1->aee->getStringAttr->evaluate->y2->aee->getStringAttr->evaluate->state->if->equals->else->if->equals->else->if->equals->else->if->equals->paintMetacityElement
Metacity#drawGradient(Node, Graphics)::: metacity draw gradient:::attrs->node->getAttributes->type->getStringAttr->alpha->getFloatAttr->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->if->getInt->if->getInt->colorNodes->getNodesByName->colors->new->ColorArr->for->i->horizontal->equals->equals->vertical->equals->equals->if->g2->oldComp->g2->getComposite->if->g2->AlphaComposite->getInstance->setComposite->n->for->i->g2->setComposite
Metacity#drawImage(Node, Graphics)::: metacity draw image:::attrs->node->getAttributes->filename->getStringAttr->colorizeStr->getStringAttr->colorize->parseColor->alpha->getStringAttr->object->getImage->getImage->variables->object->getWidth->put->variables->object->getHeight->put->fill_type->getStringAttr->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->if->getInt->if->getInt->if->if->equals->tokenizer->new->StringTokenizer->alphas->tokenizer->countTokens->new->floatArr->for->i->tileImage->else->a->Float->parseFloat->if->g2->oldComp->g2->getComposite->g2->AlphaComposite->getInstance->setComposite->g2->drawImage->g2->setComposite->else->g->drawImage
Metacity#drawIcon(Node, Graphics, JInternalFrame)::: metacity draw icon:::icon->jif->getFrameIcon->if->return->attrs->node->getAttributes->alpha->getStringAttr->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->if->getInt->if->getInt->if->a->Float->parseFloat->if->g2->oldComp->g2->getComposite->g2->AlphaComposite->getInstance->setComposite->icon->paintIcon->g2->setComposite->else->icon->paintIcon
Metacity#drawInclude(Node, Graphics, JInternalFrame)::: metacity draw include:::oldWidth->getInt->oldHeight->getInt->attrs->node->getAttributes->x->aee->getStringAttr->evaluate->y->aee->getStringAttr->evaluate->w->aee->getStringAttr->evaluate->h->aee->getStringAttr->evaluate->if->variables->put->if->variables->put->draw_ops->new->StringArr->getStringAttr->getNode->g->translate->draw->g->translate->if->variables->put->if->variables->put
Metacity#draw(Node, Graphics, JInternalFrame)::: metacity draw:::if->nodes->draw_ops->getChildNodes->if->oldClip->g->getClip->for->i->nodes->getLength->g->setClip
Metacity#drawPiece(Node, Graphics, String, int, int, int, int, JInternalFrame)::: metacity draw piece:::piece->new->StringArr->getNode->if->draw_ops->draw_ops_name->getStringAttr->if->new->StringArr->getNode->else->getNode->variables->put->variables->put->g->translate->draw->g->translate
Metacity#getBorderInsets(SynthContext, Insets)::: metacity get border insets:::updateFrameGeometry->if->new->Insets->frameGeometry->get->getInt->getInt->getInt->return
Metacity#updateFrameGeometry(SynthContext)::: metacity update frame geometry:::comp->context->getComponent->titlePane->findChild->jif->if->bTitlePane->comp->getParent->titlePaneParent->bTitlePane->getParent->findInternalFrame->else->findInternalFrame->if->return->if->window->new->StringArr->getNode->if->new->StringArr->getStringAttr->getNode->if->new->StringArr->getNode->if->frame->new->StringArr->jif->isSelected->jif->isMaximum->getNode->if->frame_style->new->StringArr->getStringAttr->getNode->if->gm->frameGeometries->getStringAttr->get->setFrameGeometry
Metacity#logError(String, Exception)::: metacity log error:::ex->toString->logError
Metacity#logError(String, String)::: metacity log error:::if->println
Metacity#getXMLDoc(URL)::: metacity get doc:::if->DocumentBuilderFactory->newInstance->newDocumentBuilder->inputStream->AccessController->new->PrivilegedAction<InputStream>->doPrivileged->doc->if->documentBuilder->parse->return
Metacity#getNodesByName(Node, String)::: metacity get nodes by name:::nodes->parent->getChildNodes->n->nodes->getLength->list->new->ArrayList<Node>->for->i->return->list->list->size->new->NodeArr->toArray
Metacity#getNode(String, String[])::: metacity get node:::nodes->xmlDoc->getElementsByTagName->return->getNode
Metacity#getNode(Node, String, String[])::: metacity get node:::node->nodes->parent->getChildNodes->if->getNode->if->inheritFrom->getStringAttr->if->inheritFromNode->parent->getParentNode->parent->getNodeName->new->StringArr->getNode->if->getNode->return
Metacity#getNode(NodeList, String, String[])::: metacity get node:::n->nodes->getLength->for->i->return
Metacity#getStringAttr(Node, String)::: metacity get string attr:::value->attrs->node->getAttributes->if->getStringAttr->if->inheritFrom->getStringAttr->if->inheritFromNode->node->getParentNode->node->getNodeName->new->StringArr->getNode->if->getStringAttr->return
Metacity#getStringAttr(NamedNodeMap, String)::: metacity get string attr:::item->attrs->getNamedItem->return->item->getNodeValue
Metacity#getBooleanAttr(Node, String, boolean)::: metacity get boolean attr:::str->getStringAttr->if->return->Boolean->valueOf->booleanValue->return
Metacity#getIntAttr(Node, String, int)::: metacity get int attr:::str->getStringAttr->value->if->try->Integer->parseInt->catch->logError->finally->return
Metacity#getFloatAttr(Node, String, float)::: metacity get float attr:::str->getStringAttr->value->if->try->Float->parseFloat->catch->logError->finally->return
Metacity#parseColor(String)::: metacity parse color:::tokenizer->new->StringTokenizer->n->tokenizer->countTokens->if->function->tokenizer->nextToken->if->equals->c->tokenizer->nextToken->parseColor2->alpha->Float->tokenizer->nextToken->parseFloat->return->GTKColorType->adjustColor->else->if->equals->bg->tokenizer->nextToken->parseColor2->fg->tokenizer->nextToken->parseColor2->alpha->Float->tokenizer->nextToken->parseFloat->if->return->bg->getRed->fg->getRed->bg->getRed->bg->getRed->fg->getRed->bg->getRed->bg->getRed->fg->getRed->bg->getRed->new->Color->else->println->return->else->return->parseColor2
Metacity#parseColor2(String)::: metacity parse color2:::c->if->str->startsWith->i1->str->indexOf->if->typeStr->str->substring->toLowerCase->i2->str->indexOf->if->stateStr->str->substring->toUpperCase->state->if->equals->else->if->equals->else->if->equals->else->if->equals->else->if->equals->type->if->equals->else->if->equals->else->if->equals->else->if->equals->else->if->equals->else->if->equals->if->context->getStyle->getGTKColor->if->parseColorString->return
Metacity#parseColorString(String)::: metacity parse color string:::if->str->charAt->str->substring->i->str->length->if->return->r->g->b->try->Integer->str->substring->parseInt->Integer->str->substring->parseInt->Integer->str->substring->parseInt->catch->return->finally->if->return->new->ColorUIResource->else->if->return->new->ColorUIResource->else->if->return->new->ColorUIResource->else->return->new->ColorUIResource->else->return->XColors->lookupColor
Metacity.ArithmeticExpressionEvaluator#evaluate(String)::: arithmetic expression evaluator evaluate:::new->PeekableStringTokenizer->return->Math->expression->round
Metacity.ArithmeticExpressionEvaluator#evaluate(String, int)::: arithmetic expression evaluator evaluate:::return->evaluate
Metacity.ArithmeticExpressionEvaluator#expression()::: arithmetic expression evaluator expression:::value->getTermValue->done->while->tokenizer->hasMoreTokens->next->tokenizer->peek->if->equals->equals->equals->equals->tokenizer->nextToken->value2->getTermValue->if->equals->else->if->equals->else->if->equals->Math->max->else->if->equals->Math->min->else->return
Metacity.ArithmeticExpressionEvaluator#getTermValue()::: arithmetic expression evaluator get term value:::value->getFactorValue->done->while->tokenizer->hasMoreTokens->next->tokenizer->peek->if->equals->equals->equals->tokenizer->nextToken->value2->getFactorValue->if->equals->else->if->equals->else->else->return
Metacity.ArithmeticExpressionEvaluator#getFactorValue()::: arithmetic expression evaluator get factor value:::value->if->tokenizer->peek->equals->tokenizer->nextToken->expression->tokenizer->nextToken->else->token->tokenizer->nextToken->if->Character->token->charAt->isDigit->Float->parseFloat->else->i->variables->get->if->getFrameGeometry->get->if->logError->return->i->intValue->return
Metacity.PeekableStringTokenizer#peek()::: peekable string tokenizer peek:::if->nextToken->return
Metacity.PeekableStringTokenizer#hasMoreTokens()::: peekable string tokenizer has more tokens:::return->super->hasMoreTokens
Metacity.PeekableStringTokenizer#nextToken()::: peekable string tokenizer next token:::if->t->if->hasMoreTokens->peek->return->else->token->super->nextToken->while->token->equals->token->equals->hasMoreTokens->super->nextToken->return
Metacity.RoundRectClipShape#setRoundedRect(int, int, int, int, int, int, int)::: round rect clip shape set rounded rect:::
Metacity.RoundRectClipShape#getX()::: round rect clip shape get x:::return
Metacity.RoundRectClipShape#getY()::: round rect clip shape get y:::return
Metacity.RoundRectClipShape#getWidth()::: round rect clip shape get width:::return
Metacity.RoundRectClipShape#getHeight()::: round rect clip shape get height:::return
Metacity.RoundRectClipShape#getArcWidth()::: round rect clip shape get arc width:::return
Metacity.RoundRectClipShape#getArcHeight()::: round rect clip shape get arc height:::return
Metacity.RoundRectClipShape#isEmpty()::: round rect clip shape is empty:::return
Metacity.RoundRectClipShape#getBounds2D()::: round rect clip shape get bounds2 d:::return
Metacity.RoundRectClipShape#getCornerFlags()::: round rect clip shape get corner flags:::return
Metacity.RoundRectClipShape#setFrame(double, double, double, double)::: round rect clip shape set frame:::
Metacity.RoundRectClipShape#contains(double, double)::: round rect clip shape contains:::return
Metacity.RoundRectClipShape#classify(double, double, double, double)::: round rect clip shape classify:::return
Metacity.RoundRectClipShape#intersects(double, double, double, double)::: round rect clip shape intersects:::return
Metacity.RoundRectClipShape#contains(double, double, double, double)::: round rect clip shape contains:::return
Metacity.RoundRectClipShape#getPathIterator(AffineTransform)::: round rect clip shape get path iterator:::return->new->RoundishRectIterator
Metacity.RoundRectClipShape.RoundishRectIterator#getWindingRule()::: roundish rect iterator get winding rule:::return
Metacity.RoundRectClipShape.RoundishRectIterator#isDone()::: roundish rect iterator is done:::return
Metacity.RoundRectClipShape.RoundishRectIterator#next()::: roundish rect iterator next:::
Metacity.RoundRectClipShape.RoundishRectIterator#currentSegment(float[])::: roundish rect iterator current segment:::if->isDone->throw->new->NoSuchElementException->ctrls->nc->for->i->if->affine->transform->return
Metacity.RoundRectClipShape.RoundishRectIterator#currentSegment(double[])::: roundish rect iterator current segment:::if->isDone->throw->new->NoSuchElementException->ctrls->nc->for->i->if->affine->transform->return
PangoFonts#lookupFont(String):::Parses a String containing a pango font description and returns a Font object.:::family->style->size->tok->new->StringTokenizer->while->tok->hasMoreTokens->word->tok->nextToken->if->word->equalsIgnoreCase->else->if->word->equalsIgnoreCase->else->if->CHARS_DIGITS->word->charAt->indexOf->try->Integer->parseInt->catch->finally->else->if->family->length->dsize->dpi->value->Toolkit->getDefaultToolkit->getDesktopProperty->if->intValue->if->if->else->if->fcFamilyLC->family->toLowerCase->if->FontUtilities->mapFcName->font->FontUtilities->getFontConfigFUIR->font->deriveFont->return->new->FontUIResource->else->font->new->Font->font->deriveFont->fuir->new->FontUIResource->return->FontUtilities->getCompositeFontUIResource
PangoFonts#getFontSize(String):::Parses a String containing a pango font description and returns the (unscaled) font size as an integer.:::size->tok->new->StringTokenizer->while->tok->hasMoreTokens->word->tok->nextToken->if->CHARS_DIGITS->word->charAt->indexOf->try->Integer->parseInt->catch->finally->return
XColors.XColor#toColor()::: color to color:::return->new->ColorUIResource
XColors.XColor#compareTo(XColor)::: color compare to:::return->name->compareTo
XColors#lookupColor(String)::: colors lookup color:::name->toLowerCase->pos->Arrays->binarySearch->if->return->return->toColor
