javax.management.openmbean.ArrayType#isPrimitiveContentType(String)->boolean::: array type is primitive content type
javax.management.openmbean.ArrayType#getPrimitiveTypeKey(String)->String:::Return the key used to identify the element type in arrays - e.g
javax.management.openmbean.ArrayType#getPrimitiveTypeName(String)->String:::Return the primitive type name corresponding to the given wrapper class
javax.management.openmbean.ArrayType#getPrimitiveOpenType(String)->SimpleType:::Return the primitive open type corresponding to the given primitive type
javax.management.openmbean.ArrayType#getDimension()->int:::Returns the dimension of arrays described by this ArrayType instance.
javax.management.openmbean.ArrayType#getElementOpenType()->OpenType:::Returns the open type of element values contained in the arrays described by this ArrayType instance.
javax.management.openmbean.ArrayType#isPrimitiveArray()->boolean:::Returns true if the open data values this open type describes are primitive arrays, false otherwise.
javax.management.openmbean.ArrayType#isValue(Object)->boolean:::Tests whether <var>obj</var> is a value for this ArrayType instance
javax.management.openmbean.ArrayType#isAssignableFrom(OpenType)->boolean::: array type is assignable from
javax.management.openmbean.ArrayType#equals(Object)->boolean:::Compares the specified obj parameter with this ArrayType instance for equality
javax.management.openmbean.ArrayType#hashCode()->int:::Returns the hash code value for this ArrayType instance
javax.management.openmbean.ArrayType#toString()->String:::Returns a string representation of this ArrayType instance
javax.management.openmbean.ArrayType#getArrayType(OpenType)->ArrayType:::Create an ArrayType instance in a type-safe manner
javax.management.openmbean.ArrayType#getPrimitiveArrayType(Class)->ArrayType:::Create an ArrayType instance in a type-safe manner
javax.management.openmbean.CompositeData#getCompositeType()->CompositeType:::Returns the composite type  of this composite data instance.
javax.management.openmbean.CompositeData#get(String)->Object:::Returns the value of the item whose name is key.
javax.management.openmbean.CompositeData#getAll(String[])->Object[]:::Returns an array of the values of the items whose names are specified by keys, in the same order as keys.
javax.management.openmbean.CompositeData#containsKey(String)->boolean:::Returns true if and only if this CompositeData instance contains an item whose name is key
javax.management.openmbean.CompositeData#containsValue(Object)->boolean:::Returns true if and only if this CompositeData instance contains an item whose value is value.
javax.management.openmbean.CompositeData#values()->Collection:::Returns an unmodifiable Collection view of the item values contained in this CompositeData instance
javax.management.openmbean.CompositeData#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this CompositeData instance for equality
javax.management.openmbean.CompositeData#hashCode()->int:::Returns the hash code value for this CompositeData instance
javax.management.openmbean.CompositeData#toString()->String:::Returns a string representation of this CompositeData instance
javax.management.openmbean.CompositeDataInvocationHandler#getCompositeData()->CompositeData:::       Return the CompositeData that was supplied to the        constructor.
javax.management.openmbean.CompositeDataInvocationHandler#invoke(Object, Method, Object[])->Object::: composite data invocation handler invoke
javax.management.openmbean.CompositeDataSupport#getCompositeType()->CompositeType:::Returns the composite type  of this composite data instance.
javax.management.openmbean.CompositeDataSupport#get(String)->Object:::Returns the value of the item whose name is key.
javax.management.openmbean.CompositeDataSupport#getAll(String[])->Object[]:::Returns an array of the values of the items whose names are specified by keys, in the same order as keys.
javax.management.openmbean.CompositeDataSupport#containsKey(String)->boolean:::Returns true if and only if this CompositeData instance contains an item whose name is key
javax.management.openmbean.CompositeDataSupport#containsValue(Object)->boolean:::Returns true if and only if this CompositeData instance contains an item whose value is value.
javax.management.openmbean.CompositeDataSupport#values()->Collection:::Returns an unmodifiable Collection view of the item values contained in this CompositeData instance
javax.management.openmbean.CompositeDataSupport#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this CompositeDataSupport instance for equality
javax.management.openmbean.CompositeDataSupport#hashCode()->int:::Returns the hash code value for this CompositeDataSupport instance
javax.management.openmbean.CompositeDataSupport#toString()->String:::Returns a string representation of this CompositeDataSupport instance
javax.management.openmbean.CompositeDataView#toCompositeData(CompositeType)->CompositeData:::Return a CompositeData corresponding to the values in this object
javax.management.openmbean.CompositeType#containsKey(String)->boolean:::Returns true if this CompositeType instance defines an item whose name is <var>itemName</var>.
javax.management.openmbean.CompositeType#getDescription(String)->String:::Returns the description of the item whose name is <var>itemName</var>, or null if this CompositeType instance does not define any item whose name is <var>itemName</var>.
javax.management.openmbean.CompositeType#getType(String)->OpenType:::Returns the open type of the item whose name is <var>itemName</var>, or null if this CompositeType instance does not define any item whose name is <var>itemName</var>.
javax.management.openmbean.CompositeType#keySet()->Set:::Returns an unmodifiable Set view of all the item names defined by this CompositeType instance
javax.management.openmbean.CompositeType#isValue(Object)->boolean:::Tests whether <var>obj</var> is a value which could be described by this CompositeType instance
javax.management.openmbean.CompositeType#isAssignableFrom(OpenType)->boolean:::Tests whether values of the given type can be assigned to this open type
javax.management.openmbean.CompositeType#equals(Object)->boolean:::Compares the specified obj parameter with this CompositeType instance for equality
javax.management.openmbean.CompositeType#hashCode()->int:::Returns the hash code value for this CompositeType instance
javax.management.openmbean.CompositeType#toString()->String:::Returns a string representation of this CompositeType instance
javax.management.openmbean.OpenMBeanAttributeInfo#isReadable()->boolean:::Returns true if the attribute described by this OpenMBeanAttributeInfo instance is readable, false otherwise.
javax.management.openmbean.OpenMBeanAttributeInfo#isWritable()->boolean:::Returns true if the attribute described by this OpenMBeanAttributeInfo instance is writable, false otherwise.
javax.management.openmbean.OpenMBeanAttributeInfo#isIs()->boolean:::Returns true if the attribute described by this OpenMBeanAttributeInfo instance is accessed through a isXXX getter (applies only to boolean and Boolean values), false otherwise.
javax.management.openmbean.OpenMBeanAttributeInfo#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this OpenMBeanAttributeInfo instance for equality
javax.management.openmbean.OpenMBeanAttributeInfo#hashCode()->int:::Returns the hash code value for this OpenMBeanAttributeInfo instance
javax.management.openmbean.OpenMBeanAttributeInfo#toString()->String:::Returns a string representation of this OpenMBeanAttributeInfo instance
javax.management.openmbean.OpenMBeanAttributeInfoSupport#check(OpenMBeanParameterInfo)->void::: open bean attribute info support check
javax.management.openmbean.OpenMBeanAttributeInfoSupport#compare(Object, Object)->int::: open bean attribute info support compare
javax.management.openmbean.OpenMBeanAttributeInfoSupport#makeDescriptor(OpenType, T, T[], Comparable, Comparable)->Descriptor::: open bean attribute info support make descriptor
javax.management.openmbean.OpenMBeanAttributeInfoSupport#makeDescriptor(OpenType, T, Set, Comparable, Comparable)->Descriptor::: open bean attribute info support make descriptor
javax.management.openmbean.OpenMBeanAttributeInfoSupport#valueFrom(Descriptor, String, OpenType)->T::: open bean attribute info support value from
javax.management.openmbean.OpenMBeanAttributeInfoSupport#valuesFrom(Descriptor, String, OpenType)->Set::: open bean attribute info support values from
javax.management.openmbean.OpenMBeanAttributeInfoSupport#comparableValueFrom(Descriptor, String, OpenType)->Comparable::: open bean attribute info support comparable value from
javax.management.openmbean.OpenMBeanAttributeInfoSupport#cast(Object)->T::: open bean attribute info support cast
javax.management.openmbean.OpenMBeanAttributeInfoSupport#getOpenType()->OpenType:::Returns the open type for the values of the attribute described by this OpenMBeanAttributeInfoSupport instance.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#getDefaultValue()->Object:::Returns the default value for the attribute described by this OpenMBeanAttributeInfoSupport instance, if specified, or null otherwise.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#getLegalValues()->Set:::Returns an unmodifiable Set of legal values for the attribute described by this OpenMBeanAttributeInfoSupport instance, if specified, or null otherwise.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#getMinValue()->Comparable:::Returns the minimal value for the attribute described by this OpenMBeanAttributeInfoSupport instance, if specified, or null otherwise.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#getMaxValue()->Comparable:::Returns the maximal value for the attribute described by this OpenMBeanAttributeInfoSupport instance, if specified, or null otherwise.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#hasDefaultValue()->boolean:::Returns true if this OpenMBeanAttributeInfoSupport instance specifies a non-null default value for the described attribute, false otherwise.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#hasLegalValues()->boolean:::Returns true if this OpenMBeanAttributeInfoSupport instance specifies a non-null set of legal values for the described attribute, false otherwise.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#hasMinValue()->boolean:::Returns true if this OpenMBeanAttributeInfoSupport instance specifies a non-null minimal value for the described attribute, false otherwise.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#hasMaxValue()->boolean:::Returns true if this OpenMBeanAttributeInfoSupport instance specifies a non-null maximal value for the described attribute, false otherwise.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#isValue(Object)->boolean:::Tests whether obj is a valid value for the attribute described by this OpenMBeanAttributeInfoSupport instance.
javax.management.openmbean.OpenMBeanAttributeInfoSupport#isValue(OpenMBeanParameterInfo, Object)->boolean::: open bean attribute info support is value
javax.management.openmbean.OpenMBeanAttributeInfoSupport#equals(Object)->boolean:::Compares the specified obj parameter with this OpenMBeanAttributeInfoSupport instance for equality
javax.management.openmbean.OpenMBeanAttributeInfoSupport#equal(OpenMBeanParameterInfo, OpenMBeanParameterInfo)->boolean::: open bean attribute info support equal
javax.management.openmbean.OpenMBeanAttributeInfoSupport#hashCode()->int:::Returns the hash code value for this OpenMBeanAttributeInfoSupport instance.  The hash code of an OpenMBeanAttributeInfoSupport instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its name, its open type, its default, min, max and legal values, and its Descriptor)
javax.management.openmbean.OpenMBeanAttributeInfoSupport#hashCode(OpenMBeanParameterInfo)->int::: open bean attribute info support hash code
javax.management.openmbean.OpenMBeanAttributeInfoSupport#toString()->String:::Returns a string representation of this OpenMBeanAttributeInfoSupport instance
javax.management.openmbean.OpenMBeanAttributeInfoSupport#toString(OpenMBeanParameterInfo)->String::: open bean attribute info support to string
javax.management.openmbean.OpenMBeanConstructorInfo#getDescription()->String:::Returns a human readable description of the constructor described by this OpenMBeanConstructorInfo instance.
javax.management.openmbean.OpenMBeanConstructorInfo#getName()->String:::Returns the name of the constructor described by this OpenMBeanConstructorInfo instance.
javax.management.openmbean.OpenMBeanConstructorInfo#getSignature()->MBeanParameterInfo[]:::Returns an array of OpenMBeanParameterInfo instances describing each parameter in the signature of the constructor described by this OpenMBeanConstructorInfo instance.
javax.management.openmbean.OpenMBeanConstructorInfo#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this OpenMBeanConstructorInfo instance for equality
javax.management.openmbean.OpenMBeanConstructorInfo#hashCode()->int:::Returns the hash code value for this OpenMBeanConstructorInfo instance
javax.management.openmbean.OpenMBeanConstructorInfo#toString()->String:::Returns a string representation of this OpenMBeanConstructorInfo instance
javax.management.openmbean.OpenMBeanConstructorInfoSupport#equals(Object)->boolean:::Compares the specified obj parameter with this OpenMBeanConstructorInfoSupport instance for equality.  Returns true if and only if all of the following statements are true:  <ul> <li>obj is non null,</li> <li>obj also implements the OpenMBeanConstructorInfo interface,</li> <li>their names are equal</li> <li>their signatures are equal.</li> </ul>  This ensures that this equals method works properly for obj parameters which are different implementations of the OpenMBeanConstructorInfo interface.
javax.management.openmbean.OpenMBeanConstructorInfoSupport#hashCode()->int:::Returns the hash code value for this OpenMBeanConstructorInfoSupport instance.  The hash code of an OpenMBeanConstructorInfoSupport instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its name and signature, where the signature hashCode is calculated by a call to java.util.Arrays.asList(this.getSignature).hashCode()).  This ensures that t1.equals(t2) implies that t1.hashCode()==t2.hashCode() for any two OpenMBeanConstructorInfoSupport instances t1 and t2, as required by the general contract of the method Object#hashCode() Object.hashCode().  However, note that another instance of a class implementing the OpenMBeanConstructorInfo interface may be equal to this OpenMBeanConstructorInfoSupport instance as defined by #equals(java.lang.Object), but may have a different hash code if it is calculated differently.  As OpenMBeanConstructorInfoSupport instances are immutable, the hash code for this instance is calculated once, on the first call to hashCode, and then the same value is returned for subsequent calls.
javax.management.openmbean.OpenMBeanConstructorInfoSupport#toString()->String:::Returns a string representation of this OpenMBeanConstructorInfoSupport instance.  The string representation consists of the name of this class (ie javax.management.openmbean.OpenMBeanConstructorInfoSupport), the name and signature of the described constructor and the string representation of its descriptor.  As OpenMBeanConstructorInfoSupport instances are immutable, the string representation for this instance is calculated once, on the first call to toString, and then the same value is returned for subsequent calls.
javax.management.openmbean.OpenMBeanInfo#getClassName()->String:::Returns the fully qualified Java class name of the open MBean instances this OpenMBeanInfo describes.
javax.management.openmbean.OpenMBeanInfo#getDescription()->String:::Returns a human readable description of the type of open MBean instances this OpenMBeanInfo describes.
javax.management.openmbean.OpenMBeanInfo#getAttributes()->MBeanAttributeInfo[]:::Returns an array of OpenMBeanAttributeInfo instances describing each attribute in the open MBean described by this OpenMBeanInfo instance
javax.management.openmbean.OpenMBeanInfo#getOperations()->MBeanOperationInfo[]:::Returns an array of OpenMBeanOperationInfo instances describing each operation in the open MBean described by this OpenMBeanInfo instance
javax.management.openmbean.OpenMBeanInfo#getConstructors()->MBeanConstructorInfo[]:::Returns an array of OpenMBeanConstructorInfo instances describing each constructor in the open MBean described by this OpenMBeanInfo instance
javax.management.openmbean.OpenMBeanInfo#getNotifications()->MBeanNotificationInfo[]:::Returns an array of MBeanNotificationInfo instances describing each notification emitted by the open MBean described by this OpenMBeanInfo instance.
javax.management.openmbean.OpenMBeanInfo#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this OpenMBeanInfo instance for equality
javax.management.openmbean.OpenMBeanInfo#hashCode()->int:::Returns the hash code value for this OpenMBeanInfo instance
javax.management.openmbean.OpenMBeanInfo#toString()->String:::Returns a string representation of this OpenMBeanInfo instance
javax.management.openmbean.OpenMBeanInfoSupport#equals(Object)->boolean:::Compares the specified obj parameter with this OpenMBeanInfoSupport instance for equality.  Returns true if and only if all of the following statements are true:  <ul> <li>obj is non null,</li> <li>obj also implements the OpenMBeanInfo interface,</li> <li>their class names are equal</li> <li>their infos on attributes, constructors, operations and notifications are equal</li> </ul>  This ensures that this equals method works properly for obj parameters which are different implementations of the OpenMBeanInfo interface.
javax.management.openmbean.OpenMBeanInfoSupport#hashCode()->int:::Returns the hash code value for this OpenMBeanInfoSupport instance.  The hash code of an OpenMBeanInfoSupport instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its class name, and its infos on attributes, constructors, operations and notifications, where the hashCode of each of these arrays is calculated by a call to new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()).  This ensures that t1.equals(t2) implies that t1.hashCode()==t2.hashCode() for any two OpenMBeanInfoSupport instances t1 and t2, as required by the general contract of the method Object#hashCode() Object.hashCode().  However, note that another instance of a class implementing the OpenMBeanInfo interface may be equal to this OpenMBeanInfoSupport instance as defined by #equals(java.lang.Object), but may have a different hash code if it is calculated differently.  As OpenMBeanInfoSupport instances are immutable, the hash code for this instance is calculated once, on the first call to hashCode, and then the same value is returned for subsequent calls.
javax.management.openmbean.OpenMBeanInfoSupport#toString()->String:::Returns a string representation of this OpenMBeanInfoSupport instance.  The string representation consists of the name of this class (ie javax.management.openmbean.OpenMBeanInfoSupport), the MBean class name, the string representation of infos on attributes, constructors, operations and notifications of the described MBean and the string representation of the descriptor.  As OpenMBeanInfoSupport instances are immutable, the string representation for this instance is calculated once, on the first call to toString, and then the same value is returned for subsequent calls.
javax.management.openmbean.OpenMBeanOperationInfo#getDescription()->String:::Returns a human readable description of the operation described by this OpenMBeanOperationInfo instance.
javax.management.openmbean.OpenMBeanOperationInfo#getName()->String:::Returns the name of the operation described by this OpenMBeanOperationInfo instance.
javax.management.openmbean.OpenMBeanOperationInfo#getSignature()->MBeanParameterInfo[]:::Returns an array of OpenMBeanParameterInfo instances describing each parameter in the signature of the operation described by this OpenMBeanOperationInfo instance
javax.management.openmbean.OpenMBeanOperationInfo#getImpact()->int:::Returns an int constant qualifying the impact of the operation described by this OpenMBeanOperationInfo instance
javax.management.openmbean.OpenMBeanOperationInfo#getReturnType()->String:::Returns the fully qualified Java class name of the values returned by the operation described by this OpenMBeanOperationInfo instance
javax.management.openmbean.OpenMBeanOperationInfo#getReturnOpenType()->OpenType::: open bean operation info get return open type
javax.management.openmbean.OpenMBeanOperationInfo#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this OpenMBeanOperationInfo instance for equality
javax.management.openmbean.OpenMBeanOperationInfo#hashCode()->int:::Returns the hash code value for this OpenMBeanOperationInfo instance
javax.management.openmbean.OpenMBeanOperationInfo#toString()->String:::Returns a string representation of this OpenMBeanOperationInfo instance
javax.management.openmbean.OpenMBeanOperationInfoSupport#getReturnOpenType()->OpenType:::Returns the open type of the values returned by the operation described by this OpenMBeanOperationInfo instance.
javax.management.openmbean.OpenMBeanOperationInfoSupport#equals(Object)->boolean:::Compares the specified obj parameter with this OpenMBeanOperationInfoSupport instance for equality.  Returns true if and only if all of the following statements are true:  <ul> <li>obj is non null,</li> <li>obj also implements the OpenMBeanOperationInfo interface,</li> <li>their names are equal</li> <li>their signatures are equal</li> <li>their return open types are equal</li> <li>their impacts are equal</li> </ul>  This ensures that this equals method works properly for obj parameters which are different implementations of the OpenMBeanOperationInfo interface.
javax.management.openmbean.OpenMBeanOperationInfoSupport#hashCode()->int:::Returns the hash code value for this OpenMBeanOperationInfoSupport instance.  The hash code of an OpenMBeanOperationInfoSupport instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to java.util.Arrays.asList(this.getSignature).hashCode()).  This ensures that t1.equals(t2)  implies that t1.hashCode()==t2.hashCode()  for any two OpenMBeanOperationInfoSupport instances t1 and t2, as required by the general contract of the method Object#hashCode() Object.hashCode().  However, note that another instance of a class implementing the OpenMBeanOperationInfo interface may be equal to this OpenMBeanOperationInfoSupport instance as defined by #equals(java.lang.Object), but may have a different hash code if it is calculated differently.  As OpenMBeanOperationInfoSupport instances are immutable, the hash code for this instance is calculated once, on the first call to hashCode, and then the same value is returned for subsequent calls.
javax.management.openmbean.OpenMBeanOperationInfoSupport#toString()->String:::Returns a string representation of this OpenMBeanOperationInfoSupport instance.  The string representation consists of the name of this class (ie javax.management.openmbean.OpenMBeanOperationInfoSupport), and the name, signature, return open type and impact of the described operation and the string representation of its descriptor.  As OpenMBeanOperationInfoSupport instances are immutable, the string representation for this instance is calculated once, on the first call to toString, and then the same value is returned for subsequent calls.
javax.management.openmbean.OpenMBeanParameterInfo#getDescription()->String:::Returns a human readable description of the parameter described by this OpenMBeanParameterInfo instance.
javax.management.openmbean.OpenMBeanParameterInfo#getName()->String:::Returns the name of the parameter described by this OpenMBeanParameterInfo instance.
javax.management.openmbean.OpenMBeanParameterInfo#getOpenType()->OpenType:::Returns the open type of the values of the parameter described by this OpenMBeanParameterInfo instance.
javax.management.openmbean.OpenMBeanParameterInfo#getDefaultValue()->Object:::Returns the default value for this parameter, if it has one, or null otherwise.
javax.management.openmbean.OpenMBeanParameterInfo#getLegalValues()->Set:::Returns the set of legal values for this parameter, if it has one, or null otherwise.
javax.management.openmbean.OpenMBeanParameterInfo#getMinValue()->Comparable:::Returns the minimal value for this parameter, if it has one, or null otherwise.
javax.management.openmbean.OpenMBeanParameterInfo#getMaxValue()->Comparable:::Returns the maximal value for this parameter, if it has one, or null otherwise.
javax.management.openmbean.OpenMBeanParameterInfo#hasDefaultValue()->boolean:::Returns true if this parameter has a specified default value, or false otherwise.
javax.management.openmbean.OpenMBeanParameterInfo#hasLegalValues()->boolean:::Returns true if this parameter has a specified set of legal values, or false otherwise.
javax.management.openmbean.OpenMBeanParameterInfo#hasMinValue()->boolean:::Returns true if this parameter has a specified minimal value, or false otherwise.
javax.management.openmbean.OpenMBeanParameterInfo#hasMaxValue()->boolean:::Returns true if this parameter has a specified maximal value, or false otherwise.
javax.management.openmbean.OpenMBeanParameterInfo#isValue(Object)->boolean:::Tests whether <var>obj</var> is a valid value for the parameter described by this OpenMBeanParameterInfo instance.
javax.management.openmbean.OpenMBeanParameterInfo#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this OpenMBeanParameterInfo instance for equality
javax.management.openmbean.OpenMBeanParameterInfo#hashCode()->int:::Returns the hash code value for this OpenMBeanParameterInfo instance
javax.management.openmbean.OpenMBeanParameterInfo#toString()->String:::Returns a string representation of this OpenMBeanParameterInfo instance
javax.management.openmbean.OpenMBeanParameterInfoSupport#getOpenType()->OpenType:::Returns the open type for the values of the parameter described by this OpenMBeanParameterInfoSupport instance.
javax.management.openmbean.OpenMBeanParameterInfoSupport#getDefaultValue()->Object:::Returns the default value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.
javax.management.openmbean.OpenMBeanParameterInfoSupport#getLegalValues()->Set:::Returns an unmodifiable Set of legal values for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.
javax.management.openmbean.OpenMBeanParameterInfoSupport#getMinValue()->Comparable:::Returns the minimal value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.
javax.management.openmbean.OpenMBeanParameterInfoSupport#getMaxValue()->Comparable:::Returns the maximal value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.
javax.management.openmbean.OpenMBeanParameterInfoSupport#hasDefaultValue()->boolean:::Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null default value for the described parameter, false otherwise.
javax.management.openmbean.OpenMBeanParameterInfoSupport#hasLegalValues()->boolean:::Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null set of legal values for the described parameter, false otherwise.
javax.management.openmbean.OpenMBeanParameterInfoSupport#hasMinValue()->boolean:::Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null minimal value for the described parameter, false otherwise.
javax.management.openmbean.OpenMBeanParameterInfoSupport#hasMaxValue()->boolean:::Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null maximal value for the described parameter, false otherwise.
javax.management.openmbean.OpenMBeanParameterInfoSupport#isValue(Object)->boolean:::Tests whether obj is a valid value for the parameter described by this OpenMBeanParameterInfo instance.
javax.management.openmbean.OpenMBeanParameterInfoSupport#equals(Object)->boolean:::Compares the specified obj parameter with this OpenMBeanParameterInfoSupport instance for equality.  Returns true if and only if all of the following statements are true:  <ul> <li>obj is non null,</li> <li>obj also implements the OpenMBeanParameterInfo interface,</li> <li>their names are equal</li> <li>their open types are equal</li> <li>their default, min, max and legal values are equal.</li> </ul> This ensures that this equals method works properly for obj parameters which are different implementations of the OpenMBeanParameterInfo interface
javax.management.openmbean.OpenMBeanParameterInfoSupport#hashCode()->int:::Returns the hash code value for this OpenMBeanParameterInfoSupport instance.  The hash code of an OpenMBeanParameterInfoSupport instance is the sum of the hash codes of all elements of information used in equals comparisons (ie: its name, its open type, its default, min, max and legal values, and its Descriptor)
javax.management.openmbean.OpenMBeanParameterInfoSupport#toString()->String:::Returns a string representation of this OpenMBeanParameterInfoSupport instance
javax.management.openmbean.OpenType#getDescriptor()->Descriptor::: open type get descriptor
javax.management.openmbean.OpenType#getClassName()->String:::Returns the fully qualified Java class name of the open data values this open type describes
javax.management.openmbean.OpenType#safeGetClassName()->String::: open type safe get class name
javax.management.openmbean.OpenType#getTypeName()->String:::Returns the name of this OpenType instance.
javax.management.openmbean.OpenType#getDescription()->String:::Returns the text description of this OpenType instance.
javax.management.openmbean.OpenType#isArray()->boolean:::Returns true if the open data values this open type describes are arrays, false otherwise.
javax.management.openmbean.OpenType#isValue(Object)->boolean:::Tests whether <var>obj</var> is a value for this open type.
javax.management.openmbean.OpenType#isAssignableFrom(OpenType)->boolean:::Tests whether values of the given type can be assigned to this open type
javax.management.openmbean.OpenType#equals(Object)->boolean:::Compares the specified obj parameter with this open type instance for equality.
javax.management.openmbean.OpenType#hashCode()->int::: open type hash code
javax.management.openmbean.OpenType#toString()->String:::Returns a string representation of this open type instance.
javax.management.openmbean.SimpleType#isValue(Object)->boolean:::Tests whether <var>obj</var> is a value for this SimpleType instance
javax.management.openmbean.SimpleType#equals(Object)->boolean:::Compares the specified obj parameter with this SimpleType instance for equality
javax.management.openmbean.SimpleType#hashCode()->int:::Returns the hash code value for this SimpleType instance
javax.management.openmbean.SimpleType#toString()->String:::Returns a string representation of this SimpleType instance
javax.management.openmbean.SimpleType#readResolve()->Object:::Replace an object read from an java.io.ObjectInputStream with the unique instance for that value.
javax.management.openmbean.TabularData#getTabularType()->TabularType:::Returns the tabular type describing this TabularData instance.
javax.management.openmbean.TabularData#calculateIndex(CompositeData)->Object[]:::Calculates the index that would be used in this TabularData instance to refer to the specified composite data <var>value</var> parameter if it were added to this instance
javax.management.openmbean.TabularData#size()->int:::Returns the number of CompositeData values (ie the number of rows) contained in this TabularData instance.
javax.management.openmbean.TabularData#isEmpty()->boolean:::Returns true if the number of CompositeData values (ie the number of rows) contained in this TabularData instance is zero.
javax.management.openmbean.TabularData#containsKey(Object[])->boolean:::Returns true if and only if this TabularData instance contains a CompositeData value (ie a row) whose index is the specified <var>key</var>
javax.management.openmbean.TabularData#containsValue(CompositeData)->boolean:::Returns true if and only if this TabularData instance contains the specified CompositeData value
javax.management.openmbean.TabularData#get(Object[])->CompositeData:::Returns the CompositeData value whose index is <var>key</var>, or null if there is no value mapping to <var>key</var>, in this TabularData instance.
javax.management.openmbean.TabularData#put(CompositeData)->void:::Adds <var>value</var> to this TabularData instance
javax.management.openmbean.TabularData#remove(Object[])->CompositeData:::Removes the CompositeData value whose index is <var>key</var> from this TabularData instance, and returns the removed value, or returns null if there is no value whose index is <var>key</var>.
javax.management.openmbean.TabularData#putAll(CompositeData[])->void:::Add all the elements in <var>values</var> to this TabularData instance
javax.management.openmbean.TabularData#clear()->void:::Removes all CompositeData values (ie rows) from this TabularData instance.
javax.management.openmbean.TabularData#keySet()->Set:::Returns a set view of the keys (ie the index values) of the CompositeData values (ie the rows) contained in this TabularData instance
javax.management.openmbean.TabularData#values()->Collection:::Returns a collection view of the CompositeData values (ie the rows) contained in this TabularData instance
javax.management.openmbean.TabularData#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this TabularData instance for equality
javax.management.openmbean.TabularData#hashCode()->int:::Returns the hash code value for this TabularData instance
javax.management.openmbean.TabularData#toString()->String:::Returns a string representation of this TabularData instance
javax.management.openmbean.TabularDataSupport#getTabularType()->TabularType:::Returns the tabular type describing this TabularData instance.
javax.management.openmbean.TabularDataSupport#calculateIndex(CompositeData)->Object[]:::Calculates the index that would be used in this TabularData instance to refer to the specified composite data <var>value</var> parameter if it were added to this instance
javax.management.openmbean.TabularDataSupport#containsKey(Object)->boolean:::Returns true if and only if this TabularData instance contains a CompositeData value (ie a row) whose index is the specified <var>key</var>
javax.management.openmbean.TabularDataSupport#containsKey(Object[])->boolean:::Returns true if and only if this TabularData instance contains a CompositeData value (ie a row) whose index is the specified <var>key</var>
javax.management.openmbean.TabularDataSupport#containsValue(CompositeData)->boolean:::Returns true if and only if this TabularData instance contains the specified CompositeData value
javax.management.openmbean.TabularDataSupport#containsValue(Object)->boolean:::Returns true if and only if this TabularData instance contains the specified value.
javax.management.openmbean.TabularDataSupport#get(Object)->Object:::This method simply calls get((Object[]) key).
javax.management.openmbean.TabularDataSupport#get(Object[])->CompositeData:::Returns the CompositeData value whose index is <var>key</var>, or null if there is no value mapping to <var>key</var>, in this TabularData instance.
javax.management.openmbean.TabularDataSupport#put(Object, Object)->Object:::This method simply calls put((CompositeData) value) and therefore ignores its <var>key</var> parameter which can be null.
javax.management.openmbean.TabularDataSupport#put(CompositeData)->void::: tabular data support put
javax.management.openmbean.TabularDataSupport#remove(Object)->Object:::This method simply calls remove((Object[]) key).
javax.management.openmbean.TabularDataSupport#remove(Object[])->CompositeData:::Removes the CompositeData value whose index is <var>key</var> from this TabularData instance, and returns the removed value, or returns null if there is no value whose index is <var>key</var>.
javax.management.openmbean.TabularDataSupport#putAll(Map)->void:::Add all the values contained in the specified map <var>t</var> to this TabularData instance
javax.management.openmbean.TabularDataSupport#putAll(CompositeData[])->void:::Add all the elements in <var>values</var> to this TabularData instance
javax.management.openmbean.TabularDataSupport#clear()->void:::Removes all rows from this TabularDataSupport instance.
javax.management.openmbean.TabularDataSupport#size()->int:::Returns the number of rows in this TabularDataSupport instance.
javax.management.openmbean.TabularDataSupport#isEmpty()->boolean:::Returns true if this TabularDataSupport instance contains no rows.
javax.management.openmbean.TabularDataSupport#keySet()->Set:::Returns a set view of the keys contained in the underlying map of this TabularDataSupport instance used to index the rows
javax.management.openmbean.TabularDataSupport#values()->Collection:::Returns a collection view of the rows contained in this TabularDataSupport instance
javax.management.openmbean.TabularDataSupport#entrySet()->Set>:::Returns a collection view of the index to row mappings contained in this TabularDataSupport instance
javax.management.openmbean.TabularDataSupport#clone()->Object::: tabular data support clone
javax.management.openmbean.TabularDataSupport#equals(Object)->boolean:::Compares the specified <var>obj</var> parameter with this TabularDataSupport instance for equality
javax.management.openmbean.TabularDataSupport#hashCode()->int:::Returns the hash code value for this TabularDataSupport instance
javax.management.openmbean.TabularDataSupport#toString()->String:::Returns a string representation of this TabularDataSupport instance
javax.management.openmbean.TabularType#getRowType()->CompositeType:::Returns the type of the row elements of tabular data values described by this TabularType instance.
javax.management.openmbean.TabularType#getIndexNames()->List:::Returns, in the same order as was given to this instance's constructor, an unmodifiable List of the names of the items the values of which are used to uniquely index each row element of tabular data values described by this TabularType instance.
javax.management.openmbean.TabularType#isValue(Object)->boolean:::Tests whether <var>obj</var> is a value which could be described by this TabularType instance
javax.management.openmbean.TabularType#isAssignableFrom(OpenType)->boolean::: tabular type is assignable from
javax.management.openmbean.TabularType#equals(Object)->boolean:::Compares the specified obj parameter with this TabularType instance for equality
javax.management.openmbean.TabularType#hashCode()->int:::Returns the hash code value for this TabularType instance
javax.management.openmbean.TabularType#toString()->String:::Returns a string representation of this TabularType instance
