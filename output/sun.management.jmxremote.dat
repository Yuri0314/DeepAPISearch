ConnectorBootstrap#initialize():::Initializes and starts the JMX Connector Server:::props->Agent->loadManagementProperties->if->return->portStr->props->getProperty->return->startRemoteConnectorServer
ConnectorBootstrap#initialize(String, Properties):::This method is used by some jtreg tests.:::return->startRemoteConnectorServer
ConnectorBootstrap#startRemoteConnectorServer(String, Properties):::Initializes and starts a JMX Connector Server for remote monitoring and management.:::port->try->Integer->parseInt->catch->throw->new->AgentConfigurationError->finally->if->throw->new->AgentConfigurationError->rmiPort->rmiPortStr->props->getProperty->try->if->Integer->parseInt->catch->throw->new->AgentConfigurationError->finally->if->throw->new->AgentConfigurationError->useAuthenticationStr->props->getProperty->useAuthentication->Boolean->valueOf->booleanValue->useSslStr->props->getProperty->useSsl->Boolean->valueOf->booleanValue->useRegistrySslStr->props->getProperty->useRegistrySsl->Boolean->valueOf->booleanValue->enabledCipherSuites->props->getProperty->enabledCipherSuitesList->if->st->new->StringTokenizer->tokens->st->countTokens->new->StringArr->for->i->enabledProtocols->props->getProperty->enabledProtocolsList->if->st->new->StringTokenizer->tokens->st->countTokens->new->StringArr->for->i->sslNeedClientAuthStr->props->getProperty->sslNeedClientAuth->Boolean->valueOf->booleanValue->sslConfigFileName->props->getProperty->loginConfigName->passwordFileName->shouldHashPasswords->accessFileName->if->props->getProperty->if->props->getDefaultFileName->getProperty->hashPasswords->props->getProperty->Boolean->parseBoolean->checkPasswordFile->props->getDefaultFileName->getProperty->checkAccessFile->bindAddress->props->getProperty->jmxRmiFilter->props->getProperty->if->logger->isLoggable->logger->Agent->getText->Agent->getText->log->mbs->ManagementFactory->getPlatformMBeanServer->cs->url->try->data->exportMBeanServer->Agent->url->toString->getText->config->catch->throw->e->toString->new->AgentConfigurationError->finally->try->properties->new->HashMap<>->properties->url->toString->put->properties->put->properties->put->properties->put->properties->put->ConnectorAddressLink->exportRemote->catch->config->finally->return
LocalRMIServerSocketFactory#createServerSocket(int):::Creates a server socket that only accepts connection requests from clients running on the host where the RMI remote objects have been exported.:::return->new->ServerSocket
LocalRMIServerSocketFactory#equals(Object):::Two LocalRMIServerSocketFactory objects are equal if they are of the same type.:::return
LocalRMIServerSocketFactory#hashCode():::Returns a hash code value for this LocalRMIServerSocketFactory.:::return->getClass->hashCode
