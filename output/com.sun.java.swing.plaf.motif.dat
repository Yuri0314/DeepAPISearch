MotifBorders.BevelBorder#paintBorder(Component, Graphics, int, int, int, int)::: bevel border paint border:::g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine
MotifBorders.BevelBorder#getBorderInsets(Component, Insets)::: bevel border get border insets:::insets->set->return
MotifBorders.BevelBorder#isOpaque(Component)::: bevel border is opaque:::return
MotifBorders.FocusBorder#paintBorder(Component, Graphics, int, int, int, int)::: focus border paint border:::if->c->hasFocus->g->setColor->g->drawRect->else->g->setColor->g->drawRect
MotifBorders.FocusBorder#getBorderInsets(Component, Insets)::: focus border get border insets:::insets->set->return
MotifBorders.ButtonBorder#paintBorder(Component, Graphics, int, int, int, int)::: button border paint border:::isPressed->hasFocus->canBeDefault->isDefault->if->b->model->b->getModel->model->isArmed->model->isPressed->model->isArmed->b->isFocusPainted->b->hasFocus->if->isDefaultCapable->isDefaultButton->bx1->by1->bx2->by2->if->if->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->if->g->setColor->if->g->drawRect->else->g->drawRect->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine
MotifBorders.ButtonBorder#getBorderInsets(Component, Insets)::: button border get border insets:::thickness->isDefaultCapable->insets->set->return
MotifBorders.ToggleButtonBorder#paintBorder(Component, Graphics, int, int, int, int)::: toggle button border paint border:::if->b->model->b->getModel->if->model->isArmed->model->isPressed->model->isSelected->model->isPressed->model->isSelected->b->isFocusPainted->b->hasFocus->drawBezel->else->b->isFocusPainted->b->hasFocus->drawBezel->else->drawBezel
MotifBorders.ToggleButtonBorder#getBorderInsets(Component, Insets)::: toggle button border get border insets:::insets->set->return
MotifBorders.MenuBarBorder#paintBorder(Component, Graphics, int, int, int, int)::: menu bar border paint border:::if->return->menuBar->if->menuBar->isBorderPainted->size->menuBar->getSize->drawBezel
MotifBorders.MenuBarBorder#getBorderInsets(Component, Insets)::: menu bar border get border insets:::insets->set->return
MotifBorders.FrameBorder#setComponent(JComponent):::Sets the FrameBorder's JComponent.:::
MotifBorders.FrameBorder#component():::Returns the FrameBorder's JComponent.:::return
MotifBorders.FrameBorder#getFrameHighlight()::: frame border get frame highlight:::return
MotifBorders.FrameBorder#getFrameColor()::: frame border get frame color:::return
MotifBorders.FrameBorder#getFrameShadow()::: frame border get frame shadow:::return
MotifBorders.FrameBorder#getBorderInsets(Component, Insets)::: frame border get border insets:::newInsets->set->return
MotifBorders.FrameBorder#drawTopBorder(Component, Graphics, int, int, int, int):::Draws the FrameBorder's top border.:::titleBarRect->new->Rectangle->if->g->getClipBounds->intersects->return->maxX->maxY->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->return
MotifBorders.FrameBorder#drawLeftBorder(Component, Graphics, int, int, int, int):::Draws the FrameBorder's left border.:::borderRect->getBorderInsets->new->Rectangle->if->g->getClipBounds->intersects->return->startY->g->setColor->g->drawLine->g->drawLine->g->setColor->g->fillRect->g->setColor->g->drawLine->return
MotifBorders.FrameBorder#drawRightBorder(Component, Graphics, int, int, int, int):::Draws the FrameBorder's right border.:::borderRect->getBorderInsets->getBorderInsets->new->Rectangle->if->g->getClipBounds->intersects->return->startX->getBorderInsets->startY->g->setColor->g->fillRect->g->setColor->g->fillRect->g->setColor->g->drawLine->return
MotifBorders.FrameBorder#drawBottomBorder(Component, Graphics, int, int, int, int):::Draws the FrameBorder's bottom border.:::borderRect->marginHeight->startY->getBorderInsets->getBorderInsets->new->Rectangle->if->g->getClipBounds->intersects->return->getBorderInsets->g->setColor->g->drawLine->g->drawLine->g->setColor->g->fillRect->g->setColor->g->drawLine->return
MotifBorders.FrameBorder#isActiveFrame()::: frame border is active frame:::return->jcomp->hasFocus
MotifBorders.FrameBorder#paintBorder(Component, Graphics, int, int, int, int):::Draws the FrameBorder in the given Rect:::if->isActiveFrame->UIManager->getColor->else->UIManager->getColor->frameColor->brighter->frameColor->darker->darker->drawTopBorder->drawLeftBorder->drawRightBorder->drawBottomBorder
MotifBorders.InternalFrameBorder#setFrame(JInternalFrame):::Sets the InternalFrameBorder's InternalFrame.:::
MotifBorders.InternalFrameBorder#frame():::Returns the InternalFrameBorder's InternalFrame.:::return
MotifBorders.InternalFrameBorder#resizePartWidth():::Returns the width of the InternalFrameBorder's resize controls, appearing along the InternalFrameBorder's bottom border:::if->frame->isResizable->return->return
MotifBorders.InternalFrameBorder#drawTopBorder(Component, Graphics, int, int, int, int):::Draws the InternalFrameBorder's top border.:::if->super->drawTopBorder->frame->isResizable->g->getFrameShadow->setColor->g->drawLine->g->drawLine->g->getFrameHighlight->setColor->g->drawLine->g->drawLine->return->return
MotifBorders.InternalFrameBorder#drawLeftBorder(Component, Graphics, int, int, int, int):::Draws the InternalFrameBorder's left border.:::if->super->drawLeftBorder->frame->isResizable->g->getFrameHighlight->setColor->topY->g->drawLine->bottomY->g->drawLine->g->getFrameShadow->setColor->g->drawLine->g->drawLine->return->return
MotifBorders.InternalFrameBorder#drawRightBorder(Component, Graphics, int, int, int, int):::Draws the InternalFrameBorder's right border.:::if->super->drawRightBorder->frame->isResizable->startX->getBorderInsets->g->getFrameHighlight->setColor->topY->g->drawLine->bottomY->g->drawLine->g->getFrameShadow->setColor->g->drawLine->g->drawLine->return->return
MotifBorders.InternalFrameBorder#drawBottomBorder(Component, Graphics, int, int, int, int):::Draws the InternalFrameBorder's bottom border.:::if->super->drawBottomBorder->frame->isResizable->startY->getBorderInsets->g->getFrameShadow->setColor->g->drawLine->g->drawLine->g->getFrameHighlight->setColor->g->drawLine->g->drawLine->return->return
MotifBorders.InternalFrameBorder#isActiveFrame()::: internal frame border is active frame:::return->frame->isSelected
MotifBorders#drawBezel(Graphics, int, int, int, int, boolean, boolean, Color, Color, Color, Color)::: motif borders draw bezel:::oldColor->g->getColor->g->translate->if->if->g->setColor->g->drawRect->g->setColor->g->drawRect->g->setColor->g->drawLine->g->drawLine->else->if->g->setColor->g->drawRect->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->else->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->translate->g->setColor
MotifBorders.MotifPopupMenuBorder#paintBorder(Component, Graphics, int, int, int, int):::Paints the border for the specified component with the specified position and size.:::if->return->origFont->g->getFont->origColor->g->getColor->popup->title->popup->getLabel->if->return->g->setFont->fm->SwingUtilities2->getFontMetrics->fontHeight->fm->getHeight->descent->fm->getDescent->ascent->fm->getAscent->textLoc->new->Point->stringWidth->SwingUtilities2->stringWidth->g->setColor->g->fillRect->g->setColor->SwingUtilities2->drawString->MotifGraphicsUtils->drawGroove->g->setFont->g->setColor
MotifBorders.MotifPopupMenuBorder#getBorderInsets(Component, Insets):::Reinitialize the insets parameter with this Border's current Insets.:::if->return->fm->descent->ascent->title->getLabel->if->return->c->getFontMetrics->if->fm->getDescent->fm->getAscent->return
MotifButtonListener#checkOpacity(AbstractButton)::: motif button listener check opacity:::b->setOpaque
MotifButtonUI#createUI(JComponent)::: motif button i create i:::appContext->AppContext->getAppContext->motifButtonUI->appContext->get->if->new->MotifButtonUI->appContext->put->return
MotifButtonUI#createButtonListener(AbstractButton)::: motif button i create button listener:::return->new->MotifButtonListener
MotifButtonUI#installDefaults(AbstractButton)::: motif button i install defaults:::super->installDefaults->if->UIManager->getPropertyPrefix->getColor->LookAndFeel->installProperty
MotifButtonUI#uninstallDefaults(AbstractButton)::: motif button i uninstall defaults:::super->uninstallDefaults
MotifButtonUI#getSelectColor()::: motif button i get select color:::return
MotifButtonUI#paint(Graphics, JComponent)::: motif button i paint:::c->getBackground->fillContentArea->super->paint
MotifButtonUI#paintIcon(Graphics, JComponent, Rectangle)::: motif button i paint icon:::oldClip->g->getClip->newClip->AbstractBorder->c->getBorder->c->getWidth->c->getHeight->getInteriorRectangle->r->oldClip->getBounds->SwingUtilities->computeIntersection->g->setClip->super->paintIcon->g->setClip
MotifButtonUI#paintFocus(Graphics, AbstractButton, Rectangle, Rectangle, Rectangle)::: motif button i paint focus:::
MotifButtonUI#paintButtonPressed(Graphics, AbstractButton)::: motif button i paint button pressed:::fillContentArea
MotifButtonUI#fillContentArea(Graphics, AbstractButton, Color)::: motif button i fill content area:::if->b->isContentAreaFilled->margin->b->getMargin->insets->b->getInsets->size->b->getSize->g->setColor->g->fillRect
MotifCheckBoxMenuItemUI#createUI(JComponent)::: motif check box menu item i create i:::return->new->MotifCheckBoxMenuItemUI
MotifCheckBoxMenuItemUI#installListeners()::: motif check box menu item i install listeners:::super->installListeners->createChangeListener->menuItem->addChangeListener
MotifCheckBoxMenuItemUI#uninstallListeners()::: motif check box menu item i uninstall listeners:::super->uninstallListeners->menuItem->removeChangeListener
MotifCheckBoxMenuItemUI#createChangeListener(JComponent)::: motif check box menu item i create change listener:::return->new->ChangeHandler
MotifCheckBoxMenuItemUI.ChangeHandler#stateChanged(ChangeEvent)::: change handler state changed:::c->e->getSource->LookAndFeel->c->isArmed->installProperty
MotifCheckBoxMenuItemUI#createMouseInputListener(JComponent)::: motif check box menu item i create mouse input listener:::return->new->MouseInputHandler
MotifCheckBoxMenuItemUI.MouseInputHandler#mouseClicked(MouseEvent)::: mouse input handler mouse clicked:::
MotifCheckBoxMenuItemUI.MouseInputHandler#mousePressed(MouseEvent)::: mouse input handler mouse pressed:::manager->MenuSelectionManager->defaultManager->manager->getPath->setSelectedPath
MotifCheckBoxMenuItemUI.MouseInputHandler#mouseReleased(MouseEvent)::: mouse input handler mouse released:::manager->MenuSelectionManager->defaultManager->menuItem->e->getComponent->p->e->getPoint->if->menuItem->getWidth->menuItem->getHeight->property->if->SwingUtilities2->getBoolean->manager->clearSelectedPath->menuItem->doClick->else->manager->processMouseEvent
MotifCheckBoxMenuItemUI.MouseInputHandler#mouseEntered(MouseEvent)::: mouse input handler mouse entered:::
MotifCheckBoxMenuItemUI.MouseInputHandler#mouseExited(MouseEvent)::: mouse input handler mouse exited:::
MotifCheckBoxMenuItemUI.MouseInputHandler#mouseDragged(MouseEvent)::: mouse input handler mouse dragged:::MenuSelectionManager->defaultManager->processMouseEvent
MotifCheckBoxMenuItemUI.MouseInputHandler#mouseMoved(MouseEvent)::: mouse input handler mouse moved:::
MotifCheckBoxUI#createUI(JComponent)::: motif check box i create i:::appContext->AppContext->getAppContext->motifCheckBoxUI->appContext->get->if->new->MotifCheckBoxUI->appContext->put->return
MotifCheckBoxUI#getPropertyPrefix()::: motif check box i get property prefix:::return
MotifCheckBoxUI#installDefaults(AbstractButton)::: motif check box i install defaults:::super->installDefaults->if->UIManager->getPropertyPrefix->getIcon
MotifCheckBoxUI#uninstallDefaults(AbstractButton)::: motif check box i uninstall defaults:::super->uninstallDefaults
MotifComboBoxUI#createUI(JComponent)::: motif combo box i create i:::return->new->MotifComboBoxUI
MotifComboBoxUI#installUI(JComponent)::: motif combo box i install i:::super->installUI->UIManager->getColor->UIManager->getColor->UIManager->getColor->new->MotifComboBoxArrowIcon->initCode->new->Runnable->SwingUtilities->invokeLater
MotifComboBoxUI#getMinimumSize(JComponent)::: motif combo box i get minimum size:::if->return->new->Dimension->size->insets->getInsets->getDisplaySize->buttonSize->iconAreaWidth->cachedMinimumSize->setSize->return
MotifComboBoxUI#createPopup()::: motif combo box i create popup:::return->new->MotifComboPopup
MotifComboBoxUI.MotifComboPopup#createListMouseMotionListener():::Motif combo popup should not track the mouse in the list.:::return->new->MouseMotionAdapter
MotifComboBoxUI.MotifComboPopup#createKeyListener()::: motif combo popup create key listener:::return->super->createKeyListener
MotifComboBoxUI#installComponents()::: motif combo box i install components:::if->comboBox->isEditable->addEditor->comboBox->add
MotifComboBoxUI#uninstallComponents()::: motif combo box i uninstall components:::removeEditor->comboBox->removeAll
MotifComboBoxUI#paint(Graphics, JComponent)::: motif combo box i paint:::hasFocus->comboBox->hasFocus->r->if->comboBox->isEnabled->g->comboBox->getBackground->setColor->else->g->UIManager->getColor->setColor->g->c->getWidth->c->getHeight->fillRect->if->comboBox->isEditable->rectangleForCurrentValue->paintCurrentValue->rectangleForArrowIcon->arrowIcon->paintIcon->if->comboBox->isEditable->border->comboBox->getBorder->in->if->border->getBorderInsets->else->new->Insets->if->comboBox->getComponentOrientation->isLeftToRight->else->comboBox->getBounds->g->UIManager->getColor->setColor->g->fillRect->g->UIManager->getColor->setColor->g->fillRect
MotifComboBoxUI#paintCurrentValue(Graphics, Rectangle, boolean)::: motif combo box i paint current value:::renderer->comboBox->getRenderer->c->d->renderer->comboBox->getSelectedItem->getListCellRendererComponent->c->comboBox->getFont->setFont->if->comboBox->isEnabled->c->comboBox->getForeground->setForeground->c->comboBox->getBackground->setBackground->else->c->UIManager->getColor->setForeground->c->UIManager->getColor->setBackground->c->getPreferredSize->currentValuePane->paintComponent
MotifComboBoxUI#rectangleForArrowIcon()::: motif combo box i rectangle for arrow icon:::b->comboBox->getBounds->border->comboBox->getBorder->in->if->border->getBorderInsets->else->new->Insets->if->comboBox->getComponentOrientation->isLeftToRight->arrowIcon->getIconWidth->else->arrowIcon->getIconHeight->arrowIcon->getIconWidth->arrowIcon->getIconHeight->return
MotifComboBoxUI#rectangleForCurrentValue()::: motif combo box i rectangle for current value:::width->comboBox->getWidth->height->comboBox->getHeight->insets->getInsets->if->comboBox->getComponentOrientation->isLeftToRight->return->iconAreaWidth->new->Rectangle->else->return->iconAreaWidth->iconAreaWidth->new->Rectangle
MotifComboBoxUI#iconAreaWidth()::: motif combo box i icon area width:::if->comboBox->isEditable->return->arrowIcon->getIconWidth->else->return->arrowIcon->getIconWidth
MotifComboBoxUI#configureEditor()::: motif combo box i configure editor:::super->configureEditor->editor->UIManager->getColor->setBackground
MotifComboBoxUI#createLayoutManager()::: motif combo box i create layout manager:::return->new->ComboBoxLayoutManager
MotifComboBoxUI#motifGetEditor()::: motif combo box i motif get editor:::return
MotifComboBoxUI.ComboBoxLayoutManager#layoutContainer(Container)::: combo box layout manager layout container:::if->motifGetEditor->cvb->rectangleForCurrentValue->motifGetEditor->setBounds
MotifComboBoxUI.MotifComboBoxArrowIcon#paintIcon(Component, Graphics, int, int)::: motif combo box arrow icon paint icon:::w->getIconWidth->h->getIconHeight->x1->y1->x2->y2->g->setColor->g->new->intArr->new->intArr->fillPolygon->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine
MotifComboBoxUI.MotifComboBoxArrowIcon#getIconWidth()::: motif combo box arrow icon get icon width:::return
MotifComboBoxUI.MotifComboBoxArrowIcon#getIconHeight()::: motif combo box arrow icon get icon height:::return
MotifComboBoxUI#createPropertyChangeListener()::: motif combo box i create property change listener:::return->new->MotifPropertyChangeListener
MotifComboBoxUI.MotifPropertyChangeListener#propertyChange(PropertyChangeEvent)::: motif property change listener property change:::super->propertyChange->propertyName->e->getPropertyName->if->if->comboBox->isEnabled->editor->motifGetEditor->if->editor->UIManager->getColor->setBackground
MotifDesktopIconUI#createUI(JComponent)::: motif desktop icon i create i:::return->new->MotifDesktopIconUI
MotifDesktopIconUI#installDefaults()::: motif desktop icon i install defaults:::super->installDefaults->UIManager->getIcon->setDefaultIcon->createIconButton->new->MotifInternalFrameTitlePane->sysMenuTitlePane->getSystemMenu->border->new->MotifBorders.FrameBorder->desktopIcon->new->BorderLayout->setLayout->iconButton->setBorder->desktopIcon->add->createIconLabel->iconLabel->setBorder->desktopIcon->add->desktopIcon->desktopIcon->getPreferredSize->setSize->desktopIcon->validate->JLayeredPane->JLayeredPane->getLayer->putLayer
MotifDesktopIconUI#installComponents()::: motif desktop icon i install components:::
MotifDesktopIconUI#uninstallComponents()::: motif desktop icon i uninstall components:::
MotifDesktopIconUI#installListeners()::: motif desktop icon i install listeners:::super->installListeners->createDesktopIconActionListener->createDesktopIconMouseListener->iconButton->addActionListener->iconButton->addMouseListener->iconLabel->addMouseListener
MotifDesktopIconUI#getDesktopIcon()::: motif desktop icon i get desktop icon:::return
MotifDesktopIconUI#setDesktopIcon(JInternalFrame.JDesktopIcon)::: motif desktop icon i set desktop icon:::
MotifDesktopIconUI#getFrame()::: motif desktop icon i get frame:::return
MotifDesktopIconUI#setFrame(JInternalFrame)::: motif desktop icon i set frame:::
MotifDesktopIconUI#showSystemMenu()::: motif desktop icon i show system menu:::systemMenu->getDesktopIcon->getHeight->show
MotifDesktopIconUI#hideSystemMenu()::: motif desktop icon i hide system menu:::systemMenu->setVisible
MotifDesktopIconUI#createIconLabel(JInternalFrame)::: motif desktop icon i create icon label:::return->new->IconLabel
MotifDesktopIconUI#createIconButton(Icon)::: motif desktop icon i create icon button:::return->new->IconButton
MotifDesktopIconUI#createDesktopIconActionListener()::: motif desktop icon i create desktop icon action listener:::return->new->DesktopIconActionListener
MotifDesktopIconUI#createDesktopIconMouseListener()::: motif desktop icon i create desktop icon mouse listener:::return->new->DesktopIconMouseListener
MotifDesktopIconUI#uninstallDefaults()::: motif desktop icon i uninstall defaults:::super->uninstallDefaults->desktopIcon->setLayout->desktopIcon->remove->desktopIcon->remove
MotifDesktopIconUI#uninstallListeners()::: motif desktop icon i uninstall listeners:::super->uninstallListeners->iconButton->removeActionListener->iconButton->removeMouseListener->sysMenuTitlePane->uninstallListeners
MotifDesktopIconUI#getMinimumSize(JComponent)::: motif desktop icon i get minimum size:::iframe->desktopIcon->getInternalFrame->w->defaultIcon->getIconWidth->h->defaultIcon->getIconHeight->border->iframe->getBorder->if->border->getBorderInsets->border->getBorderInsets->border->getBorderInsets->border->getBorderInsets->return->new->Dimension
MotifDesktopIconUI#getPreferredSize(JComponent)::: motif desktop icon i get preferred size:::return->getMinimumSize
MotifDesktopIconUI#getMaximumSize(JComponent)::: motif desktop icon i get maximum size:::return->getMinimumSize
MotifDesktopIconUI#getDefaultIcon():::Returns the default desktop icon.:::return
MotifDesktopIconUI#setDefaultIcon(Icon):::Sets the icon used as the default desktop icon.:::
MotifDesktopIconUI.IconLabel#forwardEventToParent(MouseEvent)::: icon label forward event to parent:::newEvent->getParent->e->getID->e->getWhen->e->getModifiers->e->getX->e->getY->e->getXOnScreen->e->getYOnScreen->e->getClickCount->e->isPopupTrigger->new->MouseEvent->meAccessor->AWTAccessor->getMouseEventAccessor->meAccessor->meAccessor->isCausedByTouchEvent->setCausedByTouchEvent->getParent->dispatchEvent
MotifDesktopIconUI.IconLabel#isFocusTraversable()::: icon label is focus traversable:::return
MotifDesktopIconUI.IconLabel#getMinimumSize()::: icon label get minimum size:::return->defaultIcon->getIconWidth->new->Dimension
MotifDesktopIconUI.IconLabel#getPreferredSize()::: icon label get preferred size:::title->frame->getTitle->fm->frame->getFontMetrics->w->if->SwingUtilities2->stringWidth->return->new->Dimension
MotifDesktopIconUI.IconLabel#paint(Graphics)::: icon label paint:::super->paint->maxX->getWidth->shadow->UIManager->getColor->darker->darker->g->setColor->g->getWidth->getHeight->setClip->g->drawLine->g->drawLine->g->UIManager->getColor->setColor->g->fillRect->g->setClip->y->SwingUtilities2->getFontMetrics->getDescent->g->UIManager->getColor->setColor->title->frame->getTitle->if->SwingUtilities2->drawString
MotifDesktopIconUI.IconButton#forwardEventToParent(MouseEvent)::: icon button forward event to parent:::newEvent->getParent->e->getID->e->getWhen->e->getModifiers->e->getX->e->getY->e->getXOnScreen->e->getYOnScreen->e->getClickCount->e->isPopupTrigger->new->MouseEvent->meAccessor->AWTAccessor->getMouseEventAccessor->meAccessor->meAccessor->isCausedByTouchEvent->setCausedByTouchEvent->getParent->dispatchEvent
MotifDesktopIconUI.IconButton#isFocusTraversable()::: icon button is focus traversable:::return
MotifDesktopIconUI.DesktopIconActionListener#actionPerformed(ActionEvent)::: desktop icon action listener action performed:::systemMenu->getDesktopIcon->getHeight->show
MotifDesktopIconUI.DesktopIconMouseListener#mousePressed(MouseEvent)::: desktop icon mouse listener mouse pressed:::if->e->getClickCount->try->getFrame->setIcon->catch->finally->systemMenu->setVisible->getFrame->getDesktopPane->getDesktopManager->e->getSource->endDraggingFrame
MotifDesktopPaneUI#createUI(JComponent)::: motif desktop pane i create i:::return->new->MotifDesktopPaneUI
MotifDesktopPaneUI#installDesktopManager()::: motif desktop pane i install desktop manager:::desktop->getDesktopManager->if->new->MotifDesktopManager->desktop->setDesktopManager->adjustIcons
MotifDesktopPaneUI#getInsets(JComponent)::: motif desktop pane i get insets:::return->new->Insets
MotifDesktopPaneUI.DragPane#paint(Graphics)::: drag pane paint:::g->setColor->g->getWidth->getHeight->drawRect
MotifDesktopPaneUI.MotifDesktopManager#setBoundsForFrame(JComponent, int, int, int, int)::: motif desktop manager set bounds for frame:::if->didResize->f->getWidth->f->getHeight->r->f->getBounds->f->setBounds->SwingUtilities->computeUnion->f->getParent->repaint->if->f->validate->else->r->dragPane->getBounds->dragPane->setBounds->SwingUtilities->computeUnion->dragPane->getParent->repaint
MotifDesktopPaneUI.MotifDesktopManager#beginDraggingFrame(JComponent)::: motif desktop manager begin dragging frame:::if->f->getParent->if->new->DragPane->f->getParent->layeredPaneForDragPane->setLayer->dragPane->f->getX->f->getY->f->getWidth->f->getHeight->setBounds->layeredPaneForDragPane->add
MotifDesktopPaneUI.MotifDesktopManager#dragFrame(JComponent, int, int)::: motif desktop manager drag frame:::f->getWidth->f->getHeight->setBoundsForFrame
MotifDesktopPaneUI.MotifDesktopManager#endDraggingFrame(JComponent)::: motif desktop manager end dragging frame:::if->layeredPaneForDragPane->remove->if->dragPane->getX->dragPane->getY->dragPane->getWidth->dragPane->getHeight->setBoundsForFrame->else->if->dragPane->getX->dragPane->getY->adjustBoundsForIcon
MotifDesktopPaneUI.MotifDesktopManager#beginResizingFrame(JComponent, int)::: motif desktop manager begin resizing frame:::if->f->getParent->if->new->DragPane->p->f->getParent->p->setLayer->dragPane->f->getX->f->getY->f->getWidth->f->getHeight->setBounds->p->add
MotifDesktopPaneUI.MotifDesktopManager#resizeFrame(JComponent, int, int, int, int)::: motif desktop manager resize frame:::setBoundsForFrame
MotifDesktopPaneUI.MotifDesktopManager#endResizingFrame(JComponent)::: motif desktop manager end resizing frame:::if->p->f->getParent->p->remove->dragPane->getX->dragPane->getY->dragPane->getWidth->dragPane->getHeight->setBoundsForFrame
MotifDesktopPaneUI.MotifDesktopManager#iconifyFrame(JInternalFrame)::: motif desktop manager iconify frame:::icon->f->getDesktopIcon->p->icon->getLocation->adjustBoundsForIcon->super->iconifyFrame
MotifDesktopPaneUI.MotifDesktopManager#adjustIcons(JDesktopPane):::Change positions of icons in the desktop pane so that they do not overlap:::icon->new->JInternalFrame->new->JInternalFrame.JDesktopIcon->iconSize->icon->getPreferredSize->frames->desktop->getAllFrames->for->i
MotifDesktopPaneUI.MotifDesktopManager#adjustBoundsForIcon(JInternalFrame.JDesktopIcon, int, int):::Change positions of icon so that it doesn't overlap other icons.:::c->icon->getDesktopPane->maxy->c->getHeight->w->h->c->repaint->lx->ygap->ly->dx->dy->while->getIconAt->if->c->getWidth->return->if->icon->getParent->setBoundsForFrame->else->icon->setLocation
MotifDesktopPaneUI.MotifDesktopManager#getIconAt(JDesktopPane, JInternalFrame.JDesktopIcon, int, int)::: motif desktop manager get icon at:::currentIcon->components->desktop->getComponents->for->i->return
MotifEditorPaneUI#createUI(JComponent):::Creates a UI for the JTextPane.:::return->new->MotifEditorPaneUI
MotifEditorPaneUI#createCaret():::Creates the object to use for a caret:::return->MotifTextUI->createCaret
MotifFileChooserUI#populateFileNameLabel()::: motif file chooser i populate file name label:::if->getFileChooser->getFileSelectionMode->fileNameLabel->setText->fileNameLabel->setDisplayedMnemonic->else->fileNameLabel->setText->fileNameLabel->setDisplayedMnemonic
MotifFileChooserUI#fileNameString(File)::: motif file chooser i file name string:::if->return->else->fc->getFileChooser->if->fc->isDirectorySelectionEnabled->fc->isFileSelectionEnabled->return->file->getPath->else->return->file->getName
MotifFileChooserUI#fileNameString(File[])::: motif file chooser i file name string:::sb->new->StringBuilder->for->i->return->sb->toString
MotifFileChooserUI#getFileName()::: motif file chooser i get file name:::if->return->filenameTextField->getText->else->return
MotifFileChooserUI#setFileName(String)::: motif file chooser i set file name:::if->filenameTextField->setText
MotifFileChooserUI#getDirectoryName()::: motif file chooser i get directory name:::return->pathField->getText
MotifFileChooserUI#setDirectoryName(String)::: motif file chooser i set directory name:::pathField->setText
MotifFileChooserUI#ensureFileIsVisible(JFileChooser, File)::: motif file chooser i ensure file is visible:::
MotifFileChooserUI#rescanCurrentDirectory(JFileChooser)::: motif file chooser i rescan current directory:::getModel->validateFileCache
MotifFileChooserUI#createPropertyChangeListener(JFileChooser)::: motif file chooser i create property change listener:::return->new->PropertyChangeListener
MotifFileChooserUI#createUI(JComponent)::: motif file chooser i create i:::return->new->MotifFileChooserUI
MotifFileChooserUI#installUI(JComponent)::: motif file chooser i install i:::super->installUI
MotifFileChooserUI#uninstallUI(JComponent)::: motif file chooser i uninstall i:::c->removePropertyChangeListener->approveButton->getApproveSelectionAction->removeActionListener->filenameTextField->getApproveSelectionAction->removeActionListener->super->uninstallUI
MotifFileChooserUI#installComponents(JFileChooser)::: motif file chooser i install components:::fc->new->BorderLayout->setLayout->fc->setAlignmentX->interior->new->JPanel->interior->setInheritsPopupMenu->align->interior->new->BoxLayout->setLayout->fc->add->l->new->JLabel->l->setDisplayedMnemonic->align->interior->add->currentDirectory->fc->getCurrentDirectory->curDirName->if->currentDirectory->getPath->tmp1->new->JTextField->pathField->setInheritsPopupMenu->l->setLabelFor->align->pathField->getUpdateAction->addActionListener->interior->add->interior->Box->createRigidArea->add->centerPanel->new->JPanel->centerPanel->new->BoxLayout->setLayout->align->leftPanel->new->JPanel->leftPanel->new->BoxLayout->setLayout->align->new->JLabel->l->setDisplayedMnemonic->align->leftPanel->add->tmp2->new->JComboBox<FileFilter>->filterComboBox->setInheritsPopupMenu->l->setLabelFor->createFilterComboBoxModel->filterComboBox->setModel->filterComboBox->createFilterComboBoxRenderer->setRenderer->fc->addPropertyChangeListener->align->leftPanel->add->new->JLabel->l->setDisplayedMnemonic->align->leftPanel->add->sp->createDirectoryList->sp->getVerticalScrollBar->setFocusable->sp->getHorizontalScrollBar->setFocusable->sp->setInheritsPopupMenu->l->sp->getViewport->getView->setLabelFor->leftPanel->add->leftPanel->setInheritsPopupMenu->rightPanel->new->JPanel->align->rightPanel->new->BoxLayout->setLayout->rightPanel->setInheritsPopupMenu->new->JLabel->l->setDisplayedMnemonic->align->rightPanel->add->createFilesList->l->sp->getViewport->getView->setLabelFor->rightPanel->add->sp->setInheritsPopupMenu->centerPanel->add->centerPanel->Box->createRigidArea->add->centerPanel->add->centerPanel->setInheritsPopupMenu->accessoryPanel->getAccessoryPanel->accessory->fc->getAccessory->if->if->accessoryPanel->setPreferredSize->accessoryPanel->setMaximumSize->else->getAccessoryPanel->add->accessoryPanel->setPreferredSize->accessoryPanel->setMaximumSize->align->centerPanel->add->accessoryPanel->setInheritsPopupMenu->interior->add->interior->Box->createRigidArea->add->new->JLabel->populateFileNameLabel->align->interior->add->tmp3->new->JTextField->filenameTextField->setInheritsPopupMenu->fileNameLabel->setLabelFor->filenameTextField->getApproveSelectionAction->addActionListener->align->filenameTextField->setAlignmentX->interior->add->getBottomPanel->bottomPanel->new->JSeparator->add->buttonPanel->new->JPanel->align->buttonPanel->new->BoxLayout->setLayout->buttonPanel->Box->createGlue->add->tmp4->getApproveButtonText->new->JButton->approveButton->getApproveButtonMnemonic->setMnemonic->approveButton->getApproveButtonToolTipText->setToolTipText->approveButton->setInheritsPopupMenu->align->approveButton->setMargin->approveButton->getApproveSelectionAction->addActionListener->buttonPanel->add->buttonPanel->Box->createGlue->add->updateButton->new->JButton->updateButton->setMnemonic->updateButton->setToolTipText->updateButton->setInheritsPopupMenu->align->updateButton->setMargin->updateButton->getUpdateAction->addActionListener->buttonPanel->add->buttonPanel->Box->createGlue->add->cancelButton->new->JButton->cancelButton->setMnemonic->cancelButton->setToolTipText->cancelButton->setInheritsPopupMenu->align->cancelButton->setMargin->cancelButton->getCancelSelectionAction->addActionListener->buttonPanel->add->buttonPanel->Box->createGlue->add->helpButton->new->JButton->helpButton->setMnemonic->helpButton->setToolTipText->align->helpButton->setMargin->helpButton->setEnabled->helpButton->setInheritsPopupMenu->buttonPanel->add->buttonPanel->Box->createGlue->add->buttonPanel->setInheritsPopupMenu->bottomPanel->add->bottomPanel->setInheritsPopupMenu->if->fc->getControlButtonsAreShown->fc->add
MotifFileChooserUI#getBottomPanel()::: motif file chooser i get bottom panel:::if->new->BorderLayout->new->JPanel->return
MotifFileChooserUI#doControlButtonsChanged(PropertyChangeEvent)::: motif file chooser i do control buttons changed:::if->getFileChooser->getControlButtonsAreShown->getFileChooser->add->else->getFileChooser->getBottomPanel->remove
MotifFileChooserUI#uninstallComponents(JFileChooser)::: motif file chooser i uninstall components:::fc->removeAll->if->fc->removePropertyChangeListener
MotifFileChooserUI#installStrings(JFileChooser)::: motif file chooser i install strings:::super->installStrings->l->fc->getLocale->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic
MotifFileChooserUI#getMnemonic(String, Locale)::: motif file chooser i get mnemonic:::return->SwingUtilities2->getUIDefaultsInt
MotifFileChooserUI#installIcons(JFileChooser)::: motif file chooser i install icons:::
MotifFileChooserUI#uninstallIcons(JFileChooser)::: motif file chooser i uninstall icons:::
MotifFileChooserUI#createFilesList()::: motif file chooser i create files list:::new->JList<File>->if->getFileChooser->isMultiSelectionEnabled->fileList->setSelectionMode->else->fileList->setSelectionMode->fileList->new->MotifFileListModel->setModel->fileList->getSelectionModel->removeSelectionInterval->fileList->new->FileCellRenderer->setCellRenderer->fileList->getFileChooser->createListSelectionListener->addListSelectionListener->fileList->getFileChooser->createDoubleClickListener->addMouseListener->fileList->new->MouseAdapter->addMouseListener->align->scrollpane->new->JScrollPane->scrollpane->setPreferredSize->scrollpane->setMaximumSize->align->fileList->setInheritsPopupMenu->scrollpane->setInheritsPopupMenu->return
MotifFileChooserUI#createDirectoryList()::: motif file chooser i create directory list:::new->JList<File>->align->directoryList->new->DirectoryCellRenderer->setCellRenderer->directoryList->new->MotifDirectoryListModel->setModel->directoryList->getSelectionModel->removeSelectionInterval->directoryList->getFileChooser->createDoubleClickListener->addMouseListener->directoryList->getFileChooser->createListSelectionListener->addListSelectionListener->directoryList->setInheritsPopupMenu->scrollpane->new->JScrollPane->scrollpane->setMaximumSize->scrollpane->setPreferredSize->scrollpane->setInheritsPopupMenu->align->return
MotifFileChooserUI#getPreferredSize(JComponent)::: motif file chooser i get preferred size:::prefSize->getFileChooser->getAccessory->d->c->getLayout->preferredLayoutSize->if->return->new->Dimension->else->return
MotifFileChooserUI#getMinimumSize(JComponent)::: motif file chooser i get minimum size:::return->new->Dimension
MotifFileChooserUI#getMaximumSize(JComponent)::: motif file chooser i get maximum size:::return->new->Dimension
MotifFileChooserUI#align(JComponent)::: motif file chooser i align:::c->setAlignmentX->c->setAlignmentY
MotifFileChooserUI.FileCellRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: file cell renderer get list cell renderer component:::super->getListCellRendererComponent->getFileChooser->getName->setText->setInheritsPopupMenu->return
MotifFileChooserUI.DirectoryCellRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: directory cell renderer get list cell renderer component:::super->getListCellRendererComponent->getFileChooser->getName->setText->setInheritsPopupMenu->return
MotifFileChooserUI.MotifDirectoryListModel#getSize()::: motif directory list model get size:::return->getModel->getDirectories->size
MotifFileChooserUI.MotifDirectoryListModel#getElementAt(int)::: motif directory list model get element at:::return->getModel->getDirectories->elementAt
MotifFileChooserUI.MotifDirectoryListModel#intervalAdded(ListDataEvent)::: motif directory list model interval added:::e->getIndex0->e->getIndex1->fireIntervalAdded
MotifFileChooserUI.MotifDirectoryListModel#intervalRemoved(ListDataEvent)::: motif directory list model interval removed:::e->getIndex0->e->getIndex1->fireIntervalRemoved
MotifFileChooserUI.MotifDirectoryListModel#fireContentsChanged()::: motif directory list model fire contents changed:::getModel->getDirectories->size->fireContentsChanged
MotifFileChooserUI.MotifDirectoryListModel#contentsChanged(ListDataEvent)::: motif directory list model contents changed:::fireContentsChanged
MotifFileChooserUI.MotifFileListModel#getSize()::: motif file list model get size:::return->getModel->getFiles->size
MotifFileChooserUI.MotifFileListModel#contains(Object)::: motif file list model contains:::return->getModel->getFiles->contains
MotifFileChooserUI.MotifFileListModel#indexOf(Object)::: motif file list model index of:::return->getModel->getFiles->indexOf
MotifFileChooserUI.MotifFileListModel#getElementAt(int)::: motif file list model get element at:::return->getModel->getFiles->elementAt
MotifFileChooserUI.MotifFileListModel#intervalAdded(ListDataEvent)::: motif file list model interval added:::e->getIndex0->e->getIndex1->fireIntervalAdded
MotifFileChooserUI.MotifFileListModel#intervalRemoved(ListDataEvent)::: motif file list model interval removed:::e->getIndex0->e->getIndex1->fireIntervalRemoved
MotifFileChooserUI.MotifFileListModel#fireContentsChanged()::: motif file list model fire contents changed:::getModel->getFiles->size->fireContentsChanged
MotifFileChooserUI.MotifFileListModel#contentsChanged(ListDataEvent)::: motif file list model contents changed:::fireContentsChanged
MotifFileChooserUI#createFilterComboBoxModel()::: motif file chooser i create filter combo box model:::return->new->FilterComboBoxModel
MotifFileChooserUI#createFilterComboBoxRenderer()::: motif file chooser i create filter combo box renderer:::return->new->FilterComboBoxRenderer
MotifFileChooserUI.FilterComboBoxRenderer#getListCellRendererComponent(JList, Object, int, boolean, boolean)::: filter combo box renderer get list cell renderer component:::super->getListCellRendererComponent->if->getDescription->setText->return
MotifFileChooserUI.FilterComboBoxModel#propertyChange(PropertyChangeEvent)::: filter combo box model property change:::prop->e->getPropertyName->if->prop->equals->e->getNewValue->fireContentsChanged->else->if->prop->equals->fireContentsChanged
MotifFileChooserUI.FilterComboBoxModel#setSelectedItem(Object)::: filter combo box model set selected item:::if->getFileChooser->setFileFilter->fireContentsChanged
MotifFileChooserUI.FilterComboBoxModel#getSelectedItem()::: filter combo box model get selected item:::currentFilter->getFileChooser->getFileFilter->found->if->foreach->if->if->getFileChooser->addChoosableFileFilter->return->getFileChooser->getFileFilter
MotifFileChooserUI.FilterComboBoxModel#getSize()::: filter combo box model get size:::if->return->else->return
MotifFileChooserUI.FilterComboBoxModel#getElementAt(int)::: filter combo box model get element at:::if->getSize->return->getFileChooser->getFileFilter->if->return->else->return
MotifFileChooserUI#getApproveButton(JFileChooser)::: motif file chooser i get approve button:::return
MotifGraphicsUtils#drawGroove(Graphics, int, int, int, int, Color, Color)::: motif graphics utils draw groove:::oldColor->g->getColor->g->translate->g->setColor->g->drawRect->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->translate->g->setColor
MotifGraphicsUtils#drawStringInRect(JComponent, Graphics, String, int, int, int, int, int)::: motif graphics utils draw string in rect:::fontMetrics->drawWidth->startX->startY->delta->if->g->getFont->return->SwingUtilities2->getFontMetrics->if->return->if->SwingUtilities2->stringWidth->if->else->if->SwingUtilities2->stringWidth->if->else->fontMetrics->getAscent->fontMetrics->getDescent->if->fontMetrics->getDescent->SwingUtilities2->drawString
MotifIconFactory#getMenuItemCheckIcon()::: motif icon factory get menu item check icon:::return
MotifIconFactory#getMenuItemArrowIcon()::: motif icon factory get menu item arrow icon:::if->new->MenuItemArrowIcon->return
MotifIconFactory#getMenuArrowIcon()::: motif icon factory get menu arrow icon:::if->new->MenuArrowIcon->return
MotifIconFactory#getCheckBoxIcon()::: motif icon factory get check box icon:::if->new->CheckBoxIcon->return
MotifIconFactory#getRadioButtonIcon()::: motif icon factory get radio button icon:::if->new->RadioButtonIcon->return
MotifIconFactory.CheckBoxIcon#paintIcon(Component, Graphics, int, int)::: check box icon paint icon:::b->model->b->getModel->flat->if->isBorderPaintedFlat->isPressed->model->isPressed->isArmed->model->isArmed->isEnabled->model->isEnabled->isSelected->model->isSelected->checkToggleIn->uncheckToggleOut->checkIn->if->g->setColor->g->drawRect->if->g->setColor->g->fillRect->if->drawCheckBezel->else->if->drawCheckBezel->else->if->drawCheckBezel->else->if->drawCheckBezelOut
MotifIconFactory.CheckBoxIcon#getIconWidth()::: check box icon get icon width:::return
MotifIconFactory.CheckBoxIcon#getIconHeight()::: check box icon get icon height:::return
MotifIconFactory.CheckBoxIcon#drawCheckBezelOut(Graphics, int, int, int)::: check box icon draw check bezel out:::controlShadow->UIManager->getColor->w->h->oldColor->g->getColor->g->translate->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->translate->g->setColor
MotifIconFactory.CheckBoxIcon#drawCheckBezel(Graphics, int, int, int, boolean, boolean, boolean, boolean)::: check box icon draw check bezel:::oldColor->g->getColor->g->translate->if->if->g->setColor->g->fillRect->g->setColor->else->g->setColor->g->fillRect->g->setColor->g->drawLine->if->g->drawLine->g->drawLine->if->g->setColor->else->g->setColor->g->drawLine->g->drawLine->if->g->setColor->else->g->setColor->g->drawLine->if->g->setColor->else->g->setColor->g->drawLine->g->drawLine->if->g->setColor->xa->ya->new->intArr->g->fillPolygon->g->translate->g->setColor
MotifIconFactory.RadioButtonIcon#paintIcon(Component, Graphics, int, int)::: radio button icon paint icon:::b->model->b->getModel->w->getIconWidth->h->getIconHeight->isPressed->model->isPressed->isArmed->model->isArmed->isEnabled->model->isEnabled->isSelected->model->isSelected->checkIn->if->g->setColor->g->drawArc->g->setColor->g->drawArc->g->setColor->g->fillOval->else->g->setColor->g->drawArc->g->setColor->g->drawArc
MotifIconFactory.RadioButtonIcon#getIconWidth()::: radio button icon get icon width:::return
MotifIconFactory.RadioButtonIcon#getIconHeight()::: radio button icon get icon height:::return
MotifIconFactory.MenuItemCheckIcon#paintIcon(Component, Graphics, int, int)::: menu item check icon paint icon:::
MotifIconFactory.MenuItemCheckIcon#getIconWidth()::: menu item check icon get icon width:::return
MotifIconFactory.MenuItemCheckIcon#getIconHeight()::: menu item check icon get icon height:::return
MotifIconFactory.MenuItemArrowIcon#paintIcon(Component, Graphics, int, int)::: menu item arrow icon paint icon:::
MotifIconFactory.MenuItemArrowIcon#getIconWidth()::: menu item arrow icon get icon width:::return
MotifIconFactory.MenuItemArrowIcon#getIconHeight()::: menu item arrow icon get icon height:::return
MotifIconFactory.MenuArrowIcon#paintIcon(Component, Graphics, int, int)::: menu arrow icon paint icon:::b->model->b->getModel->w->getIconWidth->h->getIconHeight->oldColor->g->getColor->if->model->isSelected->if->c->getComponentOrientation->isLeftToRight->g->setColor->g->fillRect->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->fillRect->g->fillRect->g->fillRect->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->else->g->setColor->g->fillRect->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->fillRect->g->fillRect->g->fillRect->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->else->if->c->getComponentOrientation->isLeftToRight->g->setColor->g->drawLine->g->drawLine->g->fillRect->g->fillRect->g->fillRect->g->setColor->g->drawLine->g->fillRect->g->fillRect->g->fillRect->g->setColor->else->g->setColor->g->fillRect->g->fillRect->g->fillRect->g->drawLine->g->setColor->g->fillRect->g->fillRect->g->fillRect->g->drawLine->g->drawLine->g->setColor
MotifIconFactory.MenuArrowIcon#getIconWidth()::: menu arrow icon get icon width:::return
MotifIconFactory.MenuArrowIcon#getIconHeight()::: menu arrow icon get icon height:::return
MotifInternalFrameTitlePane#installDefaults()::: motif internal frame title pane install defaults:::UIManager->getFont->setFont->new->Dimension->setPreferredSize
MotifInternalFrameTitlePane#uninstallListeners()::: motif internal frame title pane uninstall listeners:::super->uninstallListeners
MotifInternalFrameTitlePane#createPropertyChangeListener()::: motif internal frame title pane create property change listener:::return
MotifInternalFrameTitlePane#createLayout()::: motif internal frame title pane create layout:::return
MotifInternalFrameTitlePane#getSystemMenu()::: motif internal frame title pane get system menu:::return
MotifInternalFrameTitlePane#assembleSystemMenu()::: motif internal frame title pane assemble system menu:::new->JPopupMenu->mi->systemMenu->add->mi->getButtonMnemonic->setMnemonic->systemMenu->add->mi->getButtonMnemonic->setMnemonic->systemMenu->add->mi->getButtonMnemonic->setMnemonic->systemMenu->add->mi->getButtonMnemonic->setMnemonic->systemMenu->add->mi->getButtonMnemonic->setMnemonic->systemMenu->new->JSeparator->add->systemMenu->add->mi->getButtonMnemonic->setMnemonic->new->SystemButton->systemButton->new->ActionListener->addActionListener->systemButton->new->MouseAdapter->addMouseListener
MotifInternalFrameTitlePane#getButtonMnemonic(String)::: motif internal frame title pane get button mnemonic:::try->return->Integer->UIManager->getString->parseInt->catch->return->finally
MotifInternalFrameTitlePane#createButtons()::: motif internal frame title pane create buttons:::new->MinimizeButton->minimizeButton->addActionListener->new->MaximizeButton->maximizeButton->addActionListener
MotifInternalFrameTitlePane#addSubComponents()::: motif internal frame title pane add sub components:::frame->getTitle->new->Title->title->getFont->setFont->add->add->add->add
MotifInternalFrameTitlePane#paintComponent(Graphics)::: motif internal frame title pane paint component:::
MotifInternalFrameTitlePane#setColors(Color, Color, Color)::: motif internal frame title pane set colors:::
MotifInternalFrameTitlePane#actionPerformed(ActionEvent)::: motif internal frame title pane action performed:::
MotifInternalFrameTitlePane#propertyChange(PropertyChangeEvent)::: motif internal frame title pane property change:::prop->evt->getPropertyName->f->evt->getSource->value->if->equals->repaint->else->if->prop->equals->if->evt->getNewValue->add->else->remove->revalidate->repaint->else->if->prop->equals->if->evt->getNewValue->add->else->remove->revalidate->repaint->else->if->prop->equals->repaint->enableActions
MotifInternalFrameTitlePane#addLayoutComponent(String, Component)::: motif internal frame title pane add layout component:::
MotifInternalFrameTitlePane#removeLayoutComponent(Component)::: motif internal frame title pane remove layout component:::
MotifInternalFrameTitlePane#preferredLayoutSize(Container)::: motif internal frame title pane preferred layout size:::return->minimumLayoutSize
MotifInternalFrameTitlePane#minimumLayoutSize(Container)::: motif internal frame title pane minimum layout size:::return->new->Dimension
MotifInternalFrameTitlePane#layoutContainer(Container)::: motif internal frame title pane layout container:::w->getWidth->systemButton->setBounds->x->if->frame->isMaximizable->maximizeButton->setBounds->else->if->maximizeButton->getParent->maximizeButton->getParent->remove->if->frame->isIconifiable->minimizeButton->setBounds->else->if->minimizeButton->getParent->minimizeButton->getParent->remove->title->setBounds
MotifInternalFrameTitlePane#showSystemMenu()::: motif internal frame title pane show system menu:::systemMenu->show
MotifInternalFrameTitlePane#hideSystemMenu()::: motif internal frame title pane hide system menu:::systemMenu->setVisible
MotifInternalFrameTitlePane.FrameButton#isFocusTraversable()::: frame button is focus traversable:::return
MotifInternalFrameTitlePane.FrameButton#requestFocus()::: frame button request focus:::
MotifInternalFrameTitlePane.FrameButton#getMinimumSize()::: frame button get minimum size:::return
MotifInternalFrameTitlePane.FrameButton#getPreferredSize()::: frame button get preferred size:::return
MotifInternalFrameTitlePane.FrameButton#paintComponent(Graphics)::: frame button paint component:::d->getSize->maxX->maxY->g->setColor->g->fillRect->pressed->getModel->isPressed->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine
MotifInternalFrameTitlePane.MinimizeButton#paintComponent(Graphics)::: minimize button paint component:::super->paintComponent->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine
MotifInternalFrameTitlePane.MaximizeButton#paintComponent(Graphics)::: maximize button paint component:::super->paintComponent->max->isMaxed->frame->isMaximum->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine
MotifInternalFrameTitlePane.SystemButton#isFocusTraversable()::: system button is focus traversable:::return
MotifInternalFrameTitlePane.SystemButton#requestFocus()::: system button request focus:::
MotifInternalFrameTitlePane.SystemButton#paintComponent(Graphics)::: system button paint component:::super->paintComponent->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine
MotifInternalFrameTitlePane.Title#forwardEventToParent(MouseEvent)::: title forward event to parent:::newEvent->getParent->e->getID->e->getWhen->e->getModifiers->e->getX->e->getY->e->getXOnScreen->e->getYOnScreen->e->getClickCount->e->isPopupTrigger->new->MouseEvent->meAccessor->AWTAccessor->getMouseEventAccessor->meAccessor->meAccessor->isCausedByTouchEvent->setCausedByTouchEvent->getParent->dispatchEvent
MotifInternalFrameTitlePane.Title#paintComponent(Graphics)::: title paint component:::super->paintComponent->if->frame->isSelected->g->UIManager->getColor->setColor->else->g->UIManager->getColor->setColor->d->getSize->frameTitle->frame->getTitle->if->MotifGraphicsUtils->drawStringInRect
MotifInternalFrameUI#createUI(JComponent)::: motif internal frame i create i:::return->new->MotifInternalFrameUI
MotifInternalFrameUI#installUI(JComponent)::: motif internal frame i install i:::super->installUI->setColors
MotifInternalFrameUI#installDefaults()::: motif internal frame i install defaults:::frameBorder->frame->getBorder->frame->createLayoutManager->setLayout->if->frame->new->MotifBorders.InternalFrameBorder->setBorder
MotifInternalFrameUI#installKeyboardActions()::: motif internal frame i install keyboard actions:::super->installKeyboardActions->KeyStroke->getKeyStroke
MotifInternalFrameUI#uninstallDefaults()::: motif internal frame i uninstall defaults:::LookAndFeel->uninstallBorder->frame->setLayout
MotifInternalFrameUI#getFrame()::: motif internal frame i get frame:::return
MotifInternalFrameUI#createNorthPane(JInternalFrame)::: motif internal frame i create north pane:::new->MotifInternalFrameTitlePane->return
MotifInternalFrameUI#getMaximumSize(JComponent)::: motif internal frame i get maximum size:::return->Toolkit->getDefaultToolkit->getScreenSize
MotifInternalFrameUI#uninstallKeyboardActions()::: motif internal frame i uninstall keyboard actions:::super->uninstallKeyboardActions->if->isKeyBindingRegistered->di->frame->getDesktopIcon->SwingUtilities->replaceUIActionMap->SwingUtilities->replaceUIInputMap
MotifInternalFrameUI#setupMenuOpenKey()::: motif internal frame i setup menu open key:::super->setupMenuOpenKey->map->SwingUtilities->getUIActionMap->if->map->new->AbstractAction->put
MotifInternalFrameUI#setupMenuCloseKey()::: motif internal frame i setup menu close key:::map->SwingUtilities->getUIActionMap->if->map->new->AbstractAction->put->di->frame->getDesktopIcon->diInputMap->SwingUtilities->getUIInputMap->if->bindings->UIManager->get->if->LookAndFeel->makeComponentInputMap->SwingUtilities->replaceUIInputMap->diActionMap->SwingUtilities->getUIActionMap->if->new->ActionMapUIResource->diActionMap->new->AbstractAction->put->SwingUtilities->replaceUIActionMap
MotifInternalFrameUI#activateFrame(JInternalFrame):::This method is called when the frame becomes selected.:::super->activateFrame->setColors
MotifInternalFrameUI#deactivateFrame(JInternalFrame):::This method is called when the frame is no longer selected.:::setColors->super->deactivateFrame
MotifInternalFrameUI#setColors(JInternalFrame)::: motif internal frame i set colors:::if->frame->isSelected->UIManager->getColor->else->UIManager->getColor->color->brighter->color->darker->darker->titlePane->setColors
MotifLabelUI#createUI(JComponent)::: motif label i create i:::appContext->AppContext->getAppContext->motifLabelUI->appContext->get->if->new->MotifLabelUI->appContext->put->return
MotifLookAndFeel#getName()::: motif look and feel get name:::return
MotifLookAndFeel#getID()::: motif look and feel get d:::return
MotifLookAndFeel#getDescription()::: motif look and feel get description:::return
MotifLookAndFeel#isNativeLookAndFeel()::: motif look and feel is native look and feel:::return->OSInfo->getOSType
MotifLookAndFeel#isSupportedLookAndFeel()::: motif look and feel is supported look and feel:::return
MotifLookAndFeel#initSystemColorDefaults(UIDefaults):::Load the SystemColors into the defaults table:::defaultSystemColors->loadSystemColors
MotifLookAndFeel#initClassDefaults(UIDefaults)::: motif look and feel init class defaults:::super->initClassDefaults->motifPackageName->uiDefaults->table->putDefaults
MotifLookAndFeel#initResourceBundle(UIDefaults):::Initialize the defaults table with the name of the ResourceBundle used for getting localized defaults.:::SwingAccessor->getUIDefaultsAccessor->addInternalBundle
MotifLookAndFeel#initComponentDefaults(UIDefaults)::: motif look and feel init component defaults:::super->initComponentDefaults->initResourceBundle->dialogPlain12->new->FontUIResource->serifPlain12->new->FontUIResource->sansSerifPlain12->new->FontUIResource->monospacedPlain12->new->FontUIResource->red->new->ColorUIResource->black->new->ColorUIResource->white->new->ColorUIResource->lightGray->new->ColorUIResource->controlDarker->new->ColorUIResource->scrollBarTrack->menuItemPressedBackground->new->ColorUIResource->menuItemPressedForeground->new->ColorUIResource->loweredBevelBorder->table->getColor->table->getColor->new->MotifBorders.BevelBorder->raisedBevelBorder->table->getColor->table->getColor->new->MotifBorders.BevelBorder->marginBorder->new->BasicBorders.MarginBorder->focusBorder->table->getColor->table->getColor->new->MotifBorders.FocusBorder->focusBevelBorder->new->BorderUIResource.CompoundBorderUIResource->comboBoxBorder->new->BorderUIResource.CompoundBorderUIResource->buttonBorder->table->getColor->table->getColor->table->getColor->table->getColor->new->MotifBorders.ButtonBorder->new->BorderUIResource.CompoundBorderUIResource->toggleButtonBorder->table->getColor->table->getColor->table->getColor->table->getColor->new->MotifBorders.ToggleButtonBorder->new->BorderUIResource.CompoundBorderUIResource->textFieldBorder->new->BorderUIResource.CompoundBorderUIResource->popupMenuBorder->table->getFont->table->getColor->table->getColor->table->getColor->table->getColor->new->MotifBorders.MotifPopupMenuBorder->new->BorderUIResource.CompoundBorderUIResource->menuItemCheckIcon->new->UIDefaults.LazyValue->menuItemArrowIcon->new->UIDefaults.LazyValue->menuArrowIcon->new->UIDefaults.LazyValue->checkBoxIcon->new->UIDefaults.LazyValue->radioButtonIcon->new->UIDefaults.LazyValue->unselectedTabBackground->new->UIDefaults.LazyValue->unselectedTabForeground->new->UIDefaults.LazyValue->unselectedTabShadow->new->UIDefaults.LazyValue->unselectedTabHighlight->new->UIDefaults.LazyValue->fieldInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->passwordInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->multilineInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->treeOpenIcon->SwingUtilities2->getClass->makeIcon->treeClosedIcon->SwingUtilities2->getClass->makeIcon->treeLeafIcon->new->UIDefaults.LazyValue->treeExpandedIcon->new->UIDefaults.LazyValue->treeCollapsedIcon->new->UIDefaults.LazyValue->menuBarBorder->table->getColor->table->getColor->table->getColor->table->getColor->new->MotifBorders.MenuBarBorder->menuMarginBorder->new->BorderUIResource.CompoundBorderUIResource->focusCellHighlightBorder->table->getColor->new->BorderUIResource.LineBorderUIResource->sliderFocusInsets->new->InsetsUIResource->tabbedPaneTabInsets->new->InsetsUIResource->tabbedPaneTabPadInsets->new->InsetsUIResource->tabbedPaneTabAreaInsets->new->InsetsUIResource->tabbedPaneContentBorderInsets->new->InsetsUIResource->optionPaneBorder->new->BorderUIResource.EmptyBorderUIResource->optionPaneButtonAreaBorder->new->BorderUIResource.EmptyBorderUIResource->optionPaneMessageAreaBorder->new->BorderUIResource.EmptyBorderUIResource->metaMask->defaults->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->table->get->table->get->table->get->Integer->valueOf->new->InsetsUIResource->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->new->InsetsUIResource->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->new->InsetsUIResource->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->new->intArr->SwingUtilities2->getSystemMnemonicKeyMask->SwingUtilities2->SwingUtilities2->getSystemMnemonicKeyMask->setAltGraphMask->table->get->table->get->new->ObjectArr->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->SwingUtilities2->getClass->makeIcon->new->ObjectArr->table->get->table->get->new->ObjectArr->table->get->table->get->table->get->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->table->get->Integer->valueOf->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->table->get->table->get->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->Integer->valueOf->table->get->table->get->table->get->table->get->table->get->Integer->valueOf->table->get->table->get->table->get->table->get->table->get->Integer->valueOf->table->get->table->get->table->get->table->get->table->get->Integer->valueOf->table->get->table->get->table->get->Integer->valueOf->table->get->table->get->table->get->new->ObjectArr->new->UIDefaults.LazyInputMap->table->get->table->get->new->ObjectArr->SwingUtilities2->getClass->makeIcon->SwingUtilities2->getClass->makeIcon->SwingUtilities2->getClass->makeIcon->SwingUtilities2->getClass->makeIcon->new->ObjectArr->new->ObjectArr->table->putDefaults
MotifMenuBarUI#createUI(JComponent)::: motif menu bar i create i:::return->new->MotifMenuBarUI
MotifMenuItemUI#createUI(JComponent)::: motif menu item i create i:::return->new->MotifMenuItemUI
MotifMenuItemUI#installListeners()::: motif menu item i install listeners:::super->installListeners->createChangeListener->menuItem->addChangeListener
MotifMenuItemUI#uninstallListeners()::: motif menu item i uninstall listeners:::super->uninstallListeners->menuItem->removeChangeListener
MotifMenuItemUI#createChangeListener(JComponent)::: motif menu item i create change listener:::return->new->ChangeHandler
MotifMenuItemUI#createMouseInputListener(JComponent)::: motif menu item i create mouse input listener:::return->new->MouseInputHandler
MotifMenuItemUI.ChangeHandler#stateChanged(ChangeEvent)::: change handler state changed:::c->e->getSource->LookAndFeel->Boolean->c->isArmed->c->isSelected->valueOf->installProperty
MotifMenuItemUI.MouseInputHandler#mouseClicked(MouseEvent)::: mouse input handler mouse clicked:::
MotifMenuItemUI.MouseInputHandler#mousePressed(MouseEvent)::: mouse input handler mouse pressed:::manager->MenuSelectionManager->defaultManager->manager->getPath->setSelectedPath
MotifMenuItemUI.MouseInputHandler#mouseReleased(MouseEvent)::: mouse input handler mouse released:::manager->MenuSelectionManager->defaultManager->menuItem->e->getComponent->p->e->getPoint->if->menuItem->getWidth->menuItem->getHeight->manager->clearSelectedPath->menuItem->doClick->else->manager->processMouseEvent
MotifMenuItemUI.MouseInputHandler#mouseEntered(MouseEvent)::: mouse input handler mouse entered:::
MotifMenuItemUI.MouseInputHandler#mouseExited(MouseEvent)::: mouse input handler mouse exited:::
MotifMenuItemUI.MouseInputHandler#mouseDragged(MouseEvent)::: mouse input handler mouse dragged:::MenuSelectionManager->defaultManager->processMouseEvent
MotifMenuItemUI.MouseInputHandler#mouseMoved(MouseEvent)::: mouse input handler mouse moved:::
MotifMenuMouseListener#mousePressed(MouseEvent)::: motif menu mouse listener mouse pressed:::MenuSelectionManager->defaultManager->processMouseEvent
MotifMenuMouseListener#mouseReleased(MouseEvent)::: motif menu mouse listener mouse released:::MenuSelectionManager->defaultManager->processMouseEvent
MotifMenuMouseListener#mouseEntered(MouseEvent)::: motif menu mouse listener mouse entered:::MenuSelectionManager->defaultManager->processMouseEvent
MotifMenuMouseListener#mouseExited(MouseEvent)::: motif menu mouse listener mouse exited:::MenuSelectionManager->defaultManager->processMouseEvent
MotifMenuMouseMotionListener#mouseDragged(MouseEvent)::: motif menu mouse motion listener mouse dragged:::MenuSelectionManager->defaultManager->processMouseEvent
MotifMenuMouseMotionListener#mouseMoved(MouseEvent)::: motif menu mouse motion listener mouse moved:::MenuSelectionManager->defaultManager->processMouseEvent
MotifMenuUI#createUI(JComponent)::: motif menu i create i:::return->new->MotifMenuUI
MotifMenuUI#createChangeListener(JComponent)::: motif menu i create change listener:::return->new->MotifChangeHandler
MotifMenuUI#popupIsOpen(JMenu, MenuElement[])::: motif menu i popup is open:::i->pm->m->getPopupMenu->for->return
MotifMenuUI#createMouseInputListener(JComponent)::: motif menu i create mouse input listener:::return->new->MouseInputHandler
MotifMenuUI.MotifChangeHandler#stateChanged(ChangeEvent)::: motif change handler state changed:::c->e->getSource->if->c->isArmed->c->isSelected->c->setBorderPainted->else->c->setBorderPainted->super->stateChanged
MotifMenuUI.MouseInputHandler#mouseClicked(MouseEvent)::: mouse input handler mouse clicked:::
MotifMenuUI.MouseInputHandler#mousePressed(MouseEvent)::: mouse input handler mouse pressed:::manager->MenuSelectionManager->defaultManager->menu->e->getComponent->if->menu->isEnabled->if->menu->isTopLevelMenu->if->menu->isSelected->manager->clearSelectedPath->else->cnt->menu->getParent->if->me->new->MenuElementArr->manager->setSelectedPath->path->getPath->if->newPath->new->MenuElementArr->System->arraycopy->menu->getPopupMenu->manager->setSelectedPath
MotifMenuUI.MouseInputHandler#mouseReleased(MouseEvent)::: mouse input handler mouse released:::manager->MenuSelectionManager->defaultManager->menuItem->e->getComponent->p->e->getPoint->if->menuItem->getWidth->menuItem->getHeight->manager->processMouseEvent
MotifMenuUI.MouseInputHandler#mouseEntered(MouseEvent)::: mouse input handler mouse entered:::
MotifMenuUI.MouseInputHandler#mouseExited(MouseEvent)::: mouse input handler mouse exited:::
MotifMenuUI.MouseInputHandler#mouseDragged(MouseEvent)::: mouse input handler mouse dragged:::MenuSelectionManager->defaultManager->processMouseEvent
MotifMenuUI.MouseInputHandler#mouseMoved(MouseEvent)::: mouse input handler mouse moved:::
MotifOptionPaneUI#createUI(JComponent):::Creates a new MotifOptionPaneUI instance.:::return->new->MotifOptionPaneUI
MotifOptionPaneUI#createButtonArea():::Creates and returns a Container containin the buttons:::b->super->createButtonArea->if->b->getLayout->b->getLayout->setCentersChildren->return
MotifOptionPaneUI#getMinimumOptionPaneSize():::Returns null, CDE/Motif does not impose a minimum size.:::return
MotifOptionPaneUI#createSeparator()::: motif option pane i create separator:::return->new->JPanel
MotifOptionPaneUI#addIcon(Container):::Creates and adds a JLabel representing the icon returned from getIcon to top:::sideIcon->getIcon->if->iconLabel->new->JLabel->iconLabel->setVerticalAlignment->top->add
MotifPasswordFieldUI#createUI(JComponent):::Creates a UI for a JPasswordField.:::return->new->MotifPasswordFieldUI
MotifPasswordFieldUI#createCaret():::Creates the object to use for a caret:::return->MotifTextUI->createCaret
MotifPopupMenuSeparatorUI#createUI(JComponent)::: motif popup menu separator i create i:::return->new->MotifPopupMenuSeparatorUI
MotifPopupMenuSeparatorUI#paint(Graphics, JComponent)::: motif popup menu separator i paint:::s->c->getSize->g->c->getForeground->setColor->g->drawLine->g->c->getBackground->setColor->g->drawLine
MotifPopupMenuSeparatorUI#getPreferredSize(JComponent)::: motif popup menu separator i get preferred size:::return->new->Dimension
MotifPopupMenuUI#createUI(JComponent)::: motif popup menu i create i:::return->new->MotifPopupMenuUI
MotifPopupMenuUI#getPreferredSize(JComponent)::: motif popup menu i get preferred size:::layout->c->getLayout->d->layout->preferredLayoutSize->title->getLabel->if->table->UIManager->getLookAndFeelDefaults->table->getFont->fm->c->getFontMetrics->stringWidth->if->SwingUtilities2->stringWidth->if->i->c->getInsets->if->if->border->getBorderInsets->return->return
MotifPopupMenuUI#createChangeListener(JPopupMenu)::: motif popup menu i create change listener:::return->new->ChangeListener
MotifPopupMenuUI#isPopupTrigger(MouseEvent)::: motif popup menu i is popup trigger:::return->e->getID->e->getModifiers
MotifProgressBarUI#createUI(JComponent):::Creates the ProgressBar's UI:::return->new->MotifProgressBarUI
MotifRadioButtonMenuItemUI#createUI(JComponent)::: motif radio button menu item i create i:::return->new->MotifRadioButtonMenuItemUI
MotifRadioButtonMenuItemUI#installListeners()::: motif radio button menu item i install listeners:::super->installListeners->createChangeListener->menuItem->addChangeListener
MotifRadioButtonMenuItemUI#uninstallListeners()::: motif radio button menu item i uninstall listeners:::super->uninstallListeners->menuItem->removeChangeListener
MotifRadioButtonMenuItemUI#createChangeListener(JComponent)::: motif radio button menu item i create change listener:::return->new->ChangeHandler
MotifRadioButtonMenuItemUI.ChangeHandler#stateChanged(ChangeEvent)::: change handler state changed:::c->e->getSource->LookAndFeel->c->isArmed->installProperty
MotifRadioButtonMenuItemUI#createMouseInputListener(JComponent)::: motif radio button menu item i create mouse input listener:::return->new->MouseInputHandler
MotifRadioButtonMenuItemUI.MouseInputHandler#mouseClicked(MouseEvent)::: mouse input handler mouse clicked:::
MotifRadioButtonMenuItemUI.MouseInputHandler#mousePressed(MouseEvent)::: mouse input handler mouse pressed:::manager->MenuSelectionManager->defaultManager->manager->getPath->setSelectedPath
MotifRadioButtonMenuItemUI.MouseInputHandler#mouseReleased(MouseEvent)::: mouse input handler mouse released:::manager->MenuSelectionManager->defaultManager->menuItem->e->getComponent->p->e->getPoint->if->menuItem->getWidth->menuItem->getHeight->property->if->SwingUtilities2->getBoolean->manager->clearSelectedPath->menuItem->doClick->else->manager->processMouseEvent
MotifRadioButtonMenuItemUI.MouseInputHandler#mouseEntered(MouseEvent)::: mouse input handler mouse entered:::
MotifRadioButtonMenuItemUI.MouseInputHandler#mouseExited(MouseEvent)::: mouse input handler mouse exited:::
MotifRadioButtonMenuItemUI.MouseInputHandler#mouseDragged(MouseEvent)::: mouse input handler mouse dragged:::MenuSelectionManager->defaultManager->processMouseEvent
MotifRadioButtonMenuItemUI.MouseInputHandler#mouseMoved(MouseEvent)::: mouse input handler mouse moved:::
MotifRadioButtonUI#createUI(JComponent)::: motif radio button i create i:::appContext->AppContext->getAppContext->motifRadioButtonUI->appContext->get->if->new->MotifRadioButtonUI->appContext->put->return
MotifRadioButtonUI#installDefaults(AbstractButton)::: motif radio button i install defaults:::super->installDefaults->if->UIManager->getPropertyPrefix->getColor
MotifRadioButtonUI#uninstallDefaults(AbstractButton)::: motif radio button i uninstall defaults:::super->uninstallDefaults
MotifRadioButtonUI#getFocusColor()::: motif radio button i get focus color:::return
MotifRadioButtonUI#paintFocus(Graphics, Rectangle, Dimension)::: motif radio button i paint focus:::g->getFocusColor->setColor->g->drawRect
MotifScrollBarButton#getPreferredSize()::: motif scroll bar button get preferred size:::switch->return->new->Dimension->return->new->Dimension
MotifScrollBarButton#getMinimumSize()::: motif scroll bar button get minimum size:::return->getPreferredSize
MotifScrollBarButton#getMaximumSize()::: motif scroll bar button get maximum size:::return->getPreferredSize
MotifScrollBarButton#isFocusTraversable()::: motif scroll bar button is focus traversable:::return
MotifScrollBarButton#paint(Graphics)::: motif scroll bar button paint:::w->getWidth->h->getHeight->if->isOpaque->g->getBackground->setColor->g->fillRect->isPressed->getModel->isPressed->lead->trail->fill->getBackground->cx->cy->s->Math->min->switch->g->setColor->g->new->intArr->new->intArr->fillPolygon->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->break->g->setColor->g->new->intArr->new->intArr->fillPolygon->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->break->g->setColor->g->new->intArr->new->intArr->fillPolygon->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->break->g->setColor->g->new->intArr->new->intArr->fillPolygon->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->break
MotifScrollBarUI#createUI(JComponent)::: motif scroll bar i create i:::return->new->MotifScrollBarUI
MotifScrollBarUI#getPreferredSize(JComponent)::: motif scroll bar i get preferred size:::insets->c->getInsets->dx->dy->return->scrollbar->getOrientation->new->Dimension->new->Dimension
MotifScrollBarUI#createDecreaseButton(int)::: motif scroll bar i create decrease button:::return->new->MotifScrollBarButton
MotifScrollBarUI#createIncreaseButton(int)::: motif scroll bar i create increase button:::return->new->MotifScrollBarButton
MotifScrollBarUI#paintTrack(Graphics, JComponent, Rectangle)::: motif scroll bar i paint track:::g->setColor->g->fillRect
MotifScrollBarUI#paintThumb(Graphics, JComponent, Rectangle)::: motif scroll bar i paint thumb:::if->thumbBounds->isEmpty->scrollbar->isEnabled->return->w->h->g->translate->g->setColor->g->fillRect->g->setColor->drawVLine->drawHLine->g->setColor->drawHLine->drawVLine->g->translate
MotifScrollPaneUI#installListeners(JScrollPane)::: motif scroll pane i install listeners:::super->installListeners->createPropertyChangeHandler->scrollPane->addPropertyChangeListener
MotifScrollPaneUI#uninstallListeners(JComponent)::: motif scroll pane i uninstall listeners:::super->uninstallListeners->scrollPane->removePropertyChangeListener
MotifScrollPaneUI#createPropertyChangeHandler()::: motif scroll pane i create property change handler:::return->new->PropertyChangeListener
MotifScrollPaneUI#installDefaults(JScrollPane)::: motif scroll pane i install defaults:::super->installDefaults->vsb->scrollpane->getVerticalScrollBar->if->if->scrollpane->getComponentOrientation->isLeftToRight->vsb->getBorder->new->CompoundBorder->else->vsb->getBorder->new->CompoundBorder->vsb->setBorder->hsb->scrollpane->getHorizontalScrollBar->if->hsb->getBorder->new->CompoundBorder->hsb->setBorder
MotifScrollPaneUI#uninstallDefaults(JScrollPane)::: motif scroll pane i uninstall defaults:::super->uninstallDefaults->vsb->scrollpane->getVerticalScrollBar->if->if->vsb->getBorder->vsb->setBorder->hsb->scrollpane->getHorizontalScrollBar->if->if->hsb->getBorder->hsb->setBorder
MotifScrollPaneUI#createUI(JComponent)::: motif scroll pane i create i:::return->new->MotifScrollPaneUI
MotifSeparatorUI#createUI(JComponent)::: motif separator i create i:::return->new->MotifSeparatorUI
MotifSliderUI#createUI(JComponent):::create a MotifSliderUI object:::return->new->MotifSliderUI
MotifSliderUI#getPreferredHorizontalSize()::: motif slider i get preferred horizontal size:::return
MotifSliderUI#getPreferredVerticalSize()::: motif slider i get preferred vertical size:::return
MotifSliderUI#getMinimumHorizontalSize()::: motif slider i get minimum horizontal size:::return
MotifSliderUI#getMinimumVerticalSize()::: motif slider i get minimum vertical size:::return
MotifSliderUI#getThumbSize()::: motif slider i get thumb size:::if->slider->getOrientation->return->new->Dimension->else->return->new->Dimension
MotifSliderUI#paintFocus(Graphics)::: motif slider i paint focus:::
MotifSliderUI#paintTrack(Graphics)::: motif slider i paint track:::
MotifSliderUI#paintThumb(Graphics)::: motif slider i paint thumb:::knobBounds->x->y->w->h->if->slider->isEnabled->g->slider->getForeground->setColor->else->g->slider->getForeground->darker->setColor->if->slider->getOrientation->g->translate->g->fillRect->g->getHighlightColor->setColor->drawHLine->drawVLine->drawVLine->g->getShadowColor->setColor->drawHLine->drawVLine->drawVLine->g->translate->else->g->translate->g->fillRect->g->getHighlightColor->setColor->drawHLine->drawVLine->drawHLine->g->getShadowColor->setColor->drawHLine->drawVLine->drawHLine->g->translate
MotifSplitPaneDivider#setDividerSize(int):::overrides to hardcode the size of the divider PENDING(jeff) - rewrite JSplitPane so that this ins't needed:::insets->getInsets->borderSize->if->getBasicSplitPaneUI->getOrientation->if->else->if->if->setDividerSize->else->super->setDividerSize
MotifSplitPaneDivider#paint(Graphics)::: motif split pane divider paint:::bgColor->getBackground->size->getSize->g->getBackground->setColor->g->fillRect->if->getBasicSplitPaneUI->getOrientation->center->x->y->g->setColor->g->drawLine->g->setColor->g->drawLine->g->splitPane->hasFocus->getBackground->setColor->g->fillRect->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->else->center->x->y->g->setColor->g->drawLine->g->setColor->g->drawLine->g->splitPane->hasFocus->getBackground->setColor->g->fillRect->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->super->paint
MotifSplitPaneDivider#getMinimumSize():::The minimums size is the same as the preferredSize:::return->getPreferredSize
MotifSplitPaneDivider#setBasicSplitPaneUI(BasicSplitPaneUI):::Sets the SplitPaneUI that is using the receiver:::if->splitPane->removePropertyChangeListener->if->splitPane->removeMouseListener->splitPane->removeMouseMotionListener->removeMouseListener->removeMouseMotionListener->if->newUI->getSplitPane->if->if->new->MotifMouseHandler->splitPane->addMouseListener->splitPane->addMouseMotionListener->addMouseListener->addMouseMotionListener->splitPane->addPropertyChangeListener->if->splitPane->isOneTouchExpandable->oneTouchExpandableChanged->else
MotifSplitPaneDivider#isInThumb(int, int):::Returns true if the point at x, y is inside the thumb.:::size->getSize->thumbX->thumbY->thumbWidth->thumbHeight->if->getBasicSplitPaneUI->getOrientation->center->else->center->return
MotifSplitPaneDivider#getDragger()::: motif split pane divider get dragger:::return
MotifSplitPaneDivider#getSplitPane()::: motif split pane divider get split pane:::return
MotifSplitPaneDivider.MotifMouseHandler#mousePressed(MouseEvent)::: motif mouse handler mouse pressed:::if->e->getSource->getDragger->getSplitPane->isEnabled->e->getX->e->getY->isInThumb->super->mousePressed
MotifSplitPaneDivider.MotifMouseHandler#mouseMoved(MouseEvent)::: motif mouse handler mouse moved:::if->getDragger->return->if->e->getX->e->getY->isInThumb->if->getCursor->setCursor->return->super->mouseMoved
MotifSplitPaneUI#createUI(JComponent):::Creates a new MotifSplitPaneUI instance:::return->new->MotifSplitPaneUI
MotifSplitPaneUI#createDefaultDivider():::Creates the default divider.:::return->new->MotifSplitPaneDivider
MotifTabbedPaneUI#createUI(JComponent)::: motif tabbed pane i create i:::return->new->MotifTabbedPaneUI
MotifTabbedPaneUI#installDefaults()::: motif tabbed pane i install defaults:::super->installDefaults->UIManager->getColor->UIManager->getColor->UIManager->getColor->UIManager->getColor
MotifTabbedPaneUI#uninstallDefaults()::: motif tabbed pane i uninstall defaults:::super->uninstallDefaults
MotifTabbedPaneUI#paintContentBorderTopEdge(Graphics, int, int, int, int, int, int)::: motif tabbed pane i paint content border top edge:::selRect->getTabBounds->g->setColor->if->g->drawLine->else->g->drawLine->if->g->drawLine
MotifTabbedPaneUI#paintContentBorderBottomEdge(Graphics, int, int, int, int, int, int)::: motif tabbed pane i paint content border bottom edge:::selRect->getTabBounds->g->setColor->if->g->drawLine->else->g->drawLine->if->g->drawLine
MotifTabbedPaneUI#paintContentBorderRightEdge(Graphics, int, int, int, int, int, int)::: motif tabbed pane i paint content border right edge:::selRect->getTabBounds->g->setColor->if->g->drawLine->else->g->drawLine->if->g->drawLine
MotifTabbedPaneUI#paintTabBackground(Graphics, int, int, int, int, int, int, boolean)::: motif tabbed pane i paint tab background:::g->tabPane->getBackgroundAt->setColor->switch->g->fillRect->break->g->fillRect->break->g->fillRect->g->drawLine->g->drawLine->break->g->fillRect->g->drawLine->g->drawLine
MotifTabbedPaneUI#paintTabBorder(Graphics, int, int, int, int, int, int, boolean)::: motif tabbed pane i paint tab border:::g->setColor->switch->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->break->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->drawLine->break->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine->g->drawLine->break->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->drawLine
MotifTabbedPaneUI#paintFocusIndicator(Graphics, int, Rectangle[], int, Rectangle, Rectangle, boolean)::: motif tabbed pane i paint focus indicator:::tabRect->if->tabPane->hasFocus->x->y->w->h->g->setColor->switch->break->break->break->g->drawRect
MotifTabbedPaneUI#getTabRunIndent(int, int)::: motif tabbed pane i get tab run indent:::return
MotifTabbedPaneUI#getTabRunOverlay(int)::: motif tabbed pane i get tab run overlay:::Math->round->Math->round->switch->if->break->if->break->if->break->if->break->return
MotifTextAreaUI#createUI(JComponent):::Creates a UI for a JTextArea.:::return->new->MotifTextAreaUI
MotifTextAreaUI#createCaret():::Creates the object to use for a caret:::return->MotifTextUI->createCaret
MotifTextFieldUI#createUI(JComponent):::Creates a UI for a JTextField.:::return->new->MotifTextFieldUI
MotifTextFieldUI#createCaret():::Creates the object to use for a caret:::return->MotifTextUI->createCaret
MotifTextPaneUI#createUI(JComponent):::Creates a UI for the JTextPane.:::return->new->MotifTextPaneUI
MotifTextPaneUI#createCaret():::Creates the object to use for a caret:::return->MotifTextUI->createCaret
MotifTextUI#createCaret():::Creates the object to use for a caret for all of the Motif text components:::return->new->MotifCaret
MotifTextUI.MotifCaret#focusGained(FocusEvent):::Called when the component containing the caret gains focus:::super->focusGained->getComponent->repaint
MotifTextUI.MotifCaret#focusLost(FocusEvent):::Called when the component containing the caret loses focus:::super->focusLost->getComponent->repaint
MotifTextUI.MotifCaret#damage(Rectangle):::Damages the area surrounding the caret to cause it to be repainted:::if->repaint
MotifTextUI.MotifCaret#paint(Graphics):::Renders the caret as a vertical line:::if->isVisible->try->c->getComponent->fg->c->hasFocus->c->getCaretColor->c->getDisabledTextColor->mapper->c->getUI->dot->getDot->r->mapper->modelToView->x0->x1->y0->y1->g->setColor->g->drawLine->g->drawLine->g->drawLine->catch->finally
MotifToggleButtonUI#createUI(JComponent)::: motif toggle button i create i:::appContext->AppContext->getAppContext->motifToggleButtonUI->appContext->get->if->new->MotifToggleButtonUI->appContext->put->return
MotifToggleButtonUI#installDefaults(AbstractButton)::: motif toggle button i install defaults:::super->installDefaults->if->UIManager->getPropertyPrefix->getColor->LookAndFeel->installProperty
MotifToggleButtonUI#uninstallDefaults(AbstractButton)::: motif toggle button i uninstall defaults:::super->uninstallDefaults
MotifToggleButtonUI#getSelectColor()::: motif toggle button i get select color:::return
MotifToggleButtonUI#paintButtonPressed(Graphics, AbstractButton)::: motif toggle button i paint button pressed:::if->b->isContentAreaFilled->oldColor->g->getColor->size->b->getSize->insets->b->getInsets->margin->b->getMargin->if->b->getBackground->g->getSelectColor->setColor->g->fillRect->g->setColor
MotifToggleButtonUI#getInsets(JComponent)::: motif toggle button i get insets:::border->c->getBorder->i->border->getBorderInsets->new->Insets->return
MotifTreeCellRenderer#loadLeafIcon()::: motif tree cell renderer load leaf icon:::return
MotifTreeCellRenderer.TreeLeafIcon#paintIcon(Component, Graphics, int, int)::: tree leaf icon paint icon:::g->setColor->g->fillRect->g->drawLine->g->drawLine->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine
MotifTreeCellRenderer.TreeLeafIcon#getIconWidth()::: tree leaf icon get icon width:::return
MotifTreeCellRenderer.TreeLeafIcon#getIconHeight()::: tree leaf icon get icon height:::return
MotifTreeUI#installUI(JComponent)::: motif tree i install i:::super->installUI
MotifTreeUI#paintVerticalLine(Graphics, JComponent, int, int, int)::: motif tree i paint vertical line:::if->tree->getComponentOrientation->isLeftToRight->g->fillRect->else->g->fillRect
MotifTreeUI#paintHorizontalLine(Graphics, JComponent, int, int, int)::: motif tree i paint horizontal line:::g->fillRect
MotifTreeUI.MotifExpandedIcon#createExpandedIcon()::: motif expanded icon create expanded icon:::return->new->MotifExpandedIcon
MotifTreeUI.MotifExpandedIcon#paintIcon(Component, Graphics, int, int)::: motif expanded icon paint icon:::g->setColor->g->drawLine->g->drawLine->g->setColor->g->drawLine->g->drawLine->g->setColor->g->fillRect->g->setColor->g->drawLine->g->drawLine
MotifTreeUI.MotifExpandedIcon#getIconWidth()::: motif expanded icon get icon width:::return
MotifTreeUI.MotifExpandedIcon#getIconHeight()::: motif expanded icon get icon height:::return
MotifTreeUI.MotifCollapsedIcon#createCollapsedIcon()::: motif collapsed icon create collapsed icon:::return->new->MotifCollapsedIcon
MotifTreeUI.MotifCollapsedIcon#paintIcon(Component, Graphics, int, int)::: motif collapsed icon paint icon:::super->paintIcon->g->drawLine->g->drawLine
MotifTreeUI#createUI(JComponent)::: motif tree i create i:::return->new->MotifTreeUI
MotifTreeUI#createDefaultCellRenderer():::Returns the default cell renderer that is used to do the stamping of each node.:::return->new->MotifTreeCellRenderer
