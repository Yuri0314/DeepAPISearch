AbstractDOMParser#getDocumentClassName():::This method retrieves the name of current document class.:::return
AbstractDOMParser#setDocumentClassName(String):::This method allows the programmer to decide which document factory to use when constructing the DOM tree:::if->if->documentClassName->equals->documentClassName->equals->try->_class->ObjectFactory->findProviderClass->if->isAssignableFrom->throw->DOMMessageFormatter->new->ObjectArr->formatMessage->new->IllegalArgumentException->catch->throw->DOMMessageFormatter->new->ObjectArr->formatMessage->new->IllegalArgumentException->finally->if->documentClassName->equals
AbstractDOMParser#getDocument():::Returns the DOM document object.:::return
AbstractDOMParser#dropDocumentReferences():::Drops all references to the last DOM which was built by this parser.:::
AbstractDOMParser#reset():::Resets the parser state.:::super->reset->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getProperty->setDocumentClassName->fStringBuilder->setLength->fBaseURIStack->removeAllElements
AbstractDOMParser#setLocale(Locale):::Set the locale to use for messages.:::fConfiguration->setLocale
AbstractDOMParser#startGeneralEntity(String, XMLResourceIdentifier, String, Augmentations):::This method notifies the start of a general entity:::if->println->if->identifier->getExpandedSystemId->println->identifier->getBaseSystemId->println->if->if->return->setCharacterData->er->fDocument->createEntityReference->if->erImpl->erImpl->identifier->getExpandedSystemId->setBaseURI->if->entities->fDocumentType->getEntities->entities->getNamedItem->if->fCurrentEntityDecl->setInputEncoding->erImpl->needsSyncChildren->fCurrentNode->appendChild->else->er->fDeferredDocumentImpl->identifier->getExpandedSystemId->createDeferredEntityReference->if->node->fDeferredDocumentImpl->getLastChild->while->nodeType->fDeferredDocumentImpl->getNodeType->if->nodeName->fDeferredDocumentImpl->getNodeName->if->nodeName->equals->fDeferredDocumentImpl->setInputEncoding->break->fDeferredDocumentImpl->getRealPrevSibling->fDeferredDocumentImpl->appendChild
AbstractDOMParser#textDecl(String, String, Augmentations):::Notifies of the presence of a TextDecl line in an entity:::if->return->if->if->fCurrentEntityDecl->setXmlEncoding->if->fCurrentEntityDecl->setXmlVersion->else->if->fDeferredDocumentImpl->setEntityInfo
AbstractDOMParser#comment(XMLString, Augmentations):::A comment.:::if->if->fInternalSubset->append->if->fInternalSubset->append->fInternalSubset->append->return->if->return->if->comment->fDocument->text->toString->createComment->setCharacterData->fCurrentNode->appendChild->if->fDOMFilter->getWhatToShow->code->fDOMFilter->acceptNode->switch->throw->fCurrentNode->removeChild->return->else->comment->fDeferredDocumentImpl->text->toString->createDeferredComment->fDeferredDocumentImpl->appendChild
AbstractDOMParser#processingInstruction(String, XMLString, Augmentations):::A processing instruction:::if->if->fInternalSubset->append->fInternalSubset->append->if->fInternalSubset->append->append->fInternalSubset->append->return->if->println->if->if->return->pi->fDocument->data->toString->createProcessingInstruction->setCharacterData->fCurrentNode->appendChild->if->fDOMFilter->getWhatToShow->code->fDOMFilter->acceptNode->switch->throw->fCurrentNode->removeChild->return->else->pi->fDeferredDocumentImpl->data->toString->createDeferredProcessingInstruction->fDeferredDocumentImpl->appendChild
AbstractDOMParser#startDocument(XMLLocator, String, NamespaceContext, Augmentations):::The start of the document.:::if->if->fDocumentClassName->equals->new->DocumentImpl->fDocumentImpl->setStrictErrorChecking->fDocumentImpl->setInputEncoding->fDocumentImpl->locator->getExpandedSystemId->setDocumentURI->else->if->fDocumentClassName->equals->new->PSVIDocumentImpl->fDocumentImpl->setStrictErrorChecking->fDocumentImpl->setInputEncoding->fDocumentImpl->locator->getExpandedSystemId->setDocumentURI->else->try->documentClass->ObjectFactory->findProviderClass->documentClass->getConstructor->newInstance->defaultDocClass->ObjectFactory->findProviderClass->if->defaultDocClass->isAssignableFrom->psviDocClass->ObjectFactory->findProviderClass->if->psviDocClass->isAssignableFrom->fDocumentImpl->setStrictErrorChecking->fDocumentImpl->setInputEncoding->if->fDocumentImpl->locator->getExpandedSystemId->setDocumentURI->catch->throw->DOMMessageFormatter->new->ObjectArr->formatMessage->new->RuntimeException->finally->else->new->DeferredDocumentImpl->fDeferredDocumentImpl->createDeferredDocument->fDeferredDocumentImpl->setInputEncoding->fDeferredDocumentImpl->locator->getExpandedSystemId->setDocumentURI
AbstractDOMParser#xmlDecl(String, String, String, Augmentations):::Notifies of the presence of an XMLDecl line in the document:::if->if->if->fDocumentImpl->setXmlVersion->fDocumentImpl->setXmlEncoding->fDocumentImpl->equals->setXmlStandalone->else->if->fDeferredDocumentImpl->setXmlVersion->fDeferredDocumentImpl->setXmlEncoding->fDeferredDocumentImpl->equals->setXmlStandalone
AbstractDOMParser#doctypeDecl(String, String, String, Augmentations):::Notifies of the presence of the DOCTYPE line in the document.:::if->if->fDocumentImpl->createDocumentType->fCurrentNode->appendChild->else->fDeferredDocumentImpl->createDeferredDocumentType->fDeferredDocumentImpl->appendChild
AbstractDOMParser#startElement(QName, XMLAttributes, Augmentations):::The start of an element:::if->println->if->if->return->el->createElementNode->attrCount->attributes->getLength->seenSchemaDefault->for->i->setCharacterData->if->elementPSVI->augs->getItem->if->type->elementPSVI->getMemberTypeDefinition->if->elementPSVI->getTypeDefinition->setType->if->if->else->code->fDOMFilter->startElement->switch->throw->return->fSkippedElemStack->push->return->if->fSkippedElemStack->isEmpty->fSkippedElemStack->push->fCurrentNode->appendChild->else->el->fDeferredDocumentImpl->createDeferredElement->type->attrCount->attributes->getLength->for->i->fDeferredDocumentImpl->appendChild
AbstractDOMParser#emptyElement(QName, XMLAttributes, Augmentations):::An empty element.:::startElement->endElement
AbstractDOMParser#characters(XMLString, Augmentations):::Character content.:::if->text->toString->println->if->if->return->if->if->fDocument->text->toString->createCDATASection->fCurrentNode->appendChild->else->fCurrentCDATASection->text->toString->appendData->else->if->if->return->child->fCurrentNode->getLastChild->if->child->getNodeType->if->if->fStringBuilder->removeData->append->else->fStringBuilder->getData->append->setNodeValue->if->fStringBuilder->append->else->textNode->fDocument->text->toString->createTextNode->fCurrentNode->appendChild->else->if->if->cs->fDeferredDocumentImpl->text->toString->createDeferredCDATASection->fDeferredDocumentImpl->appendChild->else->txt->fDeferredDocumentImpl->text->toString->createDeferredTextNode->fDeferredDocumentImpl->appendChild->else->if->if->return->value->text->toString->txt->fDeferredDocumentImpl->createDeferredTextNode->fDeferredDocumentImpl->appendChild
AbstractDOMParser#ignorableWhitespace(XMLString, Augmentations):::Ignorable whitespace:::if->return->if->child->fCurrentNode->getLastChild->if->child->getNodeType->textNode->textNode->text->toString->appendData->else->textNode->fDocument->text->toString->createTextNode->if->textNodeImpl->textNodeImpl->setIgnorableWhitespace->fCurrentNode->appendChild->else->txt->fDeferredDocumentImpl->text->toString->createDeferredTextNode->fDeferredDocumentImpl->appendChild
AbstractDOMParser#endElement(QName, Augmentations):::The end of an element.:::if->println->if->if->elementPSVI->augs->getItem->if->if->type->elementPSVI->getMemberTypeDefinition->if->elementPSVI->getTypeDefinition->setType->if->setPSVI->if->if->if->return->if->fSkippedElemStack->isEmpty->if->fSkippedElemStack->pop->return->setCharacterData->if->fDOMFilter->getWhatToShow->code->fDOMFilter->acceptNode->switch->throw->parent->fCurrentNode->getParentNode->parent->removeChild->return->parent->fCurrentNode->getParentNode->ls->fCurrentNode->getChildNodes->length->ls->getLength->for->i->parent->removeChild->return->fCurrentNode->getParentNode->else->setCharacterData->fCurrentNode->getParentNode->else->if->elementPSVI->augs->getItem->if->type->elementPSVI->getMemberTypeDefinition->if->elementPSVI->getTypeDefinition->fDeferredDocumentImpl->setTypeInfo->fDeferredDocumentImpl->getParentNode
AbstractDOMParser#startCDATA(Augmentations):::The start of a CDATA section.:::if->if->return->if->setCharacterData
AbstractDOMParser#endCDATA(Augmentations):::The end of a CDATA section.:::if->if->return->if->if->fDOMFilter->getWhatToShow->code->fDOMFilter->acceptNode->switch->throw->parent->fCurrentNode->getParentNode->parent->removeChild->return->fCurrentNode->getParentNode->else->if->fDeferredDocumentImpl->getParentNode
AbstractDOMParser#endDocument(Augmentations):::The end of the document.:::if->if->if->if->fLocator->getEncoding->fDocumentImpl->fLocator->getEncoding->setInputEncoding->fDocumentImpl->setStrictErrorChecking->else->if->if->fLocator->getEncoding->fDeferredDocumentImpl->fLocator->getEncoding->setInputEncoding
AbstractDOMParser#endGeneralEntity(String, Augmentations):::This method notifies the end of a general entity:::if->println->if->if->return->setCharacterData->if->entities->fDocumentType->getEntities->entities->getNamedItem->if->if->fCurrentEntityDecl->getFirstChild->fCurrentEntityDecl->setReadOnly->child->fCurrentNode->getFirstChild->while->copy->child->cloneNode->fCurrentEntityDecl->appendChild->child->getNextSibling->fCurrentEntityDecl->setReadOnly->removeEntityRef->if->if->setReadOnly->if->fDOMFilter->getWhatToShow->code->fDOMFilter->acceptNode->switch->throw->parent->fCurrentNode->getParentNode->parent->removeChild->return->break->fCurrentNode->getParentNode->else->fCurrentNode->getParentNode->if->children->fCurrentNode->getChildNodes->parent->fCurrentNode->getParentNode->length->children->getLength->if->node->fCurrentNode->getPreviousSibling->child->children->item->if->node->getNodeType->child->getNodeType->child->getNodeValue->appendData->fCurrentNode->removeChild->else->parent->insertBefore->handleBaseURI->for->i->parent->removeChild->else->if->node->fDeferredDocumentImpl->getLastChild->while->nodeType->fDeferredDocumentImpl->getNodeType->if->nodeName->fDeferredDocumentImpl->getNodeName->if->nodeName->equals->break->fDeferredDocumentImpl->getRealPrevSibling->if->fDeferredDocumentImpl->getLastChild->prevIndex->childIndex->fDeferredDocumentImpl->getLastChild->while->cloneIndex->fDeferredDocumentImpl->cloneNode->fDeferredDocumentImpl->insertBefore->fDeferredDocumentImpl->getRealPrevSibling->if->fDeferredDocumentImpl->getParentNode->else->childIndex->fDeferredDocumentImpl->getLastChild->parentIndex->fDeferredDocumentImpl->getParentNode->prevIndex->lastChild->sibling->while->handleBaseURI->fDeferredDocumentImpl->getRealPrevSibling->fDeferredDocumentImpl->insertBefore->if->fDeferredDocumentImpl->setAsLastChild->else->fDeferredDocumentImpl->getRealPrevSibling->fDeferredDocumentImpl->setAsLastChild
AbstractDOMParser#handleBaseURI(Node):::Record baseURI information for the Element (by adding xml:base attribute) or for the ProcessingInstruction (by setting a baseURI field) Non deferred DOM.:::if->baseURI->nodeType->node->getNodeType->if->if->if->getAttributeNodeNS->return->else->if->getAttributeNode->return->getBaseURI->if->baseURI->fDocumentImpl->getDocumentURI->equals->if->setAttributeNS->else->setAttribute->else->if->getBaseURI->if->error->new->DOMErrorImpl->fErrorHandler->getErrorHandler->handleError
AbstractDOMParser#handleBaseURI(int):::Record baseURI information for the Element (by adding xml:base attribute) or for the ProcessingInstruction (by setting a baseURI field) Deferred DOM.:::nodeType->fDeferredDocumentImpl->getNodeType->if->baseURI->fDeferredDocumentImpl->getNodeValueString->if->fDeferredDocumentImpl->getDeferredEntityBaseURI->if->baseURI->fDeferredDocumentImpl->getDocumentURI->equals->fDeferredDocumentImpl->setDeferredAttribute->else->if->baseURI->fDeferredDocumentImpl->getNodeValueString->if->fDeferredDocumentImpl->getDeferredEntityBaseURI->if->error->new->DOMErrorImpl->fErrorHandler->getErrorHandler->handleError
AbstractDOMParser#startDTD(XMLLocator, Augmentations):::The start of the DTD.:::if->println->if->locator->getExpandedSystemId->println->locator->getBaseSystemId->println->if->fBaseURIStack->locator->getBaseSystemId->push->if->new->StringBuilder
AbstractDOMParser#endDTD(Augmentations):::The end of the DTD.:::if->println->if->fBaseURIStack->isEmpty->fBaseURIStack->pop->internalSubset->fInternalSubset->length->fInternalSubset->toString->if->if->fDeferredDocumentImpl->setInternalSubset->else->if->if->setInternalSubset
AbstractDOMParser#startConditional(short, Augmentations):::The start of a conditional section.:::
AbstractDOMParser#endConditional(Augmentations):::The end of a conditional section.:::
AbstractDOMParser#startExternalSubset(XMLResourceIdentifier, Augmentations):::The start of the DTD external subset.:::if->println->if->identifier->getExpandedSystemId->println->identifier->getBaseSystemId->println->fBaseURIStack->identifier->getBaseSystemId->push
AbstractDOMParser#endExternalSubset(Augmentations):::The end of the DTD external subset.:::fBaseURIStack->pop
AbstractDOMParser#internalEntityDecl(String, XMLString, XMLString, Augmentations):::An internal entity declaration.:::if->println->if->fBaseURIStack->peek->println->if->fInternalSubset->append->if->name->startsWith->fInternalSubset->append->fInternalSubset->name->substring->append->else->fInternalSubset->append->fInternalSubset->append->value->nonNormalizedText->toString->singleQuote->value->indexOf->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->if->name->startsWith->return->if->entities->fDocumentType->getEntities->entity->entities->getNamedItem->if->fDocumentImpl->createEntity->entity->fBaseURIStack->peek->setBaseURI->entities->setNamedItem->if->found->node->fDeferredDocumentImpl->getLastChild->while->nodeType->fDeferredDocumentImpl->getNodeType->if->nodeName->fDeferredDocumentImpl->getNodeName->if->nodeName->equals->break->fDeferredDocumentImpl->getRealPrevSibling->if->entityIndex->fDeferredDocumentImpl->fBaseURIStack->peek->createDeferredEntity->fDeferredDocumentImpl->appendChild
AbstractDOMParser#externalEntityDecl(String, XMLResourceIdentifier, Augmentations):::An external entity declaration.:::if->println->if->identifier->getExpandedSystemId->println->identifier->getBaseSystemId->println->publicId->identifier->getPublicId->literalSystemId->identifier->getLiteralSystemId->if->fInternalSubset->append->if->name->startsWith->fInternalSubset->append->fInternalSubset->name->substring->append->else->fInternalSubset->append->fInternalSubset->append->if->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->else->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->if->name->startsWith->return->if->entities->fDocumentType->getEntities->entity->entities->getNamedItem->if->fDocumentImpl->createEntity->entity->setPublicId->entity->setSystemId->entity->identifier->getBaseSystemId->setBaseURI->entities->setNamedItem->if->found->nodeIndex->fDeferredDocumentImpl->getLastChild->while->nodeType->fDeferredDocumentImpl->getNodeType->if->nodeName->fDeferredDocumentImpl->getNodeName->if->nodeName->equals->break->fDeferredDocumentImpl->getRealPrevSibling->if->entityIndex->fDeferredDocumentImpl->identifier->getBaseSystemId->createDeferredEntity->fDeferredDocumentImpl->appendChild
AbstractDOMParser#startParameterEntity(String, XMLResourceIdentifier, String, Augmentations):::This method notifies of the start of a parameter entity:::if->println->if->identifier->getExpandedSystemId->println->identifier->getBaseSystemId->println->if->augs->getItem->equals->fInternalSubset->append->append->fBaseURIStack->identifier->getExpandedSystemId->push
AbstractDOMParser#endParameterEntity(String, Augmentations):::This method notifies the end of a parameter entity:::if->println->fBaseURIStack->pop
AbstractDOMParser#unparsedEntityDecl(String, XMLResourceIdentifier, String, Augmentations):::An unparsed entity declaration.:::if->println->if->identifier->getExpandedSystemId->println->identifier->getBaseSystemId->println->publicId->identifier->getPublicId->literalSystemId->identifier->getLiteralSystemId->if->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->if->fInternalSubset->append->fInternalSubset->append->if->fInternalSubset->append->fInternalSubset->append->else->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->if->entities->fDocumentType->getEntities->entity->entities->getNamedItem->if->fDocumentImpl->createEntity->entity->setPublicId->entity->setSystemId->entity->setNotationName->entity->identifier->getBaseSystemId->setBaseURI->entities->setNamedItem->if->found->nodeIndex->fDeferredDocumentImpl->getLastChild->while->nodeType->fDeferredDocumentImpl->getNodeType->if->nodeName->fDeferredDocumentImpl->getNodeName->if->nodeName->equals->break->fDeferredDocumentImpl->getRealPrevSibling->if->entityIndex->fDeferredDocumentImpl->identifier->getBaseSystemId->createDeferredEntity->fDeferredDocumentImpl->appendChild
AbstractDOMParser#notationDecl(String, XMLResourceIdentifier, Augmentations):::A notation declaration:::publicId->identifier->getPublicId->literalSystemId->identifier->getLiteralSystemId->if->fInternalSubset->append->fInternalSubset->append->if->fInternalSubset->append->fInternalSubset->append->if->fInternalSubset->append->fInternalSubset->append->else->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->if->notations->fDocumentType->getNotations->if->notations->getNamedItem->notation->fDocumentImpl->createNotation->notation->setPublicId->notation->setSystemId->notation->identifier->getBaseSystemId->setBaseURI->notations->setNamedItem->if->found->nodeIndex->fDeferredDocumentImpl->getLastChild->while->nodeType->fDeferredDocumentImpl->getNodeType->if->nodeName->fDeferredDocumentImpl->getNodeName->if->nodeName->equals->break->fDeferredDocumentImpl->getPrevSibling->if->notationIndex->fDeferredDocumentImpl->identifier->getBaseSystemId->createDeferredNotation->fDeferredDocumentImpl->appendChild
AbstractDOMParser#ignoredCharacters(XMLString, Augmentations):::Characters within an IGNORE conditional section.:::
AbstractDOMParser#elementDecl(String, String, Augmentations):::An element declaration.:::if->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append
AbstractDOMParser#attributeDecl(String, String, String, String[], String, XMLString, XMLString, Augmentations):::An attribute declaration.:::if->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->fInternalSubset->append->if->type->equals->fInternalSubset->append->for->i->fInternalSubset->append->else->fInternalSubset->append->if->fInternalSubset->append->fInternalSubset->append->if->fInternalSubset->append->for->i->fInternalSubset->append->fInternalSubset->append->if->if->elementDefIndex->fDeferredDocumentImpl->lookupElementDefinition->if->fDeferredDocumentImpl->createDeferredElementDefinition->fDeferredDocumentImpl->appendChild->nsEnabled->namespaceURI->if->if->attributeName->startsWith->attributeName->equals->else->if->attributeName->startsWith->attrIndex->fDeferredDocumentImpl->defaultValue->toString->createDeferredAttribute->if->equals->fDeferredDocumentImpl->setIdAttribute->fDeferredDocumentImpl->appendChild->else->if->if->elements->getElements->elementDef->elements->getNamedItem->if->fDocumentImpl->createElementDefinition->getElements->setNamedItem->nsEnabled->attr->if->namespaceURI->if->attributeName->startsWith->attributeName->equals->else->if->attributeName->startsWith->fDocumentImpl->createAttributeNS->else->fDocumentImpl->createAttribute->attr->defaultValue->toString->setValue->attr->setSpecified->attr->equals->setIdAttribute->if->elementDef->getAttributes->setNamedItemNS->else->elementDef->getAttributes->setNamedItem
AbstractDOMParser#startAttlist(String, Augmentations):::The start of an attribute list.:::
AbstractDOMParser#endAttlist(Augmentations):::The end of an attribute list.:::
AbstractSAXParser#startDocument(XMLLocator, String, NamespaceContext, Augmentations):::The start of the document.:::try->if->if->fDocumentHandler->new->LocatorProxy->setDocumentLocator->fDocumentHandler->startDocument->if->if->fContentHandler->new->LocatorProxy->setDocumentLocator->fContentHandler->startDocument->catch->throw->new->XNIException->finally
AbstractSAXParser#xmlDecl(String, String, String, Augmentations):::Notifies of the presence of an XMLDecl line in the document:::equals
AbstractSAXParser#doctypeDecl(String, String, String, Augmentations):::Notifies of the presence of the DOCTYPE line in the document.:::try->if->fLexicalHandler->startDTD->catch->throw->new->XNIException->finally->if->new->SymbolHash
AbstractSAXParser#startGeneralEntity(String, XMLResourceIdentifier, String, Augmentations):::This method notifies of the start of an entity:::try->if->augs->getItem->equals->if->fContentHandler->skippedEntity->else->if->fLexicalHandler->startEntity->catch->throw->new->XNIException->finally
AbstractSAXParser#endGeneralEntity(String, Augmentations):::This method notifies the end of an entity:::try->if->augs->getItem->equals->if->fLexicalHandler->endEntity->catch->throw->new->XNIException->finally
AbstractSAXParser#startElement(QName, XMLAttributes, Augmentations):::The start of an element:::try->if->fAttributesProxy->setAttributes->fDocumentHandler->startElement->if->if->startNamespaceMapping->len->attributes->getLength->if->for->i->else->if->for->i->uri->localpart->fAttributesProxy->setAttributes->fContentHandler->startElement->catch->throw->new->XNIException->finally
AbstractSAXParser#characters(XMLString, Augmentations):::Character content.:::if->return->try->if->fDocumentHandler->characters->if->fContentHandler->characters->catch->throw->new->XNIException->finally
AbstractSAXParser#ignorableWhitespace(XMLString, Augmentations):::Ignorable whitespace:::try->if->fDocumentHandler->ignorableWhitespace->if->fContentHandler->ignorableWhitespace->catch->throw->new->XNIException->finally
AbstractSAXParser#endElement(QName, Augmentations):::The end of an element.:::try->if->fDocumentHandler->endElement->if->uri->localpart->fContentHandler->endElement->if->endNamespaceMapping->catch->throw->new->XNIException->finally
AbstractSAXParser#startCDATA(Augmentations):::The start of a CDATA section.:::try->if->fLexicalHandler->startCDATA->catch->throw->new->XNIException->finally
AbstractSAXParser#endCDATA(Augmentations):::The end of a CDATA section.:::try->if->fLexicalHandler->endCDATA->catch->throw->new->XNIException->finally
AbstractSAXParser#comment(XMLString, Augmentations):::A comment.:::try->if->fLexicalHandler->comment->catch->throw->new->XNIException->finally
AbstractSAXParser#processingInstruction(String, XMLString, Augmentations):::A processing instruction:::try->if->fDocumentHandler->data->toString->processingInstruction->if->fContentHandler->data->toString->processingInstruction->catch->throw->new->XNIException->finally
AbstractSAXParser#endDocument(Augmentations):::The end of the document.:::try->if->fDocumentHandler->endDocument->if->fContentHandler->endDocument->catch->throw->new->XNIException->finally
AbstractSAXParser#startExternalSubset(XMLResourceIdentifier, Augmentations):::The start of the DTD external subset.:::startParameterEntity
AbstractSAXParser#endExternalSubset(Augmentations):::The end of the DTD external subset.:::endParameterEntity
AbstractSAXParser#startParameterEntity(String, XMLResourceIdentifier, String, Augmentations):::This method notifies of the start of parameter entity:::try->if->augs->getItem->equals->if->fContentHandler->skippedEntity->else->if->fLexicalHandler->startEntity->catch->throw->new->XNIException->finally
AbstractSAXParser#endParameterEntity(String, Augmentations):::This method notifies the end of an entity:::try->if->augs->getItem->equals->if->fLexicalHandler->endEntity->catch->throw->new->XNIException->finally
AbstractSAXParser#elementDecl(String, String, Augmentations):::An element declaration.:::try->if->fDeclHandler->elementDecl->catch->throw->new->XNIException->finally
AbstractSAXParser#attributeDecl(String, String, String, String[], String, XMLString, XMLString, Augmentations):::An attribute declaration.:::try->if->elemAttr->new->StringBuffer->append->append->toString->if->fDeclaredAttrs->get->return->fDeclaredAttrs->put->if->type->equals->type->equals->str->new->StringBuffer->if->type->equals->str->append->str->append->else->str->append->for->i->str->append->str->toString->value->defaultValue->toString->fDeclHandler->attributeDecl->catch->throw->new->XNIException->finally
AbstractSAXParser#internalEntityDecl(String, XMLString, XMLString, Augmentations):::An internal entity declaration.:::try->if->fDeclHandler->text->toString->internalEntityDecl->catch->throw->new->XNIException->finally
AbstractSAXParser#externalEntityDecl(String, XMLResourceIdentifier, Augmentations):::An external entity declaration.:::try->if->publicId->identifier->getPublicId->systemId->identifier->getExpandedSystemId->identifier->getLiteralSystemId->fDeclHandler->externalEntityDecl->catch->throw->new->XNIException->finally
AbstractSAXParser#unparsedEntityDecl(String, XMLResourceIdentifier, String, Augmentations):::An unparsed entity declaration.:::try->if->publicId->identifier->getPublicId->systemId->identifier->getExpandedSystemId->identifier->getLiteralSystemId->fDTDHandler->unparsedEntityDecl->catch->throw->new->XNIException->finally
AbstractSAXParser#notationDecl(String, XMLResourceIdentifier, Augmentations):::A notation declaration:::try->if->publicId->identifier->getPublicId->systemId->identifier->getExpandedSystemId->identifier->getLiteralSystemId->fDTDHandler->notationDecl->catch->throw->new->XNIException->finally
AbstractSAXParser#endDTD(Augmentations):::The end of the DTD.:::try->if->fLexicalHandler->endDTD->catch->throw->new->XNIException->finally->if->fDeclaredAttrs->clear
AbstractSAXParser#parse(String):::Parses the input source specified by the given system identifier:::source->new->XMLInputSource->try->parse->catch->ex->e->getException->if->locatorImpl->new->LocatorImpl->locatorImpl->e->getPublicId->setPublicId->locatorImpl->e->getExpandedSystemId->setSystemId->locatorImpl->e->getLineNumber->setLineNumber->locatorImpl->e->getColumnNumber->setColumnNumber->throw->e->getMessage->new->SAXParseException->e->getMessage->new->SAXParseException->if->throw->if->throw->throw->new->SAXException->ex->e->getException->if->throw->e->getMessage->new->SAXException->if->throw->if->throw->throw->new->SAXException->finally
AbstractSAXParser#parse(InputSource):::parse:::try->xmlInputSource->inputSource->getPublicId->inputSource->getSystemId->new->XMLInputSource->xmlInputSource->inputSource->getByteStream->setByteStream->xmlInputSource->inputSource->getCharacterStream->setCharacterStream->xmlInputSource->inputSource->getEncoding->setEncoding->parse->catch->ex->e->getException->if->locatorImpl->new->LocatorImpl->locatorImpl->e->getPublicId->setPublicId->locatorImpl->e->getExpandedSystemId->setSystemId->locatorImpl->e->getLineNumber->setLineNumber->locatorImpl->e->getColumnNumber->setColumnNumber->throw->e->getMessage->new->SAXParseException->e->getMessage->new->SAXParseException->if->throw->if->throw->throw->new->SAXException->ex->e->getException->if->throw->e->getMessage->new->SAXException->if->throw->if->throw->throw->new->SAXException->finally
AbstractSAXParser#setEntityResolver(EntityResolver):::Sets the resolver used to resolve external entities:::try->xer->fConfiguration->getProperty->if->if->er2w->er2w->setEntityResolver->else->fConfiguration->new->EntityResolver2Wrapper->setProperty->else->if->erw->erw->setEntityResolver->else->fConfiguration->new->EntityResolverWrapper->setProperty->catch->finally
AbstractSAXParser#getEntityResolver():::Return the current entity resolver.:::entityResolver->try->xmlEntityResolver->fConfiguration->getProperty->if->if->getEntityResolver->else->if->getEntityResolver->catch->finally->return
AbstractSAXParser#setErrorHandler(ErrorHandler):::Allow an application to register an error event handler:::try->xeh->fConfiguration->getProperty->if->ehw->ehw->setErrorHandler->else->fConfiguration->new->ErrorHandlerWrapper->setProperty->catch->finally
AbstractSAXParser#getErrorHandler():::Return the current error handler.:::errorHandler->try->xmlErrorHandler->fConfiguration->getProperty->if->getErrorHandler->catch->finally->return
AbstractSAXParser#setLocale(Locale):::Set the locale to use for messages.:::fConfiguration->setLocale
AbstractSAXParser#setDTDHandler(DTDHandler):::Allow an application to register a DTD event handler:::
AbstractSAXParser#setDocumentHandler(DocumentHandler):::Allow an application to register a document event handler:::
AbstractSAXParser#setContentHandler(ContentHandler):::Allow an application to register a content event handler:::
AbstractSAXParser#getContentHandler():::Return the current content handler.:::return
AbstractSAXParser#getDTDHandler():::Return the current DTD handler.:::return
AbstractSAXParser#setFeature(String, boolean):::Set the state of any feature in a SAX2 parser:::try->if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->fConfiguration->setFeature->return->if->length->featureId->endsWith->fConfiguration->setFeature->return->if->length->featureId->endsWith->if->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->if->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->if->getEntityResolver->setEntityResolver->return->if->length->featureId->endsWith->length->featureId->endsWith->length->featureId->endsWith->length->featureId->endsWith->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->else->if->featureId->equals->if->if->fConfiguration->getProperty->fConfiguration->new->XMLSecurityManager->setProperty->fConfiguration->setFeature->catch->identifier->e->getIdentifier->if->e->getType->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotRecognizedException->else->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally
AbstractSAXParser#getFeature(String):::Query the state of a feature:::try->if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->state->fConfiguration->getFeature->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->length->featureId->endsWith->return->return->fConfiguration->getFeature->catch->identifier->e->getIdentifier->if->e->getType->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotRecognizedException->else->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally
AbstractSAXParser#setProperty(String, Object):::Set the value of any property in a SAX2 parser:::try->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->try->setLexicalHandler->catch->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally->return->if->length->propertyId->endsWith->try->setDeclHandler->catch->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally->return->if->length->propertyId->endsWith->length->propertyId->endsWith->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->fConfiguration->setProperty->catch->identifier->e->getIdentifier->if->e->getType->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotRecognizedException->else->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally
AbstractSAXParser#getProperty(String):::Query the value of a property:::try->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->length->propertyId->endsWith->return->getLexicalHandler->if->length->propertyId->endsWith->return->getDeclHandler->if->length->propertyId->endsWith->throw->SAXMessageFormatter->fConfiguration->getLocale->formatMessage->new->SAXNotSupportedException->return->fConfiguration->getProperty->catch->identifier->e->getIdentifier->if->e->getType->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotRecognizedException->else->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally
AbstractSAXParser#setDeclHandler(DeclHandler):::Set the DTD declaration event handler:::if->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException
AbstractSAXParser#getDeclHandler():::Returns the DTD declaration event handler.:::return
AbstractSAXParser#setLexicalHandler(LexicalHandler):::Set the lexical event handler:::if->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException
AbstractSAXParser#getLexicalHandler():::Returns the lexical handler.:::return
AbstractSAXParser#startNamespaceMapping():::Send startPrefixMapping events:::count->fNamespaceContext->getDeclaredPrefixCount->if->prefix->uri->for->i
AbstractSAXParser#endNamespaceMapping():::Send endPrefixMapping events:::count->fNamespaceContext->getDeclaredPrefixCount->if->for->i
AbstractSAXParser#reset():::Reset all components before parsing.:::super->reset->fConfiguration->getFeature->fConfiguration->getFeature
AbstractSAXParser.LocatorProxy#getPublicId():::Public identifier.:::return->fLocator->getPublicId
AbstractSAXParser.LocatorProxy#getSystemId():::System identifier.:::return->fLocator->getExpandedSystemId
AbstractSAXParser.LocatorProxy#getLineNumber():::Line number.:::return->fLocator->getLineNumber
AbstractSAXParser.LocatorProxy#getColumnNumber():::Column number.:::return->fLocator->getColumnNumber
AbstractSAXParser.AttributesProxy#setAttributes(XMLAttributes):::Sets the XML attributes.:::
AbstractXMLDocumentParser#xmlDecl(String, String, String, Augmentations):::Notifies of the presence of an XMLDecl line in the document:::
AbstractXMLDocumentParser#doctypeDecl(String, String, String, Augmentations):::Notifies of the presence of the DOCTYPE line in the document.:::
AbstractXMLDocumentParser#startElement(QName, XMLAttributes, Augmentations):::The start of an element:::
AbstractXMLDocumentParser#emptyElement(QName, XMLAttributes, Augmentations):::An empty element.:::startElement->endElement
AbstractXMLDocumentParser#characters(XMLString, Augmentations):::Character content.:::
AbstractXMLDocumentParser#ignorableWhitespace(XMLString, Augmentations):::Ignorable whitespace:::
AbstractXMLDocumentParser#endElement(QName, Augmentations):::The end of an element.:::
AbstractXMLDocumentParser#startCDATA(Augmentations):::The start of a CDATA section.:::
AbstractXMLDocumentParser#endCDATA(Augmentations):::The end of a CDATA section.:::
AbstractXMLDocumentParser#endDocument(Augmentations):::The end of the document.:::
AbstractXMLDocumentParser#startGeneralEntity(String, XMLResourceIdentifier, String, Augmentations):::This method notifies the start of an entity:::
AbstractXMLDocumentParser#textDecl(String, String, Augmentations):::Notifies of the presence of a TextDecl line in an entity:::
AbstractXMLDocumentParser#endGeneralEntity(String, Augmentations):::This method notifies the end of an entity:::
AbstractXMLDocumentParser#comment(XMLString, Augmentations):::A comment.:::
AbstractXMLDocumentParser#processingInstruction(String, XMLString, Augmentations):::A processing instruction:::
AbstractXMLDocumentParser#setDocumentSource(XMLDocumentSource):::Sets the document source:::
AbstractXMLDocumentParser#getDocumentSource():::Returns the document source:::return
AbstractXMLDocumentParser#startDTD(XMLLocator, Augmentations):::The start of the DTD.:::
AbstractXMLDocumentParser#startExternalSubset(XMLResourceIdentifier, Augmentations):::The start of the DTD external subset.:::
AbstractXMLDocumentParser#endExternalSubset(Augmentations):::The end of the DTD external subset.:::
AbstractXMLDocumentParser#startParameterEntity(String, XMLResourceIdentifier, String, Augmentations):::This method notifies the start of an entity:::
AbstractXMLDocumentParser#endParameterEntity(String, Augmentations):::This method notifies the end of an entity:::
AbstractXMLDocumentParser#ignoredCharacters(XMLString, Augmentations):::Characters within an IGNORE conditional section.:::
AbstractXMLDocumentParser#elementDecl(String, String, Augmentations):::An element declaration.:::
AbstractXMLDocumentParser#startAttlist(String, Augmentations):::The start of an attribute list.:::
AbstractXMLDocumentParser#attributeDecl(String, String, String, String[], String, XMLString, XMLString, Augmentations):::An attribute declaration.:::
AbstractXMLDocumentParser#endAttlist(Augmentations):::The end of an attribute list.:::
AbstractXMLDocumentParser#internalEntityDecl(String, XMLString, XMLString, Augmentations):::An internal entity declaration.:::
AbstractXMLDocumentParser#externalEntityDecl(String, XMLResourceIdentifier, Augmentations):::An external entity declaration.:::
AbstractXMLDocumentParser#unparsedEntityDecl(String, XMLResourceIdentifier, String, Augmentations):::An unparsed entity declaration.:::
AbstractXMLDocumentParser#notationDecl(String, XMLResourceIdentifier, Augmentations):::A notation declaration:::
AbstractXMLDocumentParser#startConditional(short, Augmentations):::The start of a conditional section.:::
AbstractXMLDocumentParser#endConditional(Augmentations):::The end of a conditional section.:::
AbstractXMLDocumentParser#endDTD(Augmentations):::The end of the DTD.:::
AbstractXMLDocumentParser#startContentModel(String, Augmentations):::The start of a content model:::
AbstractXMLDocumentParser#any(Augmentations):::A content model of ANY.:::
AbstractXMLDocumentParser#empty(Augmentations):::A content model of EMPTY.:::
AbstractXMLDocumentParser#startGroup(Augmentations):::A start of either a mixed or children content model:::
AbstractXMLDocumentParser#pcdata(Augmentations):::The appearance of "#PCDATA" within a group signifying a mixed content model:::
AbstractXMLDocumentParser#element(String, Augmentations):::A referenced element in a mixed or children content model.:::
AbstractXMLDocumentParser#separator(short, Augmentations):::The separator between choices or sequences of a mixed or children content model.:::
AbstractXMLDocumentParser#occurrence(short, Augmentations):::The occurrence count for a child in a children content model or for the mixed content model group.:::
AbstractXMLDocumentParser#endGroup(Augmentations):::The end of a group for mixed or children content models.:::
AbstractXMLDocumentParser#endContentModel(Augmentations):::The end of a content model.:::
AbstractXMLDocumentParser#reset():::reset all components before parsing:::super->reset
BasicParserConfiguration#addComponent(XMLComponent):::Adds a component to the parser configuration:::if->fComponents->contains->return->fComponents->add->recognizedFeatures->component->getRecognizedFeatures->addRecognizedFeatures->recognizedProperties->component->getRecognizedProperties->addRecognizedProperties->if->for->i->if->for->i
BasicParserConfiguration#parse(XMLInputSource):::Parse an XML document:::
BasicParserConfiguration#setDocumentHandler(XMLDocumentHandler):::Sets the document handler on the last component in the pipeline to receive information about the document.:::if->fLastComponent->setDocumentHandler->if->fDocumentHandler->setDocumentSource
BasicParserConfiguration#getDocumentHandler():::Returns the registered document handler.:::return
BasicParserConfiguration#setDTDHandler(XMLDTDHandler):::Sets the DTD handler.:::
BasicParserConfiguration#getDTDHandler():::Returns the registered DTD handler.:::return
BasicParserConfiguration#setDTDContentModelHandler(XMLDTDContentModelHandler):::Sets the DTD content model handler.:::
BasicParserConfiguration#getDTDContentModelHandler():::Returns the registered DTD content model handler.:::return
BasicParserConfiguration#setEntityResolver(XMLEntityResolver):::Sets the resolver used to resolve external entities:::fProperties->put
BasicParserConfiguration#getEntityResolver():::Return the current entity resolver.:::return->fProperties->get
BasicParserConfiguration#setErrorHandler(XMLErrorHandler):::Allow an application to register an error event handler:::fProperties->put
BasicParserConfiguration#getErrorHandler():::Return the current error handler.:::return->fProperties->get
BasicParserConfiguration#setFeature(String, boolean):::Set the state of a feature:::foreach->c->setFeature->super->setFeature
BasicParserConfiguration#setProperty(String, Object):::setProperty:::foreach->c->setProperty->super->setProperty
BasicParserConfiguration#setLocale(Locale):::Set the locale to use for messages.:::
BasicParserConfiguration#getLocale():::Returns the locale.:::return
BasicParserConfiguration#reset():::reset all components before parsing and namespace context:::foreach->c->reset
BasicParserConfiguration#checkProperty(String):::Check a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->return->super->checkProperty
BasicParserConfiguration#checkFeature(String):::Check a feature:::if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->return->return->super->checkFeature
CachingParserPool#getSymbolTable():::Returns the symbol table.:::return
CachingParserPool#getXMLGrammarPool():::Returns the grammar pool.:::return
CachingParserPool#setShadowSymbolTable(boolean):::Sets whether new parser instance receive shadow copies of the main symbol table.:::
CachingParserPool#createDOMParser():::Creates a new DOM parser.:::symbolTable->new->ShadowedSymbolTable->grammarPool->new->ShadowedGrammarPool->return->new->DOMParser
CachingParserPool#createSAXParser():::Creates a new SAX parser.:::symbolTable->new->ShadowedSymbolTable->grammarPool->new->ShadowedGrammarPool->return->new->SAXParser
CachingParserPool.SynchronizedGrammarPool#lockPool():::lock the grammar pool:::synchronized->fGrammarPool->lockPool
CachingParserPool.SynchronizedGrammarPool#clear():::clear the grammar pool:::synchronized->fGrammarPool->clear
CachingParserPool.SynchronizedGrammarPool#unlockPool():::unlock the grammar pool:::synchronized->fGrammarPool->unlockPool
CachingParserPool.ShadowedGrammarPool#retrieveInitialGrammarSet(String):::Retrieve the initial set of grammars for the validator to work with:::grammars->super->retrieveInitialGrammarSet->if->return->return->fGrammarPool->retrieveInitialGrammarSet
CachingParserPool.ShadowedGrammarPool#retrieveGrammar(XMLGrammarDescription):::Retrieve a particular grammar:::g->super->retrieveGrammar->if->return->return->fGrammarPool->retrieveGrammar
CachingParserPool.ShadowedGrammarPool#cacheGrammars(String, Grammar[]):::Give the grammarPool the option of caching these grammars:::super->cacheGrammars->fGrammarPool->cacheGrammars
CachingParserPool.ShadowedGrammarPool#getGrammar(XMLGrammarDescription):::Returns the grammar associated to the specified description.:::if->super->containsGrammar->return->super->getGrammar->return
CachingParserPool.ShadowedGrammarPool#containsGrammar(XMLGrammarDescription):::Returns true if the grammar pool contains a grammar associated to the specified description.:::return->super->containsGrammar
DOMParser#parse(String):::Parses the input source specified by the given system identifier:::source->new->XMLInputSource->try->parse->catch->ex->e->getException->if->locatorImpl->new->LocatorImpl->locatorImpl->e->getPublicId->setPublicId->locatorImpl->e->getExpandedSystemId->setSystemId->locatorImpl->e->getLineNumber->setLineNumber->locatorImpl->e->getColumnNumber->setColumnNumber->throw->e->getMessage->new->SAXParseException->e->getMessage->new->SAXParseException->if->throw->if->throw->throw->new->SAXException->e->printStackTrace->ex->e->getException->if->throw->e->getMessage->new->SAXException->if->throw->if->throw->throw->new->SAXException->finally
DOMParser#parse(InputSource):::parse:::try->xmlInputSource->inputSource->getPublicId->inputSource->getSystemId->new->XMLInputSource->xmlInputSource->inputSource->getByteStream->setByteStream->xmlInputSource->inputSource->getCharacterStream->setCharacterStream->xmlInputSource->inputSource->getEncoding->setEncoding->parse->catch->ex->e->getException->if->locatorImpl->new->LocatorImpl->locatorImpl->e->getPublicId->setPublicId->locatorImpl->e->getExpandedSystemId->setSystemId->locatorImpl->e->getLineNumber->setLineNumber->locatorImpl->e->getColumnNumber->setColumnNumber->throw->e->getMessage->new->SAXParseException->e->getMessage->new->SAXParseException->if->throw->if->throw->throw->new->SAXException->ex->e->getException->if->throw->e->getMessage->new->SAXException->if->throw->if->throw->throw->new->SAXException->finally
DOMParser#setEntityResolver(EntityResolver):::Sets the resolver used to resolve external entities:::try->xer->fConfiguration->getProperty->if->if->er2w->er2w->setEntityResolver->else->fConfiguration->new->EntityResolver2Wrapper->setProperty->else->if->erw->erw->setEntityResolver->else->fConfiguration->new->EntityResolverWrapper->setProperty->catch->finally
DOMParser#getEntityResolver():::Return the current entity resolver.:::entityResolver->try->xmlEntityResolver->fConfiguration->getProperty->if->if->getEntityResolver->else->if->getEntityResolver->catch->finally->return
DOMParser#setErrorHandler(ErrorHandler):::Allow an application to register an error event handler:::try->xeh->fConfiguration->getProperty->if->ehw->ehw->setErrorHandler->else->fConfiguration->new->ErrorHandlerWrapper->setProperty->catch->finally
DOMParser#getErrorHandler():::Return the current error handler.:::errorHandler->try->xmlErrorHandler->fConfiguration->getProperty->if->getErrorHandler->catch->finally->return
DOMParser#setFeature(String, boolean):::Set the state of any feature in a SAX2 parser:::try->if->featureId->equals->if->getEntityResolver->setEntityResolver->return->fConfiguration->setFeature->catch->identifier->e->getIdentifier->if->e->getType->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotRecognizedException->else->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally
DOMParser#getFeature(String):::Query the state of a feature:::try->if->featureId->equals->return->return->fConfiguration->getFeature->catch->identifier->e->getIdentifier->if->e->getType->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotRecognizedException->else->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally
DOMParser#setProperty(String, Object):::Set the value of any property in a SAX2 parser:::if->propertyId->equals->XMLSecurityManager->convert->setProperty0->return->if->propertyId->equals->if->new->XMLSecurityPropertyManager->else->setProperty0->return->if->new->XMLSecurityManager->setProperty0->if->new->XMLSecurityPropertyManager->setProperty0->index->securityPropertyManager->getIndex->if->securityPropertyManager->setValue->else->if->securityManager->setLimit->setProperty0
DOMParser#getProperty(String):::Query the value of a property:::if->propertyId->equals->deferred->try->getFeature->catch->finally->if->throw->new->SAXNotSupportedException->return->fCurrentNode->getNodeType->try->spm->fConfiguration->getProperty->index->spm->getIndex->if->return->spm->getValueByIndex->return->fConfiguration->getProperty->catch->identifier->e->getIdentifier->if->e->getType->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotRecognizedException->else->throw->SAXMessageFormatter->fConfiguration->getLocale->new->ObjectArr->formatMessage->new->SAXNotSupportedException->finally
DOMParser#getXMLParserConfiguration():::Returns this parser's XMLParserConfiguration.:::return
DOMParserImpl#reset():::Resets the parser state.:::super->reset->fConfiguration->getFeature->if->fSkippedElemStack->removeAllElements
DOMParserImpl#getFilter()::: When the application provides a filter, the parser will call out to the filter at the completion of the construction of each Element node:::return
DOMParserImpl#setFilter(LSParserFilter)::: When the application provides a filter, the parser will call out to the filter at the completion of the construction of each Element node:::if->new->Stack<>
DOMParserImpl#setParameter(String, Object):::Set parameters and properties:::if->state->booleanValue->try->if->name->equalsIgnoreCase->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->if->msg->DOMMessageFormatter->new->ObjectArr->formatMessage->throw->new->DOMException->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->if->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->if->msg->DOMMessageFormatter->new->ObjectArr->formatMessage->throw->new->DOMException->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->if->fConfiguration->setFeature->fConfiguration->setFeature->if->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->if->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->else->if->name->equalsIgnoreCase->fConfiguration->setFeature->fConfiguration->setProperty->else->normalizedName->if->name->equals->else->if->name->equals->else->name->toLowerCase->fConfiguration->setFeature->catch->msg->DOMMessageFormatter->new->ObjectArr->formatMessage->throw->new->DOMException->finally->else->if->name->equalsIgnoreCase->if->try->new->DOMErrorHandlerWrapper->fConfiguration->setProperty->catch->finally->else->msg->DOMMessageFormatter->new->ObjectArr->formatMessage->throw->new->DOMException->else->if->name->equalsIgnoreCase->if->try->fConfiguration->new->DOMEntityResolverWrapper->setProperty->catch->finally->else->msg->DOMMessageFormatter->new->ObjectArr->formatMessage->throw->new->DOMException->else->if->name->equalsIgnoreCase->if->try->if->fConfiguration->setProperty->else->t->new->StringTokenizer->if->t->hasMoreTokens->locations->new->ArrayList<>->locations->t->nextToken->add->while->t->hasMoreTokens->locations->t->nextToken->add->fConfiguration->locations->toArray->setProperty->else->fConfiguration->setProperty->catch->finally->else->msg->DOMMessageFormatter->new->ObjectArr->formatMessage->throw->new->DOMException->else->if->name->equalsIgnoreCase->if->try->if->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setProperty->else->if->value->equals->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setProperty->else->if->value->equals->fConfiguration->setFeature->fConfiguration->setFeature->fConfiguration->setProperty->catch->finally->else->msg->DOMMessageFormatter->new->ObjectArr->formatMessage->throw->new->DOMException->else->if->name->equalsIgnoreCase->fConfiguration->setProperty->else->normalizedName->name->toLowerCase->try->fConfiguration->setProperty->return->catch->finally->try->if->name->equals->else->if->name->equals->fConfiguration->getFeature->throw->newTypeMismatchError->catch->finally->throw->newFeatureNotFoundError
DOMParserImpl#getParameter(String):::Look up the value of a feature or a property.:::if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->infoset->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->fConfiguration->getFeature->return->else->if->name->equalsIgnoreCase->return->fConfiguration->getFeature->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->return->fConfiguration->name->toLowerCase->getFeature->else->if->name->equalsIgnoreCase->if->return->fErrorHandler->getErrorHandler->return->else->if->name->equalsIgnoreCase->try->entityResolver->fConfiguration->getProperty->if->return->getEntityResolver->return->catch->finally->else->if->name->equalsIgnoreCase->return->fConfiguration->getProperty->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->fConfiguration->getProperty->else->if->name->equalsIgnoreCase->return->fConfiguration->getProperty->else->normalizedName->if->name->equals->else->if->name->equals->else->name->toLowerCase->try->return->fConfiguration->getFeature->catch->finally->try->return->fConfiguration->getProperty->catch->finally->throw->newFeatureNotFoundError->return
DOMParserImpl#getParameterNames()::: DOM Level 3 CR - Experimental:::if->parameters->new->ArrayList<>->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->parameters->add->new->DOMStringListImpl->return
DOMParserImpl#parseURI(String):::Parse an XML document from a location identified by an URI reference:::if->msg->DOMMessageFormatter->formatMessage->throw->new->DOMException->source->new->XMLInputSource->try->Thread->currentThread->parse->if->currentThread->isInterrupted->Thread->interrupted->catch->if->currentThread->isInterrupted->Thread->interrupted->if->restoreHandlers->return->if->if->error->new->DOMErrorImpl->e->getMessage->fErrorHandler->getErrorHandler->handleError->if->e->printStackTrace->throw->DOMUtil->createLSException->fillInStackTrace->finally->doc->getDocument->dropDocumentReferences->return
DOMParserImpl#parse(LSInput):::Parse an XML document from a resource identified by an LSInput.:::xmlInputSource->dom2xmlInputSource->if->msg->DOMMessageFormatter->formatMessage->throw->new->DOMException->try->Thread->currentThread->parse->if->currentThread->isInterrupted->Thread->interrupted->catch->if->currentThread->isInterrupted->Thread->interrupted->if->restoreHandlers->return->if->if->error->new->DOMErrorImpl->e->getMessage->fErrorHandler->getErrorHandler->handleError->if->e->printStackTrace->throw->DOMUtil->createLSException->fillInStackTrace->finally->doc->getDocument->dropDocumentReferences->return
DOMParserImpl#parseWithContext(LSInput, Node, short)::: Parse an XML document or fragment from a resource identified by an LSInput and insert the content into an existing document at the position epcified with the contextNode and action arguments:::throw->new->DOMException
DOMParserImpl#dom2xmlInputSource(LSInput):::NON-DOM: convert LSInput to XNIInputSource:::xis->if->is->getCharacterStream->is->getPublicId->is->getSystemId->is->getBaseURI->is->getCharacterStream->new->XMLInputSource->else->if->is->getByteStream->is->getPublicId->is->getSystemId->is->getBaseURI->is->getByteStream->is->getEncoding->new->XMLInputSource->else->if->is->getStringData->is->getStringData->length->is->getPublicId->is->getSystemId->is->getBaseURI->is->getStringData->new->StringReader->new->XMLInputSource->else->if->is->getSystemId->is->getSystemId->length->is->getPublicId->is->getPublicId->length->is->getPublicId->is->getSystemId->is->getBaseURI->new->XMLInputSource->else->if->error->new->DOMErrorImpl->fErrorHandler->getErrorHandler->handleError->throw->new->LSException->return
DOMParserImpl#startElement(QName, XMLAttributes, Augmentations):::The start of an element:::if->len->attributes->getLength->for->i->super->startElement
DTDConfiguration#setLocale(Locale):::Set the locale to use for messages.:::super->setLocale->fErrorReporter->setLocale
DTDConfiguration#setInputSource(XMLInputSource):::Sets the input source for the document to parse.:::
DTDConfiguration#parse(boolean):::Parses the document in a pull parsing fashion.:::if->try->reset->fScanner->setInputSource->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->try->return->fScanner->scanDocument->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally
DTDConfiguration#cleanup():::If the application decides to terminate parsing before the xml document is fully parsed, the application should call this method to free any resource allocated during parsing:::fEntityManager->closeReaders
DTDConfiguration#parse(XMLInputSource):::Parses the specified input source.:::if->throw->new->XNIException->try->setInputSource->parse->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->this->cleanup
DTDConfiguration#reset():::Reset all components before parsing.:::if->fValidationManager->reset->configurePipeline->super->reset
DTDConfiguration#configurePipeline():::Configures the pipeline.:::if->fScanner->setDocumentHandler->if->fFeatures->get->fDTDValidator->setDocumentHandler->fDTDValidator->setDocumentSource->fNamespaceBinder->setDocumentHandler->fNamespaceBinder->setDocumentSource->else->fDTDValidator->setDocumentHandler->fDTDValidator->setDocumentSource->else->if->fFeatures->get->fScanner->setDocumentHandler->fNamespaceBinder->setDocumentHandler->fNamespaceBinder->setDocumentSource->else->fScanner->setDocumentHandler->configureDTDPipeline
DTDConfiguration#checkFeature(String):::Check a feature:::if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->return->super->checkFeature
DTDConfiguration#checkProperty(String):::Check a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->return->super->checkProperty
DTDConfiguration#createEntityManager():::Creates an entity manager.:::return->new->XMLEntityManager
DTDConfiguration#createErrorReporter():::Creates an error reporter.:::return->new->XMLErrorReporter
DTDConfiguration#createDocumentScanner():::Create a document scanner.:::return->new->XMLDocumentScannerImpl
DTDConfiguration#createDTDScanner():::Create a DTD scanner.:::return->new->XMLDTDScannerImpl
DTDConfiguration#createDTDProcessor():::Create a DTD loader .:::return->new->XMLDTDProcessor
DTDConfiguration#createDTDValidator():::Create a DTD validator.:::return->new->XMLDTDValidator
DTDConfiguration#createNamespaceBinder():::Create a namespace binder.:::return->new->XMLNamespaceBinder
DTDConfiguration#createDatatypeValidatorFactory():::Create a datatype validator factory.:::return->DTDDVFactory->getInstance
DTDParser#getDTDGrammar():::getDTDGrammar:::return
DTDParser#startEntity(String, String, String, String):::This method notifies of the start of an entity:::
DTDParser#textDecl(String, String):::Notifies of the presence of a TextDecl line in an entity:::
DTDParser#startDTD(XMLLocator, Augmentations):::The start of the DTD.:::
DTDParser#comment(XMLString, Augmentations):::A comment.:::
DTDParser#processingInstruction(String, XMLString, Augmentations):::A processing instruction:::
DTDParser#startExternalSubset(XMLResourceIdentifier, Augmentations):::The start of the external subset.:::
DTDParser#endExternalSubset(Augmentations):::The end of the external subset.:::
DTDParser#elementDecl(String, String, Augmentations):::An element declaration.:::
DTDParser#startAttlist(String, Augmentations):::The start of an attribute list.:::
DTDParser#attributeDecl(String, String, String, String[], String, XMLString, XMLString, Augmentations):::An attribute declaration.:::
DTDParser#endAttlist(Augmentations):::The end of an attribute list.:::
DTDParser#internalEntityDecl(String, XMLString, XMLString, Augmentations):::An internal entity declaration.:::
DTDParser#externalEntityDecl(String, XMLResourceIdentifier, Augmentations):::An external entity declaration.:::
DTDParser#unparsedEntityDecl(String, XMLResourceIdentifier, String, Augmentations):::An unparsed entity declaration.:::
DTDParser#notationDecl(String, XMLResourceIdentifier, Augmentations):::A notation declaration:::
DTDParser#startConditional(short, Augmentations):::The start of a conditional section.:::
DTDParser#endConditional(Augmentations):::The end of a conditional section.:::
DTDParser#endDTD(Augmentations):::The end of the DTD.:::
DTDParser#endEntity(String, Augmentations):::This method notifies the end of an entity:::
DTDParser#startContentModel(String, short):::The start of a content model:::
DTDParser#mixedElement(String):::A referenced element in a mixed content model:::
DTDParser#childrenStartGroup():::The start of a children group:::
DTDParser#childrenElement(String):::A referenced element in a children content model.:::
DTDParser#childrenSeparator(short):::The separator between choices or sequences of a children content model:::
DTDParser#childrenOccurrence(short):::The occurrence count for a child in a children content model:::
DTDParser#childrenEndGroup():::The end of a children group:::
DTDParser#endContentModel():::The end of a content model.:::
IntegratedParserConfiguration#configurePipeline():::Configures the pipeline.:::setProperty->configureDTDPipeline->if->fFeatures->get->fProperties->put->fProperties->put->if->fProperties->put->fNamespaceScanner->setDTDValidator->fNamespaceScanner->setDocumentHandler->fDTDValidator->setDocumentSource->fDTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource->else->fNamespaceScanner->setDocumentHandler->fNamespaceScanner->setDTDValidator->if->fDocumentHandler->setDocumentSource->else->fProperties->put->if->fProperties->put->fNonNSScanner->setDocumentHandler->fNonNSDTDValidator->setDocumentSource->fNonNSDTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource->else->fScanner->setDocumentHandler->if->fDocumentHandler->setDocumentSource->if->fFeatures->get->if->new->XMLSchemaValidator->fProperties->put->addComponent->if->fErrorReporter->getMessageFormatter->xmft->new->XSMessageFormatter->fErrorReporter->putMessageFormatter->fLastComponent->setDocumentHandler->fSchemaValidator->setDocumentSource->fSchemaValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource
IntegratedParserConfiguration#createDocumentScanner():::Create a document scanner: this scanner performs namespace binding:::new->XMLNSDocumentScannerImpl->return
IntegratedParserConfiguration#createDTDValidator():::Create a DTD validator: this validator performs namespace binding.:::return->new->XMLNSDTDValidator
NonValidatingConfiguration#setLocale(Locale):::Set the locale to use for messages.:::super->setLocale->fErrorReporter->setLocale
NonValidatingConfiguration#setInputSource(XMLInputSource):::Sets the input source for the document to parse.:::
NonValidatingConfiguration#parse(boolean):::Parses the document in a pull parsing fashion.:::if->try->reset->fScanner->setInputSource->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->try->return->fScanner->scanDocument->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally
NonValidatingConfiguration#cleanup():::If the application decides to terminate parsing before the xml document is fully parsed, the application should call this method to free any resource allocated during parsing:::fEntityManager->closeReaders
NonValidatingConfiguration#parse(XMLInputSource):::Parses the specified input source.:::if->throw->new->XNIException->try->setInputSource->parse->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->this->cleanup
NonValidatingConfiguration#reset():::Reset all components before parsing.:::if->fValidationManager->reset->configurePipeline->super->reset
NonValidatingConfiguration#configurePipeline():::Configures the pipeline.:::if->fFeatures->get->if->new->XMLNSDocumentScannerImpl->addComponent->fProperties->put->fNamespaceScanner->setDTDValidator->else->if->new->XMLDocumentScannerImpl->addComponent->fProperties->put->fScanner->setDocumentHandler->if->fDTDScanner->setDTDHandler->fDTDScanner->setDTDContentModelHandler
NonValidatingConfiguration#checkFeature(String):::Check a feature:::if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->return->super->checkFeature
NonValidatingConfiguration#checkProperty(String):::Check a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->return->super->checkProperty
NonValidatingConfiguration#createEntityManager():::Creates an entity manager.:::return->new->XMLEntityManager
NonValidatingConfiguration#createErrorReporter():::Creates an error reporter.:::return->new->XMLErrorReporter
NonValidatingConfiguration#createDocumentScanner():::Create a document scanner.:::return
NonValidatingConfiguration#createDTDScanner():::Create a DTD scanner.:::return->new->XMLDTDScannerImpl
NonValidatingConfiguration#createDatatypeValidatorFactory():::Create a datatype validator factory.:::return->DTDDVFactory->getInstance
SAXParser#setProperty(String, Object):::Sets the particular property in the underlying implementation of org.xml.sax.XMLReader.:::if->name->equals->XMLSecurityManager->convert->super->setProperty->return->if->name->equals->if->new->XMLSecurityPropertyManager->else->super->setProperty->return->if->new->XMLSecurityManager->super->setProperty->if->new->XMLSecurityPropertyManager->super->setProperty->index->securityPropertyManager->getIndex->if->securityPropertyManager->setValue->else->if->securityManager->setLimit->super->setProperty
StandardParserConfiguration#configurePipeline():::Configures the pipeline.:::super->configurePipeline->if->getFeature->if->new->XMLSchemaValidator->fProperties->put->addComponent->if->fErrorReporter->getMessageFormatter->xmft->new->XSMessageFormatter->fErrorReporter->putMessageFormatter->fNamespaceBinder->setDocumentHandler->fSchemaValidator->setDocumentHandler->fSchemaValidator->setDocumentSource
StandardParserConfiguration#checkFeature(String):::Check a feature:::if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->return->super->checkFeature
StandardParserConfiguration#checkProperty(String):::Check a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->length->propertyId->endsWith->return->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->return->super->checkProperty
XIncludeAwareParserConfiguration#configurePipeline():::Configures the pipeline.:::super->configurePipeline->if->if->new->XIncludeHandler->setProperty->addCommonComponent->fXIncludeHandler->reset->if->if->new->XIncludeNamespaceSupport->setProperty->fDTDScanner->setDTDHandler->fDTDProcessor->setDTDSource->fDTDProcessor->setDTDHandler->fXIncludeHandler->setDTDSource->fXIncludeHandler->setDTDHandler->if->fDTDHandler->setDTDSource->prev->if->fFeatures->get->fSchemaValidator->getDocumentSource->else->next->prev->getDocumentHandler->prev->setDocumentHandler->fXIncludeHandler->setDocumentSource->if->fXIncludeHandler->setDocumentHandler->next->setDocumentSource->else->if->setProperty
XIncludeParserConfiguration#configurePipeline():::Configures the pipeline.:::super->configurePipeline->fDTDScanner->setDTDHandler->fDTDProcessor->setDTDSource->fDTDProcessor->setDTDHandler->fXIncludeHandler->setDTDSource->fXIncludeHandler->setDTDHandler->if->fDTDHandler->setDTDSource->prev->if->fFeatures->get->fSchemaValidator->getDocumentSource->else->if->next->prev->getDocumentHandler->prev->setDocumentHandler->fXIncludeHandler->setDocumentSource->if->fXIncludeHandler->setDocumentHandler->next->setDocumentSource->else->setDocumentHandler
XML11Configuration#setInputSource(XMLInputSource):::Sets the input source for the document to parse.:::
XML11Configuration#setLocale(Locale):::Set the locale to use for messages.:::fErrorReporter->setLocale
XML11Configuration#setDocumentHandler(XMLDocumentHandler):::Sets the document handler on the last component in the pipeline to receive information about the document.:::if->fLastComponent->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11Configuration#getDocumentHandler():::Returns the registered document handler.:::return
XML11Configuration#setDTDHandler(XMLDTDHandler):::Sets the DTD handler.:::
XML11Configuration#getDTDHandler():::Returns the registered DTD handler.:::return
XML11Configuration#setDTDContentModelHandler(XMLDTDContentModelHandler):::Sets the DTD content model handler.:::
XML11Configuration#getDTDContentModelHandler():::Returns the registered DTD content model handler.:::return
XML11Configuration#setEntityResolver(XMLEntityResolver):::Sets the resolver used to resolve external entities:::fProperties->put
XML11Configuration#getEntityResolver():::Return the current entity resolver.:::return->fProperties->get
XML11Configuration#setErrorHandler(XMLErrorHandler):::Allow an application to register an error event handler:::fProperties->put
XML11Configuration#getErrorHandler():::Return the current error handler.:::return->fProperties->get
XML11Configuration#cleanup():::If the application decides to terminate parsing before the xml document is fully parsed, the application should call this method to free any resource allocated during parsing:::fEntityManager->closeReaders
XML11Configuration#parse(XMLInputSource):::Parses the specified input source.:::if->throw->new->XNIException->try->setInputSource->parse->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->this->cleanup
XML11Configuration#getFeatureState(String):::Returns the state of a feature.:::if->featureId->equals->return->FeatureState->is->return->super->getFeatureState
XML11Configuration#setFeature(String, boolean):::Set the state of a feature:::foreach->c->setFeature->foreach->c->setFeature->foreach->try->c->setFeature->catch->finally->super->setFeature
XML11Configuration#getPropertyState(String):::Returns the value of a property.:::if->LOCALE->equals->return->PropertyState->getLocale->is->return->super->getPropertyState
XML11Configuration#setProperty(String, Object):::setProperty:::if->LOCALE->equals->setLocale->foreach->c->setProperty->foreach->c->setProperty->foreach->try->c->setProperty->catch->finally->super->setProperty
XML11Configuration#getLocale():::Returns the locale.:::return
XML11Configuration#reset():::reset all XML 1.0 components before parsing and namespace context:::count->fComponents->size->for->i
XML11Configuration#resetCommon():::reset all common components before parsing:::count->fCommonComponents->size->for->i
XML11Configuration#resetXML11():::reset all components before parsing and namespace context:::count->fXML11Components->size->for->i
XML11Configuration#configureXML11Pipeline()::: Configures the XML 1.1 pipeline:::if->setProperty->if->setProperty->setProperty->fXML11DTDScanner->setDTDHandler->fXML11DTDProcessor->setDTDSource->fXML11DTDProcessor->setDTDHandler->if->fDTDHandler->setDTDSource->fXML11DTDScanner->setDTDContentModelHandler->fXML11DTDProcessor->setDTDContentModelSource->fXML11DTDProcessor->setDTDContentModelHandler->if->fDTDContentModelHandler->setDTDContentModelSource->if->fFeatures->get->if->setProperty->setProperty->fXML11NSDocScanner->setDTDValidator->fXML11NSDocScanner->setDocumentHandler->fXML11NSDTDValidator->setDocumentSource->fXML11NSDTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource->else->if->new->XML11DocumentScannerImpl->addXML11Component->new->XML11DTDValidator->addXML11Component->if->setProperty->setProperty->fXML11DocScanner->setDocumentHandler->fXML11DTDValidator->setDocumentSource->fXML11DTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource->if->fFeatures->get->if->new->XMLSchemaValidator->setProperty->addCommonComponent->fSchemaValidator->reset->if->fErrorReporter->getMessageFormatter->xmft->new->XSMessageFormatter->fErrorReporter->putMessageFormatter->fLastComponent->setDocumentHandler->fSchemaValidator->setDocumentSource->fSchemaValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11Configuration#configurePipeline():::Configures the pipeline.:::if->setProperty->if->setProperty->setProperty->fDTDScanner->setDTDHandler->fDTDProcessor->setDTDSource->fDTDProcessor->setDTDHandler->if->fDTDHandler->setDTDSource->fDTDScanner->setDTDContentModelHandler->fDTDProcessor->setDTDContentModelSource->fDTDProcessor->setDTDContentModelHandler->if->fDTDContentModelHandler->setDTDContentModelSource->if->fFeatures->get->if->setProperty->setProperty->fNamespaceScanner->setDTDValidator->fNamespaceScanner->setDocumentHandler->fDTDValidator->setDocumentSource->fDTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource->else->if->new->XMLDocumentScannerImpl->new->XMLDTDValidator->addComponent->addComponent->if->setProperty->setProperty->fNonNSScanner->setDocumentHandler->fNonNSDTDValidator->setDocumentSource->fNonNSDTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource->if->fFeatures->get->if->new->XMLSchemaValidator->setProperty->addCommonComponent->fSchemaValidator->reset->if->fErrorReporter->getMessageFormatter->xmft->new->XSMessageFormatter->fErrorReporter->putMessageFormatter->fLastComponent->setDocumentHandler->fSchemaValidator->setDocumentSource->fSchemaValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11Configuration#checkFeature(String):::Check a feature:::if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->return->super->checkFeature
XML11Configuration#checkProperty(String):::Check a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->length->propertyId->endsWith->return->if->length->propertyId->endsWith->return->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->return->super->checkProperty
XML11Configuration#addComponent(XMLComponent):::Adds a component to the parser configuration:::if->fComponents->contains->return->fComponents->add->addRecognizedParamsAndSetDefaults
XML11Configuration#addCommonComponent(XMLComponent):::Adds common component to the parser configuration:::if->fCommonComponents->contains->return->fCommonComponents->add->addRecognizedParamsAndSetDefaults
XML11Configuration#addXML11Component(XMLComponent):::Adds an XML 1.1 component to the parser configuration:::if->fXML11Components->contains->return->fXML11Components->add->addRecognizedParamsAndSetDefaults
XML11Configuration#addRecognizedParamsAndSetDefaults(XMLComponent):::Adds all of the component's recognized features and properties to the list of default recognized features and properties, and sets default values on the configuration for features and properties which were previously absent from the configuration.:::recognizedFeatures->component->getRecognizedFeatures->addRecognizedFeatures->recognizedProperties->component->getRecognizedProperties->addRecognizedProperties->if->for->i->if->for->i
XML11Configuration#getFeatureState0(String):::Returns the state of a feature:::return->super->getFeatureState
XML11DTDConfiguration#setInputSource(XMLInputSource):::Sets the input source for the document to parse.:::
XML11DTDConfiguration#setLocale(Locale):::Set the locale to use for messages.:::fErrorReporter->setLocale
XML11DTDConfiguration#setDocumentHandler(XMLDocumentHandler):::Sets the document handler on the last component in the pipeline to receive information about the document.:::if->fLastComponent->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11DTDConfiguration#getDocumentHandler():::Returns the registered document handler.:::return
XML11DTDConfiguration#setDTDHandler(XMLDTDHandler):::Sets the DTD handler.:::
XML11DTDConfiguration#getDTDHandler():::Returns the registered DTD handler.:::return
XML11DTDConfiguration#setDTDContentModelHandler(XMLDTDContentModelHandler):::Sets the DTD content model handler.:::
XML11DTDConfiguration#getDTDContentModelHandler():::Returns the registered DTD content model handler.:::return
XML11DTDConfiguration#setEntityResolver(XMLEntityResolver):::Sets the resolver used to resolve external entities:::fProperties->put
XML11DTDConfiguration#getEntityResolver():::Return the current entity resolver.:::return->fProperties->get
XML11DTDConfiguration#setErrorHandler(XMLErrorHandler):::Allow an application to register an error event handler:::fProperties->put
XML11DTDConfiguration#getErrorHandler():::Return the current error handler.:::return->fProperties->get
XML11DTDConfiguration#cleanup():::If the application decides to terminate parsing before the xml document is fully parsed, the application should call this method to free any resource allocated during parsing:::fEntityManager->closeReaders
XML11DTDConfiguration#parse(XMLInputSource):::Parses the specified input source.:::if->throw->new->XNIException->try->setInputSource->parse->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->this->cleanup
XML11DTDConfiguration#getFeatureState(String):::Returns the state of a feature.:::if->featureId->equals->return->FeatureState->is->return->super->getFeatureState
XML11DTDConfiguration#setFeature(String, boolean):::Set the state of a feature:::foreach->c->setFeature->foreach->c->setFeature->foreach->try->c->setFeature->catch->finally->super->setFeature
XML11DTDConfiguration#setProperty(String, Object):::setProperty:::foreach->c->setProperty->foreach->c->setProperty->foreach->try->c->setProperty->catch->finally->super->setProperty
XML11DTDConfiguration#getLocale():::Returns the locale.:::return
XML11DTDConfiguration#reset():::reset all XML 1.0 components before parsing and namespace context:::foreach->c->reset
XML11DTDConfiguration#resetCommon():::reset all common components before parsing:::foreach->c->reset
XML11DTDConfiguration#resetXML11():::reset all components before parsing and namespace context:::foreach->c->reset
XML11DTDConfiguration#configureXML11Pipeline()::: Configures the XML 1.1 pipeline:::if->setProperty->if->setProperty->setProperty->fXML11DTDScanner->setDTDHandler->fXML11DTDProcessor->setDTDSource->fXML11DTDProcessor->setDTDHandler->if->fDTDHandler->setDTDSource->fXML11DTDScanner->setDTDContentModelHandler->fXML11DTDProcessor->setDTDContentModelSource->fXML11DTDProcessor->setDTDContentModelHandler->if->fDTDContentModelHandler->setDTDContentModelSource->if->fFeatures->get->if->setProperty->setProperty->fXML11NSDocScanner->setDTDValidator->fXML11NSDocScanner->setDocumentHandler->fXML11NSDTDValidator->setDocumentSource->fXML11NSDTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource->else->if->new->XML11DocumentScannerImpl->addXML11Component->new->XML11DTDValidator->addXML11Component->if->setProperty->setProperty->fXML11DocScanner->setDocumentHandler->fXML11DTDValidator->setDocumentSource->fXML11DTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11DTDConfiguration#configurePipeline():::Configures the pipeline.:::if->setProperty->if->setProperty->setProperty->fDTDScanner->setDTDHandler->fDTDProcessor->setDTDSource->fDTDProcessor->setDTDHandler->if->fDTDHandler->setDTDSource->fDTDScanner->setDTDContentModelHandler->fDTDProcessor->setDTDContentModelSource->fDTDProcessor->setDTDContentModelHandler->if->fDTDContentModelHandler->setDTDContentModelSource->if->fFeatures->get->if->setProperty->setProperty->fNamespaceScanner->setDTDValidator->fNamespaceScanner->setDocumentHandler->fDTDValidator->setDocumentSource->fDTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource->else->if->new->XMLDocumentScannerImpl->new->XMLDTDValidator->addComponent->addComponent->if->setProperty->setProperty->fNonNSScanner->setDocumentHandler->fNonNSDTDValidator->setDocumentSource->fNonNSDTDValidator->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11DTDConfiguration#checkFeature(String):::Check a feature:::if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->return->super->checkFeature
XML11DTDConfiguration#checkProperty(String):::Check a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->return->super->checkProperty
XML11DTDConfiguration#addComponent(XMLComponent):::Adds a component to the parser configuration:::if->fComponents->contains->return->fComponents->add->addRecognizedParamsAndSetDefaults
XML11DTDConfiguration#addCommonComponent(XMLComponent):::Adds common component to the parser configuration:::if->fCommonComponents->contains->return->fCommonComponents->add->addRecognizedParamsAndSetDefaults
XML11DTDConfiguration#addXML11Component(XMLComponent):::Adds an XML 1.1 component to the parser configuration:::if->fXML11Components->contains->return->fXML11Components->add->addRecognizedParamsAndSetDefaults
XML11DTDConfiguration#addRecognizedParamsAndSetDefaults(XMLComponent):::Adds all of the component's recognized features and properties to the list of default recognized features and properties, and sets default values on the configuration for features and properties which were previously absent from the configuration.:::recognizedFeatures->component->getRecognizedFeatures->addRecognizedFeatures->recognizedProperties->component->getRecognizedProperties->addRecognizedProperties->if->for->i->if->for->i
XML11NonValidatingConfiguration#setInputSource(XMLInputSource):::Sets the input source for the document to parse.:::
XML11NonValidatingConfiguration#setLocale(Locale):::Set the locale to use for messages.:::fErrorReporter->setLocale
XML11NonValidatingConfiguration#setDocumentHandler(XMLDocumentHandler):::Sets the document handler on the last component in the pipeline to receive information about the document.:::if->fLastComponent->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11NonValidatingConfiguration#getDocumentHandler():::Returns the registered document handler.:::return
XML11NonValidatingConfiguration#setDTDHandler(XMLDTDHandler):::Sets the DTD handler.:::
XML11NonValidatingConfiguration#getDTDHandler():::Returns the registered DTD handler.:::return
XML11NonValidatingConfiguration#setDTDContentModelHandler(XMLDTDContentModelHandler):::Sets the DTD content model handler.:::
XML11NonValidatingConfiguration#getDTDContentModelHandler():::Returns the registered DTD content model handler.:::return
XML11NonValidatingConfiguration#setEntityResolver(XMLEntityResolver):::Sets the resolver used to resolve external entities:::fProperties->put
XML11NonValidatingConfiguration#getEntityResolver():::Return the current entity resolver.:::return->fProperties->get
XML11NonValidatingConfiguration#setErrorHandler(XMLErrorHandler):::Allow an application to register an error event handler:::fProperties->put
XML11NonValidatingConfiguration#getErrorHandler():::Return the current error handler.:::return->fProperties->get
XML11NonValidatingConfiguration#cleanup():::If the application decides to terminate parsing before the xml document is fully parsed, the application should call this method to free any resource allocated during parsing:::fEntityManager->closeReaders
XML11NonValidatingConfiguration#parse(XMLInputSource):::Parses the specified input source.:::if->throw->new->XNIException->try->setInputSource->parse->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->this->cleanup
XML11NonValidatingConfiguration#getFeatureState(String):::Returns the state of a feature.:::if->featureId->equals->return->FeatureState->is->return->super->getFeatureState
XML11NonValidatingConfiguration#setFeature(String, boolean):::Set the state of a feature:::foreach->c->setFeature->foreach->c->setFeature->foreach->try->c->setFeature->catch->finally->super->setFeature
XML11NonValidatingConfiguration#setProperty(String, Object):::setProperty:::foreach->c->setProperty->foreach->c->setProperty->foreach->try->c->setProperty->catch->finally->super->setProperty
XML11NonValidatingConfiguration#getLocale():::Returns the locale.:::return
XML11NonValidatingConfiguration#reset():::reset all XML 1.0 components before parsing and namespace context:::foreach->c->reset
XML11NonValidatingConfiguration#resetCommon():::reset all common components before parsing:::foreach->c->reset
XML11NonValidatingConfiguration#resetXML11():::reset all components before parsing and namespace context:::foreach->c->reset
XML11NonValidatingConfiguration#configureXML11Pipeline()::: Configures the XML 1.1 pipeline:::if->setProperty->if->setProperty->fXML11DTDScanner->setDTDHandler->fXML11DTDScanner->setDTDContentModelHandler->if->fFeatures->get->if->setProperty->fXML11NSDocScanner->setDTDValidator->fXML11NSDocScanner->setDocumentHandler->if->fDocumentHandler->setDocumentSource->else->if->new->XML11DocumentScannerImpl->addXML11Component->if->setProperty->fXML11DocScanner->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11NonValidatingConfiguration#configurePipeline():::Configures the pipeline.:::if->setProperty->if->setProperty->fDTDScanner->setDTDHandler->fDTDScanner->setDTDContentModelHandler->if->fFeatures->get->if->setProperty->fNamespaceScanner->setDTDValidator->fNamespaceScanner->setDocumentHandler->if->fDocumentHandler->setDocumentSource->else->if->new->XMLDocumentScannerImpl->addComponent->if->setProperty->fNonNSScanner->setDocumentHandler->if->fDocumentHandler->setDocumentSource
XML11NonValidatingConfiguration#checkFeature(String):::Check a feature:::if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->return->super->checkFeature
XML11NonValidatingConfiguration#checkProperty(String):::Check a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->return->super->checkProperty
XML11NonValidatingConfiguration#addComponent(XMLComponent):::Adds a component to the parser configuration:::if->fComponents->contains->return->fComponents->add->addRecognizedParamsAndSetDefaults
XML11NonValidatingConfiguration#addCommonComponent(XMLComponent):::Adds common component to the parser configuration:::if->fCommonComponents->contains->return->fCommonComponents->add->addRecognizedParamsAndSetDefaults
XML11NonValidatingConfiguration#addXML11Component(XMLComponent):::Adds an XML 1.1 component to the parser configuration:::if->fXML11Components->contains->return->fXML11Components->add->addRecognizedParamsAndSetDefaults
XML11NonValidatingConfiguration#addRecognizedParamsAndSetDefaults(XMLComponent):::Adds all of the component's recognized features and properties to the list of default recognized features and properties, and sets default values on the configuration for features and properties which were previously absent from the configuration.:::recognizedFeatures->component->getRecognizedFeatures->addRecognizedFeatures->recognizedProperties->component->getRecognizedProperties->addRecognizedProperties->if->for->i->if->for->i
XMLGrammarCachingConfiguration#parseGrammar(String, String):::Parse a grammar from a location identified by an URI:::source->new->XMLInputSource->return->parseGrammar
XMLGrammarCachingConfiguration#parseGrammar(String, XMLInputSource):::Parse a grammar from a location identified by an XMLInputSource:::if->type->equals->return->parseXMLSchema->else->if->type->equals->return->parseDTD->return
XMLGrammarPreparser#preparseGrammar(String, XMLInputSource):::Parse a grammar from a location identified by an XMLInputSource:::if->fLoaders->containsKey->gl->fLoaders->get->gl->setProperty->gl->setProperty->gl->setProperty->if->try->gl->setProperty->catch->finally->return->gl->loadGrammar->return
XMLGrammarPreparser#setLocale(Locale):::Set the locale to use for messages.:::fErrorReporter->setLocale
XMLGrammarPreparser#getLocale():::Return the Locale the XMLGrammarLoader is using.:::return
XMLGrammarPreparser#setErrorHandler(XMLErrorHandler):::Sets the error handler.:::fErrorReporter->setProperty
XMLGrammarPreparser#getErrorHandler():::Returns the registered error handler.:::return->fErrorReporter->getErrorHandler
XMLGrammarPreparser#setEntityResolver(XMLEntityResolver):::Sets the entity resolver.:::
XMLGrammarPreparser#getEntityResolver():::Returns the registered entity resolver.:::return
XMLGrammarPreparser#setGrammarPool(XMLGrammarPool):::Sets the grammar pool.:::
XMLGrammarPreparser#getGrammarPool():::Returns the registered grammar pool.:::return
XMLParser#getFeature(String):::Query the state of a feature.:::return->fConfiguration->getFeature
XMLParser#parse(XMLInputSource):::parse:::if->new->XMLSecurityManager->fConfiguration->setProperty->if->new->XMLSecurityPropertyManager->fConfiguration->setProperty->reset->fConfiguration->parse
XMLParser#reset():::reset all components before parsing:::
XPointerParserConfiguration#configurePipeline():::Configures the pipeline.:::super->configurePipeline->fDTDScanner->setDTDHandler->fDTDProcessor->setDTDSource->fDTDProcessor->setDTDHandler->fXIncludeHandler->setDTDSource->fXIncludeHandler->setDTDHandler->fXPointerHandler->setDTDSource->fXPointerHandler->setDTDHandler->if->fDTDHandler->setDTDSource->prev->if->fFeatures->get->fSchemaValidator->getDocumentSource->else->next->prev->getDocumentHandler->prev->setDocumentHandler->fXIncludeHandler->setDocumentSource->if->fXIncludeHandler->setDocumentHandler->next->setDocumentSource->fXIncludeHandler->setDocumentHandler->fXPointerHandler->setDocumentSource
