AheadOfTimeCompilationTest#getStaticFinalObject()::: ahead of time compilation test get static final object:::return
AheadOfTimeCompilationTest#setUp()::: ahead of time compilation test set up:::Assume->getTarget->assumeFalse
AheadOfTimeCompilationTest#testStaticFinalObjectAOT()::: ahead of time compilation test test static final object t:::result->compile->getConstantNodes->count->assertDeepEquals->constantStamp->getConstantNodes->first->stamp->Assert->constantStamp->toString->assertTrue->expected->runtime->getVMConfig->result->getNodes->filter->count->assertDeepEquals
AheadOfTimeCompilationTest#testStaticFinalObject()::: ahead of time compilation test test static final object:::result->compile->getConstantNodes->count->assertDeepEquals->getConstantNodes->first->getStackKind->assertDeepEquals->result->getNodes->filter->count->assertDeepEquals
AheadOfTimeCompilationTest#getClassObject()::: ahead of time compilation test get class object:::return
AheadOfTimeCompilationTest#testClassObjectAOT()::: ahead of time compilation test test class object t:::result->compile->filter->getConstantNodes->filter->count->assertDeepEquals->type->getMetaAccess->lookupJavaType->type->klass->filter->first->asConstant->assertDeepEquals->expected->runtime->getVMConfig->result->getNodes->filter->count->assertDeepEquals
AheadOfTimeCompilationTest#testClassObject()::: ahead of time compilation test test class object:::result->compile->filter->getConstantNodes->filter->count->assertDeepEquals->c->filter->first->asJavaConstant->Assert->getSnippetReflection->asObject->assertEquals->result->getNodes->filter->count->assertDeepEquals
AheadOfTimeCompilationTest#getPrimitiveClassObject()::: ahead of time compilation test get primitive class object:::return
AheadOfTimeCompilationTest#testPrimitiveClassObjectAOT()::: ahead of time compilation test test primitive class object t:::result->compile->filter->getConstantNodes->filter->count->assertDeepEquals->constantStamp->filter->first->stamp->Assert->assertTrue->expected->runtime->getVMConfig->result->getNodes->filter->count->assertDeepEquals
AheadOfTimeCompilationTest#testPrimitiveClassObject()::: ahead of time compilation test test primitive class object:::result->compile->filter->getConstantNodes->filter->count->assertDeepEquals->c->filter->first->asJavaConstant->Assert->getSnippetReflection->asObject->assertEquals->result->getNodes->filter->count->assertDeepEquals
AheadOfTimeCompilationTest#getStringObject()::: ahead of time compilation test get string object:::return
AheadOfTimeCompilationTest#testStringObjectAOT()::: ahead of time compilation test test string object t:::testStringObjectCommon
AheadOfTimeCompilationTest#testStringObject()::: ahead of time compilation test test string object:::testStringObjectCommon
AheadOfTimeCompilationTest#testStringObjectCommon(boolean)::: ahead of time compilation test test string object common:::result->compile->filter->getConstantNodes->filter->count->assertDeepEquals->c->filter->first->asJavaConstant->Assert->getSnippetReflection->asObject->assertEquals->result->getNodes->filter->count->assertDeepEquals->result->getNodes->filter->count->assertDeepEquals
AheadOfTimeCompilationTest#getBoxedBoolean()::: ahead of time compilation test get boxed boolean:::return->Boolean->valueOf
AheadOfTimeCompilationTest#testBoxedBooleanAOT()::: ahead of time compilation test test boxed boolean t:::result->compile->result->getNodes->filter->count->assertDeepEquals->result->getNodes->count->assertDeepEquals->getConstantNodes->count->assertDeepEquals->constant->getConstantNodes->first->constant->getStackKind->assertDeepEquals->c->constant->asJavaConstant->Assert->getSnippetReflection->asObject->assertEquals
AheadOfTimeCompilationTest#testBoxedBoolean()::: ahead of time compilation test test boxed boolean:::result->compile->result->getNodes->filter->count->assertDeepEquals->result->getNodes->count->assertDeepEquals->getConstantNodes->count->assertDeepEquals->constant->getConstantNodes->first->constant->getStackKind->assertDeepEquals->c->constant->asJavaConstant->Assert->getSnippetReflection->asObject->assertEquals
AheadOfTimeCompilationTest#compile(String, boolean)::: ahead of time compilation test compile:::options->getInitialOptions->new->OptionValues->graph->parseEager->graph->method->compile->return
ArrayCopyIntrinsificationTest#getCode(ResolvedJavaMethod, StructuredGraph, boolean, boolean, OptionValues)::: array copy intrinsification test get code:::graph->parseForCompile->nodeCount->graph->getNodeCount->result->super->getCode->graphWasProcessed->graph->getNodeCount->if->if->foreach->graph->getNodes->if->invoke->Assert->invoke->callTarget->assertTrue->directCall->invoke->callTarget->callee->directCall->targetMethod->if->callee->getDeclaringClass->getMetaAccess->lookupJavaType->equals->callee->getName->equals->else->Assert->callee->toString->callee->getName->equals->assertTrue->Assert->getMetaAccess->lookupJavaType->callee->getDeclaringClass->equals->getMetaAccess->lookupJavaType->callee->getDeclaringClass->equals->assertTrue->else->found->foreach->graph->getNodes->if->invoke->directCall->invoke->callTarget->callee->directCall->targetMethod->if->callee->getDeclaringClass->getMetaAccess->lookupJavaType->equals->callee->getName->equals->else->fail->Assert->assertTrue->return
ArrayCopyIntrinsificationTest#test0()::: array copy intrinsification test test0:::new->Object->new->ObjectArr->test->new->ObjectArr->new->Object->test
ArrayCopyIntrinsificationTest#test1()::: array copy intrinsification test test1:::name->src->test->test->test->test
ArrayCopyIntrinsificationTest#testByte()::: array copy intrinsification test test byte:::src->testHelper
ArrayCopyIntrinsificationTest#testChar()::: array copy intrinsification test test char:::src->toCharArray->testHelper
ArrayCopyIntrinsificationTest#testShort()::: array copy intrinsification test test short:::src->testHelper
ArrayCopyIntrinsificationTest#testInt()::: array copy intrinsification test test int:::src->testHelper
ArrayCopyIntrinsificationTest#testFloat()::: array copy intrinsification test test float:::src->testHelper
ArrayCopyIntrinsificationTest#testLong()::: array copy intrinsification test test long:::src->testHelper
ArrayCopyIntrinsificationTest#testDouble()::: array copy intrinsification test test double:::src->testHelper
ArrayCopyIntrinsificationTest#testObject()::: array copy intrinsification test test object:::src->new->ArrayList<>->new->HashMap<>->testHelper
ArrayCopyIntrinsificationTest#testArrayStoreException():::Tests ArrayCopySnippets#arraycopyGenericSnippet with checkcast.:::src->new->ArrayList<>->new->HashMap<>->dst->new->CharSequenceArr->test
ArrayCopyIntrinsificationTest#testDisjointObject()::: array copy intrinsification test test disjoint object:::src1->test->src2->test
ArrayCopyIntrinsificationTest#testObjectExact()::: array copy intrinsification test test object exact:::src->testHelper
ArrayCopyIntrinsificationTest#newArray(Object, int)::: array copy intrinsification test new array:::return->Array->proto->getClass->getComponentType->newInstance
ArrayCopyIntrinsificationTest#testHelper(String, Object)::: array copy intrinsification test test helper:::srcLength->Array->getLength->newArray->test->foreach->new->intArr->newArray->test->newArray->test->newArray->test->if->test
ArrayCopyIntrinsificationTest#genericArraycopy(Object, int, Object, int, int)::: array copy intrinsification test generic arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#objectArraycopy(Object[], int, Object[], int, int)::: array copy intrinsification test object arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#objectArraycopyExact(Integer[], int, Integer[], int, int)::: array copy intrinsification test object arraycopy exact:::System->arraycopy->return
ArrayCopyIntrinsificationTest#booleanArraycopy(boolean[], int, boolean[], int, int)::: array copy intrinsification test boolean arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#byteArraycopy(byte[], int, byte[], int, int)::: array copy intrinsification test byte arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#charArraycopy(char[], int, char[], int, int)::: array copy intrinsification test char arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#shortArraycopy(short[], int, short[], int, int)::: array copy intrinsification test short arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#intArraycopy(int[], int, int[], int, int)::: array copy intrinsification test int arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#floatArraycopy(float[], int, float[], int, int)::: array copy intrinsification test float arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#longArraycopy(long[], int, long[], int, int)::: array copy intrinsification test long arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#doubleArraycopy(double[], int, double[], int, int)::: array copy intrinsification test double arraycopy:::System->arraycopy->return
ArrayCopyIntrinsificationTest#testCopyRows():::Test case derived from assertion while compiling  com.google.common.collect.ArrayTable(ArrayTable other).:::rows->Integer->valueOf->test
ArrayCopyIntrinsificationTest#copyRows(Object[][], int, Integer)::: array copy intrinsification test copy rows:::copy->new->ObjectArrs->for->i->rowCount->intValue->return
ArrayNewInstanceTest#data()::: array new instance test data:::parameters->new->ArrayList<>->classesToTest->new->Class<?>Arr->foreach->parameters->new->ObjectArr->add->parameters->new->ObjectArr->add->parameters->new->ObjectArr->add->parameters->new->ObjectArr->add->parameters->new->ObjectArr->add->parameters->new->ObjectArr->add->return
ArrayNewInstanceTest#newArray(Class, int, DeoptimizationBox)::: array new instance test new array:::result->Array->newInstance->GraalDirectives->inCompiledCode->return
ArrayNewInstanceTest#testNewArray()::: array new instance test test new array:::test->assertTrue
ArrayNewInstanceTest#newArrayInLoop(Class, int, int, DeoptimizationBox)::: array new instance test new array in loop:::o->for->i->GraalDirectives->inCompiledCode->return
ArrayNewInstanceTest#testNewArrayInLoop()::: array new instance test test new array in loop:::test->assertTrue
BigIntegerIntrinsicsTest#testMultiplyToLen()::: big integer intrinsics test test multiply to len:::config->useMultiplyToLenIntrinsic->assumeTrue->getTarget->assumeTrue->javaclass->Class->forName->tin->new->TestIntrinsic->for->i
BigIntegerIntrinsicsTest#testMulAdd()::: big integer intrinsics test test mul add:::config->useMulAddIntrinsic->config->useSquareToLenIntrinsic->assumeTrue->getTarget->assumeTrue->javaclass->Class->forName->tin->new->TestIntrinsic->for->i
BigIntegerIntrinsicsTest#testMontgomery()::: big integer intrinsics test test montgomery:::config->useMontgomeryMultiplyIntrinsic->config->useMontgomerySquareIntrinsic->assumeTrue->getTarget->assumeTrue->javaclass->Class->forName->tin->new->TestIntrinsic->for->i
BigIntegerIntrinsicsTest#testMultiplyAux(BigInteger, BigInteger)::: big integer intrinsics test test multiply aux:::return->a->multiply
BigIntegerIntrinsicsTest#testMontgomeryAux(BigInteger, BigInteger, BigInteger)::: big integer intrinsics test test montgomery aux:::return->a->modPow
BigIntegerIntrinsicsTest.TestIntrinsic#invokeJava(BigInteger, Object...)::: test intrinsic invoke java:::return->invokeSafe
BigIntegerIntrinsicsTest.TestIntrinsic#invokeTest(Object...)::: test intrinsic invoke test:::return->invokeSafe
BigIntegerIntrinsicsTest.TestIntrinsic#invokeCode(Object...)::: test intrinsic invoke code:::try->return->testcode->executeVarargs->catch->getCode->return->invokeCode->finally
BigIntegerIntrinsicsTest.TestIntrinsic#invokeSafe(ResolvedJavaMethod, Object, Object...)::: test intrinsic invoke safe:::try->return->invoke->catch->throw->new->RuntimeException->finally
BigIntegerIntrinsicsTest#randomBig(int)::: big integer intrinsics test random big:::return->rnd->nextInt->i2sz->new->BigInteger
BigIntegerIntrinsicsTest#i2sz(int)::: big integer intrinsics test i2sz:::return
BoxDeoptimizationTest#checkJDK()::: box deoptimization test check k:::Assume->assumeTrue
BoxDeoptimizationTest#testIntegerSnippet()::: box deoptimization test test integer snippet:::values->new->Exception->GraalDirectives->deoptimize->Assert->Integer->valueOf->assertSame->Assert->Integer->valueOf->assertSame
BoxDeoptimizationTest#testInteger()::: box deoptimization test test integer:::checkJDK->test
BoxDeoptimizationTest#testLongSnippet()::: box deoptimization test test long snippet:::highBitsOnly->values->new->Exception->GraalDirectives->deoptimize->Assert->Long->valueOf->assertSame->Assert->Long->valueOf->assertSame->Assert->assertNotSame
BoxDeoptimizationTest#testLong()::: box deoptimization test test long:::checkJDK->test
BoxDeoptimizationTest#testCharSnippet()::: box deoptimization test test char snippet:::values->new->Exception->GraalDirectives->deoptimize->Assert->Character->valueOf->assertSame->Assert->Character->valueOf->assertSame
BoxDeoptimizationTest#testChar()::: box deoptimization test test char:::checkJDK->test
BoxDeoptimizationTest#testShortSnippet()::: box deoptimization test test short snippet:::values->new->Exception->GraalDirectives->deoptimize->Assert->Short->valueOf->assertSame->Assert->Short->valueOf->assertSame
BoxDeoptimizationTest#testShort()::: box deoptimization test test short:::checkJDK->test
BoxDeoptimizationTest#testByteSnippet()::: box deoptimization test test byte snippet:::values->new->Exception->GraalDirectives->deoptimize->Assert->Byte->valueOf->assertSame->Assert->Byte->valueOf->assertSame
BoxDeoptimizationTest#testByte()::: box deoptimization test test byte:::checkJDK->test
BoxDeoptimizationTest#testBooleanSnippet()::: box deoptimization test test boolean snippet:::values->new->Exception->GraalDirectives->deoptimize->Assert->Boolean->valueOf->assertSame->Assert->Boolean->valueOf->assertSame
BoxDeoptimizationTest#testBoolean()::: box deoptimization test test boolean:::checkJDK->test
CheckGraalIntrinsics#match(String, Binding, VMIntrinsicMethod)::: check graal intrinsics match:::if->equals->if->startsWith->if->type->equals->return->return
CheckGraalIntrinsics#findPlugin(EconomicMap>, VMIntrinsicMethod)::: check graal intrinsics find plugin:::cursor->bindings->getEntries->while->cursor->advance->type->MetaUtil->cursor->getKey->internalNameToJava->replace->foreach->cursor->getValue->if->match->return->return
CheckGraalIntrinsics#resolveIntrinsic(MetaAccessProvider, VMIntrinsicMethod)::: check graal intrinsics resolve intrinsic:::c->try->Class->replace->getClassLoader->forName->catch->try->Class->forName->catch->return->finally->throw->finally->foreach->c->getDeclaredMethods->if->javaMethod->getName->equals->method->metaAccess->lookupJavaMethod->if->equals->return->else->if->method->getSignature->toMethodDescriptor->equals->return->return
CheckGraalIntrinsics#add(Collection, String...)::: check graal intrinsics add:::sorted->elements->clone->Arrays->sort->for->i->c->Arrays->asList->addAll->return
CheckGraalIntrinsics#isJDK9OrHigher()::: check graal intrinsics is k9 or higher:::return
CheckGraalIntrinsics#isJDK10OrHigher()::: check graal intrinsics is k10 or higher:::return
CheckGraalIntrinsics#isJDK11OrHigher()::: check graal intrinsics is k11 or higher:::return
CheckGraalIntrinsics.Refiner#refine(CheckGraalIntrinsics)::: refiner refine:::
CheckGraalIntrinsics#test()::: check graal intrinsics test:::providers->rt->getHostBackend->getProviders->graphBuilderPlugins->providers->getGraphBuilderPlugins->invocationPlugins->graphBuilderPlugins->getInvocationPlugins->store->config->getStore->intrinsics->store->getIntrinsics->foreach->ServiceLoader->load->refiner->refine->missing->new->ArrayList<>->mischaracterizedAsToBeInvestigated->new->ArrayList<>->mischaracterizedAsIgnored->new->ArrayList<>->bindings->invocationPlugins->getBindings->foreach->plugin->findPlugin->m->String->format->if->method->providers->getMetaAccess->resolveIntrinsic->if->intrinsicMethod->providers->getConstantReflection->getMethodHandleAccess->lookupMethodHandleIntrinsic->if->continue->if->toBeInvestigated->contains->ignore->contains->complexGuard->contains->downstream->contains->missing->add->else->if->toBeInvestigated->contains->mischaracterizedAsToBeInvestigated->add->else->if->ignore->contains->mischaracterizedAsIgnored->add->errorMsgBuf->new->Formatter->if->missing->isEmpty->Collections->sort->missingString->missing->stream->Collectors->String->format->joining->collect->errorMsgBuf->format->if->mischaracterizedAsToBeInvestigated->isEmpty->Collections->sort->missingString->mischaracterizedAsToBeInvestigated->stream->Collectors->String->format->joining->collect->errorMsgBuf->format->if->mischaracterizedAsIgnored->isEmpty->Collections->sort->missingString->mischaracterizedAsIgnored->stream->Collectors->String->format->joining->collect->errorMsgBuf->format->errorMsg->errorMsgBuf->toString->if->errorMsg->isEmpty->fail
ClassSubstitutionsTests#test(String)::: class substitutions tests test:::debug->getDebugContext->try->s->debug->getMetaAccess->getMethod->lookupJavaMethod->scope->graph->parseEager->graph->method->compile->assertNotInGraph->debug->dump->return->catch->throw->debug->handle->finally
ClassSubstitutionsTests#assertNotInGraph(StructuredGraph, Class)::: class substitutions tests assert not in graph:::foreach->graph->getNodes->if->clazz->isInstance->node->toString->fail->return
ClassSubstitutionsTests#constantIsArray()::: class substitutions tests constant is array:::return->getClass->isArray
ClassSubstitutionsTests#constantIsInterface()::: class substitutions tests constant is interface:::return->getClass->isInterface
ClassSubstitutionsTests#constantIsPrimitive()::: class substitutions tests constant is primitive:::return->getClass->isPrimitive
ClassSubstitutionsTests#testIsArray()::: class substitutions tests test is array:::testConstantReturn
ClassSubstitutionsTests#testIsInterface()::: class substitutions tests test is interface:::testConstantReturn
ClassSubstitutionsTests#testIsPrimitive()::: class substitutions tests test is primitive:::testConstantReturn
ClassSubstitutionsTests#fieldIsNotArray()::: class substitutions tests field is not array:::if->return->instanceField->getClass->isArray->return
ClassSubstitutionsTests#testFieldIsNotArray()::: class substitutions tests test field is not array:::testConstantReturn
ClassSubstitutionsTests#foldComponentType()::: class substitutions tests fold component type:::return->stringArrayField->getClass->getComponentType
ClassSubstitutionsTests#testFoldComponentType()::: class substitutions tests test fold component type:::testConstantReturn
ClassSubstitutionsTests#testFieldIsArray()::: class substitutions tests test field is array:::testConstantReturn
ClassSubstitutionsTests#fieldIsArray()::: class substitutions tests field is array:::if->return->arrayField->getClass->isArray->return
ClassSubstitutionsTests#classIsAssignable1()::: class substitutions tests class is assignable1:::return->a->getClass->a->getClass->isAssignableFrom
ClassSubstitutionsTests#classIsAssignable2()::: class substitutions tests class is assignable2:::return->a->getClass->b->getClass->isAssignableFrom
ClassSubstitutionsTests#classIsAssignable3()::: class substitutions tests class is assignable3:::return->a->getClass->c->getClass->isAssignableFrom
ClassSubstitutionsTests#classIsAssignable4()::: class substitutions tests class is assignable4:::return->b->getClass->a->getClass->isAssignableFrom
ClassSubstitutionsTests#classIsAssignable5()::: class substitutions tests class is assignable5:::return->c->getClass->b->getClass->isAssignableFrom
ClassSubstitutionsTests#classIsAssignable6()::: class substitutions tests class is assignable6:::return->b->getClass->isAssignableFrom
ClassSubstitutionsTests#classIsAssignable7()::: class substitutions tests class is assignable7:::return->isAssignableFrom
ClassSubstitutionsTests#testClassIsAssignable()::: class substitutions tests test class is assignable:::testConstantReturn->testConstantReturn->testConstantReturn->testConstantReturn->testConstantReturn->testConstantReturn->testConstantReturn
ClassSubstitutionsTests#testConstantReturn(String, Object)::: class substitutions tests test constant return:::result->test->ret->result->getNodes->first->result->getNodes->count->assertDeepEquals->ret->result->isConstant->assertDeepEquals->ret->result->asJavaConstant->asBoxedPrimitive->assertDeepEquals
CompilationWrapperTest#testVMCompilation1():::Tests compilation requested by the VM.:::assumeManagementLibraryIsLoadable->Collections->emptyList->Arrays->getName->asList->testHelper
CompilationWrapperTest#testVMCompilation2():::Tests that -Dgraal.ExitVMOnException=true works as an alias for -Dgraal.CompilationFailureAction=ExitVM.:::assumeManagementLibraryIsLoadable->Collections->emptyList->Arrays->getName->asList->testHelper
CompilationWrapperTest.Probe#matches(String)::: probe matches:::if->line->contains->return->return
CompilationWrapperTest.Probe#test()::: probe test:::return->String->format
CompilationWrapperTest#testVMCompilation3():::Tests GraalCompilerOptions#MaxCompilationProblemsPerAction in context of a compilation requested by the VM.:::assumeManagementLibraryIsLoadable->maxProblems->retryingProbe->new->Probe->adjustmentProbe->new->Probe->probes->Arrays->asList->Arrays->getName->asList->testHelper
CompilationWrapperTest#testTruffleCompilation1():::Tests compilation requested by Truffle.:::assumeManagementLibraryIsLoadable->Collections->emptyList->Arrays->asList->testHelper
CompilationWrapperTest#testTruffleCompilation2():::Tests that TruffleCompilationExceptionsAreFatal works as expected.:::probes->new->Probe->Arrays->asList->Arrays->asList->testHelper
CompilationWrapperTest#testTruffleCompilation3():::Tests that TrufflePerformanceWarningsAreFatal generates diagnostic output.:::assumeManagementLibraryIsLoadable->probes->new->Probe->Arrays->asList->Arrays->asList->testHelper
CompilationWrapperTest#testHelper(List, List, String...)::: compilation wrapper test test helper:::dumpPath->getSimpleName->System->currentTimeMillis->new->File->getAbsoluteFile->vmArgs->getVMCommandLine->withoutDebuggerArguments->vmArgs->a->startsWith->removeIf->vmArgs->remove->vmArgs->remove->vmArgs->add->vmArgs->add->vmArgs->addAll->proc->SubprocessUtil->java->if->println->try->probes->new->ArrayList<>->diagnosticProbe->new->Probe->probes->add->probes->new->Probe->add->foreach->foreach->if->probe->matches->break->foreach->error->probe->test->if->Assert->String->format->fail->line->substringStart->line->indexOf->substringLength->length->diagnosticOutputZip->line->substring->trim->dumpPathEntries->Arrays->dumpPath->list->asList->zip->new->File->getAbsoluteFile->Assert->zip->toString->zip->exists->assertTrue->Assert->dumpPathEntries->zip->getName->contains->assertTrue->try->bgvOrCfgFiles->dd->new->ZipFile->entries->new->ArrayList<>->for->e->dd->entries->e->hasMoreElements->if->Assert->String->format->fail->catch->finally->zip->delete->catch->finally->directory->dumpPath->toPath->removeDirectory
TestProgram#main(String[])::: test program main:::printHello1->printWorld1->printHello2->printWorld2->printHello3->printWorld3
TestProgram#printHello1()::: test program print hello1:::println
TestProgram#printWorld1()::: test program print world1:::println
TestProgram#printHello2()::: test program print hello2:::println
TestProgram#printWorld2()::: test program print world2:::println
TestProgram#printHello3()::: test program print hello3:::println
TestProgram#printWorld3()::: test program print world3:::println
CompileTheWorld#parseOptions(String)::: compile the world parse options:::values->OptionValues->newOptionMap->if->optionSettings->EconomicMap->create->foreach->options->split->OptionsParser->parseOptionSettingTo->loader->ServiceLoader->getClassLoader->load->OptionsParser->parseOptions->if->values->containsKey->values->put->return
CompileTheWorld.LibGraalParams.OptionsBuffer#getAddress()::: options buffer get address:::if->throw->new->IllegalStateException->return
CompileTheWorld.LibGraalParams.OptionsBuffer#free()::: options buffer free:::if->UNSAFE->freeMemory
CompileTheWorld.LibGraalParams.StackTraceBuffer#free()::: stack trace buffer free:::if->UNSAFE->freeMemory
CompileTheWorld.LibGraalParams.StackTraceBuffer#getAddress()::: stack trace buffer get address:::if->throw->new->IllegalStateException->return
CompileTheWorld.LibGraalParams#getStackTraceBuffer():::Gets a stack trace buffer for the current thread.:::return->stackTraceBuffer->get
CompileTheWorld.LibGraalParams#close()::: lib graal params close:::options->free->synchronized->foreach->buffer->free->stackTraceBuffers->clear
CompileTheWorld#compile():::Compiles all methods in all classes in #inputClassPath:::try->libgraal->LibGraal->isAvailable->new->LibGraalParams->if->SUN_BOOT_CLASS_PATH->equals->bcpEntry->if->entries->System->getProperty->split->for->i->if->throw->System->getProperty->new->GraalError->else->compile->else->compile->catch->finally
CompileTheWorld#enterCompilation()::: compile the world enter compilation:::if->LibGraal->isAvailable->return->return->new->LibGraalParams
CompileTheWorld#println()::: compile the world println:::println
CompileTheWorld#println(String, Object...)::: compile the world println:::String->format->println
CompileTheWorld#println(String)::: compile the world println:::println
CompileTheWorld#println(boolean, String)::: compile the world println:::if->TTY->println
CompileTheWorld#printStackTrace(Throwable)::: compile the world print stack trace:::if->t->printStackTrace
CompileTheWorld#dummy()::: compile the world dummy:::
CompileTheWorld.ClassPathEntry#createClassLoader():::Creates a ClassLoader for loading classes from this entry.:::
CompileTheWorld.ClassPathEntry#getClassNames():::Gets the list of classes available under this entry.:::
CompileTheWorld.ClassPathEntry#toString()::: class path entry to string:::return
CompileTheWorld.ClassPathEntry#close()::: class path entry close:::
CompileTheWorld.DirClassPathEntry#createClassLoader()::: dir class path entry create class loader:::url->dir->toURI->toURL->return->new->URLArr->new->URLClassLoader
CompileTheWorld.DirClassPathEntry#getClassNames()::: dir class path entry get class names:::classNames->new->ArrayList<>->root->dir->getPath->visitor->new->SimpleFileVisitor<Path>->Files->dir->toPath->walkFileTree->return
CompileTheWorld.JarClassPathEntry#createClassLoader()::: jar class path entry create class loader:::url->new->URL->return->new->URLArr->new->URLClassLoader
CompileTheWorld.JarClassPathEntry#getClassNames()::: jar class path entry get class names:::e->jarFile->entries->classNames->jarFile->size->new->ArrayList<>->while->e->hasMoreElements->je->e->nextElement->if->je->isDirectory->je->getName->endsWith->continue->className->je->getName->je->getName->length->length->substring->if->className->equals->continue->if->className->startsWith->m->MultiReleaseJarVersionedClassRE->matcher->if->m->matches->m->group->else->continue->classNames->className->replace->add->return
CompileTheWorld.JarClassPathEntry#close()::: jar class path entry close:::jarFile->close
CompileTheWorld.JRTClassPathEntry#createClassLoader()::: class path entry create class loader:::url->URI->create->toURL->return->new->URLArr->new->URLClassLoader
CompileTheWorld.JRTClassPathEntry#getClassNames()::: class path entry get class names:::negative->new->HashSet<>->positive->new->HashSet<>->if->limitModules->isEmpty->foreach->limitModules->split->if->s->startsWith->negative->s->substring->add->else->positive->add->classNames->new->ArrayList<>->fs->FileSystems->URI->create->Collections->emptyMap->newFileSystem->top->fs->getPath->Files->attrs->isRegularFile->find->nameCount->p->getNameCount->if->base->p->getName->toString->if->base->endsWith->base->equals->module->p->getName->toString->if->positive->isEmpty->positive->contains->if->negative->isEmpty->negative->contains->className->p->subpath->toString->replace->className->replace->className->length->length->substring->classNames->add->forEach->return
CompileTheWorld#isClassIncluded(String)::: compile the world is class included:::if->MethodFilter->matchesClassName->return->if->MethodFilter->matchesClassName->return->return
CompileTheWorld#openClassPathEntry(String)::: compile the world open class path entry:::if->entry->endsWith->entry->endsWith->return->new->JarClassPathEntry->else->if->entry->equals->return->getValue->new->JRTClassPathEntry->else->if->new->File->isDirectory->return->return->new->DirClassPathEntry
CompileTheWorld#compile(String, LibGraalParams):::Compiles all methods in all classes in a given class path.:::entries->classPath->split->start->System->currentTimeMillis->initialThreads->Thread->getAllStackTraces->if->try->dummyMethod->JVMCI->getRuntime->getHostJVMCIBackend->getMetaAccess->getDeclaredMethod->lookupJavaMethod->entryBCI->useProfilingInfo->installAsDefault->task->new->HotSpotCompilationRequest->new->CompilationTask->task->runCompilation->catch->printStackTrace->finally->threadCount->if->getValue->getValue->if->Runtime->getRuntime->availableProcessors->else->new->LinkedBlockingQueue<Runnable>->new->CompilerThreadFactory->new->ThreadPoolExecutor->compileStartAt->compileStopAt->compileStep->if->totalClassFileCount->foreach->try->cpe->openClassPathEntry->if->cpe->getClassNames->size->catch->finally->lastClassFile->Math->min->Math->min->range->if->for->i->if->startThreads->wakeups->while->threadPool->getCompletedTaskCount->threadPool->getTaskCount->if->TTY->threadPool->getTaskCount->threadPool->getCompletedTaskCount->println->try->threadPool->awaitTermination->catch->finally->elapsedTime->System->currentTimeMillis->println->compiledClasses->if->getValue->TTY->compiledMethodsCounter->get->compileTime->get->memoryUsed->get->println->else->TTY->compiledMethodsCounter->get->compileTime->get->memoryUsed->get->println->suspiciousThreads->new->HashMap<>->foreach->Thread->getAllStackTraces->entrySet->thread->e->getKey->if->Thread->currentThread->initialThreads->containsKey->thread->isDaemon->thread->isAlive->suspiciousThreads->e->getValue->put->if->suspiciousThreads->isEmpty->TTY->println->foreach->suspiciousThreads->entrySet->thread->e->getKey->if->thread->isAlive->TTY->thread->toString->thread->getState->println->foreach->e->getValue->TTY->println->TTY->println
CompileTheWorld#startThreads()::: compile the world start threads:::notifyAll
CompileTheWorld#waitToRun()::: compile the world wait to run:::while->try->wait->catch->finally
CompileTheWorld#compileMethod(HotSpotResolvedJavaMethod, LibGraalParams)::: compile the world compile method:::if->MethodFilter->matches->return->if->MethodFilter->matches->return->task->threadPool->new->Runnable->submit->if->threadPool->getCorePoolSize->task->get
CompileTheWorld#compileMethodInLibgraal(long, long, boolean, boolean, long, int, int, long, int)::: compile the world compile method in libgraal:::
CompileTheWorld#compileMethod(HotSpotResolvedJavaMethod, int, LibGraalParams):::Compiles a method and gathers some statistics.:::try->start->System->currentTimeMillis->allocatedAtStart->getCurrentThreadAllocatedBytes->useProfilingInfo->installAsDefault->installedCode->if->runtime->HotSpotJVMCIRuntime->runtime->try->scope->new->LibGraalScope->methodHandle->LibGraal->translate->isolateThread->LibGraalScope->getIsolateThread->stackTraceBuffer->libgraal->getStackTraceBuffer->stackTraceBufferAddress->stackTraceBuffer->getAddress->installedCodeHandle->getAddress->compileMethodInLibgraal->LibGraal->unhand->if->length->UNSAFE->getInt->data->new->byteArr->UNSAFE->copyMemory->stackTrace->new->String->trim->method->format->println->println->catch->finally->else->entryBCI->request->new->HotSpotCompilationRequest->task->new->CompilationTask->task->runCompilation->task->getInstalledCode->if->installedCode->invalidate->memoryUsed->getCurrentThreadAllocatedBytes->getAndAdd->compileTime->System->currentTimeMillis->getAndAdd->compiledMethodsCounter->incrementAndGet->catch->method->format->println->printStackTrace->finally
CompileTheWorld#canBeCompiled(HotSpotResolvedJavaMethod, int):::Determines if a method should be compiled (Cf:::if->Modifier->isAbstract->Modifier->isNative->return->c->compiler->getGraalRuntime->getVMConfig->if->javaMethod->getCodeSize->String->javaMethod->format->javaMethod->getCodeSize->format->println->return->if->javaMethod->canBeInlined->return->foreach->javaMethod->getAnnotations->if->annotation->annotationType->equals->return->return
CompileTheWorld#loadHarnessOptions()::: compile the world load harness options:::values->OptionValues->newOptionMap->loader->singletonList->OptionsParser->System->getProperties->extractEntries->parseOptions->options->new->OptionValues->if->getValue->options->printHelp->System->exit->return
CompileTheWorld#main(String[])::: compile the world main:::jvmciRuntime->HotSpotJVMCIRuntime->runtime->compiler->jvmciRuntime->getCompiler->graalRuntime->compiler->getGraalRuntime->codeCache->graalRuntime->getHostProviders->getCodeCache->harnessOptions->loadHarnessOptions->iterations->getValue->for->i->System->exit
CompileTheWorldTest#testJDK()::: compile the world test test k:::originalBailoutAction->CompilationBailoutAsFailure->getInitialOptions->getValue->originalFailureAction->CompilationFailureAction->getInitialOptions->getValue->runtime->HotSpotJVMCIRuntime->runtime->System->setProperty->initialOptions->getInitialOptions->harnessOptions->OptionValues->newOptionMap->new->OptionValues->startAt->stopAt->maxClasses->methodFilters->excludeMethodFilters->verbose->ctw->runtime->getCompiler->new->OptionValues->new->CompileTheWorld->ctw->compile
CompressedOopTest#getInstalledCode(String, Class...)::: compressed oop test get installed code:::javaMethod->getClass->getResolvedJavaMethod->installedBenchmarkCode->getCode->return
CompressedOopTest#test()::: compressed oop test test:::installedBenchmarkCode->getInstalledCode->c1->new->Container->Assert->installedBenchmarkCode->executeVarargs->assertEquals
CompressedOopTest#fieldTest(Object)::: compressed oop test field test:::return
CompressedOopTest#test1()::: compressed oop test test1:::installedBenchmarkCode->getInstalledCode->ac->new->ArrayContainer->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals->Assert->installedBenchmarkCode->executeVarargs->assertEquals
CompressedOopTest#arrayTest(Object, Object, Object)::: compressed oop test array test:::array->initialIndex->intValue->replacingIndex->intValue->return
CompressedOopTest#test2()::: compressed oop test test2:::installedBenchmarkCode->getInstalledCode->source->new->ArrayContainer->destination->new->ArrayContainer->Assert->assertEquals->Assert->Arrays->equals->assertFalse->installedBenchmarkCode->executeVarargs->Assert->assertArrayEquals
CompressedOopTest#arrayCopyTest(Object, Object)::: compressed oop test array copy test:::source->destination->System->arraycopy
CompressedOopTest#test3()::: compressed oop test test3:::installedBenchmarkCode->getInstalledCode->initial->new->Object->replacement->new->Object->cas->new->AtomicReference<>->Assert->cas->get->assertEquals->installedBenchmarkCode->executeVarargs->Assert->cas->get->assertEquals->installedBenchmarkCode->executeVarargs->Assert->cas->get->assertEquals
CompressedOopTest#compareAndSwapTest(Object, Object, Object)::: compressed oop test compare and swap test:::cas->cas->compareAndSet
CompressedOopTest#test4()::: compressed oop test test4:::installedBenchmarkCode->getInstalledCode->source1->new->StringContainer1->source2->new->StringContainer2->result->new->charArr->installedBenchmarkCode->executeVarargs->Assert->new->charArr->assertArrayEquals
CompressedOopTest#charArrayCopyTest(Object, Object, Object)::: compressed oop test char array copy test:::source1->source2->result->for->i->for->i->return
CompressedOopTest#test5()::: compressed oop test test5:::installedBenchmarkCode->getInstalledCode->source1->new->StringContainer1->source2->new->StringContainer2->result->new->charArr->installedBenchmarkCode->executeVarargs->Assert->new->charArr->assertArrayEquals
CompressedOopTest#charContainerArrayCopyTest(Object, Object, Object)::: compressed oop test char container array copy test:::source1->source2->result->for->i->for->i->return
CompressedOopTest#test6()::: compressed oop test test6:::installedBenchmarkCode->getInstalledCode->a->new->String->b->new->String->c->installedBenchmarkCode->executeVarargs->Assert->c->equals->assertTrue
CompressedOopTest#stringCopyTest(Object, Object)::: compressed oop test string copy test:::source->destination->return
CompressedOopTest#test7()::: compressed oop test test7:::installedBenchmarkCode->getInstalledCode->q->new->ArrayDeque<>->objects->new->ObjectArr->for->i->j->while->if->installedBenchmarkCode->isValid->getInstalledCode->installedBenchmarkCode->executeVarargs->System->gc->Assert->q->size->assertTrue->Assert->q->isEmpty->assertTrue->while->Assert->q->remove->assertTrue->Assert->q->size->assertTrue->Assert->q->isEmpty->assertTrue
CompressedOopTest#queueTest(Object, Object)::: compressed oop test queue test:::queue->queue->add
CompressedOopTest#test8()::: compressed oop test test8:::installedBenchmarkCode->getInstalledCode->list->new->ArrayList<>->for->i->array->installedBenchmarkCode->executeVarargs->Assert->list->size->assertTrue->i->foreach->Assert->assertTrue
CompressedOopTest#unmodListTest(Object)::: compressed oop test unmod list test:::queue->result->Collections->unmodifiableCollection->queue->size->new->ObjectArr->toArray->return
CompressedOopTest#test9()::: compressed oop test test9:::installedBenchmarkCode->getInstalledCode->list->new->ArrayList<>->array->installedBenchmarkCode->executeVarargs->Assert->list->size->assertTrue
CompressedOopTest#test10()::: compressed oop test test10:::installedBenchmarkCode->getInstalledCode->c->new->Container->Assert->installedBenchmarkCode->executeVarargs->assertFalse
CompressedOopTest#constantTest(Object)::: compressed oop test constant test:::container->return->equals
CompressedOopTest#test11()::: compressed oop test test11:::installedBenchmarkCode->getInstalledCode->s1->new->String->s2->new->String->result->installedBenchmarkCode->executeVarargs->booleanValue->Assert->assertTrue
CompressedOopTest#stringEqualsTest(Object, Object)::: compressed oop test string equals test:::return->equals
CompressedOopTest#test12()::: compressed oop test test12:::installedBenchmarkCode->getInstalledCode->s1->new->String->result->installedBenchmarkCode->executeVarargs->booleanValue->Assert->assertTrue
CompressedOopTest#stringConstantEqualsTest(Object)::: compressed oop test string constant equals test:::return->equals
CompressedOopTest#unmodListTestByte(Object)::: compressed oop test unmod list test byte:::queue->result->Collections->unmodifiableCollection->queue->size->new->ByteArr->toArray->return
CompressedOopTest#test13()::: compressed oop test test13:::installedBenchmarkCode->getInstalledCode->list->new->ArrayList<>->array->installedBenchmarkCode->executeVarargs->Assert->list->size->assertTrue
CompressedOopTest#test14()::: compressed oop test test14:::installedBenchmarkCode->getInstalledCode->buffer->new->StringBuilder->Assert->buffer->length->assertTrue->a->new->String->installedBenchmarkCode->a->toCharArray->executeVarargs->Assert->buffer->length->assertEquals->Assert->buffer->toString->assertEquals
CompressedOopTest#stringBuilderTest(Object, Object)::: compressed oop test string builder test:::source->add->for->i
CompressedOopTest#test15()::: compressed oop test test15:::installedBenchmarkCode->getInstalledCode->installedBenchmarkCode->executeVarargs
CompressedOopTest#stringBuilderTestIn()::: compressed oop test string builder test in:::buffer->new->StringBuilder->Assert->buffer->length->assertTrue->a->new->String->add->a->toCharArray->for->i->Assert->buffer->length->assertEquals->Assert->buffer->toString->assertEquals
CompressedOopTest#test16()::: compressed oop test test16:::installedBenchmarkCode->getInstalledCode->installedBenchmarkCode->executeVarargs
CompressedOopTest#stringBuilderArrayCopy()::: compressed oop test string builder array copy:::buffer->new->StringBuilder->Assert->buffer->length->assertTrue->a->new->String->dst->buffer->length->new->charArr->System->buffer->toString->toCharArray->buffer->length->arraycopy->System->a->toCharArray->buffer->length->buffer->length->arraycopy->Assert->assertEquals->Assert->new->String->assertEquals
CompressedOopTest#test17()::: compressed oop test test17:::installedBenchmarkCode->getInstalledCode->installedBenchmarkCode->executeVarargs
CompressedOopTest#stringFormat()::: compressed oop test string format:::String->format->String->format->String->format
CompressedOopTest#test18()::: compressed oop test test18:::installedBenchmarkCode->getInstalledCode->b->installedBenchmarkCode->executeVarargs->Assert->b->capacity->assertTrue->Assert->b->length->assertTrue
CompressedOopTest#stringBuilder()::: compressed oop test string builder:::return->new->StringBuilder
ConstantPoolSubstitutionsTests#test(String)::: constant pool substitutions tests test:::method->getMetaAccess->getMethod->lookupJavaMethod->debug->getDebugContext->try->s->debug->scope->graph->parseEager->graph->method->compile->assertNotInGraph->debug->dump->return->catch->throw->debug->handle->finally
ConstantPoolSubstitutionsTests#assertNotInGraph(StructuredGraph, Class)::: constant pool substitutions tests assert not in graph:::foreach->graph->getNodes->if->clazz->isInstance->node->toString->fail->return
ConstantPoolSubstitutionsTests#getConstantPoolForObject()::: constant pool substitutions tests get constant pool for object:::miscPackage->try->sharedSecretsClass->Class->forName->javaLangAccessClass->Class->forName->jla->sharedSecretsClass->getDeclaredMethod->invoke->return->javaLangAccessClass->getDeclaredMethod->invoke->catch->throw->new->AssertionError->finally
ConstantPoolSubstitutionsTests#getMethod(String):::Get the test methods from the generated class.:::cl->try->LOADER->findClass->addExports->catch->throw->new->AssertionError->finally->return->getMethod
ConstantPoolSubstitutionsTests#beforeClass()::: constant pool substitutions tests before class:::addExports
ConstantPoolSubstitutionsTests#addExports(Class):::This test uses some API hidden by the JDK9 module system.:::if->javaBaseModule->JLModule->fromClass->cModule->JLModule->fromClass->uncheckedAddExports->if->uncheckedAddExports->else->uncheckedAddExports
ConstantPoolSubstitutionsTests#testGetSize()::: constant pool substitutions tests test get size:::cp->getConstantPoolForObject->test
ConstantPoolSubstitutionsTests#testGetIntAt()::: constant pool substitutions tests test get int at:::test
ConstantPoolSubstitutionsTests#testGetLongAt()::: constant pool substitutions tests test get long at:::test
ConstantPoolSubstitutionsTests#testGetFloatAt()::: constant pool substitutions tests test get float at:::test
ConstantPoolSubstitutionsTests#testGetDoubleAt()::: constant pool substitutions tests test get double at:::test
ConstantPoolSubstitutionsTests.AsmLoader#findClass(String)::: asm loader find class:::if->name->equals->if->return->bytes->Gen->generateClass->return->defineClass->else->return->super->findClass
ConstantPoolSubstitutionsTests.Gen#generateClass()::: gen generate class:::cw->new->ClassWriter->mv->cw->visit->cw->visitInnerClass->constantPool->cw->visitMethod->mv->visitCode->mv->visitVarInsn->mv->visitMethodInsn->mv->visitInsn->mv->visitMaxs->mv->visitEnd->cw->visitMethod->mv->visitCode->mv->visitVarInsn->mv->visitTypeInsn->mv->visitVarInsn->mv->visitVarInsn->mv->visitMethodInsn->mv->visitInsn->mv->visitMaxs->mv->visitEnd->cw->visitMethod->mv->visitCode->mv->visitVarInsn->mv->visitTypeInsn->mv->visitVarInsn->mv->visitVarInsn->mv->visitInsn->mv->visitMethodInsn->mv->visitInsn->mv->visitMaxs->mv->visitEnd->cw->visitMethod->mv->visitCode->mv->visitVarInsn->mv->visitTypeInsn->mv->visitVarInsn->mv->visitVarInsn->mv->visitInsn->mv->visitMethodInsn->mv->visitInsn->mv->visitMaxs->mv->visitEnd->cw->visitMethod->mv->visitCode->mv->visitVarInsn->mv->visitTypeInsn->mv->visitVarInsn->mv->visitVarInsn->mv->visitInsn->mv->visitMethodInsn->mv->visitInsn->mv->visitMaxs->mv->visitEnd->cw->visitMethod->mv->visitCode->mv->visitVarInsn->mv->visitTypeInsn->mv->visitVarInsn->mv->visitVarInsn->mv->visitInsn->mv->visitMethodInsn->mv->visitInsn->mv->visitMaxs->mv->visitEnd->cw->visitMethod->mv->visitCode->mv->visitVarInsn->mv->visitTypeInsn->mv->visitVarInsn->mv->visitVarInsn->mv->visitInsn->mv->visitMethodInsn->mv->visitInsn->mv->visitMaxs->mv->visitEnd->cw->visitEnd->return->cw->toByteArray
CRC32CSubstitutionsTest#updateBytes(byte[], int, int)::: c32 substitutions test update bytes:::crcClass->Class->forName->newMH->MethodHandles->publicLookup->MethodType->methodType->findConstructor->crc->newMH->invoke->crc->update->return->crc->getValue
CRC32CSubstitutionsTest#test1()::: c32 substitutions test test1:::assumeFalse->classfileName->getSimpleName->replace->s->getResourceAsStream->buf->s->available->new->byteArr->new->DataInputStream->readFully->end->for->offset
CRC32CSubstitutionsTest#updateByteBuffer(ByteBuffer)::: c32 substitutions test update byte buffer:::crcClass->Class->forName->newMH->MethodHandles->publicLookup->MethodType->methodType->findConstructor->updateMH->MethodHandles->publicLookup->MethodType->methodType->findVirtual->crc->newMH->invoke->buffer->rewind->updateMH->invokeExact->return->crc->getValue
CRC32CSubstitutionsTest#test2()::: c32 substitutions test test2:::assumeFalse->classfileName->getSimpleName->replace->s->getResourceAsStream->buf->s->available->new->byteArr->new->DataInputStream->readFully->directBuf->ByteBuffer->allocateDirect->directBuf->put->heapBuf->ByteBuffer->wrap->test->test
CRC32SubstitutionsTest#update(byte[])::: c32 substitutions test update:::crc->new->CRC32->foreach->crc->update->return->crc->getValue
CRC32SubstitutionsTest#test1()::: c32 substitutions test test1:::getBytes->test
CRC32SubstitutionsTest#updateBytes(byte[], int, int)::: c32 substitutions test update bytes:::crc->new->CRC32->crc->update->return->crc->getValue
CRC32SubstitutionsTest#test2()::: c32 substitutions test test2:::buf->getBytes->off->len->test
CRC32SubstitutionsTest#test3()::: c32 substitutions test test3:::classfileName->getSimpleName->replace->s->getResourceAsStream->buf->s->available->new->byteArr->new->DataInputStream->readFully->test->for->offset
CRC32SubstitutionsTest#updateByteBuffer(ByteBuffer)::: c32 substitutions test update byte buffer:::crc->new->CRC32->buffer->rewind->crc->update->return->crc->getValue
CRC32SubstitutionsTest#test4()::: c32 substitutions test test4:::classfileName->getSimpleName->replace->s->getResourceAsStream->buf->s->available->new->byteArr->new->DataInputStream->readFully->directBuf->ByteBuffer->allocateDirect->directBuf->put->heapBuf->ByteBuffer->wrap->test->test
DataPatchTest#doubleSnippet()::: data patch test double snippet:::return
DataPatchTest#doubleTest()::: data patch test double test:::test
DataPatchTest#oopSnippet()::: data patch test oop snippet:::return
DataPatchTest#oopTest()::: data patch test oop test:::test
DataPatchTest#compressUncompress(Object)::: data patch test compress uncompress:::return
DataPatchTest#narrowOopSnippet()::: data patch test narrow oop snippet:::return->compressUncompress
DataPatchTest#narrowOopTest()::: data patch test narrow oop test:::Assume->runtime->getVMConfig->assumeTrue->test
DataPatchTest#registerInvocationPlugins(InvocationPlugins)::: data patch test register invocation plugins:::r->new->Registration->r->new->InvocationPlugin->register1->super->registerInvocationPlugins
DeferredBarrierAdditionTest#testCrossReferences()::: deferred barrier addition test test cross references:::a->new->ObjectArr->b->new->ObjectArr->return
DeferredBarrierAdditionTest#testGroupAllocation()::: deferred barrier addition test test group allocation:::getInitialOptions->testHelper
DeferredBarrierAdditionTest#testHelper(String, int, OptionValues)::: deferred barrier addition test test helper:::snippet->getResolvedJavaMethod->debug->getDebugContext->try->s->debug->scope->graph->parseEager->highContext->getDefaultHighTierContext->midContext->getProviders->getTargetProvider->graph->getProfilingInfo->new->MidTierContext->new->InlineEverythingPolicy->new->CanonicalizerPhase->new->InliningPhase->apply->new->CanonicalizerPhase->apply->new->CanonicalizerPhase->debug->getOptions->new->PartialEscapePhase->apply->new->CanonicalizerPhase->new->LoweringPhase->apply->new->GuardLoweringPhase->apply->new->CanonicalizerPhase->new->LoweringPhase->apply->new->WriteBarrierAdditionPhase->apply->debug->dump->checkAssumptions->barriers->if->graph->getNodes->filter->count->graph->getNodes->filter->count->graph->getNodes->filter->count->else->graph->getNodes->filter->count->if->Assert->getScheduledGraphString->assertEquals->catch->throw->debug->handle->finally
DeferredBarrierAdditionTest#checkAssumptions(StructuredGraph)::: deferred barrier addition test check assumptions:::graph->getNodes->filter->isNotEmpty->assumeTrue
EliminateRedundantInitializationPhaseTest#getDefaultGraphBuilderPlugins()::: eliminate redundant initialization phase test get default graph builder plugins:::plugins->super->getDefaultGraphBuilderPlugins->plugins->new->HotSpotClassInitializationPlugin->setClassInitializationPlugin->return
EliminateRedundantInitializationPhaseTest#assignFields()::: eliminate redundant initialization phase test assign fields:::
EliminateRedundantInitializationPhaseTest#assignFieldsConditionally(boolean)::: eliminate redundant initialization phase test assign fields conditionally:::if->else
EliminateRedundantInitializationPhaseTest#assignFieldsSubclassDominates()::: eliminate redundant initialization phase test assign fields subclass dominates:::
EliminateRedundantInitializationPhaseTest#assignFieldsConditionallySubclassDominates(boolean)::: eliminate redundant initialization phase test assign fields conditionally subclass dominates:::if->else
EliminateRedundantInitializationPhaseTest#assignFieldsSubclassPostdominates()::: eliminate redundant initialization phase test assign fields subclass postdominates:::
EliminateRedundantInitializationPhaseTest#assignFieldsConditionallySubclassPostdominates(boolean)::: eliminate redundant initialization phase test assign fields conditionally subclass postdominates:::if->else
EliminateRedundantInitializationPhaseTest#assignFieldsConditionallyMixed(boolean)::: eliminate redundant initialization phase test assign fields conditionally mixed:::if->else
EliminateRedundantInitializationPhaseTest#assignFieldsInLoop()::: eliminate redundant initialization phase test assign fields in loop:::for->i
EliminateRedundantInitializationPhaseTest#assignFieldsInBranches(boolean)::: eliminate redundant initialization phase test assign fields in branches:::if->else
EliminateRedundantInitializationPhaseTest#assignFieldsInBranchesMixed(boolean)::: eliminate redundant initialization phase test assign fields in branches mixed:::if->else
EliminateRedundantInitializationPhaseTest.SomeClass#method()::: some class method:::
EliminateRedundantInitializationPhaseTest.SomeClass#inlinedMethod()::: some class inlined method:::
EliminateRedundantInitializationPhaseTest#invokestatic()::: eliminate redundant initialization phase test invokestatic:::SomeClass->method
EliminateRedundantInitializationPhaseTest#invokestaticInlined()::: eliminate redundant initialization phase test invokestatic inlined:::SomeClass->inlinedMethod
EliminateRedundantInitializationPhaseTest#test(String, int, int)::: eliminate redundant initialization phase test test:::graph->parseEager->Assert->graph->getNodes->filter->count->assertEquals->highTierContext->getDefaultHighTierContext->new->EliminateRedundantInitializationPhase->apply->Assert->graph->getNodes->filter->count->assertEquals
EliminateRedundantInitializationPhaseTest#test1()::: eliminate redundant initialization phase test test1:::test
EliminateRedundantInitializationPhaseTest#test2()::: eliminate redundant initialization phase test test2:::test
EliminateRedundantInitializationPhaseTest#test3()::: eliminate redundant initialization phase test test3:::test
EliminateRedundantInitializationPhaseTest#test4()::: eliminate redundant initialization phase test test4:::test
EliminateRedundantInitializationPhaseTest#test5()::: eliminate redundant initialization phase test test5:::test
EliminateRedundantInitializationPhaseTest#test6()::: eliminate redundant initialization phase test test6:::test
EliminateRedundantInitializationPhaseTest#test7()::: eliminate redundant initialization phase test test7:::test
EliminateRedundantInitializationPhaseTest#test8()::: eliminate redundant initialization phase test test8:::test
EliminateRedundantInitializationPhaseTest#test9()::: eliminate redundant initialization phase test test9:::test
EliminateRedundantInitializationPhaseTest#test10()::: eliminate redundant initialization phase test test10:::test
EliminateRedundantInitializationPhaseTest#test11()::: eliminate redundant initialization phase test test11:::test
EliminateRedundantInitializationPhaseTest#test12()::: eliminate redundant initialization phase test test12:::test
ExplicitExceptionTest#exceptionWasSeen(ResolvedJavaMethod):::Determines if profiling info for method indicates an exception was thrown somewhere in the method:::profilingInfo->method->getProfilingInfo->if->for->i->profilingInfo->getCodeSize->return
ExplicitExceptionTest#getCode(ResolvedJavaMethod, StructuredGraph, boolean, boolean, OptionValues)::: explicit exception test get code:::installedCode->super->getCode->Assume->exceptionWasSeen->assumeTrue->lastCompiledGraph->getNodes->filter->count->assertDeepEquals->return
ExplicitExceptionTest#testAIOOBESnippet(int[])::: explicit exception test test snippet:::return
ExplicitExceptionTest#testAIOOBE()::: explicit exception test test e:::array->new->intArr->for->i->test
ExplicitExceptionTest#testNPEArraySnippet(int[])::: explicit exception test test array snippet:::return
ExplicitExceptionTest#testNPEArray()::: explicit exception test test array:::array->for->i->test
ExplicitExceptionTest#testNPESnippet(TestClass)::: explicit exception test test snippet:::return
ExplicitExceptionTest#testNPE()::: explicit exception test test e:::new->TestClass->obj->for->i->test
ForeignCallDeoptimizeTest#registerInvocationPlugins(InvocationPlugins)::: foreign call deoptimize test register invocation plugins:::foreignCalls->getProviders->getForeignCalls->invocationPlugins->new->InvocationPlugin->register->super->registerInvocationPlugins
ForeignCallDeoptimizeTest#testCallInt(int)::: foreign call deoptimize test test call int:::return
ForeignCallDeoptimizeTest#testForeignCall(int)::: foreign call deoptimize test test foreign call:::if->testCallInt->throw->new->InternalError->return
ForeignCallDeoptimizeTest#test1()::: foreign call deoptimize test test1:::test
ForeignCallDeoptimizeTest#test2()::: foreign call deoptimize test test2:::test
GraalOSRLockTest#checkVMArguments()::: graal lock test check arguments:::assumeManagementLibraryIsLoadable->arguments->GraalServices->getInputArguments->Assume->assumeTrue->foreach->Assume->arg->equals->assumeFalse
GraalOSRLockTest#isMonitorLockHeld(Object)::: graal lock test is monitor lock held:::return->isMonitorLockHeldByThread
GraalOSRLockTest#isMonitorLockHeldByThread(Object, Thread)::: graal lock test is monitor lock held by thread:::oihc->System->identityHashCode->tmxbean->ManagementFactory->getThreadMXBean->tinfos->tmxbean->dumpAllThreads->foreach->if->t->getId->ti->getThreadId->foreach->ti->getLockedMonitors->if->mi->getIdentityHashCode->return->return
GraalOSRLockTest#run(Runnable)::: graal lock test run:::if->t->new->Runnable->new->Thread->t->start->try->t->join->catch->throw->new->GraalError->finally->else->beforeOSRLockTest->r->run->afterOSRLockTest
GraalOSRLockTest#wasLocked()::: graal lock test was locked:::return->isMonitorLockHeld->isMonitorLockHeld
GraalOSRLockTest#osrLockNoDeopt()::: graal lock test osr lock no deopt:::overrides->OptionValues->newOptionMap->overrides->put->overrides->put->return
GraalOSRLockTest#osrLockDeopt()::: graal lock test osr lock deopt:::overrides->OptionValues->newOptionMap->overrides->put->return
GraalOSRLockTest#lockOnObject(Object, String)::: graal lock test lock on object:::t->new->Runnable->new->Thread->t->start->try->t->join->catch->Assert->fail->finally
GraalOSRLockTest#beforeOSRLockTest()::: graal lock test before lock test:::lockOnObject->lockOnObject->Assert->wasLocked->assertFalse
GraalOSRLockTest#afterOSRLockTest()::: graal lock test after lock test:::lockOnObject->lockOnObject->Assert->wasLocked->assertFalse->System->gc
GraalOSRLockTest#testLockOSROuterImmediateDeoptAfter()::: graal lock test test lock outer immediate deopt after:::options->getInitialOptions->osrLockDeopt->new->OptionValues->testOSR->run
GraalOSRLockTest#synchronizedSnippet()::: graal lock test synchronized snippet:::allListeners->listeners->values->foreach->GraalDirectives->blackhole->return
GraalOSRLockTest#testSynchronizedSnippet()::: graal lock test test synchronized snippet:::instance->new->GraalOSRLockTest->for->i->getInitialOptions->testOSR->Assert->isMonitorLockHeld->assertFalse
GraalOSRLockTest#testOSRTrivialLoop()::: graal lock test test trivial loop:::options->getInitialOptions->osrLockDeopt->new->OptionValues->try->testOSR->catch->Assert->t->getMessage->assertEquals->finally->run
GraalOSRLockTest#testLockOSROuterInnerImmediateDeoptAfter()::: graal lock test test lock outer inner immediate deopt after:::options->getInitialOptions->osrLockDeopt->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSROuterCompileRestOfMethod()::: graal lock test test lock outer compile rest of method:::overrides->osrLockNoDeopt->overrides->put->options->getInitialOptions->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSROuterInnerCompileRestOfMethod()::: graal lock test test lock outer inner compile rest of method:::options->getInitialOptions->osrLockNoDeopt->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSROuterInnerLockDepthCompileRestOfMethod()::: graal lock test test lock outer inner lock depth compile rest of method:::overrides->osrLockNoDeopt->overrides->put->options->getInitialOptions->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSROuterInnerLockDepthDeopt()::: graal lock test test lock outer inner lock depth deopt:::overrides->osrLockNoDeopt->overrides->put->options->getInitialOptions->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSROuterInnerLockDepthRecursiveCompileRestOfMethod0()::: graal lock test test lock outer inner lock depth recursive compile rest of method0:::options->getInitialOptions->osrLockNoDeopt->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSROuterInnerLockDepthRecursiveCompileRestOfMethod1()::: graal lock test test lock outer inner lock depth recursive compile rest of method1:::options->getInitialOptions->osrLockNoDeopt->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSROuterCompileRestOfMethodSubsequentLock()::: graal lock test test lock outer compile rest of method subsequent lock:::options->getInitialOptions->osrLockNoDeopt->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSROuterInnerSameLockCompileRestOfMethod()::: graal lock test test lock outer inner same lock compile rest of method:::options->getInitialOptions->osrLockNoDeopt->new->OptionValues->testOSR->run
GraalOSRLockTest#testLockOSRRecursive()::: graal lock test test lock recursive:::testRecursiveLockingLeaf->leaf->getResolvedJavaMethod->leaf->reprofile->testRecursiveLockingLeaf->overrides->osrLockNoDeopt->overrides->put->options->getInitialOptions->new->OptionValues->debug->getDebugContext->compile->testOSR->run
GraalOSRLockTest#testLockOSRRecursiveLeafOSR()::: graal lock test test lock recursive leaf r:::testRecursiveRootNoOSR->root->getResolvedJavaMethod->overrides->osrLockNoDeopt->overrides->put->options->getInitialOptions->new->OptionValues->debug->getDebugContext->compile->testOSR->System->gc->testRecursiveRootNoOSR->run
GraalOSRLockTest#testReduceOSRTrivialLoop()::: graal lock test test reduce trivial loop:::for->i->return
GraalOSRLockTest#testOuterLockImmediateDeoptAfter()::: graal lock test test outer lock immediate deopt after:::ret->synchronized->for->i->GraalDirectives->controlFlowAnchor->if->GraalDirectives->inCompiledCode->throw->new->Error->return
GraalOSRLockTest#testOuterInnerLockImmediateDeoptAfter()::: graal lock test test outer inner lock immediate deopt after:::ret->synchronized->for->i->GraalDirectives->controlFlowAnchor->GraalDirectives->deoptimize->return
GraalOSRLockTest#testOuterLockCompileRestOfMethod()::: graal lock test test outer lock compile rest of method:::ret->synchronized->for->i->return
GraalOSRLockTest#testOuterInnerLockCompileRestOfMethod()::: graal lock test test outer inner lock compile rest of method:::ret->synchronized->for->i->GraalDirectives->controlFlowAnchor->if->GraalDirectives->inCompiledCode->throw->new->Error->return
GraalOSRLockTest#testOuterInnerLockDepth1CompileRestOfMethod()::: graal lock test test outer inner lock depth1 compile rest of method:::ret->synchronized->synchronized->for->i->GraalDirectives->controlFlowAnchor->if->GraalDirectives->inCompiledCode->throw->new->Error->else->if->isMonitorLockHeld->throw->new->Error->if->Thread->currentThread->isMonitorLockHeldByThread->throw->new->Error->return
GraalOSRLockTest#testOuterInnerLockDepth1DeoptAfter()::: graal lock test test outer inner lock depth1 deopt after:::ret->synchronized->synchronized->for->i->GraalDirectives->controlFlowAnchor->GraalDirectives->deoptimize->if->GraalDirectives->inCompiledCode->throw->new->Error->return
GraalOSRLockTest#testOuterInnerLockDepth1RecursiveCompileRestOfMethod1()::: graal lock test test outer inner lock depth1 recursive compile rest of method1:::ret->synchronized->synchronized->for->i->GraalDirectives->controlFlowAnchor->if->GraalDirectives->inCompiledCode->throw->new->Error->return
GraalOSRLockTest#testOuterInnerLockDepth1RecursiveCompileRestOfMethod2()::: graal lock test test outer inner lock depth1 recursive compile rest of method2:::l->ret->synchronized->synchronized->for->i->GraalDirectives->controlFlowAnchor->if->GraalDirectives->inCompiledCode->throw->new->Error->return
GraalOSRLockTest#testRecursiveLockingRoot()::: graal lock test test recursive locking root:::l->ret->synchronized->synchronized->for->i->GraalDirectives->controlFlowAnchor->if->GraalDirectives->inCompiledCode->throw->new->Error->return
GraalOSRLockTest#testRecursiveLockingLeaf()::: graal lock test test recursive locking leaf:::l->ret->synchronized->synchronized->for->i->return
GraalOSRLockTest#testRecursiveRootNoOSR()::: graal lock test test recursive root no r:::l->synchronized->ret->for->i->GraalDirectives->controlFlowAnchor->return
GraalOSRLockTest#testRecursiveLeafOSR()::: graal lock test test recursive leaf r:::ret->synchronized->for->i->GraalDirectives->controlFlowAnchor->return
GraalOSRLockTest#testOuterLockCompileRestOfMethodSubsequentLock()::: graal lock test test outer lock compile rest of method subsequent lock:::monitor->ret->synchronized->for->i->synchronized->GraalDirectives->controlFlowAnchor->if->GraalDirectives->inCompiledCode->throw->new->Error->return
GraalOSRLockTest#testOuterInnerSameLockCompileRestOfMethod()::: graal lock test test outer inner same lock compile rest of method:::monitor->ret->synchronized->for->i->GraalDirectives->controlFlowAnchor->if->GraalDirectives->inCompiledCode->throw->new->Error->return
GraalOSRTest#testOSR01()::: graal test test r01:::try->getInitialOptions->testOSR->catch->Assert->t->getMessage->assertEquals->finally
GraalOSRTest#testOSR02()::: graal test test r02:::getInitialOptions->testOSR
GraalOSRTest#testOSR03()::: graal test test r03:::getInitialOptions->testOSR
GraalOSRTest#testOSR04()::: graal test test r04:::getInitialOptions->testOSR
GraalOSRTest#testReduceLoop()::: graal test test reduce loop:::for->i->return
GraalOSRTest#testSequentialLoop()::: graal test test sequential loop:::ret->for->i->GraalDirectives->controlFlowAnchor->if->return->for->i->GraalDirectives->controlFlowAnchor->return
GraalOSRTest#testNonReduceLoop()::: graal test test non reduce loop:::ret->for->i->GraalDirectives->controlFlowAnchor->return
GraalOSRTest#testDeoptAfterCountedLoop()::: graal test test deopt after counted loop:::ret->for->i->GraalDirectives->injectBranchProbability->GraalDirectives->controlFlowAnchor->return
GraalOSRTestBase#testOSR(OptionValues, String)::: graal test base test r:::testOSR
GraalOSRTestBase#testOSR(OptionValues, String, Object, Object...)::: graal test base test r:::method->getResolvedJavaMethod->testOSR
GraalOSRTestBase#testOSR(OptionValues, ResolvedJavaMethod, Object, Object...)::: graal test base test r:::method->reprofile->compileOSR->result->executeExpected->checkResult
GraalOSRTestBase#compile(DebugContext, ResolvedJavaMethod, int)::: graal test base compile:::runtime->HotSpotJVMCIRuntime->runtime->jvmciEnv->request->new->HotSpotCompilationRequest->compiler->runtime->getCompiler->task->new->CompilationTask->if->graalRuntime->compiler->getGraalRuntime->config->graalRuntime->getVMConfig->if->hasCodeAtLevel->return->result->task->runCompilation->if->result->getFailure->throw->result->getFailureMessage->new->GraalError
GraalOSRTestBase#getBackedgeBCI(DebugContext, ResolvedJavaMethod):::Returns the target BCI of the first bytecode backedge:::code->new->ResolvedJavaMethodBytecode->stream->code->getCode->new->BytecodeStream->options->debug->getOptions->bciBlockMapping->BciBlockMapping->create->foreach->bciBlockMapping->getBlocks->if->block->getStartBci->bci->block->getEndBci->foreach->block->getSuccessors->if->succ->getStartBci->succBci->succ->getStartBci->if->return->TTY->Arrays->bciBlockMapping->getLoopHeaders->toString->println->TTY->new->BytecodeDisassembler->disassemble->println->return
GraalOSRTestBase#checkResult(Result)::: graal test base check result:::Assert->assertNull->Assert->assertNotNull->Assert->assertTrue->Assert->assertEquals
GraalOSRTestBase#compileOSR(OptionValues, ResolvedJavaMethod)::: graal test base compile r:::goptions->if->hasBeenSet->new->OptionValues->graph->parseEager->debug->graph->getDebug->bci->getBackedgeBCI->compile
HotSpotBase64Test#sanity()::: hot spot base64 test sanity:::rt->Graal->getRequiredCapability->rt->getVMConfig->useBase64Intrinsics->assumeTrue
HotSpotBase64Test#testEncode()::: hot spot base64 test test encode:::getResolvedJavaMethod->Base64->getEncoder->lipsum->getBytes->test
HotSpotCryptoSubstitutionTest#addMethod(DebugContext, ResolvedJavaMethod, CompilationResult)::: hot spot crypto substitution test add method:::return->getBackend->createDefaultInstalledCode
HotSpotCryptoSubstitutionTest#testAESCryptIntrinsics()::: hot spot crypto substitution test test crypt intrinsics:::if->compileAndInstall->actual->new->ByteArrayOutputStream->actual->runEncryptDecrypt->write->actual->runEncryptDecrypt->write->Assert->aesExpected->toByteArray->actual->toByteArray->assertArrayEquals
HotSpotCryptoSubstitutionTest#testCipherBlockChainingIntrinsics()::: hot spot crypto substitution test test cipher block chaining intrinsics:::implNames->HotSpotGraphBuilderPlugins->runtime->getVMConfig->cbcUsesImplNames->cbcEncryptName->cbcDecryptName->if->compileAndInstall->actual->new->ByteArrayOutputStream->actual->runEncryptDecrypt->write->actual->runEncryptDecrypt->write->Assert->aesExpected->toByteArray->actual->toByteArray->assertArrayEquals->actual->reset->actual->runEncryptDecrypt->write->actual->runEncryptDecrypt->write->Assert->desExpected->toByteArray->actual->toByteArray->assertArrayEquals
HotSpotCryptoSubstitutionTest#compileAndInstall(String, String...):::Compiles and installs the substitution for some specified methods:::if->runtime->getVMConfig->return->c->try->Class->forName->catch->return->finally->atLeastOneCompiled->foreach->if->compileAndInstallSubstitution->return
HotSpotCryptoSubstitutionTest#encrypt(byte[], SecretKey, String)::: hot spot crypto substitution test encrypt:::result->c->Cipher->getInstance->c->init->c->getParameters->r1->c->update->r2->c->doFinal->new->byteArr->System->arraycopy->System->arraycopy->return
HotSpotCryptoSubstitutionTest#decrypt(byte[], SecretKey, String)::: hot spot crypto substitution test decrypt:::result->c->Cipher->getInstance->c->init->r1->c->update->r2->c->doFinal->new->byteArr->System->arraycopy->System->arraycopy->return
HotSpotCryptoSubstitutionTest#readClassfile16(Class)::: hot spot crypto substitution test read classfile16:::classFilePath->c->getName->replace->stream->c->getResourceAsStream->bytesToRead->stream->available->classFile->new->byteArr->new->DataInputStream->readFully->return
HotSpotCryptoSubstitutionTest#runEncryptDecrypt(SecretKey, String)::: hot spot crypto substitution test run encrypt decrypt:::indata->input->clone->cipher->encrypt->plain->decrypt->Assert->assertArrayEquals->return
HotSpotGraalCompilerTest#runtime():::Gets the HotSpotGraalRuntimeProvider.:::return->getBackend->getRuntime
HotSpotGraalCompilerTest#assumeGraalIsNotJIT(String):::Checks that the UseJVMCICompiler flag is false.:::configStore->HotSpotJVMCIRuntime->runtime->getConfigStore->access->new->HotSpotVMConfigAccess->useJVMCICompiler->access->getFlag->Assume->assumeFalse
HotSpotGraalCompilerTest#compileAndInstallSubstitution(Class, String)::: hot spot graal compiler test compile and install substitution:::method->getMetaAccess->getMethod->lookupJavaMethod->rt->Graal->getRequiredCapability->providers->rt->getHostBackend->getProviders->compilationId->runtime->getHostBackend->getCompilationIdentifier->options->getInitialOptions->graph->providers->getReplacements->getDebugContext->getIntrinsicGraph->if->return->graph->getOptions->getCode->return
HotSpotGraalManagementTest#registration()::: hot spot graal management test registration:::runtime->Graal->getRuntime->management->runtime->getManagement->if->return->server->ManagementFactory->getPlatformMBeanServer->name->management->poll->assertNotNull->server->getObjectInstance->assertNotNull
HotSpotGraalManagementTest#readBeanInfo()::: hot spot graal management test read bean info:::ManagementFactory->getPlatformMBeanServer->assertNotNull->runtime->Graal->getRuntime->management->runtime->getManagement->if->return->mbeanName->management->poll->assertNotNull->server->ManagementFactory->getPlatformMBeanServer->bean->server->getObjectInstance->assertNotNull->info->server->getMBeanInfo->assertNotNull->originalValues->new->AttributeList->newValues->new->AttributeList->foreach->OptionsParser->getOptionsLoader->foreach->JunitShield->testOption->attributeNames->originalValues->size->new->StringArr->for->i->actualValues->server->getAttributes->originalValues->size->actualValues->size->assertEquals->for->i->try->server->setAttributes->catch->finally->server->setAttributes
HotSpotGraalManagementTest.JunitShield#testOption(MBeanInfo, ObjectName, MBeanServer, HotSpotGraalRuntime, OptionDescriptor, AttributeList, AttributeList):::Tests changing the value of option via the management interface to a) a new legal value and b) an illegal value.:::optionKey->option->getOptionKey->currentValue->optionKey->runtime->getOptions->getValue->optionType->option->getOptionValueType->name->option->getName->if->println->attrInfo->findAttributeInfo->assertNotNull->expectAttributeValue->option->getOptionValueType->stringValue->actualAttributeValue->server->getAttribute->assertEquals->legalValues->new->HashMap<>->illegalValues->new->ArrayList<>->if->enumOptionKey->foreach->enumOptionKey->getAllValues->if->legalValues->obj->toString->obj->toString->put->illegalValues->String->valueOf->add->else->if->defaultValue->if->nbok->nbok->getMasterOption->runtime->getOptions->getValue->else->optionKey->getDefaultValue->legalValues->unquotedStringValue->put->illegalValues->String->valueOf->add->illegalValues->add->illegalValues->add->else->if->legalValues->optionKey->getDefaultValue->quotedStringValue->put->legalValues->put->legalValues->put->illegalValues->add->illegalValues->add->illegalValues->add->else->if->legalValues->optionKey->getDefaultValue->unquotedStringValue->put->value->unquotedStringValue->legalValues->put->illegalValues->add->else->if->legalValues->optionKey->getDefaultValue->unquotedStringValue->put->value->unquotedStringValue->legalValues->put->illegalValues->add->else->if->legalValues->optionKey->getDefaultValue->unquotedStringValue->put->value->unquotedStringValue->legalValues->put->illegalValues->add->illegalValues->add->else->if->legalValues->optionKey->getDefaultValue->unquotedStringValue->put->value->unquotedStringValue->legalValues->put->illegalValues->add->illegalValues->add->originalAttributeValue->new->Attribute->try->foreach->legalValues->entrySet->legalValue->e->getKey->if->printf->newAttributeValue->new->Attribute->newValues->add->server->setAttribute->actual->optionKey->runtime->getOptions->getValue->server->getAttribute->expectValue->e->getValue->if->option->getOptionValueType->else->if->option->getOptionKey->nbok->option->getOptionKey->String->nbok->runtime->getOptions->getValue->valueOf->server->getAttribute->assertEquals->catch->finally->if->printf->originalValues->add->server->setAttribute->try->foreach->if->printf->server->new->Attribute->setAttribute->Assert->fail->catch->finally->if->printf->server->setAttribute->try->unknownOptionName->server->new->Attribute->setAttribute->Assert->fail->catch->finally
HotSpotGraalManagementTest.JunitShield#findAttributeInfo(String, MBeanInfo)::: junit shield find attribute info:::foreach->info->getAttributes->if->attr->getName->equals->attr->isReadable->assertTrue->attr->isWritable->assertTrue->return->return
HotSpotGraalManagementTest#quotedStringValue(Object)::: hot spot graal management test quoted string value:::return->stringValue
HotSpotGraalManagementTest#unquotedStringValue(Object)::: hot spot graal management test unquoted string value:::return->stringValue
HotSpotGraalManagementTest#stringValue(Object, boolean)::: hot spot graal management test string value:::if->return->if->return->return->String->valueOf
HotSpotGraalManagementTest#quoted(Object)::: hot spot graal management test quoted:::return
HotSpotGraalManagementTest#publicJmxApiOfGraalDumpOperation():::Tests publicaly visible names and identifiers used by tools developed and distributed on an independent schedule (like VisualVM):::ManagementFactory->getPlatformMBeanServer->assertNotNull->runtime->Graal->getRuntime->management->runtime->getManagement->if->return->mbeanName->management->poll->assertNotNull->server->ManagementFactory->getPlatformMBeanServer->mbeanName->getDomain->assertEquals->mbeanName->getKeyProperty->assertEquals->bean->server->getObjectInstance->assertNotNull->info->server->getMBeanInfo->assertNotNull->arr->info->getOperations->dumpOp->dumpMethodCount->for->i->assertEquals->assertNotNull->dumpPath->findAttributeInfo->printGraphFile->findAttributeInfo->showDumpFiles->findAttributeInfo->methodFilter->findAttributeInfo->originalDumpPath->server->dumpPath->getName->getAttribute->originalPrintGraphFile->server->printGraphFile->getName->getAttribute->originalShowDumpFiles->server->showDumpFiles->getName->getAttribute->originalMethodFilter->server->methodFilter->getName->getAttribute->tmpDir->getSimpleName->System->currentTimeMillis->new->File->getAbsoluteFile->server->dumpPath->getName->quoted->new->Attribute->setAttribute->server->methodFilter->getName->new->Attribute->setAttribute->server->printGraphFile->getName->new->Attribute->setAttribute->server->showDumpFiles->getName->new->Attribute->setAttribute->params->try->server->invoke->found->expectedIgvDumpSuffix->Assert->tmpDir->toString->tmpDir->isDirectory->assertTrue->dumpPathEntries->Arrays->tmpDir->list->asList->foreach->if->entry->endsWith->if->Assert->String->dumpPathEntries->stream->Collectors->System->lineSeparator->joining->collect->format->fail->catch->finally->if->tmpDir->isDirectory->tmpDir->toPath->deleteDirectory->server->dumpPath->getName->new->Attribute->setAttribute->server->methodFilter->getName->new->Attribute->setAttribute->server->printGraphFile->getName->new->Attribute->setAttribute->server->showDumpFiles->getName->new->Attribute->setAttribute
HotSpotGraalManagementTest#deleteDirectory(Path)::: hot spot graal management test delete directory:::Files->walk->Comparator->reverseOrder->sorted->Path->toFile->map->File->delete->forEach
HotSpotInvokeDynamicPluginTest#getDefaultGraphBuilderPlugins()::: hot spot invoke dynamic plugin test get default graph builder plugins:::plugins->super->getDefaultGraphBuilderPlugins->plugins->new->HotSpotClassInitializationPlugin->setClassInitializationPlugin->plugins->new->HotSpotInvokeDynamicPlugin->setInvokeDynamicPlugin->return
HotSpotInvokeDynamicPluginTest#bytecodeParserShouldInlineInvoke(GraphBuilderContext, ResolvedJavaMethod, ValueNode[])::: hot spot invoke dynamic plugin test bytecode parser should inline invoke:::return
HotSpotInvokeDynamicPluginTest#test(String, int, int)::: hot spot invoke dynamic plugin test test:::graph->getInitialOptions->new->OptionValues->parseEager->midTierContext->getProviders->getTargetProvider->graph->getProfilingInfo->new->MidTierContext->canonicalizer->new->CanonicalizerPhase->Assert->graph->getNodes->filter->count->assertEquals->Assert->graph->getNodes->filter->count->assertEquals->context->getProviders->new->LoweringPhase->apply->new->GuardLoweringPhase->apply->new->LoweringPhase->apply->new->FrameStateAssignmentPhase->apply->new->LoweringPhase->apply->Assert->graph->getNodes->filter->count->assertEquals->Assert->graph->getNodes->filter->count->assertEquals
HotSpotInvokeDynamicPluginTest#invokeDynamic1()::: hot spot invoke dynamic plugin test invoke dynamic1:::i->return
HotSpotInvokeDynamicPluginTest#invokeDynamic2(String)::: hot spot invoke dynamic plugin test invoke dynamic2:::return->s->length
HotSpotInvokeDynamicPluginTest#invokeHandle1(Object)::: hot spot invoke dynamic plugin test invoke handle1:::return->objToStringMH->invokeExact
HotSpotInvokeDynamicPluginTest#test1()::: hot spot invoke dynamic plugin test test1:::test
HotSpotInvokeDynamicPluginTest#test2()::: hot spot invoke dynamic plugin test test2:::test
HotSpotInvokeDynamicPluginTest#test3()::: hot spot invoke dynamic plugin test test3:::test
HotSpotLazyInitializationTest#getDefaultGraphBuilderPlugins()::: hot spot lazy initialization test get default graph builder plugins:::plugins->super->getDefaultGraphBuilderPlugins->plugins->setClassInitializationPlugin->return
HotSpotLazyInitializationTest.X#foo()::: x foo:::
HotSpotLazyInitializationTest#invokeStatic()::: hot spot lazy initialization test invoke static:::X->foo
HotSpotLazyInitializationTest#test(String)::: hot spot lazy initialization test test:::method->getResolvedJavaMethod->Assume->classInitPlugin->method->getConstantPool->supportsLazyInitialization->assumeTrue->parseEager->Assert->assertFalse
HotSpotLazyInitializationTest#test1()::: hot spot lazy initialization test test1:::test
HotSpotMethodSubstitutionTest#testObjectSubstitutions()::: hot spot method substitution test test object substitutions:::obj->new->TestClassA->testGraph->testGraph->test->test->testGraph->testGraph->synchronized->test->test->test->test
HotSpotMethodSubstitutionTest#getClass0(Object)::: hot spot method substitution test get class0:::return->obj->getClass
HotSpotMethodSubstitutionTest#objectHashCode(TestClassA)::: hot spot method substitution test object hash code:::return->obj->hashCode
HotSpotMethodSubstitutionTest#objectNotify(Object)::: hot spot method substitution test object notify:::obj->notify
HotSpotMethodSubstitutionTest#objectNotifyAll(Object)::: hot spot method substitution test object notify all:::obj->notifyAll
HotSpotMethodSubstitutionTest#testClassSubstitutions()::: hot spot method substitution test test class substitutions:::testGraph->testGraph->testGraph->testGraph->testGraph->testGraph->foreach->new->Class<?>Arr->getClass->test->test->test->test->test->test
HotSpotMethodSubstitutionTest#getModifiers(Class)::: hot spot method substitution test get modifiers:::return->clazz->getModifiers
HotSpotMethodSubstitutionTest#isInterface(Class)::: hot spot method substitution test is interface:::return->clazz->isInterface
HotSpotMethodSubstitutionTest#isArray(Class)::: hot spot method substitution test is array:::return->clazz->isArray
HotSpotMethodSubstitutionTest#isPrimitive(Class)::: hot spot method substitution test is primitive:::return->clazz->isPrimitive
HotSpotMethodSubstitutionTest#getSuperClass(Class)::: hot spot method substitution test get super class:::return->clazz->getSuperclass
HotSpotMethodSubstitutionTest#getComponentType(Class)::: hot spot method substitution test get component type:::return->clazz->getComponentType
HotSpotMethodSubstitutionTest#testThreadSubstitutions()::: hot spot method substitution test test thread substitutions:::testGraph->testGraph->assertInGraph->testGraph->assertInGraph->currentThread->Thread->currentThread->test->test
HotSpotMethodSubstitutionTest#currentThread(Thread)::: hot spot method substitution test current thread:::return->Thread->currentThread
HotSpotMethodSubstitutionTest#threadIsInterrupted(Thread)::: hot spot method substitution test thread is interrupted:::return->thread->isInterrupted
HotSpotMethodSubstitutionTest#threadInterrupted()::: hot spot method substitution test thread interrupted:::return->Thread->interrupted
HotSpotMethodSubstitutionTest#testSystemSubstitutions()::: hot spot method substitution test test system substitutions:::testGraph->testGraph->foreach->new->ObjectArr->new->intArr->new->StringArrs->new->Object->test
HotSpotMethodSubstitutionTest#systemTime()::: hot spot method substitution test system time:::return->System->currentTimeMillis->System->nanoTime
HotSpotMethodSubstitutionTest#systemIdentityHashCode(Object)::: hot spot method substitution test system identity hash code:::return->System->identityHashCode
HotSpotMethodSubstitutionTest#testCallSiteGetTargetSnippet(int)::: hot spot method substitution test test call site get target snippet:::site->lookup->MethodHandles->lookup->switch->GraalDirectives->lookup->MethodType->methodType->findVirtual->new->ConstantCallSite->opaque->break->GraalDirectives->lookup->MethodType->methodType->findStatic->new->ConstantCallSite->opaque->return->site->getTarget->toString
HotSpotMethodSubstitutionTest#testCastSnippet(int, Object)::: hot spot method substitution test test cast snippet:::c->switch->GraalDirectives->opaque->break->GraalDirectives->opaque->break->return->c->cast->toString
HotSpotMethodSubstitutionTest#testGetClassSnippet(int)::: hot spot method substitution test test get class snippet:::c->switch->GraalDirectives->new->Object->opaque->break->GraalDirectives->opaque->break->return->c->getClass->toString
HotSpotMethodSubstitutionTest#testCallSiteGetTarget():::Tests ambiguous receiver of CallSite.getTarget.:::test
HotSpotMethodSubstitutionTest#testCast():::Tests ambiguous receiver of Class.cast.:::Integer->valueOf->test
HotSpotMethodSubstitutionTest#testGetClass():::Tests ambiguous receiver of Object.getClass.:::test
HotSpotMonitorValueTest#addMethod(DebugContext, ResolvedJavaMethod, CompilationResult)::: hot spot monitor value test add method:::foreach->compResult->getInfopoints->if->call->if->target->if->target->lookupObjectWait->equals->frame->frame->caller->frame->caller->assertNotNull->caller->caller->assertNull->assertDeepEquals->assertDeepEquals->lock1->frame->getLockValue->lock2->frame->getLockValue->lock3->caller->getLockValue->lock4->caller->getLockValue->locks->Arrays->asList->foreach->foreach->if->lock->getSlot->other->getSlot->not->assertThat->lock3->getOwner->lock4->getOwner->assertDeepEquals->lock1->getOwner->lock2->getOwner->not->assertThat->return->super->addMethod->throw->new->AssertionError
HotSpotMonitorValueTest#lookupObjectWait()::: hot spot monitor value test lookup object wait:::try->return->getMetaAccess->getDeclaredMethod->lookupJavaMethod->catch->throw->new->GraalError->finally
HotSpotMonitorValueTest#test()::: hot spot monitor value test test:::test
HotSpotMonitorValueTest#locks2(Object, Object)::: hot spot monitor value test locks2:::synchronized->synchronized->a->wait
HotSpotMonitorValueTest#testSnippet(Object, Object)::: hot spot monitor value test test snippet:::synchronized->synchronized->locks2
HotSpotNmethodTest#testInstallCodeInvalidation()::: hot spot nmethod test test install code invalidation:::testJavaMethod->getResolvedJavaMethod->nmethod->parseEager->getCode->Assert->nmethod->isValid->assertTrue->result->try->nmethod->executeVarargs->assertDeepEquals->catch->Assert->fail->finally->Assert->nmethod->isValid->assertTrue->nmethod->invalidate->Assert->nmethod->isValid->assertFalse->try->nmethod->executeVarargs->Assert->fail->catch->finally->Assert->nmethod->isValid->assertFalse
HotSpotNmethodTest#testInstallCodeInvalidationWhileRunning()::: hot spot nmethod test test install code invalidation while running:::testJavaMethod->getResolvedJavaMethod->nmethod->parseEager->getCode->result->try->nmethod->executeVarargs->assertDeepEquals->catch->Assert->fail->finally->Assert->nmethod->isValid->assertFalse
HotSpotNmethodTest#testInstalledCodeCalledFromCompiledCode()::: hot spot nmethod test test installed code called from compiled code:::testJavaMethod->getResolvedJavaMethod->nmethod->parseEager->getCode->Assert->nmethod->isValid->assertTrue->try->for->i->catch->Assert->fail->finally
HotSpotNmethodTest#foo(HotSpotNmethod, Object, Object)::: hot spot nmethod test foo:::return
HotSpotNmethodTest#otherFoo(HotSpotNmethod, Object, Object)::: hot spot nmethod test other foo:::if->method->invalidate->return
HotSpotNodeSubstitutionsTest#test()::: hot spot node substitutions test test:::options->getInitialOptions->debug->getDebugContext->graph->new->StructuredGraph.Builder->build->ConstantNode->forInt->test
HotSpotNodeSubstitutionsTest#getNodeClass(Node)::: hot spot node substitutions test get node class:::return->n->getNodeClass
HotSpotResolvedJavaFieldTest#jvmFieldModifiers():::Same as HotSpotModifiers.jvmFieldModifiers() but works when using a JVMCI version prior to the introduction of that method.:::config->runtime->getVMConfig->accEnum->config->getConstant->accSynthetic->config->getConstant->return
HotSpotResolvedJavaFieldTest#testModifiersForInternal():::Tests that HotSpotResolvedJavaField#getModifiers() only includes the modifiers returned by Field#getModifiers():::foreach->type->getMetaAccess->lookupJavaType->foreach->type->getInstanceFields->if->field->isInternal->Assert->jvmFieldModifiers->field->getModifiers->assertEquals
HotSpotResolvedJavaFieldTest#testEquivalenceForInternalFields():::Tests that HotSpotResolvedObjectTypeImpl#createField(String, JavaType, long, int) always returns an ResolvedJavaField#equals(Object) equivalent object for an internal field.:::foreach->type->getMetaAccess->lookupJavaType->foreach->type->getInstanceFields->if->field->isInternal->expected->index->indexField->getInt->actual->createFieldMethod->expected->getType->expected->getOffset->expected->getModifiers->invoke->Assert->assertEquals
HotSpotResolvedJavaFieldTest#testIsInObject()::: hot spot resolved java field test test is in object:::foreach->getDeclaredFields->rf->getMetaAccess->lookupJavaField->Assert->rf->toString->rf->getConstantReflection->forString->isInObject->rf->isStatic->assertEquals
HotSpotResolvedObjectTypeTest#testGetSourceFileName()::: hot spot resolved object type test test get source file name:::Assert->getMetaAccess->lookupJavaType->getSourceFileName->assertEquals->Assert->getMetaAccess->this->getClass->lookupJavaType->getSourceFileName->assertEquals
HotSpotResolvedObjectTypeTest#testKlassLayoutHelper()::: hot spot resolved object type test test klass layout helper:::klass->getMetaAccess->this->getClass->lookupJavaType->klass->memoryAccess->getProviders->getConstantReflection->getMemoryAccessProvider->config->runtime->getVMConfig->c->StampFactory->forKind->readConstant->c->toString->c->getClass->assertTrue->pc->pc->toString->pc->getJavaKind->assertTrue
HotSpotStackIntrospectionTest#testSynchronizedSnippet(Function)::: hot spot stack introspection test test synchronized snippet:::a->new->Object->synchronized->forceFrameState->testOnStack->a->notify
HotSpotStackIntrospectionTest#testSnippet(Function)::: hot spot stack introspection test test snippet:::a->new->Object->forceFrameState->testOnStack
HotSpotStackIntrospectionTest#testOnStack(Object, Object, Object)::: hot spot stack introspection test test on stack:::if->throw->new->InternalError
HotSpotStackIntrospectionTest#forceFrameState(Object, Function)::: hot spot stack introspection test force frame state:::f->apply->return
HotSpotStackIntrospectionTest#run()::: hot spot stack introspection test run:::test
HotSpotStackIntrospectionTest#runSynchronized()::: hot spot stack introspection test run synchronized:::test
HotSpotStackIntrospectionTest#test(String)::: hot spot stack introspection test test:::method->getMetaAccess->getMethod->lookupJavaMethod->f->stackIntrospection->if->frame->getMethod->equals->frame->materializeVirtualObjects->return->iterateFrames->return->code->getCode->code->executeVarargs
HotSpotStampMemoryAccessTest#testReadNarrowObject()::: hot spot stamp memory access test test read narrow object:::oopEncoding->runtime->getVMConfig->getOopEncoding->Assume->runtime->getVMConfig->assumeTrue->memory->getConstantReflection->getMemoryAccessProvider->base->getSnippetReflection->forObject->stamp->StampFactory->forKind->narrowStamp->HotSpotNarrowOopStamp->compressed->narrowStamp->readConstant->assertTrue
HotSpotUnsafeSubstitutionTest#testSubstitution(String, Class, String, Class[], Object, Object[], Object[])::: hot spot unsafe substitution test test substitution:::testMethod->getResolvedJavaMethod->originalMethod->getResolvedJavaMethod->code->getCode->expected->invokeSafe->actual->invokeSafe->assertDeepEquals->invokeSafe->executeVarargsSafe->assertDeepEquals
HotSpotUnsafeSubstitutionTest#testUnsafeSubstitutions()::: hot spot unsafe substitution test test unsafe substitutions:::testGraph
HotSpotUnsafeSubstitutionTest#unsafeCopyMemory(Object, long, Object, long, long)::: hot spot unsafe substitution test unsafe copy memory:::UNSAFE->copyMemory
HotSpotUnsafeSubstitutionTest#testCopyMemorySnippet(long, int)::: hot spot unsafe substitution test test copy memory snippet:::result->new->byteArr->UNSAFE->copyMemory->return
HotSpotUnsafeSubstitutionTest#testCopyMemory()::: hot spot unsafe substitution test test copy memory:::size->src->UNSAFE->allocateMemory->for->i->test
HsErrLogTest#test1()::: hs err log test test1:::args->new->ArrayList<>->if->args->add->args->add->args->getName->add->args->getName->add->testHelper
HsErrLogTest#testHelper(List, String...)::: hs err log test test helper:::vmArgs->getVMCommandLine->withoutDebuggerArguments->vmArgs->a->startsWith->removeIf->vmArgs->remove->vmArgs->remove->vmArgs->addAll->proc->SubprocessUtil->java->if->println->re->Pattern->compile->foreach->m->re->matcher->if->m->matches->path->m->group->new->File->Assert->path->toString->path->exists->assertTrue->checkHsErr->return->Assert->re->pattern->fail
HsErrLogTest#checkHsErr(File)::: hs err log test check hs err:::try->br->new->FileReader->new->BufferedReader->line->br->readLine->sig->getName->lines->new->ArrayList<>->while->if->line->contains->if->hsErrPath->delete->return->lines->add->br->readLine->throw->System->lineSeparator->String->System->lineSeparator->join->new->AssertionError->catch->throw->new->AssertionError->finally
Crasher#main(String[])::: crasher main:::iter->mem->UNSAFE->allocateMemory->while->tryCrash
Crasher#tryCrash(long, int)::: crasher try crash:::if->GraalDirectives->inCompiledCode->UNSAFE->putInt->return->else->UNSAFE->putInt->return->UNSAFE->getInt
Crasher#initUnsafe()::: crasher init unsafe:::try->return->Unsafe->getUnsafe->catch->try->theUnsafe->getDeclaredField->theUnsafe->setAccessible->return->theUnsafe->get->catch->throw->new->RuntimeException->finally->finally
InstalledCodeExecuteHelperTest#test1()::: installed code execute helper test test1:::fooMethod->getResolvedJavaMethod->fooCode->getCode->new->ObjectArr->benchmarkMethod->getResolvedJavaMethod->installedBenchmarkCode->getCode->Assert->Integer->valueOf->benchmark->assertEquals->Assert->Integer->valueOf->installedBenchmarkCode->executeVarargs->assertEquals
InstalledCodeExecuteHelperTest#benchmark(HotSpotInstalledCode)::: installed code execute helper test benchmark:::val->for->j->return
InstalledCodeExecuteHelperTest#foo()::: installed code execute helper test foo:::return
InstalledCodeExecuteHelperTest#parse(Builder, PhaseSuite)::: installed code execute helper test parse:::graph->super->parse->if->m->graph->method->receiver->m->getModifiers->isStatic->args->argsWithReceiver->parameterTypes->m->toParameterTypes->for->i->return
JVMCIInfopointErrorTest.ValueDef#emitCode(CompilationResultBuilder)::: value def emit code:::
JVMCIInfopointErrorTest.ValueUse#emitCode(CompilationResultBuilder)::: value use emit code:::
JVMCIInfopointErrorTest.TestNode#canDeoptimize()::: test node can deoptimize:::return
JVMCIInfopointErrorTest.TestNode#generate(NodeLIRBuilderTool)::: test node generate:::tool->gen->getLIRGeneratorTool->state->gen->state->spec->tool->new->FullInfopointOp->append->spec
JVMCIInfopointErrorTest.TestSpec#spec(LIRGeneratorTool, LIRFrameState, Consumer)::: test spec spec:::
JVMCIInfopointErrorTest#testMethod()::: infopoint error test test method:::
JVMCIInfopointErrorTest#test(TestSpec)::: infopoint error test test:::getDebugContext->test
JVMCIInfopointErrorTest#testNoDump(TestSpec):::Avoids dumping during tests which are expected to fail.:::options->getInitialOptions->new->OptionValues->getDebugContext->test
JVMCIInfopointErrorTest#test(DebugContext, TestSpec)::: infopoint error test test:::method->getResolvedJavaMethod->graph->parseForCompile->test->graph->new->TestNode->add->graph->graph->start->addAfterFixed->compResult->compile->codeCache->getCodeCache->compiledCode->HotSpotCompiledCodeBuilder->getInitialOptions->createCompiledCode->codeCache->addCode
JVMCIInfopointErrorTest#testInvalidShortOop()::: infopoint error test test invalid short oop:::kind->tool->target->getPlatformKind->lirKind->LIRKind->reference->var->tool->newVariable->tool->new->ValueDef->append->safepoint->accept->tool->new->ValueUse->append->testNoDump
JVMCIInfopointErrorTest#testInvalidShortDerivedOop()::: infopoint error test test invalid short derived oop:::baseOop->tool->LIRKind->tool->target->fromJavaKind->newVariable->tool->new->ValueDef->append->kind->tool->target->getPlatformKind->lirKind->LIRKind->derivedReference->var->tool->newVariable->tool->new->ValueDef->append->safepoint->accept->tool->new->ValueUse->append->testNoDump
JVMCIInfopointErrorTest#modifyTopFrame(LIRFrameState, JavaValue[], JavaKind[], int, int, int)::: infopoint error test modify top frame:::return->modifyTopFrame
JVMCIInfopointErrorTest#modifyTopFrame(LIRFrameState, VirtualObject[], JavaValue[], JavaKind[], int, int, int)::: infopoint error test modify top frame:::top->top->caller->top->getMethod->top->getBCI->new->BytecodeFrame->return->new->LIRFrameState
JVMCIInfopointErrorTest#testUnexpectedScopeValuesLength()::: infopoint error test test unexpected scope values length:::newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testUnexpectedScopeSlotKindsLength()::: infopoint error test test unexpected scope slot kinds length:::newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testWrongMonitorType()::: infopoint error test test wrong monitor type:::newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testUnexpectedIllegalValue()::: infopoint error test test unexpected illegal value:::newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testUnexpectedTypeInRegister()::: infopoint error test test unexpected type in register:::var->tool->LIRKind->tool->target->fromJavaKind->newVariable->tool->new->ValueDef->append->newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testWrongConstantType()::: infopoint error test test wrong constant type:::newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testUnsupportedConstantType()::: infopoint error test test unsupported constant type:::newState->new->JavaValueArr->JavaConstant->forShort->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testUnexpectedNull()::: infopoint error test test unexpected null:::newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testUnexpectedObject()::: infopoint error test test unexpected object:::wrapped->getSnippetReflection->forObject->newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testUnknownJavaValue()::: infopoint error test test unknown java value:::debug->DebugContext->getInitialOptions->create->try->s->debug->disable->newState->new->JavaValueArr->new->UnknownJavaValue->new->JavaKindArr->modifyTopFrame->safepoint->accept->test->catch->finally
JVMCIInfopointErrorTest#testMissingIllegalAfterDouble()::: infopoint error test test missing illegal after double:::newState->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testInvalidVirtualObjectId()::: infopoint error test test invalid virtual object id:::obj->getMetaAccess->lookupJavaType->o->VirtualObject->get->o->new->JavaValueArr->new->JavaKindArr->setValues->safepoint->new->VirtualObjectArr->new->LIRFrameState->accept->test
JVMCIInfopointErrorTest#testDuplicateVirtualObject()::: infopoint error test test duplicate virtual object:::obj->getMetaAccess->lookupJavaType->o1->VirtualObject->get->o1->new->JavaValueArr->new->JavaKindArr->setValues->o2->VirtualObject->get->o2->new->JavaValueArr->new->JavaKindArr->setValues->safepoint->new->VirtualObjectArr->new->LIRFrameState->accept->test
JVMCIInfopointErrorTest#testUnexpectedVirtualObject()::: infopoint error test test unexpected virtual object:::obj->getMetaAccess->lookupJavaType->o->VirtualObject->get->o->new->JavaValueArr->new->JavaKindArr->setValues->newState->new->VirtualObjectArr->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIInfopointErrorTest#testUndefinedVirtualObject()::: infopoint error test test undefined virtual object:::obj->getMetaAccess->lookupJavaType->o0->VirtualObject->get->o0->new->JavaValueArr->new->JavaKindArr->setValues->o1->VirtualObject->get->o1->new->JavaValueArr->new->JavaKindArr->setValues->newState->new->VirtualObjectArr->new->JavaValueArr->new->JavaKindArr->modifyTopFrame->safepoint->accept->test
JVMCIVersionCheckTest#test01()::: version check test test01:::sprops->System->getProperties->props->sprops->size->new->HashMap<>->foreach->sprops->stringPropertyNames->props->sprops->getProperty->put->seed->Long->System->nanoTime->getLong->random->new->Random->for->i->foreach->new->StringArr->foreach->new->StringArr->javaVmVersion->String->format->try->minVersion->new->Version2->JVMCIVersionCheck->check->Assert->fail->catch->finally
LoadJavaMirrorWithKlassTest.Wrapper#equals(Object)::: wrapper equals:::if->return->Objects->equals->else->return
LoadJavaMirrorWithKlassTest.Wrapper#hashCode()::: wrapper hash code:::return->clazz->hashCode
LoadJavaMirrorWithKlassTest.Wrapper#toString()::: wrapper to string:::return
LoadJavaMirrorWithKlassTest#createSuites(OptionValues)::: load java mirror with klass test create suites:::return->super->getOptions->createSuites
LoadJavaMirrorWithKlassTest#getOptions()::: load java mirror with klass test get options:::return->getInitialOptions->new->OptionValues
LoadJavaMirrorWithKlassTest#checkLowTierGraph(StructuredGraph)::: load java mirror with klass test check low tier graph:::foreach->graph->getNodes->filter
LoadJavaMirrorWithKlassTest#classConstant()::: load java mirror with klass test class constant:::return
LoadJavaMirrorWithKlassTest#testClassConstant()::: load java mirror with klass test test class constant:::getOptions->test
LoadJavaMirrorWithKlassTest#primitiveClassConstant()::: load java mirror with klass test primitive class constant:::return
LoadJavaMirrorWithKlassTest#testPrimitiveClassConstant()::: load java mirror with klass test test primitive class constant:::getOptions->test
LoadJavaMirrorWithKlassTest#compressedClassConstant(Wrapper)::: load java mirror with klass test compressed class constant:::return
LoadJavaMirrorWithKlassTest#testCompressedClassConstant()::: load java mirror with klass test test compressed class constant:::arg->new->Wrapper->getOptions->test
LoadJavaMirrorWithKlassTest#compressedPrimitiveClassConstant(Wrapper)::: load java mirror with klass test compressed primitive class constant:::return
LoadJavaMirrorWithKlassTest#testCompressedPrimitiveClassConstant()::: load java mirror with klass test test compressed primitive class constant:::arg->new->Wrapper->getOptions->test
MemoryUsageBenchmark#simple(int, int)::: memory usage benchmark simple:::return
MemoryUsageBenchmark#complex(CharSequence)::: memory usage benchmark complex:::if->return->cs->hashCode->if->hash->cs->chars->forEach->return->res->synchronized->cs->length->synchronized->cs->hashCode->for->i->cs->length->sum->for->i->new->String->length->return
MemoryUsageBenchmark.MemoryUsageCloseable#close()::: memory usage closeable close:::end->getCurrentThreadAllocatedBytes->allocated->println
MemoryUsageBenchmark#main(String[])::: memory usage benchmark main:::Graal->getRuntime->new->MemoryUsageBenchmark->run
MemoryUsageBenchmark#doCompilation(String, String)::: memory usage benchmark do compilation:::method->getResolvedJavaMethod->method->reprofile->jvmciEnv->try->c->new->MemoryUsageCloseable->runtime->HotSpotJVMCIRuntime->runtime->entryBCI->request->new->HotSpotCompilationRequest->task->runtime->getCompiler->new->CompilationTask->task->getInitialOptions->runCompilation->catch->finally
MemoryUsageBenchmark#allocSpyCompilation(String)::: memory usage benchmark alloc spy compilation:::if->AllocSpy->isEnabled->method->getResolvedJavaMethod->method->reprofile->jvmciEnv->try->as->AllocSpy->open->runtime->HotSpotJVMCIRuntime->runtime->request->new->HotSpotCompilationRequest->compiler->runtime->getCompiler->options->getInitialOptions->task->new->CompilationTask->task->runCompilation->catch->finally
MemoryUsageBenchmark#compileAndTime(String)::: memory usage benchmark compile and time:::parseEager->for->i->doCompilation
MemoryUsageBenchmark#run()::: memory usage benchmark run:::compileAndTime->compileAndTime->harnessOptions->CompileTheWorld->loadHarnessOptions->if->getValue->runtime->HotSpotJVMCIRuntime->runtime->ctw->runtime->getCompiler->getInitialOptions->new->CompileTheWorld->try->ctw->compile->catch->e->printStackTrace->finally->allocSpyCompilation->allocSpyCompilation
NodeCostDumpUtil#getArgumentRegex(String)::: node cost dump util get argument regex:::if->arg->length->return->try->Pattern->compile->return->catch->println->return->finally
NodeCostDumpUtil#main(String[])::: node cost dump util main:::if->println->System->exit->pattern->getArgumentRegex->version->System->getProperty->if->version->compareTo->printf->System->exit->jvmciCP->System->getProperty->split->primarySuiteCP->System->getProperty->split->applicationClassLoader->Thread->currentThread->getContextClassLoader->classes->new->HashSet<>->try->uniquePaths->Arrays->asList->new->HashSet<>->uniquePaths->Arrays->asList->addAll->foreach->if->new->File->exists->if->path->endsWith->try->jarFileSystem->FileSystems->URI->create->Collections->emptyMap->newFileSystem->jarFileSystem->getPath->initAllClasses->catch->finally->else->FileSystems->getDefault->getPath->initAllClasses->catch->GraalError->shouldNotReachHere->finally->classes->size->printf->nodeClasses->new->ArrayList<>->foreach->if->isAssignableFrom->loaded->isArray->nodeClasses->add->nodeClasses->size->printf->nc->new->ArrayList<>->foreach->try->nc->NodeClass->get->add->catch->finally->nc->size->printf->nc->stream->filter->Collectors->toList->collect->nc->a->x->getJavaClass->getName->b->y->getJavaClass->getName->return->a->compareTo->sort->println->foreach->packageStrippedName->try->nodeclass->getJavaClass->getCanonicalName->replace->replace->catch->continue->finally->if->packageStrippedName->matches->continue->overridesSizeMethod->overridesCyclesMethod->c->nodeclass->getJavaClass->try->c->getDeclaredMethod->catch->finally->try->c->getDeclaredMethod->catch->finally->nodeclass->size->nodeclass->cycles->canonicalizable->memoryCheckPoint->virtualizable->println
NodeCostDumpUtil#canonicalizable(Class)::: node cost dump util canonicalizable:::return->isAssignableFrom
NodeCostDumpUtil#virtualizable(Class)::: node cost dump util virtualizable:::return->isAssignableFrom
NodeCostDumpUtil#memoryCheckPoint(Class)::: node cost dump util memory check point:::return->isAssignableFrom
NodeCostDumpUtil#initAllClasses(Path, ClassLoader, HashSet>)::: node cost dump util init all classes:::try->Files->new->SimpleFileVisitor<Path>->walkFileTree->catch->GraalError->shouldNotReachHere->finally
NodeCostDumpUtil#prefixed(String)::: node cost dump util prefixed:::if->className->contains->className->indexOf->return->else->if->className->contains->className->indexOf->return->return
NodeCostDumpUtil#stripClassName(String)::: node cost dump util strip class name:::return->className->replace
NodeCostDumpUtil#constructClazzPart(String, String)::: node cost dump util construct clazz part:::clazzPart->stripped->stripped->lastIndexOf->stripped->length->substring->return->clazzPart->clazzPart->length->length->substring
NodeCostDumpUtil#constructURLPart(String, String, String)::: node cost dump util construct part:::return->className->stripped->lastIndexOf->substring
ObjectCloneTest#cloneArray(int[])::: object clone test clone array:::return->array->clone
ObjectCloneTest#cloneList(ArrayList)::: object clone test clone list:::return->list->clone
ObjectCloneTest.ObjectCloneable#clone()::: object cloneable clone:::try->return->super->clone->catch->throw->new->AssertionError->finally
ObjectCloneTest#notCloneable(ObjectCloneable)::: object clone test not cloneable:::clone->cloneable->clone->return->clone->getClass
ObjectCloneTest#testNotIntrinsified()::: object clone test test not intrinsified:::new->CloneableSubclass->test
ObjectCloneTest#testArray()::: object clone test test array:::new->intArr->test
ObjectCloneTest#testList()::: object clone test test list:::list->new->ArrayList<>->for->i->test
ObjectCloneTest#editGraphBuilderConfiguration(GraphBuilderConfiguration)::: object clone test edit graph builder configuration:::return->super->conf->withNodeSourcePosition->editGraphBuilderConfiguration
ObjectCloneTest#cloneConstantArray()::: object clone test clone constant array:::return->ARRAY->clone
ObjectCloneTest#testCloneConstantArray()::: object clone test test clone constant array:::test
ObjectHashCodeInliningTest#getHash(Object)::: object hash code inlining test get hash:::return->obj->hashCode
ObjectHashCodeInliningTest#testInstallCodeInvalidation()::: object hash code inlining test test install code invalidation:::for->i->method->getResolvedJavaMethod->graph->parseForCompile->foreach->graph->getNodes->if->callTargetNode->targetName->equals->Assume->callTargetNode->getProfile->assumeTrue->compile
ObjectHashCodeInliningTest#containsForeignCallToIdentityHashCode(StructuredGraph)::: object hash code inlining test contains foreign call to identity hash code:::foreach->graph->getNodes->filter->if->foreignCallNode->getDescriptor->getName->equals->return->return
ObjectHashCodeInliningTest#containsReadStringHash(StructuredGraph)::: object hash code inlining test contains read string hash:::foreach->graph->getNodes->filter->if->readNode->getLocationIdentity->toString->equals->return->return
ObjectHashCodeInliningTest#checkHighTierGraph(StructuredGraph)::: object hash code inlining test check high tier graph:::
OptionsInFileTest#test()::: options in file test test:::methodFilterValue->debugFilterValue->optionsFile->File->createTempFile->getAbsoluteFile->try->Assert->methodFilterValue->MethodFilter->getDefaultValue->equals->assertFalse->Assert->debugFilterValue->Dump->getDefaultValue->equals->assertFalse->Assert->PrintGraph->getDefaultValue->assertEquals->try->out->new->FileOutputStream->new->PrintStream->out->MethodFilter->getName->println->out->Dump->getName->println->out->PrintGraph->getName->println->catch->finally->vmArgs->getVMCommandLine->withoutDebuggerArguments->vmArgs->a->startsWith->removeIf->vmArgs->add->vmArgs->add->proc->SubprocessUtil->java->expected->foreach->for->i->for->i->catch->finally->optionsFile->delete
ReplaceConstantNodesPhaseTest#getDefaultGraphBuilderPlugins()::: replace constant nodes phase test get default graph builder plugins:::plugins->super->getDefaultGraphBuilderPlugins->plugins->new->HotSpotClassInitializationPlugin->setClassInitializationPlugin->return
ReplaceConstantNodesPhaseTest#assignFields()::: replace constant nodes phase test assign fields:::
ReplaceConstantNodesPhaseTest#assignFieldsInBranches(boolean)::: replace constant nodes phase test assign fields in branches:::if->else
ReplaceConstantNodesPhaseTest#assignFieldsWithDominatingInit(boolean)::: replace constant nodes phase test assign fields with dominating init:::if->else
ReplaceConstantNodesPhaseTest#assignString()::: replace constant nodes phase test assign string:::
ReplaceConstantNodesPhaseTest#assignToParentAndChild()::: replace constant nodes phase test assign to parent and child:::
ReplaceConstantNodesPhaseTest#assignToThis()::: replace constant nodes phase test assign to this:::
ReplaceConstantNodesPhaseTest#assignFieldsWithDominatingInitOfParent(boolean)::: replace constant nodes phase test assign fields with dominating init of parent:::if->else
ReplaceConstantNodesPhaseTest#test(String, int, int, int)::: replace constant nodes phase test test:::graph->getInitialOptions->new->OptionValues->parseEager->highTierContext->getDefaultHighTierContext->canonicalizer->new->CanonicalizerPhase->new->EliminateRedundantInitializationPhase->apply->new->LoweringPhase->apply->new->LoadJavaMirrorWithKlassPhase->apply->new->ReplaceConstantNodesPhase->apply->Assert->graph->getNodes->filter->count->assertEquals->Assert->graph->getNodes->filter->count->assertEquals->Assert->graph->getNodes->filter->count->assertEquals
ReplaceConstantNodesPhaseTest#test1()::: replace constant nodes phase test test1:::test
ReplaceConstantNodesPhaseTest#test2()::: replace constant nodes phase test test2:::test
ReplaceConstantNodesPhaseTest#test3()::: replace constant nodes phase test test3:::test
ReplaceConstantNodesPhaseTest#test4()::: replace constant nodes phase test test4:::test
ReplaceConstantNodesPhaseTest#test5()::: replace constant nodes phase test test5:::test
ReplaceConstantNodesPhaseTest#test6()::: replace constant nodes phase test test6:::test
ReplaceConstantNodesPhaseTest#test7()::: replace constant nodes phase test test7:::test
ReservedStackAccessTest#check()::: reserved stack access test check:::Assume->runtime->getVMConfig->assumeTrue
ReservedStackAccessTest#stackAccessTest()::: reserved stack access test stack access test:::Assume->runtime->getVMConfig->assumeTrue->passed->for->i->println
ReservedStackAccessTest#main(String[])::: reserved stack access test main:::new->ReservedStackAccessTest->stackAccessTest
ReservedStackAccessTest#run()::: reserved stack access test run:::Assume->runtime->getVMConfig->assumeTrue->vmArgs->SubprocessUtil->SubprocessUtil->getVMCommandLine->withoutDebuggerArguments->vmArgs->add->vmArgs->add->vmArgs->add->vmArgs->add->proc->SubprocessUtil->getName->java->passed->foreach->if->line->equals->if->println->assertTrue
ReservedStackAccessTest.ReentrantLockTest#initialize()::: reentrant lock test initialize:::new->ReentrantLockArr->for->i
ReservedStackAccessTest.ReentrantLockTest#getResult()::: reentrant lock test get result:::if->return->for->i->return
ReservedStackAccessTest.ReentrantLockTest#run()::: reentrant lock test run:::try->lockAndCall->catch->finally
ReservedStackAccessTest.ReentrantLockTest#lockAndCall(int)::: reentrant lock test lock and call:::if->lock->lockAndCall
ReservedStackAccessTest.RunWithSOEContext#run()::: run with context run:::test->initialize->recursiveCall->println->println->test->getResult
ReservedStackAccessTest.RunWithSOEContext#recursiveCall()::: run with context recursive call:::l1->l2->l3->l4->l5->l6->l7->l8->l9->l10->l11->l12->l13->l14->l15->l16->l17->l18->l19->l20->l21->l22->l23->l24->l25->l26->l27->l28->l30->l31->l32->l33->l34->l35->l36->l37->try->recursiveCall->catch->finally->if->test->run
StringInternConstantTest#test1()::: string intern constant test test1:::method->getResolvedJavaMethod->graph->parseForCompile->firstFixed->graph->start->next->Assert->instanceOf->assertThat->ret->if->ret->result->expected->A_CONSTANT_STRING->intern->constant->ret->result->getValue->if->returnedString->asObject->Assert->assertSame->else->Assert->constant->getClass->fail->else->Assert->ret->result->fail
StringInternConstantTest#constantIntern()::: string intern constant test constant intern:::return->A_CONSTANT_STRING->intern
TestIntrinsicCompiles#test()::: test intrinsic compiles test:::rt->Graal->getRequiredCapability->providers->rt->getHostBackend->getProviders->graphBuilderPlugins->providers->getGraphBuilderPlugins->invocationPlugins->graphBuilderPlugins->getInvocationPlugins->bindings->invocationPlugins->getBindings->store->rt->getVMConfig->getStore->intrinsics->store->getIntrinsics->options->getInitialOptions->debug->getDebugContext->foreach->plugin->CheckGraalIntrinsics->findPlugin->if->if->method->CheckGraalIntrinsics->getMetaAccess->resolveIntrinsic->if->method->isNative->graph->providers->getReplacements->getIntrinsicGraph->getCode
TestSHASubstitutions#testDigest(String, byte[])::: test substitutions test digest:::digest->try->MessageDigest->getInstance->digest->update->return->digest->digest->catch->return->finally
TestSHASubstitutions#getData()::: test substitutions get data:::data->new->byteArr->for->i->return
TestSHASubstitutions#getConfig()::: test substitutions get config:::rt->Graal->getRequiredCapability->return->rt->getVMConfig
TestSHASubstitutions#testSha1()::: test substitutions test sha1:::if->getConfig->useSHA1Intrinsics->getData->testWithInstalledIntrinsic
TestSHASubstitutions#testWithInstalledIntrinsic(String, String, String, Object...)::: test substitutions test with installed intrinsic:::c->try->Class->forName->catch->return->finally->code->try->method->getResolvedJavaMethod->receiver->method->isStatic->expect->executeExpected->compileAndInstallSubstitution->assertTrue->testAgainstExpected->catch->finally->if->code->invalidate
TestSHASubstitutions#testSha256()::: test substitutions test sha256:::if->getConfig->useSHA256Intrinsics->getData->testWithInstalledIntrinsic
TestSHASubstitutions#testSha512()::: test substitutions test sha512:::if->getConfig->useSHA512Intrinsics->getData->testWithInstalledIntrinsic
WriteBarrierAdditionTest#test1():::Expected 2 barriers for the Serial GC and 4 for G1 (2 pre + 2 post).:::testHelper
WriteBarrierAdditionTest#test1Snippet()::: write barrier addition test test1 snippet:::main->new->Container->temp1->new->Container->temp2->new->Container
WriteBarrierAdditionTest#test2():::Expected 4 barriers for the Serial GC and 8 for G1 (4 pre + 4 post).:::testHelper
WriteBarrierAdditionTest#test2Snippet(boolean)::: write barrier addition test test2 snippet:::main->new->Container->temp1->new->Container->temp2->new->Container->for->i
WriteBarrierAdditionTest#test3():::Expected 4 barriers for the Serial GC and 8 for G1 (4 pre + 4 post).:::testHelper
WriteBarrierAdditionTest#test3Snippet()::: write barrier addition test test3 snippet:::main->new->ContainerArr->temp1->new->Container->temp2->new->Container->for->i->for->i
WriteBarrierAdditionTest#test4():::Expected 2 barriers for the Serial GC and 5 for G1 (3 pre + 2 post) The (2 or 4) barriers are emitted while initializing the fields of the WeakReference instance:::testHelper
WriteBarrierAdditionTest#test4Snippet()::: write barrier addition test test4 snippet:::weakRef->new->Object->new->WeakReference<>->return->weakRef->get
WriteBarrierAdditionTest#test5():::Expected 4 barriers for the Serial GC and 9 for G1 (1 ref + 4 pre + 4 post):::testHelper
WriteBarrierAdditionTest#registerInvocationPlugins(InvocationPlugins)::: write barrier addition test register invocation plugins:::injection->getMetaAccess->getSnippetReflection->getProviders->getForeignCalls->new->NodeIntrinsificationProvider->new->PluginFactory_WriteBarrierAdditionTest->registerPlugins->super->registerInvocationPlugins
WriteBarrierAdditionTest#useCompressedOops(GraalHotSpotVMConfig)::: write barrier addition test use compressed oops:::return
WriteBarrierAdditionTest#test5Snippet()::: write barrier addition test test5 snippet:::return->UNSAFE->useCompressedOops->getObject
WriteBarrierAdditionTest#test6():::The following test concerns the runtime checks of the unsafe loads:::Long->getMetaAccess->referentOffset->valueOf->test2
WriteBarrierAdditionTest#test7():::The following test concerns the runtime checks of the unsafe loads:::Long->getMetaAccess->referentOffset->valueOf->test2
WriteBarrierAdditionTest#test8():::The following test concerns the runtime checks of the unsafe loads:::Long->valueOf->test2
WriteBarrierAdditionTest#test10():::The following test concerns the runtime checks of the unsafe loads:::Long->valueOf->Integer->valueOf->test2
WriteBarrierAdditionTest#test9():::The following test concerns the runtime checks of the unsafe loads:::Long->valueOf->Integer->valueOf->test2
WriteBarrierAdditionTest#testArrayCopy(Object, Object, Object)::: write barrier addition test test array copy:::System->arraycopy
WriteBarrierAdditionTest#test11()::: write barrier addition test test11:::test2
WriteBarrierAdditionTest#testUnsafeLoad(Unsafe, Object, Object, Object)::: write barrier addition test test unsafe load:::offset->intValue->displacement->longValue->return->theUnsafe->getObject
WriteBarrierAdditionTest#getInstalledCode(String, boolean)::: write barrier addition test get installed code:::javaMethod->getResolvedJavaMethod->getResolvedJavaMethod->installedCode->getCode->return
WriteBarrierAdditionTest#testHelper(String, int)::: write barrier addition test test helper:::snippet->getResolvedJavaMethod->debug->getDebugContext->try->s->debug->scope->graph->parseEager->highContext->getDefaultHighTierContext->midContext->getProviders->getTargetProvider->graph->getProfilingInfo->new->MidTierContext->new->InlineEverythingPolicy->new->CanonicalizerPhase->new->InliningPhase->apply->new->CanonicalizerPhase->apply->new->CanonicalizerPhase->new->LoweringPhase->apply->new->GuardLoweringPhase->apply->new->CanonicalizerPhase->new->LoweringPhase->apply->new->WriteBarrierAdditionPhase->apply->debug->dump->barriers->if->graph->getNodes->filter->count->graph->getNodes->filter->count->graph->getNodes->filter->count->else->graph->getNodes->filter->count->if->Assert->getScheduledGraphString->assertEquals->foreach->graph->getNodes->filter->if->if->write->getBarrierType->Assert->write->successors->count->assertEquals->Assert->write->next->assertTrue->Assert->write->predecessor->assertTrue->else->if->write->getBarrierType->Assert->write->successors->count->assertEquals->Assert->write->next->assertTrue->foreach->graph->getNodes->filter->if->read->getBarrierType->Assert->read->getAddress->assertTrue->constDisp->read->getAddress->getOffset->asJavaConstant->Assert->assertNotNull->Assert->getMetaAccess->referentOffset->constDisp->asLong->assertEquals->Assert->read->getBarrierType->assertEquals->if->Assert->read->next->assertTrue->catch->throw->debug->handle->finally
WriteBarrierAdditionTest#test2(String, Object...)::: write barrier addition test test2:::code->getInstalledCode->code->executeVarargs
