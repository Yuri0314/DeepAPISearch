MarshalledObject#readObject(ObjectInputStream):::Reads in the state of the object and saves the stream's serialization filter to be used when the object is deserialized.:::stream->defaultReadObject->stream->getObjectInputFilter
MarshalledObject#get():::Returns a new copy of the contained marshalledobject:::if->return->bin->new->ByteArrayInputStream->lin->new->ByteArrayInputStream->in->new->MarshalledObjectInputStream->obj->in->readObject->in->close->return
MarshalledObject#hashCode():::Return a hash code for this MarshalledObject.:::return
MarshalledObject#equals(Object):::Compares this MarshalledObject to another object:::if->return->if->other->if->return->if->return->for->i->return->else->return
MarshalledObject.MarshalledObjectOutputStream#hadAnnotations():::Returns true if any non-null location annotations have been written to this stream.:::return
MarshalledObject.MarshalledObjectOutputStream#writeLocation(String):::Overrides MarshalOutputStream.writeLocation implementation to write annotations to the location stream.:::locOut->writeObject
MarshalledObject.MarshalledObjectOutputStream#flush()::: marshalled object output stream flush:::super->flush->locOut->flush
MarshalledObject.MarshalledObjectInputStream#readLocation():::Overrides MarshalInputStream.readLocation to return locations from the stream we were given, or null if we were given a null location stream.:::return->locIn->readObject
Naming#lookup(String):::Returns a reference, a stub, for the remote object associated with the specified name.:::parsed->parseURL->registry->getRegistry->if->return->return->registry->lookup
Naming#bind(String, Remote):::Binds the specified name to a remote object.:::parsed->parseURL->registry->getRegistry->if->throw->new->NullPointerException->registry->bind
Naming#unbind(String):::Destroys the binding for the specified name that is associated with a remote object.:::parsed->parseURL->registry->getRegistry->registry->unbind
Naming#rebind(String, Remote):::Rebinds the specified name to a new remote object:::parsed->parseURL->registry->getRegistry->if->throw->new->NullPointerException->registry->rebind
Naming#list(String):::Returns an array of the names bound in the registry:::parsed->parseURL->registry->getRegistry->prefix->if->equals->if->names->registry->list->for->i->return
Naming#getRegistry(ParsedNamingURL):::Returns a registry reference obtained from information in the URL.:::return->LocateRegistry->getRegistry
Naming#parseURL(String):::Dissect Naming URL strings to obtain referenced host, port and object name.:::try->return->intParseURL->catch->mue->new->MalformedURLException->mue->initCause->indexSchemeEnd->str->indexOf->indexAuthorityBegin->str->indexOf->if->throw->if->indexHostBegin->newStr->str->substring->str->substring->try->return->intParseURL->catch->throw->throw->finally->throw->finally
Naming#intParseURL(String)::: naming int parse l:::uri->new->URI->if->uri->isOpaque->throw->new->MalformedURLException->if->uri->getFragment->throw->new->MalformedURLException->else->if->uri->getQuery->throw->new->MalformedURLException->else->if->uri->getUserInfo->throw->new->MalformedURLException->scheme->uri->getScheme->if->scheme->equals->throw->new->MalformedURLException->name->uri->getPath->if->if->name->startsWith->name->substring->if->name->length->host->uri->getHost->if->try->uri->parseServerAuthority->catch->authority->uri->getAuthority->if->authority->startsWith->try->new->URI->uri->parseServerAuthority->catch->throw->new->MalformedURLException->finally->else->throw->new->MalformedURLException->finally->port->uri->getPort->if->return->new->ParsedNamingURL
RemoteException#getMessage():::Returns the detail message, including the message from the cause, if any, of this exception.:::if->return->super->getMessage->else->return->super->getMessage->detail->toString
RemoteException#getCause():::Returns the cause of this exception:::return
