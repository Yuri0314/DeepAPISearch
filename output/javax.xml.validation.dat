javax.xml.validation.Schema#newValidator()->Validator:::Creates a new Validator for this Schema
javax.xml.validation.Schema#newValidatorHandler()->ValidatorHandler:::Creates a new ValidatorHandler for this Schema
javax.xml.validation.SchemaFactory#newDefaultInstance()->SchemaFactory:::Creates a new instance of the SchemaFactory builtin system-default implementation.
javax.xml.validation.SchemaFactory#newInstance(String)->SchemaFactory:::Lookup an implementation of the SchemaFactory that supports the specified schema language and return it
javax.xml.validation.SchemaFactory#newInstance(String, String, ClassLoader)->SchemaFactory:::Obtain a new instance of a SchemaFactory from class name
javax.xml.validation.SchemaFactory#isSchemaLanguageSupported(String)->boolean:::Is specified schema supported by this SchemaFactory?
javax.xml.validation.SchemaFactory#getFeature(String)->boolean:::Look up the value of a feature flag
javax.xml.validation.SchemaFactory#setFeature(String, boolean)->void:::Set a feature for this SchemaFactory, Schemas created by this factory, and by extension, Validators and ValidatorHandlers created by those Schemas
javax.xml.validation.SchemaFactory#setProperty(String, Object)->void:::Set the value of a property
javax.xml.validation.SchemaFactory#getProperty(String)->Object:::Look up the value of a property
javax.xml.validation.SchemaFactory#setErrorHandler(ErrorHandler)->void:::Sets the ErrorHandler to receive errors encountered during the newSchema method invocation
javax.xml.validation.SchemaFactory#getErrorHandler()->ErrorHandler:::Gets the current ErrorHandler set to this SchemaFactory.
javax.xml.validation.SchemaFactory#setResourceResolver(LSResourceResolver)->void:::Sets the LSResourceResolver to customize resource resolution when parsing schemas
javax.xml.validation.SchemaFactory#getResourceResolver()->LSResourceResolver:::Gets the current LSResourceResolver set to this SchemaFactory.
javax.xml.validation.SchemaFactory#newSchema(Source)->Schema:::Parses the specified source as a schema and returns it as a schema
javax.xml.validation.SchemaFactory#newSchema(File)->Schema:::Parses the specified File as a schema and returns it as a Schema
javax.xml.validation.SchemaFactory#newSchema(URL)->Schema:::Parses the specified URL as a schema and returns it as a Schema
javax.xml.validation.SchemaFactory#newSchema(Source[])->Schema:::Parses the specified source(s) as a schema and returns it as a schema
javax.xml.validation.SchemaFactory#newSchema()->Schema:::Creates a special Schema object
javax.xml.validation.SchemaFactoryFinder#newFactory(String)->SchemaFactory:::Creates a new SchemaFactory object for the specified schema language.
javax.xml.validation.SchemaFactoryFinder#createInstance(String)->SchemaFactory:::Creates an instance of the specified and returns it.
javax.xml.validation.SchemaFactoryLoader#newFactory(String)->SchemaFactory:::Creates a new SchemaFactory object for the specified schema language.
javax.xml.validation.TypeInfoProvider#getElementTypeInfo()->TypeInfo:::Returns the immutable TypeInfo object for the current element.  The method may only be called by the startElement event or the endElement event of the org.xml.sax.ContentHandler that the application sets to the ValidatorHandler.  When W3C XML Schema validation is being performed, in the case where an element has a union type, the TypeInfo returned by a call to getElementTypeInfo() from the startElement event will be the union type
javax.xml.validation.TypeInfoProvider#getAttributeTypeInfo(int)->TypeInfo:::Returns the immutable TypeInfo object for the specified attribute of the current element
javax.xml.validation.TypeInfoProvider#isIdAttribute(int)->boolean:::Returns true if the specified attribute is determined to be ID
javax.xml.validation.TypeInfoProvider#isSpecified(int)->boolean:::Returns false if the attribute was added by the validator
javax.xml.validation.Validator#reset()->void:::Reset this Validator to its original configuration
javax.xml.validation.Validator#validate(Source)->void:::Validates the specified input
javax.xml.validation.Validator#validate(Source, Result)->void:::Validates the specified input and send the augmented validation result to the specified output
javax.xml.validation.Validator#setErrorHandler(ErrorHandler)->void:::Sets the ErrorHandler to receive errors encountered during the validate method invocation
javax.xml.validation.Validator#getErrorHandler()->ErrorHandler:::Gets the current ErrorHandler set to this Validator.
javax.xml.validation.Validator#setResourceResolver(LSResourceResolver)->void:::Sets the LSResourceResolver to customize resource resolution while in a validation episode
javax.xml.validation.Validator#getResourceResolver()->LSResourceResolver:::Gets the current LSResourceResolver set to this Validator.
javax.xml.validation.Validator#getFeature(String)->boolean:::Look up the value of a feature flag
javax.xml.validation.Validator#setFeature(String, boolean)->void:::Set the value of a feature flag
javax.xml.validation.Validator#setProperty(String, Object)->void:::Set the value of a property
javax.xml.validation.Validator#getProperty(String)->Object:::Look up the value of a property
javax.xml.validation.ValidatorHandler#setContentHandler(ContentHandler)->void:::Sets the ContentHandler which receives the augmented validation result
javax.xml.validation.ValidatorHandler#getContentHandler()->ContentHandler:::Gets the ContentHandler which receives the augmented validation result.
javax.xml.validation.ValidatorHandler#setErrorHandler(ErrorHandler)->void:::Sets the ErrorHandler to receive errors encountered during the validation
javax.xml.validation.ValidatorHandler#getErrorHandler()->ErrorHandler:::Gets the current ErrorHandler set to this ValidatorHandler.
javax.xml.validation.ValidatorHandler#setResourceResolver(LSResourceResolver)->void:::Sets the LSResourceResolver to customize resource resolution while in a validation episode
javax.xml.validation.ValidatorHandler#getResourceResolver()->LSResourceResolver:::Gets the current LSResourceResolver set to this ValidatorHandler.
javax.xml.validation.ValidatorHandler#getTypeInfoProvider()->TypeInfoProvider:::Obtains the TypeInfoProvider implementation of this ValidatorHandler
javax.xml.validation.ValidatorHandler#getFeature(String)->boolean:::Look up the value of a feature flag
javax.xml.validation.ValidatorHandler#setFeature(String, boolean)->void:::Set a feature for this ValidatorHandler.  Feature can be used to control the way a ValidatorHandler parses schemas
javax.xml.validation.ValidatorHandler#setProperty(String, Object)->void:::Set the value of a property
javax.xml.validation.ValidatorHandler#getProperty(String)->Object:::Look up the value of a property
