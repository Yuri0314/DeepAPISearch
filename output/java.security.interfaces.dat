java.security.interfaces.DSAKey#getParams()->DSAParams:::Returns the DSA-specific key parameters
java.security.interfaces.DSAKeyPairGenerator#initialize(DSAParams, SecureRandom)->void:::Initializes the key pair generator using the DSA family parameters (p,q and g) and an optional SecureRandom bit source
java.security.interfaces.DSAKeyPairGenerator#initialize(int, boolean, SecureRandom)->void:::Initializes the key pair generator for a given modulus length (instead of parameters), and an optional SecureRandom bit source
java.security.interfaces.DSAParams#getP()->BigInteger:::Returns the prime, p.
java.security.interfaces.DSAParams#getQ()->BigInteger:::Returns the subprime, q.
java.security.interfaces.DSAParams#getG()->BigInteger:::Returns the base, g.
java.security.interfaces.DSAPrivateKey#getX()->BigInteger:::Returns the value of the private key, x.
java.security.interfaces.DSAPublicKey#getY()->BigInteger:::Returns the value of the public key, y.
java.security.interfaces.ECKey#getParams()->ECParameterSpec:::Returns the domain parameters associated with this key
java.security.interfaces.ECPrivateKey#getS()->BigInteger:::Returns the private value S.
java.security.interfaces.ECPublicKey#getW()->ECPoint:::Returns the public point W.
java.security.interfaces.RSAKey#getModulus()->BigInteger:::Returns the modulus.
java.security.interfaces.RSAKey#getParams()->AlgorithmParameterSpec:::Returns the parameters associated with this key
java.security.interfaces.RSAMultiPrimePrivateCrtKey#getPublicExponent()->BigInteger:::Returns the public exponent.
java.security.interfaces.RSAMultiPrimePrivateCrtKey#getPrimeP()->BigInteger:::Returns the primeP.
java.security.interfaces.RSAMultiPrimePrivateCrtKey#getPrimeQ()->BigInteger:::Returns the primeQ.
java.security.interfaces.RSAMultiPrimePrivateCrtKey#getPrimeExponentP()->BigInteger:::Returns the primeExponentP.
java.security.interfaces.RSAMultiPrimePrivateCrtKey#getPrimeExponentQ()->BigInteger:::Returns the primeExponentQ.
java.security.interfaces.RSAMultiPrimePrivateCrtKey#getCrtCoefficient()->BigInteger:::Returns the crtCoefficient.
java.security.interfaces.RSAMultiPrimePrivateCrtKey#getOtherPrimeInfo()->RSAOtherPrimeInfo[]:::Returns the otherPrimeInfo or null if there are only two prime factors (p and q).
java.security.interfaces.RSAPrivateCrtKey#getPublicExponent()->BigInteger:::Returns the public exponent.
java.security.interfaces.RSAPrivateCrtKey#getPrimeP()->BigInteger:::Returns the primeP.
java.security.interfaces.RSAPrivateCrtKey#getPrimeQ()->BigInteger:::Returns the primeQ.
java.security.interfaces.RSAPrivateCrtKey#getPrimeExponentP()->BigInteger:::Returns the primeExponentP.
java.security.interfaces.RSAPrivateCrtKey#getPrimeExponentQ()->BigInteger:::Returns the primeExponentQ.
java.security.interfaces.RSAPrivateCrtKey#getCrtCoefficient()->BigInteger:::Returns the crtCoefficient.
java.security.interfaces.RSAPrivateKey#getPrivateExponent()->BigInteger:::Returns the private exponent.
java.security.interfaces.RSAPublicKey#getPublicExponent()->BigInteger:::Returns the public exponent.
java.security.interfaces.XECKey#getParams()->AlgorithmParameterSpec:::Returns the algorithm parameters associated with the key.
java.security.interfaces.XECPrivateKey#getScalar()->Optional:::Get the scalar value encoded as an unpruned byte array
java.security.interfaces.XECPublicKey#getU()->BigInteger:::Get the u coordinate of the point.
