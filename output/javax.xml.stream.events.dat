Attribute#getName():::Returns the QName for this attribute:::
Attribute#getValue():::Gets the normalized value of this attribute:::
Attribute#getDTDType():::Gets the type of this attribute, default is the String "CDATA":::
Attribute#isSpecified():::A flag indicating whether this attribute was actually specified in the start-tag of its element, or was defaulted from the schema.:::
Characters#getData():::Get the character data of this event:::
Characters#isWhiteSpace():::Returns true if this set of Characters is all whitespace:::
Characters#isCData():::Returns true if this is a CData section:::
Characters#isIgnorableWhiteSpace():::Return true if this is ignorableWhiteSpace:::
Comment#getText():::Return the string data of the comment, returns empty string if it does not exist:::
DTD#getDocumentTypeDeclaration():::Returns the entire Document Type Declaration as a string, including the internal DTD subset:::
DTD#getProcessedDTD():::Returns an implementation defined representation of the DTD:::
DTD#getNotations():::Return a List containing the notations declared in the DTD:::
DTD#getEntities():::Return a List containing the general entities, both external and internal, declared in the DTD:::
EndElement#getName():::Get the name of this event:::
EndElement#getNamespaces():::Returns an Iterator of namespaces that have gone out of scope:::
EntityDeclaration#getPublicId():::The entity's public identifier, or null if none was given:::
EntityDeclaration#getSystemId():::The entity's system identifier.:::
EntityDeclaration#getName():::The entity's name:::
EntityDeclaration#getNotationName():::The name of the associated notation.:::
EntityDeclaration#getReplacementText():::The replacement text of the entity:::
EntityDeclaration#getBaseURI():::Get the base URI for this reference or null if this information is not available:::
EntityReference#getDeclaration():::Return the declaration of this entity.:::
EntityReference#getName():::The name of the entity:::
Namespace#getPrefix():::Gets the prefix, returns "" if this is a default namespace declaration.:::
Namespace#getNamespaceURI():::Gets the uri bound to the prefix of this namespace:::
Namespace#isDefaultNamespaceDeclaration():::returns true if this attribute declares the default namespace:::
NotationDeclaration#getName():::The notation name.:::
NotationDeclaration#getPublicId():::The notation's public identifier, or null if none was given.:::
NotationDeclaration#getSystemId():::The notation's system identifier, or null if none was given.:::
ProcessingInstruction#getTarget():::The target section of the processing instruction:::
ProcessingInstruction#getData():::The data section of the processing instruction:::
StartDocument#getSystemId():::Returns the system ID of the XML data:::
StartDocument#getCharacterEncodingScheme():::Returns the encoding style of the XML data:::
StartDocument#encodingSet():::Returns true if CharacterEncodingScheme was set in the encoding declaration of the document:::
StartDocument#isStandalone():::Returns if this XML is standalone:::
StartDocument#standaloneSet():::Returns true if the standalone attribute was set in the encoding declaration of the document.:::
StartDocument#getVersion():::Returns the version of XML of this XML stream:::
StartElement#getName():::Get the name of this event:::
StartElement#getAttributes():::Returns an Iterator of non-namespace declared attributes declared on this START_ELEMENT, returns an empty iterator if there are no attributes:::
StartElement#getNamespaces():::Returns an Iterator of namespaces declared on this element:::
StartElement#getAttributeByName(QName):::Returns the attribute referred to by this name:::
StartElement#getNamespaceContext():::Gets a read-only namespace context:::
StartElement#getNamespaceURI(String):::Gets the value that the prefix is bound to in the context of this element:::
XMLEvent#getEventType():::Returns an integer code for this event.:::
XMLEvent#getLocation():::Return the location of this event:::
XMLEvent#isStartElement():::A utility function to check if this event is a StartElement.:::
XMLEvent#isAttribute():::A utility function to check if this event is an Attribute.:::
XMLEvent#isNamespace():::A utility function to check if this event is a Namespace.:::
XMLEvent#isEndElement():::A utility function to check if this event is a EndElement.:::
XMLEvent#isEntityReference():::A utility function to check if this event is an EntityReference.:::
XMLEvent#isProcessingInstruction():::A utility function to check if this event is a ProcessingInstruction.:::
XMLEvent#isCharacters():::A utility function to check if this event is Characters.:::
XMLEvent#isStartDocument():::A utility function to check if this event is a StartDocument.:::
XMLEvent#isEndDocument():::A utility function to check if this event is an EndDocument.:::
XMLEvent#asStartElement():::Returns this event as a start element event, may result in a class cast exception if this event is not a start element.:::
XMLEvent#asEndElement():::Returns this event as an end  element event, may result in a class cast exception if this event is not a end element.:::
XMLEvent#asCharacters():::Returns this event as Characters, may result in a class cast exception if this event is not Characters.:::
XMLEvent#getSchemaType():::This method is provided for implementations to provide optional type information about the associated event:::
XMLEvent#writeAsEncodedUnicode(Writer):::This method will write the XMLEvent as per the XML 1.0 specification as Unicode characters:::
