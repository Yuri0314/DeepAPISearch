jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterUnaryNode(UnaryNode)->boolean::: node operator visitor enter unary node
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveUnaryNode(UnaryNode)->Node::: node operator visitor leave unary node
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterBinaryNode(BinaryNode)->boolean::: node operator visitor enter binary node
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveBinaryNode(BinaryNode)->Node::: node operator visitor leave binary node
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterPOS(UnaryNode)->boolean:::Unary enter - callback for entering a unary +
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leavePOS(UnaryNode)->Node:::Unary leave - callback for leaving a unary +
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterBIT_NOT(UnaryNode)->boolean:::Unary enter - callback for entering a ~ operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveBIT_NOT(UnaryNode)->Node:::Unary leave - callback for leaving a unary ~
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterDECINC(UnaryNode)->boolean:::Unary enter - callback for entering a ++ or -- operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveDECINC(UnaryNode)->Node:::Unary leave - callback for leaving a ++ or -- operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterDELETE(UnaryNode)->boolean:::Unary enter - callback for entering a delete operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveDELETE(UnaryNode)->Node:::Unary leave - callback for leaving a delete operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterNEW(UnaryNode)->boolean:::Unary enter - callback for entering a new operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveNEW(UnaryNode)->Node:::Unary leave - callback for leaving a new operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterNOT(UnaryNode)->boolean:::Unary enter - callback for entering a ! operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveNOT(UnaryNode)->Node:::Unary leave - callback for leaving a ! operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterNEG(UnaryNode)->boolean:::Unary enter - callback for entering a unary -
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveNEG(UnaryNode)->Node:::Unary leave - callback for leaving a unary -
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterTYPEOF(UnaryNode)->boolean:::Unary enter - callback for entering a typeof
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveTYPEOF(UnaryNode)->Node:::Unary leave - callback for leaving a typeof operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterVOID(UnaryNode)->boolean:::Unary enter - callback for entering a void
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveVOID(UnaryNode)->Node:::Unary leave - callback for leaving a void
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterADD(BinaryNode)->boolean:::Binary enter - callback for entering + operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveADD(BinaryNode)->Node:::Binary leave - callback for leaving a + operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterAND(BinaryNode)->boolean:::Binary enter - callback for entering && operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveAND(BinaryNode)->Node:::Binary leave - callback for leaving a && operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN(BinaryNode)->boolean:::Binary enter - callback for entering an assignment
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN(BinaryNode)->Node:::Binary leave - callback for leaving an assignment
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_ADD(BinaryNode)->boolean:::Binary enter - callback for entering += operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_ADD(BinaryNode)->Node:::Binary leave - callback for leaving a += operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_BIT_AND(BinaryNode)->boolean:::Binary enter - callback for entering &= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_BIT_AND(BinaryNode)->Node:::Binary leave - callback for leaving a &= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_BIT_OR(BinaryNode)->boolean:::Binary enter - callback for entering |= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_BIT_OR(BinaryNode)->Node:::Binary leave - callback for leaving a |= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_BIT_XOR(BinaryNode)->boolean:::Binary enter - callback for entering ^= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_BIT_XOR(BinaryNode)->Node:::Binary leave - callback for leaving a ^= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_DIV(BinaryNode)->boolean:::Binary enter - callback for entering /= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_DIV(BinaryNode)->Node:::Binary leave - callback for leaving a /= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_MOD(BinaryNode)->boolean:::Binary enter - callback for entering %= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_MOD(BinaryNode)->Node:::Binary leave - callback for leaving a %= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_MUL(BinaryNode)->boolean:::Binary enter - callback for entering *= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_MUL(BinaryNode)->Node:::Binary leave - callback for leaving a *= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_SAR(BinaryNode)->boolean:::Binary enter - callback for entering >>= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_SAR(BinaryNode)->Node:::Binary leave - callback for leaving a >>= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_SHL(BinaryNode)->boolean:::Binary enter - callback for entering a <<= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_SHL(BinaryNode)->Node:::Binary leave - callback for leaving a <<= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_SHR(BinaryNode)->boolean:::Binary enter - callback for entering >>>= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_SHR(BinaryNode)->Node:::Binary leave - callback for leaving a >>>= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterASSIGN_SUB(BinaryNode)->boolean:::Binary enter - callback for entering -= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveASSIGN_SUB(BinaryNode)->Node:::Binary leave - callback for leaving a -= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterARROW(BinaryNode)->boolean:::Binary enter - callback for entering a arrow operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveARROW(BinaryNode)->Node:::Binary leave - callback for leaving a arrow operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterBIT_AND(BinaryNode)->boolean:::Binary enter - callback for entering & operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveBIT_AND(BinaryNode)->Node:::Binary leave - callback for leaving a & operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterBIT_OR(BinaryNode)->boolean:::Binary enter - callback for entering | operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveBIT_OR(BinaryNode)->Node:::Binary leave - callback for leaving a | operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterBIT_XOR(BinaryNode)->boolean:::Binary enter - callback for entering ^ operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveBIT_XOR(BinaryNode)->Node:::Binary leave - callback for leaving a  operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterCOMMARIGHT(BinaryNode)->boolean:::Binary enter - callback for entering comma right operator (a, b) where the result is b
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveCOMMARIGHT(BinaryNode)->Node:::Binary leave - callback for leaving a comma left operator (a, b) where the result is b
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterDIV(BinaryNode)->boolean:::Binary enter - callback for entering a division
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveDIV(BinaryNode)->Node:::Binary leave - callback for leaving a division
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterEQ(BinaryNode)->boolean:::Binary enter - callback for entering == operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveEQ(BinaryNode)->Node:::Binary leave - callback for leaving == operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterEQ_STRICT(BinaryNode)->boolean:::Binary enter - callback for entering === operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveEQ_STRICT(BinaryNode)->Node:::Binary leave - callback for leaving === operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterGE(BinaryNode)->boolean:::Binary enter - callback for entering >= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveGE(BinaryNode)->Node:::Binary leave - callback for leaving >= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterGT(BinaryNode)->boolean:::Binary enter - callback for entering > operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveGT(BinaryNode)->Node:::Binary leave - callback for leaving > operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterIN(BinaryNode)->boolean:::Binary enter - callback for entering in operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveIN(BinaryNode)->Node:::Binary leave - callback for leaving in operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterINSTANCEOF(BinaryNode)->boolean:::Binary enter - callback for entering instanceof operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveINSTANCEOF(BinaryNode)->Node:::Binary leave - callback for leaving instanceof operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterLE(BinaryNode)->boolean:::Binary enter - callback for entering <= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveLE(BinaryNode)->Node:::Binary leave - callback for leaving <= operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterLT(BinaryNode)->boolean:::Binary enter - callback for entering < operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveLT(BinaryNode)->Node:::Binary leave - callback for leaving < operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterMOD(BinaryNode)->boolean:::Binary enter - callback for entering % operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveMOD(BinaryNode)->Node:::Binary leave - callback for leaving % operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterMUL(BinaryNode)->boolean:::Binary enter - callback for entering * operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveMUL(BinaryNode)->Node:::Binary leave - callback for leaving * operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterNE(BinaryNode)->boolean:::Binary enter - callback for entering != operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveNE(BinaryNode)->Node:::Binary leave - callback for leaving != operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterNE_STRICT(BinaryNode)->boolean:::Binary enter - callback for entering a !== operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveNE_STRICT(BinaryNode)->Node:::Binary leave - callback for leaving !== operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterOR(BinaryNode)->boolean:::Binary enter - callback for entering || operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveOR(BinaryNode)->Node:::Binary leave - callback for leaving || operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterSAR(BinaryNode)->boolean:::Binary enter - callback for entering >> operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveSAR(BinaryNode)->Node:::Binary leave - callback for leaving >> operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterSHL(BinaryNode)->boolean:::Binary enter - callback for entering << operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveSHL(BinaryNode)->Node:::Binary leave - callback for leaving << operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterSHR(BinaryNode)->boolean:::Binary enter - callback for entering >>> operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveSHR(BinaryNode)->Node:::Binary leave - callback for leaving >>> operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#enterSUB(BinaryNode)->boolean:::Binary enter - callback for entering - operator
jdk.nashorn.internal.ir.visitor.NodeOperatorVisitor#leaveSUB(BinaryNode)->Node:::Binary leave - callback for leaving - operator
jdk.nashorn.internal.ir.visitor.NodeVisitor#getLexicalContext()->T:::Get the lexical context of this node visitor
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterDefault(Node)->boolean:::Override this method to do a double inheritance pattern, e.g
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveDefault(Node)->Node:::Override this method to do a double inheritance pattern, e.g
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterAccessNode(AccessNode)->boolean:::Callback for entering an AccessNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveAccessNode(AccessNode)->Node:::Callback for entering an AccessNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterBlock(Block)->boolean:::Callback for entering a Block
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveBlock(Block)->Node:::Callback for leaving a Block
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterBinaryNode(BinaryNode)->boolean:::Callback for entering a BinaryNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveBinaryNode(BinaryNode)->Node:::Callback for leaving a BinaryNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterBreakNode(BreakNode)->boolean:::Callback for entering a BreakNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveBreakNode(BreakNode)->Node:::Callback for leaving a BreakNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterCallNode(CallNode)->boolean:::Callback for entering a CallNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveCallNode(CallNode)->Node:::Callback for leaving a CallNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterCaseNode(CaseNode)->boolean:::Callback for entering a CaseNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveCaseNode(CaseNode)->Node:::Callback for leaving a CaseNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterCatchNode(CatchNode)->boolean:::Callback for entering a CatchNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveCatchNode(CatchNode)->Node:::Callback for leaving a CatchNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterContinueNode(ContinueNode)->boolean:::Callback for entering a ContinueNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveContinueNode(ContinueNode)->Node:::Callback for leaving a ContinueNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterDebuggerNode(DebuggerNode)->boolean:::Callback for entering a DebuggerNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveDebuggerNode(DebuggerNode)->Node:::Callback for leaving a DebuggerNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterEmptyNode(EmptyNode)->boolean:::Callback for entering an EmptyNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveEmptyNode(EmptyNode)->Node:::Callback for leaving an EmptyNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterErrorNode(ErrorNode)->boolean:::Callback for entering an ErrorNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveErrorNode(ErrorNode)->Node:::Callback for leaving an ErrorNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterExpressionStatement(ExpressionStatement)->boolean:::Callback for entering an ExpressionStatement
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveExpressionStatement(ExpressionStatement)->Node:::Callback for leaving an ExpressionStatement
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterBlockStatement(BlockStatement)->boolean:::Callback for entering a BlockStatement
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveBlockStatement(BlockStatement)->Node:::Callback for leaving a BlockStatement
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterForNode(ForNode)->boolean:::Callback for entering a ForNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveForNode(ForNode)->Node:::Callback for leaving a ForNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterFunctionNode(FunctionNode)->boolean:::Callback for entering a FunctionNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveFunctionNode(FunctionNode)->Node:::Callback for leaving a FunctionNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterGetSplitState(GetSplitState)->boolean:::Callback for entering a GetSplitState.
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveGetSplitState(GetSplitState)->Node:::Callback for leaving a GetSplitState.
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterIdentNode(IdentNode)->boolean:::Callback for entering an IdentNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveIdentNode(IdentNode)->Node:::Callback for leaving an IdentNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterIfNode(IfNode)->boolean:::Callback for entering an IfNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveIfNode(IfNode)->Node:::Callback for leaving an IfNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterIndexNode(IndexNode)->boolean:::Callback for entering an IndexNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveIndexNode(IndexNode)->Node:::Callback for leaving an IndexNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterJumpToInlinedFinally(JumpToInlinedFinally)->boolean:::Callback for entering a JumpToInlinedFinally
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveJumpToInlinedFinally(JumpToInlinedFinally)->Node:::Callback for leaving a JumpToInlinedFinally
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterLabelNode(LabelNode)->boolean:::Callback for entering a LabelNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveLabelNode(LabelNode)->Node:::Callback for leaving a LabelNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterLiteralNode(LiteralNode)->boolean:::Callback for entering a LiteralNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveLiteralNode(LiteralNode)->Node:::Callback for leaving a LiteralNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterObjectNode(ObjectNode)->boolean:::Callback for entering an ObjectNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveObjectNode(ObjectNode)->Node:::Callback for leaving an ObjectNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterPropertyNode(PropertyNode)->boolean:::Callback for entering a PropertyNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leavePropertyNode(PropertyNode)->Node:::Callback for leaving a PropertyNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterReturnNode(ReturnNode)->boolean:::Callback for entering a ReturnNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveReturnNode(ReturnNode)->Node:::Callback for leaving a ReturnNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterRuntimeNode(RuntimeNode)->boolean:::Callback for entering a RuntimeNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveRuntimeNode(RuntimeNode)->Node:::Callback for leaving a RuntimeNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterSetSplitState(SetSplitState)->boolean:::Callback for entering a SetSplitState.
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveSetSplitState(SetSplitState)->Node:::Callback for leaving a SetSplitState.
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterSplitNode(SplitNode)->boolean:::Callback for entering a SplitNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveSplitNode(SplitNode)->Node:::Callback for leaving a SplitNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterSplitReturn(SplitReturn)->boolean:::Callback for entering a SplitReturn
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveSplitReturn(SplitReturn)->Node:::Callback for leaving a SplitReturn
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterSwitchNode(SwitchNode)->boolean:::Callback for entering a SwitchNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveSwitchNode(SwitchNode)->Node:::Callback for leaving a SwitchNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterTemplateLiteral(TemplateLiteral)->boolean:::Callback for entering a TemplateLiteral (used only in --parse-only mode)
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveTemplateLiteral(TemplateLiteral)->Node:::Callback for leaving a TemplateLiteral (used only in --parse-only mode)
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterTernaryNode(TernaryNode)->boolean:::Callback for entering a TernaryNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveTernaryNode(TernaryNode)->Node:::Callback for leaving a TernaryNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterThrowNode(ThrowNode)->boolean:::Callback for entering a ThrowNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveThrowNode(ThrowNode)->Node:::Callback for leaving a ThrowNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterTryNode(TryNode)->boolean:::Callback for entering a TryNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveTryNode(TryNode)->Node:::Callback for leaving a TryNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterUnaryNode(UnaryNode)->boolean:::Callback for entering a UnaryNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveUnaryNode(UnaryNode)->Node:::Callback for leaving a UnaryNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterJoinPredecessorExpression(JoinPredecessorExpression)->boolean:::Callback for entering a JoinPredecessorExpression.
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveJoinPredecessorExpression(JoinPredecessorExpression)->Node:::Callback for leaving a JoinPredecessorExpression.
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterVarNode(VarNode)->boolean:::Callback for entering a VarNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveVarNode(VarNode)->Node:::Callback for leaving a VarNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterWhileNode(WhileNode)->boolean:::Callback for entering a WhileNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveWhileNode(WhileNode)->Node:::Callback for leaving a WhileNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterWithNode(WithNode)->boolean:::Callback for entering a WithNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveWithNode(WithNode)->Node:::Callback for leaving a WithNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#enterClassNode(ClassNode)->boolean:::Callback for entering a ClassNode
jdk.nashorn.internal.ir.visitor.NodeVisitor#leaveClassNode(ClassNode)->Node:::Callback for leaving a ClassNode
