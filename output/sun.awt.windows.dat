sun.awt.windows.awtLocalization#getContents()->Object[][]:::awt localization get contents
sun.awt.windows.awtLocalization_ja#getContents()->Object[][]:::awt localization_ja get contents
sun.awt.windows.awtLocalization_zh_CN#getContents()->Object[][]:::awt localization_zh_ n get contents
sun.awt.windows.ThemeReader#flush()->void::: theme reader flush
sun.awt.windows.ThemeReader#isThemed()->boolean::: theme reader is themed
sun.awt.windows.ThemeReader#isXPStyleEnabled()->boolean::: theme reader is style enabled
sun.awt.windows.ThemeReader#paintBackground(int[], String, int, int, int, int, int, int, int)->void::: theme reader paint background
sun.awt.windows.ThemeReader#getThemeMargins(String, int, int, int)->Insets::: theme reader get theme margins
sun.awt.windows.ThemeReader#isThemePartDefined(String, int, int)->boolean::: theme reader is theme part defined
sun.awt.windows.ThemeReader#getColor(String, int, int, int)->Color::: theme reader get color
sun.awt.windows.ThemeReader#getInt(String, int, int, int)->int::: theme reader get int
sun.awt.windows.ThemeReader#getEnum(String, int, int, int)->int::: theme reader get enum
sun.awt.windows.ThemeReader#getBoolean(String, int, int, int)->boolean::: theme reader get boolean
sun.awt.windows.ThemeReader#getSysBoolean(String, int)->boolean::: theme reader get sys boolean
sun.awt.windows.ThemeReader#getPoint(String, int, int, int)->Point::: theme reader get point
sun.awt.windows.ThemeReader#getPosition(String, int, int, int)->Dimension::: theme reader get position
sun.awt.windows.ThemeReader#getPartSize(String, int, int)->Dimension::: theme reader get part size
sun.awt.windows.ThemeReader#getThemeTransitionDuration(String, int, int, int, int)->long::: theme reader get theme transition duration
sun.awt.windows.ThemeReader#isGetThemeTransitionDurationDefined()->boolean::: theme reader is get theme transition duration defined
sun.awt.windows.ThemeReader#getThemeBackgroundContentMargins(String, int, int, int, int)->Insets::: theme reader get theme background content margins
sun.awt.windows.TranslucentWindowPainter#createInstance(WWindowPeer)->TranslucentWindowPainter:::Creates an instance of the painter for particular peer.
sun.awt.windows.TranslucentWindowPainter#getBackBuffer(boolean)->Image:::Creates (if needed), clears (if requested) and returns the buffer for this painter.
sun.awt.windows.TranslucentWindowPainter#update(Image)->boolean:::Updates the window associated with this painter with the contents of the passed image
sun.awt.windows.TranslucentWindowPainter#getGraphics(boolean)->Graphics:::Create (if needed), clears back buffer (if requested) and return graphics for this class depending upon the buffer type
sun.awt.windows.TranslucentWindowPainter#flush()->void:::Flushes the resources associated with the painter
sun.awt.windows.TranslucentWindowPainter#updateWindow(boolean)->void:::Updates the window associated with the painter.
sun.awt.windows.WButtonPeer#getMinimumSize()->Dimension::: button peer get minimum size
sun.awt.windows.WButtonPeer#isFocusable()->boolean::: button peer is focusable
sun.awt.windows.WButtonPeer#setLabel(String)->void::: button peer set label
sun.awt.windows.WButtonPeer#create(WComponentPeer)->void::: button peer create
sun.awt.windows.WButtonPeer#handleAction(long, int)->void::: button peer handle action
sun.awt.windows.WButtonPeer#shouldClearRectBeforePaint()->boolean::: button peer should clear rect before paint
sun.awt.windows.WButtonPeer#handleJavaKeyEvent(KeyEvent)->boolean::: button peer handle java key event
sun.awt.windows.WCanvasPeer#create(WComponentPeer)->void::: canvas peer create
sun.awt.windows.WCanvasPeer#initialize()->void::: canvas peer initialize
sun.awt.windows.WCanvasPeer#paint(Graphics)->void::: canvas peer paint
sun.awt.windows.WCanvasPeer#shouldClearRectBeforePaint()->boolean::: canvas peer should clear rect before paint
sun.awt.windows.WCanvasPeer#disableBackgroundErase()->void::: canvas peer disable background erase
sun.awt.windows.WCanvasPeer#getAppropriateGraphicsConfiguration(GraphicsConfiguration)->GraphicsConfiguration::: canvas peer get appropriate graphics configuration
sun.awt.windows.WCheckboxMenuItemPeer#setState(boolean)->void::: checkbox menu item peer set state
sun.awt.windows.WCheckboxMenuItemPeer#handleAction(boolean)->void::: checkbox menu item peer handle action
sun.awt.windows.WCheckboxPeer#setState(boolean)->void::: checkbox peer set state
sun.awt.windows.WCheckboxPeer#setCheckboxGroup(CheckboxGroup)->void::: checkbox peer set checkbox group
sun.awt.windows.WCheckboxPeer#setLabel(String)->void::: checkbox peer set label
sun.awt.windows.WCheckboxPeer#getMinimumSize()->Dimension::: checkbox peer get minimum size
sun.awt.windows.WCheckboxPeer#isFocusable()->boolean::: checkbox peer is focusable
sun.awt.windows.WCheckboxPeer#create(WComponentPeer)->void::: checkbox peer create
sun.awt.windows.WCheckboxPeer#initialize()->void::: checkbox peer initialize
sun.awt.windows.WCheckboxPeer#shouldClearRectBeforePaint()->boolean::: checkbox peer should clear rect before paint
sun.awt.windows.WCheckboxPeer#handleAction(boolean)->void::: checkbox peer handle action
sun.awt.windows.WChoicePeer#getMinimumSize()->Dimension::: choice peer get minimum size
sun.awt.windows.WChoicePeer#isFocusable()->boolean::: choice peer is focusable
sun.awt.windows.WChoicePeer#select(int)->void::: choice peer select
sun.awt.windows.WChoicePeer#add(String, int)->void::: choice peer add
sun.awt.windows.WChoicePeer#shouldClearRectBeforePaint()->boolean::: choice peer should clear rect before paint
sun.awt.windows.WChoicePeer#removeAll()->void::: choice peer remove all
sun.awt.windows.WChoicePeer#remove(int)->void::: choice peer remove
sun.awt.windows.WChoicePeer#addItems(String[], int)->void::: choice peer add items
sun.awt.windows.WChoicePeer#reshape(int, int, int, int)->void::: choice peer reshape
sun.awt.windows.WChoicePeer#create(WComponentPeer)->void::: choice peer create
sun.awt.windows.WChoicePeer#initialize()->void::: choice peer initialize
sun.awt.windows.WChoicePeer#disposeImpl()->void::: choice peer dispose impl
sun.awt.windows.WChoicePeer#handleAction(int)->void::: choice peer handle action
sun.awt.windows.WChoicePeer#getDropDownHeight()->int::: choice peer get drop down height
sun.awt.windows.WChoicePeer#closeList()->void::: choice peer close list
sun.awt.windows.WClipboard#getID()->long::: clipboard get d
sun.awt.windows.WClipboard#setContentsNative(Transferable)->void::: clipboard set contents native
sun.awt.windows.WClipboard#clearNativeContext()->void:::Currently delayed data rendering is not used for the Windows clipboard, so there is no native context to clear.
sun.awt.windows.WClipboard#openClipboard(SunClipboard)->void:::Call the Win32 OpenClipboard function
sun.awt.windows.WClipboard#closeClipboard()->void:::Call the Win32 CloseClipboard function if we have clipboard ownership, does nothing if we have not ownership.
sun.awt.windows.WClipboard#getClipboardFormats()->long[]::: clipboard get clipboard formats
sun.awt.windows.WClipboard#getClipboardData(long)->byte[]::: clipboard get clipboard data
sun.awt.windows.WClipboard#registerClipboardViewerChecked()->void::: clipboard register clipboard viewer checked
sun.awt.windows.WClipboard#unregisterClipboardViewerChecked()->void:::The clipboard viewer (it's the toolkit window) is not unregistered until the toolkit window disposing since MSDN suggests removing the window from the clipboard viewer chain just before it is destroyed.
sun.awt.windows.WClipboard#createLocaleTransferable(long[])->Transferable:::The clipboard must be opened.
sun.awt.windows.WComponentPeer#isObscured()->boolean::: component peer is obscured
sun.awt.windows.WComponentPeer#canDetermineObscurity()->boolean::: component peer can determine obscurity
sun.awt.windows.WComponentPeer#hide()->void::: component peer hide
sun.awt.windows.WComponentPeer#enable()->void::: component peer enable
sun.awt.windows.WComponentPeer#disable()->void::: component peer disable
sun.awt.windows.WComponentPeer#getHWnd()->long::: component peer get wnd
sun.awt.windows.WComponentPeer#getLocationOnScreen()->Point::: component peer get location on screen
sun.awt.windows.WComponentPeer#setVisible(boolean)->void::: component peer set visible
sun.awt.windows.WComponentPeer#show()->void::: component peer show
sun.awt.windows.WComponentPeer#setEnabled(boolean)->void::: component peer set enabled
sun.awt.windows.WComponentPeer#setBounds(int, int, int, int, int)->void::: component peer set bounds
sun.awt.windows.WComponentPeer#dynamicallyLayoutContainer()->void::: component peer dynamically layout container
sun.awt.windows.WComponentPeer#paintDamagedAreaImmediately()->void::: component peer paint damaged area immediately
sun.awt.windows.WComponentPeer#updateWindow()->void::: component peer update window
sun.awt.windows.WComponentPeer#paint(Graphics)->void::: component peer paint
sun.awt.windows.WComponentPeer#repaint(long, int, int, int, int)->void::: component peer repaint
sun.awt.windows.WComponentPeer#print(Graphics)->void::: component peer print
sun.awt.windows.WComponentPeer#coalescePaintEvent(PaintEvent)->void::: component peer coalesce paint event
sun.awt.windows.WComponentPeer#reshape(int, int, int, int)->void::: component peer reshape
sun.awt.windows.WComponentPeer#handleJavaKeyEvent(KeyEvent)->boolean::: component peer handle java key event
sun.awt.windows.WComponentPeer#handleJavaMouseEvent(MouseEvent)->void::: component peer handle java mouse event
sun.awt.windows.WComponentPeer#nativeHandleEvent(AWTEvent)->void::: component peer native handle event
sun.awt.windows.WComponentPeer#handleEvent(AWTEvent)->void::: component peer handle event
sun.awt.windows.WComponentPeer#handleJavaFocusEvent(FocusEvent)->void::: component peer handle java focus event
sun.awt.windows.WComponentPeer#setFocus(boolean)->void::: component peer set focus
sun.awt.windows.WComponentPeer#getMinimumSize()->Dimension::: component peer get minimum size
sun.awt.windows.WComponentPeer#getPreferredSize()->Dimension::: component peer get preferred size
sun.awt.windows.WComponentPeer#layout()->void::: component peer layout
sun.awt.windows.WComponentPeer#getBounds()->Rectangle::: component peer get bounds
sun.awt.windows.WComponentPeer#isFocusable()->boolean::: component peer is focusable
sun.awt.windows.WComponentPeer#getGraphicsConfiguration()->GraphicsConfiguration::: component peer get graphics configuration
sun.awt.windows.WComponentPeer#getSurfaceData()->SurfaceData::: component peer get surface data
sun.awt.windows.WComponentPeer#replaceSurfaceData()->void:::Creates new surfaceData object and invalidates the previous surfaceData object
sun.awt.windows.WComponentPeer#createScreenSurface(boolean)->void::: component peer create screen surface
sun.awt.windows.WComponentPeer#replaceSurfaceData(int, BufferCapabilities)->void:::Multi-buffer version of replaceSurfaceData
sun.awt.windows.WComponentPeer#replaceSurfaceDataLater()->void::: component peer replace surface data later
sun.awt.windows.WComponentPeer#updateGraphicsData(GraphicsConfiguration)->boolean::: component peer update graphics data
sun.awt.windows.WComponentPeer#getColorModel()->ColorModel::: component peer get color model
sun.awt.windows.WComponentPeer#getDeviceColorModel()->ColorModel::: component peer get device color model
sun.awt.windows.WComponentPeer#getColorModel(int)->ColorModel::: component peer get color model
sun.awt.windows.WComponentPeer#getGraphics()->Graphics::: component peer get graphics
sun.awt.windows.WComponentPeer#getFontMetrics(Font)->FontMetrics::: component peer get font metrics
sun.awt.windows.WComponentPeer#disposeImpl()->void::: component peer dispose impl
sun.awt.windows.WComponentPeer#disposeLater()->void::: component peer dispose later
sun.awt.windows.WComponentPeer#setForeground(Color)->void::: component peer set foreground
sun.awt.windows.WComponentPeer#setBackground(Color)->void::: component peer set background
sun.awt.windows.WComponentPeer#getBackgroundNoSync()->Color:::This method is intentionally not synchronized as it is called while holding other locks.
sun.awt.windows.WComponentPeer#setFont(Font)->void::: component peer set font
sun.awt.windows.WComponentPeer#_setFont(Font)->void::: component peer _set font
sun.awt.windows.WComponentPeer#updateCursorImmediately()->void::: component peer update cursor immediately
sun.awt.windows.WComponentPeer#requestFocus(Component, boolean, boolean, long, FocusEvent.Cause)->boolean::: component peer request focus
sun.awt.windows.WComponentPeer#createImage(ImageProducer)->Image::: component peer create image
sun.awt.windows.WComponentPeer#createImage(int, int)->Image::: component peer create image
sun.awt.windows.WComponentPeer#createVolatileImage(int, int)->VolatileImage::: component peer create volatile image
sun.awt.windows.WComponentPeer#prepareImage(Image, int, int, ImageObserver)->boolean::: component peer prepare image
sun.awt.windows.WComponentPeer#checkImage(Image, int, int, ImageObserver)->int::: component peer check image
sun.awt.windows.WComponentPeer#toString()->String::: component peer to string
sun.awt.windows.WComponentPeer#create(WComponentPeer)->void::: component peer create
sun.awt.windows.WComponentPeer#getNativeParent()->WComponentPeer:::Gets the native parent of this peer
sun.awt.windows.WComponentPeer#checkCreation()->void::: component peer check creation
sun.awt.windows.WComponentPeer#start()->void::: component peer start
sun.awt.windows.WComponentPeer#initialize()->void::: component peer initialize
sun.awt.windows.WComponentPeer#handleRepaint(int, int, int, int)->void::: component peer handle repaint
sun.awt.windows.WComponentPeer#handleExpose(int, int, int, int)->void::: component peer handle expose
sun.awt.windows.WComponentPeer#handlePaint(int, int, int, int)->void::: component peer handle paint
sun.awt.windows.WComponentPeer#postEvent(AWTEvent)->void::: component peer post event
sun.awt.windows.WComponentPeer#preprocessPostEvent(AWTEvent)->void::: component peer preprocess post event
sun.awt.windows.WComponentPeer#beginLayout()->void::: component peer begin layout
sun.awt.windows.WComponentPeer#endLayout()->void::: component peer end layout
sun.awt.windows.WComponentPeer#beginValidate()->void::: component peer begin validate
sun.awt.windows.WComponentPeer#endValidate()->void::: component peer end validate
sun.awt.windows.WComponentPeer#addDropTarget(DropTarget)->void::: component peer add drop target
sun.awt.windows.WComponentPeer#removeDropTarget(DropTarget)->void::: component peer remove drop target
sun.awt.windows.WComponentPeer#addNativeDropTarget()->long::: component peer add native drop target
sun.awt.windows.WComponentPeer#removeNativeDropTarget()->void::: component peer remove native drop target
sun.awt.windows.WComponentPeer#nativeHandlesWheelScrolling()->boolean::: component peer native handles wheel scrolling
sun.awt.windows.WComponentPeer#handlesWheelScrolling()->boolean::: component peer handles wheel scrolling
sun.awt.windows.WComponentPeer#isPaintPending()->boolean::: component peer is paint pending
sun.awt.windows.WComponentPeer#createBuffers(int, BufferCapabilities)->void::: component peer create buffers
sun.awt.windows.WComponentPeer#destroyBuffers()->void::: component peer destroy buffers
sun.awt.windows.WComponentPeer#flip(int, int, int, int, BufferCapabilities.FlipContents)->void::: component peer flip
sun.awt.windows.WComponentPeer#getBackBuffer()->Image::: component peer get back buffer
sun.awt.windows.WComponentPeer#getBackBufferCaps()->BufferCapabilities::: component peer get back buffer caps
sun.awt.windows.WComponentPeer#getBackBuffersNum()->int::: component peer get back buffers num
sun.awt.windows.WComponentPeer#shouldClearRectBeforePaint()->boolean::: component peer should clear rect before paint
sun.awt.windows.WComponentPeer#pSetParent(ComponentPeer)->void::: component peer p set parent
sun.awt.windows.WComponentPeer#reparent(ContainerPeer)->void::: component peer reparent
sun.awt.windows.WComponentPeer#isReparentSupported()->boolean::: component peer is reparent supported
sun.awt.windows.WComponentPeer#setBoundsOperation(int)->void::: component peer set bounds operation
sun.awt.windows.WComponentPeer#isAccelCapable()->boolean:::Returns whether this component is capable of being hw accelerated
sun.awt.windows.WComponentPeer#disableAcceleration()->void:::Disables acceleration for this peer.
sun.awt.windows.WComponentPeer#setRectangularShape(int, int, int, int, Region)->void::: component peer set rectangular shape
sun.awt.windows.WComponentPeer#applyShape(Region)->void:::Applies the shape to the native component window.
sun.awt.windows.WComponentPeer#setZOrder(ComponentPeer)->void:::Lowers this component at the bottom of the above component
sun.awt.windows.WComponentPeer#isLightweightFramePeer()->boolean::: component peer is lightweight frame peer
sun.awt.windows.WCustomCursor#createNativeCursor(Image, int[], int, int, int, int)->void::: custom cursor create native cursor
sun.awt.windows.WCustomCursor#getCursorWidth()->int:::Return the current value of SM_CXCURSOR.
sun.awt.windows.WCustomCursor#getCursorHeight()->int:::Return the current value of SM_CYCURSOR.
sun.awt.windows.WDataTransferer#getInstanceImpl()->WDataTransferer::: data transferer get instance impl
sun.awt.windows.WDataTransferer#getFormatsForFlavors(DataFlavor[], FlavorTable)->SortedMap::: data transferer get formats for flavors
sun.awt.windows.WDataTransferer#getDefaultUnicodeEncoding()->String::: data transferer get default unicode encoding
sun.awt.windows.WDataTransferer#translateTransferable(Transferable, DataFlavor, long)->byte[]::: data transferer translate transferable
sun.awt.windows.WDataTransferer#translateStream(InputStream, DataFlavor, long, Transferable)->Object::: data transferer translate stream
sun.awt.windows.WDataTransferer#translateBytes(byte[], DataFlavor, long, Transferable)->Object::: data transferer translate bytes
sun.awt.windows.WDataTransferer#isLocaleDependentTextFormat(long)->boolean::: data transferer is locale dependent text format
sun.awt.windows.WDataTransferer#isFileFormat(long)->boolean::: data transferer is file format
sun.awt.windows.WDataTransferer#getFormatForNativeAsLong(String)->Long::: data transferer get format for native as long
sun.awt.windows.WDataTransferer#getNativeForFormat(long)->String::: data transferer get native for format
sun.awt.windows.WDataTransferer#getToolkitThreadBlockedHandler()->ToolkitThreadBlockedHandler::: data transferer get toolkit thread blocked handler
sun.awt.windows.WDataTransferer#isImageFormat(long)->boolean::: data transferer is image format
sun.awt.windows.WDataTransferer#imageToPlatformBytes(Image, long)->byte[]::: data transferer image to platform bytes
sun.awt.windows.WDataTransferer#convertFileListToBytes(ArrayList)->ByteArrayOutputStream::: data transferer convert file list to bytes
sun.awt.windows.WDataTransferer#platformImageBytesToImage(byte[], long)->Image:::Translates either a byte array or an input stream which contain platform-specific image data in the given format into an Image.
sun.awt.windows.WDataTransferer#dragQueryFile(byte[])->String[]::: data transferer drag query file
sun.awt.windows.WToolkitThreadBlockedHandler#enter()->void::: toolkit thread blocked handler enter
sun.awt.windows.WToolkitThreadBlockedHandler#exit()->void::: toolkit thread blocked handler exit
sun.awt.windows.HTMLCodec#convertToHTMLFormat(byte[])->byte[]:::convertToHTMLFormat adds the MS HTML clipboard header to byte array that contains the parameters pairs
sun.awt.windows.HTMLCodec#getBaseURL()->String::: codec get base l
sun.awt.windows.HTMLCodec#getVersion()->String::: codec get version
sun.awt.windows.HTMLCodec#read()->int::: codec read
sun.awt.windows.HTMLCodec#close()->void::: codec close
sun.awt.windows.WDefaultFontCharset#newEncoder()->CharsetEncoder::: default font charset new encoder
sun.awt.windows.WDesktopPeer#isSupported(Action)->boolean::: desktop peer is supported
sun.awt.windows.WDesktopPeer#open(File)->void::: desktop peer open
sun.awt.windows.WDesktopPeer#edit(File)->void::: desktop peer edit
sun.awt.windows.WDesktopPeer#print(File)->void::: desktop peer print
sun.awt.windows.WDesktopPeer#mail(URI)->void::: desktop peer mail
sun.awt.windows.WDesktopPeer#browse(URI)->void::: desktop peer browse
sun.awt.windows.WDesktopPeer#disableSuddenTermination()->void::: desktop peer disable sudden termination
sun.awt.windows.WDesktopPeer#enableSuddenTermination()->void::: desktop peer enable sudden termination
sun.awt.windows.WDesktopPeer#addAppEventListener(SystemEventListener)->void::: desktop peer add app event listener
sun.awt.windows.WDesktopPeer#removeAppEventListener(SystemEventListener)->void::: desktop peer remove app event listener
sun.awt.windows.WDesktopPeer#moveToTrash(File)->boolean::: desktop peer move to trash
sun.awt.windows.WDesktopProperties#isWindowsProperty(String)->boolean::: desktop properties is windows property
sun.awt.windows.WDesktopProperties.WinPlaySound#run()->void::: win play sound run
sun.awt.windows.WDesktopProperties.WinPlaySound#toString()->String::: win play sound to string
sun.awt.windows.WDesktopProperties.WinPlaySound#equals(Object)->boolean::: win play sound equals
sun.awt.windows.WDesktopProperties.WinPlaySound#hashCode()->int::: win play sound hash code
sun.awt.windows.WDesktopProperties#getProperties()->Map::: desktop properties get properties
sun.awt.windows.WDesktopProperties#getDesktopAAHints()->RenderingHints::: desktop properties get desktop hints
sun.awt.windows.WDialogPeer#createAwtDialog(WComponentPeer)->void::: dialog peer create awt dialog
sun.awt.windows.WDialogPeer#create(WComponentPeer)->void::: dialog peer create
sun.awt.windows.WDialogPeer#showModal()->void::: dialog peer show modal
sun.awt.windows.WDialogPeer#endModal()->void::: dialog peer end modal
sun.awt.windows.WDialogPeer#initialize()->void::: dialog peer initialize
sun.awt.windows.WDialogPeer#realShow()->void::: dialog peer real show
sun.awt.windows.WDialogPeer#hide()->void::: dialog peer hide
sun.awt.windows.WDialogPeer#blockWindows(java.util.List)->void::: dialog peer block windows
sun.awt.windows.WDialogPeer#getMinimumSize()->Dimension::: dialog peer get minimum size
sun.awt.windows.WDialogPeer#isTargetUndecorated()->boolean::: dialog peer is target undecorated
sun.awt.windows.WDialogPeer#reshape(int, int, int, int)->void::: dialog peer reshape
sun.awt.windows.WDialogPeer#pSetIMMOption(String)->void::: dialog peer p set option
sun.awt.windows.WDialogPeer#notifyIMMOptionChange()->void::: dialog peer notify option change
sun.awt.windows.WDragSourceContextPeer#startSecondaryEventLoop()->void::: drag source context peer start secondary event loop
sun.awt.windows.WDragSourceContextPeer#quitSecondaryEventLoop()->void::: drag source context peer quit secondary event loop
sun.awt.windows.WDragSourceContextPeer#createDragSourceContextPeer(DragGestureEvent)->WDragSourceContextPeer::: drag source context peer create drag source context peer
sun.awt.windows.WDragSourceContextPeer#startDrag(Transferable, long[], Map)->void::: drag source context peer start drag
sun.awt.windows.WDragSourceContextPeer#createDragSource(Component, Transferable, InputEvent, int, long[], Map)->long::: drag source context peer create drag source
sun.awt.windows.WDragSourceContextPeer#doDragDrop(long, Cursor, int[], int, int, int, int)->void::: drag source context peer do drag drop
sun.awt.windows.WDragSourceContextPeer#setNativeCursor(long, Cursor, int)->void::: drag source context peer set native cursor
sun.awt.windows.WDropTargetContextPeer#getWDropTargetContextPeer()->WDropTargetContextPeer::: drop target context peer get drop target context peer
sun.awt.windows.WDropTargetContextPeer#getNativeData(long)->Object::: drop target context peer get native data
sun.awt.windows.WDropTargetContextPeer#doDropDone(boolean, int, boolean)->void::: drop target context peer do drop done
sun.awt.windows.WDropTargetContextPeer#eventPosted(SunDropTargetEvent)->void::: drop target context peer event posted
sun.awt.windows.WDropTargetContextPeerFileStream#close()->void::: drop target context peer file stream close
sun.awt.windows.WDropTargetContextPeerIStream#available()->int::: drop target context peer stream available
sun.awt.windows.WDropTargetContextPeerIStream#read()->int::: drop target context peer stream read
sun.awt.windows.WDropTargetContextPeerIStream#read(byte[], int, int)->int::: drop target context peer stream read
sun.awt.windows.WDropTargetContextPeerIStream#close()->void::: drop target context peer stream close
sun.awt.windows.WEmbeddedFrame#addNotify()->void::: embedded frame add notify
sun.awt.windows.WEmbeddedFrame#getEmbedderHandle()->long::: embedded frame get embedder handle
sun.awt.windows.WEmbeddedFrame#print(long)->void::: embedded frame print
sun.awt.windows.WEmbeddedFrame#getPrintScaleFactor()->int::: embedded frame get print scale factor
sun.awt.windows.WEmbeddedFrame#activateEmbeddingTopLevel()->void:::This method is called from the native code when this embedded frame should be activated
sun.awt.windows.WEmbeddedFrame#synthesizeWindowActivation(boolean)->void::: embedded frame synthesize window activation
sun.awt.windows.WEmbeddedFrame#registerAccelerator(AWTKeyStroke)->void::: embedded frame register accelerator
sun.awt.windows.WEmbeddedFrame#unregisterAccelerator(AWTKeyStroke)->void::: embedded frame unregister accelerator
sun.awt.windows.WEmbeddedFrame#notifyModalBlocked(Dialog, boolean)->void:::Should be overridden in subclasses
sun.awt.windows.WEmbeddedFrame#notifyModalBlockedImpl(WEmbeddedFramePeer, WWindowPeer, boolean)->void::: embedded frame notify modal blocked impl
sun.awt.windows.WEmbeddedFramePeer#create(WComponentPeer)->void::: embedded frame peer create
sun.awt.windows.WEmbeddedFramePeer#print(Graphics)->void::: embedded frame peer print
sun.awt.windows.WEmbeddedFramePeer#updateMinimumSize()->void::: embedded frame peer update minimum size
sun.awt.windows.WEmbeddedFramePeer#modalDisable(Dialog, long)->void::: embedded frame peer modal disable
sun.awt.windows.WEmbeddedFramePeer#modalEnable(Dialog)->void::: embedded frame peer modal enable
sun.awt.windows.WEmbeddedFramePeer#setBoundsPrivate(int, int, int, int)->void::: embedded frame peer set bounds private
sun.awt.windows.WEmbeddedFramePeer#getBoundsPrivate()->Rectangle::: embedded frame peer get bounds private
sun.awt.windows.WEmbeddedFramePeer#isAccelCapable()->boolean::: embedded frame peer is accel capable
sun.awt.windows.WFileDialogPeer#setFilenameFilter(FilenameFilter)->void::: file dialog peer set filename filter
sun.awt.windows.WFileDialogPeer#checkFilenameFilter(String)->boolean::: file dialog peer check filename filter
sun.awt.windows.WFileDialogPeer#create(WComponentPeer)->void::: file dialog peer create
sun.awt.windows.WFileDialogPeer#checkCreation()->void::: file dialog peer check creation
sun.awt.windows.WFileDialogPeer#initialize()->void::: file dialog peer initialize
sun.awt.windows.WFileDialogPeer#disposeImpl()->void::: file dialog peer dispose impl
sun.awt.windows.WFileDialogPeer#show()->void::: file dialog peer show
sun.awt.windows.WFileDialogPeer#hide()->void::: file dialog peer hide
sun.awt.windows.WFileDialogPeer#setHWnd(long)->void::: file dialog peer set wnd
sun.awt.windows.WFileDialogPeer#handleSelected(char[])->void::: file dialog peer handle selected
sun.awt.windows.WFileDialogPeer#handleCancel()->void::: file dialog peer handle cancel
sun.awt.windows.WFileDialogPeer#blockWindow(WWindowPeer)->void::: file dialog peer block window
sun.awt.windows.WFileDialogPeer#unblockWindow(WWindowPeer)->void::: file dialog peer unblock window
sun.awt.windows.WFileDialogPeer#blockWindows(java.util.List)->void::: file dialog peer block windows
sun.awt.windows.WFileDialogPeer#toFront()->void::: file dialog peer to front
sun.awt.windows.WFileDialogPeer#toBack()->void::: file dialog peer to back
sun.awt.windows.WFileDialogPeer#updateAlwaysOnTopState()->void::: file dialog peer update always on top state
sun.awt.windows.WFileDialogPeer#setDirectory(String)->void::: file dialog peer set directory
sun.awt.windows.WFileDialogPeer#setFile(String)->void::: file dialog peer set file
sun.awt.windows.WFileDialogPeer#setTitle(String)->void::: file dialog peer set title
sun.awt.windows.WFileDialogPeer#setResizable(boolean)->void::: file dialog peer set resizable
sun.awt.windows.WFileDialogPeer#enable()->void::: file dialog peer enable
sun.awt.windows.WFileDialogPeer#disable()->void::: file dialog peer disable
sun.awt.windows.WFileDialogPeer#reshape(int, int, int, int)->void::: file dialog peer reshape
sun.awt.windows.WFileDialogPeer#handleEvent(Event)->boolean::: file dialog peer handle event
sun.awt.windows.WFileDialogPeer#setForeground(Color)->void::: file dialog peer set foreground
sun.awt.windows.WFileDialogPeer#setBackground(Color)->void::: file dialog peer set background
sun.awt.windows.WFileDialogPeer#setFont(Font)->void::: file dialog peer set font
sun.awt.windows.WFileDialogPeer#updateMinimumSize()->void::: file dialog peer update minimum size
sun.awt.windows.WFileDialogPeer#updateIconImages()->void::: file dialog peer update icon images
sun.awt.windows.WFileDialogPeer#requestFocus(boolean, boolean)->boolean::: file dialog peer request focus
sun.awt.windows.WFileDialogPeer#requestFocus(Component, boolean, boolean, long, Cause)->boolean::: file dialog peer request focus
sun.awt.windows.WFileDialogPeer#start()->void::: file dialog peer start
sun.awt.windows.WFileDialogPeer#beginValidate()->void::: file dialog peer begin validate
sun.awt.windows.WFileDialogPeer#endValidate()->void::: file dialog peer end validate
sun.awt.windows.WFileDialogPeer#invalidate(int, int, int, int)->void::: file dialog peer invalidate
sun.awt.windows.WFileDialogPeer#addDropTarget(DropTarget)->void::: file dialog peer add drop target
sun.awt.windows.WFileDialogPeer#removeDropTarget(DropTarget)->void::: file dialog peer remove drop target
sun.awt.windows.WFileDialogPeer#updateFocusableWindowState()->void::: file dialog peer update focusable window state
sun.awt.windows.WFileDialogPeer#setZOrder(ComponentPeer)->void::: file dialog peer set order
sun.awt.windows.WFileDialogPeer#applyShape(sun.java2d.pipe.Region)->void::: file dialog peer apply shape
sun.awt.windows.WFileDialogPeer#setOpacity(float)->void::: file dialog peer set opacity
sun.awt.windows.WFileDialogPeer#setOpaque(boolean)->void::: file dialog peer set opaque
sun.awt.windows.WFileDialogPeer#updateWindow(java.awt.image.BufferedImage)->void::: file dialog peer update window
sun.awt.windows.WFileDialogPeer#createScreenSurface(boolean)->void::: file dialog peer create screen surface
sun.awt.windows.WFileDialogPeer#replaceSurfaceData()->void::: file dialog peer replace surface data
sun.awt.windows.WFileDialogPeer#isMultipleMode()->boolean::: file dialog peer is multiple mode
sun.awt.windows.WFileDialogPeer#getLocationOnScreen()->Point::: file dialog peer get location on screen
sun.awt.windows.WFontConfiguration#initReorderMap()->void::: font configuration init reorder map
sun.awt.windows.WFontConfiguration#setOsNameAndVersion()->void::: font configuration set os name and version
sun.awt.windows.WFontConfiguration#getFallbackFamilyName(String, String)->String::: font configuration get fallback family name
sun.awt.windows.WFontConfiguration#makeAWTFontName(String, String)->String::: font configuration make font name
sun.awt.windows.WFontConfiguration#getEncoding(String, String)->String::: font configuration get encoding
sun.awt.windows.WFontConfiguration#getDefaultFontCharset(String)->Charset::: font configuration get default font charset
sun.awt.windows.WFontConfiguration#getFaceNameFromComponentFontName(String)->String::: font configuration get face name from component font name
sun.awt.windows.WFontConfiguration#getFileNameFromComponentFontName(String)->String::: font configuration get file name from component font name
sun.awt.windows.WFontConfiguration#getTextComponentFontName(String, int)->String:::Returns the component font name (face name plus charset) of the font that should be used for AWT text components
sun.awt.windows.WFontMetrics#getLeading()->int:::Get leading
sun.awt.windows.WFontMetrics#getAscent()->int:::Get ascent.
sun.awt.windows.WFontMetrics#getDescent()->int:::Get descent
sun.awt.windows.WFontMetrics#getHeight()->int:::Get height
sun.awt.windows.WFontMetrics#getMaxAscent()->int:::Get maxAscent
sun.awt.windows.WFontMetrics#getMaxDescent()->int:::Get maxDescent
sun.awt.windows.WFontMetrics#getMaxAdvance()->int:::Get maxAdvance
sun.awt.windows.WFontMetrics#stringWidth(String)->int:::Return the width of the specified string in this Font.
sun.awt.windows.WFontMetrics#charsWidth(char[], int, int)->int:::Return the width of the specified char[] in this Font.
sun.awt.windows.WFontMetrics#bytesWidth(byte[], int, int)->int:::Return the width of the specified byte[] in this Font.
sun.awt.windows.WFontMetrics#getWidths()->int[]:::Get the widths of the first 256 characters in the font.
sun.awt.windows.WFontMetrics#init()->void::: font metrics init
sun.awt.windows.WFontMetrics#getFontMetrics(Font)->FontMetrics::: font metrics get font metrics
sun.awt.windows.WFontPeer#getMissingGlyphCharacter()->char::: font peer get missing glyph character
sun.awt.windows.WFramePeer#setState(int)->void::: frame peer set state
sun.awt.windows.WFramePeer#getState()->int::: frame peer get state
sun.awt.windows.WFramePeer#setExtendedState(int)->void::: frame peer set extended state
sun.awt.windows.WFramePeer#getExtendedState()->int::: frame peer get extended state
sun.awt.windows.WFramePeer#setMaximizedBounds(Rectangle)->void::: frame peer set maximized bounds
sun.awt.windows.WFramePeer#updateGraphicsData(GraphicsConfiguration)->boolean::: frame peer update graphics data
sun.awt.windows.WFramePeer#isTargetUndecorated()->boolean::: frame peer is target undecorated
sun.awt.windows.WFramePeer#reshape(int, int, int, int)->void::: frame peer reshape
sun.awt.windows.WFramePeer#getMinimumSize()->Dimension::: frame peer get minimum size
sun.awt.windows.WFramePeer#setMenuBar(MenuBar)->void::: frame peer set menu bar
sun.awt.windows.WFramePeer#createAwtFrame(WComponentPeer)->void::: frame peer create awt frame
sun.awt.windows.WFramePeer#create(WComponentPeer)->void::: frame peer create
sun.awt.windows.WFramePeer#initialize()->void::: frame peer initialize
sun.awt.windows.WFramePeer#pSetIMMOption(String)->void::: frame peer p set option
sun.awt.windows.WFramePeer#notifyIMMOptionChange()->void::: frame peer notify option change
sun.awt.windows.WFramePeer#setBoundsPrivate(int, int, int, int)->void::: frame peer set bounds private
sun.awt.windows.WFramePeer#getBoundsPrivate()->Rectangle::: frame peer get bounds private
sun.awt.windows.WFramePeer#emulateActivation(boolean)->void::: frame peer emulate activation
sun.awt.windows.WGlobalCursorManager#getCursorManager()->GlobalCursorManager::: global cursor manager get cursor manager
sun.awt.windows.WGlobalCursorManager#nativeUpdateCursor(Component)->void:::Should be called in response to a native mouse enter or native mouse button released message
sun.awt.windows.WGlobalCursorManager#setCursor(Component, Cursor, boolean)->void::: global cursor manager set cursor
sun.awt.windows.WGlobalCursorManager#getCursorPos(Point)->void::: global cursor manager get cursor pos
sun.awt.windows.WGlobalCursorManager#findHeavyweightUnderCursor(boolean)->Component::: global cursor manager find heavyweight under cursor
sun.awt.windows.WGlobalCursorManager#getLocationOnScreen(Component)->Point::: global cursor manager get location on screen
sun.awt.windows.WingDings#newEncoder()->CharsetEncoder::: wing dings new encoder
sun.awt.windows.WingDings#newDecoder()->CharsetDecoder::: wing dings new decoder
sun.awt.windows.WingDings#contains(Charset)->boolean::: wing dings contains
sun.awt.windows.WInputMethod#finalize()->void::: input method finalize
sun.awt.windows.WInputMethod#setInputMethodContext(InputMethodContext)->void::: input method set input method context
sun.awt.windows.WInputMethod#dispose()->void::: input method dispose
sun.awt.windows.WInputMethod#getControlObject()->Object:::Returns null.
sun.awt.windows.WInputMethod#setLocale(Locale)->boolean::: input method set locale
sun.awt.windows.WInputMethod#getLocale()->Locale::: input method get locale
sun.awt.windows.WInputMethod#setCharacterSubsets(Subset[])->void:::Implements InputMethod.setCharacterSubsets for Windows.
sun.awt.windows.WInputMethod#dispatchEvent(AWTEvent)->void::: input method dispatch event
sun.awt.windows.WInputMethod#activate()->void::: input method activate
sun.awt.windows.WInputMethod#deactivate(boolean)->void::: input method deactivate
sun.awt.windows.WInputMethod#disableInputMethod()->void:::Explicitly disable the native IME
sun.awt.windows.WInputMethod#getNativeInputMethodInfo()->String:::Returns a string with information about the windows input method, or null.
sun.awt.windows.WInputMethod#stopListening()->void::: input method stop listening
sun.awt.windows.WInputMethod#setAWTFocussedComponent(Component)->void::: input method set focussed component
sun.awt.windows.WInputMethod#hideWindows()->void::: input method hide windows
sun.awt.windows.WInputMethod#removeNotify()->void::: input method remove notify
sun.awt.windows.WInputMethod#mapInputMethodHighlight(InputMethodHighlight)->Map::: input method map input method highlight
sun.awt.windows.WInputMethod#supportsBelowTheSpot()->boolean::: input method supports below the spot
sun.awt.windows.WInputMethod#endComposition()->void::: input method end composition
sun.awt.windows.WInputMethod#setCompositionEnabled(boolean)->void::: input method set composition enabled
sun.awt.windows.WInputMethod#isCompositionEnabled()->boolean::: input method is composition enabled
sun.awt.windows.WInputMethod#sendInputMethodEvent(int, long, String, int[], String[], int[], byte[], int, int, int)->void::: input method send input method event
sun.awt.windows.WInputMethod#inquireCandidatePosition()->void::: input method inquire candidate position
sun.awt.windows.WInputMethod#getNativeLocale()->Locale::: input method get native locale
sun.awt.windows.WInputMethod#setNativeLocale(String, boolean)->boolean::: input method set native locale
sun.awt.windows.WInputMethodDescriptor#getAvailableLocales()->Locale[]::: input method descriptor get available locales
sun.awt.windows.WInputMethodDescriptor#getAvailableLocalesInternal()->Locale[]::: input method descriptor get available locales internal
sun.awt.windows.WInputMethodDescriptor#hasDynamicLocaleList()->boolean::: input method descriptor has dynamic locale list
sun.awt.windows.WInputMethodDescriptor#getInputMethodDisplayName(Locale, Locale)->String::: input method descriptor get input method display name
sun.awt.windows.WInputMethodDescriptor#getInputMethodIcon(Locale)->Image::: input method descriptor get input method icon
sun.awt.windows.WInputMethodDescriptor#createInputMethod()->InputMethod::: input method descriptor create input method
sun.awt.windows.WKeyboardFocusManagerPeer#setNativeFocusOwner(ComponentPeer)->void::: keyboard focus manager peer set native focus owner
sun.awt.windows.WKeyboardFocusManagerPeer#getNativeFocusOwner()->Component::: keyboard focus manager peer get native focus owner
sun.awt.windows.WKeyboardFocusManagerPeer#getNativeFocusedWindow()->Window::: keyboard focus manager peer get native focused window
sun.awt.windows.WKeyboardFocusManagerPeer#getInstance()->WKeyboardFocusManagerPeer::: keyboard focus manager peer get instance
sun.awt.windows.WKeyboardFocusManagerPeer#setCurrentFocusOwner(Component)->void::: keyboard focus manager peer set current focus owner
sun.awt.windows.WKeyboardFocusManagerPeer#getCurrentFocusOwner()->Component::: keyboard focus manager peer get current focus owner
sun.awt.windows.WKeyboardFocusManagerPeer#setCurrentFocusedWindow(Window)->void::: keyboard focus manager peer set current focused window
sun.awt.windows.WKeyboardFocusManagerPeer#getCurrentFocusedWindow()->Window::: keyboard focus manager peer get current focused window
sun.awt.windows.WKeyboardFocusManagerPeer#deliverFocus(Component, Component, boolean, boolean, long, Cause)->boolean::: keyboard focus manager peer deliver focus
sun.awt.windows.WLabelPeer#getMinimumSize()->Dimension::: label peer get minimum size
sun.awt.windows.WLabelPeer#lazyPaint()->void::: label peer lazy paint
sun.awt.windows.WLabelPeer#start()->void::: label peer start
sun.awt.windows.WLabelPeer#shouldClearRectBeforePaint()->boolean::: label peer should clear rect before paint
sun.awt.windows.WLabelPeer#setText(String)->void::: label peer set text
sun.awt.windows.WLabelPeer#setAlignment(int)->void::: label peer set alignment
sun.awt.windows.WLabelPeer#create(WComponentPeer)->void::: label peer create
sun.awt.windows.WLabelPeer#initialize()->void::: label peer initialize
sun.awt.windows.WLightweightFramePeer#getGraphics()->Graphics::: lightweight frame peer get graphics
sun.awt.windows.WLightweightFramePeer#overrideWindowHandle(long)->void::: lightweight frame peer override window handle
sun.awt.windows.WLightweightFramePeer#show()->void::: lightweight frame peer show
sun.awt.windows.WLightweightFramePeer#hide()->void::: lightweight frame peer hide
sun.awt.windows.WLightweightFramePeer#reshape(int, int, int, int)->void::: lightweight frame peer reshape
sun.awt.windows.WLightweightFramePeer#handleEvent(java.awt.AWTEvent)->void::: lightweight frame peer handle event
sun.awt.windows.WLightweightFramePeer#grab()->void::: lightweight frame peer grab
sun.awt.windows.WLightweightFramePeer#ungrab()->void::: lightweight frame peer ungrab
sun.awt.windows.WLightweightFramePeer#updateCursorImmediately()->void::: lightweight frame peer update cursor immediately
sun.awt.windows.WLightweightFramePeer#isLightweightFramePeer()->boolean::: lightweight frame peer is lightweight frame peer
sun.awt.windows.WLightweightFramePeer#addDropTarget(DropTarget)->void::: lightweight frame peer add drop target
sun.awt.windows.WLightweightFramePeer#removeDropTarget(DropTarget)->void::: lightweight frame peer remove drop target
sun.awt.windows.WListPeer#isFocusable()->boolean::: list peer is focusable
sun.awt.windows.WListPeer#getSelectedIndexes()->int[]::: list peer get selected indexes
sun.awt.windows.WListPeer#add(String, int)->void::: list peer add
sun.awt.windows.WListPeer#removeAll()->void::: list peer remove all
sun.awt.windows.WListPeer#setMultipleMode(boolean)->void::: list peer set multiple mode
sun.awt.windows.WListPeer#getPreferredSize(int)->Dimension::: list peer get preferred size
sun.awt.windows.WListPeer#getMinimumSize(int)->Dimension::: list peer get minimum size
sun.awt.windows.WListPeer#addItem(String, int)->void::: list peer add item
sun.awt.windows.WListPeer#addItems(String[], int, int)->void::: list peer add items
sun.awt.windows.WListPeer#delItems(int, int)->void::: list peer del items
sun.awt.windows.WListPeer#clear()->void::: list peer clear
sun.awt.windows.WListPeer#select(int)->void::: list peer select
sun.awt.windows.WListPeer#deselect(int)->void::: list peer deselect
sun.awt.windows.WListPeer#makeVisible(int)->void::: list peer make visible
sun.awt.windows.WListPeer#setMultipleSelections(boolean)->void::: list peer set multiple selections
sun.awt.windows.WListPeer#getMaxWidth()->int::: list peer get max width
sun.awt.windows.WListPeer#create(WComponentPeer)->void::: list peer create
sun.awt.windows.WListPeer#initialize()->void::: list peer initialize
sun.awt.windows.WListPeer#shouldClearRectBeforePaint()->boolean::: list peer should clear rect before paint
sun.awt.windows.WListPeer#isSelected(int)->boolean::: list peer is selected
sun.awt.windows.WListPeer#_setFont(Font)->void::: list peer _set font
sun.awt.windows.WListPeer#handleAction(int, long, int)->void::: list peer handle action
sun.awt.windows.WListPeer#handleListChanged(int)->void::: list peer handle list changed
sun.awt.windows.WMenuBarPeer#addMenu(Menu)->void::: menu bar peer add menu
sun.awt.windows.WMenuBarPeer#delMenu(int)->void::: menu bar peer del menu
sun.awt.windows.WMenuBarPeer#addHelpMenu(Menu)->void::: menu bar peer add help menu
sun.awt.windows.WMenuBarPeer#create(WFramePeer)->void::: menu bar peer create
sun.awt.windows.WMenuItemPeer#disposeImpl()->void::: menu item peer dispose impl
sun.awt.windows.WMenuItemPeer#setEnabled(boolean)->void::: menu item peer set enabled
sun.awt.windows.WMenuItemPeer#setLabel(String)->void::: menu item peer set label
sun.awt.windows.WMenuItemPeer#_setLabel(String)->void::: menu item peer _set label
sun.awt.windows.WMenuItemPeer#checkMenuCreation()->void::: menu item peer check menu creation
sun.awt.windows.WMenuItemPeer#postEvent(AWTEvent)->void::: menu item peer post event
sun.awt.windows.WMenuItemPeer#create(WMenuPeer)->void::: menu item peer create
sun.awt.windows.WMenuItemPeer#enable(boolean)->void::: menu item peer enable
sun.awt.windows.WMenuItemPeer#handleAction(long, int)->void::: menu item peer handle action
sun.awt.windows.WMenuItemPeer#getDefaultFont()->Font::: menu item peer get default font
sun.awt.windows.WMenuItemPeer#setFont(Font)->void::: menu item peer set font
sun.awt.windows.WMenuPeer#addSeparator()->void::: menu peer add separator
sun.awt.windows.WMenuPeer#addItem(MenuItem)->void::: menu peer add item
sun.awt.windows.WMenuPeer#delItem(int)->void::: menu peer del item
sun.awt.windows.WMenuPeer#createMenu(WMenuBarPeer)->void::: menu peer create menu
sun.awt.windows.WMenuPeer#createSubMenu(WMenuPeer)->void::: menu peer create sub menu
sun.awt.windows.WMouseDragGestureRecognizer#mapDragOperationFromModifiers(MouseEvent)->int::: mouse drag gesture recognizer map drag operation from modifiers
sun.awt.windows.WMouseDragGestureRecognizer#mouseClicked(MouseEvent)->void::: mouse drag gesture recognizer mouse clicked
sun.awt.windows.WMouseDragGestureRecognizer#mousePressed(MouseEvent)->void::: mouse drag gesture recognizer mouse pressed
sun.awt.windows.WMouseDragGestureRecognizer#mouseReleased(MouseEvent)->void::: mouse drag gesture recognizer mouse released
sun.awt.windows.WMouseDragGestureRecognizer#mouseEntered(MouseEvent)->void::: mouse drag gesture recognizer mouse entered
sun.awt.windows.WMouseDragGestureRecognizer#mouseExited(MouseEvent)->void::: mouse drag gesture recognizer mouse exited
sun.awt.windows.WMouseDragGestureRecognizer#mouseDragged(MouseEvent)->void::: mouse drag gesture recognizer mouse dragged
sun.awt.windows.WMouseDragGestureRecognizer#mouseMoved(MouseEvent)->void::: mouse drag gesture recognizer mouse moved
sun.awt.windows.WMouseInfoPeer#fillPointWithCoords(Point)->int::: mouse info peer fill point with coords
sun.awt.windows.WMouseInfoPeer#isWindowUnderMouse(Window)->boolean::: mouse info peer is window under mouse
sun.awt.windows.WObjectPeer#getPeerForTarget(Object)->WObjectPeer::: object peer get peer for target
sun.awt.windows.WObjectPeer#getData()->long::: object peer get data
sun.awt.windows.WObjectPeer#getTarget()->Object::: object peer get target
sun.awt.windows.WObjectPeer#getStateLock()->Object::: object peer get state lock
sun.awt.windows.WObjectPeer#disposeImpl()->void::: object peer dispose impl
sun.awt.windows.WObjectPeer#dispose()->void::: object peer dispose
sun.awt.windows.WObjectPeer#isDisposed()->boolean::: object peer is disposed
sun.awt.windows.WObjectPeer#addChildPeer(WObjectPeer)->void::: object peer add child peer
sun.awt.windows.WPageDialog#addNotify()->void::: page dialog add notify
sun.awt.windows.WPageDialogPeer#show()->void::: page dialog peer show
sun.awt.windows.WPanelPeer#paint(Graphics)->void::: panel peer paint
sun.awt.windows.WPanelPeer#print(Graphics)->void::: panel peer print
sun.awt.windows.WPanelPeer#getInsets()->Insets::: panel peer get insets
sun.awt.windows.WPanelPeer#initialize()->void::: panel peer initialize
sun.awt.windows.WPathGraphics#create()->Graphics:::Creates a new Graphics object that is a copy of this Graphics object.
sun.awt.windows.WPathGraphics#draw(Shape)->void:::Strokes the outline of a Shape using the settings of the current graphics state
sun.awt.windows.WPathGraphics#drawString(String, int, int)->void:::Draws the text given by the specified string, using this graphics context's current font and color
sun.awt.windows.WPathGraphics#drawString(String, float, float)->void::: path graphics draw string
sun.awt.windows.WPathGraphics#platformFontCount(Font, String)->int::: path graphics platform font count
sun.awt.windows.WPathGraphics#drawString(String, float, float, Font, FontRenderContext, float)->void:::Renders the text specified by the specified String, using the current Font and Paint attributes in the Graphics2D context
sun.awt.windows.WPathGraphics#printGlyphVector(GlyphVector, float, float)->boolean:::return true if the Graphics instance can directly print this glyphvector
sun.awt.windows.WPathGraphics#drawImageToPlatform(Image, AffineTransform, Color, int, int, int, int, boolean)->boolean:::The various drawImage() methods for WPathGraphics are all decomposed into an invocation of drawImageToPlatform
sun.awt.windows.WPathGraphics#redrawRegion(Rectangle2D, double, double, Shape, AffineTransform)->void:::Have the printing application redraw everything that falls within the page bounds defined by region.
sun.awt.windows.WPathGraphics#deviceFill(PathIterator, Color)->void::: path graphics device fill
sun.awt.windows.WPathGraphics#deviceClip(PathIterator)->void::: path graphics device clip
sun.awt.windows.WPathGraphics#deviceFrameRect(int, int, int, int, Color)->void:::Draw the bounding rectangle using transformed coordinates.
sun.awt.windows.WPathGraphics#deviceFillRect(int, int, int, int, Color)->void::: path graphics device fill rect
sun.awt.windows.WPathGraphics#deviceDrawLine(int, int, int, int, Color)->void:::Draw a line using a pen created using the specified color and current stroke properties.
sun.awt.windows.WPopupMenuPeer#show(Event)->void::: popup menu peer show
sun.awt.windows.WPopupMenuPeer#show(Component, Point)->void::: popup menu peer show
sun.awt.windows.WPrintDialog#setPeer(ComponentPeer)->void::: print dialog set peer
sun.awt.windows.WPrintDialog#addNotify()->void::: print dialog add notify
sun.awt.windows.WPrintDialog#setRetVal(boolean)->void::: print dialog set ret val
sun.awt.windows.WPrintDialog#getRetVal()->boolean::: print dialog get ret val
sun.awt.windows.WPrintDialogPeer#create(WComponentPeer)->void::: print dialog peer create
sun.awt.windows.WPrintDialogPeer#checkCreation()->void::: print dialog peer check creation
sun.awt.windows.WPrintDialogPeer#disposeImpl()->void::: print dialog peer dispose impl
sun.awt.windows.WPrintDialogPeer#show()->void::: print dialog peer show
sun.awt.windows.WPrintDialogPeer#setHWnd(long)->void::: print dialog peer set wnd
sun.awt.windows.WPrintDialogPeer#blockWindow(WWindowPeer)->void::: print dialog peer block window
sun.awt.windows.WPrintDialogPeer#unblockWindow(WWindowPeer)->void::: print dialog peer unblock window
sun.awt.windows.WPrintDialogPeer#blockWindows(java.util.List)->void::: print dialog peer block windows
sun.awt.windows.WPrintDialogPeer#toFront()->void::: print dialog peer to front
sun.awt.windows.WPrintDialogPeer#toBack()->void::: print dialog peer to back
sun.awt.windows.WPrintDialogPeer#initialize()->void::: print dialog peer initialize
sun.awt.windows.WPrintDialogPeer#updateAlwaysOnTopState()->void::: print dialog peer update always on top state
sun.awt.windows.WPrintDialogPeer#setResizable(boolean)->void::: print dialog peer set resizable
sun.awt.windows.WPrintDialogPeer#hide()->void::: print dialog peer hide
sun.awt.windows.WPrintDialogPeer#enable()->void::: print dialog peer enable
sun.awt.windows.WPrintDialogPeer#disable()->void::: print dialog peer disable
sun.awt.windows.WPrintDialogPeer#reshape(int, int, int, int)->void::: print dialog peer reshape
sun.awt.windows.WPrintDialogPeer#handleEvent(Event)->boolean::: print dialog peer handle event
sun.awt.windows.WPrintDialogPeer#setForeground(Color)->void::: print dialog peer set foreground
sun.awt.windows.WPrintDialogPeer#setBackground(Color)->void::: print dialog peer set background
sun.awt.windows.WPrintDialogPeer#setFont(Font)->void::: print dialog peer set font
sun.awt.windows.WPrintDialogPeer#updateMinimumSize()->void::: print dialog peer update minimum size
sun.awt.windows.WPrintDialogPeer#updateIconImages()->void::: print dialog peer update icon images
sun.awt.windows.WPrintDialogPeer#requestFocus(boolean, boolean)->boolean::: print dialog peer request focus
sun.awt.windows.WPrintDialogPeer#requestFocus(Component, boolean, boolean, long, Cause)->boolean::: print dialog peer request focus
sun.awt.windows.WPrintDialogPeer#updateFocusableWindowState()->void::: print dialog peer update focusable window state
sun.awt.windows.WPrintDialogPeer#start()->void::: print dialog peer start
sun.awt.windows.WPrintDialogPeer#beginValidate()->void::: print dialog peer begin validate
sun.awt.windows.WPrintDialogPeer#endValidate()->void::: print dialog peer end validate
sun.awt.windows.WPrintDialogPeer#invalidate(int, int, int, int)->void::: print dialog peer invalidate
sun.awt.windows.WPrintDialogPeer#addDropTarget(DropTarget)->void::: print dialog peer add drop target
sun.awt.windows.WPrintDialogPeer#removeDropTarget(DropTarget)->void::: print dialog peer remove drop target
sun.awt.windows.WPrintDialogPeer#setZOrder(ComponentPeer)->void::: print dialog peer set order
sun.awt.windows.WPrintDialogPeer#applyShape(sun.java2d.pipe.Region)->void::: print dialog peer apply shape
sun.awt.windows.WPrintDialogPeer#setOpacity(float)->void::: print dialog peer set opacity
sun.awt.windows.WPrintDialogPeer#setOpaque(boolean)->void::: print dialog peer set opaque
sun.awt.windows.WPrintDialogPeer#updateWindow(java.awt.image.BufferedImage)->void::: print dialog peer update window
sun.awt.windows.WPrintDialogPeer#createScreenSurface(boolean)->void::: print dialog peer create screen surface
sun.awt.windows.WPrintDialogPeer#replaceSurfaceData()->void::: print dialog peer replace surface data
sun.awt.windows.WPrinterJob.HandleRecord#dispose()->void::: handle record dispose
sun.awt.windows.WPrinterJob#getDisposerReferent()->Object::: printer job get disposer referent
sun.awt.windows.WPrinterJob#pageDialog(PageFormat)->PageFormat:::Display a dialog to the user allowing the modification of a PageFormat instance
sun.awt.windows.WPrinterJob#printDialog()->boolean:::Presents the user a dialog for changing properties of the print job interactively.
sun.awt.windows.WPrinterJob#setPrintService(PrintService)->void:::Associate this PrinterJob with a new PrintService
sun.awt.windows.WPrinterJob#getPrintService()->PrintService::: printer job get print service
sun.awt.windows.WPrinterJob#setAttributes(PrintRequestAttributeSet)->void:::copy the attributes to the native print job Note that this method, and hence the re-initialisation of the GDI values is done on each entry to the print dialog since an app could redisplay the print dialog for the same job and 1) the application may have changed attribute settings 2) the application may have changed the printer
sun.awt.windows.WPrinterJob#defaultPage(PageFormat)->PageFormat:::The passed in PageFormat will be copied and altered to describe the default page size and orientation of the PrinterJob's current printer
sun.awt.windows.WPrinterJob#validatePaper(Paper, Paper)->void:::validate the paper size against the current printer.
sun.awt.windows.WPrinterJob#createPathGraphics(PeekGraphics, PrinterJob, Printable, PageFormat, int)->Graphics2D::: printer job create path graphics
sun.awt.windows.WPrinterJob#getXRes()->double::: printer job get res
sun.awt.windows.WPrinterJob#getYRes()->double::: printer job get res
sun.awt.windows.WPrinterJob#getPhysicalPrintableX(Paper)->double::: printer job get physical printable x
sun.awt.windows.WPrinterJob#getPhysicalPrintableY(Paper)->double::: printer job get physical printable y
sun.awt.windows.WPrinterJob#getPhysicalPrintableWidth(Paper)->double::: printer job get physical printable width
sun.awt.windows.WPrinterJob#getPhysicalPrintableHeight(Paper)->double::: printer job get physical printable height
sun.awt.windows.WPrinterJob#getPhysicalPageWidth(Paper)->double::: printer job get physical page width
sun.awt.windows.WPrinterJob#getPhysicalPageHeight(Paper)->double::: printer job get physical page height
sun.awt.windows.WPrinterJob#isCollated()->boolean:::We don't (yet) provide API to support collation, and when we do the logic here will require adjustment, but this method is currently necessary to honour user-originated collation requests - which can only originate from the print dialog
sun.awt.windows.WPrinterJob#getCollatedCopies()->int:::Returns how many times the entire book should be printed by the PrintJob
sun.awt.windows.WPrinterJob#getNoncollatedCopies()->int:::Returns how many times each page in the book should be consecutively printed by PrinterJob
sun.awt.windows.WPrinterJob#beginPath()->void::: printer job begin path
sun.awt.windows.WPrinterJob#endPath()->void::: printer job end path
sun.awt.windows.WPrinterJob#closeFigure()->void::: printer job close figure
sun.awt.windows.WPrinterJob#fillPath()->void::: printer job fill path
sun.awt.windows.WPrinterJob#moveTo(float, float)->void::: printer job move to
sun.awt.windows.WPrinterJob#lineTo(float, float)->void::: printer job line to
sun.awt.windows.WPrinterJob#polyBezierTo(float, float, float, float, float, float)->void::: printer job poly bezier to
sun.awt.windows.WPrinterJob#setPolyFillMode(int)->void:::Set the current polgon fill rule into the printer device context
sun.awt.windows.WPrinterJob#selectSolidBrush(Color)->void::: printer job select solid brush
sun.awt.windows.WPrinterJob#getPenX()->int:::Return the x coordinate of the current pen position in the print device context.
sun.awt.windows.WPrinterJob#getPenY()->int:::Return the y coordinate of the current pen position in the print device context.
sun.awt.windows.WPrinterJob#selectClipPath()->void:::Set the current path in the printer device's context to be clipping path.
sun.awt.windows.WPrinterJob#frameRect(float, float, float, float)->void::: printer job frame rect
sun.awt.windows.WPrinterJob#fillRect(float, float, float, float, Color)->void::: printer job fill rect
sun.awt.windows.WPrinterJob#selectPen(float, Color)->void::: printer job select pen
sun.awt.windows.WPrinterJob#selectStylePen(int, int, float, Color)->boolean::: printer job select style pen
sun.awt.windows.WPrinterJob#setFont(String, float, int, int, float)->boolean:::Set a GDI font capable of drawing the java Font passed in.
sun.awt.windows.WPrinterJob#setTextColor(Color)->void:::Set the GDI color for text drawing.
sun.awt.windows.WPrinterJob#removeControlChars(String)->String:::Remove control characters.
sun.awt.windows.WPrinterJob#textOut(String, float, float, float[])->void:::Draw the string text to the printer's device context at the specified position.
sun.awt.windows.WPrinterJob#glyphsOut(int[], float, float, float[])->void:::Draw the glyphs glyphs to the printer's device context at the specified position.
sun.awt.windows.WPrinterJob#getGDIAdvance(String)->int:::Get the advance of this text that GDI returns for the font currently selected into the GDI device context for this job
sun.awt.windows.WPrinterJob#drawImage3ByteBGR(byte[], float, float, float, float, float, float, float, float)->void:::Draw the 24 bit BGR image buffer represented by image to the GDI device context printDC
sun.awt.windows.WPrinterJob#drawDIBImage(byte[], float, float, float, float, float, float, float, float, int, IndexColorModel)->void::: printer job draw image
sun.awt.windows.WPrinterJob#startPage(PageFormat, Printable, int, boolean)->void:::Begin a new page.
sun.awt.windows.WPrinterJob#endPage(PageFormat, Printable, int)->void:::End a page.
sun.awt.windows.WPrinterJob#setCopies(int)->void:::Set the number of copies to be printed.
sun.awt.windows.WPrinterJob#initPrinter()->void::: printer job init printer
sun.awt.windows.WPrinterJob#startDoc()->void::: printer job start doc
sun.awt.windows.WPrinterJob#endDoc()->void:::Call Window's EndDoc routine to end a print job.
sun.awt.windows.WPrinterJob#abortDoc()->void:::Call Window's AbortDoc routine to abort a print job.
sun.awt.windows.WPrinterJob#deviceStartPage(PageFormat, Printable, int, boolean)->void:::Begin a new page
sun.awt.windows.WPrinterJob#deviceEndPage(PageFormat, Printable, int)->void:::End a page
sun.awt.windows.WPrinterJob#printBand(byte[], int, int, int, int)->void:::Prints the contents of the array of ints, 'data' to the current page
sun.awt.windows.WPrinterJob#beginPath(long)->void:::Begin a Window's rendering path in the device context printDC.
sun.awt.windows.WPrinterJob#endPath(long)->void:::End a Window's rendering path in the device context printDC.
sun.awt.windows.WPrinterJob#closeFigure(long)->void:::Close a subpath in a Window's rendering path in the device context printDC.
sun.awt.windows.WPrinterJob#fillPath(long)->void:::Fill a defined Window's rendering path in the device context printDC.
sun.awt.windows.WPrinterJob#moveTo(long, float, float)->void:::Move the Window's pen position to (x,y) in the device context printDC.
sun.awt.windows.WPrinterJob#lineTo(long, float, float)->void:::Draw a line from the current pen position to (x,y) in the device context printDC.
sun.awt.windows.WPrinterJob#polyBezierTo(long, float, float, float, float, float, float)->void::: printer job poly bezier to
sun.awt.windows.WPrinterJob#setPolyFillMode(long, int)->void:::Set the current polgon fill rule into the device context printDC
sun.awt.windows.WPrinterJob#selectSolidBrush(long, int, int, int)->void:::Create a Window's solid brush for the color specified by (red, green, blue)
sun.awt.windows.WPrinterJob#getPenX(long)->int:::Return the x coordinate of the current pen position in the device context printDC.
sun.awt.windows.WPrinterJob#getPenY(long)->int:::Return the y coordinate of the current pen position in the device context printDC.
sun.awt.windows.WPrinterJob#selectClipPath(long)->void:::Select the device context's current path to be the clipping path.
sun.awt.windows.WPrinterJob#frameRect(long, float, float, float, float)->void:::Draw a rectangle using specified brush.
sun.awt.windows.WPrinterJob#fillRect(long, float, float, float, float, int, int, int)->void:::Fill a rectangle specified by the coordinates using specified brush.
sun.awt.windows.WPrinterJob#selectPen(long, float, int, int, int)->void:::Create a solid brush using the RG & B colors and width
sun.awt.windows.WPrinterJob#selectStylePen(long, long, long, float, int, int, int)->boolean:::Create a solid brush using the RG & B colors and specified pen styles
sun.awt.windows.WPrinterJob#setFont(long, String, float, boolean, boolean, int, float)->boolean:::Set a GDI font capable of drawing the java Font passed in.
sun.awt.windows.WPrinterJob#setTextColor(long, int, int, int)->void:::Set the GDI color for text drawing.
sun.awt.windows.WPrinterJob#textOut(long, String, int, boolean, float, float, float[])->void:::Draw the string text into the device context printDC at the specified position.
sun.awt.windows.WPrinterJob#showDocumentProperties(Window, PrintService, PrintRequestAttributeSet)->PrintRequestAttributeSet::: printer job show document properties
sun.awt.windows.WPrinterJob.PrintToFileErrorDialog#actionPerformed(ActionEvent)->void::: print to file error dialog action performed
sun.awt.windows.WRobotPeer#disposeImpl()->void::: robot peer dispose impl
sun.awt.windows.WRobotPeer#create()->void::: robot peer create
sun.awt.windows.WRobotPeer#mouseMoveImpl(int, int)->void::: robot peer mouse move impl
sun.awt.windows.WRobotPeer#mouseMove(int, int)->void::: robot peer mouse move
sun.awt.windows.WRobotPeer#mousePress(int)->void::: robot peer mouse press
sun.awt.windows.WRobotPeer#mouseRelease(int)->void::: robot peer mouse release
sun.awt.windows.WRobotPeer#mouseWheel(int)->void::: robot peer mouse wheel
sun.awt.windows.WRobotPeer#keyPress(int)->void::: robot peer key press
sun.awt.windows.WRobotPeer#keyRelease(int)->void::: robot peer key release
sun.awt.windows.WRobotPeer#getRGBPixel(int, int)->int::: robot peer get pixel
sun.awt.windows.WRobotPeer#getRGBPixels(Rectangle)->int[]::: robot peer get pixels
sun.awt.windows.WScrollbarPeer#getScrollbarSize(int)->int::: scrollbar peer get scrollbar size
sun.awt.windows.WScrollbarPeer#getMinimumSize()->Dimension::: scrollbar peer get minimum size
sun.awt.windows.WScrollbarPeer#setValues(int, int, int, int)->void::: scrollbar peer set values
sun.awt.windows.WScrollbarPeer#setLineIncrement(int)->void::: scrollbar peer set line increment
sun.awt.windows.WScrollbarPeer#setPageIncrement(int)->void::: scrollbar peer set page increment
sun.awt.windows.WScrollbarPeer#create(WComponentPeer)->void::: scrollbar peer create
sun.awt.windows.WScrollbarPeer#initialize()->void::: scrollbar peer initialize
sun.awt.windows.WScrollbarPeer#lineUp(int)->void::: scrollbar peer line up
sun.awt.windows.WScrollbarPeer#lineDown(int)->void::: scrollbar peer line down
sun.awt.windows.WScrollbarPeer#pageUp(int)->void::: scrollbar peer page up
sun.awt.windows.WScrollbarPeer#pageDown(int)->void::: scrollbar peer page down
sun.awt.windows.WScrollbarPeer#warp(int)->void::: scrollbar peer warp
sun.awt.windows.WScrollbarPeer#drag(int)->void::: scrollbar peer drag
sun.awt.windows.WScrollbarPeer#dragEnd(int)->void::: scrollbar peer drag end
sun.awt.windows.WScrollbarPeer#shouldClearRectBeforePaint()->boolean::: scrollbar peer should clear rect before paint
sun.awt.windows.WScrollPanePeer#initIDs()->void::: scroll pane peer init ds
sun.awt.windows.WScrollPanePeer#create(WComponentPeer)->void::: scroll pane peer create
sun.awt.windows.WScrollPanePeer#getOffset(int)->int::: scroll pane peer get offset
sun.awt.windows.WScrollPanePeer#initialize()->void::: scroll pane peer initialize
sun.awt.windows.WScrollPanePeer#setUnitIncrement(Adjustable, int)->void::: scroll pane peer set unit increment
sun.awt.windows.WScrollPanePeer#setScrollPosition(int, int)->void::: scroll pane peer set scroll position
sun.awt.windows.WScrollPanePeer#getHScrollbarHeight()->int::: scroll pane peer get scrollbar height
sun.awt.windows.WScrollPanePeer#getVScrollbarWidth()->int::: scroll pane peer get scrollbar width
sun.awt.windows.WScrollPanePeer#getScrollOffset()->Point::: scroll pane peer get scroll offset
sun.awt.windows.WScrollPanePeer#childResized(int, int)->void:::The child component has been resized
sun.awt.windows.WScrollPanePeer#setSpans(int, int, int, int)->void::: scroll pane peer set spans
sun.awt.windows.WScrollPanePeer#setValue(Adjustable, int)->void:::Called by ScrollPane's internal observer of the scrollpane's adjustables
sun.awt.windows.WScrollPanePeer.ScrollEvent#coalesceEvents(PeerEvent)->PeerEvent::: scroll event coalesce events
sun.awt.windows.WScrollPanePeer.Adjustor#run()->void::: adjustor run
sun.awt.windows.WSystemTrayPeer#getTrayIconSize()->Dimension::: system tray peer get tray icon size
sun.awt.windows.WSystemTrayPeer#isSupported()->boolean::: system tray peer is supported
sun.awt.windows.WSystemTrayPeer#disposeImpl()->void::: system tray peer dispose impl
sun.awt.windows.WTaskbarPeer#isTaskbarSupported()->boolean::: taskbar peer is taskbar supported
sun.awt.windows.WTaskbarPeer#isSupported(Feature)->boolean::: taskbar peer is supported
sun.awt.windows.WTaskbarPeer#setWindowIconBadge(Window, Image)->void::: taskbar peer set window icon badge
sun.awt.windows.WTaskbarPeer#requestWindowUserAttention(Window)->void::: taskbar peer request window user attention
sun.awt.windows.WTaskbarPeer#setWindowProgressValue(Window, int)->void::: taskbar peer set window progress value
sun.awt.windows.WTaskbarPeer#setWindowProgressState(Window, State)->void::: taskbar peer set window progress state
sun.awt.windows.WTextAreaPeer#getMinimumSize()->Dimension::: text area peer get minimum size
sun.awt.windows.WTextAreaPeer#insert(String, int)->void::: text area peer insert
sun.awt.windows.WTextAreaPeer#replaceRange(String, int, int)->void::: text area peer replace range
sun.awt.windows.WTextAreaPeer#getPreferredSize(int, int)->Dimension::: text area peer get preferred size
sun.awt.windows.WTextAreaPeer#getMinimumSize(int, int)->Dimension::: text area peer get minimum size
sun.awt.windows.WTextAreaPeer#getInputMethodRequests()->InputMethodRequests::: text area peer get input method requests
sun.awt.windows.WTextAreaPeer#create(WComponentPeer)->void::: text area peer create
sun.awt.windows.WTextComponentPeer#setEditable(boolean)->void::: text component peer set editable
sun.awt.windows.WTextComponentPeer#getText()->String::: text component peer get text
sun.awt.windows.WTextComponentPeer#setText(String)->void::: text component peer set text
sun.awt.windows.WTextComponentPeer#getSelectionStart()->int::: text component peer get selection start
sun.awt.windows.WTextComponentPeer#getSelectionEnd()->int::: text component peer get selection end
sun.awt.windows.WTextComponentPeer#select(int, int)->void::: text component peer select
sun.awt.windows.WTextComponentPeer#initialize()->void::: text component peer initialize
sun.awt.windows.WTextComponentPeer#enableEditing(boolean)->void::: text component peer enable editing
sun.awt.windows.WTextComponentPeer#isFocusable()->boolean::: text component peer is focusable
sun.awt.windows.WTextComponentPeer#setCaretPosition(int)->void::: text component peer set caret position
sun.awt.windows.WTextComponentPeer#getCaretPosition()->int::: text component peer get caret position
sun.awt.windows.WTextComponentPeer#valueChanged()->void::: text component peer value changed
sun.awt.windows.WTextComponentPeer#shouldClearRectBeforePaint()->boolean::: text component peer should clear rect before paint
sun.awt.windows.WTextFieldPeer#getMinimumSize()->Dimension::: text field peer get minimum size
sun.awt.windows.WTextFieldPeer#handleJavaKeyEvent(KeyEvent)->boolean::: text field peer handle java key event
sun.awt.windows.WTextFieldPeer#setEchoChar(char)->void::: text field peer set echo char
sun.awt.windows.WTextFieldPeer#getPreferredSize(int)->Dimension::: text field peer get preferred size
sun.awt.windows.WTextFieldPeer#getMinimumSize(int)->Dimension::: text field peer get minimum size
sun.awt.windows.WTextFieldPeer#getInputMethodRequests()->InputMethodRequests::: text field peer get input method requests
sun.awt.windows.WTextFieldPeer#create(WComponentPeer)->void::: text field peer create
sun.awt.windows.WTextFieldPeer#initialize()->void::: text field peer initialize
sun.awt.windows.WToolkit#loadLibraries()->void::: toolkit load libraries
sun.awt.windows.WToolkit#embeddedInit()->boolean:::Initializes the Toolkit for use in an embedded environment.
sun.awt.windows.WToolkit#embeddedDispose()->boolean:::Disposes the Toolkit in an embedded environment
sun.awt.windows.WToolkit#embeddedEventLoopIdleProcessing()->void:::To be called after processing the event queue by users of the above embeddedInit() function
sun.awt.windows.WToolkit.ToolkitDisposer#dispose()->void::: toolkit disposer dispose
sun.awt.windows.WToolkit#run()->void::: toolkit run
sun.awt.windows.WToolkit#startSecondaryEventLoop()->void::: toolkit start secondary event loop
sun.awt.windows.WToolkit#quitSecondaryEventLoop()->void::: toolkit quit secondary event loop
sun.awt.windows.WToolkit#createButton(Button)->ButtonPeer::: toolkit create button
sun.awt.windows.WToolkit#createTextField(TextField)->TextFieldPeer::: toolkit create text field
sun.awt.windows.WToolkit#createLabel(Label)->LabelPeer::: toolkit create label
sun.awt.windows.WToolkit#createList(List)->ListPeer::: toolkit create list
sun.awt.windows.WToolkit#createCheckbox(Checkbox)->CheckboxPeer::: toolkit create checkbox
sun.awt.windows.WToolkit#createScrollbar(Scrollbar)->ScrollbarPeer::: toolkit create scrollbar
sun.awt.windows.WToolkit#createScrollPane(ScrollPane)->ScrollPanePeer::: toolkit create scroll pane
sun.awt.windows.WToolkit#createTextArea(TextArea)->TextAreaPeer::: toolkit create text area
sun.awt.windows.WToolkit#createChoice(Choice)->ChoicePeer::: toolkit create choice
sun.awt.windows.WToolkit#createFrame(Frame)->FramePeer::: toolkit create frame
sun.awt.windows.WToolkit#createLightweightFrame(LightweightFrame)->FramePeer::: toolkit create lightweight frame
sun.awt.windows.WToolkit#createCanvas(Canvas)->CanvasPeer::: toolkit create canvas
sun.awt.windows.WToolkit#disableBackgroundErase(Canvas)->void::: toolkit disable background erase
sun.awt.windows.WToolkit#createPanel(Panel)->PanelPeer::: toolkit create panel
sun.awt.windows.WToolkit#createWindow(Window)->WindowPeer::: toolkit create window
sun.awt.windows.WToolkit#createDialog(Dialog)->DialogPeer::: toolkit create dialog
sun.awt.windows.WToolkit#createFileDialog(FileDialog)->FileDialogPeer::: toolkit create file dialog
sun.awt.windows.WToolkit#createMenuBar(MenuBar)->MenuBarPeer::: toolkit create menu bar
sun.awt.windows.WToolkit#createMenu(Menu)->MenuPeer::: toolkit create menu
sun.awt.windows.WToolkit#createPopupMenu(PopupMenu)->PopupMenuPeer::: toolkit create popup menu
sun.awt.windows.WToolkit#createMenuItem(MenuItem)->MenuItemPeer::: toolkit create menu item
sun.awt.windows.WToolkit#createCheckboxMenuItem(CheckboxMenuItem)->CheckboxMenuItemPeer::: toolkit create checkbox menu item
sun.awt.windows.WToolkit#createRobot(Robot, GraphicsDevice)->RobotPeer::: toolkit create robot
sun.awt.windows.WToolkit#createEmbeddedFrame(WEmbeddedFrame)->WEmbeddedFramePeer::: toolkit create embedded frame
sun.awt.windows.WToolkit#createWPrintDialog(WPrintDialog)->WPrintDialogPeer::: toolkit create print dialog
sun.awt.windows.WToolkit#createWPageDialog(WPageDialog)->WPageDialogPeer::: toolkit create page dialog
sun.awt.windows.WToolkit#createTrayIcon(TrayIcon)->TrayIconPeer::: toolkit create tray icon
sun.awt.windows.WToolkit#createSystemTray(SystemTray)->SystemTrayPeer::: toolkit create system tray
sun.awt.windows.WToolkit#isTraySupported()->boolean::: toolkit is tray supported
sun.awt.windows.WToolkit#getDataTransferer()->DataTransferer::: toolkit get data transferer
sun.awt.windows.WToolkit#getKeyboardFocusManagerPeer()->KeyboardFocusManagerPeer::: toolkit get keyboard focus manager peer
sun.awt.windows.WToolkit#getMouseInfoPeer()->MouseInfoPeer::: toolkit get mouse info peer
sun.awt.windows.WToolkit#setDynamicLayout(boolean)->void::: toolkit set dynamic layout
sun.awt.windows.WToolkit#isDynamicLayoutSet()->boolean::: toolkit is dynamic layout set
sun.awt.windows.WToolkit#isDynamicLayoutActive()->boolean::: toolkit is dynamic layout active
sun.awt.windows.WToolkit#isFrameStateSupported(int)->boolean:::Returns true if this frame state is supported.
sun.awt.windows.WToolkit#makeColorModel()->ColorModel::: toolkit make color model
sun.awt.windows.WToolkit#getScreenInsets(GraphicsConfiguration)->Insets::: toolkit get screen insets
sun.awt.windows.WToolkit#getScreenResolution()->int::: toolkit get screen resolution
sun.awt.windows.WToolkit#getFontMetrics(Font)->FontMetrics::: toolkit get font metrics
sun.awt.windows.WToolkit#getFontPeer(String, int)->FontPeer::: toolkit get font peer
sun.awt.windows.WToolkit#sync()->void::: toolkit sync
sun.awt.windows.WToolkit#getPrintJob(Frame, String, Properties)->PrintJob::: toolkit get print job
sun.awt.windows.WToolkit#getPrintJob(Frame, String, JobAttributes, PageAttributes)->PrintJob::: toolkit get print job
sun.awt.windows.WToolkit#beep()->void::: toolkit beep
sun.awt.windows.WToolkit#getLockingKeyState(int)->boolean::: toolkit get locking key state
sun.awt.windows.WToolkit#setLockingKeyState(int, boolean)->void::: toolkit set locking key state
sun.awt.windows.WToolkit#getSystemClipboard()->Clipboard::: toolkit get system clipboard
sun.awt.windows.WToolkit#loadSystemColors(int[])->void::: toolkit load system colors
sun.awt.windows.WToolkit#targetToPeer(Object)->Object::: toolkit target to peer
sun.awt.windows.WToolkit#targetDisposedPeer(Object, Object)->void::: toolkit target disposed peer
sun.awt.windows.WToolkit#getInputMethodAdapterDescriptor()->InputMethodDescriptor:::Returns a new input method adapter descriptor for native input methods.
sun.awt.windows.WToolkit#mapInputMethodHighlight(InputMethodHighlight)->Map:::Returns a style map for the input method highlight.
sun.awt.windows.WToolkit#enableInputMethodsForTextComponent()->boolean:::Returns whether enableInputMethods should be set to true for peered TextComponent instances on this platform.
sun.awt.windows.WToolkit#getDefaultKeyboardLocale()->Locale:::Returns the default keyboard locale of the underlying operating system
sun.awt.windows.WToolkit#createCustomCursor(Image, Point, String)->Cursor:::Returns a new custom cursor.
sun.awt.windows.WToolkit#getBestCursorSize(int, int)->Dimension:::Returns the supported cursor size (Win32 only has one).
sun.awt.windows.WToolkit#getMaximumCursorColors()->int::: toolkit get maximum cursor colors
sun.awt.windows.WToolkit#paletteChanged()->void::: toolkit palette changed
sun.awt.windows.WToolkit#displayChanged()->void::: toolkit display changed
sun.awt.windows.WToolkit#createDragSourceContextPeer(DragGestureEvent)->DragSourceContextPeer::: toolkit create drag source context peer
sun.awt.windows.WToolkit#createDragGestureRecognizer(Class, DragSource, Component, int, DragGestureListener)->T::: toolkit create drag gesture recognizer
sun.awt.windows.WToolkit#lazilyLoadDesktopProperty(String)->Object::: toolkit lazily load desktop property
sun.awt.windows.WToolkit#addPropertyChangeListener(String, PropertyChangeListener)->void::: toolkit add property change listener
sun.awt.windows.WToolkit#initializeDesktopProperties()->void::: toolkit initialize desktop properties
sun.awt.windows.WToolkit#getDesktopAAHints()->RenderingHints::: toolkit get desktop hints
sun.awt.windows.WToolkit#isModalityTypeSupported(Dialog.ModalityType)->boolean::: toolkit is modality type supported
sun.awt.windows.WToolkit#isModalExclusionTypeSupported(Dialog.ModalExclusionType)->boolean::: toolkit is modal exclusion type supported
sun.awt.windows.WToolkit#getWToolkit()->WToolkit::: toolkit get toolkit
sun.awt.windows.WToolkit#useBufferPerWindow()->boolean:::There are two reasons why we don't use buffer per window when Vista's DWM (aka Aero) is enabled: - since with DWM all windows are already double-buffered, the application   doesn't get expose events so we don't get to use our true back-buffer,   wasting memory and performance (this is valid for both d3d and gdi   pipelines) - in some cases with buffer per window enabled it is possible for the   paint manager to redirect rendering to the screen for some operations   (like copyArea), and since bpw uses its own BufferStrategy the   d3d onscreen rendering support is disabled and rendering goes through   GDI
sun.awt.windows.WToolkit#grab(Window)->void::: toolkit grab
sun.awt.windows.WToolkit#ungrab(Window)->void::: toolkit ungrab
sun.awt.windows.WToolkit#showOrHideTouchKeyboard(Component, AWTEvent)->void::: toolkit show or hide touch keyboard
sun.awt.windows.WToolkit#syncNativeQueue(long)->boolean::: toolkit sync native queue
sun.awt.windows.WToolkit#isDesktopSupported()->boolean::: toolkit is desktop supported
sun.awt.windows.WToolkit#createDesktopPeer(Desktop)->DesktopPeer::: toolkit create desktop peer
sun.awt.windows.WToolkit#isTaskbarSupported()->boolean::: toolkit is taskbar supported
sun.awt.windows.WToolkit#createTaskbarPeer(Taskbar)->TaskbarPeer::: toolkit create taskbar peer
sun.awt.windows.WToolkit#areExtraMouseButtonsEnabled()->boolean::: toolkit are extra mouse buttons enabled
sun.awt.windows.WToolkit#getNumberOfButtons()->int::: toolkit get number of buttons
sun.awt.windows.WToolkit#isWindowOpacitySupported()->boolean::: toolkit is window opacity supported
sun.awt.windows.WToolkit#isWindowShapingSupported()->boolean::: toolkit is window shaping supported
sun.awt.windows.WToolkit#isWindowTranslucencySupported()->boolean::: toolkit is window translucency supported
sun.awt.windows.WToolkit#isTranslucencyCapable(GraphicsConfiguration)->boolean::: toolkit is translucency capable
sun.awt.windows.WToolkit#needUpdateWindow()->boolean::: toolkit need update window
sun.awt.windows.WTrayIconPeer#disposeImpl()->void::: tray icon peer dispose impl
sun.awt.windows.WTrayIconPeer#updateImage()->void::: tray icon peer update image
sun.awt.windows.WTrayIconPeer#setToolTip(String)->void::: tray icon peer set tool tip
sun.awt.windows.WTrayIconPeer#showPopupMenu(int, int)->void::: tray icon peer show popup menu
sun.awt.windows.WTrayIconPeer#displayMessage(String, String, String)->void::: tray icon peer display message
sun.awt.windows.WTrayIconPeer#updateNativeImage(Image)->void::: tray icon peer update native image
sun.awt.windows.WTrayIconPeer#createNativeImage(BufferedImage)->void::: tray icon peer create native image
sun.awt.windows.WTrayIconPeer#postEvent(AWTEvent)->void::: tray icon peer post event
sun.awt.windows.WTrayIconPeer#create()->void::: tray icon peer create
sun.awt.windows.WTrayIconPeer#_dispose()->void::: tray icon peer _dispose
sun.awt.windows.WTrayIconPeer#updateNativeIcon(boolean)->void::: tray icon peer update native icon
sun.awt.windows.WTrayIconPeer#setNativeIcon(int[], byte[], int, int, int)->void::: tray icon peer set native icon
sun.awt.windows.WTrayIconPeer#_displayMessage(String, String, String)->void::: tray icon peer _display message
sun.awt.windows.WTrayIconPeer.IconObserver#imageUpdate(Image, int, int, int, int, int)->boolean::: icon observer image update
sun.awt.windows.WWindowPeer#disposeImpl()->void::: window peer dispose impl
sun.awt.windows.WWindowPeer#toFront()->void::: window peer to front
sun.awt.windows.WWindowPeer#toBack()->void::: window peer to back
sun.awt.windows.WWindowPeer#setAlwaysOnTop(boolean)->void::: window peer set always on top
sun.awt.windows.WWindowPeer#updateAlwaysOnTopState()->void::: window peer update always on top state
sun.awt.windows.WWindowPeer#updateFocusableWindowState()->void::: window peer update focusable window state
sun.awt.windows.WWindowPeer#setFocusableWindow(boolean)->void::: window peer set focusable window
sun.awt.windows.WWindowPeer#setTitle(String)->void::: window peer set title
sun.awt.windows.WWindowPeer#setResizable(boolean)->void::: window peer set resizable
sun.awt.windows.WWindowPeer#initialize()->void::: window peer initialize
sun.awt.windows.WWindowPeer#createAwtWindow(WComponentPeer)->void::: window peer create awt window
sun.awt.windows.WWindowPeer#preCreate(WComponentPeer)->void::: window peer pre create
sun.awt.windows.WWindowPeer#create(WComponentPeer)->void::: window peer create
sun.awt.windows.WWindowPeer#getNativeParent()->WComponentPeer::: window peer get native parent
sun.awt.windows.WWindowPeer#realShow()->void::: window peer real show
sun.awt.windows.WWindowPeer#show()->void::: window peer show
sun.awt.windows.WWindowPeer#updateInsets(Insets)->void::: window peer update insets
sun.awt.windows.WWindowPeer#getSysMinWidth()->int::: window peer get sys min width
sun.awt.windows.WWindowPeer#getSysMinHeight()->int::: window peer get sys min height
sun.awt.windows.WWindowPeer#getSysIconWidth()->int::: window peer get sys icon width
sun.awt.windows.WWindowPeer#getSysIconHeight()->int::: window peer get sys icon height
sun.awt.windows.WWindowPeer#getSysSmIconWidth()->int::: window peer get sys sm icon width
sun.awt.windows.WWindowPeer#getSysSmIconHeight()->int::: window peer get sys sm icon height
sun.awt.windows.WWindowPeer#setIconImagesData(int[], int, int, int[], int, int)->void:::windows/classes/sun/awt/windows/ Creates native icon from specified raster data and updates icon for window and all descendant windows that inherit icon
sun.awt.windows.WWindowPeer#reshapeFrame(int, int, int, int)->void::: window peer reshape frame
sun.awt.windows.WWindowPeer#getNativeWindowSize()->Dimension::: window peer get native window size
sun.awt.windows.WWindowPeer#getScaledWindowSize()->Dimension::: window peer get scaled window size
sun.awt.windows.WWindowPeer#requestWindowFocus(FocusEvent.Cause)->boolean::: window peer request window focus
sun.awt.windows.WWindowPeer#focusAllowedFor()->boolean::: window peer focus allowed for
sun.awt.windows.WWindowPeer#hide()->void::: window peer hide
sun.awt.windows.WWindowPeer#preprocessPostEvent(AWTEvent)->void::: window peer preprocess post event
sun.awt.windows.WWindowPeer#addWindowListener(WindowListener)->void::: window peer add window listener
sun.awt.windows.WWindowPeer#removeWindowListener(WindowListener)->void::: window peer remove window listener
sun.awt.windows.WWindowPeer#updateMinimumSize()->void::: window peer update minimum size
sun.awt.windows.WWindowPeer#updateIconImages()->void::: window peer update icon images
sun.awt.windows.WWindowPeer#setMinSize(int, int)->void::: window peer set min size
sun.awt.windows.WWindowPeer#isModalBlocked()->boolean::: window peer is modal blocked
sun.awt.windows.WWindowPeer#setModalBlocked(Dialog, boolean)->void::: window peer set modal blocked
sun.awt.windows.WWindowPeer#modalDisable(Dialog, long)->void::: window peer modal disable
sun.awt.windows.WWindowPeer#modalEnable(Dialog)->void::: window peer modal enable
sun.awt.windows.WWindowPeer#getActiveWindowHandles(Component)->long[]::: window peer get active window handles
sun.awt.windows.WWindowPeer#draggedToNewScreen()->void::: window peer dragged to new screen
sun.awt.windows.WWindowPeer#updateGC()->void::: window peer update c
sun.awt.windows.WWindowPeer#displayChanged()->void:::From the DisplayChangedListener interface
sun.awt.windows.WWindowPeer#paletteChanged()->void:::Part of the DisplayChangedListener interface: components do not need to react to this event
sun.awt.windows.WWindowPeer#setFullScreenExclusiveModeState(boolean)->void::: window peer set full screen exclusive mode state
sun.awt.windows.WWindowPeer#grab()->void::: window peer grab
sun.awt.windows.WWindowPeer#ungrab()->void::: window peer ungrab
sun.awt.windows.WWindowPeer#isTargetUndecorated()->boolean::: window peer is target undecorated
sun.awt.windows.WWindowPeer#repositionSecurityWarning()->void::: window peer reposition security warning
sun.awt.windows.WWindowPeer#setBounds(int, int, int, int, int)->void::: window peer set bounds
sun.awt.windows.WWindowPeer#print(Graphics)->void::: window peer print
sun.awt.windows.WWindowPeer#getTranslucentGraphics()->Graphics::: window peer get translucent graphics
sun.awt.windows.WWindowPeer#setBackground(Color)->void::: window peer set background
sun.awt.windows.WWindowPeer#setOpacity(float)->void::: window peer set opacity
sun.awt.windows.WWindowPeer#setOpaque(boolean)->void::: window peer set opaque
sun.awt.windows.WWindowPeer#updateWindowImpl(int[], int, int)->void::: window peer update window impl
sun.awt.windows.WWindowPeer#updateWindow()->void::: window peer update window
sun.awt.windows.WWindowPeer#windowDPIChange(int, float, float, int, float, float)->void::: window peer window change
