TranslucentWindowPainter#createInstance(WWindowPeer):::Creates an instance of the painter for particular peer.:::gc->peer->getGraphicsConfiguration->if->gcName->gc->getClass->getSimpleName->agc->if->agc->getContextCapabilities->getCaps->if->gcName->startsWith->return->new->VIOptD3DWindowPainter->else->if->gcName->startsWith->return->new->VIOptWGLWindowPainter->return->new->BIWindowPainter
TranslucentWindowPainter#getBackBuffer(boolean):::Creates (if needed), clears (if requested) and returns the buffer for this painter.:::
TranslucentWindowPainter#update(Image):::Updates the window associated with this painter with the contents of the passed image:::
TranslucentWindowPainter#getGraphics(boolean):::Create (if needed), clears back buffer (if requested) and return graphics for this class depending upon the buffer type:::
TranslucentWindowPainter#flush():::Flushes the resources associated with the painter:::
TranslucentWindowPainter#updateWindow(boolean):::Updates the window associated with the painter.:::done->while->if->g->getGraphics->try->window->paintAll->catch->finally->g->dispose->getBackBuffer->update->if
WClipboard#clearNativeContext():::Currently delayed data rendering is not used for the Windows clipboard, so there is no native context to clear.:::
WClipboard#openClipboard(SunClipboard):::Call the Win32 OpenClipboard function:::
WClipboard#closeClipboard():::Call the Win32 CloseClipboard function if we have clipboard ownership, does nothing if we have not ownership.:::
WClipboard#unregisterClipboardViewerChecked():::The clipboard viewer (it's the toolkit window) is not unregistered until the toolkit window disposing since MSDN suggests removing the window from the clipboard viewer chain just before it is destroyed.:::
WClipboard#createLocaleTransferable(long[]):::The clipboard must be opened.:::found->for->i->if->return->localeData->try->getClipboardData->catch->return->finally->localeDataFinal->return->new->Transferable
WComponentPeer#replaceSurfaceData():::Creates new surfaceData object and invalidates the previous surfaceData object:::replaceSurfaceData
WComponentPeer#replaceSurfaceData(int, BufferCapabilities):::Multi-buffer version of replaceSurfaceData:::oldData->oldBB->synchronized->getTreeLock->synchronized->if->return->mgr->ScreenUpdateManager->getInstance->mgr->dropScreenSurface->createScreenSurface->if->oldData->invalidate->if->gc->getGraphicsConfiguration->gc->createBackBuffer->else->if->if->oldData->flush->if->oldBB->flush
WComponentPeer#getBackgroundNoSync():::This method is intentionally not synchronized as it is called while holding other locks.:::return
WComponentPeer#getNativeParent():::Gets the native parent of this peer:::parent->SunToolkit->getNativeContainer->return->WToolkit->targetToPeer
WComponentPeer#isAccelCapable():::Returns whether this component is capable of being hw accelerated:::if->isContainingTopLevelAccelCapable->return->isTranslucent->SunToolkit->isContainingTopLevelTranslucent->return->Win32GraphicsEnvironment->isVistaOS
WComponentPeer#disableAcceleration():::Disables acceleration for this peer.:::
WComponentPeer#applyShape(Region):::Applies the shape to the native component window.:::if->shapeLog->isLoggable->shapeLog->finer->if->tx->winGraphicsConfig->getDefaultTransform->scaleX->tx->getScaleX->scaleY->tx->getScaleY->if->shape->getScaledRegion->shape->getLoX->shape->getLoY->shape->getHiX->shape->getHiY->shape->isRectangular->setRectangularShape->else->setRectangularShape
WComponentPeer#setZOrder(ComponentPeer):::Lowers this component at the bottom of the above component:::aboveHWND->getHWnd->setZOrder
WCustomCursor#getCursorWidth():::Return the current value of SM_CXCURSOR.:::
WCustomCursor#getCursorHeight():::Return the current value of SM_CYCURSOR.:::
WDataTransferer#platformImageBytesToImage(byte[], long):::Translates either a byte array or an input stream which contain platform-specific image data in the given format into an Image.:::mimeType->if->else->if->if->return->standardImageBytesToImage->imageData->platformImageBytesToImageData->if->throw->new->IOException->len->width->height->buffer->new->DataBufferInt->raster->Raster->createPackedRaster->return->new->BufferedImage
HTMLCodec#convertToHTMLFormat(byte[]):::convertToHTMLFormat adds the MS HTML clipboard header to byte array that contains the parameters pairs:::htmlPrefix->htmlSuffix->stContext->new->String->stUpContext->stContext->toUpperCase->if->stUpContext->indexOf->if->stUpContext->indexOf->stBaseUrl->nStartHTML->VERSION->length->VERSION_NUM->length->EOLN->length->START_HTML->length->EOLN->length->END_HTML->length->EOLN->length->START_FRAGMENT->length->EOLN->length->END_FRAGMENT->length->EOLN->length->SOURCE_URL->length->stBaseUrl->length->EOLN->length->nStartFragment->htmlPrefix->length->nEndFragment->nEndHTML->htmlSuffix->length->header->START_FRAGMENT_CMT->length->new->StringBuilder->header->append->header->append->header->append->header->append->header->toPaddedString->append->header->append->header->append->header->toPaddedString->append->header->append->header->append->header->toPaddedString->append->header->append->header->append->header->toPaddedString->append->header->append->header->append->header->append->header->append->header->append->headerBytes->trailerBytes->try->header->toString->getBytes->htmlSuffix->getBytes->catch->finally->retval->new->byteArr->System->arraycopy->System->arraycopy->System->arraycopy->return
WEmbeddedFrame#activateEmbeddingTopLevel():::This method is called from the native code when this embedded frame should be activated:::
WEmbeddedFrame#notifyModalBlocked(Dialog, boolean):::Should be overridden in subclasses:::try->thisPeer->WToolkit->targetToPeer->blockerPeer->WToolkit->targetToPeer->notifyModalBlockedImpl->catch->z->printStackTrace->finally
WFontConfiguration#getTextComponentFontName(String, int):::Returns the component font name (face name plus charset) of the font that should be used for AWT text components:::fontDescriptors->getFontDescriptors->fontName->findFontWithCharset->if->findFontWithCharset->return
WFontMetrics#getLeading():::Get leading:::return
WFontMetrics#getAscent():::Get ascent.:::return
WFontMetrics#getDescent():::Get descent:::return
WFontMetrics#getHeight():::Get height:::return
WFontMetrics#getMaxAscent():::Get maxAscent:::return
WFontMetrics#getMaxDescent():::Get maxDescent:::return
WFontMetrics#getMaxAdvance():::Get maxAdvance:::return
WFontMetrics#stringWidth(String):::Return the width of the specified string in this Font.:::
WFontMetrics#charsWidth(char[], int, int):::Return the width of the specified char[] in this Font.:::
WFontMetrics#bytesWidth(byte[], int, int):::Return the width of the specified byte[] in this Font.:::
WFontMetrics#getWidths():::Get the widths of the first 256 characters in the font.:::return
WGlobalCursorManager#nativeUpdateCursor(Component):::Should be called in response to a native mouse enter or native mouse button released message:::WGlobalCursorManager->getCursorManager->updateCursorLater
WInputMethod#getControlObject():::Returns null.:::return
WInputMethod#setCharacterSubsets(Subset[]):::Implements InputMethod.setCharacterSubsets for Windows.:::if->setConversionStatus->setOpenStatus->return->subset1->locale->getNativeLocale->newmode->if->return->if->locale->getLanguage->getLanguage->equals->if->setOpenStatus->else->if->else->if->else->if->else->if->else->return->setOpenStatus->getConversionStatus->setConversionStatus->else->if->locale->getLanguage->getLanguage->equals->if->setOpenStatus->else->if->else->if->else->return->setOpenStatus->setConversionStatus->else->if->locale->getLanguage->getLanguage->equals->if->setOpenStatus->else->if->else->if->else->return->setOpenStatus->setConversionStatus
WInputMethod#disableInputMethod():::Explicitly disable the native IME:::if->disableNativeIME
WInputMethod#getNativeInputMethodInfo():::Returns a string with information about the windows input method, or null.:::return->getNativeIMMDescription
WPathGraphics#create():::Creates a new Graphics object that is a copy of this Graphics object.:::return->getDelegate->create->getPrinterJob->getPrintable->getPageFormat->getPageIndex->canDoRedraws->new->WPathGraphics
WPathGraphics#draw(Shape):::Strokes the outline of a Shape using the settings of the current graphics state:::stroke->getStroke->if->lineStroke->minLineStroke->deviceLineWidth->lineWidth->deviceTransform->penSize->lineStroke->getLineWidth->new->Point2D.Float->getTransform->deviceTransform->deltaTransform->Math->Math->abs->Math->abs->min->if->minPenSize->new->Point2D.Float->try->inverse->minLineWidth->deviceTransform->createInverse->inverse->deltaTransform->Math->Math->abs->Math->abs->max->lineStroke->getEndCap->lineStroke->getLineJoin->lineStroke->getMiterLimit->lineStroke->getDashArray->lineStroke->getDashPhase->new->BasicStroke->setStroke->catch->finally->super->draw->if->setStroke->else->super->draw
WPathGraphics#drawString(String, int, int):::Draws the text given by the specified string, using this graphics context's current font and color:::drawString
WPathGraphics#drawString(String, float, float, Font, FontRenderContext, float):::Renders the text specified by the specified String, using the current Font and Paint attributes in the Graphics2D context:::if->str->length->return->if->super->drawString->return->layoutNeeded->strNeedsTextLayout->if->font->hasLayoutAttributes->layout->new->TextLayout->layout->draw->return->else->if->super->drawString->return->deviceTransform->getTransform->fontTransform->new->AffineTransform->fontTransform->font->getTransform->concatenate->transformType->fontTransform->getType->directToGDI->wPrinterJob->getPrinterJob->try->wPrinterJob->getPaint->setTextColor->catch->finally->if->super->drawString->return->userpos->new->Point2D.Float->devpos->new->Point2D.Float->if->font->isTransformed->fontTx->font->getTransform->translateX->fontTx->getTranslateX->translateY->fontTx->getTranslateY->if->Math->abs->if->Math->abs->deviceTransform->transform->if->getClip->getClip->getPathIterator->deviceClip->fontSize->font->getSize2D->devResX->wPrinterJob->getXRes->devResY->wPrinterJob->getYRes->fontDevScaleY->orient->getPageFormat->getOrientation->if->tmp->devScaleX->devScaleY->fontTransform->scale->pty->new->Point2D.Double->fontTransform->deltaTransform->scaleFactorY->Math->sqrt->scaledFontSizeY->ptx->new->Point2D.Double->fontTransform->deltaTransform->scaleFactorX->Math->sqrt->awScale->getAwScale->iangle->getAngle->new->Point2D.Double->deviceTransform->deltaTransform->advanceScaleX->Math->sqrt->new->Point2D.Double->deviceTransform->deltaTransform->advanceScaleY->Math->sqrt->font2D->FontUtilities->getFont2D->if->textOut->else->if->compFont->userx->usery->devx->devy->chars->str->toCharArray->len->glyphs->new->intArr->compFont->getMapper->charsToGlyphs->startChar->endChar->slot->while->while->substr->new->String->slotFont->compFont->getSlotFont->textOut->bds->font->getStringBounds->xAdvance->bds->getWidth->deviceTransform->transform->else->super->drawString
WPathGraphics#printGlyphVector(GlyphVector, float, float):::return true if the Graphics instance can directly print this glyphvector:::if->gv->getLayoutFlags->return->if->gv->getNumGlyphs->return->deviceTransform->getTransform->fontTransform->new->AffineTransform->font->gv->getFont->fontTransform->font->getTransform->concatenate->transformType->fontTransform->getType->directToGDI->wPrinterJob->getPrinterJob->try->wPrinterJob->getPaint->setTextColor->catch->finally->if->return->userpos->new->Point2D.Float->g0pos->gv->getGlyphPosition->g0pos->getX->g0pos->getY->devpos->new->Point2D.Float->if->font->isTransformed->fontTx->font->getTransform->translateX->fontTx->getTranslateX->translateY->fontTx->getTranslateY->if->Math->abs->if->Math->abs->deviceTransform->transform->if->getClip->getClip->getPathIterator->deviceClip->fontSize->font->getSize2D->devResX->wPrinterJob->getXRes->devResY->wPrinterJob->getYRes->fontDevScaleY->orient->getPageFormat->getOrientation->if->tmp->devScaleX->devScaleY->fontTransform->scale->pty->new->Point2D.Double->fontTransform->deltaTransform->scaleFactorY->Math->sqrt->scaledFontSizeY->ptx->new->Point2D.Double->fontTransform->deltaTransform->scaleFactorX->Math->sqrt->awScale->getAwScale->iangle->getAngle->new->Point2D.Double->deviceTransform->deltaTransform->advanceScaleX->Math->sqrt->new->Point2D.Double->deviceTransform->deltaTransform->advanceScaleY->Math->sqrt->numGlyphs->gv->getNumGlyphs->glyphCodes->gv->getGlyphCodes->glyphPos->gv->getGlyphPositions->invisibleGlyphCnt->for->gc->if->visibleGlyphCnt->visibleGlyphCodes->new->intArr->visiblePositions->new->floatArr->index->for->i->advanceTransform->AffineTransform->getScaleInstance->glyphAdvPos->new->floatArr->advanceTransform->transform->font2D->FontUtilities->getFont2D->if->family->font2D->getFamilyName->style->font->getStyle->font2D->getStyle->if->wPrinterJob->setFont->return->wPrinterJob->glyphsOut->else->if->compFont->userx->usery->devx->devy->start->end->slot->while->while->slotFont->compFont->getSlotFont->if->return->family->slotFont->getFamilyName->style->font->getStyle->slotFont->getStyle->if->wPrinterJob->setFont->return->glyphs->Arrays->copyOfRange->posns->Arrays->copyOfRange->if->p->new->Point2D.Float->deviceTransform->transform->wPrinterJob->glyphsOut->else->return->return
WPathGraphics#drawImageToPlatform(Image, AffineTransform, Color, int, int, int, int, boolean):::The various drawImage() methods for WPathGraphics are all decomposed into an invocation of drawImageToPlatform:::img->getBufferedImage->if->return->wPrinterJob->getPrinterJob->fullTransform->getTransform->if->new->AffineTransform->fullTransform->concatenate->fullMatrix->new->doubleArr->fullTransform->getMatrix->unitVectorX->new->Point2D.Float->unitVectorY->new->Point2D.Float->fullTransform->deltaTransform->fullTransform->deltaTransform->origin->new->Point2D.Float->scaleX->unitVectorX->distance->scaleY->unitVectorY->distance->devResX->wPrinterJob->getXRes->devResY->wPrinterJob->getYRes->devScaleX->devScaleY->transformType->fullTransform->getType->clampScale->if->if->if->if->rotTransform->new->AffineTransform->srcRect->new->Rectangle2D.Float->rotShape->rotTransform->createTransformedShape->rotBounds->rotShape->getBounds2D->rotBounds->rotBounds->getX->rotBounds->getY->rotBounds->getWidth->rotBounds->getHeight->setRect->boundsWidth->rotBounds->getWidth->boundsHeight->rotBounds->getHeight->if->drawOpaque->if->hasTransparentPixels->if->isBitmaskTransparency->if->if->drawBitmaskImage->return->else->if->bgcolor->getTransparency->if->canDoRedraws->else->if->img->getWidth->img->getHeight->canDoRedraws->if->fullTransform->getMatrix->tx->new->AffineTransform->rect->new->Rectangle2D.Float->shape->fullTransform->createTransformedShape->region->shape->getBounds2D->region->region->getX->region->getY->region->getWidth->region->getHeight->setRect->w->region->getWidth->h->region->getHeight->nbytes->maxBytes->origDpi->dpi->scaleFactor->maxSFX->maxSFY->maxSF->minDpi->if->while->if->region->region->getX->region->getY->region->getWidth->region->getHeight->setRect->wPrinterJob->getTransform->getClip->saveState->return->else->dibType->icm->cm->img->getColorModel->imgType->img->getType->if->cm->getPixelSize->if->cm->getPixelSize->rgbs->new->intArr->icm->getRGBs->transparent->icm->getTransparency->transpixel->icm->getTransparentPixel->new->IndexColorModel->iw->rotBounds->getWidth->ih->rotBounds->getHeight->deepImage->newImage->if->if->new->BufferedImage->else->new->BufferedImage->imageGraphics->deepImage->createGraphics->imageGraphics->deepImage->getWidth->deepImage->getHeight->clipRect->imageGraphics->rotBounds->getX->rotBounds->getY->translate->imageGraphics->transform->if->imageGraphics->drawImage->imageGraphics->dispose->else->scaledBounds->rotBounds->getX->rotBounds->getY->rotBounds->getWidth->rotBounds->getHeight->new->Rectangle2D.Float->raster->deepImage->getRaster->data->if->getDataStorage->else->if->getDataStorage->else->return->bitsPerPixel->sm->deepImage->getSampleModel->if->csm->csm->getPixelStride->else->if->mppsm->mppsm->getPixelBitStride->else->if->diw->deepImage->getWidth->dih->deepImage->getHeight->if->holdClip->getClip->xform->createTransformedShape->clip->getClip->getTransform->getPathIterator->deviceClip->wPrinterJob->Math->rint->Math->rint->deepImage->getWidth->deepImage->getHeight->drawDIBImage->setClip->return
WPathGraphics#redrawRegion(Rectangle2D, double, double, Shape, AffineTransform):::Have the printing application redraw everything that falls within the page bounds defined by region.:::wPrinterJob->getPrinterJob->painter->getPrintable->pageFormat->getPageFormat->pageIndex->getPageIndex->deepImage->region->getWidth->region->getHeight->new->BufferedImage->g->deepImage->createGraphics->proxy->new->ProxyGraphics2D->proxy->setColor->proxy->deepImage->getWidth->deepImage->getHeight->fillRect->proxy->deepImage->getWidth->deepImage->getHeight->clipRect->proxy->region->getX->region->getY->translate->sourceResX->wPrinterJob->getXRes->sourceResY->wPrinterJob->getYRes->proxy->scale->proxy->wPrinterJob->pageFormat->getPaper->getPhysicalPrintableX->wPrinterJob->getXRes->wPrinterJob->pageFormat->getPaper->getPhysicalPrintableY->wPrinterJob->getYRes->translate->proxy->getPageFormat->getMatrix->new->AffineTransform->transform->proxy->setPaint->painter->print->g->dispose->if->savedClip->getPathIterator->deviceClip->scaledBounds->region->getX->region->getY->region->getWidth->region->getHeight->new->Rectangle2D.Float->tile->deepImage->getRaster->wPrinterJob->tile->getDataStorage->deepImage->getWidth->deepImage->getHeight->drawImage3ByteBGR
WPathGraphics#deviceFrameRect(int, int, int, int, Color):::Draw the bounding rectangle using transformed coordinates.:::deviceTransform->getTransform->transformType->deviceTransform->getType->usePath->if->new->Rectangle2D.Float->draw->return->stroke->getStroke->if->lineStroke->endCap->lineStroke->getEndCap->lineJoin->lineStroke->getLineJoin->if->lineStroke->getMiterLimit->lineWidth->lineStroke->getLineWidth->penSize->new->Point2D.Float->deviceTransform->deltaTransform->deviceLineWidth->Math->Math->abs->Math->abs->min->ul_pos->new->Point2D.Float->deviceTransform->transform->lr_pos->new->Point2D.Float->deviceTransform->transform->w->lr_pos->getX->ul_pos->getX->h->lr_pos->getY->ul_pos->getY->wPrinterJob->getPrinterJob->if->wPrinterJob->selectStylePen->wPrinterJob->ul_pos->getX->ul_pos->getY->frameRect->else->lowerRes->Math->wPrinterJob->getXRes->wPrinterJob->getYRes->min->if->wPrinterJob->selectPen->wPrinterJob->ul_pos->getX->ul_pos->getY->frameRect->else->new->Rectangle2D.Float->draw->else->new->Rectangle2D.Float->draw
WPathGraphics#deviceDrawLine(int, int, int, int, Color):::Draw a line using a pen created using the specified color and current stroke properties.:::stroke->getStroke->if->lineStroke->if->lineStroke->getDashArray->new->Line2D.Float->draw->return->lineWidth->lineStroke->getLineWidth->penSize->new->Point2D.Float->deviceTransform->getTransform->deviceTransform->deltaTransform->deviceLineWidth->Math->Math->abs->Math->abs->min->begin_pos->new->Point2D.Float->deviceTransform->transform->end_pos->new->Point2D.Float->deviceTransform->transform->endCap->lineStroke->getEndCap->lineJoin->lineStroke->getLineJoin->if->end_pos->getX->begin_pos->getX->end_pos->getY->begin_pos->getY->wPrinterJob->getPrinterJob->if->wPrinterJob->selectStylePen->wPrinterJob->begin_pos->getX->begin_pos->getY->moveTo->wPrinterJob->end_pos->getX->end_pos->getY->lineTo->else->lowerRes->Math->wPrinterJob->getXRes->wPrinterJob->getYRes->min->if->wPrinterJob->selectPen->wPrinterJob->begin_pos->getX->begin_pos->getY->moveTo->wPrinterJob->end_pos->getX->end_pos->getY->lineTo->else->new->Line2D.Float->draw
WPrinterJob#pageDialog(PageFormat):::Display a dialog to the user allowing the modification of a PageFormat instance:::if->GraphicsEnvironment->isHeadless->throw->new->HeadlessException->if->getPrintService->return->super->pageDialog->pageClone->page->clone->result->dialog->new->WPageDialog->dialog->setRetVal->dialog->setVisible->dialog->getRetVal->dialog->dispose->if->printerName->getNativePrintService->if->myService->getName->equals->try->PrintServiceLookupProvider->getWin32PrintLUS->getPrintServiceByName->setPrintService->catch->finally->updatePageAttributes->return->else->return
WPrinterJob#printDialog():::Presents the user a dialog for changing properties of the print job interactively.:::if->GraphicsEnvironment->isHeadless->throw->new->HeadlessException->if->new->HashPrintRequestAttributeSet->if->getPrintService->return->super->printDialog->if->return->else->return->displayNativeDialog
WPrinterJob#setPrintService(PrintService):::Associate this PrinterJob with a new PrintService:::super->setPrintService->if->return->service->getName->setNativePrintServiceIfNeeded
WPrinterJob#setAttributes(PrintRequestAttributeSet):::copy the attributes to the native print job Note that this method, and hence the re-initialisation of the GDI values is done on each entry to the print dialog since an app could redisplay the print dialog for the same job and 1) the application may have changed attribute settings 2) the application may have changed the printer:::initAttributeMembers->super->setAttributes->getCopiesInt->if->return->attrs->attributes->toArray->for->i
WPrinterJob#defaultPage(PageFormat):::The passed in PageFormat will be copied and altered to describe the default page size and orientation of the PrinterJob's current printer:::newPage->page->clone->getDefaultPage->return
WPrinterJob#validatePaper(Paper, Paper):::validate the paper size against the current printer.:::
WPrinterJob#isCollated():::We don't (yet) provide API to support collation, and when we do the logic here will require adjustment, but this method is currently necessary to honour user-originated collation requests - which can only originate from the print dialog:::return
WPrinterJob#getCollatedCopies():::Returns how many times the entire book should be printed by the PrintJob:::debug_println->if->super->isCollated->return->getCopies->return
WPrinterJob#getNoncollatedCopies():::Returns how many times each page in the book should be consecutively printed by PrinterJob:::if->super->isCollated->return->else->return->getCopies
WPrinterJob#setPolyFillMode(int):::Set the current polgon fill rule into the printer device context:::getPrintDC->setPolyFillMode
WPrinterJob#getPenX():::Return the x coordinate of the current pen position in the print device context.:::return->getPrintDC->getPenX
WPrinterJob#getPenY():::Return the y coordinate of the current pen position in the print device context.:::return->getPrintDC->getPenY
WPrinterJob#selectClipPath():::Set the current path in the printer device's context to be clipping path.:::getPrintDC->selectClipPath
WPrinterJob#setFont(String, float, int, int, float):::Set a GDI font capable of drawing the java Font passed in.:::didSetFont->if->family->equals->getPrintDC->setFont->if->return
WPrinterJob#setTextColor(Color):::Set the GDI color for text drawing.:::if->color->equals->rgb->color->getRGBColorComponents->getPrintDC->setTextColor
WPrinterJob#removeControlChars(String):::Remove control characters.:::return->super->removeControlChars
WPrinterJob#textOut(String, float, float, float[]):::Draw the string text to the printer's device context at the specified position.:::text->removeControlChars->if->text->length->return->getPrintDC->text->length->textOut
WPrinterJob#glyphsOut(int[], float, float, float[]):::Draw the glyphs glyphs to the printer's device context at the specified position.:::glyphCharArray->new->charArr->for->i->glyphStr->new->String->getPrintDC->textOut
WPrinterJob#getGDIAdvance(String):::Get the advance of this text that GDI returns for the font currently selected into the GDI device context for this job:::removeControlChars->if->text->length->return->return->getPrintDC->getGDIAdvance
WPrinterJob#drawImage3ByteBGR(byte[], float, float, float, float, float, float, float, float):::Draw the 24 bit BGR image buffer represented by image to the GDI device context printDC:::getPrintDC->drawDIBImage
WPrinterJob#startPage(PageFormat, Printable, int, boolean):::Begin a new page.:::invalidateCachedState->deviceStartPage
WPrinterJob#endPage(PageFormat, Printable, int):::End a page.:::deviceEndPage
WPrinterJob#setCopies(int):::Set the number of copies to be printed.:::super->setCopies->setNativeCopies
WPrinterJob#endDoc():::Call Window's EndDoc routine to end a print job.:::
WPrinterJob#abortDoc():::Call Window's AbortDoc routine to abort a print job.:::
WPrinterJob#deviceStartPage(PageFormat, Printable, int, boolean):::Begin a new page:::
WPrinterJob#deviceEndPage(PageFormat, Printable, int):::End a page:::
WPrinterJob#printBand(byte[], int, int, int, int):::Prints the contents of the array of ints, 'data' to the current page:::
WPrinterJob#beginPath(long):::Begin a Window's rendering path in the device context printDC.:::
WPrinterJob#endPath(long):::End a Window's rendering path in the device context printDC.:::
WPrinterJob#closeFigure(long):::Close a subpath in a Window's rendering path in the device context printDC.:::
WPrinterJob#fillPath(long):::Fill a defined Window's rendering path in the device context printDC.:::
WPrinterJob#moveTo(long, float, float):::Move the Window's pen position to (x,y) in the device context printDC.:::
WPrinterJob#lineTo(long, float, float):::Draw a line from the current pen position to (x,y) in the device context printDC.:::
WPrinterJob#setPolyFillMode(long, int):::Set the current polgon fill rule into the device context printDC:::
WPrinterJob#selectSolidBrush(long, int, int, int):::Create a Window's solid brush for the color specified by (red, green, blue):::
WPrinterJob#getPenX(long):::Return the x coordinate of the current pen position in the device context printDC.:::
WPrinterJob#getPenY(long):::Return the y coordinate of the current pen position in the device context printDC.:::
WPrinterJob#selectClipPath(long):::Select the device context's current path to be the clipping path.:::
WPrinterJob#frameRect(long, float, float, float, float):::Draw a rectangle using specified brush.:::
WPrinterJob#fillRect(long, float, float, float, float, int, int, int):::Fill a rectangle specified by the coordinates using specified brush.:::
WPrinterJob#selectPen(long, float, int, int, int):::Create a solid brush using the RG & B colors and width:::
WPrinterJob#selectStylePen(long, long, long, float, int, int, int):::Create a solid brush using the RG & B colors and specified pen styles:::
WPrinterJob#setFont(long, String, float, boolean, boolean, int, float):::Set a GDI font capable of drawing the java Font passed in.:::
WPrinterJob#setTextColor(long, int, int, int):::Set the GDI color for text drawing.:::
WPrinterJob#textOut(long, String, int, boolean, float, float, float[]):::Draw the string text into the device context printDC at the specified position.:::
WScrollPanePeer#childResized(int, int):::The child component has been resized:::sp->vs->sp->getSize->setSpans->setInsets
WScrollPanePeer#setValue(Adjustable, int):::Called by ScrollPane's internal observer of the scrollpane's adjustables:::c->getScrollChild->if->return->p->c->getLocation->switch->adj->getOrientation->setScrollPosition->break->setScrollPosition->break
WToolkit#embeddedInit():::Initializes the Toolkit for use in an embedded environment.:::
WToolkit#embeddedDispose():::Disposes the Toolkit in an embedded environment:::
WToolkit#embeddedEventLoopIdleProcessing():::To be called after processing the event queue by users of the above embeddedInit() function:::
WToolkit#isFrameStateSupported(int):::Returns true if this frame state is supported.:::switch->return->return
WToolkit#getInputMethodAdapterDescriptor():::Returns a new input method adapter descriptor for native input methods.:::return->new->WInputMethodDescriptor
WToolkit#mapInputMethodHighlight(InputMethodHighlight):::Returns a style map for the input method highlight.:::return->WInputMethod->mapInputMethodHighlight
WToolkit#enableInputMethodsForTextComponent():::Returns whether enableInputMethods should be set to true for peered TextComponent instances on this platform.:::return
WToolkit#getDefaultKeyboardLocale():::Returns the default keyboard locale of the underlying operating system:::locale->WInputMethod->getNativeLocale->if->return->super->getDefaultKeyboardLocale->else->return
WToolkit#createCustomCursor(Image, Point, String):::Returns a new custom cursor.:::return->new->WCustomCursor
WToolkit#getBestCursorSize(int, int):::Returns the supported cursor size (Win32 only has one).:::return->WCustomCursor->getCursorWidth->WCustomCursor->getCursorHeight->new->Dimension
WToolkit#useBufferPerWindow():::There are two reasons why we don't use buffer per window when Vista's DWM (aka Aero) is enabled: - since with DWM all windows are already double-buffered, the application   doesn't get expose events so we don't get to use our true back-buffer,   wasting memory and performance (this is valid for both d3d and gdi   pipelines) - in some cases with buffer per window enabled it is possible for the   paint manager to redirect rendering to the screen for some operations   (like copyArea), and since bpw uses its own BufferStrategy the   d3d onscreen rendering support is disabled and rendering goes through   GDI:::return->Win32GraphicsEnvironment->isDWMCompositionEnabled
WWindowPeer#setIconImagesData(int[], int, int, int[], int, int):::windows/classes/sun/awt/windows/ Creates native icon from specified raster data and updates icon for window and all descendant windows that inherit icon:::
WWindowPeer#displayChanged():::From the DisplayChangedListener interface:::SunToolkit->this->updateGC->executeOnEventHandlerThread
WWindowPeer#paletteChanged():::Part of the DisplayChangedListener interface: components do not need to react to this event:::
