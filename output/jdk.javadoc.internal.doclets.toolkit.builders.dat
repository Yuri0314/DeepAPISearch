AbstractBuilder#build():::Build the documentation.:::
AbstractMemberBuilder#build():::This method is not supported by sub-builders.:::throw->new->AssertionError
AbstractMemberBuilder#build(Content):::Build the documentation.:::
AbstractMemberBuilder#hasMembersToDocument():::Returns true if this subbuilder has anything to document.:::
AbstractMemberBuilder#getVisibleMembers(Kind):::Returns a list of visible elements of the specified kind in this type element.:::return->visibleMemberTable->getVisibleMembers
AnnotationTypeBuilder#getInstance(Context, TypeElement, AnnotationTypeWriter):::Construct a new AnnotationTypeBuilder.:::return->new->AnnotationTypeBuilder
AnnotationTypeBuilder#buildAnnotationTypeDoc(Content):::Build the annotation type documentation.:::writer->configuration->getText->utils->getSimpleName->getHeader->annotationContentTree->writer->getAnnotationContentHeader->buildAnnotationTypeInfo->buildMemberSummary->buildAnnotationTypeMemberDetails->writer->addAnnotationContentTree->writer->addFooter->writer->printDocument->copyDocFiles
AnnotationTypeBuilder#buildAnnotationTypeInfo(Content):::Build the annotation information tree documentation.:::annotationInfoTree->writer->getAnnotationInfoTreeHeader->buildAnnotationTypeSignature->buildDeprecationInfo->buildAnnotationTypeDescription->buildAnnotationTypeTagInfo->annotationContentTree->writer->getAnnotationInfo->addContent
AnnotationTypeBuilder#buildDeprecationInfo(Content):::If this annotation is deprecated, build the appropriate information.:::writer->addAnnotationTypeDeprecationInfo
AnnotationTypeBuilder#buildAnnotationTypeSignature(Content):::Build the signature of the current annotation type.:::writer->utils->modifiersToString->addAnnotationTypeSignature
AnnotationTypeBuilder#buildAnnotationTypeDescription(Content):::Build the annotation type description.:::writer->addAnnotationTypeDescription
AnnotationTypeBuilder#buildAnnotationTypeTagInfo(Content):::Build the tag information for the current annotation type.:::writer->addAnnotationTypeTagInfo
AnnotationTypeBuilder#buildMemberSummary(Content):::Build the member summary contents of the page.:::memberSummaryTree->writer->getMemberTreeHeader->builderFactory->getMemberSummaryBuilder->build->annotationContentTree->writer->getMemberSummaryTree->addContent
AnnotationTypeBuilder#buildAnnotationTypeMemberDetails(Content):::Build the member details contents of the page.:::memberDetailsTree->writer->getMemberTreeHeader->buildAnnotationTypeFieldDetails->buildAnnotationTypeRequiredMemberDetails->buildAnnotationTypeOptionalMemberDetails->if->memberDetailsTree->isValid->annotationContentTree->writer->getMemberDetailsTree->addContent
AnnotationTypeBuilder#buildAnnotationTypeFieldDetails(Content):::Build the annotation type field documentation.:::builderFactory->getAnnotationTypeFieldsBuilder->build
AnnotationTypeBuilder#buildAnnotationTypeOptionalMemberDetails(Content):::Build the annotation type optional member documentation.:::builderFactory->getAnnotationTypeOptionalMemberBuilder->build
AnnotationTypeBuilder#buildAnnotationTypeRequiredMemberDetails(Content):::Build the annotation type required member documentation.:::builderFactory->getAnnotationTypeRequiredMemberBuilder->build
AnnotationTypeFieldBuilder#getInstance(Context, TypeElement, AnnotationTypeFieldWriter):::Construct a new AnnotationTypeFieldBuilder.:::return->new->AnnotationTypeFieldBuilder
AnnotationTypeFieldBuilder#hasMembersToDocument():::Returns whether or not there are members to document.:::return->members->isEmpty
AnnotationTypeFieldBuilder#buildAnnotationTypeField(Content):::Build the annotation type field documentation.:::buildAnnotationTypeMember
AnnotationTypeFieldBuilder#buildAnnotationTypeMember(Content):::Build the member documentation.:::if->return->if->hasMembersToDocument->writer->addAnnotationFieldDetailsMarker->lastElement->members->members->size->get->foreach->detailsTree->writer->getMemberTreeHeader->writer->addAnnotationDetailsTreeHeader->annotationDocTree->writer->getAnnotationDocTreeHeader->buildSignature->buildDeprecationInfo->buildMemberComments->buildTagInfo->detailsTree->writer->getAnnotationDoc->addContent->memberDetailsTree->writer->getAnnotationDetails->addContent
AnnotationTypeFieldBuilder#buildSignature(Content):::Build the signature.:::annotationDocTree->writer->getSignature->addContent
AnnotationTypeFieldBuilder#buildDeprecationInfo(Content):::Build the deprecation information.:::writer->addDeprecated
AnnotationTypeFieldBuilder#buildMemberComments(Content):::Build the comments for the member:::if->writer->addComments
AnnotationTypeFieldBuilder#buildTagInfo(Content):::Build the tag information.:::writer->addTags
AnnotationTypeFieldBuilder#getWriter():::Return the annotation type field writer for this builder.:::return
AnnotationTypeOptionalMemberBuilder#getInstance(Context, TypeElement, AnnotationTypeOptionalMemberWriter):::Construct a new AnnotationTypeMemberBuilder.:::return->new->AnnotationTypeOptionalMemberBuilder
AnnotationTypeOptionalMemberBuilder#buildAnnotationTypeOptionalMember(Content):::Build the annotation type optional member documentation.:::buildAnnotationTypeMember
AnnotationTypeOptionalMemberBuilder#buildDefaultValueInfo(Content):::Build the default value for this optional member.:::addDefaultValueInfo
AnnotationTypeRequiredMemberBuilder#getInstance(Context, TypeElement, AnnotationTypeRequiredMemberWriter):::Construct a new AnnotationTypeMemberBuilder.:::return->new->AnnotationTypeRequiredMemberBuilder
AnnotationTypeRequiredMemberBuilder#hasMembersToDocument():::Returns whether or not there are members to document.:::return->members->isEmpty
AnnotationTypeRequiredMemberBuilder#buildAnnotationTypeRequiredMember(Content):::Build the annotation type required member documentation.:::buildAnnotationTypeMember
AnnotationTypeRequiredMemberBuilder#buildAnnotationTypeMember(Content):::Build the member documentation.:::if->return->if->hasMembersToDocument->writer->addAnnotationDetailsMarker->lastMember->members->members->size->get->foreach->detailsTree->writer->getMemberTreeHeader->writer->addAnnotationDetailsTreeHeader->annotationDocTree->writer->getAnnotationDocTreeHeader->buildAnnotationTypeMemberChildren->detailsTree->writer->getAnnotationDoc->addContent->memberDetailsTree->writer->getAnnotationDetails->addContent
AnnotationTypeRequiredMemberBuilder#buildSignature(Content):::Build the signature.:::annotationDocTree->writer->getSignature->addContent
AnnotationTypeRequiredMemberBuilder#buildDeprecationInfo(Content):::Build the deprecation information.:::writer->addDeprecated
AnnotationTypeRequiredMemberBuilder#buildMemberComments(Content):::Build the comments for the member:::if->writer->addComments
AnnotationTypeRequiredMemberBuilder#buildTagInfo(Content):::Build the tag information.:::writer->addTags
AnnotationTypeRequiredMemberBuilder#getWriter():::Return the annotation type required member writer for this builder.:::return
BuilderFactory#getConstantsSummaryBuilder():::Return the builder that builds the constant summary.:::return->ConstantsSummaryBuilder->writerFactory->getConstantsSummaryWriter->getInstance
BuilderFactory#getPackageSummaryBuilder(PackageElement):::Return the builder that builds the package summary.:::return->PackageSummaryBuilder->writerFactory->getPackageSummaryWriter->getInstance
BuilderFactory#getModuleSummaryBuilder(ModuleElement):::Return the builder that builds the module summary.:::return->ModuleSummaryBuilder->writerFactory->getModuleSummaryWriter->getInstance
BuilderFactory#getClassBuilder(TypeElement, ClassTree):::Return the builder for the class.:::return->ClassBuilder->writerFactory->getClassWriter->getInstance
BuilderFactory#getAnnotationTypeBuilder(TypeElement):::Return the builder for the annotation type.:::return->AnnotationTypeBuilder->writerFactory->getAnnotationTypeWriter->getInstance
BuilderFactory#getMethodBuilder(ClassWriter):::Return an instance of the method builder for the given class.:::return->MethodBuilder->classWriter->getTypeElement->writerFactory->getMethodWriter->getInstance
BuilderFactory#getAnnotationTypeFieldsBuilder(AnnotationTypeWriter):::Return an instance of the annotation type fields builder for the given class.:::return->AnnotationTypeFieldBuilder->annotationTypeWriter->getAnnotationTypeElement->writerFactory->getAnnotationTypeFieldWriter->getInstance
BuilderFactory#getAnnotationTypeOptionalMemberBuilder(AnnotationTypeWriter):::Return an instance of the annotation type member builder for the given class.:::return->AnnotationTypeOptionalMemberBuilder->annotationTypeWriter->getAnnotationTypeElement->writerFactory->getAnnotationTypeOptionalMemberWriter->getInstance
BuilderFactory#getAnnotationTypeRequiredMemberBuilder(AnnotationTypeWriter):::Return an instance of the annotation type member builder for the given class.:::return->AnnotationTypeRequiredMemberBuilder->annotationTypeWriter->getAnnotationTypeElement->writerFactory->getAnnotationTypeRequiredMemberWriter->getInstance
BuilderFactory#getEnumConstantsBuilder(ClassWriter):::Return an instance of the enum constants builder for the given class.:::return->EnumConstantBuilder->classWriter->getTypeElement->writerFactory->getEnumConstantWriter->getInstance
BuilderFactory#getFieldBuilder(ClassWriter):::Return an instance of the field builder for the given class.:::return->FieldBuilder->classWriter->getTypeElement->writerFactory->getFieldWriter->getInstance
BuilderFactory#getPropertyBuilder(ClassWriter):::Return an instance of the property builder for the given class.:::propertyWriter->writerFactory->getPropertyWriter->return->PropertyBuilder->classWriter->getTypeElement->getInstance
BuilderFactory#getConstructorBuilder(ClassWriter):::Return an instance of the constructor builder for the given class.:::return->ConstructorBuilder->classWriter->getTypeElement->writerFactory->getConstructorWriter->getInstance
BuilderFactory#getMemberSummaryBuilder(ClassWriter):::Return an instance of the member summary builder for the given class.:::return->MemberSummaryBuilder->getInstance
BuilderFactory#getMemberSummaryBuilder(AnnotationTypeWriter):::Return an instance of the member summary builder for the given annotation type.:::return->MemberSummaryBuilder->getInstance
BuilderFactory#getSerializedFormBuilder():::Return the builder that builds the serialized form.:::return->SerializedFormBuilder->getInstance
ClassBuilder#getInstance(Context, TypeElement, ClassWriter):::Constructs a new ClassBuilder.:::return->new->ClassBuilder
ClassBuilder#buildClassDoc(Content):::Handles the <TypeElement> tag.:::key->if->else->if->else->writer->configuration->getText->utils->getSimpleName->getHeader->classContentTree->writer->getClassContentHeader->buildClassTree->buildClassInfo->buildMemberSummary->buildMemberDetails->writer->addClassContentTree->writer->addFooter->writer->printDocument->copyDocFiles
ClassBuilder#buildClassTree(Content):::Build the class tree documentation.:::writer->addClassTree
ClassBuilder#buildClassInfo(Content):::Build the class information tree documentation.:::classInfoTree->writer->getClassInfoTreeHeader->buildTypeParamInfo->buildSuperInterfacesInfo->buildImplementedInterfacesInfo->buildSubClassInfo->buildSubInterfacesInfo->buildInterfaceUsageInfo->buildNestedClassInfo->buildFunctionalInterfaceInfo->buildClassSignature->buildDeprecationInfo->buildClassDescription->buildClassTagInfo->classContentTree->writer->getClassInfo->addContent
ClassBuilder#buildTypeParamInfo(Content):::Build the type parameters of this class.:::writer->addTypeParamInfo
ClassBuilder#buildSuperInterfacesInfo(Content):::If this is an interface, list all super interfaces.:::writer->addSuperInterfacesInfo
ClassBuilder#buildImplementedInterfacesInfo(Content):::If this is a class, list all interfaces implemented by this class.:::writer->addImplementedInterfacesInfo
ClassBuilder#buildSubClassInfo(Content):::List all the classes extend this one.:::writer->addSubClassInfo
ClassBuilder#buildSubInterfacesInfo(Content):::List all the interfaces that extend this one.:::writer->addSubInterfacesInfo
ClassBuilder#buildInterfaceUsageInfo(Content):::If this is an interface, list all classes that implement this interface.:::writer->addInterfaceUsageInfo
ClassBuilder#buildFunctionalInterfaceInfo(Content):::If this is an functional interface, display appropriate message.:::writer->addFunctionalInterfaceInfo
ClassBuilder#buildDeprecationInfo(Content):::If this class is deprecated, build the appropriate information.:::writer->addClassDeprecationInfo
ClassBuilder#buildNestedClassInfo(Content):::If this is an inner class or interface, list the enclosing class or interface.:::writer->addNestedClassInfo
ClassBuilder#buildClassSignature(Content):::Build the signature of the current class.:::writer->utils->modifiersToString->addClassSignature
ClassBuilder#buildClassDescription(Content):::Build the class description.:::writer->addClassDescription
ClassBuilder#buildClassTagInfo(Content):::Build the tag information for the current class.:::writer->addClassTagInfo
ClassBuilder#buildMemberSummary(Content):::Build the member summary contents of the page.:::memberSummaryTree->writer->getMemberTreeHeader->builderFactory->getMemberSummaryBuilder->build->classContentTree->writer->getMemberSummaryTree->addContent
ClassBuilder#buildMemberDetails(Content):::Build the member details contents of the page.:::memberDetailsTree->writer->getMemberTreeHeader->buildEnumConstantsDetails->buildPropertyDetails->buildFieldDetails->buildConstructorDetails->buildMethodDetails->classContentTree->writer->getMemberDetailsTree->addContent
ClassBuilder#buildEnumConstantsDetails(Content):::Build the enum constants documentation.:::builderFactory->getEnumConstantsBuilder->build
ClassBuilder#buildFieldDetails(Content):::Build the field documentation.:::builderFactory->getFieldBuilder->build
ClassBuilder#buildPropertyDetails(Content):::Build the property documentation.:::builderFactory->getPropertyBuilder->build
ClassBuilder#buildConstructorDetails(Content):::Build the constructor documentation.:::builderFactory->getConstructorBuilder->build
ClassBuilder#buildMethodDetails(Content):::Build the method documentation.:::builderFactory->getMethodBuilder->build
ConstantsSummaryBuilder#getInstance(Context, ConstantsSummaryWriter):::Construct a ConstantsSummaryBuilder.:::return->new->ConstantsSummaryBuilder
ConstantsSummaryBuilder#buildConstantSummary(Content):::Build the constant summary.:::writer->getHeader->buildContents->buildConstantSummaries->writer->addFooter->writer->printDocument
ConstantsSummaryBuilder#buildContents(Content):::Build the list of packages.:::contentListTree->writer->getContentsHeader->printedPackageHeaders->clear->foreach->if->hasConstantField->hasPrintedPackageIndex->writer->addLinkToPackageContent->writer->addContentsList
ConstantsSummaryBuilder#buildConstantSummaries(Content):::Build the summary for each documented package.:::printedPackageHeaders->clear->summariesTree->writer->getConstantSummaries->foreach->if->hasConstantField->buildPackageHeader->buildClassConstantSummary->writer->addConstantSummaries
ConstantsSummaryBuilder#buildPackageHeader(Content):::Build the header for the given package.:::abbrevPkg->getAbbreviatedPackageElement->if->printedPackageHeaders->contains->writer->addPackageName->printedPackageHeaders->add
ConstantsSummaryBuilder#buildClassConstantSummary(Content):::Build the summary for the current class.:::classes->currentPackage->isUnnamed->utils->getAllClasses->allUnnamedClasses->classConstantTree->writer->getClassConstantHeader->foreach->if->typeElementsWithConstFields->contains->utils->isIncluded->continue->buildConstantMembers->writer->addClassConstant
ConstantsSummaryBuilder#buildConstantMembers(Content):::Build the summary of constant members in the class.:::new->ConstantFieldBuilder->buildMembersSummary
ConstructorBuilder#getInstance(Context, TypeElement, ConstructorWriter):::Construct a new ConstructorBuilder.:::return->new->ConstructorBuilder
ConstructorBuilder#getWriter():::Return the constructor writer for this builder.:::return
ConstructorBuilder#buildConstructorDoc(Content):::Build the constructor documentation.:::if->return->if->hasMembersToDocument->constructorDetailsTree->writer->getConstructorDetailsTreeHeader->lastElement->constructors->constructors->size->get->foreach->constructorDocTree->writer->getConstructorDocTreeHeader->buildSignature->buildDeprecationInfo->buildConstructorComments->buildTagInfo->constructorDetailsTree->writer->getConstructorDoc->addContent->memberDetailsTree->writer->getConstructorDetails->addContent
ConstructorBuilder#buildSignature(Content):::Build the signature.:::constructorDocTree->writer->getSignature->addContent
ConstructorBuilder#buildDeprecationInfo(Content):::Build the deprecation information.:::writer->addDeprecated
ConstructorBuilder#buildConstructorComments(Content):::Build the comments for the constructor:::if->writer->addComments
ConstructorBuilder#buildTagInfo(Content):::Build the tag information.:::writer->addTags
EnumConstantBuilder#getInstance(Context, TypeElement, EnumConstantWriter):::Construct a new EnumConstantsBuilder.:::return->new->EnumConstantBuilder
EnumConstantBuilder#hasMembersToDocument():::Returns whether or not there are members to document.:::return->enumConstants->isEmpty
EnumConstantBuilder#buildEnumConstant(Content):::Build the enum constant documentation.:::if->return->if->hasMembersToDocument->enumConstantsDetailsTree->writer->getEnumConstantsDetailsTreeHeader->lastElement->enumConstants->enumConstants->size->get->foreach->enumConstantsTree->writer->getEnumConstantsTreeHeader->buildSignature->buildDeprecationInfo->buildEnumConstantComments->buildTagInfo->enumConstantsDetailsTree->writer->getEnumConstants->addContent->memberDetailsTree->writer->getEnumConstantsDetails->addContent
EnumConstantBuilder#buildSignature(Content):::Build the signature.:::enumConstantsTree->writer->getSignature->addContent
EnumConstantBuilder#buildDeprecationInfo(Content):::Build the deprecation information.:::writer->addDeprecated
EnumConstantBuilder#buildEnumConstantComments(Content):::Build the comments for the enum constant:::if->writer->addComments
EnumConstantBuilder#buildTagInfo(Content):::Build the tag information.:::writer->addTags
EnumConstantBuilder#getWriter():::Return the enum constant writer for this builder.:::return
FieldBuilder#getInstance(Context, TypeElement, FieldWriter):::Construct a new FieldBuilder.:::return->new->FieldBuilder
FieldBuilder#hasMembersToDocument():::Returns whether or not there are members to document.:::return->fields->isEmpty
FieldBuilder#buildFieldDoc(Content):::Build the field documentation.:::if->return->if->fields->isEmpty->fieldDetailsTree->writer->getFieldDetailsTreeHeader->lastElement->fields->fields->size->get->foreach->fieldDocTree->writer->getFieldDocTreeHeader->buildSignature->buildDeprecationInfo->buildFieldComments->buildTagInfo->fieldDetailsTree->writer->getFieldDoc->addContent->memberDetailsTree->writer->getFieldDetails->addContent
FieldBuilder#buildSignature(Content):::Build the signature.:::fieldDocTree->writer->getSignature->addContent
FieldBuilder#buildDeprecationInfo(Content):::Build the deprecation information.:::writer->addDeprecated
FieldBuilder#buildFieldComments(Content):::Build the comments for the field:::if->writer->addComments
FieldBuilder#buildTagInfo(Content):::Build the tag information.:::writer->addTags
FieldBuilder#getWriter():::Return the field writer for this builder.:::return
MemberSummaryBuilder#getInstance(ClassWriter, Context):::Construct a new MemberSummaryBuilder for a general type.:::builder->classWriter->getTypeElement->new->MemberSummaryBuilder->wf->getWriterFactory->foreach->values->msw->builder->getVisibleMemberTable->hasVisibleMembers->wf->getMemberSummaryWriter->put->return
MemberSummaryBuilder#getInstance(AnnotationTypeWriter, Context):::Construct a new MemberSummaryBuilder for an annotation type.:::builder->annotationTypeWriter->getAnnotationTypeElement->new->MemberSummaryBuilder->wf->getWriterFactory->foreach->values->msw->builder->getVisibleMemberTable->hasVisibleMembers->wf->getMemberSummaryWriter->put->return
MemberSummaryBuilder#getVisibleMemberTable():::Return the specified visible member map.:::return
MemberSummaryBuilder#members(VisibleMemberTable.Kind):::Returns a list of methods that will be documented for the given class:::out->new->TreeSet<>->out->getVisibleMembers->addAll->return
MemberSummaryBuilder#hasMembers(VisibleMemberTable.Kind):::Returns true if there are members of the given kind, false otherwise.:::return->getVisibleMembers->isEmpty
MemberSummaryBuilder#buildEnumConstantsSummary(Content):::Build the summary for the enum constants.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder#buildAnnotationTypeFieldsSummary(Content):::Build the summary for fields.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder#buildAnnotationTypeOptionalMemberSummary(Content):::Build the summary for the optional members.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder#buildAnnotationTypeRequiredMemberSummary(Content):::Build the summary for the optional members.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder#buildFieldsSummary(Content):::Build the summary for the fields.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder#buildPropertiesSummary(Content):::Build the summary for the fields.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder#buildNestedClassesSummary(Content):::Build the summary for the nested classes.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder#buildMethodsSummary(Content):::Build the method summary.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder#buildConstructorsSummary(Content):::Build the constructor summary.:::writer->memberSummaryWriters->get->addSummary
MemberSummaryBuilder.PropertyHelper#getPropertyElement(Element):::Returns the property field documentation belonging to the given member.:::return->classPropertiesMap->get
MemberSummaryBuilder.PropertyHelper#getGetterForProperty(ExecutableElement):::Returns the getter documentation belonging to the given property method.:::return->builder->getVisibleMemberTable->getPropertyGetter
MemberSummaryBuilder.PropertyHelper#getSetterForProperty(ExecutableElement):::Returns the setter documentation belonging to the given property method.:::return->builder->getVisibleMemberTable->getPropertySetter
MethodBuilder#getInstance(Context, TypeElement, MethodWriter):::Construct a new MethodBuilder.:::return->new->MethodBuilder
MethodBuilder#buildMethodDoc(Content):::Build the method documentation.:::if->return->if->hasMembersToDocument->methodDetailsTree->writer->getMethodDetailsTreeHeader->lastElement->methods->methods->size->get->foreach->methodDocTree->writer->getMethodDocTreeHeader->buildSignature->buildDeprecationInfo->buildMethodComments->buildTagInfo->methodDetailsTree->writer->getMethodDoc->addContent->memberDetailsTree->writer->getMethodDetails->addContent
MethodBuilder#buildSignature(Content):::Build the signature.:::methodDocTree->writer->getSignature->addContent
MethodBuilder#buildDeprecationInfo(Content):::Build the deprecation information.:::writer->addDeprecated
MethodBuilder#buildMethodComments(Content):::Build the comments for the method:::if->method->if->utils->getFullBody->isEmpty->docs->DocFinder->new->DocFinder.Input->search->if->isEmpty->containingType->method->getEnclosingElement->asType->writer->addComments
MethodBuilder#buildTagInfo(Content):::Build the tag information.:::writer->addTags
MethodBuilder#getWriter():::Return the method writer for this builder.:::return
ModuleSummaryBuilder#getInstance(Context, ModuleElement, ModuleSummaryWriter):::Construct a new ModuleSummaryBuilder.:::return->new->ModuleSummaryBuilder
ModuleSummaryBuilder#build():::Build the module summary.:::if->return->buildModuleDoc
ModuleSummaryBuilder#buildModuleDoc(Content):::Build the module documentation.:::moduleWriter->mdle->getQualifiedName->toString->getModuleHeader->buildContent->moduleWriter->addModuleFooter->moduleWriter->printDocument
ModuleSummaryBuilder#buildContent(Content):::Build the content for the module doc.:::moduleContentTree->moduleWriter->getContentHeader->buildModuleDescription->buildModuleTags->buildSummary->moduleWriter->addModuleContent
ModuleSummaryBuilder#buildSummary(Content):::Build the module summary.:::summaryContentTree->moduleWriter->getSummaryHeader->buildPackagesSummary->buildModulesSummary->buildServicesSummary->moduleContentTree->moduleWriter->getSummaryTree->addContent
ModuleSummaryBuilder#buildModulesSummary(Content):::Build the modules summary.:::moduleWriter->addModulesSummary
ModuleSummaryBuilder#buildPackagesSummary(Content):::Build the package summary.:::moduleWriter->addPackagesSummary
ModuleSummaryBuilder#buildServicesSummary(Content):::Build the services summary.:::moduleWriter->addServicesSummary
ModuleSummaryBuilder#buildModuleDescription(Content):::Build the description for the module.:::if->moduleWriter->addModuleDescription
ModuleSummaryBuilder#buildModuleTags(Content):::Build the tags of the summary.:::if->moduleWriter->addModuleTags
PackageSummaryBuilder#getInstance(Context, PackageElement, PackageSummaryWriter):::Construct a new PackageSummaryBuilder.:::return->new->PackageSummaryBuilder
PackageSummaryBuilder#build():::Build the package summary.:::if->return->buildPackageDoc
PackageSummaryBuilder#buildPackageDoc(Content):::Build the package documentation.:::packageWriter->utils->getPackageName->getPackageHeader->buildContent->packageWriter->addPackageFooter->packageWriter->printDocument->docFilesHandler->configuration->getWriterFactory->getDocFilesHandler->docFilesHandler->copyDocFiles
PackageSummaryBuilder#buildContent(Content):::Build the content for the package.:::packageContentTree->packageWriter->getContentHeader->buildPackageDescription->buildPackageTags->buildSummary->packageWriter->addPackageContent
PackageSummaryBuilder#buildSummary(Content):::Build the package summary.:::summaryContentTree->packageWriter->getSummaryHeader->buildInterfaceSummary->buildClassSummary->buildEnumSummary->buildExceptionSummary->buildErrorSummary->buildAnnotationTypeSummary->packageContentTree->addContent
PackageSummaryBuilder#buildInterfaceSummary(Content):::Build the summary for the interfaces in this package.:::ilist->utils->isSpecified->utils->utils->getInterfaces->getTypeElementsAsSortedSet->interfaces->interfaces->utils->filterOutPrivateClasses->if->interfaces->isEmpty->packageWriter->addInterfaceSummary
PackageSummaryBuilder#buildClassSummary(Content):::Build the summary for the classes in this package.:::clist->utils->isSpecified->utils->utils->getOrdinaryClasses->getTypeElementsAsSortedSet->ordinaryClasses->classes->utils->filterOutPrivateClasses->if->classes->isEmpty->packageWriter->addClassSummary
PackageSummaryBuilder#buildEnumSummary(Content):::Build the summary for the enums in this package.:::elist->utils->isSpecified->utils->utils->getEnums->getTypeElementsAsSortedSet->enums->enums->utils->filterOutPrivateClasses->if->enums->isEmpty->packageWriter->addEnumSummary
PackageSummaryBuilder#buildExceptionSummary(Content):::Build the summary for the exceptions in this package.:::iexceptions->utils->isSpecified->utils->utils->getExceptions->getTypeElementsAsSortedSet->exceptions->exceptions->utils->filterOutPrivateClasses->if->exceptions->isEmpty->packageWriter->addExceptionSummary
PackageSummaryBuilder#buildErrorSummary(Content):::Build the summary for the errors in this package.:::ierrors->utils->isSpecified->utils->utils->getErrors->getTypeElementsAsSortedSet->errors->errors->utils->filterOutPrivateClasses->if->errors->isEmpty->packageWriter->addErrorSummary
PackageSummaryBuilder#buildAnnotationTypeSummary(Content):::Build the summary for the annotation type in this package.:::iannotationTypes->utils->isSpecified->utils->utils->getAnnotationTypes->getTypeElementsAsSortedSet->annotationTypes->annotationTypes->utils->filterOutPrivateClasses->if->annotationTypes->isEmpty->packageWriter->addAnnotationTypeSummary
PackageSummaryBuilder#buildPackageDescription(Content):::Build the description of the summary.:::if->return->packageWriter->addPackageDescription
PackageSummaryBuilder#buildPackageTags(Content):::Build the tags of the summary.:::if->return->packageWriter->addPackageTags
PropertyBuilder#getInstance(Context, TypeElement, PropertyWriter):::Construct a new PropertyBuilder.:::return->new->PropertyBuilder
PropertyBuilder#hasMembersToDocument():::Returns whether or not there are members to document.:::return->properties->isEmpty
PropertyBuilder#buildPropertyDoc(Content):::Build the property documentation.:::if->return->if->hasMembersToDocument->propertyDetailsTree->writer->getPropertyDetailsTreeHeader->lastElement->properties->properties->size->get->foreach->propertyDocTree->writer->getPropertyDocTreeHeader->buildSignature->buildPropertyComments->buildTagInfo->propertyDetailsTree->writer->getPropertyDoc->addContent->memberDetailsTree->writer->getPropertyDetails->addContent
PropertyBuilder#buildSignature(Content):::Build the signature.:::propertyDocTree->writer->getSignature->addContent
PropertyBuilder#buildDeprecationInfo(Content):::Build the deprecation information.:::writer->addDeprecated
PropertyBuilder#buildPropertyComments(Content):::Build the comments for the property:::if->writer->addComments
PropertyBuilder#buildTagInfo(Content):::Build the tag information.:::writer->addTags
PropertyBuilder#getWriter():::Return the property writer for this builder.:::return
SerializedFormBuilder#getInstance(Context):::Construct a new SerializedFormBuilder.:::return->new->SerializedFormBuilder
SerializedFormBuilder#build():::Build the serialized form.:::rootclasses->utils->makeGeneralPurposeComparator->new->TreeSet<>->rootclasses->configuration->getIncludedTypeElements->addAll->if->serialClassFoundToDocument->return->configuration->getWriterFactory->getSerializedFormWriter->if->return->buildSerializedForm
SerializedFormBuilder#buildSerializedForm(Content):::Build the serialized form.:::writer->configuration->getText->getHeader->buildSerializedFormSummaries->writer->addFooter->writer->printDocument
SerializedFormBuilder#buildSerializedFormSummaries(Content):::Build the serialized form summaries.:::serializedSummariesTree->writer->getSerializedSummariesHeader->foreach->buildPackageSerializedForm->serializedTree->writer->getSerializedContent->addContent
SerializedFormBuilder#buildPackageSerializedForm(Content):::Build the package serialized form for the current package being processed.:::packageSerializedTree->writer->getPackageSerializedHeader->classes->utils->getAllClassesUnfiltered->if->classes->isEmpty->return->if->serialInclude->return->if->serialClassFoundToDocument->return->buildPackageHeader->buildClassSerializedForm->writer->addPackageSerializedTree
SerializedFormBuilder#buildPackageHeader(Content):::Build the package header.:::packageSerializedTree->writer->utils->getPackageName->getPackageHeader->addContent
SerializedFormBuilder#buildClassSerializedForm(Content):::Build the class serialized form.:::classSerializedTree->writer->getClassSerializedHeader->typeElements->utils->getAllClassesUnfiltered->foreach->writer->getSerialFieldWriter->writer->getSerialMethodWriter->if->utils->isClass->utils->isSerializable->if->serialClassInclude->continue->classTree->writer->getClassHeader->buildSerialUIDInfo->buildClassContent->classSerializedTree->addContent->packageSerializedTree->addContent
SerializedFormBuilder#buildSerialUIDInfo(Content):::Build the serial UID information for the given class.:::serialUidTree->writer->getSerialUIDInfoHeader->foreach->utils->getFieldsUnfiltered->field->if->field->getSimpleName->toString->compareTo->field->getConstantValue->writer->utils->constantValueExpresion->addSerialUIDInfo->break->classTree->addContent
SerializedFormBuilder#buildClassContent(Content):::Build the summaries for the methods and fields.:::classContentTree->writer->getClassContentHeader->buildSerializableMethods->buildFieldHeader->buildSerializableFields->classTree->addContent
SerializedFormBuilder#buildSerializableMethods(Content):::Build the summaries for the methods that belong to the given class.:::serializableMethodTree->methodWriter->getSerializableMethodsHeader->members->utils->serializationMethods->if->members->isEmpty->foreach->methodsContentTree->methodWriter->members->last->getMethodsContentHeader->buildMethodSubHeader->buildDeprecatedMethodInfo->buildMethodInfo->serializableMethodTree->addContent->if->utils->serializationMethods->isEmpty->classContentTree->methodWriter->configuration->getText->getSerializableMethods->addContent->if->utils->isSerializable->utils->isExternalizable->if->utils->serializationMethods->isEmpty->noCustomizationMsg->methodWriter->configuration->getText->getNoCustomizationMsg->classContentTree->methodWriter->configuration->getText->getSerializableMethods->addContent
SerializedFormBuilder#buildMethodSubHeader(Content):::Build the method sub header.:::methodWriter->addMemberHeader
SerializedFormBuilder#buildDeprecatedMethodInfo(Content):::Build the deprecated method description.:::methodWriter->addDeprecatedMemberInfo
SerializedFormBuilder#buildMethodInfo(Content):::Build the information for the method.:::if->return->buildMethodDescription->buildMethodTags
SerializedFormBuilder#buildMethodDescription(Content):::Build method description.:::methodWriter->addMemberDescription
SerializedFormBuilder#buildMethodTags(Content):::Build the method tags.:::methodWriter->addMemberTags->method->if->method->getSimpleName->toString->compareTo->utils->getSerialDataTrees->isEmpty->if->encl->method->getEnclosingElement->messages->encl->getQualifiedName->toString->method->getSimpleName->toString->warning
SerializedFormBuilder#buildFieldHeader(Content):::Build the field header.:::if->utils->serializableFields->isEmpty->buildFieldSerializationOverview
SerializedFormBuilder#buildFieldSerializationOverview(TypeElement, Content):::Build the serialization overview for the given class.:::if->utils->definesSerializableFields->ve->utils->serializableFields->first->if->fieldWriter->shouldPrintOverview->serializableFieldsTree->fieldWriter->getSerializableFieldsHeader->fieldsOverviewContentTree->fieldWriter->getFieldsContentHeader->fieldWriter->addMemberDeprecatedInfo->if->fieldWriter->addMemberDescription->fieldWriter->addMemberTags->serializableFieldsTree->addContent->classContentTree->fieldWriter->configuration->getText->getSerializableFields->addContent
SerializedFormBuilder#buildSerializableFields(Content):::Build the summaries for the fields that belong to the given class.:::members->utils->serializableFields->if->members->isEmpty->serializableFieldsTree->fieldWriter->getSerializableFieldsHeader->foreach->if->utils->definesSerializableFields->fieldsContentTree->fieldWriter->members->last->getFieldsContentHeader->buildFieldSubHeader->buildFieldDeprecationInfo->buildFieldInfo->serializableFieldsTree->addContent->else->buildSerialFieldTagsInfo->classContentTree->fieldWriter->configuration->getText->getSerializableFields->addContent
SerializedFormBuilder#buildFieldSubHeader(Content):::Build the field sub header.:::if->utils->definesSerializableFields->field->fieldWriter->field->asType->utils->getSimpleName->addMemberHeader
SerializedFormBuilder#buildFieldDeprecationInfo(Content):::Build the field deprecation information.:::if->utils->definesSerializableFields->fieldWriter->addMemberDeprecatedInfo
SerializedFormBuilder#buildSerialFieldTagsInfo(Content):::Build the serial field tags information.:::if->return->field->tags->utils->makeSerialFieldTreeComparator->new->TreeSet<>->foreach->utils->getSerialFieldTrees->st->tags->add->ch->utils->getCommentHelper->foreach->if->tag->getName->tag->getType->continue->fieldsContentTree->fieldWriter->tag->tags->last->equals->getFieldsContentHeader->te->ch->getReferencedClass->fieldType->ch->getReferencedMemberName->if->utils->te->asType->isPrimitive->utils->te->asType->getTypeName->refSignature->ch->getReferencedSignature->if->refSignature->endsWith->fieldWriter->tag->getName->getName->toString->addMemberHeader->fieldWriter->addMemberDescription->serializableFieldsTree->addContent
SerializedFormBuilder#buildFieldInfo(Content):::Build the field information.:::if->return->field->te->utils->getEnclosingTypeElement->if->utils->getSerialTrees->isEmpty->messages->utils->getFullyQualifiedName->utils->getSimpleName->warning->fieldWriter->addMemberDescription->fieldWriter->addMemberTags
SerializedFormBuilder#serialInclude(Utils, Element):::Returns true if the given Element should be included in the serialized form.:::if->return->return->utils->isClass->serialClassInclude->serialDocInclude
