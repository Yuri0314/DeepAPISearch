RegistryImpl#initRegistryFilter():::Initialize the registryFilter from the security properties or system property; if any:::filter->props->System->getProperty->if->Security->getProperty->if->SharedSecrets->getJavaObjectInputFilterAccess->createFilter2->regLog->Log->getLog->if->regLog->isLoggable->regLog->log->return
RegistryImpl#setup(UnicastServerRef)::: registry impl setup:::uref->exportObject
RegistryImpl#lookup(String):::Returns the remote object for specified name in the registry.:::synchronized->obj->bindings->get->if->throw->new->NotBoundException->return
RegistryImpl#bind(String, Remote):::Binds the name to the specified remote object.:::synchronized->curr->bindings->get->if->throw->new->AlreadyBoundException->bindings->put
RegistryImpl#unbind(String):::Unbind the name.:::synchronized->obj->bindings->get->if->throw->new->NotBoundException->bindings->remove
RegistryImpl#rebind(String, Remote):::Rebind the name to a new object, replaces any existing binding.:::bindings->put
RegistryImpl#list():::Returns an enumeration of the names in the registry.:::names->synchronized->i->bindings->size->new->StringArr->enum_->bindings->keys->while->enum_->nextElement->return
RegistryImpl#checkAccess(String):::Check that the caller has access to perform indicated operation:::try->clientHostName->getClientHost->clientHost->try->new->java.security.PrivilegedExceptionAction<InetAddress>->doPrivileged->catch->throw->pae->getException->finally->if->allowedAccessCache->get->if->clientHost->isAnyLocalAddress->throw->new->AccessException->try->finalClientHost->new->java.security.PrivilegedExceptionAction<Void>->doPrivileged->catch->throw->new->AccessException->finally->catch->throw->new->AccessException->finally
RegistryImpl#getID()::: registry impl get d:::return
RegistryImpl#getTextResource(String):::Retrieves text resources from the locale-specific properties file.:::if->try->ResourceBundle->getBundle->catch->finally->if->return->val->try->resources->getString->catch->finally->if->return->else->return
RegistryImpl#pathToURLs(String):::Convert class path specification into an array of file URLs:::paths->new->ArrayList<>->foreach->path->split->p->Paths->get->try->p->toRealPath->catch->p->toAbsolutePath->finally->try->paths->p->toUri->toURL->add->catch->finally->return->paths->new->URLArr->toArray
RegistryImpl#registryFilter(ObjectInputFilter.FilterInfo):::ObjectInputFilter to filter Registry input objects:::if->status->registryFilter->checkInput->if->return->if->filterInfo->depth->return->clazz->filterInfo->serialClass->if->if->clazz->isArray->return->filterInfo->arrayLength->filterInfo->arrayLength->if->isAssignableFrom->isAssignableFrom->isAssignableFrom->isAssignableFrom->isAssignableFrom->isAssignableFrom->isAssignableFrom->isAssignableFrom->return->else->return->return
RegistryImpl#createRegistry(int):::Return a new RegistryImpl on the requested port and export it to serve registry requests:::if->System->getSecurityManager->System->new->SecurityManager->setSecurityManager->envcp->System->getProperty->if->urls->pathToURLs->cl->new->URLClassLoader->registerCodebaseLoader->Thread->currentThread->setContextClassLoader->registryImpl->try->AccessController->new->PrivilegedExceptionAction<RegistryImpl>->getAccessControlContext->doPrivileged->catch->throw->ex->getException->finally->return
RegistryImpl#main(String[]):::Main program to start a registry:::try->regPort->Integer->parseInt->createRegistry->while->try->Thread->sleep->catch->finally->catch->MessageFormat->getTextResource->format->println->MessageFormat->getTextResource->format->println->e->printStackTrace->finally->System->exit
RegistryImpl#getAccessControlContext(int):::Generates an AccessControlContext with minimal permissions:::perms->AccessController->new->java.security.PrivilegedAction<PermissionCollection>->doPrivileged->perms->new->SocketPermission->add->perms->new->SocketPermission->add->perms->new->RuntimePermission->add->perms->new->RuntimePermission->add->perms->new->FilePermission->add->pd->new->CodeSource->new->ProtectionDomain->return->new->ProtectionDomainArr->new->AccessControlContext
RegistryImpl_Skel#getOperations()::: registry impl_ skel get operations:::return->operations->clone
RegistryImpl_Skel#dispatch(java.rmi.Remote, java.rmi.server.RemoteCall, int, long)::: registry impl_ skel dispatch:::if->if->else->if->else->if->else->if->else->if->else->throw->new->java.rmi.UnmarshalException->else->if->throw->new->java.rmi.server.SkeletonMismatchException->server->call->switch->RegistryImpl->checkAccess->$param_String_1->$param_Remote_2->try->in->call->getInputStream->SharedSecrets->getJavaObjectInputStreamReadString->readString->in->readObject->catch->call->discardPendingRefs->throw->new->java.rmi.UnmarshalException->finally->call->releaseInputStream->server->bind->try->call->getResultStream->catch->throw->new->java.rmi.MarshalException->finally->break->call->releaseInputStream->$result->server->list->try->out->call->getResultStream->out->writeObject->catch->throw->new->java.rmi.MarshalException->finally->break->$param_String_1->try->in->call->getInputStream->SharedSecrets->getJavaObjectInputStreamReadString->readString->catch->call->discardPendingRefs->throw->new->java.rmi.UnmarshalException->finally->call->releaseInputStream->$result->server->lookup->try->out->call->getResultStream->out->writeObject->catch->throw->new->java.rmi.MarshalException->finally->break->RegistryImpl->checkAccess->$param_String_1->$param_Remote_2->try->in->call->getInputStream->SharedSecrets->getJavaObjectInputStreamReadString->readString->in->readObject->catch->call->discardPendingRefs->throw->new->java.rmi.UnmarshalException->finally->call->releaseInputStream->server->rebind->try->call->getResultStream->catch->throw->new->java.rmi.MarshalException->finally->break->RegistryImpl->checkAccess->$param_String_1->try->in->call->getInputStream->SharedSecrets->getJavaObjectInputStreamReadString->readString->catch->call->discardPendingRefs->throw->new->java.rmi.UnmarshalException->finally->call->releaseInputStream->server->unbind->try->call->getResultStream->catch->throw->new->java.rmi.MarshalException->finally->break->throw->new->java.rmi.UnmarshalException
RegistryImpl_Stub#bind(java.lang.String, java.rmi.Remote)::: registry impl_ stub bind:::try->call->ref->newCall->try->out->call->getOutputStream->out->writeObject->out->writeObject->catch->throw->new->java.rmi.MarshalException->finally->ref->invoke->ref->done->catch->throw->throw->throw->throw->new->java.rmi.UnexpectedException->finally
RegistryImpl_Stub#list()::: registry impl_ stub list:::try->call->ref->newCall->ref->invoke->$result->try->in->call->getInputStream->in->readObject->catch->call->discardPendingRefs->throw->new->java.rmi.UnmarshalException->finally->ref->done->return->catch->throw->throw->throw->new->java.rmi.UnexpectedException->finally
RegistryImpl_Stub#lookup(java.lang.String)::: registry impl_ stub lookup:::try->call->ref->newCall->try->out->call->getOutputStream->out->writeObject->catch->throw->new->java.rmi.MarshalException->finally->ref->invoke->$result->try->in->call->getInputStream->in->readObject->catch->call->discardPendingRefs->throw->new->java.rmi.UnmarshalException->finally->ref->done->return->catch->throw->throw->throw->throw->new->java.rmi.UnexpectedException->finally
RegistryImpl_Stub#rebind(java.lang.String, java.rmi.Remote)::: registry impl_ stub rebind:::try->call->ref->newCall->try->out->call->getOutputStream->out->writeObject->out->writeObject->catch->throw->new->java.rmi.MarshalException->finally->ref->invoke->ref->done->catch->throw->throw->throw->new->java.rmi.UnexpectedException->finally
RegistryImpl_Stub#unbind(java.lang.String)::: registry impl_ stub unbind:::try->call->ref->newCall->try->out->call->getOutputStream->out->writeObject->catch->throw->new->java.rmi.MarshalException->finally->ref->invoke->ref->done->catch->throw->throw->throw->throw->new->java.rmi.UnexpectedException->finally
