jdk.internal.util.xml.impl.Attrs#setLength(char)->void:::Sets up the number of attributes and ensure the capacity of the attribute string array.
jdk.internal.util.xml.impl.Attrs#getLength()->int:::Return the number of attributes in the list
jdk.internal.util.xml.impl.Attrs#getURI(int)->String:::Look up an attribute's Namespace URI by index.
jdk.internal.util.xml.impl.Attrs#getLocalName(int)->String:::Look up an attribute's local name by index.
jdk.internal.util.xml.impl.Attrs#getQName(int)->String:::Look up an attribute's XML 1.0 qualified name by index.
jdk.internal.util.xml.impl.Attrs#getType(int)->String:::Look up an attribute's type by index
jdk.internal.util.xml.impl.Attrs#getValue(int)->String:::Look up an attribute's value by index
jdk.internal.util.xml.impl.Attrs#getIndex(String, String)->int:::Look up the index of an attribute by Namespace name.
jdk.internal.util.xml.impl.Attrs#getIndexNullNS(String, String)->int::: attrs get index null s
jdk.internal.util.xml.impl.Attrs#getIndex(String)->int:::Look up the index of an attribute by XML 1.0 qualified name.
jdk.internal.util.xml.impl.Attrs#getType(String, String)->String:::Look up an attribute's type by Namespace name
jdk.internal.util.xml.impl.Attrs#getType(String)->String:::Look up an attribute's type by XML 1.0 qualified name
jdk.internal.util.xml.impl.Attrs#getValue(String, String)->String:::Look up an attribute's value by Namespace name
jdk.internal.util.xml.impl.Attrs#getValue(String)->String:::Look up an attribute's value by XML 1.0 qualified name
jdk.internal.util.xml.impl.Attrs#isDeclared(int)->boolean:::Returns false unless the attribute was declared in the DTD
jdk.internal.util.xml.impl.Attrs#isDeclared(String)->boolean:::Returns false unless the attribute was declared in the DTD
jdk.internal.util.xml.impl.Attrs#isDeclared(String, String)->boolean:::Returns false unless the attribute was declared in the DTD
jdk.internal.util.xml.impl.Attrs#isSpecified(int)->boolean:::Returns true unless the attribute value was provided by DTD defaulting.
jdk.internal.util.xml.impl.Attrs#isSpecified(String, String)->boolean:::Returns true unless the attribute value was provided by DTD defaulting
jdk.internal.util.xml.impl.Attrs#isSpecified(String)->boolean:::Returns true unless the attribute value was provided by DTD defaulting.
jdk.internal.util.xml.impl.Pair#qname()->String:::Creates a qualified name string from qualified name.
jdk.internal.util.xml.impl.Pair#local()->String:::Creates a local name string from qualified name.
jdk.internal.util.xml.impl.Pair#pref()->String:::Creates a prefix string from qualified name.
jdk.internal.util.xml.impl.Pair#eqpref(char[])->boolean:::Compares two qualified name prefixes.
jdk.internal.util.xml.impl.Pair#eqname(char[])->boolean:::Compares two qualified names.
jdk.internal.util.xml.impl.Parser#init()->void:::Initializes parser's internals
jdk.internal.util.xml.impl.Parser#cleanup()->void:::Cleans up parser internal resources.
jdk.internal.util.xml.impl.Parser#step()->int:::Processes a portion of document
jdk.internal.util.xml.impl.Parser#name(boolean)->String:::Reads a xml name
jdk.internal.util.xml.impl.Parser#qname(boolean)->char[]:::Reads a qualified xml name
jdk.internal.util.xml.impl.Parser#eqstr(char)->String:::Reads an attribute value
jdk.internal.util.xml.impl.Parser#wsskip()->char:::Skips xml white space characters
jdk.internal.util.xml.impl.Parser#docType(String, String, String)->void:::Reports document type.
jdk.internal.util.xml.impl.Parser#startInternalSub()->void:::Reports the start of DTD internal subset.
jdk.internal.util.xml.impl.Parser#comm(char[], int)->void:::Reports a comment.
jdk.internal.util.xml.impl.Parser#pi(String, String)->void:::Reports a processing instruction.
jdk.internal.util.xml.impl.Parser#newPrefix()->void:::Reports new namespace prefix
jdk.internal.util.xml.impl.Parser#skippedEnt(String)->void:::Reports skipped entity name.
jdk.internal.util.xml.impl.Parser#resolveEnt(String, String, String)->InputSource:::Returns an InputSource for specified entity or null.
jdk.internal.util.xml.impl.Parser#notDecl(String, String, String)->void:::Reports notation declaration.
jdk.internal.util.xml.impl.Parser#unparsedEntDecl(String, String, String, String)->void:::Reports unparsed entity name.
jdk.internal.util.xml.impl.Parser#panic(String)->void:::Notifies the handler about fatal parsing error.
jdk.internal.util.xml.impl.Parser#bflash()->void:::Reports characters and empties the parser's buffer
jdk.internal.util.xml.impl.Parser#bflash_ws()->void:::Reports white space characters and empties the parser's buffer
jdk.internal.util.xml.impl.Parser#setinp(InputSource)->void:::Sets up a new input source on the top of the input stack
jdk.internal.util.xml.impl.Parser#push(Input)->void:::Sets up current input on the top of the input stack.
jdk.internal.util.xml.impl.Parser#pop()->void:::Restores previous input on the top of the input stack.
jdk.internal.util.xml.impl.Parser#chtyp(char)->char:::Maps a character to its type
jdk.internal.util.xml.impl.Parser#getch()->char:::Retrives the next character in the document.
jdk.internal.util.xml.impl.Parser#bkch()->void:::Puts back the last read character
jdk.internal.util.xml.impl.Parser#setch(char)->void:::Sets the current character.
jdk.internal.util.xml.impl.Parser#find(Pair, char[])->Pair:::Finds a pair in the pair chain by a qualified name.
jdk.internal.util.xml.impl.Parser#pair(Pair)->Pair:::Provedes an instance of a pair.
jdk.internal.util.xml.impl.Parser#del(Pair)->Pair:::Deletes an instance of a pair.
jdk.internal.util.xml.impl.ParserSAX#getContentHandler()->ContentHandler:::Return the current content handler.
jdk.internal.util.xml.impl.ParserSAX#setContentHandler(ContentHandler)->void:::Allow an application to register a content event handler
jdk.internal.util.xml.impl.ParserSAX#getDTDHandler()->DTDHandler:::Return the current DTD handler.
jdk.internal.util.xml.impl.ParserSAX#setDTDHandler(DTDHandler)->void:::Allow an application to register a DTD event handler
jdk.internal.util.xml.impl.ParserSAX#getErrorHandler()->ErrorHandler:::Return the current error handler.
jdk.internal.util.xml.impl.ParserSAX#setErrorHandler(ErrorHandler)->void:::Allow an application to register an error event handler
jdk.internal.util.xml.impl.ParserSAX#getEntityResolver()->EntityResolver:::Return the current entity resolver.
jdk.internal.util.xml.impl.ParserSAX#setEntityResolver(EntityResolver)->void:::Allow an application to register an entity resolver
jdk.internal.util.xml.impl.ParserSAX#getPublicId()->String:::Return the public identifier for the current document event
jdk.internal.util.xml.impl.ParserSAX#getSystemId()->String:::Return the system identifier for the current document event
jdk.internal.util.xml.impl.ParserSAX#getLineNumber()->int:::Return the line number where the current document event ends.
jdk.internal.util.xml.impl.ParserSAX#getColumnNumber()->int:::Return the column number where the current document event ends.
jdk.internal.util.xml.impl.ParserSAX#parse(String)->void:::Parse an XML document from a system identifier (URI)
jdk.internal.util.xml.impl.ParserSAX#parse(InputSource)->void:::Parse an XML document
jdk.internal.util.xml.impl.ParserSAX#parse(InputStream, DefaultHandler)->void:::Parse the content of the given java.io.InputStream instance as XML using the specified org.xml.sax.helpers.DefaultHandler.
jdk.internal.util.xml.impl.ParserSAX#parse(InputSource, DefaultHandler)->void:::Parse the content given org.xml.sax.InputSource as XML using the specified org.xml.sax.helpers.DefaultHandler.
jdk.internal.util.xml.impl.ParserSAX#docType(String, String, String)->void:::Reports document type.
jdk.internal.util.xml.impl.ParserSAX#startInternalSub()->void:::Reports the start of DTD internal subset.
jdk.internal.util.xml.impl.ParserSAX#comm(char[], int)->void:::Reports a comment.
jdk.internal.util.xml.impl.ParserSAX#pi(String, String)->void:::Reports a processing instruction.
jdk.internal.util.xml.impl.ParserSAX#newPrefix()->void:::Reports new namespace prefix
jdk.internal.util.xml.impl.ParserSAX#skippedEnt(String)->void:::Reports skipped entity name.
jdk.internal.util.xml.impl.ParserSAX#resolveEnt(String, String, String)->InputSource:::Returns an InputSource for specified entity or null.
jdk.internal.util.xml.impl.ParserSAX#notDecl(String, String, String)->void:::Reports notation declaration.
jdk.internal.util.xml.impl.ParserSAX#unparsedEntDecl(String, String, String, String)->void:::Reports unparsed entity name.
jdk.internal.util.xml.impl.ParserSAX#panic(String)->void:::Notifies the handler about fatal parsing error.
jdk.internal.util.xml.impl.ParserSAX#bflash()->void:::Reports characters and empties the parser's buffer
jdk.internal.util.xml.impl.ParserSAX#bflash_ws()->void:::Reports white space characters and empties the parser's buffer
jdk.internal.util.xml.impl.ParserSAX#getFeature(String)->boolean::: parser x get feature
jdk.internal.util.xml.impl.ParserSAX#setFeature(String, boolean)->void::: parser x set feature
jdk.internal.util.xml.impl.ParserSAX#getProperty(String)->Object::: parser x get property
jdk.internal.util.xml.impl.ParserSAX#setProperty(String, Object)->void::: parser x set property
jdk.internal.util.xml.impl.ReaderUTF16#read(char[], int, int)->int:::Reads characters into a portion of an array.
jdk.internal.util.xml.impl.ReaderUTF16#read()->int:::Reads a single character.
jdk.internal.util.xml.impl.ReaderUTF16#close()->void:::Closes the stream.
jdk.internal.util.xml.impl.ReaderUTF8#read(char[], int, int)->int:::Reads characters into a portion of an array.
jdk.internal.util.xml.impl.ReaderUTF8#read()->int:::Reads a single character.
jdk.internal.util.xml.impl.ReaderUTF8#close()->void:::Closes the stream.
jdk.internal.util.xml.impl.SAXParserImpl#getXMLReader()->XMLReader:::Returns the org.xml.sax.XMLReader that is encapsulated by the implementation of this class.
jdk.internal.util.xml.impl.SAXParserImpl#isNamespaceAware()->boolean:::Indicates whether or not this parser is configured to understand namespaces.
jdk.internal.util.xml.impl.SAXParserImpl#isValidating()->boolean:::Indicates whether or not this parser is configured to validate XML documents.
jdk.internal.util.xml.impl.SAXParserImpl#parse(InputStream, DefaultHandler)->void:::Parse the content of the given java.io.InputStream instance as XML using the specified org.xml.sax.helpers.DefaultHandler.
jdk.internal.util.xml.impl.SAXParserImpl#parse(InputSource, DefaultHandler)->void:::Parse the content given org.xml.sax.InputSource as XML using the specified org.xml.sax.helpers.DefaultHandler.
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeStartDocument()->void:::Write the XML Declaration
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeStartDocument(String)->void:::Write the XML Declaration
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeStartDocument(String, String)->void:::Write the XML Declaration
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeStartDocument(String, String, String)->void:::Write the XML Declaration
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeDTD(String)->void:::Write a DTD section
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeStartElement(String)->void:::Writes a start tag to the output.
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeEmptyElement(String)->void:::Writes an empty element tag to the output
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeAttribute(String, String)->void:::Writes an attribute to the output stream without a prefix.
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeEndDocument()->void::: stream writer impl write end document
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeEndElement()->void::: stream writer impl write end element
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeCData(String)->void::: stream writer impl write data
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeCharacters(String)->void::: stream writer impl write characters
jdk.internal.util.xml.impl.XMLStreamWriterImpl#writeCharacters(char[], int, int)->void::: stream writer impl write characters
jdk.internal.util.xml.impl.XMLStreamWriterImpl#close()->void:::Close this XMLStreamWriter by closing underlying writer.
jdk.internal.util.xml.impl.XMLStreamWriterImpl#flush()->void:::Flush this XMLStreamWriter by flushing underlying writer.
jdk.internal.util.xml.impl.XMLStreamWriterImpl#setDoIndent(boolean)->void:::Set the flag to indicate if the writer should add line separator
jdk.internal.util.xml.impl.XMLStreamWriterImpl.Element#getParent()->Element::: element get parent
jdk.internal.util.xml.impl.XMLStreamWriterImpl.Element#getLocalName()->String::: element get local name
jdk.internal.util.xml.impl.XMLStreamWriterImpl.Element#getState()->int:::get the state of the element
jdk.internal.util.xml.impl.XMLStreamWriterImpl.Element#setState(int)->void:::Set the state of the element
jdk.internal.util.xml.impl.XMLStreamWriterImpl.Element#isEmpty()->boolean::: element is empty
jdk.internal.util.xml.impl.XMLWriter#canEncode(char)->boolean::: writer can encode
jdk.internal.util.xml.impl.XMLWriter#write(String)->void::: writer write
jdk.internal.util.xml.impl.XMLWriter#write(String, int, int)->void::: writer write
jdk.internal.util.xml.impl.XMLWriter#write(char[], int, int)->void::: writer write
jdk.internal.util.xml.impl.XMLWriter#write(int)->void::: writer write
jdk.internal.util.xml.impl.XMLWriter#flush()->void::: writer flush
jdk.internal.util.xml.impl.XMLWriter#close()->void::: writer close
