java.beans.AppletInitializer#initialize(Applet, BeanContext)->void::: If passed to the appropriate variant of java.beans.Beans.instantiate this method will be called in order to associate the newly instantiated Applet (JavaBean) with its AppletContext, AppletStub, and Container
java.beans.AppletInitializer#activate(Applet)->void::: Activate, and/or mark Applet active
java.beans.BeanDescriptor#getBeanClass()->Class:::Gets the bean's Class object.
java.beans.BeanDescriptor#getCustomizerClass()->Class:::Gets the Class object for the bean's customizer.
java.beans.BeanDescriptor#appendTo(StringBuilder)->void::: bean descriptor append to
java.beans.BeanInfo#getBeanDescriptor()->BeanDescriptor:::Returns the bean descriptor that provides overall information about the bean, such as its display name or its customizer.
java.beans.BeanInfo#getEventSetDescriptors()->EventSetDescriptor[]:::Returns the event descriptors of the bean that define the types of events fired by this bean.
java.beans.BeanInfo#getDefaultEventIndex()->int:::A bean may have a default event typically applied when this bean is used.
java.beans.BeanInfo#getPropertyDescriptors()->PropertyDescriptor[]:::Returns descriptors for all properties of the bean
java.beans.BeanInfo#getDefaultPropertyIndex()->int:::A bean may have a default property commonly updated when this bean is customized.
java.beans.BeanInfo#getMethodDescriptors()->MethodDescriptor[]:::Returns the method descriptors of the bean that define the externally visible methods supported by this bean.
java.beans.BeanInfo#getAdditionalBeanInfo()->BeanInfo[]:::This method enables the current BeanInfo object to return an arbitrary collection of other BeanInfo objects that provide additional information about the current bean
java.beans.BeanInfo#getIcon(int)->Image:::Returns an image that can be used to represent the bean in toolboxes or toolbars
java.beans.Beans#instantiate(ClassLoader, String)->Object::: beans instantiate
java.beans.Beans#instantiate(ClassLoader, String, BeanContext)->Object::: Instantiate a JavaBean
java.beans.Beans#instantiate(ClassLoader, String, BeanContext, AppletInitializer)->Object:::Instantiate a bean
java.beans.Beans#getInstanceOf(Object, Class)->Object:::From a given bean, obtain an object representing a specified type view of that source object
java.beans.Beans#isInstanceOf(Object, Class)->boolean:::Check if a bean can be viewed as a given target type
java.beans.Beans#isDesignTime()->boolean:::Test if we are in design-mode.
java.beans.Beans#isGuiAvailable()->boolean:::Determines whether beans can assume a GUI is available.
java.beans.Beans#setDesignTime(boolean)->void::: beans set design time
java.beans.Beans#setGuiAvailable(boolean)->void::: beans set gui available
java.beans.ObjectInputStreamWithLoader#resolveClass(ObjectStreamClass)->Class:::Use the given ClassLoader rather than using the system class
java.beans.BeansAppletContext#getAudioClip(URL)->AudioClip::: beans applet context get audio clip
java.beans.BeansAppletContext#getImage(URL)->Image::: beans applet context get image
java.beans.BeansAppletContext#getApplet(String)->Applet::: beans applet context get applet
java.beans.BeansAppletContext#getApplets()->Enumeration::: beans applet context get applets
java.beans.BeansAppletContext#showDocument(URL)->void::: beans applet context show document
java.beans.BeansAppletContext#showDocument(URL, String)->void::: beans applet context show document
java.beans.BeansAppletContext#showStatus(String)->void::: beans applet context show status
java.beans.BeansAppletContext#setStream(String, InputStream)->void::: beans applet context set stream
java.beans.BeansAppletContext#getStream(String)->InputStream::: beans applet context get stream
java.beans.BeansAppletContext#getStreamKeys()->Iterator::: beans applet context get stream keys
java.beans.BeansAppletStub#isActive()->boolean::: beans applet stub is active
java.beans.BeansAppletStub#getDocumentBase()->URL::: beans applet stub get document base
java.beans.BeansAppletStub#getCodeBase()->URL::: beans applet stub get code base
java.beans.BeansAppletStub#getParameter(String)->String::: beans applet stub get parameter
java.beans.BeansAppletStub#getAppletContext()->AppletContext::: beans applet stub get applet context
java.beans.BeansAppletStub#appletResize(int, int)->void::: beans applet stub applet resize
java.beans.ChangeListenerMap#newArray(int)->L[]:::Creates an array of listeners
java.beans.ChangeListenerMap#newProxy(String, L)->L:::Creates a proxy listener for the specified property.
java.beans.ChangeListenerMap#add(String, L)->void:::Adds a listener to the list of listeners for the specified property
java.beans.ChangeListenerMap#remove(String, L)->void:::Removes a listener from the list of listeners for the specified property
java.beans.ChangeListenerMap#get(String)->L[]:::Returns the list of listeners for the specified property.
java.beans.ChangeListenerMap#set(String, L[])->void:::Sets new list of listeners for the specified property.
java.beans.ChangeListenerMap#getListeners()->L[]:::Returns all listeners in the map.
java.beans.ChangeListenerMap#getListeners(String)->L[]:::Returns listeners that have been associated with the named property.
java.beans.ChangeListenerMap#hasListeners(String)->boolean:::Indicates whether the map contains at least one listener to be notified.
java.beans.ChangeListenerMap#getEntries()->Set>:::Returns a set of entries from the map
java.beans.ChangeListenerMap#extract(L)->L:::Extracts a real listener from the proxy listener
java.beans.Customizer#setObject(Object)->void:::Set the object to be customized
java.beans.Customizer#addPropertyChangeListener(PropertyChangeListener)->void:::Register a listener for the PropertyChange event
java.beans.Customizer#removePropertyChangeListener(PropertyChangeListener)->void:::Remove a listener for the PropertyChange event.
java.beans.DefaultPersistenceDelegate#mutatesTo(Object, Object)->boolean:::If the number of arguments in the specified constructor is non-zero and the class of oldInstance explicitly declares an "equals" method this method returns the value of oldInstance.equals(newInstance)
java.beans.DefaultPersistenceDelegate#instantiate(Object, Encoder)->Expression:::This default implementation of the instantiate method returns an expression containing the predefined method name "new" which denotes a call to a constructor with the arguments as specified in the DefaultPersistenceDelegate's constructor.
java.beans.DefaultPersistenceDelegate#invokeStatement(Object, String, Object[], Encoder)->void::: default persistence delegate invoke statement
java.beans.DefaultPersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::This default implementation of the initialize method assumes all state held in objects of this type is exposed via the matching pairs of "setter" and "getter" methods in the order they are returned by the Introspector
java.beans.DesignMode#setDesignTime(boolean)->void::: design mode set design time
java.beans.DesignMode#isDesignTime()->boolean::: design mode is design time
java.beans.Encoder#writeObject(Object)->void:::Write the specified object to the output stream
java.beans.Encoder#setExceptionListener(ExceptionListener)->void:::Sets the exception handler for this stream to exceptionListener
java.beans.Encoder#getExceptionListener()->ExceptionListener:::Gets the exception handler for this stream.
java.beans.Encoder#getValue(Expression)->Object::: encoder get value
java.beans.Encoder#getPersistenceDelegate(Class)->PersistenceDelegate:::Returns the persistence delegate for the given type
java.beans.Encoder#setPersistenceDelegate(Class, PersistenceDelegate)->void:::Associates the specified persistence delegate with the given type.
java.beans.Encoder#remove(Object)->Object:::Removes the entry for this instance, returning the old entry.
java.beans.Encoder#get(Object)->Object:::Returns a tentative value for oldInstance in the environment created by this stream
java.beans.Encoder#writeStatement(Statement)->void:::Writes statement oldStm to the stream
java.beans.Encoder#writeExpression(Expression)->void:::The implementation first checks to see if an expression with this value has already been written
java.beans.Encoder#clear()->void::: encoder clear
java.beans.Encoder#setAttribute(Object, Object)->void::: encoder set attribute
java.beans.Encoder#getAttribute(Object)->Object::: encoder get attribute
java.beans.EventHandler#getTarget()->Object:::Returns the object to which this event handler will send a message.
java.beans.EventHandler#getAction()->String:::Returns the name of the target's writable property that this event handler will set, or the name of the method that this event handler will invoke on the target.
java.beans.EventHandler#getEventPropertyName()->String:::Returns the property of the event that should be used in the action applied to the target.
java.beans.EventHandler#getListenerMethodName()->String:::Returns the name of the method that will trigger the action
java.beans.EventHandler#invoke(Object, Method, Object[])->Object:::Extract the appropriate property value from the event and pass it to the action associated with this EventHandler.
java.beans.EventHandler#create(Class, Object, String)->T:::Creates an implementation of listenerInterface in which all of the methods in the listener interface apply the handler's action to the target
java.beans.EventHandler#create(Class, Object, String, String)->T:::    /** Creates an implementation of listenerInterface in which all of the methods pass the value of the event expression, eventPropertyName, to the final method in the statement, action, which is applied to the target
java.beans.EventHandler#create(Class, Object, String, String, String)->T:::Creates an implementation of listenerInterface in which the method named listenerMethodName passes the value of the event expression, eventPropertyName, to the final method in the statement, action, which is applied to the target
java.beans.EventSetDescriptor#getListenerType()->Class:::Gets the Class object for the target interface.
java.beans.EventSetDescriptor#getListenerMethods()->Method[]:::Gets the methods of the target listener interface.
java.beans.EventSetDescriptor#getListenerMethodDescriptors()->MethodDescriptor[]:::Gets the MethodDescriptors of the target listener interface.
java.beans.EventSetDescriptor#getAddListenerMethod()->Method:::Gets the method used to add event listeners.
java.beans.EventSetDescriptor#getRemoveListenerMethod()->Method:::Gets the method used to remove event listeners.
java.beans.EventSetDescriptor#getGetListenerMethod()->Method:::Gets the method used to access the registered event listeners.
java.beans.EventSetDescriptor#setUnicast(boolean)->void:::Mark an event set as unicast (or not).
java.beans.EventSetDescriptor#isUnicast()->boolean:::Normally event sources are multicast
java.beans.EventSetDescriptor#setInDefaultEventSet(boolean)->void:::Marks an event set as being in the "default" set (or not)
java.beans.EventSetDescriptor#isInDefaultEventSet()->boolean:::Reports if an event set is in the "default" set.
java.beans.EventSetDescriptor#appendTo(StringBuilder)->void::: event set descriptor append to
java.beans.ExceptionListener#exceptionThrown(Exception)->void:::This method is called when a recoverable exception has been caught.
java.beans.Expression#execute()->void:::If the invoked method completes normally, the value it returns is copied in the {@code value property
java.beans.Expression#getValue()->Object:::If the value property of this instance is not already set, this method dynamically finds the method with the specified methodName on this target with these arguments and calls it
java.beans.Expression#setValue(Object)->void:::Sets the value of this expression to value
java.beans.Expression#instanceName(Object)->String::: expression instance name
java.beans.Expression#toString()->String:::Prints the value of this expression using a Java-style syntax.
java.beans.FeatureDescriptor#getName()->String:::Gets the programmatic name of this feature.
java.beans.FeatureDescriptor#setName(String)->void:::Sets the programmatic name of this feature.
java.beans.FeatureDescriptor#getDisplayName()->String:::Gets the localized display name of this feature.
java.beans.FeatureDescriptor#setDisplayName(String)->void:::Sets the localized display name of this feature.
java.beans.FeatureDescriptor#isExpert()->boolean:::The "expert" flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users.
java.beans.FeatureDescriptor#setExpert(boolean)->void:::The "expert" flag is used to distinguish between features that are intended for expert users from those that are intended for normal users.
java.beans.FeatureDescriptor#isHidden()->boolean:::The "hidden" flag is used to identify features that are intended only for tool use, and which should not be exposed to humans.
java.beans.FeatureDescriptor#setHidden(boolean)->void:::The "hidden" flag is used to identify features that are intended only for tool use, and which should not be exposed to humans.
java.beans.FeatureDescriptor#isPreferred()->boolean:::The "preferred" flag is used to identify features that are particularly important for presenting to humans.
java.beans.FeatureDescriptor#setPreferred(boolean)->void:::The "preferred" flag is used to identify features that are particularly important for presenting to humans.
java.beans.FeatureDescriptor#getShortDescription()->String:::Gets the short description of this feature.
java.beans.FeatureDescriptor#setShortDescription(String)->void:::You can associate a short descriptive string with a feature
java.beans.FeatureDescriptor#setValue(String, Object)->void:::Associate a named attribute with this feature.
java.beans.FeatureDescriptor#getValue(String)->Object:::Retrieve a named attribute with this feature.
java.beans.FeatureDescriptor#attributeNames()->Enumeration:::Gets an enumeration of the locale-independent names of this feature.
java.beans.FeatureDescriptor#setTransient(Transient)->void:::Sets the "transient" attribute according to the annotation
java.beans.FeatureDescriptor#isTransient()->boolean:::Indicates whether the feature is transient.
java.beans.FeatureDescriptor#setClass0(Class)->void::: feature descriptor set class0
java.beans.FeatureDescriptor#getClass0()->Class::: feature descriptor get class0
java.beans.FeatureDescriptor#getSoftReference(T)->Reference:::Creates a new soft reference that refers to the given object.
java.beans.FeatureDescriptor#getWeakReference(T)->Reference:::Creates a new weak reference that refers to the given object.
java.beans.FeatureDescriptor#getReturnType(Class, Method)->Class:::Resolves the return type of the method.
java.beans.FeatureDescriptor#getParameterTypes(Class, Method)->Class[]:::Resolves the parameter types of the method.
java.beans.FeatureDescriptor#toString()->String:::Returns a string representation of the object.
java.beans.FeatureDescriptor#appendTo(StringBuilder)->void::: feature descriptor append to
java.beans.FeatureDescriptor#appendTo(StringBuilder, String, Reference)->void::: feature descriptor append to
java.beans.FeatureDescriptor#appendTo(StringBuilder, String, Object)->void::: feature descriptor append to
java.beans.FeatureDescriptor#appendTo(StringBuilder, String, boolean)->void::: feature descriptor append to
java.beans.IndexedPropertyChangeEvent#getIndex()->int:::Gets the index of the property that was changed.
java.beans.IndexedPropertyChangeEvent#appendTo(StringBuilder)->void::: indexed property change event append to
java.beans.IndexedPropertyDescriptor#getIndexedReadMethod()->Method:::Gets the method that should be used to read an indexed property value.
java.beans.IndexedPropertyDescriptor#setIndexedReadMethod(Method)->void:::Sets the method that should be used to read an indexed property value.
java.beans.IndexedPropertyDescriptor#getIndexedWriteMethod()->Method:::Gets the method that should be used to write an indexed property value.
java.beans.IndexedPropertyDescriptor#setIndexedWriteMethod(Method)->void:::Sets the method that should be used to write an indexed property value.
java.beans.IndexedPropertyDescriptor#getIndexedPropertyType()->Class:::Returns the Java type info for the indexed property
java.beans.IndexedPropertyDescriptor#equals(Object)->boolean:::Compares this PropertyDescriptor against the specified object
java.beans.IndexedPropertyDescriptor#updateGenericsFor(Class)->void::: indexed property descriptor update generics for
java.beans.IndexedPropertyDescriptor#hashCode()->int:::Returns a hash code value for the object
java.beans.IndexedPropertyDescriptor#appendTo(StringBuilder)->void::: indexed property descriptor append to
java.beans.Introspector#getBeanInfo(Class)->BeanInfo:::Introspect on a Java Bean and learn about all its properties, exposed methods, and events
java.beans.Introspector#getBeanInfo(Class, int)->BeanInfo:::Introspect on a Java bean and learn about all its properties, exposed methods, and events, subject to some control flags
java.beans.Introspector#getBeanInfo(Class, Class)->BeanInfo:::Introspect on a Java bean and learn all about its properties, exposed methods, below a given "stop" point
java.beans.Introspector#getBeanInfo(Class, Class, int)->BeanInfo:::Introspect on a Java Bean and learn about all its properties, exposed methods and events, below a given stopClass point subject to some control flags
java.beans.Introspector#decapitalize(String)->String:::Utility method to take a string and convert it to normal Java variable name capitalization
java.beans.Introspector#getBeanInfoSearchPath()->String[]::: introspector get bean info search path
java.beans.Introspector#setBeanInfoSearchPath(String[])->void::: introspector set bean info search path
java.beans.Introspector#flushCaches()->void::: introspector flush caches
java.beans.Introspector#flushFromCaches(Class)->void:::Flush the Introspector's internal cached information for a given class
java.beans.Introspector#findMethod(Class, String, int)->Method:::Find a target methodName on a given class.
java.beans.Introspector#findMethod(Class, String, int, Class[])->Method:::Find a target methodName with specific parameter list on a given class
java.beans.Introspector#isSubclass(Class, Class)->boolean:::Return true if class a is either equivalent to class b, or if class a is a subclass of class b, i.e
java.beans.Introspector#instantiate(Class, String)->Object:::Try to create an instance of a named class
java.beans.GenericBeanInfo#getPropertyDescriptors()->PropertyDescriptor[]::: generic bean info get property descriptors
java.beans.GenericBeanInfo#getDefaultPropertyIndex()->int::: generic bean info get default property index
java.beans.GenericBeanInfo#getEventSetDescriptors()->EventSetDescriptor[]::: generic bean info get event set descriptors
java.beans.GenericBeanInfo#getDefaultEventIndex()->int::: generic bean info get default event index
java.beans.GenericBeanInfo#getMethodDescriptors()->MethodDescriptor[]::: generic bean info get method descriptors
java.beans.GenericBeanInfo#getBeanDescriptor()->BeanDescriptor::: generic bean info get bean descriptor
java.beans.GenericBeanInfo#getIcon(int)->java.awt.Image::: generic bean info get icon
java.beans.MetaData.NullPersistenceDelegate#initialize(Class, Object, Object, Encoder)->void::: null persistence delegate initialize
java.beans.MetaData.NullPersistenceDelegate#instantiate(Object, Encoder)->Expression::: null persistence delegate instantiate
java.beans.MetaData.NullPersistenceDelegate#writeObject(Object, Encoder)->void::: null persistence delegate write object
java.beans.MetaData.EnumPersistenceDelegate#mutatesTo(Object, Object)->boolean::: enum persistence delegate mutates to
java.beans.MetaData.EnumPersistenceDelegate#instantiate(Object, Encoder)->Expression::: enum persistence delegate instantiate
java.beans.MetaData.PrimitivePersistenceDelegate#mutatesTo(Object, Object)->boolean::: primitive persistence delegate mutates to
java.beans.MetaData.PrimitivePersistenceDelegate#instantiate(Object, Encoder)->Expression::: primitive persistence delegate instantiate
java.beans.MetaData.ArrayPersistenceDelegate#mutatesTo(Object, Object)->boolean::: array persistence delegate mutates to
java.beans.MetaData.ArrayPersistenceDelegate#instantiate(Object, Encoder)->Expression::: array persistence delegate instantiate
java.beans.MetaData.ArrayPersistenceDelegate#initialize(Class, Object, Object, Encoder)->void::: array persistence delegate initialize
java.beans.MetaData.ProxyPersistenceDelegate#instantiate(Object, Encoder)->Expression::: proxy persistence delegate instantiate
java.beans.MetaData.java_lang_String_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_lang_ string_ persistence delegate instantiate
java.beans.MetaData.java_lang_String_PersistenceDelegate#writeObject(Object, Encoder)->void:::java_lang_ string_ persistence delegate write object
java.beans.MetaData.java_lang_Class_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_lang_ class_ persistence delegate mutates to
java.beans.MetaData.java_lang_Class_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_lang_ class_ persistence delegate instantiate
java.beans.MetaData.java_lang_reflect_Field_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_lang_reflect_ field_ persistence delegate mutates to
java.beans.MetaData.java_lang_reflect_Field_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_lang_reflect_ field_ persistence delegate instantiate
java.beans.MetaData.java_lang_reflect_Method_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_lang_reflect_ method_ persistence delegate mutates to
java.beans.MetaData.java_lang_reflect_Method_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_lang_reflect_ method_ persistence delegate instantiate
java.beans.MetaData.java_util_Date_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_util_ date_ persistence delegate mutates to
java.beans.MetaData.java_util_Date_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_util_ date_ persistence delegate instantiate
java.beans.MetaData.java_sql_Timestamp_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_sql_ timestamp_ persistence delegate initialize
java.beans.MetaData.java_util_Collection_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_util_ collection_ persistence delegate initialize
java.beans.MetaData.java_util_List_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_util_ list_ persistence delegate initialize
java.beans.MetaData.java_util_Map_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_util_ map_ persistence delegate initialize
java.beans.MetaData.java_awt_Insets_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_awt_ insets_ persistence delegate mutates to
java.beans.MetaData.java_awt_Insets_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_awt_ insets_ persistence delegate instantiate
java.beans.MetaData.java_awt_Font_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_awt_ font_ persistence delegate mutates to
java.beans.MetaData.java_awt_Font_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_awt_ font_ persistence delegate instantiate
java.beans.MetaData.java_awt_AWTKeyStroke_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_awt_ key stroke_ persistence delegate mutates to
java.beans.MetaData.java_awt_AWTKeyStroke_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_awt_ key stroke_ persistence delegate instantiate
java.beans.MetaData.StaticFieldsPersistenceDelegate#installFields(Encoder, Class)->void::: static fields persistence delegate install fields
java.beans.MetaData.StaticFieldsPersistenceDelegate#instantiate(Object, Encoder)->Expression::: static fields persistence delegate instantiate
java.beans.MetaData.StaticFieldsPersistenceDelegate#writeObject(Object, Encoder)->void::: static fields persistence delegate write object
java.beans.MetaData.java_awt_MenuShortcut_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_awt_ menu shortcut_ persistence delegate mutates to
java.beans.MetaData.java_awt_MenuShortcut_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::java_awt_ menu shortcut_ persistence delegate instantiate
java.beans.MetaData.java_awt_Component_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ component_ persistence delegate initialize
java.beans.MetaData.java_awt_Container_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ container_ persistence delegate initialize
java.beans.MetaData.java_awt_Choice_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ choice_ persistence delegate initialize
java.beans.MetaData.java_awt_Menu_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ menu_ persistence delegate initialize
java.beans.MetaData.java_awt_MenuBar_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ menu bar_ persistence delegate initialize
java.beans.MetaData.java_awt_List_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ list_ persistence delegate initialize
java.beans.MetaData.java_awt_BorderLayout_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ border layout_ persistence delegate initialize
java.beans.MetaData.java_awt_CardLayout_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ card layout_ persistence delegate initialize
java.beans.MetaData.java_awt_CardLayout_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_awt_ card layout_ persistence delegate mutates to
java.beans.MetaData.java_awt_GridBagLayout_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::java_awt_ grid bag layout_ persistence delegate initialize
java.beans.MetaData.java_awt_GridBagLayout_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::java_awt_ grid bag layout_ persistence delegate mutates to
java.beans.MetaData.javax_swing_JFrame_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::javax_swing_ frame_ persistence delegate initialize
java.beans.MetaData.javax_swing_DefaultListModel_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::javax_swing_ default list model_ persistence delegate initialize
java.beans.MetaData.javax_swing_DefaultComboBoxModel_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::javax_swing_ default combo box model_ persistence delegate initialize
java.beans.MetaData.javax_swing_tree_DefaultMutableTreeNode_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::javax_swing_tree_ default mutable tree node_ persistence delegate initialize
java.beans.MetaData.javax_swing_ToolTipManager_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::javax_swing_ tool tip manager_ persistence delegate instantiate
java.beans.MetaData.javax_swing_JTabbedPane_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::javax_swing_ tabbed pane_ persistence delegate initialize
java.beans.MetaData.javax_swing_Box_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::javax_swing_ box_ persistence delegate mutates to
java.beans.MetaData.javax_swing_Box_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::javax_swing_ box_ persistence delegate instantiate
java.beans.MetaData.javax_swing_JMenu_PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::javax_swing_ menu_ persistence delegate initialize
java.beans.MetaData.javax_swing_border_MatteBorder_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::javax_swing_border_ matte border_ persistence delegate instantiate
java.beans.MetaData.sun_swing_PrintColorUIResource_PersistenceDelegate#mutatesTo(Object, Object)->boolean:::sun_swing_ print color resource_ persistence delegate mutates to
java.beans.MetaData.sun_swing_PrintColorUIResource_PersistenceDelegate#instantiate(Object, Encoder)->Expression:::sun_swing_ print color resource_ persistence delegate instantiate
java.beans.MetaData#getPersistenceDelegate(Class)->PersistenceDelegate::: meta data get persistence delegate
java.beans.MetaData#getPrivateFieldValue(Object, String)->Object::: meta data get private field value
java.beans.MethodDescriptor#getMethod()->Method:::Gets the method that this MethodDescriptor encapsulates.
java.beans.MethodDescriptor#getParamNames()->String[]::: method descriptor get param names
java.beans.MethodDescriptor#getParameterDescriptors()->ParameterDescriptor[]:::Gets the ParameterDescriptor for each of this MethodDescriptor's method's parameters.
java.beans.MethodDescriptor#appendTo(StringBuilder)->void::: method descriptor append to
java.beans.MethodRef#set(Method)->void::: method ref set
java.beans.MethodRef#isSet()->boolean::: method ref is set
java.beans.MethodRef#get()->Method::: method ref get
java.beans.NameGenerator#clear()->void:::Clears the name cache
java.beans.NameGenerator#unqualifiedClassName(Class)->String:::Returns the root name of the class.
java.beans.NameGenerator#capitalize(String)->String:::Returns a String which capitalizes the first letter of the string.
java.beans.NameGenerator#instanceName(Object)->String:::Returns a unique string which identifies the object instance
java.beans.PersistenceDelegate#writeObject(Object, Encoder)->void:::The writeObject is a single entry point to the persistence and is used by an Encoder in the traditional mode of delegation
java.beans.PersistenceDelegate#mutatesTo(Object, Object)->boolean:::Returns true if an equivalent copy of oldInstance may be created by applying a series of statements to newInstance
java.beans.PersistenceDelegate#instantiate(Object, Encoder)->Expression:::Returns an expression whose value is oldInstance
java.beans.PersistenceDelegate#initialize(Class, Object, Object, Encoder)->void:::Produce a series of statements with side effects on newInstance so that the new instance becomes equivalent to oldInstance
java.beans.PropertyChangeEvent#getPropertyName()->String:::Gets the programmatic name of the property that was changed.
java.beans.PropertyChangeEvent#getNewValue()->Object:::Gets the new value for the property, expressed as an Object.
java.beans.PropertyChangeEvent#getOldValue()->Object:::Gets the old value for the property, expressed as an Object.
java.beans.PropertyChangeEvent#setPropagationId(Object)->void:::Sets the propagationId object for the event.
java.beans.PropertyChangeEvent#getPropagationId()->Object:::The "propagationId" field is reserved for future use
java.beans.PropertyChangeEvent#toString()->String:::Returns a string representation of the object.
java.beans.PropertyChangeEvent#appendTo(StringBuilder)->void::: property change event append to
java.beans.PropertyChangeListener#propertyChange(PropertyChangeEvent)->void::: property change listener property change
java.beans.PropertyChangeListenerProxy#propertyChange(PropertyChangeEvent)->void:::Forwards the property change event to the listener delegate.
java.beans.PropertyChangeListenerProxy#getPropertyName()->String:::Returns the name of the named property associated with the listener.
java.beans.PropertyChangeSupport#addPropertyChangeListener(PropertyChangeListener)->void:::Add a PropertyChangeListener to the listener list
java.beans.PropertyChangeSupport#removePropertyChangeListener(PropertyChangeListener)->void:::Remove a PropertyChangeListener from the listener list
java.beans.PropertyChangeSupport#getPropertyChangeListeners()->PropertyChangeListener[]:::Returns an array of all the listeners that were added to the PropertyChangeSupport object with addPropertyChangeListener()
java.beans.PropertyChangeSupport#addPropertyChangeListener(String, PropertyChangeListener)->void:::Add a PropertyChangeListener for a specific property
java.beans.PropertyChangeSupport#removePropertyChangeListener(String, PropertyChangeListener)->void:::Remove a PropertyChangeListener for a specific property
java.beans.PropertyChangeSupport#getPropertyChangeListeners(String)->PropertyChangeListener[]:::Returns an array of all the listeners which have been associated with the named property.
java.beans.PropertyChangeSupport#firePropertyChange(String, Object, Object)->void:::Reports a bound property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.PropertyChangeSupport#firePropertyChange(String, int, int)->void:::Reports an integer bound property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.PropertyChangeSupport#firePropertyChange(String, boolean, boolean)->void:::Reports a boolean bound property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.PropertyChangeSupport#firePropertyChange(PropertyChangeEvent)->void:::Fires a property change event to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.PropertyChangeSupport#fireIndexedPropertyChange(String, int, Object, Object)->void:::Reports a bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.PropertyChangeSupport#fireIndexedPropertyChange(String, int, int, int)->void:::Reports an integer bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.PropertyChangeSupport#fireIndexedPropertyChange(String, int, boolean, boolean)->void:::Reports a boolean bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.PropertyChangeSupport#hasListeners(String)->boolean:::Check if there are any listeners for a specific property, including those registered on all properties
java.beans.PropertyDescriptor#getPropertyType()->Class:::Returns the Java type info for the property
java.beans.PropertyDescriptor#getReadMethod()->Method:::Gets the method that should be used to read the property value.
java.beans.PropertyDescriptor#setReadMethod(Method)->void:::Sets the method that should be used to read the property value.
java.beans.PropertyDescriptor#getWriteMethod()->Method:::Gets the method that should be used to write the property value.
java.beans.PropertyDescriptor#setWriteMethod(Method)->void:::Sets the method that should be used to write the property value.
java.beans.PropertyDescriptor#setClass0(Class)->void:::Overridden to ensure that a super class doesn't take precedent
java.beans.PropertyDescriptor#isBound()->boolean:::Updates to "bound" properties will cause a "PropertyChange" event to get fired when the property is changed.
java.beans.PropertyDescriptor#setBound(boolean)->void:::Updates to "bound" properties will cause a "PropertyChange" event to get fired when the property is changed.
java.beans.PropertyDescriptor#isConstrained()->boolean:::Attempted updates to "Constrained" properties will cause a "VetoableChange" event to get fired when the property is changed.
java.beans.PropertyDescriptor#setConstrained(boolean)->void:::Attempted updates to "Constrained" properties will cause a "VetoableChange" event to get fired when the property is changed.
java.beans.PropertyDescriptor#setPropertyEditorClass(Class)->void:::Normally PropertyEditors will be found using the PropertyEditorManager
java.beans.PropertyDescriptor#getPropertyEditorClass()->Class:::Gets any explicit PropertyEditor Class that has been registered for this property.
java.beans.PropertyDescriptor#createPropertyEditor(Object)->PropertyEditor:::Constructs an instance of a property editor using the current property editor class
java.beans.PropertyDescriptor#equals(Object)->boolean:::Compares this PropertyDescriptor against the specified object
java.beans.PropertyDescriptor#compareMethods(Method, Method)->boolean:::Package private helper method for Descriptor .equals methods.
java.beans.PropertyDescriptor#updateGenericsFor(Class)->void::: property descriptor update generics for
java.beans.PropertyDescriptor#hashCode()->int:::Returns a hash code value for the object
java.beans.PropertyDescriptor#getBaseName()->String::: property descriptor get base name
java.beans.PropertyDescriptor#appendTo(StringBuilder)->void::: property descriptor append to
java.beans.PropertyDescriptor#isAssignable(Method, Method)->boolean::: property descriptor is assignable
java.beans.PropertyEditor#setValue(Object)->void:::Set (or change) the object that is to be edited
java.beans.PropertyEditor#getValue()->Object::: property editor get value
java.beans.PropertyEditor#isPaintable()->boolean::: property editor is paintable
java.beans.PropertyEditor#paintValue(java.awt.Graphics, java.awt.Rectangle)->void:::Paint a representation of the value into a given area of screen real estate
java.beans.PropertyEditor#getJavaInitializationString()->String:::Returns a fragment of Java code that can be used to set a property to match the editors current state
java.beans.PropertyEditor#getAsText()->String:::Gets the property value as text.
java.beans.PropertyEditor#setAsText(String)->void:::Set the property value by parsing a given String
java.beans.PropertyEditor#getTags()->String[]:::If the property value must be one of a set of known tagged values, then this method should return an array of the tags
java.beans.PropertyEditor#getCustomEditor()->java.awt.Component::: property editor get custom editor
java.beans.PropertyEditor#supportsCustomEditor()->boolean:::Determines whether this property editor supports a custom editor.
java.beans.PropertyEditor#addPropertyChangeListener(PropertyChangeListener)->void:::Adds a listener for the value change
java.beans.PropertyEditor#removePropertyChangeListener(PropertyChangeListener)->void:::Removes a listener for the value change.
java.beans.PropertyEditorManager#registerEditor(Class, Class)->void:::Registers an editor class to edit values of the given target class
java.beans.PropertyEditorManager#findEditor(Class)->PropertyEditor:::Locate a value editor for a given target type.
java.beans.PropertyEditorManager#getEditorSearchPath()->String[]:::Gets the package names that will be searched for property editors.
java.beans.PropertyEditorManager#setEditorSearchPath(String[])->void:::Change the list of package names that will be used for          finding property editors
java.beans.PropertyEditorSupport#getSource()->Object:::Returns the bean that is used as the source of events
java.beans.PropertyEditorSupport#setSource(Object)->void:::Sets the source bean
java.beans.PropertyEditorSupport#setValue(Object)->void:::Set (or change) the object that is to be edited.
java.beans.PropertyEditorSupport#getValue()->Object:::Gets the value of the property.
java.beans.PropertyEditorSupport#isPaintable()->boolean::: property editor support is paintable
java.beans.PropertyEditorSupport#paintValue(java.awt.Graphics, java.awt.Rectangle)->void:::Paint a representation of the value into a given area of screen real estate
java.beans.PropertyEditorSupport#getJavaInitializationString()->String:::This method is intended for use when generating Java code to set the value of the property
java.beans.PropertyEditorSupport#getAsText()->String:::Gets the property value as a string suitable for presentation to a human to edit.
java.beans.PropertyEditorSupport#setAsText(String)->void:::Sets the property value by parsing a given String
java.beans.PropertyEditorSupport#getTags()->String[]:::If the property value must be one of a set of known tagged values, then this method should return an array of the tag values
java.beans.PropertyEditorSupport#getCustomEditor()->java.awt.Component::: property editor support get custom editor
java.beans.PropertyEditorSupport#supportsCustomEditor()->boolean:::Determines whether the propertyEditor can provide a custom editor.
java.beans.PropertyEditorSupport#addPropertyChangeListener(PropertyChangeListener)->void:::Adds a listener for the value change
java.beans.PropertyEditorSupport#removePropertyChangeListener(PropertyChangeListener)->void:::Removes a listener for the value change
java.beans.PropertyEditorSupport#firePropertyChange()->void:::Report that we have been modified to any interested listeners.
java.beans.PropertyVetoException#getPropertyChangeEvent()->PropertyChangeEvent:::Gets the vetoed PropertyChangeEvent.
java.beans.SimpleBeanInfo#getBeanDescriptor()->BeanDescriptor:::Deny knowledge about the class and customizer of the bean
java.beans.SimpleBeanInfo#getPropertyDescriptors()->PropertyDescriptor[]:::Deny knowledge of properties
java.beans.SimpleBeanInfo#getDefaultPropertyIndex()->int:::Deny knowledge of a default property
java.beans.SimpleBeanInfo#getEventSetDescriptors()->EventSetDescriptor[]:::Deny knowledge of event sets
java.beans.SimpleBeanInfo#getDefaultEventIndex()->int:::Deny knowledge of a default event
java.beans.SimpleBeanInfo#getMethodDescriptors()->MethodDescriptor[]:::Deny knowledge of methods
java.beans.SimpleBeanInfo#getAdditionalBeanInfo()->BeanInfo[]:::Claim there are no other relevant BeanInfo objects
java.beans.SimpleBeanInfo#getIcon(int)->Image:::Claim there are no icons available
java.beans.SimpleBeanInfo#loadImage(String)->Image:::This is a utility method to help in loading icon images
java.beans.Statement#getTarget()->Object:::Returns the target object of this statement
java.beans.Statement#getMethodName()->String:::Returns the name of the method to invoke
java.beans.Statement#getArguments()->Object[]:::Returns the arguments for the method to invoke
java.beans.Statement#execute()->void:::The execute method finds a method whose name is the same as the methodName property, and invokes the method on the target
java.beans.Statement#invoke()->Object::: statement invoke
java.beans.Statement#instanceName(Object)->String::: statement instance name
java.beans.Statement#toString()->String:::Prints the value of this statement using a Java-style syntax.
java.beans.Statement#getMethod(Class, String, Class...)->Method::: statement get method
java.beans.ThreadGroupContext#getContext()->ThreadGroupContext:::Returns the appropriate ThreadGroupContext for the caller, as determined by its ThreadGroup.
java.beans.ThreadGroupContext#isDesignTime()->boolean::: thread group context is design time
java.beans.ThreadGroupContext#setDesignTime(boolean)->void::: thread group context set design time
java.beans.ThreadGroupContext#isGuiAvailable()->boolean::: thread group context is gui available
java.beans.ThreadGroupContext#setGuiAvailable(boolean)->void::: thread group context set gui available
java.beans.ThreadGroupContext#getBeanInfo(Class)->BeanInfo::: thread group context get bean info
java.beans.ThreadGroupContext#putBeanInfo(Class, BeanInfo)->BeanInfo::: thread group context put bean info
java.beans.ThreadGroupContext#removeBeanInfo(Class)->void::: thread group context remove bean info
java.beans.ThreadGroupContext#clearBeanInfoCache()->void::: thread group context clear bean info cache
java.beans.ThreadGroupContext#getBeanInfoFinder()->BeanInfoFinder::: thread group context get bean info finder
java.beans.ThreadGroupContext#getPropertyEditorFinder()->PropertyEditorFinder::: thread group context get property editor finder
java.beans.VetoableChangeListener#vetoableChange(PropertyChangeEvent)->void:::This method gets called when a constrained property is changed.
java.beans.VetoableChangeListenerProxy#vetoableChange(PropertyChangeEvent)->void:::Forwards the property change event to the listener delegate.
java.beans.VetoableChangeListenerProxy#getPropertyName()->String:::Returns the name of the named property associated with the listener.
java.beans.VetoableChangeSupport#addVetoableChangeListener(VetoableChangeListener)->void:::Add a VetoableChangeListener to the listener list
java.beans.VetoableChangeSupport#removeVetoableChangeListener(VetoableChangeListener)->void:::Remove a VetoableChangeListener from the listener list
java.beans.VetoableChangeSupport#getVetoableChangeListeners()->VetoableChangeListener[]:::Returns an array of all the listeners that were added to the VetoableChangeSupport object with addVetoableChangeListener()
java.beans.VetoableChangeSupport#addVetoableChangeListener(String, VetoableChangeListener)->void:::Add a VetoableChangeListener for a specific property
java.beans.VetoableChangeSupport#removeVetoableChangeListener(String, VetoableChangeListener)->void:::Remove a VetoableChangeListener for a specific property
java.beans.VetoableChangeSupport#getVetoableChangeListeners(String)->VetoableChangeListener[]:::Returns an array of all the listeners which have been associated with the named property.
java.beans.VetoableChangeSupport#fireVetoableChange(String, Object, Object)->void:::Reports a constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.VetoableChangeSupport#fireVetoableChange(String, int, int)->void:::Reports an integer constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.VetoableChangeSupport#fireVetoableChange(String, boolean, boolean)->void:::Reports a boolean constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.VetoableChangeSupport#fireVetoableChange(PropertyChangeEvent)->void:::Fires a property change event to listeners that have been registered to track updates of all properties or a property with the specified name
java.beans.VetoableChangeSupport#hasListeners(String)->boolean:::Check if there are any listeners for a specific property, including those registered on all properties
java.beans.Visibility#needsGui()->boolean:::Determines whether this bean needs a GUI.
java.beans.Visibility#dontUseGui()->void:::This method instructs the bean that it should not use the Gui.
java.beans.Visibility#okToUseGui()->void:::This method instructs the bean that it is OK to use the Gui.
java.beans.Visibility#avoidingGui()->boolean:::Determines whether this bean is avoiding using a GUI.
java.beans.WeakIdentityMap#get(Object)->T::: weak identity map get
java.beans.WeakIdentityMap#create(Object)->T::: weak identity map create
java.beans.XMLDecoder#close()->void:::This method closes the input stream associated with this stream.
java.beans.XMLDecoder#setExceptionListener(ExceptionListener)->void:::Sets the exception handler for this stream to exceptionListener
java.beans.XMLDecoder#getExceptionListener()->ExceptionListener:::Gets the exception handler for this stream.
java.beans.XMLDecoder#readObject()->Object:::Reads the next object from the underlying input stream.
java.beans.XMLDecoder#setOwner(Object)->void:::Sets the owner of this decoder to owner.
java.beans.XMLDecoder#getOwner()->Object:::Gets the owner of this decoder.
java.beans.XMLDecoder#createHandler(Object, ExceptionListener, ClassLoader)->DefaultHandler:::Creates a new handler for SAX parser that can be used to parse embedded XML archives created by the XMLEncoder class
java.beans.XMLEncoder#setOwner(Object)->void:::Sets the owner of this encoder to owner.
java.beans.XMLEncoder#getOwner()->Object:::Gets the owner of this encoder.
java.beans.XMLEncoder#writeObject(Object)->void:::Write an XML representation of the specified object to the output.
java.beans.XMLEncoder#writeStatement(Statement)->void:::Records the Statement so that the Encoder will produce the actual output when the stream is flushed
java.beans.XMLEncoder#writeExpression(Expression)->void:::Records the Expression so that the Encoder will produce the actual output when the stream is flushed
java.beans.XMLEncoder#flush()->void:::This method writes out the preamble associated with the XML encoding if it has not been written already and then writes out all of the values that been written to the stream since the last time flush was called
java.beans.XMLEncoder#clear()->void::: encoder clear
java.beans.XMLEncoder#getMissedStatement()->Statement::: encoder get missed statement
java.beans.XMLEncoder#close()->void:::This method calls flush, writes the closing postamble and then closes the output stream associated with this stream.
java.beans.XMLEncoder#primitiveTypeFor(Class)->Class::: encoder primitive type for
