ciArrayKlass#initialize(TypeDataBase):::ci array klass initialize:::type->db->lookupType->type->getJIntField->new->IntField
ciBaseObject#initialize(TypeDataBase):::ci base object initialize:::type->db->lookupType->type->getCIntegerField->new->CIntField
ciBaseObject#dumpReplayData(PrintStream):::ci base object dump replay data:::out->getAddress->getAddressAt->println
ciConstant#initialize(TypeDataBase):::ci constant initialize:::type->db->lookupType->type->getAddressField->type->getJDoubleField->type->getJFloatField->type->getJLongField->type->getJIntField->type->getCIntegerField->new->CIntField
ciConstant#dumpReplayData(PrintStream):::ci constant dump replay data:::
ciEnv#initialize(TypeDataBase):::ci env initialize:::type->db->lookupType->type->getAddressField->type->getAddressField->type->getAddressField->type->getAddressField->type->getCIntegerField->new->CIntField
ciEnv#compilerData():::ci env compiler data:::addr->compilerDataField->this->getAddress->getValue->if->return->return->new->Compile
ciEnv#factory():::ci env factory:::return->factoryField->this->getAddress->getValue->new->ciObjectFactory
ciEnv#task():::ci env task:::return->taskField->this->getAddress->getValue->new->CompileTask
ciEnv#dumpReplayData(PrintStream):::ci env dump replay data:::out->JvmtiExport->canAccessLocalVariables->println->out->JvmtiExport->canHotswapOrPostBreakpoint->println->out->JvmtiExport->canPostOnExceptions->println->objects->factory->objects->out->objects->length->println->for->i->objects->length->task->task->method->task->method->entryBci->task->osrBci->compLevel->task->compLevel->out->method->nameAsAscii->print->compiler->compilerData->if->compiler->dumpInlineData->out->println
ciField#initialize(TypeDataBase):::ci field initialize:::type->db->lookupType->type->getAddressField->type->getAddressField->type->getCIntegerField->new->CIntField->type->getAddressField->type->getAddressField->type->getAddressField
ciInstance#initialize(TypeDataBase):::ci instance initialize:::type->db->lookupType
ciInstanceKlass#initialize(TypeDataBase):::ci instance klass initialize:::type->db->lookupType->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->db->lookupIntConstant->intValue->db->lookupIntConstant->intValue
ciInstanceKlass#initState():::ci instance klass init state:::initState->initStateField->getAddress->getValue->if->isShared->ik->getMetadata->ik->getInitStateAsInt->return
ciInstanceKlass#isShared():::ci instance klass is shared:::return->isSharedField->getAddress->getValue
ciInstanceKlass#isLinked():::ci instance klass is linked:::return->initState
ciInstanceKlass#isInitialized():::ci instance klass is initialized:::return->initState
ciInstanceKlass#dumpReplayData(PrintStream):::ci instance klass dump replay data:::ik->getMetadata->cp->ik->getConstants->sub->ik->getSubklassKlass->while->if->out->sub->getName->asString->println->sub->getNextSiblingKlass->length->cp->getLength->out->name->isLinked->isInitialized->print->for->index->out->println->if->isInitialized->staticFields->ik->getStaticFields->for->i
ciKlass#initialize(TypeDataBase):::ci klass initialize:::type->db->lookupType->type->getAddressField
ciKlass#name():::ci klass name:::sym->nameField->getAddress->getValue->new->ciSymbol->return->sym->asUtf88
ciKlass#printValueOn(PrintStream):::ci klass print value on:::k->getMetadata->k->printValueOn
ciMetadata#initialize(TypeDataBase):::ci metadata initialize:::type->db->lookupType->type->getAddressField->new->MetadataField
ciMetadata#getMetadata():::ci metadata get metadata:::return->metadataField->getAddress->getValue
ciMetadata#printOn(PrintStream):::ci metadata print on:::getMetadata->printValueOn
ciMetadata#toString():::ci metadata to string:::return->getMetadata->toString
ciMethod#initialize(TypeDataBase):::ci method initialize:::type->db->lookupType->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->try->type->getCIntegerField->new->CIntField->catch->finally
ciMethod#method():::ci method method:::return->getMetadata
ciMethod#interpreterThrowoutCount():::ci method interpreter throwout count:::return->interpreterThrowoutCountField->getAddress->getValue
ciMethod#interpreterInvocationCount():::ci method interpreter invocation count:::return->interpreterInvocationCountField->getAddress->getValue
ciMethod#instructionsSize():::ci method instructions size:::if->method->method->nm->method->getNativeMethod->if->return->nm->codeEnd->nm->getVerifiedEntryPoint->minus->return->return->instructionsSizeField->getAddress->getValue
ciMethod#printShortName(PrintStream):::ci method print short name:::method->method->st->method->getMethodHolder->getName->asString->replace->method->getName->asString->printf
ciMethod#dumpReplayData(PrintStream):::ci method dump replay data:::method->getMetadata->nm->method->getNativeMethod->out->nameAsAscii->method->getInvocationCount->method->getBackedgeCount->interpreterInvocationCount->interpreterThrowoutCount->instructionsSize->println
ciMethod#printValueOn(PrintStream):::ci method print value on:::tty->method->getName->asString->method->getSignature->asString->getAddress->print
ciMethod#nameAsAscii():::ci method name as ascii:::method->getMetadata->return->method->nameAsAscii
ciMethodData#initialize(TypeDataBase):::ci method data initialize:::type->db->lookupType->type->getAddressField->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->type->getAddressField->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->type->getCIntegerField->new->CIntField->typeMethodData->db->lookupType->typeMethodData->getSize->typeMethodData->getCIntegerField->new->CIntField
ciMethodData#getKlassAtAddress(Address):::ci method data get klass at address:::return->ciObjectFactory->getMetadata
ciMethodData#getMethodAtAddress(Address):::ci method data get method at address:::return->ciObjectFactory->getMetadata
ciMethodData#printKlassValueOn(ciKlass, PrintStream):::ci method data print klass value on:::klass->printValueOn
ciMethodData#printMethodValueOn(ciMethod, PrintStream):::ci method data print method value on:::method->printValueOn
ciMethodData#fetchDataAt(Address, long):::ci method data fetch data at:::result->new->byteArr->for->i->return
ciMethodData#orig():::ci method data orig:::base->getAddress->origField->getOffset->addOffsetTo->result->new->byteArr->for->i->return
ciMethodData#data():::ci method data data:::base->dataField->getAddress->getValue->elements->dataSize->result->new->longArr->for->i->return
ciMethodData#dataSize():::ci method data data size:::return->dataSizeField->getAddress->getValue
ciMethodData#extraDataSize():::ci method data extra data size:::return->extraDataSizeField->getAddress->getValue
ciMethodData#state():::ci method data state:::return->stateField->getAddress->getValue
ciMethodData#currentMileage():::ci method data current mileage:::return->currentMileageField->getAddress->getValue
ciMethodData#outOfBounds(int):::ci method data out of bounds:::return->dataSize
ciMethodData#parametersTypeData():::ci method data parameters type data:::base->getAddress->origField->getOffset->addOffsetTo->di->parametersTypeDataDi->getValue->if->return->dataLayout->dataField->getAddress->getValue->new->DataLayout->return->new->ParametersTypeData<ciKlass,ciMethod>
ciMethodData#dataAt(int):::ci method data data at:::if->outOfBounds->return->dataLayout->dataField->getAddress->getValue->new->DataLayout->switch->dataLayout->tag->throw->new->InternalError->return->new->BitData->return->new->CounterData->return->new->JumpData->return->new->ReceiverTypeData<ciKlass,ciMethod>->return->new->VirtualCallData<ciKlass,ciMethod>->return->new->RetData->return->new->BranchData->return->new->MultiBranchData->return->new->CallTypeData<ciKlass,ciMethod>->return->new->VirtualCallTypeData<ciKlass,ciMethod>->return->new->ParametersTypeData<ciKlass,ciMethod>
ciMethodData#dpToDi(int):::ci method data dp to di:::return
ciMethodData#firstDi():::ci method data first di:::return
ciMethodData#firstData():::ci method data first data:::return->firstDi->dataAt
ciMethodData#nextData(ProfileData):::ci method data next data:::currentIndex->current->dp->dpToDi->nextIndex->current->sizeInBytes->return->dataAt
ciMethodData#isValid(ProfileData):::ci method data is valid:::return
ciMethodData#limitDataPosition():::ci method data limit data position:::return->dataField->getAddress->getValue->dataSize->new->DataLayout
ciMethodData#extraDataBase():::ci method data extra data base:::return->limitDataPosition
ciMethodData#extraDataLimit():::ci method data extra data limit:::return->dataField->getAddress->getValue->dataSize->extraDataSize->new->DataLayout
ciMethodData#nextExtra(DataLayout):::ci method data next extra:::return->dataField->getAddress->getValue->dataLayout->dp->DataLayout->MethodData->extraNbCells->computeSizeInBytes->new->DataLayout
ciMethodData#printDataOn(PrintStream):::ci method data print data on:::if->parametersTypeData->parametersTypeData->printDataOn->data->firstData->for->isValid->nextData->st->println->dp->extraDataBase->end->extraDataLimit->for->nextExtra
ciMethodData#dumpReplayDataTypeHelper(PrintStream, int, int, int, ProfileData, ciKlass):::ci method data dump replay data type helper:::if->if->else->out->pdata->dp->pdata->cellOffset->k->name->print->return
ciMethodData#dumpReplayDataReceiverTypeHelper(PrintStream, int, int, ReceiverTypeData):::ci method data dump replay data receiver type helper:::for->i->vdata->rowLimit->return
ciMethodData#dumpReplayDataCallTypeHelper(PrintStream, int, int, CallTypeDataInterface):::ci method data dump replay data call type helper:::if->callTypeData->hasArguments->for->i->callTypeData->numberOfArguments->if->callTypeData->hasReturn->callTypeData->returnTypeIndex->callTypeData->returnType->dumpReplayDataTypeHelper->return
ciMethodData#dumpReplayDataExtraDataHelper(PrintStream, int, int):::ci method data dump replay data extra data helper:::dp->extraDataBase->end->extraDataLimit->for->nextExtra->return
ciMethodData#dumpReplayData(PrintStream):::ci method data dump replay data:::mdo->getMetadata->method->mdo->getMethod->out->method->nameAsAscii->state->currentMileage->print->orig->orig->out->print->for->i->data->data->out->print->for->i->count->parameters->parametersTypeData->for->round->for->round->out->println
ciObjArrayKlass#initialize(TypeDataBase):::ci obj array klass initialize:::type->db->lookupType->type->getAddressField->type->getAddressField
ciObject#initialize(TypeDataBase):::ci object initialize:::type->db->lookupType->type->getAddressField->type->getAddressField
ciObject#getOop():::ci object get oop:::oh->handleField->getAddress->getValue->getOopHandleAt->return->VM->getVM->getObjectHeap->newOop
ciObject#printOn(PrintStream):::ci object print on:::getOop->printValueOn->out->println
ciObject#toString():::ci object to string:::return->getOop->toString
ciObjectFactory#initialize(TypeDataBase):::ci object factory initialize:::type->db->lookupType->type->getAddressField->type->getAddressField->type->getAddressField->db->lookupType->new->VirtualBaseConstructor<ciObject>->db->lookupType->new->VirtualBaseConstructor<ciMetadata>->db->lookupType->new->VirtualBaseConstructor<ciSymbol>
ciObjectFactory#get(Address):::ci object factory get:::if->return->return->ciObjectConstructor->instantiateWrapperFor
ciObjectFactory#getMetadata(Address):::ci object factory get metadata:::if->return->return->ciMetadataConstructor->instantiateWrapperFor
ciObjectFactory#objects():::ci object factory objects:::return->GrowableArray->ciMetadataField->getAddress->getValue->create
ciObjectFactory#symbols():::ci object factory symbols:::return->GrowableArray->symbolsField->getAddress->getValue->create
ciSymbol#initialize(TypeDataBase):::ci symbol initialize:::type->db->lookupType->type->getAddressField
ciSymbol#asUtf88():::ci symbol as utf88:::sym->Symbol->symbolField->getAddress->getValue->create->return->sym->asString
ciType#initialize(TypeDataBase):::ci type initialize:::type->db->lookupType->type->getCIntegerField->new->CIntField
ciTypeArrayKlass#initialize(TypeDataBase):::ci type array klass initialize:::type->db->lookupType
