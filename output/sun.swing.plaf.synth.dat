DefaultSynthStyle#getColor(SynthContext, ColorType)::: default synth style get color:::return->context->getComponent->context->getRegion->context->getComponentState->getColor
DefaultSynthStyle#getColor(JComponent, Region, int, ColorType)::: default synth style get color:::if->id->isSubregion->if->return->c->getBackground->else->if->return->c->getForeground->else->if->color->c->getForeground->if->return->color->getColorForState->if->if->return->c->getBackground->else->if->return->c->getForeground->return
DefaultSynthStyle#getColorForState(SynthContext, ColorType)::: default synth style get color for state:::return->context->getComponent->context->getRegion->context->getComponentState->getColorForState
DefaultSynthStyle#getColorForState(JComponent, Region, int, ColorType):::Returns the color for the specified state.:::si->getStateInfo->color->if->si->getColor->return->if->si->getComponentState->getStateInfo->if->return->si->getColor->return
DefaultSynthStyle#setFont(Font):::Sets the font that is used if there is no matching StateInfo, or it does not define a font.:::
DefaultSynthStyle#getFont(SynthContext)::: default synth style get font:::return->state->getComponent->state->getRegion->state->getComponentState->getFont
DefaultSynthStyle#getFont(JComponent, Region, int)::: default synth style get font:::if->id->isSubregion->return->c->getFont->cFont->c->getFont->if->return->return->getFontForState
DefaultSynthStyle#getFontForState(JComponent, Region, int):::Returns the font for the specified state:::if->return->si->getStateInfo->font->if->si->getFont->return->if->si->getComponentState->getStateInfo->if->si->getFont->return->return
DefaultSynthStyle#getFontForState(SynthContext)::: default synth style get font for state:::return->context->getComponent->context->getRegion->context->getComponentState->getFontForState
DefaultSynthStyle#setGraphicsUtils(SynthGraphicsUtils):::Sets the SynthGraphicsUtils that will be used for rendering.:::
DefaultSynthStyle#getGraphicsUtils(SynthContext):::Returns a SynthGraphicsUtils.:::if->return->super->getGraphicsUtils->return
DefaultSynthStyle#setInsets(Insets):::Sets the insets.:::
DefaultSynthStyle#getInsets(SynthContext, Insets):::Returns the Insets:::if->new->Insets->if->else->return
DefaultSynthStyle#setPainter(SynthPainter):::Sets the Painter to use for the border.:::
DefaultSynthStyle#getPainter(SynthContext):::Returns the Painter for the passed in Component:::return
DefaultSynthStyle#setOpaque(boolean):::Sets whether or not the JComponent should be opaque.:::
DefaultSynthStyle#isOpaque(SynthContext):::Returns the value to initialize the opacity property of the Component to:::return
DefaultSynthStyle#setData(Map):::Sets style specific values:::
DefaultSynthStyle#getData():::Returns the style specific data.:::return
DefaultSynthStyle#get(SynthContext, Object):::Getter for a region specific style property.:::si->state->getComponentState->getStateInfo->if->si->getData->si->getData->getKeyFromData->return->si->getData->getKeyFromData->getStateInfo->if->si->getData->si->getData->getKeyFromData->return->si->getData->getKeyFromData->if->getKeyFromData->return->getKeyFromData->return->getDefaultValue
DefaultSynthStyle#getKeyFromData(Map, Object)::: default synth style get key from data:::value->if->synchronized->stateData->get->while->synchronized->try->stateData->wait->catch->finally->stateData->get->if->synchronized->stateData->put->createValue->synchronized->stateData->put->stateData->notifyAll->return
DefaultSynthStyle#getDefaultValue(SynthContext, Object):::Returns the default value for a particular property:::return->super->get
DefaultSynthStyle#clone():::Creates a clone of this style.:::style->try->super->clone->catch->return->finally->if->new->StateInfoArr->for->counter->if->new->HashMap<>->putAll->return
DefaultSynthStyle#addTo(DefaultSynthStyle):::Merges the contents of this Style with that of the passed in Style, returning the resulting merged syle:::if->if->if->if->if->if->new->StateInfoArr->for->counter->else->unique->matchCount->maxOStyles->for->thisCounter->if->newStates->new->StateInfoArr->newIndex->System->arraycopy->for->thisCounter->if->if->new->HashMap<>->putAll->return
DefaultSynthStyle#setStateInfo(StateInfo[]):::Sets the array of StateInfo's which are used to specify properties specific to a particular style.:::
DefaultSynthStyle#getStateInfo():::Returns the array of StateInfo's that that are used to specify properties specific to a particular style.:::return
DefaultSynthStyle#getStateInfo(int):::Returns the best matching StateInfo for a particular state.:::if->bestCount->bestIndex->wildIndex->if->for->counter->return->for->counter->if->return->if->return->return
DefaultSynthStyle#toString()::: default synth style to string:::sb->new->StringBuilder->sb->super->toString->append->append->sb->append->append->append->sb->append->append->append->sb->append->append->append->sb->append->append->append->sb->append->append->append->states->getStateInfo->if->sb->append->foreach->sb->state->toString->append->append->sb->append->append->sb->sb->length->deleteCharAt->return->sb->toString
DefaultSynthStyle.StateInfo#getData()::: state info get data:::return
DefaultSynthStyle.StateInfo#setData(Map)::: state info set data:::
DefaultSynthStyle.StateInfo#setFont(Font):::Sets the font for this state.:::
DefaultSynthStyle.StateInfo#getFont():::Returns the font for this state.:::return
DefaultSynthStyle.StateInfo#setColors(Color[]):::Sets the array of colors to use for rendering this state:::
DefaultSynthStyle.StateInfo#getColors():::Returns the array of colors to use for rendering this state:::return
DefaultSynthStyle.StateInfo#getColor(ColorType):::Returns the Color to used for the specified ColorType.:::if->id->type->getID->if->return->return
DefaultSynthStyle.StateInfo#addTo(StateInfo):::Merges the contents of this StateInfo with that of the passed in StateInfo, returning the resulting merged StateInfo:::if->if->if->new->HashMap<>->putAll->if->if->new->ColorArr->System->arraycopy->else->if->old->new->ColorArr->System->arraycopy->for->counter->return
DefaultSynthStyle.StateInfo#setComponentState(int):::Sets the state this StateInfo corresponds to.:::
DefaultSynthStyle.StateInfo#getComponentState():::Returns the state this StateInfo corresponds to.:::return
DefaultSynthStyle.StateInfo#clone():::Creates and returns a copy of this StateInfo.:::return->new->StateInfo
DefaultSynthStyle.StateInfo#toString()::: state info to string:::sb->new->StringBuilder->sb->super->toString->append->append->sb->append->Integer->toString->append->append->sb->append->append->append->if->sb->append->Arrays->asList->append->append->return->sb->toString
Paint9Painter#validImage(Image):::Convenience method for testing the validity of an image.:::return->image->getWidth->image->getHeight
Paint9Painter#paint(Component, Graphics, int, int, int, int, Image, Insets, Insets, PaintType, int):::Paints using the algorightm specified by paintType:::if->return->super->paint
Paint9Painter#paintToImage(Component, Image, Graphics, int, int, Object[])::: paint9 painter paint to image:::argIndex->while->image->sInsets->dInsets->type->mask->paint9
Paint9Painter#paint9(Graphics, int, int, int, int, Image, Insets, Insets, PaintType, int)::: paint9 painter paint9:::if->validImage->return->if->if->iw->image->getWidth->ih->image->getHeight->if->g->drawImage->else->if->lastIY->for->yCounter->maxY->else->st->sl->sb->sr->dt->dl->db->dr->if->Math->max->if->Math->max->if->Math->max->if->Math->max->stretch->if->if->drawChunk->if->drawImage->if->drawChunk->if->drawImage->if->drawChunk->if->drawImage->if->drawChunk->if->drawImage->if->drawImage
Paint9Painter#drawImage(Image, Graphics, int, int, int, int, int, int, int, int)::: paint9 painter draw image:::if->return->g->drawImage
Paint9Painter#drawChunk(Image, Graphics, boolean, int, int, int, int, int, int, int, int, boolean):::Draws a portion of an image, stretched or tiled.:::if->return->if->g->drawImage->else->xSize->ySize->deltaX->deltaY->if->else->while->newDX2->Math->min->newDY2->Math->min->g->drawImage
Paint9Painter#createImage(Component, int, int, GraphicsConfiguration, Object[]):::Subclassed to always create a translucent image.:::if->return->new->BufferedImage->return->config->createCompatibleImage
StyleAssociation#createStyleAssociation(String, SynthStyle):::Returns a StyleAssociation that can be used to determine if a particular string matches the returned association.:::return->createStyleAssociation
StyleAssociation#createStyleAssociation(String, SynthStyle, int):::Returns a StyleAssociation that can be used to determine if a particular string matches the returned association.:::return->new->StyleAssociation
StyleAssociation#getID():::Returns the developer specified identifier for this association, will be 0 if an identifier was not specified when this StyleAssociation was created.:::return
StyleAssociation#matches(CharSequence):::Returns true if this StyleAssociation matches the passed in CharSequence.:::if->_pattern->matcher->else->_matcher->reset->return->_matcher->matches
StyleAssociation#getText():::Returns the text used in matching the string.:::return->_pattern->pattern
StyleAssociation#getStyle():::Returns the style this association is mapped to.:::return
SynthFileChooserUI#createUI(JComponent)::: synth file chooser i create i:::return->new->SynthFileChooserUIImpl
SynthFileChooserUI#getContext(JComponent)::: synth file chooser i get context:::return->getComponentState->new->SynthContext
SynthFileChooserUI#getContext(JComponent, int)::: synth file chooser i get context:::region->SynthLookAndFeel->getRegion->return->new->SynthContext
SynthFileChooserUI#getRegion(JComponent)::: synth file chooser i get region:::return->SynthLookAndFeel->getRegion
SynthFileChooserUI#getComponentState(JComponent)::: synth file chooser i get component state:::if->c->isEnabled->if->c->isFocusOwner->return->return->return
SynthFileChooserUI#updateStyle(JComponent)::: synth file chooser i update style:::newStyle->SynthLookAndFeel->getStyleFactory->getStyle->if->if->style->getContext->uninstallDefaults->context->getContext->style->installDefaults->border->c->getBorder->if->c->style->getInsets->new->UIBorder->setBorder->style->getIcon->style->getIcon->style->getIcon->style->getIcon->style->getIcon->style->getIcon->style->getIcon->style->getIcon->style->getIcon->style->getIcon
SynthFileChooserUI#installUI(JComponent)::: synth file chooser i install i:::super->installUI->SwingUtilities->createActionMap->replaceUIActionMap
SynthFileChooserUI#installComponents(JFileChooser)::: synth file chooser i install components:::context->getContext->new->JButton->cancelButton->setName->cancelButton->context->getStyle->getIcon->setIcon->cancelButton->setMnemonic->cancelButton->setToolTipText->cancelButton->getCancelSelectionAction->addActionListener->getApproveButtonText->new->JButton->approveButton->setName->approveButton->context->getStyle->getIcon->setIcon->approveButton->getApproveButtonMnemonic->setMnemonic->approveButton->getApproveButtonToolTipText->setToolTipText->approveButton->getApproveSelectionAction->addActionListener
SynthFileChooserUI#uninstallComponents(JFileChooser)::: synth file chooser i uninstall components:::fc->removeAll
SynthFileChooserUI#installListeners(JFileChooser)::: synth file chooser i install listeners:::super->installListeners->getModel->new->ListDataListener->addListDataListener
SynthFileChooserUI.DelayedSelectionUpdater#run()::: delayed selection updater run:::updateFileNameCompletion
SynthFileChooserUI#createActionMap()::: synth file chooser i create action map:::
SynthFileChooserUI#installDefaults(JFileChooser)::: synth file chooser i install defaults:::super->installDefaults->updateStyle
SynthFileChooserUI#uninstallDefaults(JFileChooser)::: synth file chooser i uninstall defaults:::super->uninstallDefaults->context->getFileChooser->getContext->style->uninstallDefaults
SynthFileChooserUI#installIcons(JFileChooser)::: synth file chooser i install icons:::
SynthFileChooserUI#update(Graphics, JComponent)::: synth file chooser i update:::context->getContext->if->c->isOpaque->g->style->getColor->setColor->g->c->getWidth->c->getHeight->fillRect->style->getPainter->c->getWidth->c->getHeight->paintFileChooserBackground->paint
SynthFileChooserUI#paintBorder(SynthContext, Graphics, int, int, int, int)::: synth file chooser i paint border:::
SynthFileChooserUI#paint(Graphics, JComponent)::: synth file chooser i paint:::context->getContext->paint
SynthFileChooserUI#paint(SynthContext, Graphics)::: synth file chooser i paint:::
SynthFileChooserUI#setFileName(String)::: synth file chooser i set file name:::
SynthFileChooserUI#getFileName()::: synth file chooser i get file name:::
SynthFileChooserUI#doSelectedFileChanged(PropertyChangeEvent)::: synth file chooser i do selected file changed:::
SynthFileChooserUI#doSelectedFilesChanged(PropertyChangeEvent)::: synth file chooser i do selected files changed:::
SynthFileChooserUI#doDirectoryChanged(PropertyChangeEvent)::: synth file chooser i do directory changed:::
SynthFileChooserUI#doAccessoryChanged(PropertyChangeEvent)::: synth file chooser i do accessory changed:::
SynthFileChooserUI#doFileSelectionModeChanged(PropertyChangeEvent)::: synth file chooser i do file selection mode changed:::
SynthFileChooserUI#doMultiSelectionChanged(PropertyChangeEvent)::: synth file chooser i do multi selection changed:::if->getFileChooser->isMultiSelectionEnabled->getFileChooser->setSelectedFiles
SynthFileChooserUI#doControlButtonsChanged(PropertyChangeEvent)::: synth file chooser i do control buttons changed:::if->getFileChooser->getControlButtonsAreShown->approveButton->getFileChooser->getApproveButtonText->setText->approveButton->getFileChooser->getApproveButtonToolTipText->setToolTipText->approveButton->getFileChooser->getApproveButtonMnemonic->setMnemonic
SynthFileChooserUI#doAncestorChanged(PropertyChangeEvent)::: synth file chooser i do ancestor changed:::
SynthFileChooserUI#createPropertyChangeListener(JFileChooser)::: synth file chooser i create property change listener:::return->new->SynthFCPropertyChangeListener
SynthFileChooserUI.SynthFCPropertyChangeListener#propertyChange(PropertyChangeEvent)::: synth property change listener property change:::prop->e->getPropertyName->if->prop->equals->doFileSelectionModeChanged->else->if->prop->equals->doSelectedFileChanged->else->if->prop->equals->doSelectedFilesChanged->else->if->prop->equals->doDirectoryChanged->else->if->doMultiSelectionChanged->else->if->doAccessoryChanged->else->if->doControlButtonsChanged->else->if->prop->equals->o->e->getNewValue->cc->e->getSource->if->e->getOldValue->cc->applyComponentOrientation->else->if->prop->equals->doAncestorChanged
SynthFileChooserUI.FileNameCompletionAction#actionPerformed(ActionEvent)::: file name completion action action performed:::chooser->getFileChooser->fileName->getFileName->if->fileName->trim->resetGlobFilter->if->fileName->equals->chooser->isMultiSelectionEnabled->fileName->startsWith->return->currentFilter->chooser->getFileFilter->if->new->GlobFilter->try->globFilter->isGlobPattern->setPattern->if->chooser->setFileFilter->chooser->setFileFilter->catch->finally
SynthFileChooserUI#updateFileNameCompletion()::: synth file chooser i update file name completion:::if->if->fileNameCompletionString->getFileName->equals->files->getModel->getFiles->new->FileArr->toArray->str->getCommonStartString->if->str->startsWith->setFileName
SynthFileChooserUI#getCommonStartString(File[])::: synth file chooser i get common start string:::str->str2->i->if->return->while->for->f
SynthFileChooserUI#resetGlobFilter()::: synth file chooser i reset glob filter:::if->chooser->getFileChooser->currentFilter->chooser->getFileFilter->if->currentFilter->equals->chooser->setFileFilter->chooser->removeChoosableFileFilter
SynthFileChooserUI#isGlobPattern(String)::: synth file chooser i is glob pattern:::return->fileName->indexOf->fileName->indexOf->fileName->indexOf->fileName->indexOf
SynthFileChooserUI.GlobFilter#setPattern(String)::: glob filter set pattern:::gPat->globPattern->toCharArray->rPat->new->charArr->isWin32->inBrackets->j->if->len->if->globPattern->endsWith->for->i->else->for->i->Pattern->new->String->compile
SynthFileChooserUI.GlobFilter#accept(File)::: glob filter accept:::if->return->if->f->isDirectory->return->return->pattern->f->getName->matcher->matches
SynthFileChooserUI.GlobFilter#getDescription()::: glob filter get description:::return
SynthFileChooserUI#getFileNameCompletionAction()::: synth file chooser i get file name completion action:::return
SynthFileChooserUI#getApproveButton(JFileChooser)::: synth file chooser i get approve button:::return
SynthFileChooserUI#getCancelButton(JFileChooser)::: synth file chooser i get cancel button:::return
SynthFileChooserUI#clearIconCache()::: synth file chooser i clear icon cache:::
SynthFileChooserUI.UIBorder#paintBorder(Component, Graphics, int, int, int, int)::: border paint border:::if->return->jc->context->getContext->style->context->getStyle->if->style->getPainter->paintFileChooserBorder
SynthFileChooserUI.UIBorder#getBorderInsets(Component, Insets)::: border get border insets:::if->new->Insets->if->else->return
SynthFileChooserUI.UIBorder#isBorderOpaque()::: border is border opaque:::return
SynthFileChooserUIImpl#populateFileNameLabel()::: synth file chooser impl populate file name label:::if->getFileChooser->getFileSelectionMode->fileNameLabel->setText->fileNameLabel->setDisplayedMnemonic->else->fileNameLabel->setText->fileNameLabel->setDisplayedMnemonic
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#getFileChooser()::: synth file chooser accessor get file chooser:::return->SynthFileChooserUIImpl.this->getFileChooser
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#getModel()::: synth file chooser accessor get model:::return->SynthFileChooserUIImpl.this->getModel
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#createList()::: synth file chooser accessor create list:::return
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#createDetailsView()::: synth file chooser accessor create details view:::return
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#isDirectorySelected()::: synth file chooser accessor is directory selected:::return->SynthFileChooserUIImpl.this->isDirectorySelected
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#getDirectory()::: synth file chooser accessor get directory:::return->SynthFileChooserUIImpl.this->getDirectory
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#getChangeToParentDirectoryAction()::: synth file chooser accessor get change to parent directory action:::return->SynthFileChooserUIImpl.this->getChangeToParentDirectoryAction
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#getApproveSelectionAction()::: synth file chooser accessor get approve selection action:::return->SynthFileChooserUIImpl.this->getApproveSelectionAction
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#getNewFolderAction()::: synth file chooser accessor get new folder action:::return->SynthFileChooserUIImpl.this->getNewFolderAction
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#createDoubleClickListener(JList)::: synth file chooser accessor create double click listener:::return->SynthFileChooserUIImpl.this->getFileChooser->createDoubleClickListener
SynthFileChooserUIImpl.SynthFileChooserUIAccessor#createListSelectionListener()::: synth file chooser accessor create list selection listener:::return->SynthFileChooserUIImpl.this->getFileChooser->createListSelectionListener
SynthFileChooserUIImpl#installDefaults(JFileChooser)::: synth file chooser impl install defaults:::super->installDefaults->UIManager->getBoolean
SynthFileChooserUIImpl#installComponents(JFileChooser)::: synth file chooser impl install components:::super->installComponents->context->getContext->fc->new->BorderLayout->setLayout->topPanel->new->BorderLayout->new->JPanel->topButtonPanel->new->JPanel->topButtonPanel->new->BoxLayout->setLayout->topPanel->add->fc->add->new->JLabel->lookInLabel->setDisplayedMnemonic->topPanel->add->new->JComboBox<File>->directoryComboBox->getAccessibleContext->setAccessibleDescription->directoryComboBox->putClientProperty->lookInLabel->setLabelFor->createDirectoryComboBoxModel->directoryComboBox->setModel->directoryComboBox->addActionListener->directoryComboBox->createDirectoryComboBoxRenderer->setRenderer->directoryComboBox->setAlignmentX->directoryComboBox->setAlignmentY->directoryComboBox->setMaximumRowCount->topPanel->add->new->SynthFileChooserUIAccessor->new->FilePane->fc->addPropertyChangeListener->contextMenu->filePane->getComponentPopupMenu->if->contextMenu->getChangeToParentDirectoryAction->insert->if->contextMenu->getGoHomeAction->insert->fsv->fc->getFileSystemView->upFolderButton->getChangeToParentDirectoryAction->new->JButton->upFolderButton->setText->upFolderButton->setIcon->upFolderButton->setToolTipText->upFolderButton->getAccessibleContext->setAccessibleName->upFolderButton->setAlignmentX->upFolderButton->setAlignmentY->upFolderButton->setMargin->topButtonPanel->add->topButtonPanel->Box->createRigidArea->add->homeDir->fsv->getHomeDirectory->toolTipText->b->new->JButton->b->setToolTipText->b->getAccessibleContext->setAccessibleName->b->setAlignmentX->b->setAlignmentY->b->setMargin->b->getGoHomeAction->addActionListener->topButtonPanel->add->topButtonPanel->Box->createRigidArea->add->if->filePane->getNewFolderAction->new->JButton->b->setText->b->setIcon->b->setToolTipText->b->getAccessibleContext->setAccessibleName->b->setAlignmentX->b->setAlignmentY->b->setMargin->topButtonPanel->add->topButtonPanel->Box->createRigidArea->add->viewButtonGroup->new->ButtonGroup->new->JToggleButton->listViewButton->setToolTipText->listViewButton->getAccessibleContext->setAccessibleName->listViewButton->setSelected->listViewButton->setAlignmentX->listViewButton->setAlignmentY->listViewButton->setMargin->listViewButton->filePane->getViewTypeAction->addActionListener->topButtonPanel->add->viewButtonGroup->add->new->JToggleButton->detailsViewButton->setToolTipText->detailsViewButton->getAccessibleContext->setAccessibleName->detailsViewButton->setAlignmentX->detailsViewButton->setAlignmentY->detailsViewButton->setMargin->detailsViewButton->filePane->getViewTypeAction->addActionListener->topButtonPanel->add->viewButtonGroup->add->filePane->new->PropertyChangeListener->addPropertyChangeListener->fc->getAccessoryPanel->add->accessory->fc->getAccessory->if->getAccessoryPanel->add->filePane->setPreferredSize->fc->add->new->JPanel->bottomPanel->new->BoxLayout->setLayout->fc->add->fileNamePanel->new->JPanel->fileNamePanel->new->BoxLayout->setLayout->bottomPanel->add->bottomPanel->Box->new->Dimension->createRigidArea->add->new->AlignedLabel->populateFileNameLabel->fileNamePanel->add->new->JTextField->fileNamePanel->add->fileNameLabel->setLabelFor->fileNameTextField->new->FocusAdapter->addFocusListener->if->fc->isMultiSelectionEnabled->fc->getSelectedFiles->fileNameString->setFileName->else->fc->getSelectedFile->fileNameString->setFileName->filesOfTypePanel->new->JPanel->filesOfTypePanel->new->BoxLayout->setLayout->bottomPanel->add->filesOfTypeLabel->new->AlignedLabel->filesOfTypeLabel->setDisplayedMnemonic->filesOfTypePanel->add->createFilterComboBoxModel->fc->addPropertyChangeListener->new->JComboBox<FileFilter>->filterComboBox->getAccessibleContext->setAccessibleDescription->filesOfTypeLabel->setLabelFor->filterComboBox->createFilterComboBoxRenderer->setRenderer->filesOfTypePanel->add->new->JPanel->buttonPanel->new->ButtonAreaLayout->setLayout->buttonPanel->getApproveButton->add->buttonPanel->getCancelButton->add->if->fc->getControlButtonsAreShown->addControlButtons->new->AlignedLabelArr->groupLabels
SynthFileChooserUIImpl#installListeners(JFileChooser)::: synth file chooser impl install listeners:::super->installListeners->fc->addPropertyChangeListener
SynthFileChooserUIImpl#uninstallListeners(JFileChooser)::: synth file chooser impl uninstall listeners:::fc->removePropertyChangeListener->super->uninstallListeners
SynthFileChooserUIImpl#fileNameString(File)::: synth file chooser impl file name string:::if->return->else->fc->getFileChooser->if->fc->isDirectorySelectionEnabled->fc->isFileSelectionEnabled->return->file->getPath->else->return->file->getName
SynthFileChooserUIImpl#fileNameString(File[])::: synth file chooser impl file name string:::sb->new->StringBuilder->for->i->return->sb->toString
SynthFileChooserUIImpl#uninstallUI(JComponent)::: synth file chooser impl uninstall i:::c->removePropertyChangeListener->c->removePropertyChangeListener->if->filePane->uninstallUI->super->uninstallUI
SynthFileChooserUIImpl#installStrings(JFileChooser)::: synth file chooser impl install strings:::super->installStrings->l->fc->getLocale->getMnemonic->UIManager->getString->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->getMnemonic->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString->UIManager->getString
SynthFileChooserUIImpl#getMnemonic(String, Locale)::: synth file chooser impl get mnemonic:::return->SwingUtilities2->getUIDefaultsInt
SynthFileChooserUIImpl#getFileName()::: synth file chooser impl get file name:::if->return->fileNameTextField->getText->else->return
SynthFileChooserUIImpl#setFileName(String)::: synth file chooser impl set file name:::if->fileNameTextField->setText
SynthFileChooserUIImpl#rescanCurrentDirectory(JFileChooser)::: synth file chooser impl rescan current directory:::filePane->rescanCurrentDirectory
SynthFileChooserUIImpl#doSelectedFileChanged(PropertyChangeEvent)::: synth file chooser impl do selected file changed:::super->doSelectedFileChanged->f->e->getNewValue->fc->getFileChooser->if->fc->isFileSelectionEnabled->f->isDirectory->f->isDirectory->fc->isDirectorySelectionEnabled->fileNameString->setFileName
SynthFileChooserUIImpl#doSelectedFilesChanged(PropertyChangeEvent)::: synth file chooser impl do selected files changed:::super->doSelectedFilesChanged->files->e->getNewValue->fc->getFileChooser->if->fc->isDirectorySelectionEnabled->isDirectory->fileNameString->setFileName
SynthFileChooserUIImpl#doDirectoryChanged(PropertyChangeEvent)::: synth file chooser impl do directory changed:::super->doDirectoryChanged->fc->getFileChooser->fsv->fc->getFileSystemView->currentDirectory->fc->getCurrentDirectory->if->getNewFolderAction->filePane->canWrite->setEnabled->if->cb->getDirectoryComboBox->if->model->getModel->if->addItem->if->fc->isDirectorySelectionEnabled->fc->isFileSelectionEnabled->if->fsv->isFileSystem->currentDirectory->getPath->setFileName->else->setFileName
SynthFileChooserUIImpl#doFileSelectionModeChanged(PropertyChangeEvent)::: synth file chooser impl do file selection mode changed:::super->doFileSelectionModeChanged->fc->getFileChooser->currentDirectory->fc->getCurrentDirectory->if->fc->isDirectorySelectionEnabled->fc->isFileSelectionEnabled->fc->getFileSystemView->isFileSystem->currentDirectory->getPath->setFileName->else->setFileName
SynthFileChooserUIImpl#doAccessoryChanged(PropertyChangeEvent)::: synth file chooser impl do accessory changed:::if->getAccessoryPanel->if->e->getOldValue->getAccessoryPanel->e->getOldValue->remove->accessory->e->getNewValue->if->getAccessoryPanel->add
SynthFileChooserUIImpl#doControlButtonsChanged(PropertyChangeEvent)::: synth file chooser impl do control buttons changed:::super->doControlButtonsChanged->if->getFileChooser->getControlButtonsAreShown->addControlButtons->else->removeControlButtons
SynthFileChooserUIImpl#addControlButtons()::: synth file chooser impl add control buttons:::if->bottomPanel->add
SynthFileChooserUIImpl#removeControlButtons()::: synth file chooser impl remove control buttons:::if->bottomPanel->remove
SynthFileChooserUIImpl#createActionMap()::: synth file chooser impl create action map:::map->new->ActionMapUIResource->FilePane->filePane->getActions->addActionsToMap->map->getFileNameCompletionAction->put->return
SynthFileChooserUIImpl#getDirectoryComboBox()::: synth file chooser impl get directory combo box:::return
SynthFileChooserUIImpl#getDirectoryComboBoxAction()::: synth file chooser impl get directory combo box action:::return
SynthFileChooserUIImpl#createDirectoryComboBoxRenderer(JFileChooser)::: synth file chooser impl create directory combo box renderer:::return->directoryComboBox->getRenderer->new->DirectoryComboBoxRenderer
SynthFileChooserUIImpl.DirectoryComboBoxRenderer#getListCellRendererComponent(JList, File, int, boolean, boolean)::: directory combo box renderer get list cell renderer component:::c->delegate->getListCellRendererComponent->label->if->label->setText->return->label->getFileChooser->getName->setText->icon->getFileChooser->getIcon->directoryComboBoxModel->getDepth->label->setIcon->return
SynthFileChooserUIImpl.IndentIcon#paintIcon(Component, Graphics, int, int)::: indent icon paint icon:::if->if->c->getComponentOrientation->isLeftToRight->icon->paintIcon->else->icon->paintIcon
SynthFileChooserUIImpl.IndentIcon#getIconWidth()::: indent icon get icon width:::return->icon->getIconWidth
SynthFileChooserUIImpl.IndentIcon#getIconHeight()::: indent icon get icon height:::return->icon->getIconHeight
SynthFileChooserUIImpl#createDirectoryComboBoxModel(JFileChooser)::: synth file chooser impl create directory combo box model:::return->new->DirectoryComboBoxModel
SynthFileChooserUIImpl.DirectoryComboBoxModel#addItem(File):::Adds the directory to the model and sets it to be selected, additionally clears out the previous selected directory and the paths leading up to it, if any.:::if->return->useShellFolder->FilePane->usesShellFolder->oldSize->directories->size->directories->clear->if->fireIntervalRemoved->baseFolders->ShellFolder->get->fsv->getRoots->directories->Arrays->asList->addAll->canonical->try->ShellFolder->getNormalizedFile->catch->finally->try->sf->ShellFolder->getShellFolder->f->path->new->Vector<File>->do->path->addElement->while->f->getParentFile->pathCount->path->size->for->i->calculateDepths->setSelectedItem->catch->calculateDepths->finally
SynthFileChooserUIImpl.DirectoryComboBoxModel#calculateDepths()::: directory combo box model calculate depths:::directories->size->new->intArr->for->i
SynthFileChooserUIImpl.DirectoryComboBoxModel#getDepth(int)::: directory combo box model get depth:::return
SynthFileChooserUIImpl.DirectoryComboBoxModel#setSelectedItem(Object)::: directory combo box model set selected item:::fireContentsChanged
SynthFileChooserUIImpl.DirectoryComboBoxModel#getSelectedItem()::: directory combo box model get selected item:::return
SynthFileChooserUIImpl.DirectoryComboBoxModel#getSize()::: directory combo box model get size:::return->directories->size
SynthFileChooserUIImpl.DirectoryComboBoxModel#getElementAt(int)::: directory combo box model get element at:::return->directories->elementAt
SynthFileChooserUIImpl.DirectoryComboBoxAction#actionPerformed(ActionEvent)::: directory combo box action action performed:::directoryComboBox->hidePopup->cb->getDirectoryComboBox->if->f->getSelectedItem->getFileChooser->setCurrentDirectory
SynthFileChooserUIImpl#createFilterComboBoxRenderer()::: synth file chooser impl create filter combo box renderer:::return->filterComboBox->getRenderer->new->FilterComboBoxRenderer
SynthFileChooserUIImpl.FilterComboBoxRenderer#getListCellRendererComponent(JList, FileFilter, int, boolean, boolean)::: filter combo box renderer get list cell renderer component:::c->delegate->getListCellRendererComponent->text->if->value->getDescription->if->setText->return
SynthFileChooserUIImpl#createFilterComboBoxModel()::: synth file chooser impl create filter combo box model:::return->new->FilterComboBoxModel
SynthFileChooserUIImpl.FilterComboBoxModel#propertyChange(PropertyChangeEvent)::: filter combo box model property change:::prop->e->getPropertyName->if->e->getNewValue->fireContentsChanged->else->if->fireContentsChanged
SynthFileChooserUIImpl.FilterComboBoxModel#setSelectedItem(Object)::: filter combo box model set selected item:::if->getFileChooser->setFileFilter->fireContentsChanged
SynthFileChooserUIImpl.FilterComboBoxModel#getSelectedItem()::: filter combo box model get selected item:::currentFilter->getFileChooser->getFileFilter->found->if->foreach->if->if->getFileChooser->addChoosableFileFilter->return->getFileChooser->getFileFilter
SynthFileChooserUIImpl.FilterComboBoxModel#getSize()::: filter combo box model get size:::if->return->else->return
SynthFileChooserUIImpl.FilterComboBoxModel#getElementAt(int)::: filter combo box model get element at:::if->getSize->return->getFileChooser->getFileFilter->if->return->else->return
SynthFileChooserUIImpl.ButtonAreaLayout#addLayoutComponent(String, Component)::: button area layout add layout component:::
SynthFileChooserUIImpl.ButtonAreaLayout#layoutContainer(Container)::: button area layout layout container:::children->container->getComponents->if->numChildren->sizes->new->DimensionArr->insets->container->getInsets->yLocation->maxWidth->for->counter->xLocation->xOffset->if->container->getComponentOrientation->isLeftToRight->container->getSize->else->for->counter
SynthFileChooserUIImpl.ButtonAreaLayout#minimumLayoutSize(Container)::: button area layout minimum layout size:::if->children->c->getComponents->if->numChildren->height->cInsets->c->getInsets->extraHeight->extraWidth->maxWidth->for->counter->return->new->Dimension->return->new->Dimension
SynthFileChooserUIImpl.ButtonAreaLayout#preferredLayoutSize(Container)::: button area layout preferred layout size:::return->minimumLayoutSize
SynthFileChooserUIImpl.ButtonAreaLayout#removeLayoutComponent(Component)::: button area layout remove layout component:::
SynthFileChooserUIImpl#groupLabels(AlignedLabel[])::: synth file chooser impl group labels:::for->i
SynthFileChooserUIImpl.AlignedLabel#getPreferredSize()::: aligned label get preferred size:::d->super->getPreferredSize->return->getMaxWidth->new->Dimension
SynthFileChooserUIImpl.AlignedLabel#getMaxWidth()::: aligned label get max width:::if->max->for->i->for->i->return
SynthFileChooserUIImpl.AlignedLabel#getSuperPreferredWidth()::: aligned label get super preferred width:::return->super->getPreferredSize
