sun.jvm.hotspot.gc.shared.CollectedHeap#start()->Address:::Returns the lowest address of the heap.
sun.jvm.hotspot.gc.shared.CollectedHeap#capacity()->long::: collected heap capacity
sun.jvm.hotspot.gc.shared.CollectedHeap#used()->long::: collected heap used
sun.jvm.hotspot.gc.shared.CollectedHeap#reservedRegion()->MemRegion::: collected heap reserved region
sun.jvm.hotspot.gc.shared.CollectedHeap#isIn(Address)->boolean::: collected heap is in
sun.jvm.hotspot.gc.shared.CollectedHeap#isInReserved(Address)->boolean::: collected heap is in reserved
sun.jvm.hotspot.gc.shared.CollectedHeap#kind()->CollectedHeapName::: collected heap kind
sun.jvm.hotspot.gc.shared.CollectedHeap#oopAddressDescription(OopHandle)->String::: collected heap oop address description
sun.jvm.hotspot.gc.shared.CollectedHeap#oop_load_at(OopHandle, long)->OopHandle::: collected heap oop_load_at
sun.jvm.hotspot.gc.shared.CollectedHeap#print()->void::: collected heap print
sun.jvm.hotspot.gc.shared.CollectedHeap#printOn(PrintStream)->void::: collected heap print on
sun.jvm.hotspot.gc.shared.CollectedHeapName#toString()->String::: collected heap name to string
sun.jvm.hotspot.gc.shared.CompactibleSpace#compactionTop()->Address:::May be used temporarily during a compaction phase.
sun.jvm.hotspot.gc.shared.ContiguousSpace#top()->Address::: contiguous space top
sun.jvm.hotspot.gc.shared.ContiguousSpace#capacity()->long:::In bytes
sun.jvm.hotspot.gc.shared.ContiguousSpace#used()->long:::In bytes
sun.jvm.hotspot.gc.shared.ContiguousSpace#free()->long:::In bytes
sun.jvm.hotspot.gc.shared.ContiguousSpace#usedRegion()->MemRegion:::In a contiguous space we have a more obvious bound on what parts       contain objects.
sun.jvm.hotspot.gc.shared.ContiguousSpace#getLiveRegions()->List:::Returns regions of Space where live objects live
sun.jvm.hotspot.gc.shared.ContiguousSpace#contains(Address)->boolean:::Testers
sun.jvm.hotspot.gc.shared.ContiguousSpace#printOn(PrintStream)->void::: contiguous space print on
sun.jvm.hotspot.gc.shared.GenCollectedHeap#nGens()->int::: gen collected heap n gens
sun.jvm.hotspot.gc.shared.GenCollectedHeap#getGen(int)->Generation::: gen collected heap get gen
sun.jvm.hotspot.gc.shared.GenCollectedHeap#isIn(Address)->boolean::: gen collected heap is in
sun.jvm.hotspot.gc.shared.GenCollectedHeap#capacity()->long::: gen collected heap capacity
sun.jvm.hotspot.gc.shared.GenCollectedHeap#used()->long::: gen collected heap used
sun.jvm.hotspot.gc.shared.GenCollectedHeap#spec(int)->GenerationSpec:::Package-private access to GenerationSpecs
sun.jvm.hotspot.gc.shared.GenCollectedHeap#printOn(PrintStream)->void::: gen collected heap print on
sun.jvm.hotspot.gc.shared.Generation.Name#toString()->String::: name to string
sun.jvm.hotspot.gc.shared.Generation#kind()->Generation.Name::: generation kind
sun.jvm.hotspot.gc.shared.Generation#nameForEnum(int)->Generation.Name::: generation name for enum
sun.jvm.hotspot.gc.shared.Generation#invocations()->int::: generation invocations
sun.jvm.hotspot.gc.shared.Generation#capacity()->long:::The maximum number of object bytes the generation can currently       hold.
sun.jvm.hotspot.gc.shared.Generation#used()->long:::The number of used bytes in the gen.
sun.jvm.hotspot.gc.shared.Generation#free()->long:::The number of free bytes in the gen.
sun.jvm.hotspot.gc.shared.Generation#contiguousAvailable()->long:::The largest number of contiguous free words in the generation,       including expansion
sun.jvm.hotspot.gc.shared.Generation#reserved()->MemRegion::: generation reserved
sun.jvm.hotspot.gc.shared.Generation#usedRegion()->MemRegion:::Returns a region guaranteed to contain all the objects in the       generation.
sun.jvm.hotspot.gc.shared.Generation#isIn(Address)->boolean::: generation is in
sun.jvm.hotspot.gc.shared.Generation#isInReserved(Address)->boolean:::Returns "TRUE" iff "p" points into the reserved area of the      generation.
sun.jvm.hotspot.gc.shared.Generation#virtualSpace()->VirtualSpace::: generation virtual space
sun.jvm.hotspot.gc.shared.Generation#name()->String::: generation name
sun.jvm.hotspot.gc.shared.Generation#spaceIterate(SpaceClosure)->void:::Equivalent to spaceIterate(blk, false)
sun.jvm.hotspot.gc.shared.Generation#spaceIterate(SpaceClosure, boolean)->void:::Iteration - do not use for time critical operations
sun.jvm.hotspot.gc.shared.Generation#print()->void::: generation print
sun.jvm.hotspot.gc.shared.Generation#printOn(PrintStream)->void::: generation print on
sun.jvm.hotspot.gc.shared.Generation.StatRecord#getInvocations()->int::: stat record get invocations
sun.jvm.hotspot.gc.shared.GenerationFactory#newObject(Address)->Generation::: generation factory new object
sun.jvm.hotspot.gc.shared.GenerationIsInClosure#doSpace(Space)->void::: generation is in closure do space
sun.jvm.hotspot.gc.shared.GenerationIsInClosure#space()->Space::: generation is in closure space
sun.jvm.hotspot.gc.shared.GenerationSpec#name()->Generation.Name::: generation spec name
sun.jvm.hotspot.gc.shared.GenerationSpec#initSize()->long::: generation spec init size
sun.jvm.hotspot.gc.shared.GenerationSpec#maxSize()->long::: generation spec max size
sun.jvm.hotspot.gc.shared.OopStorage#findOop(Address)->boolean::: oop storage find oop
sun.jvm.hotspot.gc.shared.OopStorage#oopsDo(AddressVisitor)->void::: oop storage oops do
sun.jvm.hotspot.gc.shared.PrintRegionClosure#doSpace(Space)->void::: print region closure do space
sun.jvm.hotspot.gc.shared.Space#bottom()->Address::: space bottom
sun.jvm.hotspot.gc.shared.Space#end()->Address::: space end
sun.jvm.hotspot.gc.shared.Space#usedRegion()->MemRegion:::Returns a subregion of the space containing all the objects in       the space.
sun.jvm.hotspot.gc.shared.Space#bottomAsOopHandle()->OopHandle:::Support for iteration over heap -- not sure how this will       interact with GC in reflective system, but necessary for the       debugging mechanism
sun.jvm.hotspot.gc.shared.Space#nextOopHandle(OopHandle, long)->OopHandle:::Support for iteration over heap -- not sure how this will       interact with GC in reflective system, but necessary for the       debugging mechanism
sun.jvm.hotspot.gc.shared.Space#getLiveRegions()->List:::returns all MemRegions where live objects are
sun.jvm.hotspot.gc.shared.Space#capacity()->long:::Returned value is in bytes
sun.jvm.hotspot.gc.shared.Space#used()->long:::Returned value is in bytes
sun.jvm.hotspot.gc.shared.Space#free()->long:::Returned value is in bytes
sun.jvm.hotspot.gc.shared.Space#contains(Address)->boolean:::Testers
sun.jvm.hotspot.gc.shared.Space#print()->void::: space print
sun.jvm.hotspot.gc.shared.Space#printOn(PrintStream)->void::: space print on
sun.jvm.hotspot.gc.shared.SpaceClosure#doSpace(Space)->void::: space closure do space
