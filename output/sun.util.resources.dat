BreakIteratorResourceBundle#getBreakIteratorInfo():::Returns an instance of the corresponding BreakIteratorInfo (basename):::
Bundles.Strategy#getCandidateLocales(String, Locale):::Returns a list of locales to be looked up for bundle loading.:::
Bundles.Strategy#toBundleName(String, Locale):::Returns the bundle name for the given baseName and locale.:::
Bundles.Strategy#getResourceBundleProviderType(String, Locale):::Returns the service provider type for the given baseName and locale, or null if no service providers should be used.:::
LocaleData#getCalendarData(Locale):::Gets a calendar data resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getUtilResourcesPackage->getBundle
LocaleData#getCurrencyNames(Locale):::Gets a currency names resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getUtilResourcesPackage->getBundle
LocaleData#getLocaleNames(Locale):::Gets a locale names resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getUtilResourcesPackage->getBundle
LocaleData#getTimeZoneNames(Locale):::Gets a time zone names resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getUtilResourcesPackage->getBundle
LocaleData#getBreakIteratorInfo(Locale):::Gets a break iterator info resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getTextResourcesPackage->getBundle
LocaleData#getBreakIteratorResources(Locale):::Gets a break iterator resources resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getTextResourcesPackage->getBundle
LocaleData#getCollationData(Locale):::Gets a collation data resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getTextResourcesPackage->getBundle
LocaleData#getDateFormatData(Locale):::Gets a date format data resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getTextResourcesPackage->getBundle
LocaleData#getNumberFormatData(Locale):::Gets a number format data resource bundle, using privileges to allow accessing a sun.* package.:::return->type->getTextResourcesPackage->getBundle
OpenListResourceBundle#getKeys():::Implementation of ResourceBundle.getKeys.:::parentBundle->return->handleKeySet->parentBundle->getKeys->new->ResourceBundleEnumeration
OpenListResourceBundle#handleKeySet():::Returns a set of keys provided in this resource bundle, including no parents.:::loadLookupTablesIfNecessary->return->lookup->keySet
OpenListResourceBundle#getContents():::See ListResourceBundle class description.:::
OpenListResourceBundle#loadLookupTablesIfNecessary():::Load lookup tables if they haven't been loaded already.:::if->loadLookup
OpenListResourceBundle#createMap(int):::Lets subclasses provide specialized Map implementations:::return->new->HashMap<>
ParallelListResourceBundle#getContents():::Returns an array in which each item is a pair of objects in an Object array:::
ParallelListResourceBundle#getParent():::Returns the parent of this resource bundle or null if there's no parent.:::return
ParallelListResourceBundle#setParallelContents(OpenListResourceBundle):::Sets the parallel contents to the data given by rb:::if->parallelContents->compareAndSet->else->parallelContents->rb->getContents->compareAndSet
ParallelListResourceBundle#areParallelContentsComplete():::Returns true if any parallel contents have been set or if this bundle is marked as complete.:::if->parallelContents->isMarked->return->done->new->booleanArr->data->parallelContents->get->return
ParallelListResourceBundle#resetKeySet():::Discards any cached keyset value:::
ParallelListResourceBundle#loadLookupTablesIfNecessary():::Loads the lookup table if they haven't been loaded already.:::map->if->new->ConcurrentHashMap<>->foreach->getContents->map->put->data->parallelContents->getReference->if->foreach->map->putIfAbsent->parallelContents->set->if->synchronized->if
TimeZoneNamesBundle#handleGetObject(String):::Maps time zone IDs to locale-specific names:::val->super->handleGetObject->if->contents->clen->tmpobj->new->StringArr->System->arraycopy->return->return
TimeZoneNamesBundle#createMap(int):::Use LinkedHashMap to preserve the order of bundle entries.:::return->new->LinkedHashMap<>
TimeZoneNamesBundle#createSet():::Use LinkedHashSet to preserve the key order.:::return->new->LinkedHashSet<>
TimeZoneNamesBundle#getContents():::Provides key/value mappings for a specific resource bundle:::
