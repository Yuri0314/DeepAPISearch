DOM3SerializerImpl#getErrorHandler():::Returns a DOMErrorHandler set on the DOM Level 3 Serializer:::return
DOM3SerializerImpl#getNodeFilter():::Returns a LSSerializerFilter set on the DOM Level 3 Serializer to filter nodes during serialization:::return
DOM3SerializerImpl#serializeDOM3(Node):::Serializes the Level 3 DOM node by creating an instance of DOM3TreeWalker which traverses the DOM tree and invokes handler events to serialize the DOM NOde:::try->walker->new->DOM3TreeWalker->walker->traverse->catch->throw->new->WrappedRuntimeException->finally
DOM3SerializerImpl#setErrorHandler(DOMErrorHandler):::Sets a DOMErrorHandler on the DOM Level 3 Serializer:::
DOM3SerializerImpl#setNodeFilter(LSSerializerFilter):::Sets a LSSerializerFilter on the DOM Level 3 Serializer to filter nodes during serialization:::
DOM3SerializerImpl#setSerializationHandler(SerializationHandler):::Sets a SerializationHandler on the DOM Serializer:::
DOM3SerializerImpl#setNewLine(String):::Sets the new line character to be used during serialization:::
DOM3TreeWalker#traverse(Node):::Perform a pre-order traversal non-recursive style:::startDocument->if->pos->getNodeType->ownerDoc->pos->getOwnerDocument->if->ownerDoc->getImplementation->hasFeature->else->if->getImplementation->hasFeature->if->if->fFilter->getWhatToShow->top->while->startNode->nextNode->pos->getFirstChild->while->endNode->if->top->equals->break->pos->getNextSibling->if->pos->getParentNode->if->top->equals->if->endNode->break->endDocument
DOM3TreeWalker#traverse(Node, Node):::Perform a pre-order traversal non-recursive style:::startDocument->if->pos->getNodeType->ownerDoc->pos->getOwnerDocument->if->ownerDoc->getImplementation->hasFeature->else->if->getImplementation->hasFeature->if->if->fFilter->getWhatToShow->while->startNode->nextNode->pos->getFirstChild->while->endNode->if->top->equals->break->pos->getNextSibling->if->pos->getParentNode->if->top->equals->break->endDocument
DOM3TreeWalker#startNode(Node):::Start processing given node:::if->loc->fLocator->loc->getColumnNumber->setColumnNumber->fLocator->loc->getLineNumber->setLineNumber->fLocator->loc->getPublicId->setPublicId->fLocator->loc->getSystemId->setSystemId->else->fLocator->setColumnNumber->fLocator->setLineNumber->switch->node->getNodeType->serializeDocType->break->serializeComment->break->break->break->serializeElement->break->serializePI->break->serializeCDATASection->break->serializeText->break->serializeEntityReference->break
DOM3TreeWalker#endNode(Node):::End processing of given node:::switch->node->getNodeType->break->serializeDocType->break->serializeElement->break->break->serializeEntityReference->break
DOM3TreeWalker#applyFilter(Node, int):::Applies a filter on the node to serialize:::if->code->fFilter->acceptNode->switch->return->return
DOM3TreeWalker#serializeDocType(DocumentType, boolean):::Serializes a Document Type Node.:::docTypeName->node->getNodeName->publicId->node->getPublicId->systemId->node->getSystemId->internalSubset->node->getInternalSubset->if->equals->if->try->writer->fSerializer->getWriter->dtd->new->StringBuffer->dtd->append->dtd->append->if->dtd->append->dtd->append->dtd->append->if->if->dtd->append->else->dtd->append->dtd->append->dtd->append->dtd->append->dtd->append->dtd->append->dtd->append->dtd->append->writer->dtd->toString->write->writer->flush->catch->throw->createMessage->new->SAXException->finally->else->if->if->fLexicalHandler->startDTD->else->if->fLexicalHandler->endDTD
DOM3TreeWalker#serializeComment(Comment):::Serializes a Comment Node.:::if->data->node->getData->if->isCommentWellFormed->if->if->applyFilter->return->fLexicalHandler->data->toCharArray->data->length->comment
DOM3TreeWalker#serializeElement(Element, boolean):::Serializes an Element Node.:::if->if->isElementWellFormed->if->applyFilter->return->if->fNSBinder->pushContext->fLocalNSBinder->reset->recordLocalNSDecl->fixupElementNS->fSerializer->node->getNamespaceURI->node->getLocalName->node->getNodeName->startElement->serializeAttList->else->if->applyFilter->return->node->getNamespaceURI->node->getLocalName->node->getNodeName->endElement->if->fNSBinder->popContext
DOM3TreeWalker#serializeAttList(Element):::Serializes the Attr Nodes of an Element.:::atts->node->getAttributes->nAttrs->atts->getLength->for->i
DOM3TreeWalker#serializePI(ProcessingInstruction):::Serializes an ProcessingInstruction Node.:::pi->name->pi->getNodeName->if->isPIWellFormed->if->applyFilter->return->if->name->equals->else->pi->getData->processingInstruction
DOM3TreeWalker#serializeCDATASection(CDATASection):::Serializes an CDATASection Node.:::if->isCDATASectionWellFormed->if->nodeValue->node->getNodeValue->endIndex->nodeValue->indexOf->if->if->relatedData->nodeValue->substring->msg->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->else->if->relatedData->nodeValue->substring->msg->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->return->if->applyFilter->return->if->fLexicalHandler->startCDATA->dispatachChars->if->fLexicalHandler->endCDATA->else->dispatachChars
DOM3TreeWalker#serializeText(Text):::Serializes an Text Node.:::if->fSerializer->processingInstruction->dispatachChars->fSerializer->processingInstruction->else->bDispatch->if->isTextWellFormed->isElementContentWhitespace->if->node->isElementContentWhitespace->if->if->else->if->applyFilter->return->if->fSerializer->getIndent->node->getData->replace->trim->isEmpty->dispatachChars
DOM3TreeWalker#serializeEntityReference(EntityReference, boolean):::Serializes an EntityReference Node.:::if->eref->if->if->isEntityReferneceWellFormed->if->checkUnboundPrefixInEntRef->if->node->hasChildNodes->fLexicalHandler->eref->getNodeName->startEntity->else->eref->if->fLexicalHandler->eref->getNodeName->endEntity
DOM3TreeWalker#isXMLName(String, boolean):::Taken from org.apache.xerces.dom.CoreDocumentImpl  Check the string against XML's definition of acceptable names for elements and attributes and so on using the XMLCharacterProperties utility class:::if->return->if->return->XMLChar->isValidName->else->return->XML11Char->isXML11ValidName
DOM3TreeWalker#isValidQName(String, String, boolean):::Taken from org.apache.xerces.dom.CoreDocumentImpl  Checks if the given qualified name is legal with respect to the version of XML to which this document must conform.:::if->return->validNCName->if->XMLChar->isValidNCName->XMLChar->isValidNCName->else->XML11Char->isXML11ValidNCName->XML11Char->isXML11ValidNCName->return
DOM3TreeWalker#isWFXMLChar(String, Character):::Checks if a XML character is well-formed:::if->chardata->length->return->dataarray->chardata->toCharArray->datalength->if->i->while->if->XML11Char->isXML11Invalid->ch->if->XMLChar->isHighSurrogate->ch2->if->XMLChar->isLowSurrogate->XMLChar->XMLChar->supplemental->isSupplemental->continue->return->else->i->while->if->XMLChar->isInvalid->ch->if->XMLChar->isHighSurrogate->ch2->if->XMLChar->isLowSurrogate->XMLChar->XMLChar->supplemental->isSupplemental->continue->return->return
DOM3TreeWalker#isWFXMLChar(String):::Checks if a XML character is well-formed:::refInvalidChar->if->chardata->length->return->dataarray->chardata->toCharArray->datalength->if->i->while->if->XML11Char->isXML11Invalid->ch->if->XMLChar->isHighSurrogate->ch2->if->XMLChar->isLowSurrogate->XMLChar->XMLChar->supplemental->isSupplemental->continue->return->else->i->while->if->XMLChar->isInvalid->ch->if->XMLChar->isHighSurrogate->ch2->if->XMLChar->isLowSurrogate->XMLChar->XMLChar->supplemental->isSupplemental->continue->return->return
DOM3TreeWalker#isCommentWellFormed(String):::Checks if a comment node is well-formed:::if->data->length->return->dataarray->data->toCharArray->datalength->if->i->while->c->if->XML11Char->isXML11Invalid->if->XMLChar->isHighSurrogate->c2->if->XMLChar->isLowSurrogate->XMLChar->XMLChar->supplemental->isSupplemental->continue->msg->new->ObjectArr->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->else->if->msg->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->else->i->while->c->if->XMLChar->isInvalid->if->XMLChar->isHighSurrogate->c2->if->XMLChar->isLowSurrogate->XMLChar->XMLChar->supplemental->isSupplemental->continue->msg->new->ObjectArr->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->else->if->msg->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->return
DOM3TreeWalker#isElementWellFormed(Node):::Checks if an element node is well-formed, by checking its Name for well-formedness.:::isNameWF->if->node->getPrefix->node->getLocalName->isValidQName->else->node->getNodeName->isXMLName->if->msg->new->ObjectArr->node->getNodeName->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError
DOM3TreeWalker#isAttributeWellFormed(Node):::Checks if an attr node is well-formed, by checking it's Name and value for well-formedness.:::isNameWF->if->node->getPrefix->node->getLocalName->isValidQName->else->node->getNodeName->isXMLName->if->msg->new->ObjectArr->node->getNodeName->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->value->node->getNodeValue->if->value->indexOf->msg->new->ObjectArr->getOwnerElement->getNodeName->node->getNodeName->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->children->node->getChildNodes->for->i->children->getLength
DOM3TreeWalker#isPIWellFormed(ProcessingInstruction):::Checks if a PI node is well-formed, by checking it's Name and data for well-formedness.:::if->node->getNodeName->isXMLName->msg->new->ObjectArr->node->getTarget->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->invalidChar->node->getData->isWFXMLChar->if->msg->new->ObjectArr->Integer->Character->invalidChar->charValue->getNumericValue->toHexString->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError
DOM3TreeWalker#isCDATASectionWellFormed(CDATASection):::Checks if an CDATASection node is well-formed, by checking it's data for well-formedness:::invalidChar->node->getData->isWFXMLChar->if->msg->new->ObjectArr->Integer->Character->invalidChar->charValue->getNumericValue->toHexString->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError
DOM3TreeWalker#isTextWellFormed(Text):::Checks if an Text node is well-formed, by checking if it contains invalid XML characters.:::invalidChar->node->getData->isWFXMLChar->if->msg->new->ObjectArr->Integer->Character->invalidChar->charValue->getNumericValue->toHexString->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError
DOM3TreeWalker#isEntityReferneceWellFormed(EntityReference):::Checks if an EntityRefernece node is well-formed, by checking it's node name:::if->node->getNodeName->isXMLName->msg->new->ObjectArr->node->getNodeName->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->parent->node->getParentNode->docType->node->getOwnerDocument->getDoctype->if->entities->docType->getEntities->for->i->entities->getLength
DOM3TreeWalker#checkUnboundPrefixInEntRef(Node):::If the configuration parameter "namespaces" is set to true, this methods checks if an entity whose replacement text contains unbound namespace prefixes is referenced in a location where there are no bindings for the namespace prefixes and if so raises a LSException with the error-type "unbound-prefix-in-entity-reference":::child->next->for->node->getFirstChild
DOM3TreeWalker#recordLocalNSDecl(Node):::Records local namespace declarations, to be used for normalization later:::atts->getAttributes->length->atts->getLength->for->i
DOM3TreeWalker#fixupElementNS(Node):::Fixes an element's namespace:::namespaceURI->getNamespaceURI->prefix->getPrefix->localName->getLocalName->if->inScopeNamespaceURI->fNSBinder->getURI->if->inScopeNamespaceURI->equals->else->if->if->equals->equals->setAttributeNS->else->setAttributeNS->fLocalNSBinder->declarePrefix->fNSBinder->declarePrefix->else->if->equals->msg->new->ObjectArr->node->getNodeName->createMessage->if->fErrorHandler->new->DOMErrorImpl->handleError->else->fNSBinder->getURI->if->namespaceURI->length->setAttributeNS->fLocalNSBinder->declarePrefix->fNSBinder->declarePrefix
DOM3TreeWalker#initProperties(Properties):::Initializes fFeatures based on the DOMConfiguration Parameters set.:::foreach->properties->stringPropertyNames->bitFlag->fFeatureMap->get->if->if->properties->getProperty->endsWith->else->else->if->equals->if->properties->getProperty->endsWith->fSerializer->setIndent->fSerializer->setIndentAmount->else->fSerializer->setIndent->else->if->equals->if->properties->getProperty->endsWith->fSerializer->setOmitXMLDeclaration->else->fSerializer->setOmitXMLDeclaration->else->if->equals->version->properties->getProperty->if->equals->fSerializer->setVersion->else->fSerializer->setVersion->else->if->equals->encoding->properties->getProperty->if->fSerializer->setEncoding->else->if->equals->entities->properties->getProperty->if->equals->fSerializer->setDTDEntityExpansion->if->fSerializer->setOutputProperty
DOMErrorHandlerImpl#handleError(DOMError):::Implementation of DOMErrorHandler.handleError that adds copy of error to list for later retrieval.:::fail->severity->if->error->getSeverity->else->if->error->getSeverity->else->if->error->getSeverity->error->getMessage->println->error->getType->error->getRelatedData->error->getRelatedException->println->return
DOMErrorImpl#getSeverity():::The severity of the error, either SEVERITY_WARNING, SEVERITY_ERROR, or SEVERITY_FATAL_ERROR.:::return
DOMErrorImpl#getMessage():::The DOMError message string.:::return
DOMErrorImpl#getLocation():::The location of the DOMError.:::return
DOMErrorImpl#getRelatedException():::The related platform dependent exception if any.:::return
DOMErrorImpl#getType():::Returns a String indicating which related data is expected in relatedData.:::return
DOMErrorImpl#getRelatedData():::The related DOMError.type dependent data if any.:::return
DOMLocatorImpl#getLineNumber():::The line number where the error occured, or -1 if there is no line number available.:::return
DOMLocatorImpl#getColumnNumber():::The column number where the error occured, or -1 if there is no column number available.:::return
DOMLocatorImpl#getUri():::The URI where the error occured, or null if there is no URI available.:::return
DOMLocatorImpl#getByteOffset():::The byte offset into the input source this locator is pointing to or -1 if there is no byte offset available:::return
DOMLocatorImpl#getUtf16Offset():::The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], offset into the input source this locator is pointing to or -1 if there is no UTF-16 offset available.:::return
DOMStringListImpl#add(String):::DOM Internal: Add a DOMString to the list.:::fStrings->add
LSSerializerImpl#initializeSerializerProps():::Initializes the underlying serializer's configuration depending on the default DOMConfiguration parameters:::fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->if->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->Integer->toString->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty
LSSerializerImpl#canSetParameter(String, Object):::Checks if setting a parameter to a specific value is supported.:::if->if->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->return->booleanValue->else->if->name->equalsIgnoreCase->return->booleanValue->else->if->name->equalsIgnoreCase->return->return
LSSerializerImpl#getParameter(String):::This method returns the value of a parameter if known.:::if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->if->return->return->else->if->name->equalsIgnoreCase->return->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->return->else->msg->new->ObjectArr->createMessage->throw->new->DOMException
LSSerializerImpl#getParameterNames():::This method returns a of the parameters supported by this DOMConfiguration object and for which at least one value can be set by the application:::return->new->DOMStringListImpl
LSSerializerImpl#setParameter(String, Object):::This method sets the value of the named parameter.:::if->state->booleanValue->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->fDOMConfigProperties->Integer->toString->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->msg->new->ObjectArr->createMessage->throw->new->DOMException->else->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->if->msg->new->ObjectArr->createMessage->throw->new->DOMException->else->if->name->equalsIgnoreCase->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->if->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->else->if->name->equalsIgnoreCase->msg->new->ObjectArr->createMessage->throw->new->DOMException->else->else->if->name->equalsIgnoreCase->if->else->msg->new->ObjectArr->createMessage->throw->new->DOMException->else->if->name->equalsIgnoreCase->name->equalsIgnoreCase->name->equalsIgnoreCase->msg->new->ObjectArr->createMessage->throw->new->DOMException->else->msg->new->ObjectArr->createMessage->throw->new->DOMException
LSSerializerImpl#getDomConfig():::Returns the DOMConfiguration of the LSSerializer.:::return
LSSerializerImpl#getFilter():::Returns the DOMConfiguration of the LSSerializer.:::return
LSSerializerImpl#getNewLine():::Returns the End-Of-Line sequence of characters to be used in the XML being serialized:::return
LSSerializerImpl#setFilter(LSSerializerFilter):::Set a LSSerilizerFilter on the LSSerializer:::
LSSerializerImpl#setNewLine(String):::Sets the End-Of-Line sequence of characters to be used in the XML being serialized:::
LSSerializerImpl#write(Node, LSOutput):::Serializes the specified node to the specified LSOutput and returns true if the Node was successfully serialized.:::if->msg->createMessage->if->fDOMErrorHandler->new->DOMErrorImpl->handleError->throw->new->LSException->if->return->serializer->serializer->reset->if->xmlVersion->getXMLVersion->destination->getEncoding->if->getInputEncoding->getXMLEncoding->getXMLEncoding->if->Encodings->isRecognizedEncoding->msg->createMessage->if->fDOMErrorHandler->new->DOMErrorImpl->handleError->throw->new->LSException->serializer->getOutputFormat->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->if->nodeArg->getNodeType->nodeArg->getNodeType->nodeArg->getNodeType->fDOMConfigProperties->setProperty->fXMLSerializer->setOutputFormat->try->writer->destination->getCharacterStream->if->outputStream->destination->getByteStream->if->uri->destination->getSystemId->if->msg->createMessage->if->fDOMErrorHandler->new->DOMErrorImpl->handleError->throw->new->LSException->else->absoluteURI->SystemIDResolver->getAbsoluteURI->url->new->URL->urlOutStream->protocol->url->getProtocol->host->url->getHost->if->protocol->equalsIgnoreCase->host->length->host->equals->url->getPath->new->File->new->FileOutputStream->else->urlCon->url->openConnection->urlCon->setDoInput->urlCon->setDoOutput->urlCon->setUseCaches->urlCon->setAllowUserInteraction->if->httpCon->httpCon->setRequestMethod->urlCon->getOutputStream->serializer->new->OutputStreamWriter->setWriter->else->serializer->new->OutputStreamWriter->setWriter->else->serializer->setWriter->if->serializer->asDOM3Serializer->if->fDOMSerializer->setErrorHandler->if->fDOMSerializer->setNodeFilter->fDOMSerializer->setNewLine->fDOMSerializer->serializeDOM3->catch->msg->createMessage->if->fDOMErrorHandler->new->DOMErrorImpl->handleError->throw->ue->getMessage->new->LSException->throw->e->printStackTrace->throw->e->getMessage->new->LSException->if->fDOMErrorHandler->e->getMessage->new->DOMErrorImpl->handleError->e->printStackTrace->throw->e->toString->new->LSException->finally->return
LSSerializerImpl#writeToString(Node):::Serializes the specified node and returns a String with the serialized data to the caller.:::if->return->serializer->serializer->reset->if->xmlVersion->getXMLVersion->serializer->getOutputFormat->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->if->nodeArg->getNodeType->nodeArg->getNodeType->nodeArg->getNodeType->fDOMConfigProperties->setProperty->fXMLSerializer->setOutputFormat->output->new->StringWriter->try->serializer->setWriter->if->serializer->asDOM3Serializer->if->fDOMSerializer->setErrorHandler->if->fDOMSerializer->setNodeFilter->fDOMSerializer->setNewLine->fDOMSerializer->serializeDOM3->catch->throw->e->printStackTrace->throw->e->toString->new->LSException->if->fDOMErrorHandler->e->getMessage->new->DOMErrorImpl->handleError->e->printStackTrace->throw->e->toString->new->LSException->finally->return->output->toString
LSSerializerImpl#writeToURI(Node, String):::Serializes the specified node to the specified URI and returns true if the Node was successfully serialized.:::if->return->serializer->serializer->reset->if->xmlVersion->getXMLVersion->getInputEncoding->if->getXMLEncoding->getXMLEncoding->serializer->getOutputFormat->setProperty->fDOMConfigProperties->setProperty->fDOMConfigProperties->setProperty->if->nodeArg->getNodeType->nodeArg->getNodeType->nodeArg->getNodeType->fDOMConfigProperties->setProperty->fXMLSerializer->setOutputFormat->try->if->msg->createMessage->if->fDOMErrorHandler->new->DOMErrorImpl->handleError->throw->new->LSException->else->absoluteURI->SystemIDResolver->getAbsoluteURI->url->new->URL->urlOutStream->protocol->url->getProtocol->host->url->getHost->if->protocol->equalsIgnoreCase->host->length->host->equals->url->getPath->new->File->new->FileOutputStream->else->urlCon->url->openConnection->urlCon->setDoInput->urlCon->setDoOutput->urlCon->setUseCaches->urlCon->setAllowUserInteraction->if->httpCon->httpCon->setRequestMethod->urlCon->getOutputStream->serializer->new->OutputStreamWriter->setWriter->if->serializer->asDOM3Serializer->if->fDOMSerializer->setErrorHandler->if->fDOMSerializer->setNodeFilter->fDOMSerializer->setNewLine->fDOMSerializer->serializeDOM3->catch->throw->e->printStackTrace->throw->e->toString->new->LSException->if->fDOMErrorHandler->e->getMessage->new->DOMErrorImpl->handleError->e->printStackTrace->throw->e->toString->new->LSException->finally->return
LSSerializerImpl#getXMLEncoding(Node):::Determines the XML Encoding of the Document Node to serialize:::doc->if->if->nodeArg->getNodeType->else->nodeArg->getOwnerDocument->if->doc->getImplementation->hasFeature->return->doc->getXmlEncoding->return
LSSerializerImpl#getInputEncoding(Node):::Determines the Input Encoding of the Document Node to serialize:::doc->if->if->nodeArg->getNodeType->else->nodeArg->getOwnerDocument->if->doc->getImplementation->hasFeature->return->doc->getInputEncoding->return
LSSerializerImpl#getErrorHandler():::This method returns the LSSerializer's error handler.:::return
