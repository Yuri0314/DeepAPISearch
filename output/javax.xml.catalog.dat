javax.xml.catalog.AltCatalog#setCatalog(String)->void:::Set the catalog attribute
javax.xml.catalog.AltCatalog#getCatalogId()->String:::Returns the catalog attribute as a URI String.
javax.xml.catalog.AltCatalog#getCatalogURI()->URI:::Returns the catalog attribute as a URI.
javax.xml.catalog.AltCatalog#matchURI(String, int)->URI:::Matches the specified id with the entry
javax.xml.catalog.BaseEntry#getType()->CatalogEntryType:::Returns the type of the entry
javax.xml.catalog.BaseEntry#setType(CatalogEntryType)->void:::Sets the entry type
javax.xml.catalog.BaseEntry#getId()->String:::Returns the id of the entry
javax.xml.catalog.BaseEntry#setId(String)->void:::Set the entry Id
javax.xml.catalog.BaseEntry#setBaseURI(String)->void:::Sets the base URI for the entry
javax.xml.catalog.BaseEntry#getBaseURI()->URL:::Gets the base URI for the entry
javax.xml.catalog.BaseEntry#getMatchId()->String:::Gets the attribute used for matching
javax.xml.catalog.BaseEntry#setMatchId(String)->void:::Sets the matchId field
javax.xml.catalog.BaseEntry#match(String)->String:::Matches the specified string with the identifier attribute of the entry.
javax.xml.catalog.BaseEntry#match(String, int)->String:::Try to match the specified id with the entry
javax.xml.catalog.BaseEntry#verifyURI(String, URL, String)->URL:::Verifies the specified URI.
javax.xml.catalog.Catalog#matchSystem(String)->String:::Attempts to find a matching entry in the catalog by systemId
javax.xml.catalog.Catalog#matchPublic(String)->String:::Attempts to find a matching entry in the catalog by publicId
javax.xml.catalog.Catalog#matchURI(String)->String:::Attempts to find a matching entry in the catalog by the uri element
javax.xml.catalog.Catalog#catalogs()->Stream:::Returns a sequential Stream of alternative Catalogs specified using the nextCatalog entries in the current catalog, and as the input of catalog files excluding the current catalog (that is, the first in the input list) when the Catalog object is created by the CatalogManager
javax.xml.catalog.CatalogEntry#match(String)->String::: catalog entry match
javax.xml.catalog.CatalogFeatures#defaults()->CatalogFeatures:::Returns a CatalogFeatures instance with default settings.
javax.xml.catalog.CatalogFeatures#get(Feature)->String:::Returns the value of the specified feature.
javax.xml.catalog.CatalogFeatures#builder()->Builder:::Returns an instance of the builder for creating the CatalogFeatures object.
javax.xml.catalog.CatalogFeatures.Builder#with(Feature, String)->Builder:::Sets the value to a specified Feature.
javax.xml.catalog.CatalogFeatures.Builder#build()->CatalogFeatures:::Returns a CatalogFeatures object built by this builder.
javax.xml.catalog.CatalogImpl#load()->void:::Loads the catalog
javax.xml.catalog.CatalogImpl#reset()->void:::Resets the Catalog instance to its initial state.
javax.xml.catalog.CatalogImpl#isTop()->boolean:::Returns whether this Catalog instance is the top (main) Catalog.
javax.xml.catalog.CatalogImpl#getParent()->Catalog:::Gets the parent of this catalog.
javax.xml.catalog.CatalogImpl#setDeferred(String)->void:::Sets the defer property
javax.xml.catalog.CatalogImpl#isDeferred()->boolean:::Queries the defer attribute
javax.xml.catalog.CatalogImpl#setResolve(String)->void:::Sets the resolve property
javax.xml.catalog.CatalogImpl#getResolve()->ResolveType:::Gets the value of the resolve attribute
javax.xml.catalog.CatalogImpl#markAsSearched()->void:::Marks the Catalog as being searched already.
javax.xml.catalog.CatalogImpl#isEmpty()->boolean:::Indicate that the catalog is empty
javax.xml.catalog.CatalogImpl#catalogs()->Stream::: catalog impl catalogs
javax.xml.catalog.CatalogImpl#addNextCatalog(NextCatalog)->void:::Adds the catalog to the nextCatalog list
javax.xml.catalog.CatalogImpl#loadNextCatalogs()->void:::Loads all alternative catalogs.
javax.xml.catalog.CatalogImpl#getCatalog(CatalogImpl, URI)->Catalog:::Returns a Catalog object by the specified path.
javax.xml.catalog.CatalogImpl#saveLoadedCatalog(String, CatalogImpl)->void:::Saves a loaded Catalog.
javax.xml.catalog.CatalogImpl#loadedCatalogCount()->int:::Returns a count of all loaded catalogs, including delegate catalogs.
javax.xml.catalog.CatalogManager#catalog(CatalogFeatures, URI...)->Catalog:::Creates a Catalog object using the specified feature settings and uri(s) to one or more catalog files
javax.xml.catalog.CatalogManager#catalogResolver(Catalog)->CatalogResolver:::Creates an instance of a CatalogResolver using the specified catalog.
javax.xml.catalog.CatalogManager#catalogResolver(CatalogFeatures, URI...)->CatalogResolver:::Creates an instance of a CatalogResolver using the specified feature settings and uri(s) to one or more catalog files
javax.xml.catalog.CatalogMessages#reportError(String)->void:::Reports an error.
javax.xml.catalog.CatalogMessages#reportError(String, Object[])->void:::Reports an error.
javax.xml.catalog.CatalogMessages#reportRunTimeError(String, Object[])->void:::Reports a CatalogException.
javax.xml.catalog.CatalogMessages#reportRunTimeError(String, Throwable)->void:::Reports a CatalogException.
javax.xml.catalog.CatalogMessages#reportRunTimeError(String, Object[], Throwable)->void:::Reports a CatalogException.
javax.xml.catalog.CatalogMessages#reportIAEOnNull(String, String)->void:::Reports IllegalArgumentException if the argument is null.
javax.xml.catalog.CatalogMessages#reportNPEOnNull(String, Object)->void:::Reports NullPointerException if the argument is null.
javax.xml.catalog.CatalogMessages#reportIAE(String, Object[], Throwable)->void:::Reports IllegalArgumentException
javax.xml.catalog.CatalogMessages#formatMessage(String, Object[])->String:::Format a message with the specified arguments using the default locale information.
javax.xml.catalog.CatalogMessages#formatMessage(String, Object[], Locale)->String:::Format a message with the specified arguments using the given locale information.
javax.xml.catalog.CatalogMessages#sanitize(String)->String:::Returns sanitized URI.
javax.xml.catalog.CatalogReader#startElement(String, String, String, Attributes)->void::: catalog reader start element
javax.xml.catalog.CatalogReader#endElement(String, String, String)->void:::Handles endElement event
javax.xml.catalog.CatalogReader#resolveEntity(String, String)->InputSource:::Skips external DTD since resolving external DTD is not required by the specification.
javax.xml.catalog.CatalogReader#resolve(String, String)->Source:::Skips external references since resolution is not required by the specification.
javax.xml.catalog.CatalogResolver#resolveEntity(String, String)->InputSource:::Implements org.xml.sax.EntityResolver
javax.xml.catalog.CatalogResolver#resolve(String, String)->Source:::Implements URIResolver
javax.xml.catalog.CatalogResolver#resolveEntity(String, String, String, String)->InputStream:::Implements javax.xml.stream.XMLResolver
javax.xml.catalog.CatalogResolver#resolveResource(String, String, String, String, String)->LSInput:::Implements org.w3c.dom.ls.LSResourceResolver
javax.xml.catalog.CatalogResolverImpl#resolveEntity(String, String)->InputSource::: catalog resolver impl resolve entity
javax.xml.catalog.CatalogResolverImpl#resolve(String, String)->Source::: catalog resolver impl resolve
javax.xml.catalog.CatalogResolverImpl#resolveEntity(String, String, String, String)->InputStream::: catalog resolver impl resolve entity
javax.xml.catalog.CatalogResolverImpl#resolveResource(String, String, String, String, String)->LSInput::: catalog resolver impl resolve resource
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#getCharacterStream()->Reader::: input impl get character stream
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#setCharacterStream(Reader)->void::: input impl set character stream
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#getByteStream()->InputStream::: input impl get byte stream
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#setByteStream(InputStream)->void::: input impl set byte stream
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#getStringData()->String::: input impl get string data
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#setStringData(String)->void::: input impl set string data
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#getSystemId()->String::: input impl get system id
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#setSystemId(String)->void::: input impl set system id
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#getPublicId()->String::: input impl get public id
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#setPublicId(String)->void::: input impl set public id
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#getBaseURI()->String::: input impl get base i
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#setBaseURI(String)->void::: input impl set base i
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#getEncoding()->String::: input impl get encoding
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#setEncoding(String)->void::: input impl set encoding
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#getCertifiedText()->boolean::: input impl get certified text
javax.xml.catalog.CatalogResolverImpl.LSInputImpl#setCertifiedText(boolean)->void::: input impl set certified text
javax.xml.catalog.DelegatePublic#setPublicIdStartString(String)->void:::Set the publicIdStartString attribute.
javax.xml.catalog.DelegatePublic#getPublicIdStartString()->String:::Get the publicIdStartString attribute.
javax.xml.catalog.DelegatePublic#match(String)->String:::Try to match the specified publicId with the entry.
javax.xml.catalog.DelegatePublic#matchURI(String, int)->URI:::Try to match the specified publicId with the entry
javax.xml.catalog.DelegateSystem#setSystemIdStartString(String)->void:::Set the systemIdStartString attribute.
javax.xml.catalog.DelegateSystem#getSystemIdStartString()->String:::Get the systemIdStartString attribute.
javax.xml.catalog.DelegateSystem#match(String)->String:::Try to match the specified systemId with the entry.
javax.xml.catalog.DelegateSystem#matchURI(String, int)->URI:::Matches the specified publicId with the entry
javax.xml.catalog.DelegateUri#setURIStartString(String)->void:::Set the uriStartString attribute.
javax.xml.catalog.DelegateUri#getURIStartString()->String:::Get the uriStartString attribute.
javax.xml.catalog.DelegateUri#match(String)->String:::Try to match the specified systemId with the entry.
javax.xml.catalog.DelegateUri#matchURI(String, int)->URI:::Matches the specified systemId with the entry
javax.xml.catalog.GroupEntry#reset()->void:::Resets the group entry to its initial state.
javax.xml.catalog.GroupEntry#setCatalog(CatalogImpl)->void:::Sets the catalog for this GroupEntry.
javax.xml.catalog.GroupEntry#addEntry(BaseEntry)->void:::Adds an entry.
javax.xml.catalog.GroupEntry#setPrefer(String)->void:::Sets the prefer property
javax.xml.catalog.GroupEntry#isPreferPublic()->boolean:::Queries the prefer attribute
javax.xml.catalog.GroupEntry#matchSystem(String)->String:::Attempt to find a matching entry in the catalog by systemId
javax.xml.catalog.GroupEntry#matchPublic(String)->String:::Attempt to find a matching entry in the catalog by publicId
javax.xml.catalog.GroupEntry#matchURI(String)->String:::Attempt to find a matching entry in the catalog by the uri element
javax.xml.catalog.GroupEntry#loadDelegateCatalogs(CatalogImpl)->void:::Loads all delegate catalogs.
javax.xml.catalog.GroupEntry#loadDelegateCatalog(CatalogImpl, URI)->Catalog:::Loads a delegate catalog by the catalogId specified.
javax.xml.catalog.GroupEntry#getLoadedCatalog(String)->CatalogImpl:::Returns a previously loaded Catalog object if found.
javax.xml.catalog.GroupEntry#verifyCatalogFile(CatalogImpl, URI)->boolean:::Verifies that the catalog file represented by the catalogId exists
javax.xml.catalog.GroupEntry#isCircular(CatalogImpl, String)->boolean:::Checks whether the catalog is circularly referenced
javax.xml.catalog.NextCatalog#match(String)->String::: next catalog match
javax.xml.catalog.Normalizer#normalizePublicId(String)->String:::Normalize a public identifier in accordance with section 6.2 of the Catalog specification
javax.xml.catalog.Normalizer#encodeURN(String)->String:::Encode a public identifier as a "publicid" URN.
javax.xml.catalog.Normalizer#decodeURN(String)->String:::Decode a "publicid" URN into a public identifier.
javax.xml.catalog.Normalizer#normalizeURI(String)->String:::Perform character normalization on a URI reference.
javax.xml.catalog.PublicEntry#setPublicId(String)->void:::Set the publicId attribute.
javax.xml.catalog.PublicEntry#setURI(String)->void:::Set the uri attribute
javax.xml.catalog.PublicEntry#getPublicId()->String:::Get the publicId attribute.
javax.xml.catalog.PublicEntry#getURI()->URL:::Get the uri attribute.
javax.xml.catalog.PublicEntry#match(String)->String::: public entry match
javax.xml.catalog.RewriteSystem#setSystemIdStartString(String)->void:::Set the systemIdStartString attribute.
javax.xml.catalog.RewriteSystem#setRewritePrefix(String)->void:::Set the rewritePrefix attribute
javax.xml.catalog.RewriteSystem#getSystemIdStartString()->String:::Get the systemIdStartString attribute.
javax.xml.catalog.RewriteSystem#getRewritePrefix()->URL:::Get the rewritePrefix attribute.
javax.xml.catalog.RewriteSystem#match(String, int)->String:::Try to match the specified systemId with the entry
javax.xml.catalog.RewriteSystem#match(String)->String:::Try to match the specified systemId with the entry.
javax.xml.catalog.RewriteUri#setURIStartString(String)->void:::Set the uriStartString attribute.
javax.xml.catalog.RewriteUri#setRewritePrefix(String)->void:::Set the rewritePrefix attribute
javax.xml.catalog.RewriteUri#getURIStartString()->String:::Get the uriStartString attribute.
javax.xml.catalog.RewriteUri#getRewritePrefix()->URL:::Get the rewritePrefix attribute.
javax.xml.catalog.RewriteUri#match(String, int)->String:::Try to match the specified systemId with the entry
javax.xml.catalog.RewriteUri#match(String)->String::: rewrite uri match
javax.xml.catalog.SystemEntry#setSystemId(String)->void:::Set the systemId attribute.
javax.xml.catalog.SystemEntry#setURI(String)->void:::Set the uri attribute
javax.xml.catalog.SystemEntry#getSystemId()->String:::Get the systemId attribute.
javax.xml.catalog.SystemEntry#getURI()->URL:::Get the uri attribute.
javax.xml.catalog.SystemEntry#match(String)->String:::Try to match the specified string with the entry
javax.xml.catalog.SystemSuffix#setSystemIdSuffix(String)->void:::Set the systemIdSuffix attribute.
javax.xml.catalog.SystemSuffix#setURI(String)->void:::Set the uri attribute
javax.xml.catalog.SystemSuffix#getSystemIdSuffix()->String:::Get the systemIdSuffix attribute.
javax.xml.catalog.SystemSuffix#getURI()->URL:::Get the uri attribute.
javax.xml.catalog.SystemSuffix#match(String, int)->String:::Try to match the specified systemId with the entry
javax.xml.catalog.SystemSuffix#match(String)->String:::Try to match the specified systemId with the entry.
javax.xml.catalog.UriEntry#setName(String)->void:::Set the name attribute.
javax.xml.catalog.UriEntry#setURI(String)->void:::Set the uri attribute
javax.xml.catalog.UriEntry#getName()->String:::Get the name attribute.
javax.xml.catalog.UriEntry#getURI()->URL:::Get the uri attribute.
javax.xml.catalog.UriEntry#match(String)->String::: uri entry match
javax.xml.catalog.UriSuffix#setURISuffix(String)->void:::Set the uriSuffix attribute.
javax.xml.catalog.UriSuffix#setURI(String)->void:::Set the uri attribute
javax.xml.catalog.UriSuffix#getURISuffix()->String:::Get the uriSuffix attribute.
javax.xml.catalog.UriSuffix#getURI()->String:::Get the uri attribute.
javax.xml.catalog.UriSuffix#match(String, int)->String:::Try to match the specified systemId with the entry
javax.xml.catalog.UriSuffix#match(String)->String::: uri suffix match
javax.xml.catalog.Util#resolve(CatalogImpl, String, String)->String:::Finds an entry in the catalog that matches with the publicId or systemId
javax.xml.catalog.Util#validateUrisSyntax(URI...)->void::: util validate uris syntax
javax.xml.catalog.Util#validateUrisSyntax(String...)->void::: util validate uris syntax
javax.xml.catalog.Util#validateUriSyntax(URI)->void:::Validate that the URI must be absolute and a valid URL
javax.xml.catalog.Util#isFileUri(URI)->boolean:::Checks whether the URI is a file URI, including JAR file.
javax.xml.catalog.Util#isFileUriExist(URI, boolean)->boolean:::Verifies whether the file resource exists.
javax.xml.catalog.Util#getCatalogFiles(String)->String[]:::Find catalog file paths by reading the system property, and then jaxp.properties if the system property is not specified.
javax.xml.catalog.Util#getNotNullOrEmpty(String)->String:::Checks whether the specified string is null or empty, returns the original string with leading and trailing spaces removed if not.
javax.xml.catalog.Util#validateFeatureInput(Feature, String)->void:::Validates the input for features.
