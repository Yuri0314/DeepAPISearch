org.graalvm.compiler.core.common.util.CompilationAlarm_OptionDescriptors#get(String)->OptionDescriptor::: compilation alarm_ option descriptors get
org.graalvm.compiler.core.common.util.CompilationAlarm_OptionDescriptors#iterator()->Iterator::: compilation alarm_ option descriptors iterator
org.graalvm.compiler.core.common.util.AbstractTypeReader#getSV()->long::: abstract type reader get v
org.graalvm.compiler.core.common.util.AbstractTypeReader#getUV()->long::: abstract type reader get v
org.graalvm.compiler.core.common.util.AbstractTypeReader#decodeSign(long)->long::: abstract type reader decode sign
org.graalvm.compiler.core.common.util.BitMap2D#sizeInBits()->int::: bit map2 d size in bits
org.graalvm.compiler.core.common.util.BitMap2D#sizeInSlots()->int::: bit map2 d size in slots
org.graalvm.compiler.core.common.util.BitMap2D#isValidIndex(int, int)->boolean::: bit map2 d is valid index
org.graalvm.compiler.core.common.util.BitMap2D#at(int, int)->boolean::: bit map2 d at
org.graalvm.compiler.core.common.util.BitMap2D#setBit(int, int)->void::: bit map2 d set bit
org.graalvm.compiler.core.common.util.BitMap2D#clearBit(int, int)->void::: bit map2 d clear bit
org.graalvm.compiler.core.common.util.BitMap2D#atPutGrow(int, int, boolean)->void::: bit map2 d at put grow
org.graalvm.compiler.core.common.util.BitMap2D#clear()->void::: bit map2 d clear
org.graalvm.compiler.core.common.util.CompilationAlarm#current()->CompilationAlarm:::Gets the current compilation alarm
org.graalvm.compiler.core.common.util.CompilationAlarm#hasExpired()->boolean:::Determines if this alarm has expired
org.graalvm.compiler.core.common.util.CompilationAlarm#close()->void::: compilation alarm close
org.graalvm.compiler.core.common.util.CompilationAlarm#trackCompilationPeriod(OptionValues)->CompilationAlarm:::Starts an alarm for setting a time limit on a compilation if there isn't already an active alarm, if assertions are disabled and CompilationAlarm.Options#CompilationExpirationPeriod> 0
org.graalvm.compiler.core.common.util.FrequencyEncoder#createIdentityEncoder()->FrequencyEncoder:::Creates an encoder that uses object identity.
org.graalvm.compiler.core.common.util.FrequencyEncoder#createEqualityEncoder()->FrequencyEncoder:::Creates an encoder that uses Object#equals(Object) object equality.
org.graalvm.compiler.core.common.util.FrequencyEncoder#addObject(T)->void:::Adds an object to the array.
org.graalvm.compiler.core.common.util.FrequencyEncoder#getIndex(T)->int:::Returns the index of an object in the array
org.graalvm.compiler.core.common.util.FrequencyEncoder#getLength()->int:::Returns the number of distinct objects that have been added, i.e., the length of the array.
org.graalvm.compiler.core.common.util.FrequencyEncoder#encodeAll(T[])->T[]:::Fills the provided array with the added objects
org.graalvm.compiler.core.common.util.IntList#copy(IntList, int, int)->IntList:::Makes a new int list by copying a range from a given int list.
org.graalvm.compiler.core.common.util.IntList#copy(IntList, int, int, int)->IntList:::Makes a new int list by copying a range from a given int list.
org.graalvm.compiler.core.common.util.IntList#size()->int::: int list size
org.graalvm.compiler.core.common.util.IntList#add(int)->void:::Appends a value to the end of this list, increasing its #size() size by 1.
org.graalvm.compiler.core.common.util.IntList#get(int)->int:::Gets the value in this list at a given index.
org.graalvm.compiler.core.common.util.IntList#clear()->void:::Sets the size of this list to 0.
org.graalvm.compiler.core.common.util.IntList#set(int, int)->void:::Sets a value at a given index in this list.
org.graalvm.compiler.core.common.util.IntList#setSize(int)->void:::Adjusts the #size() size of this int list
org.graalvm.compiler.core.common.util.IntList#toString()->String::: int list to string
org.graalvm.compiler.core.common.util.ReversedList#get(int)->T::: reversed list get
org.graalvm.compiler.core.common.util.ReversedList#size()->int::: reversed list size
org.graalvm.compiler.core.common.util.ReversedList#reversed(List)->ReversedList:::Creates a list that is a view on list in reverse order.
org.graalvm.compiler.core.common.util.TypeConversion#isS1(long)->boolean::: type conversion is s1
org.graalvm.compiler.core.common.util.TypeConversion#isU1(long)->boolean::: type conversion is u1
org.graalvm.compiler.core.common.util.TypeConversion#isS2(long)->boolean::: type conversion is s2
org.graalvm.compiler.core.common.util.TypeConversion#isU2(long)->boolean::: type conversion is u2
org.graalvm.compiler.core.common.util.TypeConversion#isS4(long)->boolean::: type conversion is s4
org.graalvm.compiler.core.common.util.TypeConversion#isU4(long)->boolean::: type conversion is u4
org.graalvm.compiler.core.common.util.TypeConversion#asS1(long)->byte::: type conversion as s1
org.graalvm.compiler.core.common.util.TypeConversion#asU1(long)->byte::: type conversion as u1
org.graalvm.compiler.core.common.util.TypeConversion#asS2(long)->short::: type conversion as s2
org.graalvm.compiler.core.common.util.TypeConversion#asU2(long)->short::: type conversion as u2
org.graalvm.compiler.core.common.util.TypeConversion#asS4(long)->int::: type conversion as s4
org.graalvm.compiler.core.common.util.TypeConversion#asU4(long)->int::: type conversion as u4
org.graalvm.compiler.core.common.util.TypeReader#getByteIndex()->long:::Returns the next byte index to be read.
org.graalvm.compiler.core.common.util.TypeReader#setByteIndex(long)->void:::Sets the next byte index to be read.
org.graalvm.compiler.core.common.util.TypeReader#getS1()->int:::Reads a signed 1 byte value.
org.graalvm.compiler.core.common.util.TypeReader#getU1()->int:::Reads an unsigned 1 byte value.
org.graalvm.compiler.core.common.util.TypeReader#getS2()->int:::Reads a signed 2 byte value.
org.graalvm.compiler.core.common.util.TypeReader#getU2()->int:::Reads an unsigned 2 byte value.
org.graalvm.compiler.core.common.util.TypeReader#getS4()->int:::Reads a signed 4 byte value.
org.graalvm.compiler.core.common.util.TypeReader#getU4()->long:::Reads an unsigned 4 byte value.
org.graalvm.compiler.core.common.util.TypeReader#getS8()->long:::Reads a signed 4 byte value.
org.graalvm.compiler.core.common.util.TypeReader#getSV()->long:::Reads a signed value that has been written using TypeWriter#putSV variable byte size encoding.
org.graalvm.compiler.core.common.util.TypeReader#getSVInt()->int:::Reads a signed variable byte size encoded value that is known to fit into the range of int.
org.graalvm.compiler.core.common.util.TypeReader#getUV()->long:::Reads an unsigned value that has been written using TypeWriter#putSV variable byte size encoding.
org.graalvm.compiler.core.common.util.TypeReader#getUVInt()->int:::Reads an unsigned variable byte size encoded value that is known to fit into the range of int.
org.graalvm.compiler.core.common.util.TypeWriter#getBytesWritten()->long:::Returns the number of bytes that have been written, i.e., the byte index of the next byte to be written.
org.graalvm.compiler.core.common.util.TypeWriter#putS1(long)->void:::Writes a signed 1 byte value.
org.graalvm.compiler.core.common.util.TypeWriter#putU1(long)->void:::Writes an unsigned 1 byte value.
org.graalvm.compiler.core.common.util.TypeWriter#putS2(long)->void:::Writes a signed 2 byte value.
org.graalvm.compiler.core.common.util.TypeWriter#putU2(long)->void:::Writes an unsigned 2 byte value.
org.graalvm.compiler.core.common.util.TypeWriter#putS4(long)->void:::Writes a signed 4 byte value.
org.graalvm.compiler.core.common.util.TypeWriter#patchS4(long, long)->void:::Patches a previously written signed 4 byte value at a given offset.
org.graalvm.compiler.core.common.util.TypeWriter#putU4(long)->void:::Writes an unsigned 4 byte value.
org.graalvm.compiler.core.common.util.TypeWriter#putS8(long)->void:::Writes a signed 8 byte value.
org.graalvm.compiler.core.common.util.TypeWriter#putSV(long)->void:::Writes a signed value in a variable byte size encoding.
org.graalvm.compiler.core.common.util.TypeWriter#putUV(long)->void:::Writes an unsigned value in a variable byte size encoding.
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getS1(byte[], long)->int::: unsafe array type reader get s1
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getU1(byte[], long)->int::: unsafe array type reader get u1
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getS2(byte[], long, boolean)->int::: unsafe array type reader get s2
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getU2(byte[], long, boolean)->int::: unsafe array type reader get u2
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getS4(byte[], long, boolean)->int::: unsafe array type reader get s4
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getU4(byte[], long, boolean)->long::: unsafe array type reader get u4
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getS8(byte[], long, boolean)->long::: unsafe array type reader get s8
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#readOffset(byte[], long, int)->long::: unsafe array type reader read offset
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#create(byte[], long, boolean)->UnsafeArrayTypeReader::: unsafe array type reader create
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getByteIndex()->long::: unsafe array type reader get byte index
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#setByteIndex(long)->void::: unsafe array type reader set byte index
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getS1()->int::: unsafe array type reader get s1
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getU1()->int::: unsafe array type reader get u1
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getU2()->int::: unsafe array type reader get u2
org.graalvm.compiler.core.common.util.UnsafeArrayTypeReader#getU4()->long::: unsafe array type reader get u4
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader#getS2(byte[], long)->int::: unaligned unsafe array type reader get s2
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader#getS4(byte[], long)->int::: unaligned unsafe array type reader get s4
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader#getS8(byte[], long)->long::: unaligned unsafe array type reader get s8
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader#getS2()->int::: unaligned unsafe array type reader get s2
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader#getS4()->int::: unaligned unsafe array type reader get s4
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeReader#getS8()->long::: unaligned unsafe array type reader get s8
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeReader#getS2(byte[], long)->int::: aligned unsafe array type reader get s2
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeReader#getS4(byte[], long)->int::: aligned unsafe array type reader get s4
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeReader#getS8(byte[], long)->long::: aligned unsafe array type reader get s8
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeReader#getS2()->int::: aligned unsafe array type reader get s2
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeReader#getS4()->int::: aligned unsafe array type reader get s4
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeReader#getS8()->long::: aligned unsafe array type reader get s8
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#create(boolean)->UnsafeArrayTypeWriter::: unsafe array type writer create
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#getBytesWritten()->long::: unsafe array type writer get bytes written
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#toArray(byte[])->byte[]:::Copies the buffer into the provided byte[] array of length #getBytesWritten().
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#toByteBuffer(ByteBuffer)->ByteBuffer:::Copies the buffer into the provided ByteBuffer at its current position.
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putS1(long)->void::: unsafe array type writer put s1
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putU1(long)->void::: unsafe array type writer put u1
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putU2(long)->void::: unsafe array type writer put u2
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putU4(long)->void::: unsafe array type writer put u4
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putS2(long)->void::: unsafe array type writer put s2
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putS4(long)->void::: unsafe array type writer put s4
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putS8(long)->void::: unsafe array type writer put s8
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putS2(long, Chunk, long)->void::: unsafe array type writer put s2
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putS4(long, Chunk, long)->void::: unsafe array type writer put s4
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putS8(long, Chunk, long)->void::: unsafe array type writer put s8
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#writeOffset(int)->long::: unsafe array type writer write offset
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#patchS4(long, long)->void::: unsafe array type writer patch s4
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putSV(long)->void::: unsafe array type writer put v
org.graalvm.compiler.core.common.util.UnsafeArrayTypeWriter#putUV(long)->void::: unsafe array type writer put v
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeWriter#putS2(long, Chunk, long)->void::: unaligned unsafe array type writer put s2
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeWriter#putS4(long, Chunk, long)->void::: unaligned unsafe array type writer put s4
org.graalvm.compiler.core.common.util.UnalignedUnsafeArrayTypeWriter#putS8(long, Chunk, long)->void::: unaligned unsafe array type writer put s8
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeWriter#putS2(long, Chunk, long)->void::: aligned unsafe array type writer put s2
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeWriter#putS4(long, Chunk, long)->void::: aligned unsafe array type writer put s4
org.graalvm.compiler.core.common.util.AlignedUnsafeArrayTypeWriter#putS8(long, Chunk, long)->void::: aligned unsafe array type writer put s8
org.graalvm.compiler.core.common.util.UnsignedLong#asLong()->long::: unsigned long as long
org.graalvm.compiler.core.common.util.UnsignedLong#equals(long)->boolean::: unsigned long equals
org.graalvm.compiler.core.common.util.UnsignedLong#isLessThan(long)->boolean::: unsigned long is less than
org.graalvm.compiler.core.common.util.UnsignedLong#isGreaterThan(long)->boolean::: unsigned long is greater than
org.graalvm.compiler.core.common.util.UnsignedLong#isLessOrEqualTo(long)->boolean::: unsigned long is less or equal to
org.graalvm.compiler.core.common.util.UnsignedLong#times(long)->UnsignedLong::: unsigned long times
org.graalvm.compiler.core.common.util.UnsignedLong#minus(long)->UnsignedLong::: unsigned long minus
org.graalvm.compiler.core.common.util.UnsignedLong#plus(long)->UnsignedLong::: unsigned long plus
org.graalvm.compiler.core.common.util.UnsignedLong#wrappingPlus(long)->UnsignedLong::: unsigned long wrapping plus
org.graalvm.compiler.core.common.util.UnsignedLong#wrappingTimes(long)->UnsignedLong::: unsigned long wrapping times
org.graalvm.compiler.core.common.util.UnsignedLong#toString()->String::: unsigned long to string
org.graalvm.compiler.core.common.util.UnsignedLong#equals(Object)->boolean::: unsigned long equals
org.graalvm.compiler.core.common.util.UnsignedLong#hashCode()->int::: unsigned long hash code
org.graalvm.compiler.core.common.util.Util#uncheckedCast(Class, Object)->T:::Statically cast an object to an arbitrary Object type
org.graalvm.compiler.core.common.util.Util#uncheckedCast(Object)->T:::Statically cast an object to an arbitrary Object type
org.graalvm.compiler.core.common.util.Util#atPutGrow(List, int, T, T)->void:::Sets the element at a given position of a list and ensures that this position exists
org.graalvm.compiler.core.common.util.Util#indent(String, String)->String:::Prepends the String indentation to every line in String lines, including a possibly non-empty line following the final newline.
org.graalvm.compiler.core.common.util.Util#zero(JavaKind)->JavaConstant:::Returns the zero value for a given numeric kind.
org.graalvm.compiler.core.common.util.Util#one(JavaKind)->JavaConstant:::Returns the one value for a given numeric kind.
org.graalvm.compiler.core.common.util.Util#printInlining(ResolvedJavaMethod, int, int, boolean, String, Object...)->void:::Print a HotSpot-style inlining message to the console.
org.graalvm.compiler.core.common.util.Util#setAccessible(Field, boolean)->void:::Calls AccessibleObject#setAccessible(boolean) on field with the value flag.
org.graalvm.compiler.core.common.util.Util#setAccessible(Executable, boolean)->void:::Calls AccessibleObject#setAccessible(boolean) on executable with the value flag.
