ArrayTypeSignature#make(TypeSignature)::: array type signature make:::return->new->ArrayTypeSignature
ArrayTypeSignature#getComponentType()::: array type signature get component type:::return
ArrayTypeSignature#accept(TypeTreeVisitor)::: array type signature accept:::v->visitArrayTypeSignature
BooleanSignature#make()::: boolean signature make:::return
BooleanSignature#accept(TypeTreeVisitor)::: boolean signature accept:::v->visitBooleanSignature
BottomSignature#make()::: bottom signature make:::return
BottomSignature#accept(TypeTreeVisitor)::: bottom signature accept:::v->visitBottomSignature
ByteSignature#make()::: byte signature make:::return
ByteSignature#accept(TypeTreeVisitor)::: byte signature accept:::v->visitByteSignature
CharSignature#make()::: char signature make:::return
CharSignature#accept(TypeTreeVisitor)::: char signature accept:::v->visitCharSignature
ClassSignature#make(FormalTypeParameter[], ClassTypeSignature, ClassTypeSignature[])::: class signature make:::return->new->ClassSignature
ClassSignature#getFormalTypeParameters()::: class signature get formal type parameters:::return
ClassSignature#getSuperclass()::: class signature get superclass:::return
ClassSignature#getSuperInterfaces()::: class signature get super interfaces:::return
ClassSignature#accept(Visitor)::: class signature accept:::v->visitClassSignature
ClassTypeSignature#make(List)::: class type signature make:::return->new->ClassTypeSignature
ClassTypeSignature#getPath()::: class type signature get path:::return
ClassTypeSignature#accept(TypeTreeVisitor)::: class type signature accept:::v->visitClassTypeSignature
DoubleSignature#make()::: double signature make:::return
DoubleSignature#accept(TypeTreeVisitor)::: double signature accept:::v->visitDoubleSignature
FloatSignature#make()::: float signature make:::return
FloatSignature#accept(TypeTreeVisitor)::: float signature accept:::v->visitFloatSignature
FormalTypeParameter#make(String, FieldTypeSignature[]):::Factory method:::return->new->FormalTypeParameter
FormalTypeParameter#getBounds()::: formal type parameter get bounds:::return
FormalTypeParameter#getName()::: formal type parameter get name:::return
FormalTypeParameter#accept(TypeTreeVisitor)::: formal type parameter accept:::v->visitFormalTypeParameter
IntSignature#make()::: int signature make:::return
IntSignature#accept(TypeTreeVisitor)::: int signature accept:::v->visitIntSignature
LongSignature#make()::: long signature make:::return
LongSignature#accept(TypeTreeVisitor)::: long signature accept:::v->visitLongSignature
MethodTypeSignature#make(FormalTypeParameter[], TypeSignature[], ReturnType, FieldTypeSignature[])::: method type signature make:::return->new->MethodTypeSignature
MethodTypeSignature#getFormalTypeParameters()::: method type signature get formal type parameters:::return
MethodTypeSignature#getParameterTypes()::: method type signature get parameter types:::return
MethodTypeSignature#getReturnType()::: method type signature get return type:::return
MethodTypeSignature#getExceptionTypes()::: method type signature get exception types:::return
MethodTypeSignature#accept(Visitor)::: method type signature accept:::v->visitMethodTypeSignature
ShortSignature#make()::: short signature make:::return
ShortSignature#accept(TypeTreeVisitor)::: short signature accept:::v->visitShortSignature
Signature#getFormalTypeParameters()::: signature get formal type parameters:::
SimpleClassTypeSignature#make(String, boolean, TypeArgument[])::: simple class type signature make:::return->new->SimpleClassTypeSignature
SimpleClassTypeSignature#getDollar()::: simple class type signature get dollar:::return
SimpleClassTypeSignature#getName()::: simple class type signature get name:::return
SimpleClassTypeSignature#getTypeArguments()::: simple class type signature get type arguments:::return
SimpleClassTypeSignature#accept(TypeTreeVisitor)::: simple class type signature accept:::v->visitSimpleClassTypeSignature
TypeTree#accept(TypeTreeVisitor):::Accept method for the visitor pattern.:::
TypeVariableSignature#make(String)::: type variable signature make:::return->new->TypeVariableSignature
TypeVariableSignature#getIdentifier()::: type variable signature get identifier:::return
TypeVariableSignature#accept(TypeTreeVisitor)::: type variable signature accept:::v->visitTypeVariableSignature
VoidDescriptor#make()::: void descriptor make:::return
VoidDescriptor#accept(TypeTreeVisitor)::: void descriptor accept:::v->visitVoidDescriptor
Wildcard#make(FieldTypeSignature[], FieldTypeSignature[])::: wildcard make:::return->new->Wildcard
Wildcard#getUpperBounds()::: wildcard get upper bounds:::return
Wildcard#getLowerBounds()::: wildcard get lower bounds:::if->BottomSignature->make->return->else->return
Wildcard#accept(TypeTreeVisitor)::: wildcard accept:::v->visitWildcard
