com.sun.jmx.remote.internal.rmi.ProxyRef#readExternal(ObjectInput)->void::: proxy ref read external
com.sun.jmx.remote.internal.rmi.ProxyRef#writeExternal(ObjectOutput)->void::: proxy ref write external
com.sun.jmx.remote.internal.rmi.ProxyRef#invoke(java.rmi.server.RemoteCall)->void::: proxy ref invoke
com.sun.jmx.remote.internal.rmi.ProxyRef#invoke(Remote, Method, Object[], long)->Object::: proxy ref invoke
com.sun.jmx.remote.internal.rmi.ProxyRef#done(java.rmi.server.RemoteCall)->void::: proxy ref done
com.sun.jmx.remote.internal.rmi.ProxyRef#getRefClass(ObjectOutput)->String::: proxy ref get ref class
com.sun.jmx.remote.internal.rmi.ProxyRef#newCall(RemoteObject, java.rmi.server.Operation[], int, long)->java.rmi.server.RemoteCall::: proxy ref new call
com.sun.jmx.remote.internal.rmi.ProxyRef#remoteEquals(RemoteRef)->boolean::: proxy ref remote equals
com.sun.jmx.remote.internal.rmi.ProxyRef#remoteHashCode()->int::: proxy ref remote hash code
com.sun.jmx.remote.internal.rmi.ProxyRef#remoteToString()->String::: proxy ref remote to string
com.sun.jmx.remote.internal.rmi.RMIExporter#exportObject(Remote, int, RMIClientSocketFactory, RMIServerSocketFactory, ObjectInputFilter)->Remote::: exporter export object
com.sun.jmx.remote.internal.rmi.RMIExporter#unexportObject(Remote, boolean)->boolean::: exporter unexport object
