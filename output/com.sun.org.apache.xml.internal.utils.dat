com.sun.org.apache.xml.internal.utils.AttList#getLength()->int:::Get the number of attribute nodes in the list
com.sun.org.apache.xml.internal.utils.AttList#getURI(int)->String:::Look up an attribute's Namespace URI by index.
com.sun.org.apache.xml.internal.utils.AttList#getLocalName(int)->String:::Look up an attribute's local name by index.
com.sun.org.apache.xml.internal.utils.AttList#getQName(int)->String:::Look up an attribute's qualified name by index.
com.sun.org.apache.xml.internal.utils.AttList#getType(int)->String:::Get the attribute's node type by index
com.sun.org.apache.xml.internal.utils.AttList#getValue(int)->String:::Get the attribute's node value by index
com.sun.org.apache.xml.internal.utils.AttList#getType(String)->String:::Get the attribute's node type by name
com.sun.org.apache.xml.internal.utils.AttList#getType(String, String)->String:::Look up an attribute's type by Namespace name.
com.sun.org.apache.xml.internal.utils.AttList#getValue(String)->String:::Look up an attribute's value by name.
com.sun.org.apache.xml.internal.utils.AttList#getValue(String, String)->String:::Look up an attribute's value by Namespace name.
com.sun.org.apache.xml.internal.utils.AttList#getIndex(String, String)->int:::Look up the index of an attribute by Namespace name.
com.sun.org.apache.xml.internal.utils.AttList#getIndex(String)->int:::Look up the index of an attribute by raw XML 1.0 name.
com.sun.org.apache.xml.internal.utils.BoolStack#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.BoolStack#clear()->void:::Clears the stack.
com.sun.org.apache.xml.internal.utils.BoolStack#push(boolean)->boolean:::Pushes an item onto the top of this stack.
com.sun.org.apache.xml.internal.utils.BoolStack#pop()->boolean:::Removes the object at the top of this stack and returns that object as the value of this function.
com.sun.org.apache.xml.internal.utils.BoolStack#popAndTop()->boolean:::Removes the object at the top of this stack and returns the next object at the top as the value of this function.
com.sun.org.apache.xml.internal.utils.BoolStack#setTop(boolean)->void:::Set the item at the top of this stack
com.sun.org.apache.xml.internal.utils.BoolStack#peek()->boolean:::Looks at the object at the top of this stack without removing it from the stack.
com.sun.org.apache.xml.internal.utils.BoolStack#peekOrFalse()->boolean:::Looks at the object at the top of this stack without removing it from the stack
com.sun.org.apache.xml.internal.utils.BoolStack#peekOrTrue()->boolean:::Looks at the object at the top of this stack without removing it from the stack
com.sun.org.apache.xml.internal.utils.BoolStack#isEmpty()->boolean:::Tests if this stack is empty.
com.sun.org.apache.xml.internal.utils.BoolStack#clone()->Object::: bool stack clone
com.sun.org.apache.xml.internal.utils.CharKey#setChar(char)->void:::Get the hash value of the character.
com.sun.org.apache.xml.internal.utils.CharKey#hashCode()->int:::Get the hash value of the character.
com.sun.org.apache.xml.internal.utils.CharKey#equals(Object)->boolean:::Override of equals() for this object
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#warning(SAXParseException)->void:::Receive notification of a warning
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#error(SAXParseException)->void:::Receive notification of a recoverable error
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#fatalError(SAXParseException)->void:::Receive notification of a non-recoverable error
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#warning(TransformerException)->void:::Receive notification of a warning
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#error(TransformerException)->void:::Receive notification of a recoverable error
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#fatalError(TransformerException)->void:::Receive notification of a non-recoverable error
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#ensureLocationSet(TransformerException)->void::: default error handler ensure location set
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#printLocation(PrintStream, TransformerException)->void::: default error handler print location
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#printLocation(java.io.PrintStream, org.xml.sax.SAXParseException)->void::: default error handler print location
com.sun.org.apache.xml.internal.utils.DefaultErrorHandler#printLocation(PrintWriter, Throwable)->void::: default error handler print location
com.sun.org.apache.xml.internal.utils.DOM2Helper#getLocalNameOfNode(Node)->String:::Returns the local name of the given node, as defined by the XML Namespaces specification
com.sun.org.apache.xml.internal.utils.DOM2Helper#getNamespaceOfNode(Node)->String:::Returns the Namespace Name (Namespace URI) for the given node
com.sun.org.apache.xml.internal.utils.DOM2Helper#isNodeAfter(Node, Node)->boolean:::Figure out whether node2 should be considered as being later in the document than node1, in Document Order as defined by the XPath model
com.sun.org.apache.xml.internal.utils.DOM2Helper#isNodeTheSame(Node, Node)->boolean:::Use DTMNodeProxy to determine whether two nodes are the same.
com.sun.org.apache.xml.internal.utils.DOM2Helper#getParentOfNode(Node)->Node:::Get the XPath-model parent of a node
com.sun.org.apache.xml.internal.utils.DOMBuilder#getRootDocument()->Node:::Get the root document or DocumentFragment of the DOM being created.
com.sun.org.apache.xml.internal.utils.DOMBuilder#getRootNode()->Node:::Get the root node of the DOM tree.
com.sun.org.apache.xml.internal.utils.DOMBuilder#getCurrentNode()->Node:::Get the node currently being processed.
com.sun.org.apache.xml.internal.utils.DOMBuilder#setNextSibling(Node)->void:::Set the next sibling node, which is where the result nodes should be inserted before.
com.sun.org.apache.xml.internal.utils.DOMBuilder#getNextSibling()->Node:::Return the next sibling node.
com.sun.org.apache.xml.internal.utils.DOMBuilder#getWriter()->java.io.Writer:::Return null since there is no Writer for this class.
com.sun.org.apache.xml.internal.utils.DOMBuilder#append(Node)->void:::Append a node to the current container.
com.sun.org.apache.xml.internal.utils.DOMBuilder#setDocumentLocator(Locator)->void:::Receive an object for locating the origin of SAX document events
com.sun.org.apache.xml.internal.utils.DOMBuilder#startDocument()->void:::Receive notification of the beginning of a document
com.sun.org.apache.xml.internal.utils.DOMBuilder#endDocument()->void:::Receive notification of the end of a document
com.sun.org.apache.xml.internal.utils.DOMBuilder#startElement(String, String, String, Attributes)->void:::Receive notification of the beginning of an element
com.sun.org.apache.xml.internal.utils.DOMBuilder#endElement(String, String, String)->void:::Receive notification of the end of an element
com.sun.org.apache.xml.internal.utils.DOMBuilder#setIDAttribute(String, Element)->void:::Set an ID string to node association in the ID table.
com.sun.org.apache.xml.internal.utils.DOMBuilder#characters(char[], int, int)->void:::Receive notification of character data
com.sun.org.apache.xml.internal.utils.DOMBuilder#charactersRaw(char[], int, int)->void:::If available, when the disable-output-escaping attribute is used, output raw text without escaping
com.sun.org.apache.xml.internal.utils.DOMBuilder#startEntity(String)->void:::Report the beginning of an entity
com.sun.org.apache.xml.internal.utils.DOMBuilder#endEntity(String)->void:::Report the end of an entity.
com.sun.org.apache.xml.internal.utils.DOMBuilder#entityReference(String)->void:::Receive notivication of a entityReference.
com.sun.org.apache.xml.internal.utils.DOMBuilder#ignorableWhitespace(char[], int, int)->void:::Receive notification of ignorable whitespace in element content
com.sun.org.apache.xml.internal.utils.DOMBuilder#processingInstruction(String, String)->void:::Receive notification of a processing instruction
com.sun.org.apache.xml.internal.utils.DOMBuilder#comment(char[], int, int)->void:::Report an XML comment anywhere in the document
com.sun.org.apache.xml.internal.utils.DOMBuilder#startCDATA()->void:::Report the start of a CDATA section.
com.sun.org.apache.xml.internal.utils.DOMBuilder#endCDATA()->void:::Report the end of a CDATA section.
com.sun.org.apache.xml.internal.utils.DOMBuilder#cdata(char[], int, int)->void:::Receive notification of cdata
com.sun.org.apache.xml.internal.utils.DOMBuilder#startDTD(String, String, String)->void:::Report the start of DTD declarations, if any
com.sun.org.apache.xml.internal.utils.DOMBuilder#endDTD()->void:::Report the end of DTD declarations.
com.sun.org.apache.xml.internal.utils.DOMBuilder#startPrefixMapping(String, String)->void:::Begin the scope of a prefix-URI Namespace mapping
com.sun.org.apache.xml.internal.utils.DOMBuilder#endPrefixMapping(String)->void:::End the scope of a prefix-URI mapping
com.sun.org.apache.xml.internal.utils.DOMBuilder#skippedEntity(String)->void:::Receive notification of a skipped entity
com.sun.org.apache.xml.internal.utils.ElemDesc#is(int)->boolean:::"is (this element described by these flags)"
com.sun.org.apache.xml.internal.utils.ElemDesc#setAttr(String, int)->void:::Set a new attribute for this element
com.sun.org.apache.xml.internal.utils.ElemDesc#isAttrFlagSet(String, int)->boolean:::Find out if a flag is set in a given attribute of this element
com.sun.org.apache.xml.internal.utils.FastStringBuffer#size()->int:::Get the length of the list
com.sun.org.apache.xml.internal.utils.FastStringBuffer#length()->int:::Get the length of the list
com.sun.org.apache.xml.internal.utils.FastStringBuffer#reset()->void:::Discard the content of the FastStringBuffer, and most of the memory that was allocated by it, restoring the initial state
com.sun.org.apache.xml.internal.utils.FastStringBuffer#setLength(int)->void:::Directly set how much of the FastStringBuffer's storage is to be considered part of its content
com.sun.org.apache.xml.internal.utils.FastStringBuffer#toString()->String:::Note that this operation has been somewhat deoptimized by the shift to a chunked array, as there is no factory method to produce a String object directly from an array of arrays and hence a double copy is needed
com.sun.org.apache.xml.internal.utils.FastStringBuffer#append(char)->void:::Append a single character onto the FastStringBuffer, growing the storage if necessary
com.sun.org.apache.xml.internal.utils.FastStringBuffer#append(String)->void:::Append the contents of a String onto the FastStringBuffer, growing the storage if necessary
com.sun.org.apache.xml.internal.utils.FastStringBuffer#append(StringBuffer)->void:::Append the contents of a StringBuffer onto the FastStringBuffer, growing the storage if necessary
com.sun.org.apache.xml.internal.utils.FastStringBuffer#append(char[], int, int)->void:::Append part of the contents of a Character Array onto the FastStringBuffer,  growing the storage if necessary
com.sun.org.apache.xml.internal.utils.FastStringBuffer#append(FastStringBuffer)->void:::Append the contents of another FastStringBuffer onto this FastStringBuffer, growing the storage if necessary
com.sun.org.apache.xml.internal.utils.FastStringBuffer#isWhitespace(int, int)->boolean::: fast string buffer is whitespace
com.sun.org.apache.xml.internal.utils.FastStringBuffer#getString(int, int)->String::: fast string buffer get string
com.sun.org.apache.xml.internal.utils.FastStringBuffer#getOneChunkString(int, int, int)->String::: fast string buffer get one chunk string
com.sun.org.apache.xml.internal.utils.FastStringBuffer#getString(StringBuffer, int, int)->StringBuffer::: fast string buffer get string
com.sun.org.apache.xml.internal.utils.FastStringBuffer#getString(StringBuffer, int, int, int)->StringBuffer:::Internal support for toString() and getString()
com.sun.org.apache.xml.internal.utils.FastStringBuffer#charAt(int)->char:::Get a single character from the string buffer.
com.sun.org.apache.xml.internal.utils.FastStringBuffer#sendSAXcharacters(org.xml.sax.ContentHandler, int, int)->void:::Sends the specified range of characters as one or more SAX characters() events
com.sun.org.apache.xml.internal.utils.FastStringBuffer#sendNormalizedSAXcharacters(org.xml.sax.ContentHandler, int, int)->int:::Sends the specified range of characters as one or more SAX characters() events, normalizing the characters according to XSLT rules.
com.sun.org.apache.xml.internal.utils.FastStringBuffer#sendNormalizedSAXcharacters(char[], int, int, org.xml.sax.ContentHandler, int)->int:::Internal method to directly normalize and dispatch the character array
com.sun.org.apache.xml.internal.utils.FastStringBuffer#sendNormalizedSAXcharacters(char[], int, int, org.xml.sax.ContentHandler)->void:::Directly normalize and dispatch the character array.
com.sun.org.apache.xml.internal.utils.FastStringBuffer#sendSAXComment(org.xml.sax.ext.LexicalHandler, int, int)->void:::Sends the specified range of characters as sax Comment
com.sun.org.apache.xml.internal.utils.IntStack#push(int)->int:::Pushes an item onto the top of this stack.
com.sun.org.apache.xml.internal.utils.IntStack#pop()->int:::Removes the object at the top of this stack and returns that object as the value of this function.
com.sun.org.apache.xml.internal.utils.IntStack#quickPop(int)->void::: int stack quick pop
com.sun.org.apache.xml.internal.utils.IntStack#peek()->int:::Looks at the object at the top of this stack without removing it from the stack.
com.sun.org.apache.xml.internal.utils.IntStack#peek(int)->int:::Looks at the object at the position the stack counting down n items.
com.sun.org.apache.xml.internal.utils.IntStack#setTop(int)->void:::Sets an object at a the top of the statck
com.sun.org.apache.xml.internal.utils.IntStack#empty()->boolean:::Tests if this stack is empty.
com.sun.org.apache.xml.internal.utils.IntStack#search(int)->int:::Returns where an object is on this stack.
com.sun.org.apache.xml.internal.utils.IntStack#clone()->Object:::Returns clone of current IntStack
com.sun.org.apache.xml.internal.utils.IntVector#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.IntVector#setSize(int)->void:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.IntVector#addElement(int)->void:::Append a int onto the vector.
com.sun.org.apache.xml.internal.utils.IntVector#addElements(int, int)->void:::Append several int values onto the vector.
com.sun.org.apache.xml.internal.utils.IntVector#addElements(int)->void:::Append several slots onto the vector, but do not set the values.
com.sun.org.apache.xml.internal.utils.IntVector#insertElementAt(int, int)->void:::Inserts the specified node in this vector at the specified index
com.sun.org.apache.xml.internal.utils.IntVector#removeAllElements()->void:::Inserts the specified node in this vector at the specified index
com.sun.org.apache.xml.internal.utils.IntVector#removeElement(int)->boolean:::Removes the first occurrence of the argument from this vector
com.sun.org.apache.xml.internal.utils.IntVector#removeElementAt(int)->void:::Deletes the component at the specified index
com.sun.org.apache.xml.internal.utils.IntVector#setElementAt(int, int)->void:::Sets the component at the specified index of this vector to be the specified object
com.sun.org.apache.xml.internal.utils.IntVector#elementAt(int)->int:::Get the nth element.
com.sun.org.apache.xml.internal.utils.IntVector#contains(int)->boolean:::Tell if the table contains the given node.
com.sun.org.apache.xml.internal.utils.IntVector#indexOf(int, int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.IntVector#indexOf(int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.IntVector#lastIndexOf(int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.IntVector#clone()->Object:::Returns clone of current IntVector
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#warning(SAXParseException)->void:::Receive notification of a warning
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#error(SAXParseException)->void:::Receive notification of a recoverable error
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#fatalError(SAXParseException)->void:::Receive notification of a non-recoverable error
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#warning(TransformerException)->void:::Receive notification of a warning
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#error(TransformerException)->void:::Receive notification of a recoverable error
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#fatalError(TransformerException)->void:::Receive notification of a non-recoverable error
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#logExceptionLocation(PrintWriter, Throwable)->void:::Print out location information about the exception
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#logSourceLine(PrintWriter, SourceLocator)->void:::Print out the specific source line that caused the exception, if possible to load it.
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#getSourceLine(String, int)->String:::Return the specific source line that caused the exception, if possible to load it; allow exceptions to be thrown.
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#setThrowOnWarning(boolean)->void:::User-settable behavior: when to re-throw exceptions
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#getThrowOnWarning()->boolean:::User-settable behavior: when to re-throw exceptions.
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#setThrowOnError(boolean)->void:::User-settable behavior: when to re-throw exceptions
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#getThrowOnError()->boolean:::User-settable behavior: when to re-throw exceptions.
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#setThrowOnFatalError(boolean)->void:::User-settable behavior: when to re-throw exceptions
com.sun.org.apache.xml.internal.utils.ListingErrorHandler#getThrowOnFatalError()->boolean:::User-settable behavior: when to re-throw exceptions.
com.sun.org.apache.xml.internal.utils.LocaleUtility#langToLocale(String)->Locale::: locale utility lang to locale
com.sun.org.apache.xml.internal.utils.MutableAttrListImpl#addAttribute(String, String, String, String, String)->void:::Add an attribute to the end of the list
com.sun.org.apache.xml.internal.utils.MutableAttrListImpl#addAttributes(Attributes)->void:::Add the contents of the attribute list to this list.
com.sun.org.apache.xml.internal.utils.MutableAttrListImpl#contains(String)->boolean:::Return true if list contains the given (raw) attribute name.
com.sun.org.apache.xml.internal.utils.NodeConsumer#setOriginatingNode(Node)->void:::Set the node that is originating the SAX event.
com.sun.org.apache.xml.internal.utils.NodeVector#clone()->Object:::Get a cloned LocPathIterator.
com.sun.org.apache.xml.internal.utils.NodeVector#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.NodeVector#addElement(int)->void:::Append a Node onto the vector.
com.sun.org.apache.xml.internal.utils.NodeVector#push(int)->void:::Append a Node onto the vector.
com.sun.org.apache.xml.internal.utils.NodeVector#pop()->int:::Pop a node from the tail of the vector and return the result.
com.sun.org.apache.xml.internal.utils.NodeVector#popAndTop()->int:::Pop a node from the tail of the vector and return the top of the stack after the pop.
com.sun.org.apache.xml.internal.utils.NodeVector#popQuick()->void:::Pop a node from the tail of the vector.
com.sun.org.apache.xml.internal.utils.NodeVector#peepOrNull()->int:::Return the node at the top of the stack without popping the stack
com.sun.org.apache.xml.internal.utils.NodeVector#pushPair(int, int)->void:::Push a pair of nodes into the stack
com.sun.org.apache.xml.internal.utils.NodeVector#popPair()->void:::Pop a pair of nodes from the tail of the stack
com.sun.org.apache.xml.internal.utils.NodeVector#setTail(int)->void:::Set the tail of the stack to the given node
com.sun.org.apache.xml.internal.utils.NodeVector#setTailSub1(int)->void:::Set the given node one position from the tail
com.sun.org.apache.xml.internal.utils.NodeVector#peepTail()->int:::Return the node at the tail of the vector without popping Special purpose method for TransformerImpl, pushElemTemplateElement
com.sun.org.apache.xml.internal.utils.NodeVector#peepTailSub1()->int:::Return the node one position from the tail without popping
com.sun.org.apache.xml.internal.utils.NodeVector#insertInOrder(int)->void:::Insert a node in order in the list.
com.sun.org.apache.xml.internal.utils.NodeVector#insertElementAt(int, int)->void:::Inserts the specified node in this vector at the specified index
com.sun.org.apache.xml.internal.utils.NodeVector#appendNodes(NodeVector)->void:::Append the nodes to the list.
com.sun.org.apache.xml.internal.utils.NodeVector#removeAllElements()->void:::Inserts the specified node in this vector at the specified index
com.sun.org.apache.xml.internal.utils.NodeVector#RemoveAllNoClear()->void:::Set the length to zero, but don't clear the array.
com.sun.org.apache.xml.internal.utils.NodeVector#removeElement(int)->boolean:::Removes the first occurrence of the argument from this vector
com.sun.org.apache.xml.internal.utils.NodeVector#removeElementAt(int)->void:::Deletes the component at the specified index
com.sun.org.apache.xml.internal.utils.NodeVector#setElementAt(int, int)->void:::Sets the component at the specified index of this vector to be the specified object
com.sun.org.apache.xml.internal.utils.NodeVector#elementAt(int)->int:::Get the nth element.
com.sun.org.apache.xml.internal.utils.NodeVector#contains(int)->boolean:::Tell if the table contains the given node.
com.sun.org.apache.xml.internal.utils.NodeVector#indexOf(int, int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.NodeVector#indexOf(int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.NodeVector#sort(int[], int, int)->void:::Sort an array using a quicksort algorithm.
com.sun.org.apache.xml.internal.utils.NodeVector#sort()->void:::Sort an array using a quicksort algorithm.
com.sun.org.apache.xml.internal.utils.ObjectPool#getInstanceIfFree()->Object:::Get an instance of the given object in this pool if available
com.sun.org.apache.xml.internal.utils.ObjectPool#getInstance()->Object:::Get an instance of the given object in this pool
com.sun.org.apache.xml.internal.utils.ObjectPool#freeInstance(Object)->void:::Add an instance of the given object to the pool
com.sun.org.apache.xml.internal.utils.ObjectStack#push(Object)->Object:::Pushes an item onto the top of this stack.
com.sun.org.apache.xml.internal.utils.ObjectStack#pop()->Object:::Removes the object at the top of this stack and returns that object as the value of this function.
com.sun.org.apache.xml.internal.utils.ObjectStack#quickPop(int)->void::: object stack quick pop
com.sun.org.apache.xml.internal.utils.ObjectStack#peek()->Object:::Looks at the object at the top of this stack without removing it from the stack.
com.sun.org.apache.xml.internal.utils.ObjectStack#peek(int)->Object:::Looks at the object at the position the stack counting down n items.
com.sun.org.apache.xml.internal.utils.ObjectStack#setTop(Object)->void:::Sets an object at a the top of the statck
com.sun.org.apache.xml.internal.utils.ObjectStack#empty()->boolean:::Tests if this stack is empty.
com.sun.org.apache.xml.internal.utils.ObjectStack#search(Object)->int:::Returns where an object is on this stack.
com.sun.org.apache.xml.internal.utils.ObjectStack#clone()->Object:::Returns clone of current ObjectStack
com.sun.org.apache.xml.internal.utils.ObjectVector#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.ObjectVector#setSize(int)->void:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.ObjectVector#addElement(Object)->void:::Append an object onto the vector.
com.sun.org.apache.xml.internal.utils.ObjectVector#addElements(Object, int)->void:::Append several Object values onto the vector.
com.sun.org.apache.xml.internal.utils.ObjectVector#addElements(int)->void:::Append several slots onto the vector, but do not set the values.
com.sun.org.apache.xml.internal.utils.ObjectVector#insertElementAt(Object, int)->void:::Inserts the specified object in this vector at the specified index
com.sun.org.apache.xml.internal.utils.ObjectVector#removeAllElements()->void:::Remove all elements objects from the list.
com.sun.org.apache.xml.internal.utils.ObjectVector#removeElement(Object)->boolean:::Removes the first occurrence of the argument from this vector
com.sun.org.apache.xml.internal.utils.ObjectVector#removeElementAt(int)->void:::Deletes the component at the specified index
com.sun.org.apache.xml.internal.utils.ObjectVector#setElementAt(Object, int)->void:::Sets the component at the specified index of this vector to be the specified object
com.sun.org.apache.xml.internal.utils.ObjectVector#elementAt(int)->Object:::Get the nth element.
com.sun.org.apache.xml.internal.utils.ObjectVector#contains(Object)->boolean:::Tell if the table contains the given Object.
com.sun.org.apache.xml.internal.utils.ObjectVector#indexOf(Object, int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.ObjectVector#indexOf(Object)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.ObjectVector#lastIndexOf(Object)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.ObjectVector#setToSize(int)->void::: object vector set to size
com.sun.org.apache.xml.internal.utils.ObjectVector#clone()->Object:::Returns clone of current ObjectVector
com.sun.org.apache.xml.internal.utils.PrefixResolver#getNamespaceForPrefix(String)->String:::Given a namespace, get the corrisponding prefix
com.sun.org.apache.xml.internal.utils.PrefixResolver#getNamespaceForPrefix(String, org.w3c.dom.Node)->String:::Given a namespace, get the corresponding prefix, based on the context node.
com.sun.org.apache.xml.internal.utils.PrefixResolver#getBaseIdentifier()->String:::Return the base identifier.
com.sun.org.apache.xml.internal.utils.PrefixResolver#handlesNullPrefixes()->boolean::: prefix resolver handles null prefixes
com.sun.org.apache.xml.internal.utils.PrefixResolverDefault#getNamespaceForPrefix(String)->String:::Given a namespace, get the corrisponding prefix
com.sun.org.apache.xml.internal.utils.PrefixResolverDefault#getNamespaceForPrefix(String, org.w3c.dom.Node)->String:::Given a namespace, get the corrisponding prefix
com.sun.org.apache.xml.internal.utils.PrefixResolverDefault#getBaseIdentifier()->String:::Return the base identifier.
com.sun.org.apache.xml.internal.utils.PrefixResolverDefault#handlesNullPrefixes()->boolean::: prefix resolver default handles null prefixes
com.sun.org.apache.xml.internal.utils.QName#getNamespaceURI()->String:::Returns the namespace URI
com.sun.org.apache.xml.internal.utils.QName#getPrefix()->String:::Returns the namespace prefix
com.sun.org.apache.xml.internal.utils.QName#getLocalName()->String:::Returns the local part of the qualified name.
com.sun.org.apache.xml.internal.utils.QName#toString()->String:::Return the string representation of the qualified name, using the prefix if available, or the '{ns}foo' notation if not
com.sun.org.apache.xml.internal.utils.QName#toNamespacedString()->String:::Return the string representation of the qualified name using the the '{ns}foo' notation
com.sun.org.apache.xml.internal.utils.QName#getNamespace()->String:::Get the namespace of the qualified name.
com.sun.org.apache.xml.internal.utils.QName#getLocalPart()->String:::Get the local part of the qualified name.
com.sun.org.apache.xml.internal.utils.QName#hashCode()->int:::Return the cached hashcode of the qualified name.
com.sun.org.apache.xml.internal.utils.QName#equals(String, String)->boolean:::Override equals and agree that we're equal if the passed object is a string and it matches the name of the arg.
com.sun.org.apache.xml.internal.utils.QName#equals(Object)->boolean:::Override equals and agree that we're equal if the passed object is a QName and it matches the name of the arg.
com.sun.org.apache.xml.internal.utils.QName#getQNameFromString(String)->QName:::Given a string, create and return a QName object
com.sun.org.apache.xml.internal.utils.QName#isXMLNSDecl(String)->boolean:::This function tells if a raw attribute name is a xmlns attribute.
com.sun.org.apache.xml.internal.utils.QName#getPrefixFromXMLNSDecl(String)->String:::This function tells if a raw attribute name is a xmlns attribute.
com.sun.org.apache.xml.internal.utils.QName#getLocalPart(String)->String:::Returns the local name of the given node.
com.sun.org.apache.xml.internal.utils.QName#getPrefixPart(String)->String:::Returns the local name of the given node.
com.sun.org.apache.xml.internal.utils.RawCharacterHandler#charactersRaw(char[], int, int)->void:::Serialize the characters without escaping.
com.sun.org.apache.xml.internal.utils.SafeThread#run()->void::: safe thread run
com.sun.org.apache.xml.internal.utils.SafeThread#eraseThreadLocals()->void:::Drops all thread locals (and inherited thread locals).
com.sun.org.apache.xml.internal.utils.SAXSourceLocator#getPublicId()->String:::Return the public identifier for the current document event
com.sun.org.apache.xml.internal.utils.SAXSourceLocator#getSystemId()->String:::Return the system identifier for the current document event
com.sun.org.apache.xml.internal.utils.SAXSourceLocator#getLineNumber()->int:::Return the line number where the current document event ends
com.sun.org.apache.xml.internal.utils.SAXSourceLocator#getColumnNumber()->int:::Return the column number where the current document event ends
com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl#getPublicId()->String:::Return the saved public identifier.
com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl#getSystemId()->String:::Return the saved system identifier.
com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl#getLineNumber()->int:::Return the saved line number (1-based).
com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl#getColumnNumber()->int:::Return the saved column number (1-based).
com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl#setPublicId(String)->void:::Set the public identifier for this locator.
com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl#setSystemId(String)->void:::Set the system identifier for this locator.
com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl#setLineNumber(int)->void:::Set the line number for this locator (1-based).
com.sun.org.apache.xml.internal.utils.SerializableLocatorImpl#setColumnNumber(int)->void:::Set the column number for this locator (1-based).
com.sun.org.apache.xml.internal.utils.StringBufferPool#get()->FastStringBuffer:::Get the first free instance of a string buffer, or create one if there are no free instances.
com.sun.org.apache.xml.internal.utils.StringBufferPool#free(FastStringBuffer)->void:::Return a string buffer back to the pool.
com.sun.org.apache.xml.internal.utils.StringComparable#getComparator(String, Locale, Collator, String)->Comparable::: string comparable get comparator
com.sun.org.apache.xml.internal.utils.StringComparable#toString()->String::: string comparable to string
com.sun.org.apache.xml.internal.utils.StringComparable#compareTo(StringComparable)->int::: string comparable compare to
com.sun.org.apache.xml.internal.utils.StringToIntTable#getLength()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.StringToIntTable#put(String, int)->void:::Append a string onto the vector.
com.sun.org.apache.xml.internal.utils.StringToIntTable#get(String)->int:::Tell if the table contains the given string.
com.sun.org.apache.xml.internal.utils.StringToIntTable#getIgnoreCase(String)->int:::Tell if the table contains the given string
com.sun.org.apache.xml.internal.utils.StringToIntTable#contains(String)->boolean:::Tell if the table contains the given string.
com.sun.org.apache.xml.internal.utils.StringToIntTable#keys()->String[]:::Return array of keys in the table.
com.sun.org.apache.xml.internal.utils.StringToStringTable#getLength()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.StringToStringTable#put(String, String)->void:::Append a string onto the vector
com.sun.org.apache.xml.internal.utils.StringToStringTable#get(String)->String:::Tell if the table contains the given string.
com.sun.org.apache.xml.internal.utils.StringToStringTable#remove(String)->void:::Remove the given string and its value from this table.
com.sun.org.apache.xml.internal.utils.StringToStringTable#getIgnoreCase(String)->String:::Tell if the table contains the given string
com.sun.org.apache.xml.internal.utils.StringToStringTable#getByValue(String)->String:::Tell if the table contains the given string in the value.
com.sun.org.apache.xml.internal.utils.StringToStringTable#elementAt(int)->String:::Get the nth element.
com.sun.org.apache.xml.internal.utils.StringToStringTable#contains(String)->boolean:::Tell if the table contains the given string.
com.sun.org.apache.xml.internal.utils.StringToStringTable#containsValue(String)->boolean:::Tell if the table contains the given string.
com.sun.org.apache.xml.internal.utils.StringToStringTableVector#getLength()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.StringToStringTableVector#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.StringToStringTableVector#addElement(StringToStringTable)->void:::Append a StringToStringTable object onto the vector.
com.sun.org.apache.xml.internal.utils.StringToStringTableVector#get(String)->String:::Given a string, find the last added occurance value that matches the key.
com.sun.org.apache.xml.internal.utils.StringToStringTableVector#containsKey(String)->boolean:::Given a string, find out if there is a value in this table that matches the key.
com.sun.org.apache.xml.internal.utils.StringToStringTableVector#removeLastElem()->void:::Remove the last element.
com.sun.org.apache.xml.internal.utils.StringToStringTableVector#elementAt(int)->StringToStringTable:::Get the nth element.
com.sun.org.apache.xml.internal.utils.StringToStringTableVector#contains(StringToStringTable)->boolean:::Tell if the table contains the given StringToStringTable.
com.sun.org.apache.xml.internal.utils.StringVector#getLength()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.StringVector#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.StringVector#addElement(String)->void:::Append a string onto the vector.
com.sun.org.apache.xml.internal.utils.StringVector#elementAt(int)->String:::Get the nth element.
com.sun.org.apache.xml.internal.utils.StringVector#contains(String)->boolean:::Tell if the table contains the given string.
com.sun.org.apache.xml.internal.utils.StringVector#containsIgnoreCase(String)->boolean:::Tell if the table contains the given string
com.sun.org.apache.xml.internal.utils.StringVector#push(String)->void:::Tell if the table contains the given string.
com.sun.org.apache.xml.internal.utils.StringVector#pop()->String:::Pop the tail of this vector.
com.sun.org.apache.xml.internal.utils.StringVector#peek()->String:::Get the string at the tail of this vector without popping.
com.sun.org.apache.xml.internal.utils.StylesheetPIHandler#setURIResolver(URIResolver)->void:::Get the object that will be used to resolve URIs in href in xml-stylesheet processing instruction.
com.sun.org.apache.xml.internal.utils.StylesheetPIHandler#getURIResolver()->URIResolver:::Get the object that will be used to resolve URIs in href in xml-stylesheet processing instruction.
com.sun.org.apache.xml.internal.utils.StylesheetPIHandler#getAssociatedStylesheet()->Source:::Return the last stylesheet found that match the constraints.
com.sun.org.apache.xml.internal.utils.StylesheetPIHandler#processingInstruction(String, String)->void:::Handle the xml-stylesheet processing instruction.
com.sun.org.apache.xml.internal.utils.StylesheetPIHandler#startElement(String, String, String, Attributes)->void:::The spec notes that "The xml-stylesheet processing instruction is allowed only in the prolog of an XML document.", so, at least for right now, I'm going to go ahead an throw a TransformerException in order to stop the parse.
com.sun.org.apache.xml.internal.utils.StylesheetPIHandler#setBaseId(String)->void:::Added additional getter and setter methods for the Base Id to fix bugzilla bug 24187
com.sun.org.apache.xml.internal.utils.StylesheetPIHandler#getBaseId()->String::: stylesheet handler get base id
com.sun.org.apache.xml.internal.utils.SuballocatedByteVector#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.SuballocatedByteVector#addElement(byte)->void:::Append a byte onto the vector.
com.sun.org.apache.xml.internal.utils.SuballocatedByteVector#removeAllElements()->void:::Wipe it out.
com.sun.org.apache.xml.internal.utils.SuballocatedByteVector#setElementAt(byte, int)->void:::Sets the component at the specified index of this vector to be the specified object
com.sun.org.apache.xml.internal.utils.SuballocatedByteVector#elementAt(int)->byte:::Get the nth element
com.sun.org.apache.xml.internal.utils.SuballocatedByteVector#indexOf(byte, int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.SuballocatedByteVector#indexOf(byte)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#size()->int:::Get the length of the list.
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#setSize(int)->void:::Set the length of the list
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#addElement(int)->void:::Append a int onto the vector.
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#removeAllElements()->void:::Wipe it out
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#setElementAt(int, int)->void:::Sets the component at the specified index of this vector to be the specified object
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#elementAt(int)->int:::Get the nth element
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#indexOf(int, int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#indexOf(int)->int:::Searches for the first occurence of the given argument, beginning the search at index, and testing for equality using the equals method.
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#getMap0()->int[]:::Return the internal m_map0 array
com.sun.org.apache.xml.internal.utils.SuballocatedIntVector#getMap()->int[][]:::Return the m_map double array
com.sun.org.apache.xml.internal.utils.SystemIDResolver#getAbsoluteURIFromRelative(String)->String:::Get an absolute URI from a given relative URI (local path)
com.sun.org.apache.xml.internal.utils.SystemIDResolver#isAbsoluteURI(String)->boolean:::Return true if the systemId denotes an absolute URI .
com.sun.org.apache.xml.internal.utils.SystemIDResolver#isAbsolutePath(String)->boolean:::Return true if the local path is an absolute path.
com.sun.org.apache.xml.internal.utils.SystemIDResolver#getAbsoluteURI(String)->String:::Take a SystemID string and try to turn it into a good absolute URI.
com.sun.org.apache.xml.internal.utils.SystemIDResolver#getAbsoluteURI(String, String)->String:::Take a SystemID string and try to turn it into a good absolute URI.
com.sun.org.apache.xml.internal.utils.ThreadControllerWrapper#runThread(Runnable, int)->Thread::: thread controller wrapper run thread
com.sun.org.apache.xml.internal.utils.ThreadControllerWrapper#waitThread(Thread, Runnable)->void::: thread controller wrapper wait thread
com.sun.org.apache.xml.internal.utils.ThreadControllerWrapper.ThreadController#run(Runnable, int)->Thread:::Will get a thread from the pool, execute the task and return the thread to the pool
com.sun.org.apache.xml.internal.utils.ThreadControllerWrapper.ThreadController#waitThread(Thread, Runnable)->void:::Wait until the task is completed on the worker thread.
com.sun.org.apache.xml.internal.utils.TreeWalker#getContentHandler()->ContentHandler:::Get the ContentHandler used for the tree walk.
com.sun.org.apache.xml.internal.utils.TreeWalker#setContentHandler(ContentHandler)->void:::Get the ContentHandler used for the tree walk.
com.sun.org.apache.xml.internal.utils.TreeWalker#traverse(Node)->void:::Perform a pre-order traversal non-recursive style
com.sun.org.apache.xml.internal.utils.TreeWalker#traverseFragment(Node)->void:::Perform a pre-order traversal non-recursive style
com.sun.org.apache.xml.internal.utils.TreeWalker#traverse(Node, Node)->void:::Perform a pre-order traversal non-recursive style
com.sun.org.apache.xml.internal.utils.TreeWalker#startNode(Node)->void:::Start processing given node
com.sun.org.apache.xml.internal.utils.TreeWalker#endNode(Node)->void:::End processing of given node
com.sun.org.apache.xml.internal.utils.Trie#put(String, Object)->Object:::Put an object into the trie for lookup.
com.sun.org.apache.xml.internal.utils.Trie#get(String)->Object:::Get an object that matches the key.
com.sun.org.apache.xml.internal.utils.UnImplNode#error(String)->void:::Throw an error.
com.sun.org.apache.xml.internal.utils.UnImplNode#error(String, Object[])->void:::Throw an error.
com.sun.org.apache.xml.internal.utils.UnImplNode#appendChild(Node)->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#hasChildNodes()->boolean:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getNodeType()->short:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getParentNode()->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getChildNodes()->NodeList:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getFirstChild()->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getLastChild()->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getNextSibling()->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getLength()->int:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#item(int)->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getOwnerDocument()->Document:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getTagName()->String:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getNodeName()->String:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#normalize()->void:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getElementsByTagName(String)->NodeList:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#removeAttributeNode(Attr)->Attr:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#setAttributeNode(Attr)->Attr:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#hasAttribute(String)->boolean:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#hasAttributeNS(String, String)->boolean:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getAttributeNode(String)->Attr:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#removeAttribute(String)->void:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#setAttribute(String, String)->void:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getAttribute(String)->String:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#hasAttributes()->boolean:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getElementsByTagNameNS(String, String)->NodeList:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#setAttributeNodeNS(Attr)->Attr:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getAttributeNodeNS(String, String)->Attr:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#removeAttributeNS(String, String)->void:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#setAttributeNS(String, String, String)->void:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getAttributeNS(String, String)->String:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getPreviousSibling()->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#cloneNode(boolean)->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getNodeValue()->String:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#setNodeValue(String)->void:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#setValue(String)->void:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getOwnerElement()->Element:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getSpecified()->boolean:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getAttributes()->NamedNodeMap:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#insertBefore(Node, Node)->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#replaceChild(Node, Node)->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#removeChild(Node)->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#isSupported(String, String)->boolean:::Tests whether the DOM implementation implements a specific feature and that feature is supported by this node.
com.sun.org.apache.xml.internal.utils.UnImplNode#getNamespaceURI()->String:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getPrefix()->String:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#setPrefix(String)->void:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getLocalName()->String:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getDoctype()->DocumentType:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getImplementation()->DOMImplementation:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getDocumentElement()->Element:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createElement(String)->Element:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createDocumentFragment()->DocumentFragment:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createTextNode(String)->Text:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createComment(String)->Comment:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createCDATASection(String)->CDATASection:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createProcessingInstruction(String, String)->ProcessingInstruction:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createAttribute(String)->Attr:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createEntityReference(String)->EntityReference:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#importNode(Node, boolean)->Node:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createElementNS(String, String)->Element:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#createAttributeNS(String, String)->Attr:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#getElementById(String)->Element:::Unimplemented
com.sun.org.apache.xml.internal.utils.UnImplNode#setData(String)->void:::Set Node data
com.sun.org.apache.xml.internal.utils.UnImplNode#substringData(int, int)->String:::Unimplemented.
com.sun.org.apache.xml.internal.utils.UnImplNode#appendData(String)->void:::Unimplemented.
com.sun.org.apache.xml.internal.utils.UnImplNode#insertData(int, String)->void:::Unimplemented.
com.sun.org.apache.xml.internal.utils.UnImplNode#deleteData(int, int)->void:::Unimplemented.
com.sun.org.apache.xml.internal.utils.UnImplNode#replaceData(int, int, String)->void:::Unimplemented.
com.sun.org.apache.xml.internal.utils.UnImplNode#splitText(int)->Text:::Unimplemented.
com.sun.org.apache.xml.internal.utils.UnImplNode#adoptNode(Node)->Node:::NEEDSDOC Method adoptNode   NEEDSDOC @param source  NEEDSDOC (adoptNode) @return
com.sun.org.apache.xml.internal.utils.UnImplNode#getInputEncoding()->String:::EXPERIMENTAL! Based on the Document Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.
com.sun.org.apache.xml.internal.utils.UnImplNode#setInputEncoding(String)->void:::EXPERIMENTAL! Based on the Document Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.
com.sun.org.apache.xml.internal.utils.UnImplNode#getStandalone()->boolean:::EXPERIMENTAL! Based on the Document Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.
com.sun.org.apache.xml.internal.utils.UnImplNode#setStandalone(boolean)->void:::EXPERIMENTAL! Based on the Document Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.
com.sun.org.apache.xml.internal.utils.UnImplNode#getStrictErrorChecking()->boolean:::EXPERIMENTAL! Based on the Document Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.
com.sun.org.apache.xml.internal.utils.UnImplNode#setStrictErrorChecking(boolean)->void:::EXPERIMENTAL! Based on the Document Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.
com.sun.org.apache.xml.internal.utils.UnImplNode#getVersion()->String:::EXPERIMENTAL! Based on the Document Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.
com.sun.org.apache.xml.internal.utils.UnImplNode#setVersion(String)->void:::EXPERIMENTAL! Based on the Document Object Model (DOM) Level 3 Core Working Draft of 5 June 2001.
com.sun.org.apache.xml.internal.utils.UnImplNode#setUserData(String, Object, UserDataHandler)->Object::: un impl node set user data
com.sun.org.apache.xml.internal.utils.UnImplNode#getUserData(String)->Object:::Retrieves the object associated to a key on a this node
com.sun.org.apache.xml.internal.utils.UnImplNode#getFeature(String, String)->Object::: This method returns a specialized object which implements the specialized APIs of the specified feature and version
com.sun.org.apache.xml.internal.utils.UnImplNode#isEqualNode(Node)->boolean:::Tests whether two nodes are equal
com.sun.org.apache.xml.internal.utils.UnImplNode#lookupNamespaceURI(String)->String:::DOM Level 3 - Experimental: Look up the namespace URI associated to the given prefix, starting from this node
com.sun.org.apache.xml.internal.utils.UnImplNode#isDefaultNamespace(String)->boolean::: DOM Level 3: Experimental  This method checks if the specified namespaceURI is the  default namespace or not.
com.sun.org.apache.xml.internal.utils.UnImplNode#lookupPrefix(String)->String:::DOM Level 3 - Experimental: Look up the prefix associated to the given namespace URI, starting from this node.
com.sun.org.apache.xml.internal.utils.UnImplNode#isSameNode(Node)->boolean:::Returns whether this node is the same node as the given one
com.sun.org.apache.xml.internal.utils.UnImplNode#setTextContent(String)->void:::This attribute returns the text content of this node and its descendants
com.sun.org.apache.xml.internal.utils.UnImplNode#getTextContent()->String:::This attribute returns the text content of this node and its descendants
com.sun.org.apache.xml.internal.utils.UnImplNode#compareDocumentPosition(Node)->short:::Compares a node with this node with regard to their position in the document.
com.sun.org.apache.xml.internal.utils.UnImplNode#getBaseURI()->String:::The absolute base URI of this node or null if undefined
com.sun.org.apache.xml.internal.utils.UnImplNode#renameNode(Node, String, String)->Node:::DOM Level 3 WD - Experimental
com.sun.org.apache.xml.internal.utils.UnImplNode#normalizeDocument()->void::: DOM Level 3 WD - Experimental  Normalize document.
com.sun.org.apache.xml.internal.utils.UnImplNode#getDomConfig()->DOMConfiguration::: The configuration used when Document.normalizeDocument is invoked.
com.sun.org.apache.xml.internal.utils.UnImplNode#setDocumentURI(String)->void:::DOM Level 3 WD - Experimental.
com.sun.org.apache.xml.internal.utils.UnImplNode#getDocumentURI()->String:::DOM Level 3 WD - Experimental
com.sun.org.apache.xml.internal.utils.UnImplNode#getActualEncoding()->String:::DOM Level 3 WD - Experimental
com.sun.org.apache.xml.internal.utils.UnImplNode#setActualEncoding(String)->void:::DOM Level 3 WD - Experimental
com.sun.org.apache.xml.internal.utils.UnImplNode#replaceWholeText(String)->Text:::DOM Level 3 WD - Experimental.
com.sun.org.apache.xml.internal.utils.UnImplNode#getWholeText()->String:::DOM Level 3 WD - Experimental
com.sun.org.apache.xml.internal.utils.UnImplNode#isWhitespaceInElementContent()->boolean:::DOM Level 3 WD - Experimental
com.sun.org.apache.xml.internal.utils.UnImplNode#setIdAttribute(boolean)->void:::NON-DOM: set the type of this attribute to be ID type.
com.sun.org.apache.xml.internal.utils.UnImplNode#setIdAttribute(String, boolean)->void:::DOM Level 3: register the given attribute node as an ID attribute
com.sun.org.apache.xml.internal.utils.UnImplNode#setIdAttributeNode(Attr, boolean)->void:::DOM Level 3: register the given attribute node as an ID attribute
com.sun.org.apache.xml.internal.utils.UnImplNode#setIdAttributeNS(String, String, boolean)->void:::DOM Level 3: register the given attribute node as an ID attribute
com.sun.org.apache.xml.internal.utils.UnImplNode#getSchemaTypeInfo()->TypeInfo:::Method getSchemaTypeInfo.
com.sun.org.apache.xml.internal.utils.UnImplNode#isId()->boolean::: un impl node is id
com.sun.org.apache.xml.internal.utils.UnImplNode#getXmlEncoding()->String::: un impl node get xml encoding
com.sun.org.apache.xml.internal.utils.UnImplNode#setXmlEncoding(String)->void::: un impl node set xml encoding
com.sun.org.apache.xml.internal.utils.UnImplNode#getXmlStandalone()->boolean::: un impl node get xml standalone
com.sun.org.apache.xml.internal.utils.UnImplNode#setXmlStandalone(boolean)->void::: un impl node set xml standalone
com.sun.org.apache.xml.internal.utils.UnImplNode#getXmlVersion()->String::: un impl node get xml version
com.sun.org.apache.xml.internal.utils.UnImplNode#setXmlVersion(String)->void::: un impl node set xml version
com.sun.org.apache.xml.internal.utils.URI#getScheme()->String:::Get the scheme for this URI.
com.sun.org.apache.xml.internal.utils.URI#getSchemeSpecificPart()->String:::Get the scheme-specific part for this URI (everything following the scheme and the first colon)
com.sun.org.apache.xml.internal.utils.URI#getUserinfo()->String:::Get the userinfo for this URI.
com.sun.org.apache.xml.internal.utils.URI#getHost()->String:::Get the host for this URI.
com.sun.org.apache.xml.internal.utils.URI#getPort()->int:::Get the port for this URI.
com.sun.org.apache.xml.internal.utils.URI#getPath(boolean, boolean)->String:::Get the path for this URI (optionally with the query string and fragment).
com.sun.org.apache.xml.internal.utils.URI#getPath()->String:::Get the path for this URI
com.sun.org.apache.xml.internal.utils.URI#getQueryString()->String:::Get the query string for this URI.
com.sun.org.apache.xml.internal.utils.URI#getFragment()->String:::Get the fragment for this URI.
com.sun.org.apache.xml.internal.utils.URI#setScheme(String)->void:::Set the scheme for this URI
com.sun.org.apache.xml.internal.utils.URI#setUserinfo(String)->void:::Set the userinfo for this URI
com.sun.org.apache.xml.internal.utils.URI#setHost(String)->void:::Set the host for this URI
com.sun.org.apache.xml.internal.utils.URI#setPort(int)->void:::Set the port for this URI
com.sun.org.apache.xml.internal.utils.URI#setPath(String)->void:::Set the path for this URI
com.sun.org.apache.xml.internal.utils.URI#appendPath(String)->void:::Append to the end of the path of this URI
com.sun.org.apache.xml.internal.utils.URI#setQueryString(String)->void:::Set the query string for this URI
com.sun.org.apache.xml.internal.utils.URI#setFragment(String)->void:::Set the fragment for this URI
com.sun.org.apache.xml.internal.utils.URI#equals(Object)->boolean:::Determines if the passed-in Object is equivalent to this URI.
com.sun.org.apache.xml.internal.utils.URI#hashCode()->int::: i hash code
com.sun.org.apache.xml.internal.utils.URI#toString()->String:::Get the URI as a string specification
com.sun.org.apache.xml.internal.utils.URI#isGenericURI()->boolean:::Get the indicator as to whether this URI uses the "generic URI" syntax.
com.sun.org.apache.xml.internal.utils.URI#isConformantSchemeName(String)->boolean:::Determine whether a scheme conforms to the rules for a scheme name
com.sun.org.apache.xml.internal.utils.URI#isWellFormedAddress(String)->boolean:::Determine whether a string is syntactically capable of representing a valid IPv4 address or the domain name of a network host
com.sun.org.apache.xml.internal.utils.WrappedRuntimeException#getException()->Exception:::Get the checked exception that this runtime exception wraps.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11Space(int)->boolean:::Returns true if the specified character is a space character as amdended in the XML 1.1 specification.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11Valid(int)->boolean:::Returns true if the specified character is valid
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11Invalid(int)->boolean:::Returns true if the specified character is invalid.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11ValidLiteral(int)->boolean:::Returns true if the specified character is valid and permitted outside of a character reference
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11Content(int)->boolean:::Returns true if the specified character can be considered content in an external parsed entity.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11InternalEntityContent(int)->boolean:::Returns true if the specified character can be considered content in an internal parsed entity.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11NameStart(int)->boolean:::Returns true if the specified character is a valid name start character as defined by production [4] in the XML 1.1 specification.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11Name(int)->boolean:::Returns true if the specified character is a valid name character as defined by production [4a] in the XML 1.1 specification.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11NCNameStart(int)->boolean:::Returns true if the specified character is a valid NCName start character as defined by production [4] in Namespaces in XML 1.1 recommendation.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11NCName(int)->boolean:::Returns true if the specified character is a valid NCName character as defined by production [5] in Namespaces in XML 1.1 recommendation.
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11NameHighSurrogate(int)->boolean:::Returns whether the given character is a valid high surrogate for a name character
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11ValidName(String)->boolean:::Check to see if a string is a valid Name according to [5] in the XML 1.1 Recommendation
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11ValidNCName(String)->boolean:::Check to see if a string is a valid NCName according to [4] from the XML Namespaces 1.1 Recommendation
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11ValidNmtoken(String)->boolean:::Check to see if a string is a valid Nmtoken according to [7] in the XML 1.1 Recommendation
com.sun.org.apache.xml.internal.utils.XML11Char#isXML11ValidQName(String)->boolean:::Simple check to determine if qname is legal
com.sun.org.apache.xml.internal.utils.XMLChar#isSupplemental(int)->boolean:::Returns true if the specified character is a supplemental character.
com.sun.org.apache.xml.internal.utils.XMLChar#supplemental(char, char)->int:::Returns true the supplemental character corresponding to the given surrogates.
com.sun.org.apache.xml.internal.utils.XMLChar#highSurrogate(int)->char:::Returns the high surrogate of a supplemental character
com.sun.org.apache.xml.internal.utils.XMLChar#lowSurrogate(int)->char:::Returns the low surrogate of a supplemental character
com.sun.org.apache.xml.internal.utils.XMLChar#isHighSurrogate(int)->boolean:::Returns whether the given character is a high surrogate
com.sun.org.apache.xml.internal.utils.XMLChar#isLowSurrogate(int)->boolean:::Returns whether the given character is a low surrogate
com.sun.org.apache.xml.internal.utils.XMLChar#isValid(int)->boolean:::Returns true if the specified character is valid
com.sun.org.apache.xml.internal.utils.XMLChar#isInvalid(int)->boolean:::Returns true if the specified character is invalid.
com.sun.org.apache.xml.internal.utils.XMLChar#isContent(int)->boolean:::Returns true if the specified character can be considered content.
com.sun.org.apache.xml.internal.utils.XMLChar#isMarkup(int)->boolean:::Returns true if the specified character can be considered markup
com.sun.org.apache.xml.internal.utils.XMLChar#isSpace(int)->boolean:::Returns true if the specified character is a space character as defined by production [3] in the XML 1.0 specification.
com.sun.org.apache.xml.internal.utils.XMLChar#isNameStart(int)->boolean:::Returns true if the specified character is a valid name start character as defined by production [5] in the XML 1.0 specification.
com.sun.org.apache.xml.internal.utils.XMLChar#isName(int)->boolean:::Returns true if the specified character is a valid name character as defined by production [4] in the XML 1.0 specification.
com.sun.org.apache.xml.internal.utils.XMLChar#isNCNameStart(int)->boolean:::Returns true if the specified character is a valid NCName start character as defined by production [4] in Namespaces in XML recommendation.
com.sun.org.apache.xml.internal.utils.XMLChar#isNCName(int)->boolean:::Returns true if the specified character is a valid NCName character as defined by production [5] in Namespaces in XML recommendation.
com.sun.org.apache.xml.internal.utils.XMLChar#isPubid(int)->boolean:::Returns true if the specified character is a valid Pubid character as defined by production [13] in the XML 1.0 specification.
com.sun.org.apache.xml.internal.utils.XMLChar#isValidName(String)->boolean:::Check to see if a string is a valid Name according to [5] in the XML 1.0 Recommendation
com.sun.org.apache.xml.internal.utils.XMLChar#isValidNCName(String)->boolean:::Check to see if a string is a valid NCName according to [4] from the XML Namespaces 1.0 Recommendation
com.sun.org.apache.xml.internal.utils.XMLChar#isValidNmtoken(String)->boolean:::Check to see if a string is a valid Nmtoken according to [7] in the XML 1.0 Recommendation
com.sun.org.apache.xml.internal.utils.XMLChar#isValidIANAEncoding(String)->boolean:::Returns true if the encoding name is a valid IANA encoding
com.sun.org.apache.xml.internal.utils.XMLChar#isValidJavaEncoding(String)->boolean:::Returns true if the encoding name is a valid Java encoding
com.sun.org.apache.xml.internal.utils.XMLChar#isValidQName(String)->boolean:::Simple check to determine if qname is legal
com.sun.org.apache.xml.internal.utils.XMLCharacterRecognizer#isWhiteSpace(char)->boolean:::Returns whether the specified <var>ch</var> conforms to the XML 1.0 definition of whitespace
com.sun.org.apache.xml.internal.utils.XMLCharacterRecognizer#isWhiteSpace(char[], int, int)->boolean:::Tell if the string is whitespace.
com.sun.org.apache.xml.internal.utils.XMLCharacterRecognizer#isWhiteSpace(StringBuffer)->boolean:::Tell if the string is whitespace.
com.sun.org.apache.xml.internal.utils.XMLCharacterRecognizer#isWhiteSpace(String)->boolean:::Tell if the string is whitespace.
com.sun.org.apache.xml.internal.utils.XMLReaderManager#getInstance(boolean)->XMLReaderManager:::Retrieves the singleton reader manager
com.sun.org.apache.xml.internal.utils.XMLReaderManager#getXMLReader()->XMLReader:::Retrieves a cached XMLReader for this thread, or creates a new XMLReader, if the existing reader is in use
com.sun.org.apache.xml.internal.utils.XMLReaderManager#releaseXMLReader(XMLReader)->void:::Mark the cached XMLReader as available
com.sun.org.apache.xml.internal.utils.XMLReaderManager#overrideDefaultParser()->boolean:::Return the state of the services mechanism feature.
com.sun.org.apache.xml.internal.utils.XMLReaderManager#setOverrideDefaultParser(boolean)->void:::Set the state of the services mechanism feature.
com.sun.org.apache.xml.internal.utils.XMLReaderManager#setFeature(String, boolean)->void:::Set feature
com.sun.org.apache.xml.internal.utils.XMLReaderManager#getProperty(String)->Object:::Get property value
com.sun.org.apache.xml.internal.utils.XMLReaderManager#setProperty(String, Object)->void:::Set property.
com.sun.org.apache.xml.internal.utils.XMLString#dispatchCharactersEvents(org.xml.sax.ContentHandler)->void:::Directly call the characters method on the passed ContentHandler for the string-value
com.sun.org.apache.xml.internal.utils.XMLString#dispatchAsComment(org.xml.sax.ext.LexicalHandler)->void:::Directly call the comment method on the passed LexicalHandler for the string-value.
com.sun.org.apache.xml.internal.utils.XMLString#fixWhiteSpace(boolean, boolean, boolean)->XMLString:::Conditionally trim all leading and trailing whitespace in the specified String
com.sun.org.apache.xml.internal.utils.XMLString#length()->int:::Returns the length of this string.
com.sun.org.apache.xml.internal.utils.XMLString#charAt(int)->char:::Returns the character at the specified index
com.sun.org.apache.xml.internal.utils.XMLString#getChars(int, int, char[], int)->void:::Copies characters from this string into the destination character array.
com.sun.org.apache.xml.internal.utils.XMLString#equals(XMLString)->boolean:::Compares this string to the specified object
com.sun.org.apache.xml.internal.utils.XMLString#equals(String)->boolean:::Compares this string to the specified String
com.sun.org.apache.xml.internal.utils.XMLString#equals(Object)->boolean:::Compares this string to the specified object
com.sun.org.apache.xml.internal.utils.XMLString#equalsIgnoreCase(String)->boolean:::Compares this String to another String, ignoring case considerations
com.sun.org.apache.xml.internal.utils.XMLString#compareTo(XMLString)->int:::Compares two strings lexicographically.
com.sun.org.apache.xml.internal.utils.XMLString#compareToIgnoreCase(XMLString)->int:::Compares two strings lexicographically, ignoring case considerations
com.sun.org.apache.xml.internal.utils.XMLString#startsWith(String, int)->boolean:::Tests if this string starts with the specified prefix beginning a specified index.
com.sun.org.apache.xml.internal.utils.XMLString#startsWith(XMLString, int)->boolean:::Tests if this string starts with the specified prefix beginning a specified index.
com.sun.org.apache.xml.internal.utils.XMLString#startsWith(String)->boolean:::Tests if this string starts with the specified prefix.
com.sun.org.apache.xml.internal.utils.XMLString#startsWith(XMLString)->boolean:::Tests if this string starts with the specified prefix.
com.sun.org.apache.xml.internal.utils.XMLString#endsWith(String)->boolean:::Tests if this string ends with the specified suffix.
com.sun.org.apache.xml.internal.utils.XMLString#hashCode()->int:::Returns a hashcode for this string
com.sun.org.apache.xml.internal.utils.XMLString#indexOf(int)->int:::Returns the index within this string of the first occurrence of the specified character
com.sun.org.apache.xml.internal.utils.XMLString#indexOf(int, int)->int:::Returns the index within this string of the first occurrence of the specified character, starting the search at the specified index
com.sun.org.apache.xml.internal.utils.XMLString#lastIndexOf(int)->int:::Returns the index within this string of the last occurrence of the specified character
com.sun.org.apache.xml.internal.utils.XMLString#lastIndexOf(int, int)->int:::Returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index
com.sun.org.apache.xml.internal.utils.XMLString#indexOf(String)->int:::Returns the index within this string of the first occurrence of the specified substring
com.sun.org.apache.xml.internal.utils.XMLString#indexOf(XMLString)->int:::Returns the index within this string of the first occurrence of the specified substring
com.sun.org.apache.xml.internal.utils.XMLString#indexOf(String, int)->int:::Returns the index within this string of the first occurrence of the specified substring, starting at the specified index
com.sun.org.apache.xml.internal.utils.XMLString#lastIndexOf(String)->int:::Returns the index within this string of the rightmost occurrence of the specified substring
com.sun.org.apache.xml.internal.utils.XMLString#lastIndexOf(String, int)->int:::Returns the index within this string of the last occurrence of the specified substring.
com.sun.org.apache.xml.internal.utils.XMLString#substring(int)->XMLString:::Returns a new string that is a substring of this string
com.sun.org.apache.xml.internal.utils.XMLString#substring(int, int)->XMLString:::Returns a new string that is a substring of this string
com.sun.org.apache.xml.internal.utils.XMLString#concat(String)->XMLString:::Concatenates the specified string to the end of this string.
com.sun.org.apache.xml.internal.utils.XMLString#toLowerCase(Locale)->XMLString:::Converts all of the characters in this String to lower case using the rules of the given Locale.
com.sun.org.apache.xml.internal.utils.XMLString#toLowerCase()->XMLString:::Converts all of the characters in this String to lower case using the rules of the default locale, which is returned by Locale.getDefault
com.sun.org.apache.xml.internal.utils.XMLString#toUpperCase(Locale)->XMLString:::Converts all of the characters in this String to upper case using the rules of the given locale.
com.sun.org.apache.xml.internal.utils.XMLString#toUpperCase()->XMLString:::Converts all of the characters in this String to upper case using the rules of the default locale, which is returned by Locale.getDefault
com.sun.org.apache.xml.internal.utils.XMLString#trim()->XMLString:::Removes white space from both ends of this string
com.sun.org.apache.xml.internal.utils.XMLString#toString()->String:::This object (which is already a string!) is itself returned.
com.sun.org.apache.xml.internal.utils.XMLString#hasString()->boolean:::Tell if this object contains a java String object.
com.sun.org.apache.xml.internal.utils.XMLString#toDouble()->double:::Convert a string to a double -- Allowed input is in fixed notation ddd.fff.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#dispatchCharactersEvents(org.xml.sax.ContentHandler)->void:::Directly call the characters method on the passed ContentHandler for the string-value
com.sun.org.apache.xml.internal.utils.XMLStringDefault#dispatchAsComment(org.xml.sax.ext.LexicalHandler)->void:::Directly call the comment method on the passed LexicalHandler for the string-value.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#fixWhiteSpace(boolean, boolean, boolean)->XMLString:::Conditionally trim all leading and trailing whitespace in the specified String
com.sun.org.apache.xml.internal.utils.XMLStringDefault#length()->int:::Returns the length of this string.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#charAt(int)->char:::Returns the character at the specified index
com.sun.org.apache.xml.internal.utils.XMLStringDefault#getChars(int, int, char[], int)->void:::Copies characters from this string into the destination character array.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#equals(String)->boolean:::Compares this string to the specified String
com.sun.org.apache.xml.internal.utils.XMLStringDefault#equals(XMLString)->boolean:::Compares this string to the specified object
com.sun.org.apache.xml.internal.utils.XMLStringDefault#equals(Object)->boolean:::Compares this string to the specified object
com.sun.org.apache.xml.internal.utils.XMLStringDefault#equalsIgnoreCase(String)->boolean:::Compares this String to another String, ignoring case considerations
com.sun.org.apache.xml.internal.utils.XMLStringDefault#compareTo(XMLString)->int:::Compares two strings lexicographically.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#compareToIgnoreCase(XMLString)->int:::Compares two strings lexicographically, ignoring case considerations
com.sun.org.apache.xml.internal.utils.XMLStringDefault#startsWith(String, int)->boolean:::Tests if this string starts with the specified prefix beginning a specified index.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#startsWith(XMLString, int)->boolean:::Tests if this string starts with the specified prefix beginning a specified index.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#startsWith(String)->boolean:::Tests if this string starts with the specified prefix.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#startsWith(XMLString)->boolean:::Tests if this string starts with the specified prefix.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#endsWith(String)->boolean:::Tests if this string ends with the specified suffix.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#hashCode()->int:::Returns a hashcode for this string
com.sun.org.apache.xml.internal.utils.XMLStringDefault#indexOf(int)->int:::Returns the index within this string of the first occurrence of the specified character
com.sun.org.apache.xml.internal.utils.XMLStringDefault#indexOf(int, int)->int:::Returns the index within this string of the first occurrence of the specified character, starting the search at the specified index
com.sun.org.apache.xml.internal.utils.XMLStringDefault#lastIndexOf(int)->int:::Returns the index within this string of the last occurrence of the specified character
com.sun.org.apache.xml.internal.utils.XMLStringDefault#lastIndexOf(int, int)->int:::Returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index
com.sun.org.apache.xml.internal.utils.XMLStringDefault#indexOf(String)->int:::Returns the index within this string of the first occurrence of the specified substring
com.sun.org.apache.xml.internal.utils.XMLStringDefault#indexOf(XMLString)->int:::Returns the index within this string of the first occurrence of the specified substring
com.sun.org.apache.xml.internal.utils.XMLStringDefault#indexOf(String, int)->int:::Returns the index within this string of the first occurrence of the specified substring, starting at the specified index
com.sun.org.apache.xml.internal.utils.XMLStringDefault#lastIndexOf(String)->int:::Returns the index within this string of the rightmost occurrence of the specified substring
com.sun.org.apache.xml.internal.utils.XMLStringDefault#lastIndexOf(String, int)->int:::Returns the index within this string of the last occurrence of the specified substring.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#substring(int)->XMLString:::Returns a new string that is a substring of this string
com.sun.org.apache.xml.internal.utils.XMLStringDefault#substring(int, int)->XMLString:::Returns a new string that is a substring of this string
com.sun.org.apache.xml.internal.utils.XMLStringDefault#concat(String)->XMLString:::Concatenates the specified string to the end of this string.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#toLowerCase(Locale)->XMLString:::Converts all of the characters in this String to lower case using the rules of the given Locale.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#toLowerCase()->XMLString:::Converts all of the characters in this String to lower case using the rules of the default locale, which is returned by Locale.getDefault
com.sun.org.apache.xml.internal.utils.XMLStringDefault#toUpperCase(Locale)->XMLString:::Converts all of the characters in this String to upper case using the rules of the given locale.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#toUpperCase()->XMLString:::Converts all of the characters in this String to upper case using the rules of the default locale, which is returned by Locale.getDefault
com.sun.org.apache.xml.internal.utils.XMLStringDefault#trim()->XMLString:::Removes white space from both ends of this string
com.sun.org.apache.xml.internal.utils.XMLStringDefault#toString()->String:::This object (which is already a string!) is itself returned.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#hasString()->boolean:::Tell if this object contains a java String object.
com.sun.org.apache.xml.internal.utils.XMLStringDefault#toDouble()->double:::Convert a string to a double -- Allowed input is in fixed notation ddd.fff.
com.sun.org.apache.xml.internal.utils.XMLStringFactory#newstr(String)->XMLString:::Create a new XMLString from a Java string.
com.sun.org.apache.xml.internal.utils.XMLStringFactory#newstr(FastStringBuffer, int, int)->XMLString:::Create a XMLString from a FastStringBuffer.
com.sun.org.apache.xml.internal.utils.XMLStringFactory#newstr(char[], int, int)->XMLString:::Create a XMLString from a FastStringBuffer.
com.sun.org.apache.xml.internal.utils.XMLStringFactory#emptystr()->XMLString:::Get a cheap representation of an empty string.
com.sun.org.apache.xml.internal.utils.XMLStringFactoryDefault#newstr(String)->XMLString:::Create a new XMLString from a Java string.
com.sun.org.apache.xml.internal.utils.XMLStringFactoryDefault#newstr(FastStringBuffer, int, int)->XMLString:::Create a XMLString from a FastStringBuffer.
com.sun.org.apache.xml.internal.utils.XMLStringFactoryDefault#newstr(char[], int, int)->XMLString:::Create a XMLString from a FastStringBuffer.
com.sun.org.apache.xml.internal.utils.XMLStringFactoryDefault#emptystr()->XMLString:::Get a cheap representation of an empty string.
