EnvHelp#resolveServerClassLoader(Map, MBeanServer):::Get the Connector Server default class loader:::if->return->Thread->currentThread->getContextClassLoader->loader->env->get->name->env->get->if->msg->throw->new->IllegalArgumentException->if->return->Thread->currentThread->getContextClassLoader->if->if->return->else->msg->getName->loader->getClass->getName->throw->new->IllegalArgumentException->on->if->else->msg->getName->name->getClass->getName->throw->new->IllegalArgumentException->if->throw->new->IllegalArgumentException->return->mbs->getClassLoader
EnvHelp#resolveClientClassLoader(Map):::Get the Connector Client default class loader:::if->return->Thread->currentThread->getContextClassLoader->loader->env->get->if->return->Thread->currentThread->getContextClassLoader->if->return->else->msg->getName->loader->getClass->getName->throw->new->IllegalArgumentException
EnvHelp#initCause(T, Throwable):::Initialize the cause field of a Throwable object.:::throwable->initCause->return
EnvHelp#getCause(Throwable):::Returns the cause field of a Throwable object:::ret->try->getCause->t->getClass->getMethod->getCause->invoke->catch->finally->return
EnvHelp#getNotifBufferSize(Map):::Returns the size of a notification buffer for a connector server:::defaultQueueSize->oldP->try->act->new->GetPropertyAction->s->AccessController->doPrivileged->if->Integer->parseInt->else->new->GetPropertyAction->AccessController->doPrivileged->if->Integer->parseInt->catch->logger->warning->logger->debug->finally->queueSize->try->if->env->containsKey->EnvHelp->getIntegerAttribute->else->EnvHelp->getIntegerAttribute->catch->logger->warning->logger->debug->finally->return
EnvHelp#getMaxFetchNotifNumber(Map):::Returns the maximum notification number which a client will fetch every time.:::return->getIntegerAttribute
EnvHelp#getFetchTimeout(Map):::Returns the timeout for a client to fetch notifications.:::return->getIntegerAttribute
EnvHelp#getIntegerAttribute(Map, String, long, long, long):::Get an integer-valued attribute with name name from env:::o->if->env->get->return->result->if->longValue->else->if->Long->parseLong->else->msg->throw->new->IllegalArgumentException->if->msg->throw->new->IllegalArgumentException->if->msg->throw->new->IllegalArgumentException->return
EnvHelp#getServerConnectionTimeout(Map):::Returns the server side connection timeout.:::return->getIntegerAttribute
EnvHelp#getConnectionCheckPeriod(Map):::Returns the client connection check period.:::return->getIntegerAttribute
EnvHelp#computeBooleanFromString(String):::Computes a boolean value from a string value retrieved from a property in the given map.:::return->computeBooleanFromString
EnvHelp#computeBooleanFromString(String, boolean):::Computes a boolean value from a string value retrieved from a property in the given map.:::if->return->else->if->stringBoolean->equalsIgnoreCase->return->else->if->stringBoolean->equalsIgnoreCase->return->else->throw->new->IllegalArgumentException
EnvHelp#mapToHashtable(Map):::Converts a map into a valid hash table, i.e:::m->new->HashMap<K,V>->if->m->containsKey->m->remove->for->i->m->values->iterator->i->hasNext->return->new->Hashtable<K,V>
EnvHelp#isServerDaemon(Map):::Returns true if JMX_SERVER_DAEMON is specified in the env as a key and its value is a String and it is equal to true ignoring case.:::return->env->get->equalsIgnoreCase
