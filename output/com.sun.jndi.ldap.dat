com.sun.jndi.ldap.AbstractLdapNamingEnumeration#nextElement()->T::: abstract ldap naming enumeration next element
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#hasMoreElements()->boolean::: abstract ldap naming enumeration has more elements
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#hasMore()->boolean::: abstract ldap naming enumeration has more
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#next()->T::: abstract ldap naming enumeration next
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#getAtom(String)->String::: abstract ldap naming enumeration get atom
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#createItem(String, Attributes, Vector)->T::: abstract ldap naming enumeration create item
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#appendUnprocessedReferrals(LdapReferralException)->void::: abstract ldap naming enumeration append unprocessed referrals
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#setNamingException(NamingException)->void::: abstract ldap naming enumeration set naming exception
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#getReferredResults(LdapReferralContext)->AbstractLdapNamingEnumeration::: abstract ldap naming enumeration get referred results
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#hasMoreReferrals()->boolean::: abstract ldap naming enumeration has more referrals
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#update(AbstractLdapNamingEnumeration)->void::: abstract ldap naming enumeration update
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#finalize()->void::: abstract ldap naming enumeration finalize
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#cleanup()->void::: abstract ldap naming enumeration cleanup
com.sun.jndi.ldap.AbstractLdapNamingEnumeration#close()->void::: abstract ldap naming enumeration close
com.sun.jndi.ldap.BasicControl#getID()->String:::Retrieves the control's object identifier string.
com.sun.jndi.ldap.BasicControl#isCritical()->boolean:::Determines the control's criticality.
com.sun.jndi.ldap.BasicControl#getEncodedValue()->byte[]:::Retrieves the control's ASN.1 BER encoded value
com.sun.jndi.ldap.Ber#dumpBER(OutputStream, String, byte[], int, int)->void::: ber dump r
com.sun.jndi.ldap.BerDecoder#reset()->void:::Resets this decode to start parsing from the initial offset (ie., same state as after calling the constructor).
com.sun.jndi.ldap.BerDecoder#getParsePosition()->int:::Returns the current parse position
com.sun.jndi.ldap.BerDecoder#parseLength()->int:::Parses a possibly variable length field.
com.sun.jndi.ldap.BerDecoder#parseSeq(int[])->int:::Parses the next sequence in this BER buffer.
com.sun.jndi.ldap.BerDecoder#seek(int)->void:::Used to skip bytes
com.sun.jndi.ldap.BerDecoder#parseByte()->int:::Parses the next byte in this BER buffer.
com.sun.jndi.ldap.BerDecoder#peekByte()->int:::Returns the next byte in this BER buffer without consuming it.
com.sun.jndi.ldap.BerDecoder#parseBoolean()->boolean:::Parses an ASN_BOOLEAN tagged integer from this BER buffer.
com.sun.jndi.ldap.BerDecoder#parseEnumeration()->int:::Parses an ASN_ENUMERATED tagged integer from this BER buffer.
com.sun.jndi.ldap.BerDecoder#parseInt()->int:::Parses an ASN_INTEGER tagged integer from this BER buffer.
com.sun.jndi.ldap.BerDecoder#parseString(boolean)->String:::Parses a string.
com.sun.jndi.ldap.BerDecoder#parseStringWithTag(int, boolean, int[])->String:::Parses a string of a given tag from this BER buffer
com.sun.jndi.ldap.BerDecoder#parseOctetString(int, int[])->byte[]:::Parses an octet string of a given type(tag) from this BER buffer
com.sun.jndi.ldap.BerDecoder#bytesLeft()->int:::Returns the number of unparsed bytes in this BER buffer.
com.sun.jndi.ldap.BerEncoder#reset()->void:::Resets encoder to state when newly constructed
com.sun.jndi.ldap.BerEncoder#getDataLen()->int:::Gets the number of encoded bytes in this BER buffer.
com.sun.jndi.ldap.BerEncoder#getBuf()->byte[]:::Gets the buffer that contains the BER encoding
com.sun.jndi.ldap.BerEncoder#getTrimmedBuf()->byte[]:::Gets the buffer that contains the BER encoding, trimming unused bytes.
com.sun.jndi.ldap.BerEncoder#beginSeq(int)->void:::Begin encoding a sequence with a tag.
com.sun.jndi.ldap.BerEncoder#endSeq()->void:::Terminate a BER sequence.
com.sun.jndi.ldap.BerEncoder#encodeByte(int)->void:::Encode a single byte.
com.sun.jndi.ldap.BerEncoder#encodeInt(int)->void::: ber encoder encode int
com.sun.jndi.ldap.BerEncoder#encodeInt(int, int)->void:::Encodes an int and a tag
com.sun.jndi.ldap.BerEncoder#encodeBoolean(boolean)->void:::Encodes a boolean
com.sun.jndi.ldap.BerEncoder#encodeBoolean(boolean, int)->void:::Encodes a boolean and a tag  BER boolean w TAG ::= tag 0x01 {0xff|0x00} 
com.sun.jndi.ldap.BerEncoder#encodeString(String, boolean)->void:::Encodes a string
com.sun.jndi.ldap.BerEncoder#encodeString(String, int, boolean)->void:::Encodes a string and a tag
com.sun.jndi.ldap.BerEncoder#encodeOctetString(byte[], int, int, int)->void:::Encodes a portion of an octet string and a tag.
com.sun.jndi.ldap.BerEncoder#encodeOctetString(byte[], int)->void:::Encodes an octet string and a tag.
com.sun.jndi.ldap.BerEncoder#encodeStringArray(String[], boolean)->void:::Encodes an array of strings.
com.sun.jndi.ldap.BindingWithControls#getControls()->Control[]::: binding with controls get controls
com.sun.jndi.ldap.ClientId#equals(Object)->boolean::: client id equals
com.sun.jndi.ldap.ClientId#hashCode()->int::: client id hash code
com.sun.jndi.ldap.ClientId#toString()->String::: client id to string
com.sun.jndi.ldap.Connection#setV3(boolean)->void::: connection set v3
com.sun.jndi.ldap.Connection#setBound()->void::: connection set bound
com.sun.jndi.ldap.Connection#getMsgId()->int::: connection get msg id
com.sun.jndi.ldap.Connection#writeRequest(BerEncoder, int)->LdapRequest::: connection write request
com.sun.jndi.ldap.Connection#writeRequest(BerEncoder, int, boolean)->LdapRequest::: connection write request
com.sun.jndi.ldap.Connection#writeRequest(BerEncoder, int, boolean, int)->LdapRequest::: connection write request
com.sun.jndi.ldap.Connection#readReply(LdapRequest)->BerDecoder:::Reads a reply; waits until one is ready.
com.sun.jndi.ldap.Connection#findRequest(int)->LdapRequest::: connection find request
com.sun.jndi.ldap.Connection#removeRequest(LdapRequest)->void::: connection remove request
com.sun.jndi.ldap.Connection#abandonRequest(LdapRequest, Control[])->void::: connection abandon request
com.sun.jndi.ldap.Connection#abandonOutstandingReqs(Control[])->void::: connection abandon outstanding reqs
com.sun.jndi.ldap.Connection#cleanup(Control[], boolean)->void::: connection cleanup
com.sun.jndi.ldap.Connection#replaceStreams(InputStream, OutputStream)->void::: connection replace streams
com.sun.jndi.ldap.Connection#run()->void::: connection run
com.sun.jndi.ldap.DefaultResponseControlFactory#getControlInstance(Control)->Control:::Creates an instance of a response control class from a more generic control class (BasicControl).
com.sun.jndi.ldap.DigestClientId#equals(Object)->boolean::: digest client id equals
com.sun.jndi.ldap.DigestClientId#hashCode()->int::: digest client id hash code
com.sun.jndi.ldap.DigestClientId#toString()->String::: digest client id to string
com.sun.jndi.ldap.EntryChangeResponseControl#getChangeType()->int:::Retrieves the type of change that occurred.
com.sun.jndi.ldap.EntryChangeResponseControl#getPreviousDN()->String:::Retrieves the previous distinguished name of the entry before it was renamed and/or moved
com.sun.jndi.ldap.EntryChangeResponseControl#getChangeNumber()->long:::Retrieves the change number assigned by the server for this change
com.sun.jndi.ldap.EventQueue#enqueue(EventObject, Vector)->void:::Enqueue an event.
com.sun.jndi.ldap.EventQueue#run()->void:::Pull events off the queue and dispatch them.
com.sun.jndi.ldap.EventQueue#stop()->void:::Stop the dispatcher so we can be destroyed.
com.sun.jndi.ldap.EventSupport#addNamingListener(String, int, NamingListener)->void::: event support add naming listener
com.sun.jndi.ldap.EventSupport#addNamingListener(String, String, SearchControls, NamingListener)->void:::Adds l to list of listeners interested in nm and filter.
com.sun.jndi.ldap.EventSupport#removeNamingListener(NamingListener)->void:::Removes l from all notifiers in this context.
com.sun.jndi.ldap.EventSupport#hasUnsolicited()->boolean::: event support has unsolicited
com.sun.jndi.ldap.EventSupport#removeDeadNotifier(NotifierArgs)->void:::package private; Called by NamingEventNotifier to remove itself when it encounters a NamingException.
com.sun.jndi.ldap.EventSupport#fireUnsolicited(Object)->void:::Fire an event to unsolicited listeners
com.sun.jndi.ldap.EventSupport#cleanup()->void:::Stops notifier threads that are collecting event data and stops the event queue from dispatching events
com.sun.jndi.ldap.EventSupport#queueEvent(EventObject, Vector)->void:::Add the event and vector of listeners to the queue to be delivered
com.sun.jndi.ldap.Filter#encodeFilterString(BerEncoder, String, boolean)->void:::First convert filter string into byte[]
com.sun.jndi.ldap.Filter#unescapeFilterValue(byte[], int, int)->byte[]::: filter unescape filter value
com.sun.jndi.ldap.LdapAttribute#clone()->Object::: ldap attribute clone
com.sun.jndi.ldap.LdapAttribute#add(Object)->boolean:::Adds a new value to this attribute.
com.sun.jndi.ldap.LdapAttribute#setParent(DirContext, Name)->void:::Sets the baseCtx and rdn used to find the attribute's schema Used by LdapCtx.setParents().
com.sun.jndi.ldap.LdapAttribute#getAttributeSyntaxDefinition()->DirContext:::Retrieves the syntax definition associated with this attribute.
com.sun.jndi.ldap.LdapAttribute#getAttributeDefinition()->DirContext:::Retrieves this attribute's schema definition.
com.sun.jndi.ldap.LdapBindingEnumeration#createItem(String, Attributes, Vector)->Binding::: ldap binding enumeration create item
com.sun.jndi.ldap.LdapBindingEnumeration#getReferredResults(LdapReferralContext)->AbstractLdapNamingEnumeration::: ldap binding enumeration get referred results
com.sun.jndi.ldap.LdapClient#authenticateCalled()->boolean::: ldap client authenticate called
com.sun.jndi.ldap.LdapClient#authenticate(boolean, String, Object, int, String, Control[], Hashtable)->LdapResult::: ldap client authenticate
com.sun.jndi.ldap.LdapClient#ldapBind(String, byte[], Control[], String, boolean)->LdapResult:::Sends an LDAP Bind request
com.sun.jndi.ldap.LdapClient#usingSaslStreams()->boolean:::Determines whether SASL encryption/integrity is in progress
com.sun.jndi.ldap.LdapClient#incRefCount()->void::: ldap client inc ref count
com.sun.jndi.ldap.LdapClient#close(Control[], boolean)->void::: ldap client close
com.sun.jndi.ldap.LdapClient#finalize()->void::: ldap client finalize
com.sun.jndi.ldap.LdapClient#closeConnection()->void::: ldap client close connection
com.sun.jndi.ldap.LdapClient#processConnectionClosure()->void:::Called by Connection.cleanup()
com.sun.jndi.ldap.LdapClient#search(String, int, int, int, int, boolean, String[], String, int, Control[], Hashtable, boolean, int)->LdapResult::: ldap client search
com.sun.jndi.ldap.LdapClient#clearSearchReply(LdapResult, Control[])->void::: ldap client clear search reply
com.sun.jndi.ldap.LdapClient#getSearchReply(int, LdapResult, Hashtable)->LdapResult::: ldap client get search reply
com.sun.jndi.ldap.LdapClient#parseResult(BerDecoder, LdapResult, boolean)->void::: ldap client parse result
com.sun.jndi.ldap.LdapClient#parseControls(BerDecoder)->Vector::: ldap client parse controls
com.sun.jndi.ldap.LdapClient#encodeControls(BerEncoder, Control[])->void::: ldap client encode controls
com.sun.jndi.ldap.LdapClient#modify(String, int[], Attribute[], Control[])->LdapResult::: ldap client modify
com.sun.jndi.ldap.LdapClient#add(LdapEntry, Control[])->LdapResult::: ldap client add
com.sun.jndi.ldap.LdapClient#delete(String, Control[])->LdapResult::: ldap client delete
com.sun.jndi.ldap.LdapClient#moddn(String, String, boolean, String, Control[])->LdapResult::: ldap client moddn
com.sun.jndi.ldap.LdapClient#compare(String, String, String, Control[])->LdapResult::: ldap client compare
com.sun.jndi.ldap.LdapClient#extendedOp(String, byte[], Control[], boolean)->LdapResult::: ldap client extended op
com.sun.jndi.ldap.LdapClient#getErrorMessage(int, String)->String::: ldap client get error message
com.sun.jndi.ldap.LdapClient#addUnsolicited(LdapCtx)->void::: ldap client add unsolicited
com.sun.jndi.ldap.LdapClient#removeUnsolicited(LdapCtx)->void::: ldap client remove unsolicited
com.sun.jndi.ldap.LdapClient#processUnsolicited(BerDecoder)->void::: ldap client process unsolicited
com.sun.jndi.ldap.LdapClient#getInstance(boolean, String, int, String, int, int, OutputStream, int, String, Control[], String, String, Object, Hashtable)->LdapClient::: ldap client get instance
com.sun.jndi.ldap.LdapClientFactory#createPooledConnection(PoolCallback)->PooledConnection::: ldap client factory create pooled connection
com.sun.jndi.ldap.LdapClientFactory#toString()->String::: ldap client factory to string
com.sun.jndi.ldap.LdapCtx#newInstance(Control[])->LdapContext::: ldap ctx new instance
com.sun.jndi.ldap.LdapCtx#c_bind(Name, Object, Continuation)->void::: ldap ctx c_bind
com.sun.jndi.ldap.LdapCtx#c_bind(Name, Object, Attributes, Continuation)->void::: ldap ctx c_bind
com.sun.jndi.ldap.LdapCtx#c_rebind(Name, Object, Continuation)->void::: ldap ctx c_rebind
com.sun.jndi.ldap.LdapCtx#c_rebind(Name, Object, Attributes, Continuation)->void::: ldap ctx c_rebind
com.sun.jndi.ldap.LdapCtx#c_unbind(Name, Continuation)->void::: ldap ctx c_unbind
com.sun.jndi.ldap.LdapCtx#c_rename(Name, Name, Continuation)->void::: ldap ctx c_rename
com.sun.jndi.ldap.LdapCtx#c_createSubcontext(Name, Continuation)->Context::: ldap ctx c_create subcontext
com.sun.jndi.ldap.LdapCtx#c_createSubcontext(Name, Attributes, Continuation)->DirContext::: ldap ctx c_create subcontext
com.sun.jndi.ldap.LdapCtx#c_destroySubcontext(Name, Continuation)->void::: ldap ctx c_destroy subcontext
com.sun.jndi.ldap.LdapCtx#c_lookupLink(Name, Continuation)->Object::: ldap ctx c_lookup link
com.sun.jndi.ldap.LdapCtx#c_lookup(Name, Continuation)->Object::: ldap ctx c_lookup
com.sun.jndi.ldap.LdapCtx#c_list(Name, Continuation)->NamingEnumeration::: ldap ctx c_list
com.sun.jndi.ldap.LdapCtx#c_listBindings(Name, Continuation)->NamingEnumeration::: ldap ctx c_list bindings
com.sun.jndi.ldap.LdapCtx#c_getNameParser(Name, Continuation)->NameParser::: ldap ctx c_get name parser
com.sun.jndi.ldap.LdapCtx#getNameInNamespace()->String::: ldap ctx get name in namespace
com.sun.jndi.ldap.LdapCtx#composeName(Name, Name)->Name::: ldap ctx compose name
com.sun.jndi.ldap.LdapCtx#c_getAttributes(Name, String[], Continuation)->Attributes::: ldap ctx c_get attributes
com.sun.jndi.ldap.LdapCtx#c_modifyAttributes(Name, int, Attributes, Continuation)->void::: ldap ctx c_modify attributes
com.sun.jndi.ldap.LdapCtx#c_modifyAttributes(Name, ModificationItem[], Continuation)->void::: ldap ctx c_modify attributes
com.sun.jndi.ldap.LdapCtx#c_getSchema(Name, Continuation)->DirContext::: ldap ctx c_get schema
com.sun.jndi.ldap.LdapCtx#c_getSchemaClassDefinition(Name, Continuation)->DirContext::: ldap ctx c_get schema class definition
com.sun.jndi.ldap.LdapCtx#setParents(Attributes, Name)->void::: ldap ctx set parents
com.sun.jndi.ldap.LdapCtx#getURL()->String::: ldap ctx get l
com.sun.jndi.ldap.LdapCtx#c_search(Name, Attributes, Continuation)->NamingEnumeration::: ldap ctx c_search
com.sun.jndi.ldap.LdapCtx#c_search(Name, Attributes, String[], Continuation)->NamingEnumeration::: ldap ctx c_search
com.sun.jndi.ldap.LdapCtx#c_search(Name, String, SearchControls, Continuation)->NamingEnumeration::: ldap ctx c_search
com.sun.jndi.ldap.LdapCtx#c_search(Name, String, Object[], SearchControls, Continuation)->NamingEnumeration::: ldap ctx c_search
com.sun.jndi.ldap.LdapCtx#searchAux(Name, String, SearchControls, boolean, boolean, Continuation)->NamingEnumeration::: ldap ctx search aux
com.sun.jndi.ldap.LdapCtx#getSearchReply(LdapClient, LdapResult)->LdapResult::: ldap ctx get search reply
com.sun.jndi.ldap.LdapCtx#p_getEnvironment()->Hashtable:::Override with noncloning version.
com.sun.jndi.ldap.LdapCtx#getEnvironment()->Hashtable::: ldap ctx get environment
com.sun.jndi.ldap.LdapCtx#removeFromEnvironment(String)->Object::: ldap ctx remove from environment
com.sun.jndi.ldap.LdapCtx#addToEnvironment(String, Object)->Object::: ldap ctx add to environment
com.sun.jndi.ldap.LdapCtx#setProviderUrl(String)->void:::Sets the URL that created the context in the java.naming.provider.url property.
com.sun.jndi.ldap.LdapCtx#setDomainName(String)->void:::Sets the domain name for the context in the com.sun.jndi.ldap.domainname property
com.sun.jndi.ldap.LdapCtx#setHopCount(int)->void::: ldap ctx set hop count
com.sun.jndi.ldap.LdapCtx#finalize()->void::: ldap ctx finalize
com.sun.jndi.ldap.LdapCtx#close()->void::: ldap ctx close
com.sun.jndi.ldap.LdapCtx#reconnect(Control[])->void::: ldap ctx reconnect
com.sun.jndi.ldap.LdapCtx#incEnumCount()->void::: ldap ctx inc enum count
com.sun.jndi.ldap.LdapCtx#decEnumCount()->void::: ldap ctx dec enum count
com.sun.jndi.ldap.LdapCtx#processReturnCode(LdapResult)->void::: ldap ctx process return code
com.sun.jndi.ldap.LdapCtx#processReturnCode(LdapResult, Name)->void::: ldap ctx process return code
com.sun.jndi.ldap.LdapCtx#processReturnCode(LdapResult, Name, Object, Name, Hashtable, String)->void::: ldap ctx process return code
com.sun.jndi.ldap.LdapCtx#mapErrorCode(int, String)->NamingException:::Maps an LDAP error code to an appropriate NamingException
com.sun.jndi.ldap.LdapCtx#extendedOperation(ExtendedRequest)->ExtendedResponse::: ldap ctx extended operation
com.sun.jndi.ldap.LdapCtx#setRequestControls(Control[])->void::: ldap ctx set request controls
com.sun.jndi.ldap.LdapCtx#getRequestControls()->Control[]::: ldap ctx get request controls
com.sun.jndi.ldap.LdapCtx#getConnectControls()->Control[]::: ldap ctx get connect controls
com.sun.jndi.ldap.LdapCtx#getResponseControls()->Control[]::: ldap ctx get response controls
com.sun.jndi.ldap.LdapCtx#convertControls(Vector)->Control[]:::Narrow controls using own default factory and ControlFactory.
com.sun.jndi.ldap.LdapCtx#addNamingListener(Name, int, NamingListener)->void::: ldap ctx add naming listener
com.sun.jndi.ldap.LdapCtx#addNamingListener(String, int, NamingListener)->void::: ldap ctx add naming listener
com.sun.jndi.ldap.LdapCtx#removeNamingListener(NamingListener)->void::: ldap ctx remove naming listener
com.sun.jndi.ldap.LdapCtx#addNamingListener(String, String, SearchControls, NamingListener)->void::: ldap ctx add naming listener
com.sun.jndi.ldap.LdapCtx#addNamingListener(Name, String, SearchControls, NamingListener)->void::: ldap ctx add naming listener
com.sun.jndi.ldap.LdapCtx#addNamingListener(Name, String, Object[], SearchControls, NamingListener)->void::: ldap ctx add naming listener
com.sun.jndi.ldap.LdapCtx#addNamingListener(String, String, Object[], SearchControls, NamingListener)->void::: ldap ctx add naming listener
com.sun.jndi.ldap.LdapCtx#targetMustExist()->boolean::: ldap ctx target must exist
com.sun.jndi.ldap.LdapCtx#fireUnsolicited(Object)->void:::Uses EventSupport to fire an event related to an unsolicited notification
com.sun.jndi.ldap.LdapCtxFactory#getObjectInstance(Object, Name, Context, Hashtable)->Object::: ldap ctx factory get object instance
com.sun.jndi.ldap.LdapCtxFactory#getInitialContext(Hashtable)->Context::: ldap ctx factory get initial context
com.sun.jndi.ldap.LdapCtxFactory#getLdapCtxInstance(Object, Hashtable)->DirContext::: ldap ctx factory get ldap ctx instance
com.sun.jndi.ldap.LdapCtxFactory#createTypeNameAttr(Class)->Attribute:::Used by Obj and obj/RemoteToAttrs too so must be public
com.sun.jndi.ldap.LdapName#clone()->Object::: ldap name clone
com.sun.jndi.ldap.LdapName#toString()->String::: ldap name to string
com.sun.jndi.ldap.LdapName#equals(Object)->boolean::: ldap name equals
com.sun.jndi.ldap.LdapName#compareTo(Object)->int::: ldap name compare to
com.sun.jndi.ldap.LdapName#hashCode()->int::: ldap name hash code
com.sun.jndi.ldap.LdapName#size()->int::: ldap name size
com.sun.jndi.ldap.LdapName#isEmpty()->boolean::: ldap name is empty
com.sun.jndi.ldap.LdapName#getAll()->Enumeration::: ldap name get all
com.sun.jndi.ldap.LdapName#get(int)->String::: ldap name get
com.sun.jndi.ldap.LdapName#getPrefix(int)->Name::: ldap name get prefix
com.sun.jndi.ldap.LdapName#getSuffix(int)->Name::: ldap name get suffix
com.sun.jndi.ldap.LdapName#startsWith(Name)->boolean::: ldap name starts with
com.sun.jndi.ldap.LdapName#endsWith(Name)->boolean::: ldap name ends with
com.sun.jndi.ldap.LdapName#setValuesCaseSensitive(boolean)->void:::Controls whether string-values are treated as case-sensitive when the string values within names are compared
com.sun.jndi.ldap.LdapName#addAll(Name)->Name::: ldap name add all
com.sun.jndi.ldap.LdapName#addAll(int, Name)->Name::: ldap name add all
com.sun.jndi.ldap.LdapName#add(String)->Name::: ldap name add
com.sun.jndi.ldap.LdapName#add(int, String)->Name::: ldap name add
com.sun.jndi.ldap.LdapName#remove(int)->Object::: ldap name remove
com.sun.jndi.ldap.LdapName#escapeAttributeValue(Object)->String:::Given the value of an attribute, returns a string suitable for inclusion in a DN
com.sun.jndi.ldap.LdapName#unescapeAttributeValue(String)->Object:::Given an attribute value formatted according to RFC 2253, returns the unformatted value
com.sun.jndi.ldap.LdapName.DnParser#getDn()->Vector::: dn parser get dn
com.sun.jndi.ldap.LdapName.DnParser#getRdn()->Rdn::: dn parser get rdn
com.sun.jndi.ldap.LdapName.Rdn#add(TypeAndValue)->void::: rdn add
com.sun.jndi.ldap.LdapName.Rdn#toString()->String::: rdn to string
com.sun.jndi.ldap.LdapName.Rdn#equals(Object)->boolean::: rdn equals
com.sun.jndi.ldap.LdapName.Rdn#compareTo(Object)->int::: rdn compare to
com.sun.jndi.ldap.LdapName.Rdn#hashCode()->int::: rdn hash code
com.sun.jndi.ldap.LdapName.Rdn#toAttributes()->Attributes::: rdn to attributes
com.sun.jndi.ldap.LdapName.TypeAndValue#toString()->String::: type and value to string
com.sun.jndi.ldap.LdapName.TypeAndValue#compareTo(Object)->int::: type and value compare to
com.sun.jndi.ldap.LdapName.TypeAndValue#equals(Object)->boolean::: type and value equals
com.sun.jndi.ldap.LdapName.TypeAndValue#hashCode()->int::: type and value hash code
com.sun.jndi.ldap.LdapName.TypeAndValue#getType()->String::: type and value get type
com.sun.jndi.ldap.LdapName.TypeAndValue#getUnescapedValue()->Object::: type and value get unescaped value
com.sun.jndi.ldap.LdapName.TypeAndValue#escapeValue(Object)->String::: type and value escape value
com.sun.jndi.ldap.LdapName.TypeAndValue#unescapeValue(String)->Object::: type and value unescape value
com.sun.jndi.ldap.LdapNameParser#parse(String)->Name::: ldap name parser parse
com.sun.jndi.ldap.LdapNamingEnumeration#createItem(String, Attributes, Vector)->NameClassPair::: ldap naming enumeration create item
com.sun.jndi.ldap.LdapNamingEnumeration#getReferredResults(LdapReferralContext)->AbstractLdapNamingEnumeration::: ldap naming enumeration get referred results
com.sun.jndi.ldap.LdapPoolManager#isPoolingAllowed(String, OutputStream, String, String, Hashtable)->boolean:::Determines whether pooling is allowed given information on how the connection will be used
com.sun.jndi.ldap.LdapPoolManager#getLdapClient(String, int, String, int, int, OutputStream, int, String, Control[], String, String, Object, Hashtable)->LdapClient:::Obtains a pooled connection that either already exists or is newly created using the parameters supplied
com.sun.jndi.ldap.LdapPoolManager#showStats(PrintStream)->void::: ldap pool manager show stats
com.sun.jndi.ldap.LdapPoolManager#expire(long)->void:::Closes idle connections idle since specified time.
com.sun.jndi.ldap.LdapReferralContext#close()->void::: ldap referral context close
com.sun.jndi.ldap.LdapReferralContext#setHopCount(int)->void::: ldap referral context set hop count
com.sun.jndi.ldap.LdapReferralContext#lookup(String)->Object::: ldap referral context lookup
com.sun.jndi.ldap.LdapReferralContext#lookup(Name)->Object::: ldap referral context lookup
com.sun.jndi.ldap.LdapReferralContext#bind(String, Object)->void::: ldap referral context bind
com.sun.jndi.ldap.LdapReferralContext#bind(Name, Object)->void::: ldap referral context bind
com.sun.jndi.ldap.LdapReferralContext#rebind(String, Object)->void::: ldap referral context rebind
com.sun.jndi.ldap.LdapReferralContext#rebind(Name, Object)->void::: ldap referral context rebind
com.sun.jndi.ldap.LdapReferralContext#unbind(String)->void::: ldap referral context unbind
com.sun.jndi.ldap.LdapReferralContext#unbind(Name)->void::: ldap referral context unbind
com.sun.jndi.ldap.LdapReferralContext#rename(String, String)->void::: ldap referral context rename
com.sun.jndi.ldap.LdapReferralContext#rename(Name, Name)->void::: ldap referral context rename
com.sun.jndi.ldap.LdapReferralContext#list(String)->NamingEnumeration::: ldap referral context list
com.sun.jndi.ldap.LdapReferralContext#list(Name)->NamingEnumeration::: ldap referral context list
com.sun.jndi.ldap.LdapReferralContext#listBindings(String)->NamingEnumeration::: ldap referral context list bindings
com.sun.jndi.ldap.LdapReferralContext#listBindings(Name)->NamingEnumeration::: ldap referral context list bindings
com.sun.jndi.ldap.LdapReferralContext#destroySubcontext(String)->void::: ldap referral context destroy subcontext
com.sun.jndi.ldap.LdapReferralContext#destroySubcontext(Name)->void::: ldap referral context destroy subcontext
com.sun.jndi.ldap.LdapReferralContext#createSubcontext(String)->Context::: ldap referral context create subcontext
com.sun.jndi.ldap.LdapReferralContext#createSubcontext(Name)->Context::: ldap referral context create subcontext
com.sun.jndi.ldap.LdapReferralContext#lookupLink(String)->Object::: ldap referral context lookup link
com.sun.jndi.ldap.LdapReferralContext#lookupLink(Name)->Object::: ldap referral context lookup link
com.sun.jndi.ldap.LdapReferralContext#getNameParser(String)->NameParser::: ldap referral context get name parser
com.sun.jndi.ldap.LdapReferralContext#getNameParser(Name)->NameParser::: ldap referral context get name parser
com.sun.jndi.ldap.LdapReferralContext#composeName(String, String)->String::: ldap referral context compose name
com.sun.jndi.ldap.LdapReferralContext#composeName(Name, Name)->Name::: ldap referral context compose name
com.sun.jndi.ldap.LdapReferralContext#addToEnvironment(String, Object)->Object::: ldap referral context add to environment
com.sun.jndi.ldap.LdapReferralContext#removeFromEnvironment(String)->Object::: ldap referral context remove from environment
com.sun.jndi.ldap.LdapReferralContext#getEnvironment()->Hashtable::: ldap referral context get environment
com.sun.jndi.ldap.LdapReferralContext#getAttributes(String)->Attributes::: ldap referral context get attributes
com.sun.jndi.ldap.LdapReferralContext#getAttributes(Name)->Attributes::: ldap referral context get attributes
com.sun.jndi.ldap.LdapReferralContext#getAttributes(String, String[])->Attributes::: ldap referral context get attributes
com.sun.jndi.ldap.LdapReferralContext#getAttributes(Name, String[])->Attributes::: ldap referral context get attributes
com.sun.jndi.ldap.LdapReferralContext#modifyAttributes(String, int, Attributes)->void::: ldap referral context modify attributes
com.sun.jndi.ldap.LdapReferralContext#modifyAttributes(Name, int, Attributes)->void::: ldap referral context modify attributes
com.sun.jndi.ldap.LdapReferralContext#modifyAttributes(String, ModificationItem[])->void::: ldap referral context modify attributes
com.sun.jndi.ldap.LdapReferralContext#modifyAttributes(Name, ModificationItem[])->void::: ldap referral context modify attributes
com.sun.jndi.ldap.LdapReferralContext#bind(String, Object, Attributes)->void::: ldap referral context bind
com.sun.jndi.ldap.LdapReferralContext#bind(Name, Object, Attributes)->void::: ldap referral context bind
com.sun.jndi.ldap.LdapReferralContext#rebind(String, Object, Attributes)->void::: ldap referral context rebind
com.sun.jndi.ldap.LdapReferralContext#rebind(Name, Object, Attributes)->void::: ldap referral context rebind
com.sun.jndi.ldap.LdapReferralContext#createSubcontext(String, Attributes)->DirContext::: ldap referral context create subcontext
com.sun.jndi.ldap.LdapReferralContext#createSubcontext(Name, Attributes)->DirContext::: ldap referral context create subcontext
com.sun.jndi.ldap.LdapReferralContext#getSchema(String)->DirContext::: ldap referral context get schema
com.sun.jndi.ldap.LdapReferralContext#getSchema(Name)->DirContext::: ldap referral context get schema
com.sun.jndi.ldap.LdapReferralContext#getSchemaClassDefinition(String)->DirContext::: ldap referral context get schema class definition
com.sun.jndi.ldap.LdapReferralContext#getSchemaClassDefinition(Name)->DirContext::: ldap referral context get schema class definition
com.sun.jndi.ldap.LdapReferralContext#search(String, Attributes)->NamingEnumeration::: ldap referral context search
com.sun.jndi.ldap.LdapReferralContext#search(Name, Attributes)->NamingEnumeration::: ldap referral context search
com.sun.jndi.ldap.LdapReferralContext#search(String, Attributes, String[])->NamingEnumeration::: ldap referral context search
com.sun.jndi.ldap.LdapReferralContext#search(Name, Attributes, String[])->NamingEnumeration::: ldap referral context search
com.sun.jndi.ldap.LdapReferralContext#search(String, String, SearchControls)->NamingEnumeration::: ldap referral context search
com.sun.jndi.ldap.LdapReferralContext#search(Name, String, SearchControls)->NamingEnumeration::: ldap referral context search
com.sun.jndi.ldap.LdapReferralContext#search(String, String, Object[], SearchControls)->NamingEnumeration::: ldap referral context search
com.sun.jndi.ldap.LdapReferralContext#search(Name, String, Object[], SearchControls)->NamingEnumeration::: ldap referral context search
com.sun.jndi.ldap.LdapReferralContext#getNameInNamespace()->String::: ldap referral context get name in namespace
com.sun.jndi.ldap.LdapReferralContext#extendedOperation(ExtendedRequest)->ExtendedResponse::: ldap referral context extended operation
com.sun.jndi.ldap.LdapReferralContext#newInstance(Control[])->LdapContext::: ldap referral context new instance
com.sun.jndi.ldap.LdapReferralContext#reconnect(Control[])->void::: ldap referral context reconnect
com.sun.jndi.ldap.LdapReferralContext#getConnectControls()->Control[]::: ldap referral context get connect controls
com.sun.jndi.ldap.LdapReferralContext#setRequestControls(Control[])->void::: ldap referral context set request controls
com.sun.jndi.ldap.LdapReferralContext#getRequestControls()->Control[]::: ldap referral context get request controls
com.sun.jndi.ldap.LdapReferralContext#getResponseControls()->Control[]::: ldap referral context get response controls
com.sun.jndi.ldap.LdapReferralException#getReferralContext()->Context:::Gets a context at which to continue processing
com.sun.jndi.ldap.LdapReferralException#getReferralContext(Hashtable)->Context:::Gets a context at which to continue processing
com.sun.jndi.ldap.LdapReferralException#getReferralContext(Hashtable, Control[])->Context:::Gets a context at which to continue processing
com.sun.jndi.ldap.LdapReferralException#getReferralInfo()->Object:::Gets referral information.
com.sun.jndi.ldap.LdapReferralException#retryReferral()->void:::Marks the current referral as one to be retried.
com.sun.jndi.ldap.LdapReferralException#skipReferral()->boolean:::Marks the current referral as one to be ignored
com.sun.jndi.ldap.LdapReferralException#setReferralInfo(Vector, boolean)->void:::Sets referral information.
com.sun.jndi.ldap.LdapReferralException#getNextReferral()->String:::Gets the next referral
com.sun.jndi.ldap.LdapReferralException#appendUnprocessedReferrals(LdapReferralException)->LdapReferralException:::Appends the supplied (chain of) referral exception onto the end of the current (chain of) referral exception
com.sun.jndi.ldap.LdapReferralException#hasMoreReferrals()->boolean:::Tests if there are any referrals remaining to be processed
com.sun.jndi.ldap.LdapReferralException#hasMoreReferralExceptions()->boolean:::Tests if there are any referral exceptions remaining to be processed.
com.sun.jndi.ldap.LdapReferralException#setHopCount(int)->void:::Sets the counter which records the number of hops that result from following a sequence of referrals.
com.sun.jndi.ldap.LdapReferralException#setNameResolved(boolean)->void:::Sets the flag to indicate that the target name has been resolved.
com.sun.jndi.ldap.LdapReferralException#setNamingException(NamingException)->void:::Sets the exception generated while processing a referral
com.sun.jndi.ldap.LdapReferralException#getNewRdn()->String:::Gets the new RDN name.
com.sun.jndi.ldap.LdapReferralException#setNewRdn(String)->void:::Sets the new RDN name so that the rename operation can be completed (when a referral is being followed).
com.sun.jndi.ldap.LdapReferralException#getNamingException()->NamingException:::Gets the exception generated while processing a referral.
com.sun.jndi.ldap.LdapReferralException#dump()->void:::Display the state of each element in a chain of LdapReferralException objects.
com.sun.jndi.ldap.LdapRequest#cancel()->void::: ldap request cancel
com.sun.jndi.ldap.LdapRequest#close()->void::: ldap request close
com.sun.jndi.ldap.LdapRequest#addReplyBer(BerDecoder)->boolean::: ldap request add reply ber
com.sun.jndi.ldap.LdapRequest#getReplyBer(long)->BerDecoder::: ldap request get reply ber
com.sun.jndi.ldap.LdapRequest#hasSearchCompleted()->boolean::: ldap request has search completed
com.sun.jndi.ldap.LdapResult#compareToSearchResult(String)->boolean::: ldap result compare to search result
com.sun.jndi.ldap.LdapSchemaCtx#createSchemaTree(Hashtable, String, LdapCtx, Attributes, boolean)->DirContext::: ldap schema ctx create schema tree
com.sun.jndi.ldap.LdapSchemaCtx#close()->void::: ldap schema ctx close
com.sun.jndi.ldap.LdapSchemaCtx#bind(Name, Object, Attributes)->void::: ldap schema ctx bind
com.sun.jndi.ldap.LdapSchemaCtx#doBind(Name, Object, Attributes, boolean)->void::: ldap schema ctx do bind
com.sun.jndi.ldap.LdapSchemaCtx#rebind(Name, Object, Attributes)->void::: ldap schema ctx rebind
com.sun.jndi.ldap.LdapSchemaCtx#doRebind(Name, Object, Attributes, boolean)->void::: ldap schema ctx do rebind
com.sun.jndi.ldap.LdapSchemaCtx#doUnbind(Name)->void::: ldap schema ctx do unbind
com.sun.jndi.ldap.LdapSchemaCtx#doRename(Name, Name)->void::: ldap schema ctx do rename
com.sun.jndi.ldap.LdapSchemaCtx#doDestroySubcontext(Name)->void::: ldap schema ctx do destroy subcontext
com.sun.jndi.ldap.LdapSchemaCtx#setup(int, String, Attributes)->LdapSchemaCtx::: ldap schema ctx setup
com.sun.jndi.ldap.LdapSchemaCtx#doCreateSubcontext(Name, Attributes)->DirContext::: ldap schema ctx do create subcontext
com.sun.jndi.ldap.LdapSchemaCtx#doModifyAttributes(ModificationItem[])->void::: ldap schema ctx do modify attributes
com.sun.jndi.ldap.LdapSchemaCtx#createNewCtx()->HierMemDirCtx::: ldap schema ctx create new ctx
com.sun.jndi.ldap.LdapSchemaParser#LDAP2JNDISchema(Attributes, LdapSchemaCtx)->void::: ldap schema parser  p2 schema
com.sun.jndi.ldap.LdapSchemaParser#stringifyObjDesc(Attributes)->Attribute:::Returns an attribute for updating the Object Class Definition schema attribute
com.sun.jndi.ldap.LdapSchemaParser#stringifyAttrDesc(Attributes)->Attribute:::Returns an attribute for updating the Attribute Definition schema attribute
com.sun.jndi.ldap.LdapSchemaParser#stringifySyntaxDesc(Attributes)->Attribute:::Returns an attribute for updating the Syntax schema attribute
com.sun.jndi.ldap.LdapSchemaParser#stringifyMatchRuleDesc(Attributes)->Attribute:::Returns an attribute for updating the Matching Rule schema attribute
com.sun.jndi.ldap.LdapSearchEnumeration#createItem(String, Attributes, Vector)->SearchResult::: ldap search enumeration create item
com.sun.jndi.ldap.LdapSearchEnumeration#appendUnprocessedReferrals(LdapReferralException)->void::: ldap search enumeration append unprocessed referrals
com.sun.jndi.ldap.LdapSearchEnumeration#getReferredResults(LdapReferralContext)->AbstractLdapNamingEnumeration::: ldap search enumeration get referred results
com.sun.jndi.ldap.LdapSearchEnumeration#update(AbstractLdapNamingEnumeration)->void::: ldap search enumeration update
com.sun.jndi.ldap.LdapSearchEnumeration#setStartName(Name)->void::: ldap search enumeration set start name
com.sun.jndi.ldap.LdapURL#useSsl()->boolean:::Returns true if the URL is an LDAPS URL.
com.sun.jndi.ldap.LdapURL#getDN()->String:::Returns the LDAP URL's distinguished name.
com.sun.jndi.ldap.LdapURL#getAttributes()->String:::Returns the LDAP URL's attributes.
com.sun.jndi.ldap.LdapURL#getScope()->String:::Returns the LDAP URL's scope.
com.sun.jndi.ldap.LdapURL#getFilter()->String:::Returns the LDAP URL's filter.
com.sun.jndi.ldap.LdapURL#getExtensions()->String:::Returns the LDAP URL's extensions.
com.sun.jndi.ldap.LdapURL#fromList(String)->String[]:::Given a space-separated list of LDAP URLs, returns an array of strings.
com.sun.jndi.ldap.LdapURL#hasQueryComponents(String)->boolean:::Determines whether an LDAP URL has query components.
com.sun.jndi.ldap.LdapURL#toUrlString(String, int, String, boolean)->String::: ldap l to url string
com.sun.jndi.ldap.NameClassPairWithControls#getControls()->Control[]::: name class pair with controls get controls
com.sun.jndi.ldap.NamingEventNotifier#addNamingListener(NamingListener)->void::: naming event notifier add naming listener
com.sun.jndi.ldap.NamingEventNotifier#removeNamingListener(NamingListener)->void::: naming event notifier remove naming listener
com.sun.jndi.ldap.NamingEventNotifier#hasNamingListeners()->boolean::: naming event notifier has naming listeners
com.sun.jndi.ldap.NamingEventNotifier#run()->void:::Execute "persistent search"
com.sun.jndi.ldap.NamingEventNotifier#stop()->void:::Stop the dispatcher so we can be destroyed
com.sun.jndi.ldap.NotifierArgs#equals(Object)->boolean::: notifier args equals
com.sun.jndi.ldap.NotifierArgs#hashCode()->int::: notifier args hash code
com.sun.jndi.ldap.Obj#decodeObject(Attributes)->Object::: obj decode object
com.sun.jndi.ldap.Obj#determineBindAttrs(char, Object, Attributes, boolean, Name, Context, Hashtable)->Attributes:::Returns the attributes to bind given an object and its attributes.
com.sun.jndi.ldap.ReferralEnumeration#appendUnprocessedReferrals(LdapReferralException)->void::: referral enumeration append unprocessed referrals
com.sun.jndi.ldap.SearchResultWithControls#getControls()->Control[]::: search result with controls get controls
com.sun.jndi.ldap.ServiceLocator#mapDnToDomainName(String)->String:::Maps a distinguished name (RFC 2253) to a fully qualified domain name
com.sun.jndi.ldap.ServiceLocator#getLdapService(String, Hashtable)->String[]:::Locates the LDAP service for a given domain
com.sun.jndi.ldap.ServiceLocator.SrvRecord#compareTo(SrvRecord)->int::: srv record compare to
com.sun.jndi.ldap.SimpleClientId#equals(Object)->boolean::: simple client id equals
com.sun.jndi.ldap.SimpleClientId#hashCode()->int::: simple client id hash code
com.sun.jndi.ldap.SimpleClientId#toString()->String::: simple client id to string
com.sun.jndi.ldap.UnsolicitedResponseImpl#getID()->String:::Retrieves the object identifier of the response.
com.sun.jndi.ldap.UnsolicitedResponseImpl#getEncodedValue()->byte[]:::Retrieves the ASN.1 BER encoded value of the LDAP extended operation response
com.sun.jndi.ldap.UnsolicitedResponseImpl#getReferrals()->String[]:::Retrieves the referral(s) sent by the server.
com.sun.jndi.ldap.UnsolicitedResponseImpl#getException()->NamingException:::Retrieves the exception as constructed using information sent by the server.
com.sun.jndi.ldap.UnsolicitedResponseImpl#getControls()->Control[]::: unsolicited response impl get controls
com.sun.jndi.ldap.VersionHelper#getVersionHelper()->VersionHelper::: version helper get version helper
com.sun.jndi.ldap.VersionHelper#getURLClassLoader(String[])->ClassLoader::: version helper get class loader
com.sun.jndi.ldap.VersionHelper#loadClass(String)->Class::: version helper load class
com.sun.jndi.ldap.VersionHelper#createThread(Runnable)->Thread::: version helper create thread
