AbstractProcessor#getSupportedOptions():::If the processor class is annotated with SupportedOptions, return an unmodifiable set with the same set of strings as the annotation:::so->this->getClass->getAnnotation->if->return->Collections->emptySet->else->return->so->value->arrayToSet
AbstractProcessor#getSupportedAnnotationTypes():::If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the same set of strings as the annotation:::sat->this->getClass->getAnnotation->initialized->isInitialized->if->if->processingEnv->getMessager->this->getClass->getName->printMessage->return->Collections->emptySet->else->stripModulePrefixes->processingEnv->getSourceVersion->compareTo->return->sat->value->arrayToSet
AbstractProcessor#getSupportedSourceVersion():::If the processor class is annotated with SupportedSourceVersion, return the source version in the annotation:::ssv->this->getClass->getAnnotation->sv->if->if->isInitialized->processingEnv->getMessager->this->getClass->getName->printMessage->else->ssv->value->return
AbstractProcessor#init(ProcessingEnvironment):::Initializes the processor with the processing environment by setting the processingEnv field to the value of the processingEnv argument:::if->throw->new->IllegalStateException->Objects->requireNonNull
AbstractProcessor#process(Set, RoundEnvironment)::: abstract processor process:::
AbstractProcessor#getCompletions(Element, AnnotationMirror, ExecutableElement, String):::Returns an empty iterable of completions.:::return->Collections->emptyList
AbstractProcessor#isInitialized():::Returns true if this object has been #init initialized, false otherwise.:::return
AbstractProcessor#arrayToSet(String[], boolean)::: abstract processor array to set:::set->new->HashSet<>->foreach->if->index->s->indexOf->if->s->substring->set->add->return->Collections->unmodifiableSet
Completion#getValue():::Returns the text of the suggested completion.:::
Completion#getMessage():::Returns an informative message about the completion.:::
Completions.SimpleCompletion#getValue()::: simple completion get value:::return
Completions.SimpleCompletion#getMessage()::: simple completion get message:::return
Completions.SimpleCompletion#toString()::: simple completion to string:::return
Completions#of(String, String):::Returns a completion of the value and message.:::return->new->SimpleCompletion
Completions#of(String):::Returns a completion of the value and an empty message:::return->new->SimpleCompletion
Filer#createSourceFile(CharSequence, Element...):::Creates a new source file and returns an object to allow writing to it:::
Filer#createClassFile(CharSequence, Element...):::Creates a new class file, and returns an object to allow writing to it:::
Filer#createResource(JavaFileManager.Location, CharSequence, CharSequence, Element...):::Creates a new auxiliary resource file for writing and returns a file object for it:::
Filer#getResource(JavaFileManager.Location, CharSequence, CharSequence):::Returns an object for reading an existing resource:::
Messager#printMessage(Diagnostic.Kind, CharSequence):::Prints a message of the specified kind.:::
Messager#printMessage(Diagnostic.Kind, CharSequence, Element):::Prints a message of the specified kind at the location of the element.:::
Messager#printMessage(Diagnostic.Kind, CharSequence, Element, AnnotationMirror):::Prints a message of the specified kind at the location of the annotation mirror of the annotated element.:::
Messager#printMessage(Diagnostic.Kind, CharSequence, Element, AnnotationMirror, AnnotationValue):::Prints a message of the specified kind at the location of the annotation value inside the annotation mirror of the annotated element.:::
ProcessingEnvironment#getOptions():::Returns the processor-specific options passed to the annotation processing tool:::
ProcessingEnvironment#getMessager():::Returns the messager used to report errors, warnings, and other notices.:::
ProcessingEnvironment#getFiler():::Returns the filer used to create new source, class, or auxiliary files.:::
ProcessingEnvironment#getElementUtils():::Returns an implementation of some utility methods for operating on elements:::
ProcessingEnvironment#getTypeUtils():::Returns an implementation of some utility methods for operating on types.:::
ProcessingEnvironment#getSourceVersion():::Returns the source version that any generated Filer#createSourceFile source and Filer#createClassFile class files should conform to.:::
ProcessingEnvironment#getLocale():::Returns the current locale or null if no locale is in effect:::
Processor#getSupportedOptions():::Returns the options recognized by this processor:::
Processor#getSupportedAnnotationTypes():::Returns the names of the annotation types supported by this processor:::
Processor#getSupportedSourceVersion():::Returns the latest source version supported by this annotation processor.:::
Processor#init(ProcessingEnvironment):::Initializes the processor with the processing environment.:::
Processor#process(Set, RoundEnvironment):::Processes a set of annotation types on type elements originating from the prior round and returns whether or not these annotation types are claimed by this processor:::
Processor#getCompletions(Element, AnnotationMirror, ExecutableElement, String):::Returns to the tool infrastructure an iterable of suggested completions to an annotation:::
RoundEnvironment#processingOver():::Returns true if types generated by this round will not be subject to a subsequent round of annotation processing; returns false otherwise.:::
RoundEnvironment#errorRaised():::Returns true if an error was raised in the prior round of processing; returns false otherwise.:::
RoundEnvironment#getRootElements():::Returns the Processor root elements for annotation processing generated by the prior round.:::
RoundEnvironment#getElementsAnnotatedWith(TypeElement):::Returns the elements annotated with the given annotation type:::
RoundEnvironment#getElementsAnnotatedWithAny(TypeElement...):::Returns the elements annotated with one or more of the given annotation types.:::result->new->LinkedHashSet<>->foreach->result->getElementsAnnotatedWith->addAll->return->Collections->unmodifiableSet
RoundEnvironment#getElementsAnnotatedWith(Class):::Returns the elements annotated with the given annotation type:::
RoundEnvironment#getElementsAnnotatedWithAny(Set>):::Returns the elements annotated with one or more of the given annotation types.:::result->new->LinkedHashSet<>->foreach->result->getElementsAnnotatedWith->addAll->return->Collections->unmodifiableSet
