com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#constant()->ItemPSVI::: attribute impl constant
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#isConstant()->boolean::: attribute impl is constant
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getSchemaDefault()->String:::[schema default]
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getSchemaNormalizedValue()->String:::[schema normalized value]
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getIsSchemaSpecified()->boolean:::[schema specified]
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getValidationAttempted()->short:::Determines the extent to which the document has been validated
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getValidity()->short:::Determine the validity of the node with respect to the validation being attempted
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getErrorCodes()->StringList:::A list of error codes generated from validation attempts
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getErrorMessages()->StringList:::A list of error messages generated from the validation attempt or an empty StringList if no errors occurred during the validation attempt
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getValidationContext()->String::: attribute impl get validation context
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getTypeDefinition()->XSTypeDefinition:::An item isomorphic to the type definition used to validate this element.
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getMemberTypeDefinition()->XSSimpleTypeDefinition:::If and only if that type definition is a simple type definition with {variety} union, or a complex type definition whose {content type} is a simple thype definition with {variety} union, then an item isomorphic to that member of the union's {member type definitions} which actually validated the element item's normalized value.
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getAttributeDeclaration()->XSAttributeDeclaration:::An item isomorphic to the attribute declaration used to validate this attribute.
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getActualNormalizedValue()->Object::: attribute impl get actual normalized value
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getActualNormalizedValueType()->short::: attribute impl get actual normalized value type
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getItemValueTypes()->ShortList::: attribute impl get item value types
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#getSchemaValue()->XSValue::: attribute impl get schema value
com.sun.org.apache.xerces.internal.impl.xs.AttributePSVImpl#reset()->void:::Reset()
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#constant()->ItemPSVI::: element impl constant
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#isConstant()->boolean::: element impl is constant
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getSchemaDefault()->String:::[schema default]
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getSchemaNormalizedValue()->String:::[schema normalized value]
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getIsSchemaSpecified()->boolean:::[schema specified]
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getValidationAttempted()->short:::Determines the extent to which the document has been validated
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getValidity()->short:::Determine the validity of the node with respect to the validation being attempted
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getErrorCodes()->StringList:::A list of error codes generated from validation attempts
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getErrorMessages()->StringList:::A list of error messages generated from the validation attempt or an empty StringList if no errors occurred during the validation attempt
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getValidationContext()->String::: element impl get validation context
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getNil()->boolean:::[nil]
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getNotation()->XSNotationDeclaration:::[notation]
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getTypeDefinition()->XSTypeDefinition:::An item isomorphic to the type definition used to validate this element.
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getMemberTypeDefinition()->XSSimpleTypeDefinition:::If and only if that type definition is a simple type definition with {variety} union, or a complex type definition whose {content type} is a simple thype definition with {variety} union, then an item isomorphic to that member of the union's {member type definitions} which actually validated the element item's normalized value.
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getElementDeclaration()->XSElementDeclaration:::An item isomorphic to the element declaration used to validate this element.
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getSchemaInformation()->XSModel:::[schema information]
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getActualNormalizedValue()->Object::: element impl get actual normalized value
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getActualNormalizedValueType()->short::: element impl get actual normalized value type
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getItemValueTypes()->ShortList::: element impl get item value types
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#getSchemaValue()->XSValue::: element impl get schema value
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#reset()->void:::Reset() should be called in validator startElement(..) method.
com.sun.org.apache.xerces.internal.impl.xs.ElementPSVImpl#copySchemaInformationTo(ElementPSVImpl)->void::: element impl copy schema information to
com.sun.org.apache.xerces.internal.impl.xs.PSVIErrorList#contains(String)->boolean::: error list contains
com.sun.org.apache.xerces.internal.impl.xs.PSVIErrorList#getLength()->int::: error list get length
com.sun.org.apache.xerces.internal.impl.xs.PSVIErrorList#item(int)->String::: error list item
com.sun.org.apache.xerces.internal.impl.xs.PSVIErrorList#get(int)->String::: error list get
com.sun.org.apache.xerces.internal.impl.xs.PSVIErrorList#size()->int::: error list size
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#getGrammarDescription()->XMLGrammarDescription::: builtin schema grammar get grammar description
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#setImportedGrammars(List)->void::: builtin schema grammar set imported grammars
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalAttributeDecl(XSAttributeDecl)->void::: builtin schema grammar add global attribute decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalAttributeDecl(XSAttributeDecl, String)->void::: builtin schema grammar add global attribute decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalAttributeGroupDecl(XSAttributeGroupDecl)->void::: builtin schema grammar add global attribute group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalAttributeGroupDecl(XSAttributeGroupDecl, String)->void::: builtin schema grammar add global attribute group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalElementDecl(XSElementDecl)->void::: builtin schema grammar add global element decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalElementDecl(XSElementDecl, String)->void::: builtin schema grammar add global element decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalElementDeclAll(XSElementDecl)->void::: builtin schema grammar add global element decl all
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalGroupDecl(XSGroupDecl)->void::: builtin schema grammar add global group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalGroupDecl(XSGroupDecl, String)->void::: builtin schema grammar add global group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalNotationDecl(XSNotationDecl)->void::: builtin schema grammar add global notation decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalNotationDecl(XSNotationDecl, String)->void::: builtin schema grammar add global notation decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalTypeDecl(XSTypeDefinition)->void::: builtin schema grammar add global type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalTypeDecl(XSTypeDefinition, String)->void::: builtin schema grammar add global type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalComplexTypeDecl(XSComplexTypeDecl)->void::: builtin schema grammar add global complex type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalComplexTypeDecl(XSComplexTypeDecl, String)->void::: builtin schema grammar add global complex type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalSimpleTypeDecl(XSSimpleType)->void::: builtin schema grammar add global simple type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addGlobalSimpleTypeDecl(XSSimpleType, String)->void::: builtin schema grammar add global simple type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addComplexTypeDecl(XSComplexTypeDecl, SimpleLocator)->void::: builtin schema grammar add complex type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addRedefinedGroupDecl(XSGroupDecl, XSGroupDecl, SimpleLocator)->void::: builtin schema grammar add redefined group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#addDocument(Object, String)->void::: builtin schema grammar add document
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#getDOMParser()->DOMParser::: builtin schema grammar get parser
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.BuiltinSchemaGrammar#getSAXParser()->SAXParser::: builtin schema grammar get parser
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#getGrammarDescription()->XMLGrammarDescription::: schema4 annotations get grammar description
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#setImportedGrammars(List)->void::: schema4 annotations set imported grammars
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalAttributeDecl(XSAttributeDecl)->void::: schema4 annotations add global attribute decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalAttributeDecl(XSAttributeGroupDecl, String)->void::: schema4 annotations add global attribute decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalAttributeGroupDecl(XSAttributeGroupDecl)->void::: schema4 annotations add global attribute group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalAttributeGroupDecl(XSAttributeGroupDecl, String)->void::: schema4 annotations add global attribute group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalElementDecl(XSElementDecl)->void::: schema4 annotations add global element decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalElementDecl(XSElementDecl, String)->void::: schema4 annotations add global element decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalElementDeclAll(XSElementDecl)->void::: schema4 annotations add global element decl all
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalGroupDecl(XSGroupDecl)->void::: schema4 annotations add global group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalGroupDecl(XSGroupDecl, String)->void::: schema4 annotations add global group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalNotationDecl(XSNotationDecl)->void::: schema4 annotations add global notation decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalNotationDecl(XSNotationDecl, String)->void::: schema4 annotations add global notation decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalTypeDecl(XSTypeDefinition)->void::: schema4 annotations add global type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalTypeDecl(XSTypeDefinition, String)->void::: schema4 annotations add global type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalComplexTypeDecl(XSComplexTypeDecl)->void::: schema4 annotations add global complex type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalComplexTypeDecl(XSComplexTypeDecl, String)->void::: schema4 annotations add global complex type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalSimpleTypeDecl(XSSimpleType)->void::: schema4 annotations add global simple type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addGlobalSimpleTypeDecl(XSSimpleType, String)->void::: schema4 annotations add global simple type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addComplexTypeDecl(XSComplexTypeDecl, SimpleLocator)->void::: schema4 annotations add complex type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addRedefinedGroupDecl(XSGroupDecl, XSGroupDecl, SimpleLocator)->void::: schema4 annotations add redefined group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#addDocument(Object, String)->void::: schema4 annotations add document
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#getDOMParser()->DOMParser::: schema4 annotations get parser
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar.Schema4Annotations#getSAXParser()->SAXParser::: schema4 annotations get parser
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGrammarDescription()->XMLGrammarDescription::: schema grammar get grammar description
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#isNamespaceAware()->boolean::: schema grammar is namespace aware
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#setImportedGrammars(List)->void::: schema grammar set imported grammars
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getImportedGrammars()->List::: schema grammar get imported grammars
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getTargetNamespace()->String:::Returns this grammar's target namespace.
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalAttributeDecl(XSAttributeDecl)->void:::register one global attribute
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalAttributeDecl(XSAttributeDecl, String)->void::: schema grammar add global attribute decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalAttributeGroupDecl(XSAttributeGroupDecl)->void:::register one global attribute group
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalAttributeGroupDecl(XSAttributeGroupDecl, String)->void::: schema grammar add global attribute group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalElementDeclAll(XSElementDecl)->void:::register one global element
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalElementDecl(XSElementDecl)->void::: schema grammar add global element decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalElementDecl(XSElementDecl, String)->void::: schema grammar add global element decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalGroupDecl(XSGroupDecl)->void:::register one global group
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalGroupDecl(XSGroupDecl, String)->void::: schema grammar add global group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalNotationDecl(XSNotationDecl)->void:::register one global notation
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalNotationDecl(XSNotationDecl, String)->void::: schema grammar add global notation decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalTypeDecl(XSTypeDefinition)->void:::register one global type
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalTypeDecl(XSTypeDefinition, String)->void::: schema grammar add global type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalComplexTypeDecl(XSComplexTypeDecl)->void:::register one global complex type
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalComplexTypeDecl(XSComplexTypeDecl, String)->void::: schema grammar add global complex type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalSimpleTypeDecl(XSSimpleType)->void:::register one global simple type
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addGlobalSimpleTypeDecl(XSSimpleType, String)->void::: schema grammar add global simple type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addIDConstraintDecl(XSElementDecl, IdentityConstraint)->void:::register one identity constraint
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addIDConstraintDecl(XSElementDecl, IdentityConstraint, String)->void::: schema grammar add constraint decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalAttributeDecl(String)->XSAttributeDecl:::get one global attribute
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalAttributeDecl(String, String)->XSAttributeDecl::: schema grammar get global attribute decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalAttributeGroupDecl(String)->XSAttributeGroupDecl:::get one global attribute group
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalAttributeGroupDecl(String, String)->XSAttributeGroupDecl::: schema grammar get global attribute group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalElementDecl(String)->XSElementDecl:::get one global element
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalElementDecl(String, String)->XSElementDecl::: schema grammar get global element decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalGroupDecl(String)->XSGroupDecl:::get one global group
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalGroupDecl(String, String)->XSGroupDecl::: schema grammar get global group decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalNotationDecl(String)->XSNotationDecl:::get one global notation
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalNotationDecl(String, String)->XSNotationDecl::: schema grammar get global notation decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalTypeDecl(String)->XSTypeDefinition:::get one global type
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getGlobalTypeDecl(String, String)->XSTypeDefinition::: schema grammar get global type decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getIDConstraintDecl(String)->IdentityConstraint:::get one identity constraint
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getIDConstraintDecl(String, String)->IdentityConstraint::: schema grammar get constraint decl
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#hasIDConstraints()->boolean:::get one identity constraint
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addComplexTypeDecl(XSComplexTypeDecl, SimpleLocator)->void:::add one complex type decl: for later constraint checking
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addRedefinedGroupDecl(XSGroupDecl, XSGroupDecl, SimpleLocator)->void:::add a group redefined by restriction: for later constraint checking
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getUncheckedComplexTypeDecls()->XSComplexTypeDecl[]:::get all complex type decls: for later constraint checking
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getUncheckedCTLocators()->SimpleLocator[]:::get the error locator of all complex type decls
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getRedefinedGroupDecls()->XSGroupDecl[]:::get all redefined groups: for later constraint checking
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getRGLocators()->SimpleLocator[]:::get the error locator of all redefined groups
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#setUncheckedTypeNum(int)->void:::after the first-round checking, some types don't need to be checked against UPA again
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getSubstitutionGroups()->XSElementDecl[]:::get all substitution group information: for the 3 constraint checking
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getS4SGrammar(short)->SchemaGrammar::: schema grammar get s4 grammar
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#resize(XSComplexTypeDecl[], int)->XSComplexTypeDecl[]::: schema grammar resize
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#resize(XSGroupDecl[], int)->XSGroupDecl[]::: schema grammar resize
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#resize(XSElementDecl[], int)->XSElementDecl[]::: schema grammar resize
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#resize(SimpleLocator[], int)->SimpleLocator[]::: schema grammar resize
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addDocument(Object, String)->void::: schema grammar add document
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#removeDocument(int)->void::: schema grammar remove document
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getSchemaNamespace()->String:::[schema namespace]
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getDOMParser()->DOMParser::: schema grammar get parser
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getSAXParser()->SAXParser::: schema grammar get parser
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getComponents(short)->XSNamedMap:::[schema components]: a list of top-level components, i.e
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getComponentsExt(short)->ObjectList::: schema grammar get components ext
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#resetComponents()->void::: schema grammar reset components
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getTypeDefinition(String)->XSTypeDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getAttributeDeclaration(String)->XSAttributeDeclaration:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getElementDeclaration(String)->XSElementDeclaration:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getAttributeGroup(String)->XSAttributeGroupDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getModelGroupDefinition(String)->XSModelGroupDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getNotationDeclaration(String)->XSNotationDeclaration:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getIDCDefinition(String)->XSIDCDefinition::: schema grammar get definition
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getDocumentLocations()->StringList:::[document location]
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#toXSModel()->XSModel:::Return an XSModel that represents components in this schema grammar.
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#toXSModel(XSGrammar[])->XSModel::: schema grammar to model
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#getAnnotations()->XSObjectList::: schema grammar get annotations
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#addAnnotation(XSAnnotationImpl)->void::: schema grammar add annotation
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#setImmutable(boolean)->void::: schema grammar set immutable
com.sun.org.apache.xerces.internal.impl.xs.SchemaGrammar#isImmutable()->boolean::: schema grammar is immutable
com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport#setEffectiveContext(String[])->void:::This method takes a set of Strings, as stored in a NamespaceSupport object, and "fools" the object into thinking that this is one unified context
com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport#getEffectiveLocalContext()->String[]:::This method returns an array of Strings, as would be stored in a NamespaceSupport object
com.sun.org.apache.xerces.internal.impl.xs.SchemaNamespaceSupport#makeGlobal()->void::: schema namespace support make global
com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler#getMatchingElemDecl(QName, XSElementDecl)->XSElementDecl::: substitution group handler get matching elem decl
com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler#substitutionGroupOK(XSElementDecl, XSElementDecl, short)->boolean::: substitution group handler substitution group k
com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler#inSubstitutionGroup(XSElementDecl, XSElementDecl)->boolean::: substitution group handler in substitution group
com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler#reset()->void:::clear the internal registry of substitutionGroup information
com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler#addSubstitutionGroup(XSElementDecl[])->void:::add a list of substitution group information.
com.sun.org.apache.xerces.internal.impl.xs.SubstitutionGroupHandler#getSubstitutionGroup(XSElementDecl)->XSElementDecl[]:::get all elements that can substitute the given element, according to the spec, we shouldn't consider the {block} constraints
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaException#getKey()->String::: schema exception get key
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaException#getArgs()->Object[]::: schema exception get args
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getRecognizedFeatures()->String[]:::Returns a list of feature identifiers that are recognized by this XMLGrammarLoader
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getFeature(String)->boolean:::Returns the state of a feature.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#setFeature(String, boolean)->void:::Sets the state of a feature.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getRecognizedProperties()->String[]:::Returns a list of property identifiers that are recognized by this XMLGrammarLoader
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getProperty(String)->Object:::Returns the state of a property.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#setProperty(String, Object)->void:::Sets the state of a property.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#setLocale(Locale)->void:::Set the locale to use for messages.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getLocale()->Locale:::Return the Locale the XMLGrammarLoader is using.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#setErrorHandler(XMLErrorHandler)->void:::Sets the error handler.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getErrorHandler()->XMLErrorHandler:::Returns the registered error handler.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#setEntityResolver(XMLEntityResolver)->void:::Sets the entity resolver.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getEntityResolver()->XMLEntityResolver:::Returns the registered entity resolver.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#loadGrammar(XMLInputSource[])->void:::Returns a Grammar object by parsing the contents of the entities pointed to by sources.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#loadGrammar(XMLInputSource)->Grammar:::Returns a Grammar object by parsing the contents of the entity pointed to by source.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#loadSchema(XSDDescription, XMLInputSource, Map)->SchemaGrammar:::This method is called either from XMLGrammarLoader.loadGrammar or from XMLSchemaValidator
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#resolveDocument(XSDDescription, Map, XMLEntityResolver)->XMLInputSource:::This method tries to resolve location of the given schema
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#processExternalHints(String, String, Map, XMLErrorReporter)->void::: schema loader process external hints
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#tokenizeSchemaLocationStr(String, Map, String)->boolean::: schema loader tokenize schema location str
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.LocationArray#resize(int, int)->void::: location array resize
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.LocationArray#addLocation(String)->void::: location array add location
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.LocationArray#getLocationArray()->String[]::: location array get location array
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.LocationArray#getFirstLocation()->String::: location array get first location
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.LocationArray#getLength()->int::: location array get length
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getFeatureDefault(String)->Boolean::: schema loader get feature default
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getPropertyDefault(String)->Object::: schema loader get property default
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#reset(XMLComponentManager)->void::: schema loader reset
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getConfig()->DOMConfiguration::: schema loader get config
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#load(LSInput)->XSModel::: schema loader load
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#loadInputList(LSInputList)->XSModel::: schema loader load input list
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#loadURI(String)->XSModel::: schema loader load i
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#loadURIList(StringList)->XSModel::: schema loader load list
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#reportDOMFatalError(Exception)->void::: schema loader report fatal error
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#canSetParameter(String, Object)->boolean::: schema loader can set parameter
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getParameter(String)->Object::: schema loader get parameter
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getParameterNames()->DOMStringList::: schema loader get parameter names
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#setParameter(String, Object)->void::: schema loader set parameter
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#dom2xmlInputSource(LSInput)->XMLInputSource::: schema loader dom2xml input source
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader#getGlobalElementDecl(QName)->XSElementDecl::: schema loader get global element decl
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XSIErrorReporter#reset(XMLErrorReporter)->void::: error reporter reset
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XSIErrorReporter#pushContext()->void::: error reporter push context
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XSIErrorReporter#popContext()->String[]::: error reporter pop context
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XSIErrorReporter#mergeContext()->String[]::: error reporter merge context
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XSIErrorReporter#reportError(String, String, Object[], short)->void::: error reporter report error
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XSIErrorReporter#reportError(XMLLocator, String, String, Object[], short)->void::: error reporter report error
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getRecognizedFeatures()->String[]:::Returns a list of feature identifiers that are recognized by this component
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#setFeature(String, boolean)->void:::Sets the state of a feature
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getRecognizedProperties()->String[]:::Returns a list of property identifiers that are recognized by this component
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#setProperty(String, Object)->void:::Sets the value of a property
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getFeatureDefault(String)->Boolean:::Returns the default state for a feature, or null if this component does not want to report a default value for this feature.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getPropertyDefault(String)->Object:::Returns the default state for a property, or null if this component does not want to report a default value for this property.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#setDocumentHandler(XMLDocumentHandler)->void:::Sets the document handler to receive information about the document.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getDocumentHandler()->XMLDocumentHandler:::Returns the document handler
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#setDocumentSource(XMLDocumentSource)->void:::Sets the document source
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getDocumentSource()->XMLDocumentSource:::Returns the document source
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#startDocument(XMLLocator, String, NamespaceContext, Augmentations)->void:::The start of the document.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#xmlDecl(String, String, String, Augmentations)->void:::Notifies of the presence of an XMLDecl line in the document
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#doctypeDecl(String, String, String, Augmentations)->void:::Notifies of the presence of the DOCTYPE line in the document.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#startElement(QName, XMLAttributes, Augmentations)->void:::The start of an element.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#emptyElement(QName, XMLAttributes, Augmentations)->void:::An empty element.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#characters(XMLString, Augmentations)->void:::Character content.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#ignorableWhitespace(XMLString, Augmentations)->void:::Ignorable whitespace
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#endElement(QName, Augmentations)->void:::The end of an element.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#startCDATA(Augmentations)->void:::The start of a CDATA section.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#endCDATA(Augmentations)->void:::The end of a CDATA section.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#endDocument(Augmentations)->void:::The end of the document.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#characterData(String, Augmentations)->boolean::: schema validator character data
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#elementDefault(String)->void::: schema validator element default
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#startGeneralEntity(String, XMLResourceIdentifier, String, Augmentations)->void:::This method notifies the start of a general entity
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#textDecl(String, String, Augmentations)->void:::Notifies of the presence of a TextDecl line in an entity
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#comment(XMLString, Augmentations)->void:::A comment.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#processingInstruction(String, XMLString, Augmentations)->void:::A processing instruction
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#endGeneralEntity(String, Augmentations)->void:::This method notifies the end of a general entity
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#reset(XMLComponentManager)->void::: schema validator reset
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#startValueScopeFor(IdentityConstraint, int)->void:::Start the value scope for the specified identity constraint
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#activateField(Field, int)->XPathMatcher:::Request to activate the specified field
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#endValueScopeFor(IdentityConstraint, int)->void:::Ends the value scope for the specified identity constraint.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getGlobalElementDecl(QName)->XSElementDecl::: schema validator get global element decl
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#ensureStackCapacity()->void:::ensure element stack capacity
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#handleStartDocument(XMLLocator, String)->void::: schema validator handle start document
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#handleEndDocument()->void::: schema validator handle end document
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#handleCharacters(XMLString)->XMLString::: schema validator handle characters
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#handleIgnorableWhitespace(XMLString)->void::: schema validator handle ignorable whitespace
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#handleStartElement(QName, XMLAttributes, Augmentations)->Augmentations:::Handle element.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#handleEndElement(QName, Augmentations)->Augmentations::: Handle end element
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#endElementPSVI(boolean, SchemaGrammar[], Augmentations)->Augmentations::: schema validator end element i
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getEmptyAugs(Augmentations)->Augmentations::: schema validator get empty augs
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#storeLocations(String, String)->void::: schema validator store locations
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#findSchemaGrammar(short, String, QName, QName, XMLAttributes)->SchemaGrammar::: schema validator find schema grammar
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getAndCheckXsiType(QName, String, XMLAttributes)->XSTypeDefinition::: schema validator get and check xsi type
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#getXsiNil(QName, String)->boolean::: schema validator get xsi nil
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#processAttributes(QName, XMLAttributes, XSAttributeGroupDecl)->void::: schema validator process attributes
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#processOneAttribute(QName, XMLAttributes, int, XSAttributeDecl, XSAttributeUseImpl, AttributePSVImpl)->void::: schema validator process one attribute
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#addDefaultAttributes(QName, XMLAttributes, XSAttributeGroupDecl)->void::: schema validator add default attributes
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#processElementContent(QName)->void::: If there is not text content, and there is a  {value constraint} on the corresponding element decl, then return  an XMLString representing the default value.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#elementLocallyValidType(QName, Object)->Object::: schema validator element locally valid type
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#elementLocallyValidComplexType(QName, Object)->Object::: schema validator element locally valid complex type
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#processRootTypeQName(javax.xml.namespace.QName)->void::: schema validator process root type name
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#processRootElementDeclQName(javax.xml.namespace.QName, QName)->void::: schema validator process root element decl name
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#checkElementMatchesRootElementDecl(XSElementDecl, QName)->void::: schema validator check element matches root element decl
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator#reportSchemaError(String, Object[])->void::: schema validator report schema error
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XPathMatcherStack#clear()->void:::Resets the XPath matcher stack.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XPathMatcherStack#size()->int:::Returns the size of the stack.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XPathMatcherStack#getMatcherCount()->int:::Returns the count of XPath matchers.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XPathMatcherStack#addMatcher(XPathMatcher)->void:::Adds a matcher.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XPathMatcherStack#getMatcherAt(int)->XPathMatcher:::Returns the XPath matcher at the specified index.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XPathMatcherStack#pushContext()->void:::Pushes a new context onto the stack.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.XPathMatcherStack#popContext()->void:::Pops a context off of the stack.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#clear()->void::: value store base clear
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#append(ValueStoreBase)->void::: value store base append
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#startValueScope()->void:::Start scope for value store.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#endValueScope()->void:::Ends scope for value store.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#endDocumentFragment()->void::: value store base end document fragment
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#endDocument()->void:::Signals the end of the document
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#reportError(String, Object[])->void::: value store base report error
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#addValue(Field, boolean, Object, short, ShortList)->void:::Adds the specified value to the value store.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#contains()->boolean:::Returns true if this value store contains the locally scoped value stores
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#contains(ValueStoreBase)->int:::Returns -1 if this value store contains the specified values, otherwise the index of the first field in the key sequence.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#checkDuplicateValues()->void::: value store base check duplicate values
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#toString(Object[])->String:::Returns a string of the specified values.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#toString(Vector, int, int)->String:::Returns a string of the specified values.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreBase#toString()->String:::Returns a string representation of this object.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.UniqueValueStore#checkDuplicateValues()->void:::Called when a duplicate value is added.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.KeyValueStore#checkDuplicateValues()->void:::Called when a duplicate value is added.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.KeyRefValueStore#endDocumentFragment()->void::: key ref value store end document fragment
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.KeyRefValueStore#endDocument()->void:::End document.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#startDocument()->void:::Resets the identity constraint cache.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#startElement()->void::: value store cache start element
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#endElement()->void:::endElement():  merges contents of fGlobalIDConstraintMap with the top of fGlobalMapStack into fGlobalIDConstraintMap.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#initValueStoresFor(XSElementDecl, FieldActivator)->void:::Initializes the value stores for the specified element declaration.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#getValueStoreFor(IdentityConstraint, int)->ValueStoreBase:::Returns the value store associated to the specified IdentityConstraint.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#getGlobalValueStoreFor(IdentityConstraint)->ValueStoreBase:::Returns the global value store associated to the specified IdentityConstraint.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#transplant(IdentityConstraint, int)->void::: value store cache transplant
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#endDocument()->void:::Check identity constraints.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ValueStoreCache#toString()->String:::Returns a string representation of this object.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.LocalIDKey#hashCode()->int::: local key hash code
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.LocalIDKey#equals(Object)->boolean::: local key equals
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ShortVector#length()->int:::Returns the length of the vector.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ShortVector#add(short)->void:::Adds the value to the vector.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ShortVector#valueAt(int)->short:::Returns the short value at the specified position in the vector.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ShortVector#clear()->void:::Clears the vector.
com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.ShortVector#contains(short)->boolean:::Returns whether the short is contained in the vector.
com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl#writeAnnotation(Object, short)->boolean::: Write contents of the annotation to the specified DOM object
com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl#getAnnotationString()->String:::A text representation of annotation.
com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl#getType()->short::: The type of this object, i.e
com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl#getName()->String:::The name of type NCName of this declaration as defined in XML Namespaces.
com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl#getNamespace()->String::: The [target namespace] of this object, or null if it is unspecified.
com.sun.org.apache.xerces.internal.impl.xs.XSAnnotationImpl#getNamespaceItem()->XSNamespaceItem:::A namespace schema information item corresponding to the target namespace of the component, if it's globally declared; or null otherwise.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#setValues(String, String, XSSimpleType, short, short, ValidatedInfo, XSComplexTypeDecl, XSObjectList)->void::: attribute decl set values
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#reset()->void::: attribute decl reset
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getTypeDefinition()->XSSimpleTypeDefinition:::A simple type definition
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getScope()->short:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getEnclosingCTDefinition()->XSComplexTypeDefinition:::Locally scoped declarations are available for use only within the complex type definition identified by the scope property.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getConstraintType()->short:::Value constraint: one of default, fixed.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getConstraintValue()->String:::Value constraint: The actual value (with respect to the {type definition}) Should we return Object instead of DOMString?
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getAnnotation()->XSAnnotation:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getValInfo()->ValidatedInfo::: attribute decl get val info
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getNamespaceItem()->XSNamespaceItem::: attribute decl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#setNamespaceItem(XSNamespaceItem)->void::: attribute decl set namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getActualVC()->Object::: attribute decl get actual c
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getActualVCType()->short::: attribute decl get actual type
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getItemValueTypes()->ShortList::: attribute decl get item value types
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeDecl#getValueConstraintValue()->XSValue::: attribute decl get value constraint value
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#addAttributeUse(XSAttributeUseImpl)->String::: attribute group decl add attribute use
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#replaceAttributeUse(XSAttributeUse, XSAttributeUseImpl)->void::: attribute group decl replace attribute use
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getAttributeUse(String, String)->XSAttributeUse::: attribute group decl get attribute use
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getAttributeUseNoProhibited(String, String)->XSAttributeUse::: attribute group decl get attribute use no prohibited
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#removeProhibitedAttrs()->void::: attribute group decl remove prohibited attrs
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#validRestrictionOf(String, XSAttributeGroupDecl)->Object[]:::Check that the attributes in this group validly restrict those from a base group
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#resize(XSAttributeUseImpl[], int)->XSAttributeUseImpl[]::: attribute group decl resize
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#reset()->void::: attribute group decl reset
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getAttributeUses()->XSObjectList:::{attribute uses} A set of attribute uses.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getAttributeWildcard()->XSWildcard:::{attribute wildcard} Optional
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getAnnotation()->XSAnnotation:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#getNamespaceItem()->XSNamespaceItem::: attribute group decl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeGroupDecl#setNamespaceItem(XSNamespaceItem)->void::: attribute group decl set namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#reset()->void::: attribute use impl reset
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getRequired()->boolean:::{required} determines whether this use of an attribute declaration requires an appropriate attribute information item to be present, or merely allows it.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getAttrDeclaration()->XSAttributeDeclaration:::{attribute declaration} provides the attribute declaration itself, which will in turn determine the simple type definition used.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getConstraintType()->short:::Value Constraint: one of default, fixed.
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getConstraintValue()->String:::Value Constraint: The actual value (with respect to the {type definition}).
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getNamespaceItem()->XSNamespaceItem::: attribute use impl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getActualVC()->Object::: attribute use impl get actual c
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getActualVCType()->short::: attribute use impl get actual type
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getItemValueTypes()->ShortList::: attribute use impl get item value types
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getValueConstraintValue()->XSValue::: attribute use impl get value constraint value
com.sun.org.apache.xerces.internal.impl.xs.XSAttributeUseImpl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#setValues(String, String, XSTypeDefinition, short, short, short, short, boolean, XSAttributeGroupDecl, XSSimpleType, XSParticleDecl, XSObjectListImpl)->void::: complex type decl set values
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#setName(String)->void::: complex type decl set name
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getTypeCategory()->short::: complex type decl get type category
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getTypeName()->String::: complex type decl get type name
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getFinalSet()->short::: complex type decl get final set
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getTargetNamespace()->String::: complex type decl get target namespace
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#containsTypeID()->boolean::: complex type decl contains type d
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#setIsAbstractType()->void::: complex type decl set is abstract type
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#setContainsTypeID()->void::: complex type decl set contains type d
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#setIsAnonymous()->void::: complex type decl set is anonymous
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getContentModel(CMBuilder)->XSCMValidator::: complex type decl get content model
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getContentModel(CMBuilder, boolean)->XSCMValidator::: complex type decl get content model
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getAttrGrp()->XSAttributeGroupDecl::: complex type decl get attr grp
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#toString()->String::: complex type decl to string
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#appendTypeInfo(StringBuilder)->void::: complex type decl append type info
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#derivedFromType(XSTypeDefinition, short)->boolean::: complex type decl derived from type
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#derivedFrom(String, String, short)->boolean::: complex type decl derived from
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#isDOMDerivedFrom(String, String, int)->boolean:::Checks if a type is derived from another given the the name, namespace and derivation method
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#reset()->void::: complex type decl reset
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getAnonymous()->boolean:::A boolean that specifies if the type definition is anonymous
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getBaseType()->XSTypeDefinition:::{base type definition} Either a simple type definition or a complex type definition.
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getDerivationMethod()->short:::{derivation method} Either extension or restriction
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#isFinal(short)->boolean:::{final} For complex type definition it is a subset of {extension, restriction}
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getFinal()->short:::{final} For complex type definition it is a subset of {extension, restriction}.
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getAbstract()->boolean:::{abstract} A boolean
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getAttributeUses()->XSObjectList::: {attribute uses} A set of attribute uses.
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getAttributeWildcard()->XSWildcard:::{attribute wildcard} Optional
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getContentType()->short:::{content type} One of empty, a simple type definition (see simpleType, or mixed, element-only (see cmParticle).
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getSimpleType()->XSSimpleTypeDefinition:::A simple type definition corresponding to simple content model, otherwise null
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getParticle()->XSParticle:::A particle for mixed or element-only content model, otherwise null
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#isProhibitedSubstitution(short)->boolean:::{prohibited substitutions} A subset of {extension, restriction}.
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getProhibitedSubstitutions()->short:::{prohibited substitutions}
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getNamespaceItem()->XSNamespaceItem::: complex type decl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#setNamespaceItem(XSNamespaceItem)->void::: complex type decl set namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getAttributeUse(String, String)->XSAttributeUse::: complex type decl get attribute use
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#getTypeNamespace()->String::: complex type decl get type namespace
com.sun.org.apache.xerces.internal.impl.xs.XSComplexTypeDecl#isDerivedFrom(String, String, int)->boolean::: complex type decl is derived from
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#getEmptySequence()->XSParticleDecl::: constraints get empty sequence
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#checkTypeDerivationOk(XSTypeDefinition, XSTypeDefinition, short)->boolean:::check whether derived is valid derived from base, given a subset of {restriction, extension}.B
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#checkSimpleDerivationOk(XSSimpleType, XSTypeDefinition, short)->boolean:::check whether simple type derived is valid derived from base, given a subset of {restriction, extension}.
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#checkComplexDerivationOk(XSComplexTypeDecl, XSTypeDefinition, short)->boolean:::check whether complex type derived is valid derived from base, given a subset of {restriction, extension}.
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#ElementDefaultValidImmediate(XSTypeDefinition, String, ValidationContext, ValidatedInfo)->Object:::check whether a value is a valid default for some type returns the compiled form of the value The parameter value could be either a String or a ValidatedInfo object
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#reportSchemaError(XMLErrorReporter, SimpleLocator, String, Object[])->void::: constraints report schema error
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#fullSchemaChecking(XSGrammarBucket, SubstitutionGroupHandler, CMBuilder, XMLErrorReporter)->void:::used to check the 3 constraints against each complex type (should be each model group): Unique Particle Attribution, Particle Derivation (Restriction), Element Declrations Consistent.
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#checkElementDeclsConsistent(XSComplexTypeDecl, XSParticleDecl, SymbolHash, SubstitutionGroupHandler)->void::: constraints check element decls consistent
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#findElemInTable(XSComplexTypeDecl, XSElementDecl, SymbolHash)->void::: constraints find elem in table
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#overlapUPA(XSElementDecl, XSElementDecl, SubstitutionGroupHandler)->boolean::: constraints overlap a
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#overlapUPA(XSElementDecl, XSWildcardDecl, SubstitutionGroupHandler)->boolean::: constraints overlap a
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#overlapUPA(XSWildcardDecl, XSWildcardDecl)->boolean::: constraints overlap a
com.sun.org.apache.xerces.internal.impl.xs.XSConstraints#overlapUPA(Object, Object, SubstitutionGroupHandler)->boolean::: constraints overlap a
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#getGrammarType()->String:::the type of the grammar (e.g., DTD or XSD);
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#getContextType()->short:::Get the context
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#getTargetNamespace()->String:::If the context is "include" or "redefine", then return the target namespace of the enclosing schema document; otherwise, the expected target namespace of this document.
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#getLocationHints()->String[]:::For import and references from the instance document, it's possible to have multiple hints for one namespace
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#getTriggeringComponent()->QName:::If a call is triggered by an element/attribute/xsi:type in the instance, this call returns the name of such triggering component: the name of the element/attribute, or the value of the xsi:type.
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#getEnclosingElementName()->QName:::If a call is triggered by an attribute or xsi:type, then this mehtod returns the enclosing element of such element.
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#getAttributes()->XMLAttributes:::If a call is triggered by an element/attribute/xsi:type in the instance, this call returns all attribute of such element (or enclosing element).
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#fromInstance()->boolean::: description from instance
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#isExternal()->boolean::: description is external
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#equals(Object)->boolean:::Compares this grammar with the given grammar
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#hashCode()->int:::Returns the hash code of this grammar
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#setContextType(short)->void::: description set context type
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#setTargetNamespace(String)->void::: description set target namespace
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#setLocationHints(String[])->void::: description set location hints
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#setTriggeringComponent(QName)->void::: description set triggering component
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#setEnclosingElementName(QName)->void::: description set enclosing element name
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#setAttributes(XMLAttributes)->void::: description set attributes
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#reset()->void::: resets all the fields
com.sun.org.apache.xerces.internal.impl.xs.XSDDescription#makeClone()->XSDDescription::: description make clone
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#setDVFactory(SchemaDVFactoryImpl)->void::: declaration pool set factory
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#getElementDecl()->XSElementDecl::: declaration pool get element decl
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#getAttributeDecl()->XSAttributeDecl::: declaration pool get attribute decl
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#getAttributeUse()->XSAttributeUseImpl::: declaration pool get attribute use
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#getComplexTypeDecl()->XSComplexTypeDecl::: declaration pool get complex type decl
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#getSimpleTypeDecl()->XSSimpleTypeDecl::: declaration pool get simple type decl
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#getParticleDecl()->XSParticleDecl::: declaration pool get particle decl
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#getModelGroup()->XSModelGroupImpl::: declaration pool get model group
com.sun.org.apache.xerces.internal.impl.xs.XSDeclarationPool#reset()->void::: declaration pool reset
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#setConstraintType(short)->void::: element decl set constraint type
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#setIsNillable()->void::: element decl set is nillable
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#setIsAbstract()->void::: element decl set is abstract
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#setIsGlobal()->void::: element decl set is global
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#setIsLocal(XSComplexTypeDecl)->void::: element decl set is local
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#addIDConstraint(IdentityConstraint)->void::: element decl add constraint
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getIDConstraints()->IdentityConstraint[]::: element decl get constraints
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#resize(IdentityConstraint[], int)->IdentityConstraint[]::: element decl resize
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#toString()->String::: element decl to string
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#hashCode()->int:::get the hash code
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#equals(Object)->boolean:::whether two decls are the same
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#reset()->void:::Reset current element declaration
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getTypeDefinition()->XSTypeDefinition:::Either a simple type definition or a complex type definition.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getScope()->short:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getEnclosingCTDefinition()->XSComplexTypeDefinition:::Locally scoped declarations are available for use only within the complex type definition identified by the scope property.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getConstraintType()->short:::A value constraint: one of default, fixed.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getConstraintValue()->String:::A value constraint: The actual value (with respect to the {type definition})
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getNillable()->boolean:::If {nillable} is true, then an element may also be valid if it carries the namespace qualified attribute with [local name] nil from namespace http://www.w3.org/2001/XMLSchema-instance and value true (see xsi:nil (2.6.2)) even if it has no text or element content despite a {content type} which would otherwise require content.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getIdentityConstraints()->XSNamedMap:::{identity-constraint definitions} A set of constraint definitions.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getSubstitutionGroupAffiliation()->XSElementDeclaration:::{substitution group affiliation} Optional
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#isSubstitutionGroupExclusion(short)->boolean:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getSubstitutionGroupExclusions()->short:::Specifies if this declaration can be nominated as the {substitution group affiliation} of other element declarations having the same {type definition} or types derived therefrom.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#isDisallowedSubstitution(short)->boolean:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getDisallowedSubstitutions()->short:::The supplied values for {disallowed substitutions}
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getAbstract()->boolean:::{abstract} A boolean.
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getAnnotation()->XSAnnotation:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getNamespaceItem()->XSNamespaceItem::: element decl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#setNamespaceItem(XSNamespaceItem)->void::: element decl set namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getActualVC()->Object::: element decl get actual c
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getActualVCType()->short::: element decl get actual type
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getItemValueTypes()->ShortList::: element decl get item value types
com.sun.org.apache.xerces.internal.impl.xs.XSElementDecl#getValueConstraintValue()->XSValue::: element decl get value constraint value
com.sun.org.apache.xerces.internal.impl.xs.XSElementDeclHelper#getGlobalElementDecl(QName)->XSElementDecl::: element decl helper get global element decl
com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket#getGrammar(String)->SchemaGrammar:::Get the schema grammar for the specified namespace
com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket#putGrammar(SchemaGrammar)->void:::Put a schema grammar into the registry This method is for internal use only: it assumes that a grammar with the same target namespace is not already in the bucket.
com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket#putGrammar(SchemaGrammar, boolean)->boolean:::put a schema grammar and any grammars imported by it (directly or inderectly) into the registry
com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket#putGrammar(SchemaGrammar, boolean, boolean)->boolean:::put a schema grammar and any grammars imported by it (directly or inderectly) into the registry
com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket#getGrammars()->SchemaGrammar[]:::get all grammars in the registry
com.sun.org.apache.xerces.internal.impl.xs.XSGrammarBucket#reset()->void:::Clear the registry
com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl#getModelGroup()->XSModelGroup:::{model group} A model group.
com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl#getAnnotation()->XSAnnotation:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl#getNamespaceItem()->XSNamespaceItem::: group decl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSGroupDecl#setNamespaceItem(XSNamespaceItem)->void::: group decl set namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSImplementationImpl#getDOMImplementation()->DOMImplementation:::NON-DOM: Obtain and return the single shared object
com.sun.org.apache.xerces.internal.impl.xs.XSImplementationImpl#hasFeature(String, String)->boolean:::Test if the DOM implementation supports a specific "feature" -- currently meaning language and level thereof.
com.sun.org.apache.xerces.internal.impl.xs.XSImplementationImpl#createXSLoader(StringList)->XSLoader::: implementation impl create loader
com.sun.org.apache.xerces.internal.impl.xs.XSImplementationImpl#getRecognizedVersions()->StringList::: implementation impl get recognized versions
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#getConfig()->DOMConfiguration::: The configuration of a document
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#loadURIList(StringList)->XSModel:::Parses the content of XML Schema documents specified as the list of URI references
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#loadInputList(LSInputList)->XSModel::: Parses the content of XML Schema documents specified as a list of LSInputs.
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#loadURI(String)->XSModel:::Parse an XML Schema document from a location identified by a URI reference
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#load(LSInput)->XSModel::: Parse an XML Schema document from a resource identified by a LSInput .
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#setParameter(String, Object)->void::: loader impl set parameter
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#getParameter(String)->Object::: loader impl get parameter
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#canSetParameter(String, Object)->boolean::: loader impl can set parameter
com.sun.org.apache.xerces.internal.impl.xs.XSLoaderImpl#getParameterNames()->DOMStringList::: loader impl get parameter names
com.sun.org.apache.xerces.internal.impl.xs.XSMessageFormatter#formatMessage(Locale, String, Object[])->String:::Formats a message with the specified arguments using the given locale information.
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#isEmpty()->boolean::: model group impl is empty
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#minEffectiveTotalRange()->int:::3.8.6 Effective Total Range (all and sequence) and       Effective Total Range (choice) The following methods are used to return min/max range for a particle
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#maxEffectiveTotalRange()->int::: model group impl max effective total range
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#toString()->String::: model group impl to string
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#reset()->void::: model group impl reset
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#getCompositor()->short:::{compositor} One of all, choice or sequence
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#getParticles()->XSObjectList:::{particles} A list of particles
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#getAnnotation()->XSAnnotation:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSModelGroupImpl#getNamespaceItem()->XSNamespaceItem::: model group impl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getNamespaces()->StringList:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getNamespaceItems()->XSNamespaceItemList:::A set of namespace schema information information items (of type XSNamespaceItem), one for each namespace name which appears as the target namespace of any schema component in the schema used for that assessment, and one for absent if any schema component in the schema had no target namespace
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getComponents(short)->XSNamedMap:::Returns a list of top-level components, i.e
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getComponentsByNamespace(short, String)->XSNamedMap:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getTypeDefinition(String, String)->XSTypeDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getTypeDefinition(String, String, String)->XSTypeDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getAttributeDeclaration(String, String)->XSAttributeDeclaration:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getAttributeDeclaration(String, String, String)->XSAttributeDeclaration:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getElementDeclaration(String, String)->XSElementDeclaration:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getElementDeclaration(String, String, String)->XSElementDeclaration:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getAttributeGroup(String, String)->XSAttributeGroupDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getAttributeGroup(String, String, String)->XSAttributeGroupDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getModelGroupDefinition(String, String)->XSModelGroupDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getModelGroupDefinition(String, String, String)->XSModelGroupDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getIDCDefinition(String, String)->XSIDCDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getIDCDefinition(String, String, String)->XSIDCDefinition:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getNotationDeclaration(String, String)->XSNotationDeclaration::: model impl get notation declaration
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getNotationDeclaration(String, String, String)->XSNotationDeclaration::: model impl get notation declaration
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getAnnotations()->XSObjectList::: [annotations]: a set of annotations if it exists, otherwise an empty XSObjectList.
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#hasIDConstraints()->boolean:::REVISIT: to expose identity constraints from XSModel
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getSubstitutionGroup(XSElementDeclaration)->XSObjectList:::Convenience method
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#getLength()->int:::The number of XSNamespaceItems in the list
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#item(int)->XSNamespaceItem:::Returns the indexth item in the collection or null if index is greater than or equal to the number of objects in the list
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#get(int)->XSNamespaceItem::: model impl get
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#size()->int::: model impl size
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#iterator()->Iterator::: model impl iterator
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#listIterator()->ListIterator::: model impl list iterator
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#listIterator(int)->ListIterator::: model impl list iterator
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#toArray()->Object[]::: model impl to array
com.sun.org.apache.xerces.internal.impl.xs.XSModelImpl#toArray(Object[])->Object[]::: model impl to array
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#getSystemId()->String:::Optional if {public identifier} is present
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#getPublicId()->String:::Optional if {system identifier} is present
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#getAnnotation()->XSAnnotation:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#getNamespaceItem()->XSNamespaceItem::: notation decl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSNotationDecl#setNamespaceItem(XSNamespaceItem)->void::: notation decl set namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#makeClone()->XSParticleDecl::: particle decl make clone
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#emptiable()->boolean:::3.9.6 Schema Component Constraint: Particle Emptiable whether this particle is emptible
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#isEmpty()->boolean::: particle decl is empty
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#minEffectiveTotalRange()->int:::3.8.6 Effective Total Range (all and sequence) and       Effective Total Range (choice) The following methods are used to return min/max range for a particle
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#maxEffectiveTotalRange()->int::: particle decl max effective total range
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#toString()->String::: particle decl to string
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#appendParticle(StringBuffer)->void:::append the string description of this particle to the string buffer this is for error message.
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#reset()->void::: particle decl reset
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getMinOccurs()->int:::{min occurs} determines the minimum number of terms that can occur.
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getMaxOccursUnbounded()->boolean:::{max occurs} whether the maxOccurs value is unbounded.
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getMaxOccurs()->int:::{max occurs} determines the maximum number of terms that can occur.
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getTerm()->XSTerm:::{term} One of a model group, a wildcard, or an element declaration.
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getNamespaceItem()->XSNamespaceItem::: particle decl get namespace item
com.sun.org.apache.xerces.internal.impl.xs.XSParticleDecl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#allowNamespace(String)->boolean:::Validation Rule: Wildcard allows Namespace Name
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#isSubsetOf(XSWildcardDecl)->boolean::: Schema Component Constraint: Wildcard Subset
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#weakerProcessContents(XSWildcardDecl)->boolean:::Check whether this wildcard has a weaker process contents than the super.
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#performUnionWith(XSWildcardDecl, short)->XSWildcardDecl:::Schema Component Constraint: Attribute Wildcard Union
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#performIntersectionWith(XSWildcardDecl, short)->XSWildcardDecl:::Schema Component Constraint: Attribute Wildcard Intersection
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#intersect2sets(String[], String[])->String[]::: wildcard decl intersect2sets
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#union2sets(String[], String[])->String[]::: wildcard decl union2sets
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#subset2sets(String[], String[])->boolean::: wildcard decl subset2sets
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#elementInSet(String, String[])->boolean::: wildcard decl element in set
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#toString()->String::: wildcard decl to string
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getType()->short:::Get the type of the object, i.e ELEMENT_DECLARATION.
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getName()->String:::The name of this XSObject depending on the XSObject type.
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getNamespace()->String:::The namespace URI of this node, or null if it is unspecified
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getConstraintType()->short:::Namespace constraint: A constraint type: any, not, list.
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getNsConstraintList()->StringList:::Namespace constraint
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getProcessContents()->short:::{process contents} One of skip, lax or strict
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getProcessContentsAsString()->String:::String valid of {process contents}
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getAnnotation()->XSAnnotation:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getAnnotations()->XSObjectList:::Optional
com.sun.org.apache.xerces.internal.impl.xs.XSWildcardDecl#getNamespaceItem()->XSNamespaceItem::: wildcard decl get namespace item
