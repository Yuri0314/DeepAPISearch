com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#addNode(Node, int, int, int)->int:::Construct the node map from the node.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getNumberOfNodes()->int:::Get the number of nodes that have been added.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#nextNode()->boolean:::This method iterates to the next node that will be added to the table
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getNode(int)->Node:::Return an DOM node for the given node.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#lookupNode(int)->Node:::Get a Node from an identity index
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getNextNodeIdentity(int)->int:::Get the next node identity value in the list, and call the iterator if it hasn't been added yet.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getHandleOfNode(Node)->int:::Get the handle from a Node
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getAttributeNode(int, String, String)->int:::Retrieves an attribute node by by qualified name and namespace URI.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getStringValue(int)->XMLString:::Get the string-value of a node as a String object (see http://www.w3.org/TR/xpath#data-model for the definition of a node's string-value).
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#isWhitespace(int)->boolean:::Determine if the string-value of a node is whitespace
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getNodeData(Node, FastStringBuffer)->void:::Retrieve the text content of a DOM subtree, appending it into a user-supplied FastStringBuffer object
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getNodeName(int)->String:::Given a node handle, return its DOM-style node name
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getNodeNameX(int)->String:::Given a node handle, return the XPath node name
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getLocalName(int)->String:::Given a node handle, return its XPath-style localname
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getPrefix(int)->String:::Given a namespace handle, return the prefix that the namespace decl is mapping
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getNamespaceURI(int)->String:::Given a node handle, return its DOM-style namespace URI (As defined in Namespaces, this is the declared URI which this node's prefix -- or default in lieu thereof -- was mapped to.)  %REVIEW% Null or ""? -sb
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getNodeValue(int)->String:::Given a node handle, return its node value
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getDocumentTypeDeclarationSystemIdentifier()->String:::  A document type declaration information item has the following properties:      1
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getDocumentTypeDeclarationPublicIdentifier()->String:::Return the public identifier of the external subset, normalized as described in 4.2.2 External Entities [XML]
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getElementById(String)->int:::Returns the Element whose ID is given by elementId
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getUnparsedEntityURI(String)->String:::The getUnparsedEntityURI function returns the URI of the unparsed entity with the specified name in the same document as the context node (see [3.3 Unparsed Entities])
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#isAttributeSpecified(int)->boolean:::    5
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#setIncrementalSAXSource(IncrementalSAXSource)->void:::Bind an IncrementalSAXSource to this DTM
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getContentHandler()->org.xml.sax.ContentHandler:::getContentHandler returns "our SAX builder" -- the thing that someone else should send SAX events to in order to extend this DTM model.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getLexicalHandler()->org.xml.sax.ext.LexicalHandler:::Return this DTM's lexical handler
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getEntityResolver()->org.xml.sax.EntityResolver:::Return this DTM's EntityResolver.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getDTDHandler()->org.xml.sax.DTDHandler:::Return this DTM's DTDHandler.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getErrorHandler()->org.xml.sax.ErrorHandler:::Return this DTM's ErrorHandler.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getDeclHandler()->org.xml.sax.ext.DeclHandler:::Return this DTM's DeclHandler.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#needsTwoThreads()->boolean::: m2 m needs two threads
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#dispatchCharactersEvents(int, org.xml.sax.ContentHandler, boolean)->void:::Directly call the characters method on the passed ContentHandler for the string-value of the given node (see http://www.w3.org/TR/xpath#data-model for the definition of a node's string-value)
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#dispatchNodeData(Node, org.xml.sax.ContentHandler, int)->void:::Retrieve the text content of a DOM subtree, appending it into a user-supplied FastStringBuffer object
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#dispatchToEvents(int, org.xml.sax.ContentHandler)->void:::Directly create SAX parser events from a subtree.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM.CharacterNodeHandler#characters(Node)->void::: character node handler characters
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#setProperty(String, Object)->void:::For the moment all the run time properties are ignored by this class.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTM#getSourceLocatorFor(int)->SourceLocator:::No source information is available for DOM2DTM, so return null here.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getNodeName()->String::: m2 mdefault namespace declaration node get node name
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getName()->String::: m2 mdefault namespace declaration node get name
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getNamespaceURI()->String::: m2 mdefault namespace declaration node get namespace i
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getPrefix()->String::: m2 mdefault namespace declaration node get prefix
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getLocalName()->String::: m2 mdefault namespace declaration node get local name
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getNodeValue()->String::: m2 mdefault namespace declaration node get node value
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getValue()->String::: m2 mdefault namespace declaration node get value
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getOwnerElement()->Element::: m2 mdefault namespace declaration node get owner element
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#isSupported(String, String)->boolean::: m2 mdefault namespace declaration node is supported
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#hasChildNodes()->boolean::: m2 mdefault namespace declaration node has child nodes
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#hasAttributes()->boolean::: m2 mdefault namespace declaration node has attributes
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getParentNode()->Node::: m2 mdefault namespace declaration node get parent node
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getFirstChild()->Node::: m2 mdefault namespace declaration node get first child
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getLastChild()->Node::: m2 mdefault namespace declaration node get last child
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getPreviousSibling()->Node::: m2 mdefault namespace declaration node get previous sibling
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getNextSibling()->Node::: m2 mdefault namespace declaration node get next sibling
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getSpecified()->boolean::: m2 mdefault namespace declaration node get specified
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#normalize()->void::: m2 mdefault namespace declaration node normalize
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getChildNodes()->NodeList::: m2 mdefault namespace declaration node get child nodes
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getAttributes()->NamedNodeMap::: m2 mdefault namespace declaration node get attributes
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getNodeType()->short::: m2 mdefault namespace declaration node get node type
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#setNodeValue(String)->void::: m2 mdefault namespace declaration node set node value
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#setValue(String)->void::: m2 mdefault namespace declaration node set value
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#setPrefix(String)->void::: m2 mdefault namespace declaration node set prefix
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#insertBefore(Node, Node)->Node::: m2 mdefault namespace declaration node insert before
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#replaceChild(Node, Node)->Node::: m2 mdefault namespace declaration node replace child
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#appendChild(Node)->Node::: m2 mdefault namespace declaration node append child
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#removeChild(Node)->Node::: m2 mdefault namespace declaration node remove child
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getOwnerDocument()->Document::: m2 mdefault namespace declaration node get owner document
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#cloneNode(boolean)->Node::: m2 mdefault namespace declaration node clone node
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getHandleOfNode()->int:::Non-DOM method, part of the temporary kluge %REVIEW% This would be a pruning problem, but since it will always be added to the root element and we prune on elements, we shouldn't have to worry.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getTypeName()->String::: m2 mdefault namespace declaration node get type name
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getTypeNamespace()->String::: m2 mdefault namespace declaration node get type namespace
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#isDerivedFrom(String, String, int)->boolean::: m2 mdefault namespace declaration node is derived from
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getSchemaTypeInfo()->TypeInfo::: m2 mdefault namespace declaration node get schema type info
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#isId()->boolean::: m2 mdefault namespace declaration node is id
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#setUserData(String, Object, UserDataHandler)->Object:::Associate an object to a key on this node
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getUserData(String)->Object:::Retrieves the object associated to a key on a this node
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getFeature(String, String)->Object::: This method returns a specialized object which implements the specialized APIs of the specified feature and version
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#isEqualNode(Node)->boolean:::Tests whether two nodes are equal
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#lookupNamespaceURI(String)->String:::DOM Level 3 - Experimental: Look up the namespace URI associated to the given prefix, starting from this node
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#isDefaultNamespace(String)->boolean::: DOM Level 3: Experimental  This method checks if the specified namespaceURI is the  default namespace or not.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#lookupPrefix(String)->String:::DOM Level 3 - Experimental: Look up the prefix associated to the given namespace URI, starting from this node.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#isSameNode(Node)->boolean:::Returns whether this node is the same node as the given one
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#setTextContent(String)->void:::This attribute returns the text content of this node and its descendants
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getTextContent()->String:::This attribute returns the text content of this node and its descendants
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#compareDocumentPosition(Node)->short:::Compares a node with this node with regard to their position in the document.
com.sun.org.apache.xml.internal.dtm.ref.dom2dtm.DOM2DTMdefaultNamespaceDeclarationNode#getBaseURI()->String:::The absolute base URI of this node or null if undefined
