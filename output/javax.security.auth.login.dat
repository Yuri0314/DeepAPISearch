AppConfigurationEntry#getLoginModuleName():::Get the class name of the configured LoginModule.:::return
AppConfigurationEntry#getControlFlag():::Return the controlFlag (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL) for this LoginModule.:::return
AppConfigurationEntry#getOptions():::Get the options configured for this LoginModule.:::return
AppConfigurationEntry.LoginModuleControlFlag#toString():::Return a String representation of this controlFlag:::return->getString
Configuration#getConfiguration():::Get the installed login Configuration.:::sm->System->getSecurityManager->if->sm->new->AuthPermission->checkPermission->synchronized->if->config_class->AccessController->new->PrivilegedAction<>->doPrivileged->if->try->finalClass->untrustedImpl->AccessController->new->PrivilegedExceptionAction<>->doPrivileged->AccessController->new->PrivilegedExceptionAction<>->Objects->requireNonNull->doPrivileged->catch->ee->e->getException->if->throw->ee->getCause->getMessage->new->SecurityException->ee->getCause->initCause->else->throw->ee->toString->new->SecurityException->initCause->finally->return
Configuration#setConfiguration(Configuration):::Set the login Configuration.:::sm->System->getSecurityManager->if->sm->new->AuthPermission->checkPermission
Configuration#getInstance(String, Configuration.Parameters):::Returns a Configuration object of the specified type:::Objects->requireNonNull->checkPermission->try->instance->GetInstance->getInstance->return->new->ConfigDelegate->catch->return->handleException->finally
Configuration#getInstance(String, Configuration.Parameters, String):::Returns a Configuration object of the specified type:::Objects->requireNonNull->if->provider->length->throw->new->IllegalArgumentException->checkPermission->try->instance->GetInstance->getInstance->return->new->ConfigDelegate->catch->return->handleException->finally
Configuration#getInstance(String, Configuration.Parameters, Provider):::Returns a Configuration object of the specified type:::Objects->requireNonNull->if->throw->new->IllegalArgumentException->checkPermission->try->instance->GetInstance->getInstance->return->new->ConfigDelegate->catch->return->handleException->finally
Configuration#getProvider():::Return the Provider of this Configuration:::return
Configuration#getType():::Return the type of this Configuration:::return
Configuration#getParameters():::Return Configuration parameters:::return
Configuration#getAppConfigurationEntry(String):::Retrieve the AppConfigurationEntries for the specified name from this Configuration.:::
Configuration#refresh():::Refresh and reload the Configuration:::
ConfigurationSpi#engineGetAppConfigurationEntry(String):::Retrieve the AppConfigurationEntries for the specified name.:::
ConfigurationSpi#engineRefresh():::Refresh and reload the Configuration:::
LoginContext#login():::Perform the authentication:::if->new->Subject->try->invokePriv->invokePriv->catch->try->invokePriv->catch->throw->finally->throw->finally
LoginContext#logout():::Logout the Subject:::if->throw->ResourcesMgr->getString->new->LoginException->invokePriv
LoginContext#getSubject():::Return the authenticated Subject.:::if->return->return
