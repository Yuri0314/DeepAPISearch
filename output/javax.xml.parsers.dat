DocumentBuilder#reset():::Reset this DocumentBuilder to its original configuration.  DocumentBuilder is reset to the same state as when it was created with DocumentBuilderFactory#newDocumentBuilder():::throw->this->getClass->getName->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
DocumentBuilder#parse(InputStream)::: document builder parse:::if->throw->new->IllegalArgumentException->in->new->InputSource->return->parse
DocumentBuilder#parse(InputStream, String)::: document builder parse:::if->throw->new->IllegalArgumentException->in->new->InputSource->in->setSystemId->return->parse
DocumentBuilder#parse(String)::: document builder parse:::if->throw->new->IllegalArgumentException->in->new->InputSource->return->parse
DocumentBuilder#parse(File)::: document builder parse:::if->throw->new->IllegalArgumentException->in->f->toURI->toASCIIString->new->InputSource->return->parse
DocumentBuilder#parse(InputSource)::: document builder parse:::
DocumentBuilder#isNamespaceAware()::: document builder is namespace aware:::
DocumentBuilder#isValidating()::: document builder is validating:::
DocumentBuilder#setEntityResolver(EntityResolver)::: document builder set entity resolver:::
DocumentBuilder#setErrorHandler(ErrorHandler)::: document builder set error handler:::
DocumentBuilder#newDocument()::: document builder new document:::
DocumentBuilder#getDOMImplementation()::: document builder get implementation:::
DocumentBuilder#getSchema():::Get a reference to the the Schema being used by the XML processor.  If no schema is being used, null is returned.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
DocumentBuilder#isXIncludeAware():::Get the XInclude processing mode for this parser.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
DocumentBuilderFactory#newDefaultInstance():::Creates a new instance of the DocumentBuilderFactory builtin system-default implementation.:::return->new->DocumentBuilderFactoryImpl
DocumentBuilderFactory#newInstance():::Obtain a new instance of a DocumentBuilderFactory:::return->FactoryFinder->find
DocumentBuilderFactory#newInstance(String, ClassLoader):::Obtain a new instance of a DocumentBuilderFactory from class name:::return->FactoryFinder->newInstance
DocumentBuilderFactory#newDocumentBuilder()::: document builder factory new document builder:::
DocumentBuilderFactory#setNamespaceAware(boolean)::: document builder factory set namespace aware:::
DocumentBuilderFactory#setValidating(boolean)::: document builder factory set validating:::
DocumentBuilderFactory#setIgnoringElementContentWhitespace(boolean)::: document builder factory set ignoring element content whitespace:::
DocumentBuilderFactory#setExpandEntityReferences(boolean)::: document builder factory set expand entity references:::
DocumentBuilderFactory#setIgnoringComments(boolean)::: document builder factory set ignoring comments:::
DocumentBuilderFactory#setCoalescing(boolean)::: document builder factory set coalescing:::
DocumentBuilderFactory#isNamespaceAware()::: document builder factory is namespace aware:::return
DocumentBuilderFactory#isValidating()::: document builder factory is validating:::return
DocumentBuilderFactory#isIgnoringElementContentWhitespace()::: document builder factory is ignoring element content whitespace:::return
DocumentBuilderFactory#isExpandEntityReferences()::: document builder factory is expand entity references:::return
DocumentBuilderFactory#isIgnoringComments()::: document builder factory is ignoring comments:::return
DocumentBuilderFactory#isCoalescing()::: document builder factory is coalescing:::return
DocumentBuilderFactory#setAttribute(String, Object):::Allows the user to set specific attributes on the underlying implementation:::
DocumentBuilderFactory#getAttribute(String):::Allows the user to retrieve specific attributes on the underlying implementation.:::
DocumentBuilderFactory#setFeature(String, boolean):::Set a feature for this DocumentBuilderFactory and DocumentBuilders created by this factory:::
DocumentBuilderFactory#getFeature(String):::Get the state of the named feature:::
DocumentBuilderFactory#getSchema():::Gets the Schema object specified through the #setSchema(Schema schema) method.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
DocumentBuilderFactory#setSchema(Schema):::Set the Schema to be used by parsers created from this factory:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
DocumentBuilderFactory#setXIncludeAware(boolean):::Set state of XInclude processing:::if->throw->this->getClass->new->UnsupportedOperationException
DocumentBuilderFactory#isXIncludeAware():::Get state of XInclude processing.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
FactoryConfigurationError#getMessage()::: factory configuration error get message:::message->super->getMessage->if->return->exception->getMessage->return
FactoryConfigurationError#getException()::: factory configuration error get exception:::return
FactoryConfigurationError#getCause():::use the exception chaining mechanism of JDK1.4:::return
FactoryFinder#dPrint(Supplier)::: factory finder d print:::if->msgGen->get->println
FactoryFinder#getProviderClass(String, ClassLoader, boolean, boolean):::Attempt to load a class using the class loader supplied:::try->if->if->return->Class->getClassLoader->forName->else->SecuritySupport->getContextClassLoader->if->throw->new->ClassNotFoundException->else->return->Class->forName->else->return->Class->forName->catch->if->return->Class->getClassLoader->forName->else->throw->finally
FactoryFinder#newInstance(Class, String, ClassLoader, boolean):::Create an instance of a class:::return->newInstance
FactoryFinder#newInstance(Class, String, ClassLoader, boolean, boolean):::Create an instance of a class:::if->System->getSecurityManager->if->className->startsWith->try->providerClass->getProviderClass->if->type->isAssignableFrom->throw->type->getName->new->ClassCastException->instance->providerClass->getConstructor->newInstance->clD->dPrint->return->type->cast->catch->throw->new->FactoryConfigurationError->throw->new->FactoryConfigurationError->finally
FactoryFinder#find(Class, String):::Finds the implementation Class object in the specified order:::factoryId->type->getName->dPrint->try->systemProp->SecuritySupport->getSystemProperty->if->dPrint->return->newInstance->catch->if->se->printStackTrace->finally->try->if->synchronized->if->configFile->SecuritySupport->getSystemProperty->f->new->File->if->SecuritySupport->doesFileExist->dPrint->cacheProps->SecuritySupport->getFileInputStream->load->factoryClassName->cacheProps->getProperty->if->dPrint->return->newInstance->catch->if->ex->printStackTrace->finally->provider->findServiceProvider->if->return->if->throw->new->FactoryConfigurationError->dPrint->return->newInstance
FactoryFinder#findServiceProvider(Class)::: factory finder find service provider:::try->return->AccessController->new->PrivilegedAction<T>->doPrivileged->catch->x->new->RuntimeException->error->x->getMessage->new->FactoryConfigurationError->throw->finally
SAXParser#reset():::Reset this SAXParser to its original configuration.  SAXParser is reset to the same state as when it was created with SAXParserFactory#newSAXParser():::throw->this->getClass->getName->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
SAXParser#parse(InputStream, HandlerBase):::Parse the content of the given java.io.InputStream instance as XML using the specified org.xml.sax.HandlerBase:::if->throw->new->IllegalArgumentException->input->new->InputSource->this->parse
SAXParser#parse(InputStream, HandlerBase, String):::Parse the content of the given java.io.InputStream instance as XML using the specified org.xml.sax.HandlerBase:::if->throw->new->IllegalArgumentException->input->new->InputSource->input->setSystemId->this->parse
SAXParser#parse(InputStream, DefaultHandler):::Parse the content of the given java.io.InputStream instance as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->input->new->InputSource->this->parse
SAXParser#parse(InputStream, DefaultHandler, String):::Parse the content of the given java.io.InputStream instance as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->input->new->InputSource->input->setSystemId->this->parse
SAXParser#parse(String, HandlerBase):::Parse the content described by the giving Uniform Resource Identifier (URI) as XML using the specified org.xml.sax.HandlerBase:::if->throw->new->IllegalArgumentException->input->new->InputSource->this->parse
SAXParser#parse(String, DefaultHandler):::Parse the content described by the giving Uniform Resource Identifier (URI) as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->input->new->InputSource->this->parse
SAXParser#parse(File, HandlerBase):::Parse the content of the file specified as XML using the specified org.xml.sax.HandlerBase:::if->throw->new->IllegalArgumentException->input->f->toURI->toASCIIString->new->InputSource->this->parse
SAXParser#parse(File, DefaultHandler):::Parse the content of the file specified as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->input->f->toURI->toASCIIString->new->InputSource->this->parse
SAXParser#parse(InputSource, HandlerBase):::Parse the content given org.xml.sax.InputSource as XML using the specified org.xml.sax.HandlerBase:::if->throw->new->IllegalArgumentException->parser->this->getParser->if->parser->setDocumentHandler->parser->setEntityResolver->parser->setErrorHandler->parser->setDTDHandler->parser->parse
SAXParser#parse(InputSource, DefaultHandler):::Parse the content given org.xml.sax.InputSource as XML using the specified org.xml.sax.helpers.DefaultHandler.:::if->throw->new->IllegalArgumentException->reader->this->getXMLReader->if->reader->setContentHandler->reader->setEntityResolver->reader->setErrorHandler->reader->setDTDHandler->reader->parse
SAXParser#getParser():::Returns the SAX parser that is encapsulated by the implementation of this class.:::
SAXParser#getXMLReader()::: parser get reader:::
SAXParser#isNamespaceAware()::: parser is namespace aware:::
SAXParser#isValidating()::: parser is validating:::
SAXParser#setProperty(String, Object):::Sets the particular property in the underlying implementation of org.xml.sax.XMLReader:::
SAXParser#getProperty(String):::Returns the particular property requested for in the underlying implementation of org.xml.sax.XMLReader.:::
SAXParser#getSchema():::Get a reference to the the Schema being used by the XML processor.  If no schema is being used, null is returned.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
SAXParser#isXIncludeAware():::Get the XInclude processing mode for this parser.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
SAXParserFactory#newDefaultInstance():::Creates a new instance of the SAXParserFactory builtin system-default implementation.:::return->new->SAXParserFactoryImpl
SAXParserFactory#newInstance()::: parser factory new instance:::return->FactoryFinder->find
SAXParserFactory#newInstance(String, ClassLoader):::Obtain a new instance of a SAXParserFactory from class name:::return->FactoryFinder->newInstance
SAXParserFactory#newSAXParser()::: parser factory new parser:::
SAXParserFactory#setNamespaceAware(boolean)::: parser factory set namespace aware:::
SAXParserFactory#setValidating(boolean)::: parser factory set validating:::
SAXParserFactory#isNamespaceAware()::: parser factory is namespace aware:::return
SAXParserFactory#isValidating()::: parser factory is validating:::return
SAXParserFactory#setFeature(String, boolean):::Sets the particular feature in the underlying implementation of org.xml.sax.XMLReader:::
SAXParserFactory#getFeature(String):::Returns the particular property requested for in the underlying implementation of org.xml.sax.XMLReader.:::
SAXParserFactory#getSchema():::Gets the Schema object specified through the #setSchema(Schema schema) method.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
SAXParserFactory#setSchema(Schema):::Set the Schema to be used by parsers created from this factory:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
SAXParserFactory#setXIncludeAware(boolean):::Set state of XInclude processing:::if->throw->this->getClass->new->UnsupportedOperationException
SAXParserFactory#isXIncludeAware():::Get state of XInclude processing.:::throw->this->getClass->getPackage->getSpecificationTitle->this->getClass->getPackage->getSpecificationVersion->new->UnsupportedOperationException
