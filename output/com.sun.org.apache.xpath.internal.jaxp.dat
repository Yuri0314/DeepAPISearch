com.sun.org.apache.xpath.internal.jaxp.JAXPExtensionsProvider#functionAvailable(String, String)->boolean::: extensions provider function available
com.sun.org.apache.xpath.internal.jaxp.JAXPExtensionsProvider#elementAvailable(String, String)->boolean:::Is the extension element available?
com.sun.org.apache.xpath.internal.jaxp.JAXPExtensionsProvider#extFunction(String, String, List, Object)->Object:::Execute the extension function.
com.sun.org.apache.xpath.internal.jaxp.JAXPExtensionsProvider#extFunction(FuncExtFunction, List)->Object:::Execute the extension function.
com.sun.org.apache.xpath.internal.jaxp.JAXPPrefixResolver#getNamespaceForPrefix(String)->String::: prefix resolver get namespace for prefix
com.sun.org.apache.xpath.internal.jaxp.JAXPPrefixResolver#getBaseIdentifier()->String:::Return the base identifier.
com.sun.org.apache.xpath.internal.jaxp.JAXPPrefixResolver#handlesNullPrefixes()->boolean::: prefix resolver handles null prefixes
com.sun.org.apache.xpath.internal.jaxp.JAXPPrefixResolver#getNamespaceForPrefix(String, org.w3c.dom.Node)->String:::Given a prefix and a Context Node, get the corresponding namespace
com.sun.org.apache.xpath.internal.jaxp.JAXPVariableStack#getVariableOrParam(XPathContext, QName)->XObject::: variable stack get variable or param
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#setXPath(com.sun.org.apache.xpath.internal.XPath)->void::: path expression impl set path
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#eval(Object, QName)->Object::: path expression impl eval
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#evaluate(Object, QName)->Object::: path expression impl evaluate
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#evaluate(Object)->String::: path expression impl evaluate
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#evaluate(InputSource, QName)->Object::: path expression impl evaluate
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#evaluate(InputSource)->String::: path expression impl evaluate
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#evaluateExpression(Object, Class)->T::: path expression impl evaluate expression
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#evaluateExpression(Object)->XPathEvaluationResult::: path expression impl evaluate expression
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#evaluateExpression(InputSource, Class)->T::: path expression impl evaluate expression
com.sun.org.apache.xpath.internal.jaxp.XPathExpressionImpl#evaluateExpression(InputSource)->XPathEvaluationResult::: path expression impl evaluate expression
com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl#isObjectModelSupported(String)->boolean:::Is specified object model supported by this XPathFactory?
com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl#newXPath()->javax.xml.xpath.XPath:::Returns a new XPath object using the underlying object model determined when the factory was instantiated.
com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl#setFeature(String, boolean)->void:::Set a feature for this XPathFactory and XPaths created by this factory.   Feature names are fully qualified java.net.URIs
com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl#getFeature(String)->boolean:::Get the state of the named feature.   Feature names are fully qualified java.net.URIs
com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl#setXPathFunctionResolver(XPathFunctionResolver)->void:::Establish a default function resolver.  Any XPath objects constructed from this factory will use the specified resolver by default.  A NullPointerException is thrown if resolver is null.
com.sun.org.apache.xpath.internal.jaxp.XPathFactoryImpl#setXPathVariableResolver(XPathVariableResolver)->void:::Establish a default variable resolver.  Any XPath objects constructed from this factory will use the specified resolver by default.  A NullPointerException is thrown if resolver is null.
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#setXPathVariableResolver(XPathVariableResolver)->void::: path impl set path variable resolver
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#getXPathVariableResolver()->XPathVariableResolver::: path impl get path variable resolver
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#setXPathFunctionResolver(XPathFunctionResolver)->void::: path impl set path function resolver
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#getXPathFunctionResolver()->XPathFunctionResolver::: path impl get path function resolver
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#setNamespaceContext(NamespaceContext)->void::: path impl set namespace context
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#getNamespaceContext()->NamespaceContext::: path impl get namespace context
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#evaluate(String, Object, QName)->Object::: path impl evaluate
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#evaluate(String, Object)->String::: path impl evaluate
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#compile(String)->XPathExpression::: path impl compile
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#evaluate(String, InputSource, QName)->Object::: path impl evaluate
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#evaluate(String, InputSource)->String::: path impl evaluate
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#reset()->void::: path impl reset
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#evaluateExpression(String, Object, Class)->T::: path impl evaluate expression
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#evaluateExpression(String, Object)->XPathEvaluationResult::: path impl evaluate expression
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#evaluateExpression(String, InputSource, Class)->T::: path impl evaluate expression
com.sun.org.apache.xpath.internal.jaxp.XPathImpl#evaluateExpression(String, InputSource)->XPathEvaluationResult::: path impl evaluate expression
com.sun.org.apache.xpath.internal.jaxp.XPathImplUtil#eval(Object, com.sun.org.apache.xpath.internal.XPath)->XObject:::Evaluate an XPath context using the internal XPath engine
com.sun.org.apache.xpath.internal.jaxp.XPathImplUtil#getDocument(InputSource)->Document:::Parse the input source and return a Document.
com.sun.org.apache.xpath.internal.jaxp.XPathImplUtil#getResultAsType(XObject, QName)->Object:::Get result depending on the QName type defined in XPathConstants
com.sun.org.apache.xpath.internal.jaxp.XPathImplUtil#getXPathResult(XObject, Class)->T:::Construct an XPathExpressionResult object based on the result of the evaluation and cast to the specified class type.
com.sun.org.apache.xpath.internal.jaxp.XPathImplUtil#isSupportedClassType(Class)->void:::Check whether or not the specified type is supported
com.sun.org.apache.xpath.internal.jaxp.XPathImplUtil#isSupported(QName)->void:::Check if the requested returnType is supported.
com.sun.org.apache.xpath.internal.jaxp.XPathImplUtil#requireNonNull(T, String)->void:::Checks that the specified parameter is not null.
com.sun.org.apache.xpath.internal.jaxp.XPathNodesImpl#iterator()->Iterator::: path nodes impl iterator
com.sun.org.apache.xpath.internal.jaxp.XPathNodesImpl.NodeSetIterator#hasNext()->boolean::: node set iterator has next
com.sun.org.apache.xpath.internal.jaxp.XPathNodesImpl.NodeSetIterator#next()->E::: node set iterator next
com.sun.org.apache.xpath.internal.jaxp.XPathNodesImpl#size()->int::: path nodes impl size
com.sun.org.apache.xpath.internal.jaxp.XPathNodesImpl#get(int)->Node::: path nodes impl get
com.sun.org.apache.xpath.internal.jaxp.XPathResultImpl#type()->XPathResultType:::Return the result type as an enum specified by XPathResultType
com.sun.org.apache.xpath.internal.jaxp.XPathResultImpl#value()->T:::Returns the value of the result as the type &lt;T&gt; specified for the class.
com.sun.org.apache.xpath.internal.jaxp.XPathResultImpl#getValue(XObject, Class)->T:::Read the internal result object and return the value in accordance with the type specified.
com.sun.org.apache.xpath.internal.jaxp.XPathResultImpl#classToInternalType(Class)->int:::Map the specified class type to the internal result type
