sun.datatransfer.DataFlavorUtil#getDataFlavorComparator()->Comparator::: data flavor util get data flavor comparator
sun.datatransfer.DataFlavorUtil#getIndexOrderComparator(Map)->Comparator::: data flavor util get index order comparator
sun.datatransfer.DataFlavorUtil#getTextFlavorComparator()->Comparator::: data flavor util get text flavor comparator
sun.datatransfer.DataFlavorUtil#standardEncodings()->Set:::Returns a SortedSet of Strings which are a total order of the standard character sets supported by the JRE
sun.datatransfer.DataFlavorUtil#canonicalName(String)->String:::Converts an arbitrary text encoding to its canonical name.
sun.datatransfer.DataFlavorUtil#doesSubtypeSupportCharset(DataFlavor)->boolean:::Tests only whether the flavor's MIME type supports the charset parameter
sun.datatransfer.DataFlavorUtil#doesSubtypeSupportCharset(String, String)->boolean::: data flavor util does subtype support charset
sun.datatransfer.DataFlavorUtil#isFlavorCharsetTextType(DataFlavor)->boolean:::Returns whether this flavor is a text type which supports the 'charset' parameter.
sun.datatransfer.DataFlavorUtil#isFlavorNoncharsetTextType(DataFlavor)->boolean:::Returns whether this flavor is a text type which does not support the 'charset' parameter.
sun.datatransfer.DataFlavorUtil#getTextCharset(DataFlavor)->String:::If the specified flavor is a text flavor which supports the "charset" parameter, then this method returns that parameter, or the default charset if no such parameter was specified at construction
sun.datatransfer.DataFlavorUtil#compareIndices(Map, T, T, Integer)->int:::Helper method to compare two objects by their Integer indices in the given map
sun.datatransfer.DataFlavorUtil#getDesktopService()->DesktopDatatransferService::: data flavor util get desktop service
sun.datatransfer.DataFlavorUtil.RMI#remoteClass()->Class:::Returns java.rmi.Remote.class if RMI is present; otherwise null.
sun.datatransfer.DataFlavorUtil.RMI#isRemote(Class)->boolean:::Returns true if the given class is java.rmi.Remote.
sun.datatransfer.DataFlavorUtil.RMI#newMarshalledObject(Object)->Object:::Returns a new MarshalledObject containing the serialized representation of the given object.
sun.datatransfer.DataFlavorUtil.RMI#getMarshalledObject(Object)->Object:::Returns a new copy of the contained marshalled object.
sun.datatransfer.DesktopDatatransferService#invokeOnEventThread(Runnable)->void:::If desktop is present - invokes a Runnable on the event dispatch thread
sun.datatransfer.DesktopDatatransferService#getDefaultUnicodeEncoding()->String:::Get a platform-dependent default unicode encoding to use in datatransfer system.
sun.datatransfer.DesktopDatatransferService#getFlavorMap(Supplier)->FlavorMap:::Takes an appropriate FlavorMap from the desktop
sun.datatransfer.DesktopDatatransferService#isDesktopPresent()->boolean:::Checks if desktop is present.
sun.datatransfer.DesktopDatatransferService#getPlatformMappingsForNative(String)->LinkedHashSet:::Returns platform-specific mappings for the specified native format
sun.datatransfer.DesktopDatatransferService#getPlatformMappingsForFlavor(DataFlavor)->LinkedHashSet:::Returns platform-specific mappings for the specified flavor
sun.datatransfer.DesktopDatatransferService#registerTextFlavorProperties(String, String, String, String)->void:::This method is called for text flavor mappings established while parsing the default flavor mappings file
