JPEGHuffmanTable#getLengths():::Returns an array of shorts containing the number of values for each length in the Huffman table:::return->Arrays->copyOf
JPEGHuffmanTable#getValues():::Returns an array of shorts containing the values arranged by increasing length of their corresponding codes:::return->Arrays->copyOf
JPEGHuffmanTable#toString():::Returns a String representing this Huffman table.:::ls->System->getProperty->sb->new->StringBuilder->sb->append->append->for->i->sb->append->append->for->i->return->sb->toString
JPEGImageReadParam#areTablesSet():::Returns true if tables are currently set.:::return
JPEGImageReadParam#setDecodeTables(JPEGQTable[], JPEGHuffmanTable[], JPEGHuffmanTable[]):::Sets the quantization and Huffman tables to use in decoding abbreviated streams:::if->throw->new->IllegalArgumentException->qTables->clone->DCHuffmanTables->clone->ACHuffmanTables->clone
JPEGImageReadParam#unsetDecodeTables():::Removes any quantization and Huffman tables that are currently set.:::
JPEGImageReadParam#getQTables():::Returns a copy of the array of quantization tables set on the most recent call to setDecodeTables, or null if tables are not currently set.:::return->qTables->clone
JPEGImageReadParam#getDCHuffmanTables():::Returns a copy of the array of DC Huffman tables set on the most recent call to setDecodeTables, or null if tables are not currently set.:::return->DCHuffmanTables->clone
JPEGImageReadParam#getACHuffmanTables():::Returns a copy of the array of AC Huffman tables set on the most recent call to setDecodeTables, or null if tables are not currently set.:::return->ACHuffmanTables->clone
JPEGImageWriteParam#unsetCompression():::Removes any previous compression quality setting:::if->getCompressionMode->throw->new->IllegalStateException
JPEGImageWriteParam#isCompressionLossless():::Returns false since the JPEG plug-in only supports lossy compression.:::if->getCompressionMode->throw->new->IllegalStateException->return
JPEGImageWriteParam#areTablesSet():::Returns true if tables are currently set.:::return
JPEGImageWriteParam#setEncodeTables(JPEGQTable[], JPEGHuffmanTable[], JPEGHuffmanTable[]):::Sets the quantization and Huffman tables to use in encoding abbreviated streams:::if->throw->new->IllegalArgumentException->qTables->clone->DCHuffmanTables->clone->ACHuffmanTables->clone
JPEGImageWriteParam#unsetEncodeTables():::Removes any quantization and Huffman tables that are currently set.:::
JPEGImageWriteParam#getQTables():::Returns a copy of the array of quantization tables set on the most recent call to setEncodeTables, or null if tables are not currently set.:::return->qTables->clone
JPEGImageWriteParam#getDCHuffmanTables():::Returns a copy of the array of DC Huffman tables set on the most recent call to setEncodeTables, or null if tables are not currently set.:::return->DCHuffmanTables->clone
JPEGImageWriteParam#getACHuffmanTables():::Returns a copy of the array of AC Huffman tables set on the most recent call to setEncodeTables, or null if tables are not currently set.:::return->ACHuffmanTables->clone
JPEGImageWriteParam#setOptimizeHuffmanTables(boolean):::Tells the writer to generate optimized Huffman tables for the image as part of the writing process:::
JPEGImageWriteParam#getOptimizeHuffmanTables():::Returns the value passed into the most recent call to setOptimizeHuffmanTables, or false if setOptimizeHuffmanTables has never been called.:::return
JPEGQTable#getTable():::Returns a copy of the current quantization table as an array of ints in natural (not zig-zag) order.:::return->Arrays->copyOf
JPEGQTable#getScaledInstance(float, boolean):::Returns a new quantization table where the values are multiplied by scaleFactor and then clamped to the range 1..32767 (or to 1..255 if forceBaseline is true):::max->scaledTable->new->intArr->for->i->return->new->JPEGQTable
JPEGQTable#toString():::Returns a String representing this quantization table.:::ls->System->getProperty->sb->new->StringBuilder->for->i->return->sb->toString
