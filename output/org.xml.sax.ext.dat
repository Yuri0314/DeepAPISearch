org.xml.sax.ext.Attributes2#isDeclared(int)->boolean:::Returns false unless the attribute was declared in the DTD
org.xml.sax.ext.Attributes2#isDeclared(String)->boolean:::Returns false unless the attribute was declared in the DTD
org.xml.sax.ext.Attributes2#isDeclared(String, String)->boolean:::Returns false unless the attribute was declared in the DTD
org.xml.sax.ext.Attributes2#isSpecified(int)->boolean:::Returns true unless the attribute value was provided by DTD defaulting.
org.xml.sax.ext.Attributes2#isSpecified(String, String)->boolean:::Returns true unless the attribute value was provided by DTD defaulting
org.xml.sax.ext.Attributes2#isSpecified(String)->boolean:::Returns true unless the attribute value was provided by DTD defaulting.
org.xml.sax.ext.Attributes2Impl#isDeclared(int)->boolean::: attributes2 impl is declared
org.xml.sax.ext.Attributes2Impl#isDeclared(String, String)->boolean::: attributes2 impl is declared
org.xml.sax.ext.Attributes2Impl#isDeclared(String)->boolean::: attributes2 impl is declared
org.xml.sax.ext.Attributes2Impl#isSpecified(int)->boolean:::Returns the current value of an attribute's "specified" flag.
org.xml.sax.ext.Attributes2Impl#isSpecified(String, String)->boolean:::Returns the current value of an attribute's "specified" flag.
org.xml.sax.ext.Attributes2Impl#isSpecified(String)->boolean:::Returns the current value of an attribute's "specified" flag.
org.xml.sax.ext.Attributes2Impl#setAttributes(Attributes)->void:::Copy an entire Attributes object
org.xml.sax.ext.Attributes2Impl#addAttribute(String, String, String, String, String)->void:::Add an attribute to the end of the list, setting its "specified" flag to true
org.xml.sax.ext.Attributes2Impl#removeAttribute(int)->void::: attributes2 impl remove attribute
org.xml.sax.ext.Attributes2Impl#setDeclared(int, boolean)->void:::Assign a value to the "declared" flag of a specific attribute
org.xml.sax.ext.Attributes2Impl#setSpecified(int, boolean)->void:::Assign a value to the "specified" flag of a specific attribute
org.xml.sax.ext.DeclHandler#elementDecl(String, String)->void:::Report an element type declaration
org.xml.sax.ext.DeclHandler#attributeDecl(String, String, String, String, String)->void:::Report an attribute type declaration
org.xml.sax.ext.DeclHandler#internalEntityDecl(String, String)->void:::Report an internal entity declaration
org.xml.sax.ext.DeclHandler#externalEntityDecl(String, String, String)->void:::Report a parsed external entity declaration
org.xml.sax.ext.DefaultHandler2#startCDATA()->void::: default handler2 start a
org.xml.sax.ext.DefaultHandler2#endCDATA()->void::: default handler2 end a
org.xml.sax.ext.DefaultHandler2#startDTD(String, String, String)->void::: default handler2 start d
org.xml.sax.ext.DefaultHandler2#endDTD()->void::: default handler2 end d
org.xml.sax.ext.DefaultHandler2#startEntity(String)->void::: default handler2 start entity
org.xml.sax.ext.DefaultHandler2#endEntity(String)->void::: default handler2 end entity
org.xml.sax.ext.DefaultHandler2#comment(char[], int, int)->void::: default handler2 comment
org.xml.sax.ext.DefaultHandler2#attributeDecl(String, String, String, String, String)->void::: default handler2 attribute decl
org.xml.sax.ext.DefaultHandler2#elementDecl(String, String)->void::: default handler2 element decl
org.xml.sax.ext.DefaultHandler2#externalEntityDecl(String, String, String)->void::: default handler2 external entity decl
org.xml.sax.ext.DefaultHandler2#internalEntityDecl(String, String)->void::: default handler2 internal entity decl
org.xml.sax.ext.DefaultHandler2#getExternalSubset(String, String)->InputSource:::Tells the parser that if no external subset has been declared in the document text, none should be used.
org.xml.sax.ext.DefaultHandler2#resolveEntity(String, String, String, String)->InputSource:::Tells the parser to resolve the systemId against the baseURI and read the entity text from that resulting absolute URI
org.xml.sax.ext.DefaultHandler2#resolveEntity(String, String)->InputSource:::Invokes EntityResolver2#resolveEntity EntityResolver2.resolveEntity() with null entity name and base URI
org.xml.sax.ext.EntityResolver2#getExternalSubset(String, String)->InputSource:::Allows applications to provide an external subset for documents that don't explicitly define one
org.xml.sax.ext.EntityResolver2#resolveEntity(String, String, String, String)->InputSource:::Allows applications to map references to external entities into input sources, or tell the parser it should use conventional URI resolution
org.xml.sax.ext.LexicalHandler#startDTD(String, String, String)->void:::Report the start of DTD declarations, if any
org.xml.sax.ext.LexicalHandler#endDTD()->void:::Report the end of DTD declarations
org.xml.sax.ext.LexicalHandler#startEntity(String)->void:::Report the beginning of some internal and external XML entities
org.xml.sax.ext.LexicalHandler#endEntity(String)->void:::Report the end of an entity.
org.xml.sax.ext.LexicalHandler#startCDATA()->void:::Report the start of a CDATA section
org.xml.sax.ext.LexicalHandler#endCDATA()->void:::Report the end of a CDATA section.
org.xml.sax.ext.LexicalHandler#comment(char[], int, int)->void:::Report an XML comment anywhere in the document
org.xml.sax.ext.Locator2#getXMLVersion()->String:::Returns the version of XML used for the entity
org.xml.sax.ext.Locator2#getEncoding()->String:::Returns the name of the character encoding for the entity
org.xml.sax.ext.Locator2Impl#getXMLVersion()->String:::Returns the current value of the version property.
org.xml.sax.ext.Locator2Impl#getEncoding()->String:::Returns the current value of the encoding property.
org.xml.sax.ext.Locator2Impl#setXMLVersion(String)->void:::Assigns the current value of the version property.
org.xml.sax.ext.Locator2Impl#setEncoding(String)->void:::Assigns the current value of the encoding property.
