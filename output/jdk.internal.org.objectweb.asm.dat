jdk.internal.org.objectweb.asm.AnnotationVisitor#visit(String, Object)->void:::Visits a primitive value of the annotation.
jdk.internal.org.objectweb.asm.AnnotationVisitor#visitEnum(String, String, String)->void:::Visits an enumeration value of the annotation.
jdk.internal.org.objectweb.asm.AnnotationVisitor#visitAnnotation(String, String)->AnnotationVisitor:::Visits a nested annotation value of the annotation.
jdk.internal.org.objectweb.asm.AnnotationVisitor#visitArray(String)->AnnotationVisitor:::Visits an array value of the annotation
jdk.internal.org.objectweb.asm.AnnotationVisitor#visitEnd()->void:::Visits the end of the annotation.
jdk.internal.org.objectweb.asm.AnnotationWriter#visit(String, Object)->void::: annotation writer visit
jdk.internal.org.objectweb.asm.AnnotationWriter#visitEnum(String, String, String)->void::: annotation writer visit enum
jdk.internal.org.objectweb.asm.AnnotationWriter#visitAnnotation(String, String)->AnnotationVisitor::: annotation writer visit annotation
jdk.internal.org.objectweb.asm.AnnotationWriter#visitArray(String)->AnnotationVisitor::: annotation writer visit array
jdk.internal.org.objectweb.asm.AnnotationWriter#visitEnd()->void::: annotation writer visit end
jdk.internal.org.objectweb.asm.AnnotationWriter#getSize()->int:::Returns the size of this annotation writer list.
jdk.internal.org.objectweb.asm.AnnotationWriter#put(ByteVector)->void:::Puts the annotations of this annotation writer list into the given byte vector.
jdk.internal.org.objectweb.asm.AnnotationWriter#put(AnnotationWriter[], int, ByteVector)->void:::Puts the given annotation lists into the given byte vector.
jdk.internal.org.objectweb.asm.AnnotationWriter#putTarget(int, TypePath, ByteVector)->void:::Puts the given type reference and type path into the given bytevector
jdk.internal.org.objectweb.asm.Attribute#isUnknown()->boolean:::Returns <tt>true</tt> if this type of attribute is unknown
jdk.internal.org.objectweb.asm.Attribute#isCodeAttribute()->boolean:::Returns <tt>true</tt> if this type of attribute is a code attribute.
jdk.internal.org.objectweb.asm.Attribute#getLabels()->Label[]:::Returns the labels corresponding to this attribute.
jdk.internal.org.objectweb.asm.Attribute#read(ClassReader, int, int, char[], int, Label[])->Attribute:::Reads a #type type attribute
jdk.internal.org.objectweb.asm.Attribute#write(ClassWriter, byte[], int, int, int)->ByteVector:::Returns the byte array form of this attribute.
jdk.internal.org.objectweb.asm.Attribute#getCount()->int:::Returns the length of the attribute list that begins with this attribute.
jdk.internal.org.objectweb.asm.Attribute#getSize(ClassWriter, byte[], int, int, int)->int:::Returns the size of all the attributes in this attribute list.
jdk.internal.org.objectweb.asm.Attribute#put(ClassWriter, byte[], int, int, int, ByteVector)->void:::Writes all the attributes of this attribute list in the given byte vector.
jdk.internal.org.objectweb.asm.Attribute.NestMembers#read(ClassReader, int, int, char[], int, Label[])->Attribute::: nest members read
jdk.internal.org.objectweb.asm.Attribute.NestMembers#write(ClassWriter, byte[], int, int, int)->ByteVector::: nest members write
jdk.internal.org.objectweb.asm.Attribute.NestHost#read(ClassReader, int, int, char[], int, Label[])->Attribute::: nest host read
jdk.internal.org.objectweb.asm.Attribute.NestHost#write(ClassWriter, byte[], int, int, int)->ByteVector::: nest host write
jdk.internal.org.objectweb.asm.ByteVector#putByte(int)->ByteVector:::Puts a byte into this byte vector
jdk.internal.org.objectweb.asm.ByteVector#put11(int, int)->ByteVector:::Puts two bytes into this byte vector
jdk.internal.org.objectweb.asm.ByteVector#putShort(int)->ByteVector:::Puts a short into this byte vector
jdk.internal.org.objectweb.asm.ByteVector#put12(int, int)->ByteVector:::Puts a byte and a short into this byte vector
jdk.internal.org.objectweb.asm.ByteVector#putInt(int)->ByteVector:::Puts an int into this byte vector
jdk.internal.org.objectweb.asm.ByteVector#putLong(long)->ByteVector:::Puts a long into this byte vector
jdk.internal.org.objectweb.asm.ByteVector#putUTF8(String)->ByteVector:::Puts an UTF8 string into this byte vector
jdk.internal.org.objectweb.asm.ByteVector#encodeUTF8(String, int, int)->ByteVector:::Puts an UTF8 string into this byte vector
jdk.internal.org.objectweb.asm.ByteVector#putByteArray(byte[], int, int)->ByteVector:::Puts an array of bytes into this byte vector
jdk.internal.org.objectweb.asm.ClassReader#getAccess()->int:::Returns the class's access flags (see Opcodes)
jdk.internal.org.objectweb.asm.ClassReader#getClassName()->String:::Returns the internal name of the class (see Type#getInternalName() getInternalName).
jdk.internal.org.objectweb.asm.ClassReader#getSuperName()->String:::Returns the internal of name of the super class (see Type#getInternalName() getInternalName)
jdk.internal.org.objectweb.asm.ClassReader#getInterfaces()->String[]:::Returns the internal names of the class's interfaces (see Type#getInternalName() getInternalName).
jdk.internal.org.objectweb.asm.ClassReader#copyPool(ClassWriter)->void:::Copies the constant pool data into the given ClassWriter
jdk.internal.org.objectweb.asm.ClassReader#accept(ClassVisitor, int)->void:::Makes the given visitor visit the Java class of this ClassReader 
jdk.internal.org.objectweb.asm.ClassReader#accept(ClassVisitor, Attribute[], int)->void:::Makes the given visitor visit the Java class of this ClassReader
jdk.internal.org.objectweb.asm.ClassReader#readLabel(int, Label[])->Label:::Returns the label corresponding to the given offset
jdk.internal.org.objectweb.asm.ClassReader#getItemCount()->int:::Returns the number of constant pool items in #b b.
jdk.internal.org.objectweb.asm.ClassReader#getItem(int)->int:::Returns the start index of the constant pool item in #b b, plus one
jdk.internal.org.objectweb.asm.ClassReader#getMaxStringLength()->int:::Returns the maximum length of the strings contained in the constant pool of the class.
jdk.internal.org.objectweb.asm.ClassReader#readByte(int)->int:::Reads a byte value in #b b
jdk.internal.org.objectweb.asm.ClassReader#readUnsignedShort(int)->int:::Reads an unsigned short value in #b b
jdk.internal.org.objectweb.asm.ClassReader#readShort(int)->short:::Reads a signed short value in #b b
jdk.internal.org.objectweb.asm.ClassReader#readInt(int)->int:::Reads a signed int value in #b b
jdk.internal.org.objectweb.asm.ClassReader#readLong(int)->long:::Reads a signed long value in #b b
jdk.internal.org.objectweb.asm.ClassReader#readUTF8(int, char[])->String:::Reads an UTF8 string constant pool item in #b b
jdk.internal.org.objectweb.asm.ClassReader#readClass(int, char[])->String:::Reads a class constant pool item in #b b
jdk.internal.org.objectweb.asm.ClassReader#readModule(int, char[])->String:::Reads a module constant pool item in #b b
jdk.internal.org.objectweb.asm.ClassReader#readPackage(int, char[])->String:::Reads a module constant pool item in #b b
jdk.internal.org.objectweb.asm.ClassReader#readConst(int, char[])->Object:::Reads a numeric or string constant pool item in #b b
jdk.internal.org.objectweb.asm.ClassVisitor#visit(int, int, String, String, String, String[])->void:::Visits the header of the class.
jdk.internal.org.objectweb.asm.ClassVisitor#visitSource(String, String)->void:::Visits the source of the class.
jdk.internal.org.objectweb.asm.ClassVisitor#visitModule(String, int, String)->ModuleVisitor:::Visit the module corresponding to the class.
jdk.internal.org.objectweb.asm.ClassVisitor#visitOuterClass(String, String, String)->void:::Visits the enclosing class of the class
jdk.internal.org.objectweb.asm.ClassVisitor#visitAnnotation(String, boolean)->AnnotationVisitor:::Visits an annotation of the class.
jdk.internal.org.objectweb.asm.ClassVisitor#visitTypeAnnotation(int, TypePath, String, boolean)->AnnotationVisitor:::Visits an annotation on a type in the class signature.
jdk.internal.org.objectweb.asm.ClassVisitor#visitAttribute(Attribute)->void:::Visits a non standard attribute of the class.
jdk.internal.org.objectweb.asm.ClassVisitor#visitInnerClass(String, String, String, int)->void:::Visits information about an inner class
jdk.internal.org.objectweb.asm.ClassVisitor#visitField(int, String, String, String, Object)->FieldVisitor:::Visits a field of the class.
jdk.internal.org.objectweb.asm.ClassVisitor#visitMethod(int, String, String, String, String[])->MethodVisitor:::Visits a method of the class
jdk.internal.org.objectweb.asm.ClassVisitor#visitEnd()->void:::Visits the end of the class
jdk.internal.org.objectweb.asm.ClassWriter#visit(int, int, String, String, String, String[])->void::: class writer visit
jdk.internal.org.objectweb.asm.ClassWriter#visitSource(String, String)->void::: class writer visit source
jdk.internal.org.objectweb.asm.ClassWriter#visitModule(String, int, String)->ModuleVisitor::: class writer visit module
jdk.internal.org.objectweb.asm.ClassWriter#visitOuterClass(String, String, String)->void::: class writer visit outer class
jdk.internal.org.objectweb.asm.ClassWriter#visitAnnotation(String, boolean)->AnnotationVisitor::: class writer visit annotation
jdk.internal.org.objectweb.asm.ClassWriter#visitTypeAnnotation(int, TypePath, String, boolean)->AnnotationVisitor::: class writer visit type annotation
jdk.internal.org.objectweb.asm.ClassWriter#visitAttribute(Attribute)->void::: class writer visit attribute
jdk.internal.org.objectweb.asm.ClassWriter#visitInnerClass(String, String, String, int)->void::: class writer visit inner class
jdk.internal.org.objectweb.asm.ClassWriter#visitField(int, String, String, String, Object)->FieldVisitor::: class writer visit field
jdk.internal.org.objectweb.asm.ClassWriter#visitMethod(int, String, String, String, String[])->MethodVisitor::: class writer visit method
jdk.internal.org.objectweb.asm.ClassWriter#visitEnd()->void::: class writer visit end
jdk.internal.org.objectweb.asm.ClassWriter#toByteArray()->byte[]:::Returns the bytecode of the class that was build with this class writer.
jdk.internal.org.objectweb.asm.ClassWriter#newConstItem(Object)->Item:::Adds a number or string constant to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newConst(Object)->int:::Adds a number or string constant to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newUTF8(String)->int:::Adds an UTF8 string to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newStringishItem(int, String)->Item:::Adds a string reference, a class reference, a method type, a module or a package to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newClass(String)->int:::Adds a class reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newMethodType(String)->int:::Adds a method type reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newModule(String)->int:::Adds a module reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newPackage(String)->int:::Adds a package reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newHandleItem(int, String, String, String, boolean)->Item:::Adds a handle to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newHandle(int, String, String, String)->int:::Adds a handle to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newHandle(int, String, String, String, boolean)->int:::Adds a handle to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newInvokeDynamicItem(String, String, Handle, Object...)->Item:::Adds an invokedynamic reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newInvokeDynamic(String, String, Handle, Object...)->int:::Adds an invokedynamic reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newFieldItem(String, String, String)->Item:::Adds a field reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newField(String, String, String)->int:::Adds a field reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newMethodItem(String, String, String, boolean)->Item:::Adds a method reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newMethod(String, String, String, boolean)->int:::Adds a method reference to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newInteger(int)->Item:::Adds an integer to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newFloat(float)->Item:::Adds a float to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newLong(long)->Item:::Adds a long to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newDouble(double)->Item:::Adds a double to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newNameType(String, String)->int:::Adds a name and type to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#newNameTypeItem(String, String)->Item:::Adds a name and type to the constant pool of the class being build
jdk.internal.org.objectweb.asm.ClassWriter#addType(String)->int:::Adds the given internal name to #typeTable and returns its index
jdk.internal.org.objectweb.asm.ClassWriter#addUninitializedType(String, int)->int:::Adds the given "uninitialized" type to #typeTable and returns its index
jdk.internal.org.objectweb.asm.ClassWriter#getMergedType(int, int)->int:::Returns the index of the common super type of the two given types
jdk.internal.org.objectweb.asm.ClassWriter#getCommonSuperClass(String, String)->String:::Returns the common super type of the two given types
jdk.internal.org.objectweb.asm.CurrentFrame#execute(int, int, ClassWriter, Item)->void:::Sets this CurrentFrame to the input stack map frame of the next "current" instruction, i.e
jdk.internal.org.objectweb.asm.FieldVisitor#visitAnnotation(String, boolean)->AnnotationVisitor:::Visits an annotation of the field.
jdk.internal.org.objectweb.asm.FieldVisitor#visitTypeAnnotation(int, TypePath, String, boolean)->AnnotationVisitor:::Visits an annotation on the type of the field.
jdk.internal.org.objectweb.asm.FieldVisitor#visitAttribute(Attribute)->void:::Visits a non standard attribute of the field.
jdk.internal.org.objectweb.asm.FieldVisitor#visitEnd()->void:::Visits the end of the field
jdk.internal.org.objectweb.asm.FieldWriter#visitAnnotation(String, boolean)->AnnotationVisitor::: field writer visit annotation
jdk.internal.org.objectweb.asm.FieldWriter#visitTypeAnnotation(int, TypePath, String, boolean)->AnnotationVisitor::: field writer visit type annotation
jdk.internal.org.objectweb.asm.FieldWriter#visitAttribute(Attribute)->void::: field writer visit attribute
jdk.internal.org.objectweb.asm.FieldWriter#visitEnd()->void::: field writer visit end
jdk.internal.org.objectweb.asm.FieldWriter#getSize()->int:::Returns the size of this field.
jdk.internal.org.objectweb.asm.FieldWriter#put(ByteVector)->void:::Puts the content of this field into the given byte vector.
jdk.internal.org.objectweb.asm.Frame#set(ClassWriter, int, Object[], int, Object[])->void:::Sets this frame to the given value.
jdk.internal.org.objectweb.asm.Frame#set(Frame)->void:::Sets this frame to the value of the given frame
jdk.internal.org.objectweb.asm.Frame#type(ClassWriter, String)->int:::Returns the int encoding of the given type.
jdk.internal.org.objectweb.asm.Frame#initInputFrame(ClassWriter, int, Type[], int)->void:::Initializes the input frame of the first basic block from the method descriptor.
jdk.internal.org.objectweb.asm.Frame#execute(int, int, ClassWriter, Item)->void:::Simulates the action of the given instruction on the output stack frame.
jdk.internal.org.objectweb.asm.Frame#merge(ClassWriter, Frame, int)->boolean:::Merges the input frame of the given basic block with the input and output frames of this basic block
jdk.internal.org.objectweb.asm.Handle#getTag()->int:::Returns the kind of field or method designated by this handle.
jdk.internal.org.objectweb.asm.Handle#getOwner()->String:::Returns the internal name of the class that owns the field or method designated by this handle.
jdk.internal.org.objectweb.asm.Handle#getName()->String:::Returns the name of the field or method designated by this handle.
jdk.internal.org.objectweb.asm.Handle#getDesc()->String:::Returns the descriptor of the field or method designated by this handle.
jdk.internal.org.objectweb.asm.Handle#isInterface()->boolean:::Returns true if the owner of the field or method designated by this handle is an interface.
jdk.internal.org.objectweb.asm.Handle#equals(Object)->boolean::: handle equals
jdk.internal.org.objectweb.asm.Handle#hashCode()->int::: handle hash code
jdk.internal.org.objectweb.asm.Handle#toString()->String:::Returns the textual representation of this handle
jdk.internal.org.objectweb.asm.Handler#remove(Handler, Label, Label)->Handler:::Removes the range between start and end from the given exception handlers.
jdk.internal.org.objectweb.asm.Item#set(int)->void:::Sets this item to an integer item.
jdk.internal.org.objectweb.asm.Item#set(long)->void:::Sets this item to a long item.
jdk.internal.org.objectweb.asm.Item#set(float)->void:::Sets this item to a float item.
jdk.internal.org.objectweb.asm.Item#set(double)->void:::Sets this item to a double item.
jdk.internal.org.objectweb.asm.Item#set(int, String, String, String)->void:::Sets this item to an item that do not hold a primitive value.
jdk.internal.org.objectweb.asm.Item#set(String, String, int)->void:::Sets the item to an InvokeDynamic item.
jdk.internal.org.objectweb.asm.Item#set(int, int)->void:::Sets the item to a BootstrapMethod item.
jdk.internal.org.objectweb.asm.Item#isEqualTo(Item)->boolean:::Indicates if the given item is equal to this one
jdk.internal.org.objectweb.asm.Label#getOffset()->int:::Returns the offset corresponding to this label
jdk.internal.org.objectweb.asm.Label#put(MethodWriter, ByteVector, int, boolean)->void:::Puts a reference to this label in the bytecode of a method
jdk.internal.org.objectweb.asm.Label#resolve(MethodWriter, int, byte[])->boolean:::Resolves all forward references to this label
jdk.internal.org.objectweb.asm.Label#getFirst()->Label:::Returns the first label of the series to which this label belongs
jdk.internal.org.objectweb.asm.Label#inSubroutine(long)->boolean:::Returns true is this basic block belongs to the given subroutine.
jdk.internal.org.objectweb.asm.Label#inSameSubroutine(Label)->boolean:::Returns true if this basic block and the given one belong to a common subroutine.
jdk.internal.org.objectweb.asm.Label#addToSubroutine(long, int)->void:::Marks this basic block as belonging to the given subroutine.
jdk.internal.org.objectweb.asm.Label#visitSubroutine(Label, long, int)->void:::Finds the basic blocks that belong to a given subroutine, and marks these blocks as belonging to this subroutine
jdk.internal.org.objectweb.asm.Label#toString()->String:::Returns a string representation of this label.
jdk.internal.org.objectweb.asm.MethodVisitor#visitParameter(String, int)->void:::Visits a parameter of this method.
jdk.internal.org.objectweb.asm.MethodVisitor#visitAnnotationDefault()->AnnotationVisitor:::Visits the default value of this annotation interface method.
jdk.internal.org.objectweb.asm.MethodVisitor#visitAnnotation(String, boolean)->AnnotationVisitor:::Visits an annotation of this method.
jdk.internal.org.objectweb.asm.MethodVisitor#visitTypeAnnotation(int, TypePath, String, boolean)->AnnotationVisitor:::Visits an annotation on a type in the method signature.
jdk.internal.org.objectweb.asm.MethodVisitor#visitParameterAnnotation(int, String, boolean)->AnnotationVisitor:::Visits an annotation of a parameter this method.
jdk.internal.org.objectweb.asm.MethodVisitor#visitAttribute(Attribute)->void:::Visits a non standard attribute of this method.
jdk.internal.org.objectweb.asm.MethodVisitor#visitCode()->void:::Starts the visit of the method's code, if any (i.e
jdk.internal.org.objectweb.asm.MethodVisitor#visitFrame(int, int, Object[], int, Object[])->void:::Visits the current state of the local variables and operand stack elements
jdk.internal.org.objectweb.asm.MethodVisitor#visitInsn(int)->void:::Visits a zero operand instruction.
jdk.internal.org.objectweb.asm.MethodVisitor#visitIntInsn(int, int)->void:::Visits an instruction with a single int operand.
jdk.internal.org.objectweb.asm.MethodVisitor#visitVarInsn(int, int)->void:::Visits a local variable instruction
jdk.internal.org.objectweb.asm.MethodVisitor#visitTypeInsn(int, String)->void:::Visits a type instruction
jdk.internal.org.objectweb.asm.MethodVisitor#visitFieldInsn(int, String, String, String)->void:::Visits a field instruction
jdk.internal.org.objectweb.asm.MethodVisitor#visitMethodInsn(int, String, String, String)->void:::Visits a method instruction
jdk.internal.org.objectweb.asm.MethodVisitor#visitMethodInsn(int, String, String, String, boolean)->void:::Visits a method instruction
jdk.internal.org.objectweb.asm.MethodVisitor#visitInvokeDynamicInsn(String, String, Handle, Object...)->void:::Visits an invokedynamic instruction.
jdk.internal.org.objectweb.asm.MethodVisitor#visitJumpInsn(int, Label)->void:::Visits a jump instruction
jdk.internal.org.objectweb.asm.MethodVisitor#visitLabel(Label)->void:::Visits a label
jdk.internal.org.objectweb.asm.MethodVisitor#visitLdcInsn(Object)->void:::Visits a LDC instruction
jdk.internal.org.objectweb.asm.MethodVisitor#visitIincInsn(int, int)->void:::Visits an IINC instruction.
jdk.internal.org.objectweb.asm.MethodVisitor#visitTableSwitchInsn(int, int, Label, Label...)->void:::Visits a TABLESWITCH instruction.
jdk.internal.org.objectweb.asm.MethodVisitor#visitLookupSwitchInsn(Label, int[], Label[])->void:::Visits a LOOKUPSWITCH instruction.
jdk.internal.org.objectweb.asm.MethodVisitor#visitMultiANewArrayInsn(String, int)->void:::Visits a MULTIANEWARRAY instruction.
jdk.internal.org.objectweb.asm.MethodVisitor#visitInsnAnnotation(int, TypePath, String, boolean)->AnnotationVisitor:::Visits an annotation on an instruction
jdk.internal.org.objectweb.asm.MethodVisitor#visitTryCatchBlock(Label, Label, Label, String)->void:::Visits a try catch block.
jdk.internal.org.objectweb.asm.MethodVisitor#visitTryCatchAnnotation(int, TypePath, String, boolean)->AnnotationVisitor:::Visits an annotation on an exception handler type
jdk.internal.org.objectweb.asm.MethodVisitor#visitLocalVariable(String, String, String, Label, Label, int)->void:::Visits a local variable declaration.
jdk.internal.org.objectweb.asm.MethodVisitor#visitLocalVariableAnnotation(int, TypePath, Label[], Label[], int[], String, boolean)->AnnotationVisitor:::Visits an annotation on a local variable type.
jdk.internal.org.objectweb.asm.MethodVisitor#visitLineNumber(int, Label)->void:::Visits a line number declaration.
jdk.internal.org.objectweb.asm.MethodVisitor#visitMaxs(int, int)->void:::Visits the maximum stack size and the maximum number of local variables of the method.
jdk.internal.org.objectweb.asm.MethodVisitor#visitEnd()->void:::Visits the end of the method
jdk.internal.org.objectweb.asm.MethodWriter#visitParameter(String, int)->void::: method writer visit parameter
jdk.internal.org.objectweb.asm.MethodWriter#visitAnnotationDefault()->AnnotationVisitor::: method writer visit annotation default
jdk.internal.org.objectweb.asm.MethodWriter#visitAnnotation(String, boolean)->AnnotationVisitor::: method writer visit annotation
jdk.internal.org.objectweb.asm.MethodWriter#visitTypeAnnotation(int, TypePath, String, boolean)->AnnotationVisitor::: method writer visit type annotation
jdk.internal.org.objectweb.asm.MethodWriter#visitParameterAnnotation(int, String, boolean)->AnnotationVisitor::: method writer visit parameter annotation
jdk.internal.org.objectweb.asm.MethodWriter#visitAttribute(Attribute)->void::: method writer visit attribute
jdk.internal.org.objectweb.asm.MethodWriter#visitCode()->void::: method writer visit code
jdk.internal.org.objectweb.asm.MethodWriter#visitFrame(int, int, Object[], int, Object[])->void::: method writer visit frame
jdk.internal.org.objectweb.asm.MethodWriter#visitInsn(int)->void::: method writer visit insn
jdk.internal.org.objectweb.asm.MethodWriter#visitIntInsn(int, int)->void::: method writer visit int insn
jdk.internal.org.objectweb.asm.MethodWriter#visitVarInsn(int, int)->void::: method writer visit var insn
jdk.internal.org.objectweb.asm.MethodWriter#visitTypeInsn(int, String)->void::: method writer visit type insn
jdk.internal.org.objectweb.asm.MethodWriter#visitFieldInsn(int, String, String, String)->void::: method writer visit field insn
jdk.internal.org.objectweb.asm.MethodWriter#visitMethodInsn(int, String, String, String, boolean)->void::: method writer visit method insn
jdk.internal.org.objectweb.asm.MethodWriter#visitInvokeDynamicInsn(String, String, Handle, Object...)->void::: method writer visit invoke dynamic insn
jdk.internal.org.objectweb.asm.MethodWriter#visitJumpInsn(int, Label)->void::: method writer visit jump insn
jdk.internal.org.objectweb.asm.MethodWriter#visitLabel(Label)->void::: method writer visit label
jdk.internal.org.objectweb.asm.MethodWriter#visitLdcInsn(Object)->void::: method writer visit ldc insn
jdk.internal.org.objectweb.asm.MethodWriter#visitIincInsn(int, int)->void::: method writer visit iinc insn
jdk.internal.org.objectweb.asm.MethodWriter#visitTableSwitchInsn(int, int, Label, Label...)->void::: method writer visit table switch insn
jdk.internal.org.objectweb.asm.MethodWriter#visitLookupSwitchInsn(Label, int[], Label[])->void::: method writer visit lookup switch insn
jdk.internal.org.objectweb.asm.MethodWriter#visitMultiANewArrayInsn(String, int)->void::: method writer visit multi new array insn
jdk.internal.org.objectweb.asm.MethodWriter#visitInsnAnnotation(int, TypePath, String, boolean)->AnnotationVisitor::: method writer visit insn annotation
jdk.internal.org.objectweb.asm.MethodWriter#visitTryCatchBlock(Label, Label, Label, String)->void::: method writer visit try catch block
jdk.internal.org.objectweb.asm.MethodWriter#visitTryCatchAnnotation(int, TypePath, String, boolean)->AnnotationVisitor::: method writer visit try catch annotation
jdk.internal.org.objectweb.asm.MethodWriter#visitLocalVariable(String, String, String, Label, Label, int)->void::: method writer visit local variable
jdk.internal.org.objectweb.asm.MethodWriter#visitLocalVariableAnnotation(int, TypePath, Label[], Label[], int[], String, boolean)->AnnotationVisitor::: method writer visit local variable annotation
jdk.internal.org.objectweb.asm.MethodWriter#visitLineNumber(int, Label)->void::: method writer visit line number
jdk.internal.org.objectweb.asm.MethodWriter#visitMaxs(int, int)->void::: method writer visit maxs
jdk.internal.org.objectweb.asm.MethodWriter#visitEnd()->void::: method writer visit end
jdk.internal.org.objectweb.asm.MethodWriter#getSize()->int:::Returns the size of the bytecode of this method.
jdk.internal.org.objectweb.asm.MethodWriter#put(ByteVector)->void:::Puts the bytecode of this method in the given byte vector.
jdk.internal.org.objectweb.asm.ModuleVisitor#visitMainClass(String)->void:::Visit the main class of the current module.
jdk.internal.org.objectweb.asm.ModuleVisitor#visitPackage(String)->void:::Visit a package of the current module.
jdk.internal.org.objectweb.asm.ModuleVisitor#visitRequire(String, int, String)->void:::Visits a dependence of the current module.
jdk.internal.org.objectweb.asm.ModuleVisitor#visitExport(String, int, String...)->void:::Visit an exported package of the current module.
jdk.internal.org.objectweb.asm.ModuleVisitor#visitOpen(String, int, String...)->void:::Visit an open package of the current module.
jdk.internal.org.objectweb.asm.ModuleVisitor#visitUse(String)->void:::Visit a service used by the current module
jdk.internal.org.objectweb.asm.ModuleVisitor#visitProvide(String, String...)->void:::Visit an implementation of a service.
jdk.internal.org.objectweb.asm.ModuleVisitor#visitEnd()->void:::Visits the end of the module
jdk.internal.org.objectweb.asm.ModuleWriter#visitMainClass(String)->void::: module writer visit main class
jdk.internal.org.objectweb.asm.ModuleWriter#visitPackage(String)->void::: module writer visit package
jdk.internal.org.objectweb.asm.ModuleWriter#visitRequire(String, int, String)->void::: module writer visit require
jdk.internal.org.objectweb.asm.ModuleWriter#visitExport(String, int, String...)->void::: module writer visit export
jdk.internal.org.objectweb.asm.ModuleWriter#visitOpen(String, int, String...)->void::: module writer visit open
jdk.internal.org.objectweb.asm.ModuleWriter#visitUse(String)->void::: module writer visit use
jdk.internal.org.objectweb.asm.ModuleWriter#visitProvide(String, String...)->void::: module writer visit provide
jdk.internal.org.objectweb.asm.ModuleWriter#visitEnd()->void::: module writer visit end
jdk.internal.org.objectweb.asm.ModuleWriter#putAttributes(ByteVector)->void::: module writer put attributes
jdk.internal.org.objectweb.asm.ModuleWriter#put(ByteVector)->void::: module writer put
jdk.internal.org.objectweb.asm.Type#getType(String)->Type:::Returns the Java type corresponding to the given type descriptor.
jdk.internal.org.objectweb.asm.Type#getObjectType(String)->Type:::Returns the Java type corresponding to the given internal name.
jdk.internal.org.objectweb.asm.Type#getMethodType(String)->Type:::Returns the Java type corresponding to the given method descriptor
jdk.internal.org.objectweb.asm.Type#getMethodType(Type, Type...)->Type:::Returns the Java method type corresponding to the given argument and return types.
jdk.internal.org.objectweb.asm.Type#getType(Class)->Type:::Returns the Java type corresponding to the given class.
jdk.internal.org.objectweb.asm.Type#getType(Constructor)->Type:::Returns the Java method type corresponding to the given constructor.
jdk.internal.org.objectweb.asm.Type#getType(Method)->Type:::Returns the Java method type corresponding to the given method.
jdk.internal.org.objectweb.asm.Type#getArgumentTypes(String)->Type[]:::Returns the Java types corresponding to the argument types of the given method descriptor.
jdk.internal.org.objectweb.asm.Type#getArgumentTypes(Method)->Type[]:::Returns the Java types corresponding to the argument types of the given method.
jdk.internal.org.objectweb.asm.Type#getReturnType(String)->Type:::Returns the Java type corresponding to the return type of the given method descriptor.
jdk.internal.org.objectweb.asm.Type#getReturnType(Method)->Type:::Returns the Java type corresponding to the return type of the given method.
jdk.internal.org.objectweb.asm.Type#getArgumentsAndReturnSizes(String)->int:::Computes the size of the arguments and of the return value of a method.
jdk.internal.org.objectweb.asm.Type#getSort()->int:::Returns the sort of this Java type.
jdk.internal.org.objectweb.asm.Type#getDimensions()->int:::Returns the number of dimensions of this array type
jdk.internal.org.objectweb.asm.Type#getElementType()->Type:::Returns the type of the elements of this array type
jdk.internal.org.objectweb.asm.Type#getClassName()->String:::Returns the binary name of the class corresponding to this type
jdk.internal.org.objectweb.asm.Type#getInternalName()->String:::Returns the internal name of the class corresponding to this object or array type
jdk.internal.org.objectweb.asm.Type#getArgumentTypes()->Type[]:::Returns the argument types of methods of this type
jdk.internal.org.objectweb.asm.Type#getReturnType()->Type:::Returns the return type of methods of this type
jdk.internal.org.objectweb.asm.Type#getArgumentsAndReturnSizes()->int:::Returns the size of the arguments and of the return value of methods of this type
jdk.internal.org.objectweb.asm.Type#getDescriptor()->String:::Returns the descriptor corresponding to this Java type.
jdk.internal.org.objectweb.asm.Type#getMethodDescriptor(Type, Type...)->String:::Returns the descriptor corresponding to the given argument and return types.
jdk.internal.org.objectweb.asm.Type#getInternalName(Class)->String:::Returns the internal name of the given class
jdk.internal.org.objectweb.asm.Type#getDescriptor(Class)->String:::Returns the descriptor corresponding to the given Java type.
jdk.internal.org.objectweb.asm.Type#getConstructorDescriptor(Constructor)->String:::Returns the descriptor corresponding to the given constructor.
jdk.internal.org.objectweb.asm.Type#getMethodDescriptor(Method)->String:::Returns the descriptor corresponding to the given method.
jdk.internal.org.objectweb.asm.Type#getSize()->int:::Returns the size of values of this type
jdk.internal.org.objectweb.asm.Type#getOpcode(int)->int:::Returns a JVM instruction opcode adapted to this Java type
jdk.internal.org.objectweb.asm.Type#equals(Object)->boolean:::Tests if the given object is equal to this type.
jdk.internal.org.objectweb.asm.Type#hashCode()->int:::Returns a hash code value for this type.
jdk.internal.org.objectweb.asm.Type#toString()->String:::Returns a string representation of this type.
jdk.internal.org.objectweb.asm.TypePath#getLength()->int:::Returns the length of this path.
jdk.internal.org.objectweb.asm.TypePath#getStep(int)->int:::Returns the value of the given step of this path.
jdk.internal.org.objectweb.asm.TypePath#getStepArgument(int)->int:::Returns the index of the type argument that the given step is stepping into
jdk.internal.org.objectweb.asm.TypePath#fromString(String)->TypePath:::Converts a type path in string form, in the format used by #toString(), into a TypePath object.
jdk.internal.org.objectweb.asm.TypePath#toString()->String:::Returns a string representation of this type path
jdk.internal.org.objectweb.asm.TypeReference#newTypeReference(int)->TypeReference:::Returns a type reference of the given sort.
jdk.internal.org.objectweb.asm.TypeReference#newTypeParameterReference(int, int)->TypeReference:::Returns a reference to a type parameter of a generic class or method.
jdk.internal.org.objectweb.asm.TypeReference#newTypeParameterBoundReference(int, int, int)->TypeReference:::Returns a reference to a type parameter bound of a generic class or method.
jdk.internal.org.objectweb.asm.TypeReference#newSuperTypeReference(int)->TypeReference:::Returns a reference to the super class or to an interface of the 'implements' clause of a class.
jdk.internal.org.objectweb.asm.TypeReference#newFormalParameterReference(int)->TypeReference:::Returns a reference to the type of a formal parameter of a method.
jdk.internal.org.objectweb.asm.TypeReference#newExceptionReference(int)->TypeReference:::Returns a reference to the type of an exception, in a 'throws' clause of a method.
jdk.internal.org.objectweb.asm.TypeReference#newTryCatchReference(int)->TypeReference:::Returns a reference to the type of the exception declared in a 'catch' clause of a method.
jdk.internal.org.objectweb.asm.TypeReference#newTypeArgumentReference(int, int)->TypeReference:::Returns a reference to the type of a type argument in a constructor or method call or reference.
jdk.internal.org.objectweb.asm.TypeReference#getSort()->int:::Returns the sort of this type reference.
jdk.internal.org.objectweb.asm.TypeReference#getTypeParameterIndex()->int:::Returns the index of the type parameter referenced by this type reference
jdk.internal.org.objectweb.asm.TypeReference#getTypeParameterBoundIndex()->int:::Returns the index of the type parameter bound, within the type parameter #getTypeParameterIndex, referenced by this type reference
jdk.internal.org.objectweb.asm.TypeReference#getSuperTypeIndex()->int:::Returns the index of the "super type" of a class that is referenced by this type reference
jdk.internal.org.objectweb.asm.TypeReference#getFormalParameterIndex()->int:::Returns the index of the formal parameter whose type is referenced by this type reference
jdk.internal.org.objectweb.asm.TypeReference#getExceptionIndex()->int:::Returns the index of the exception, in a 'throws' clause of a method, whose type is referenced by this type reference
jdk.internal.org.objectweb.asm.TypeReference#getTryCatchBlockIndex()->int:::Returns the index of the try catch block (using the order in which they are visited with visitTryCatchBlock), whose 'catch' type is referenced by this type reference
jdk.internal.org.objectweb.asm.TypeReference#getTypeArgumentIndex()->int:::Returns the index of the type argument referenced by this type reference
jdk.internal.org.objectweb.asm.TypeReference#getValue()->int:::Returns the int encoded value of this type reference, suitable for use in visit methods related to type annotations, like visitTypeAnnotation.
