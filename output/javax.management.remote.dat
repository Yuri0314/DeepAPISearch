javax.management.remote.JMXAddressable#getAddress()->JMXServiceURL:::The address of this object.
javax.management.remote.JMXAuthenticator#authenticate(Object)->Subject:::Authenticates the MBeanServerConnection client with the given client credentials.
javax.management.remote.JMXConnectionNotification#getConnectionId()->String:::The connection ID to which this notification pertains.
javax.management.remote.JMXConnector#connect()->void:::Establishes the connection to the connector server
javax.management.remote.JMXConnector#connect(Map)->void:::Establishes the connection to the connector server.  If connect has already been called successfully on this object, calling it again has no effect
javax.management.remote.JMXConnector#getMBeanServerConnection()->MBeanServerConnection:::Returns an MBeanServerConnection object representing a remote MBean server
javax.management.remote.JMXConnector#getMBeanServerConnection(Subject)->MBeanServerConnection:::Returns an MBeanServerConnection object representing a remote MBean server on which operations are performed on behalf of the supplied delegation subject
javax.management.remote.JMXConnector#close()->void:::Closes the client connection to its server
javax.management.remote.JMXConnector#addConnectionNotificationListener(NotificationListener, NotificationFilter, Object)->void:::Adds a listener to be informed of changes in connection status
javax.management.remote.JMXConnector#removeConnectionNotificationListener(NotificationListener)->void:::Removes a listener from the list to be informed of changes in status
javax.management.remote.JMXConnector#removeConnectionNotificationListener(NotificationListener, NotificationFilter, Object)->void:::Removes a listener from the list to be informed of changes in status
javax.management.remote.JMXConnector#getConnectionId()->String:::Gets this connection's ID from the connector server
javax.management.remote.JMXConnectorFactory#connect(JMXServiceURL)->JMXConnector:::Creates a connection to the connector server at the given address.  This method is equivalent to #connect(JMXServiceURL,Map) connect(serviceURL, null).
javax.management.remote.JMXConnectorFactory#connect(JMXServiceURL, Map)->JMXConnector:::Creates a connection to the connector server at the given address.  This method is equivalent to:   JMXConnector conn = JMXConnectorFactory.newJMXConnector(serviceURL,                                                         environment); conn.connect(environment); 
javax.management.remote.JMXConnectorFactory#newJMXConnector(JMXServiceURL, Map)->JMXConnector:::Creates a connector client for the connector server at the given address
javax.management.remote.JMXConnectorFactory#getProvider(JMXServiceURL, Map, String, Class, ClassLoader)->T::: connector factory get provider
javax.management.remote.JMXConnectorFactory#isSystemProvider(Provider)->boolean:::Checks whether the given provider is our system provider for the RMI connector
javax.management.remote.JMXConnectorFactory.ConnectorFactory#apply(P)->C::: connector factory apply
javax.management.remote.JMXConnectorFactory#getConnectorAsService(Class, ClassLoader, JMXServiceURL, Predicate>, ConnectorFactory)->C:::Creates a connector from a provider loaded from the ServiceLoader
javax.management.remote.JMXConnectorFactory#getProvider(String, String, ClassLoader, String, Class)->T::: connector factory get provider
javax.management.remote.JMXConnectorFactory#resolveClassLoader(Map)->ClassLoader::: connector factory resolve class loader
javax.management.remote.JMXConnectorProvider#newJMXConnector(JMXServiceURL, Map)->JMXConnector:::Creates a new connector client that is ready to connect to the connector server at the given address
javax.management.remote.JMXConnectorServer#getMBeanServer()->MBeanServer:::Returns the MBean server that this connector server is attached to.
javax.management.remote.JMXConnectorServer#setMBeanServerForwarder(MBeanServerForwarder)->void::: connector server set bean server forwarder
javax.management.remote.JMXConnectorServer#getConnectionIds()->String[]::: connector server get connection ids
javax.management.remote.JMXConnectorServer#toJMXConnector(Map)->JMXConnector:::Returns a client stub for this connector server
javax.management.remote.JMXConnectorServer#getNotificationInfo()->MBeanNotificationInfo[]:::Returns an array indicating the notifications that this MBean sends
javax.management.remote.JMXConnectorServer#connectionOpened(String, String, Object)->void:::Called by a subclass when a new client connection is opened
javax.management.remote.JMXConnectorServer#connectionClosed(String, String, Object)->void:::Called by a subclass when a client connection is closed normally
javax.management.remote.JMXConnectorServer#connectionFailed(String, String, Object)->void:::Called by a subclass when a client connection fails
javax.management.remote.JMXConnectorServer#preRegister(MBeanServer, ObjectName)->ObjectName:::Called by an MBean server when this connector server is registered in that MBean server
javax.management.remote.JMXConnectorServer#postRegister(Boolean)->void::: connector server post register
javax.management.remote.JMXConnectorServer#preDeregister()->void:::Called by an MBean server when this connector server is unregistered from that MBean server
javax.management.remote.JMXConnectorServer#postDeregister()->void::: connector server post deregister
javax.management.remote.JMXConnectorServerFactory#newJMXConnectorServer(JMXServiceURL, Map, MBeanServer)->JMXConnectorServer:::Creates a connector server at the given address
javax.management.remote.JMXConnectorServerMBean#start()->void:::Activates the connector server, that is, starts listening for client connections
javax.management.remote.JMXConnectorServerMBean#stop()->void:::Deactivates the connector server, that is, stops listening for client connections
javax.management.remote.JMXConnectorServerMBean#isActive()->boolean:::Determines whether the connector server is active
javax.management.remote.JMXConnectorServerMBean#setMBeanServerForwarder(MBeanServerForwarder)->void:::Inserts an object that intercepts requests for the MBean server that arrive through this connector server
javax.management.remote.JMXConnectorServerMBean#getConnectionIds()->String[]:::The list of IDs for currently-open connections to this connector server.
javax.management.remote.JMXConnectorServerMBean#getAddress()->JMXServiceURL:::The address of this connector server.  The address returned may not be the exact original JMXServiceURL that was supplied when creating the connector server, since the original address may not always be complete
javax.management.remote.JMXConnectorServerMBean#getAttributes()->Map:::The attributes for this connector server.
javax.management.remote.JMXConnectorServerMBean#toJMXConnector(Map)->JMXConnector:::Returns a client stub for this connector server
javax.management.remote.JMXConnectorServerProvider#newJMXConnectorServer(JMXServiceURL, Map, MBeanServer)->JMXConnectorServer:::Creates a new connector server at the given address
javax.management.remote.JMXPrincipal#getName()->String:::Returns the name of this principal.
javax.management.remote.JMXPrincipal#toString()->String:::Returns a string representation of this JMXPrincipal.
javax.management.remote.JMXPrincipal#equals(Object)->boolean:::Compares the specified Object with this JMXPrincipal for equality
javax.management.remote.JMXPrincipal#hashCode()->int:::Returns a hash code for this JMXPrincipal.
javax.management.remote.JMXProviderException#getCause()->Throwable::: provider exception get cause
javax.management.remote.JMXServerErrorException#getCause()->Throwable::: server error exception get cause
javax.management.remote.JMXServiceURL#getProtocol()->String:::The protocol part of the Service URL.
javax.management.remote.JMXServiceURL#getHost()->String:::The host part of the Service URL
javax.management.remote.JMXServiceURL#getPort()->int:::The port of the Service URL
javax.management.remote.JMXServiceURL#getURLPath()->String:::The URL Path part of the Service URL
javax.management.remote.JMXServiceURL#toString()->String:::The string representation of this Service URL
javax.management.remote.JMXServiceURL#equals(Object)->boolean:::Indicates whether some other object is equal to this one
javax.management.remote.JMXServiceURL#hashCode()->int::: service l hash code
javax.management.remote.MBeanServerForwarder#getMBeanServer()->MBeanServer:::Returns the MBeanServer object to which requests will be forwarded.
javax.management.remote.MBeanServerForwarder#setMBeanServer(MBeanServer)->void:::Sets the MBeanServer object to which requests will be forwarded after treatment by this object.
javax.management.remote.NotificationResult#getEarliestSequenceNumber()->long:::Returns the sequence number of the earliest notification still in the buffer.
javax.management.remote.NotificationResult#getNextSequenceNumber()->long:::Returns the sequence number of the next notification available for querying.
javax.management.remote.NotificationResult#getTargetedNotifications()->TargetedNotification[]:::Returns the notifications resulting from the query, and the listeners they correspond to.
javax.management.remote.NotificationResult#toString()->String:::Returns a string representation of the object
javax.management.remote.TargetedNotification#getNotification()->Notification:::The emitted notification.
javax.management.remote.TargetedNotification#getListenerID()->Integer:::The ID of the listener to which the notification is    targeted.
javax.management.remote.TargetedNotification#toString()->String:::Returns a textual representation of this Targeted Notification.
