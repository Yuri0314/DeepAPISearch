sun.net.ftp.FtpClient#defaultPort()->int:::Returns the default FTP port number.
sun.net.ftp.FtpClient#create()->FtpClient:::Creates an instance of FtpClient
sun.net.ftp.FtpClient#create(InetSocketAddress)->FtpClient:::Creates an instance of FtpClient and connects it to the specified address.
sun.net.ftp.FtpClient#create(String)->FtpClient:::Creates an instance of FtpClient and connects it to the specified host on the default FTP port.
sun.net.ftp.FtpClient#enablePassiveMode(boolean)->FtpClient:::Enables, or disables, the use of the passive mode
sun.net.ftp.FtpClient#isPassiveModeEnabled()->boolean:::Tests whether passive mode is enabled.
sun.net.ftp.FtpClient#setConnectTimeout(int)->FtpClient:::Sets the default timeout value to use when connecting to the server,
sun.net.ftp.FtpClient#getConnectTimeout()->int:::Returns the current default connection timeout value.
sun.net.ftp.FtpClient#setReadTimeout(int)->FtpClient:::Sets the timeout value to use when reading from the server,
sun.net.ftp.FtpClient#getReadTimeout()->int:::Returns the current read timeout value.
sun.net.ftp.FtpClient#setProxy(Proxy)->FtpClient:::Set the Proxy to be used for the next connection
sun.net.ftp.FtpClient#getProxy()->Proxy:::Get the proxy of this FtpClient
sun.net.ftp.FtpClient#isConnected()->boolean:::Tests whether this client is connected or not to a server.
sun.net.ftp.FtpClient#connect(SocketAddress)->FtpClient:::Connects the FtpClient to the specified destination server.
sun.net.ftp.FtpClient#connect(SocketAddress, int)->FtpClient:::Connects the FtpClient to the specified destination server.
sun.net.ftp.FtpClient#getServerAddress()->SocketAddress:::Retrieves the address of the FTP server this client is connected to.
sun.net.ftp.FtpClient#login(String, char[])->FtpClient:::Attempts to log on the server with the specified user name and password.
sun.net.ftp.FtpClient#login(String, char[], String)->FtpClient:::Attempts to log on the server with the specified user name, password and account name.
sun.net.ftp.FtpClient#close()->void:::Closes the current connection
sun.net.ftp.FtpClient#isLoggedIn()->boolean:::Checks whether the client is logged in to the server or not.
sun.net.ftp.FtpClient#changeDirectory(String)->FtpClient:::Changes to a specific directory on a remote FTP server
sun.net.ftp.FtpClient#changeToParentDirectory()->FtpClient:::Changes to the parent directory, sending the CDUP command to the server.
sun.net.ftp.FtpClient#getWorkingDirectory()->String:::Retrieve the server current working directory using the PWD command.
sun.net.ftp.FtpClient#setRestartOffset(long)->FtpClient:::Sets the restart offset to the specified value
sun.net.ftp.FtpClient#getFile(String, OutputStream)->FtpClient:::Retrieves a file from the ftp server and writes its content to the specified OutputStream
sun.net.ftp.FtpClient#getFileStream(String)->InputStream:::Retrieves a file from the ftp server, using the RETR command, and returns the InputStream from the established data connection
sun.net.ftp.FtpClient#putFileStream(String)->OutputStream:::Transfers a file from the client to the server (aka a put) by sending the STOR command, and returns the OutputStream from the established data connection
sun.net.ftp.FtpClient#putFileStream(String, boolean)->OutputStream:::Transfers a file from the client to the server (aka a put) by sending the STOR or STOU command, depending on the unique argument, and returns the OutputStream from the established data connection
sun.net.ftp.FtpClient#putFile(String, InputStream)->FtpClient:::Transfers a file from the client to the server (aka a put) by sending the STOR or STOU command, depending on the unique argument
sun.net.ftp.FtpClient#putFile(String, InputStream, boolean)->FtpClient:::Transfers a file from the client to the server (aka a put) by sending the STOR command
sun.net.ftp.FtpClient#appendFile(String, InputStream)->FtpClient:::Sends the APPE command to the server in order to transfer a data stream passed in argument and append it to the content of the specified remote file
sun.net.ftp.FtpClient#rename(String, String)->FtpClient:::Renames a file on the server.
sun.net.ftp.FtpClient#deleteFile(String)->FtpClient:::Deletes a file on the server.
sun.net.ftp.FtpClient#makeDirectory(String)->FtpClient:::Creates a new directory on the server.
sun.net.ftp.FtpClient#removeDirectory(String)->FtpClient:::Removes a directory on the server.
sun.net.ftp.FtpClient#noop()->FtpClient:::Sends a No-operation command
sun.net.ftp.FtpClient#getStatus(String)->String:::Sends the STAT command to the server
sun.net.ftp.FtpClient#getFeatures()->List:::Sends the FEAT command to the server and returns the list of supported features in the form of strings
sun.net.ftp.FtpClient#abort()->FtpClient:::Sends the ABOR command to the server
sun.net.ftp.FtpClient#completePending()->FtpClient:::Some methods do not wait until completion before returning, so this method can be called to wait until completion
sun.net.ftp.FtpClient#reInit()->FtpClient:::Reinitializes the USER parameters on the FTP server
sun.net.ftp.FtpClient#setType(TransferType)->FtpClient:::Changes the transfer type (binary, ascii, ebcdic) and issue the proper command (e.g
sun.net.ftp.FtpClient#setBinaryType()->FtpClient:::Changes the current transfer type to binary
sun.net.ftp.FtpClient#setAsciiType()->FtpClient:::Changes the current transfer type to ascii
sun.net.ftp.FtpClient#list(String)->InputStream:::Issues a LIST command to the server to get the current directory listing, and returns the InputStream from the data connection
sun.net.ftp.FtpClient#nameList(String)->InputStream:::Issues a NLST path command to server to get the specified directory content
sun.net.ftp.FtpClient#getSize(String)->long:::Issues the SIZE [path] command to the server to get the size of a specific file on the server
sun.net.ftp.FtpClient#getLastModified(String)->Date:::Issues the MDTM [path] command to the server to get the modification time of a specific file on the server
sun.net.ftp.FtpClient#setDirParser(FtpDirParser)->FtpClient:::Sets the parser used to handle the directory output to the specified one
sun.net.ftp.FtpClient#listFiles(String)->Iterator:::Issues a MLSD command to the server to get the specified directory listing and applies the internal parser to create an Iterator of java.net.FtpDirEntry
sun.net.ftp.FtpClient#useKerberos()->FtpClient:::Attempts to use Kerberos GSSAPI as an authentication mechanism with the ftp server
sun.net.ftp.FtpClient#getWelcomeMsg()->String:::Returns the Welcome string the server sent during initial connection.
sun.net.ftp.FtpClient#getLastReplyCode()->FtpReplyCode:::Returns the last reply code sent by the server.
sun.net.ftp.FtpClient#getLastResponseString()->String:::Returns the last response string sent by the server.
sun.net.ftp.FtpClient#getLastTransferSize()->long:::Returns, when available, the size of the latest started transfer
sun.net.ftp.FtpClient#getLastFileName()->String:::Returns, when available, the remote name of the last transfered file
sun.net.ftp.FtpClient#startSecureSession()->FtpClient:::Attempts to switch to a secure, encrypted connection
sun.net.ftp.FtpClient#endSecureSession()->FtpClient:::Sends a CCC command followed by a PROT C command to the server terminating an encrypted session and reverting back to a non encrypted transmission.
sun.net.ftp.FtpClient#allocate(long)->FtpClient:::Sends the "Allocate" (ALLO) command to the server telling it to pre-allocate the specified number of bytes for the next transfer.
sun.net.ftp.FtpClient#structureMount(String)->FtpClient:::Sends the "Structure Mount" (SMNT) command to the server
sun.net.ftp.FtpClient#getSystem()->String:::Sends a System (SYST) command to the server and returns the String sent back by the server describing the operating system at the server.
sun.net.ftp.FtpClient#getHelp(String)->String:::Sends the HELP command to the server, with an optional command, like SITE, and returns the text sent back by the server.
sun.net.ftp.FtpClient#siteCmd(String)->FtpClient:::Sends the SITE command to the server
sun.net.ftp.FtpClientProvider#createFtpClient()->FtpClient:::Creates a FtpClient from this provider.
sun.net.ftp.FtpClientProvider#provider()->FtpClientProvider:::Returns the system wide default FtpClientProvider for this invocation of the Java virtual machine
sun.net.ftp.FtpDirEntry#getName()->String:::Returns the name of the remote file.
sun.net.ftp.FtpDirEntry#getUser()->String:::Returns the user name of the owner of the file as returned by the FTP server, if provided
sun.net.ftp.FtpDirEntry#setUser(String)->FtpDirEntry:::Sets the user name of the owner of the file
sun.net.ftp.FtpDirEntry#getGroup()->String:::Returns the group name of the file as returned by the FTP server, if provided
sun.net.ftp.FtpDirEntry#setGroup(String)->FtpDirEntry:::Sets the name of the group to which the file belong
sun.net.ftp.FtpDirEntry#getSize()->long:::Returns the size of the remote file as it was returned by the FTP server, if provided.
sun.net.ftp.FtpDirEntry#setSize(long)->FtpDirEntry:::Sets the size of that file
sun.net.ftp.FtpDirEntry#getType()->Type:::Returns the type of the remote file as it was returned by the FTP server, if provided
sun.net.ftp.FtpDirEntry#setType(Type)->FtpDirEntry:::Sets the type of the file
sun.net.ftp.FtpDirEntry#getLastModified()->java.util.Date:::Returns the last modification time of the remote file as it was returned by the FTP server, if provided, null otherwise.
sun.net.ftp.FtpDirEntry#setLastModified(Date)->FtpDirEntry:::Sets the last modification time of the file
sun.net.ftp.FtpDirEntry#canRead(Permission)->boolean:::Returns whether read access is granted for a specific permission.
sun.net.ftp.FtpDirEntry#canWrite(Permission)->boolean:::Returns whether write access is granted for a specific permission.
sun.net.ftp.FtpDirEntry#canExexcute(Permission)->boolean:::Returns whether execute access is granted for a specific permission.
sun.net.ftp.FtpDirEntry#setPermissions(boolean[][])->FtpDirEntry:::Sets the permissions for that file
sun.net.ftp.FtpDirEntry#addFact(String, String)->FtpDirEntry:::Adds a 'fact', as defined in RFC 3659, to the list of facts of this file
sun.net.ftp.FtpDirEntry#getFact(String)->String:::Returns the requested 'fact', as defined in RFC 3659, if available.
sun.net.ftp.FtpDirEntry#getCreated()->Date:::Returns the creation time of the file, when provided by the server.
sun.net.ftp.FtpDirEntry#setCreated(Date)->FtpDirEntry:::Sets the creation time for that file
sun.net.ftp.FtpDirEntry#toString()->String:::Returns a string representation of the object
sun.net.ftp.FtpDirParser#parseLine(String)->FtpDirEntry:::Takes one line from a directory listing and returns an FtpDirEntry instance based on the information contained.
sun.net.ftp.FtpProtocolException#getReplyCode()->FtpReplyCode:::Gets the reply code sent by the server that led to this exception being thrown.
