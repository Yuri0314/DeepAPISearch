sun.jvm.hotspot.gc.cms.AdaptiveFreeList#size()->long::: adaptive free list size
sun.jvm.hotspot.gc.cms.AdaptiveFreeList#count()->long::: adaptive free list count
sun.jvm.hotspot.gc.cms.AdaptiveFreeList#sizeOf()->long::: adaptive free list size of
sun.jvm.hotspot.gc.cms.CMSBitMap#printAll()->void::: bit map print all
sun.jvm.hotspot.gc.cms.CMSBitMap#bmStartWord()->Address::: bit map bm start word
sun.jvm.hotspot.gc.cms.CMSBitMap#bmWordSize()->long::: bit map bm word size
sun.jvm.hotspot.gc.cms.CMSBitMap#shifter()->long::: bit map shifter
sun.jvm.hotspot.gc.cms.CMSBitMap#virtualSpace()->VirtualSpace::: bit map virtual space
sun.jvm.hotspot.gc.cms.CMSBitMap#bm()->BitMap::: bit map bm
sun.jvm.hotspot.gc.cms.CMSBitMap#getNextMarkedWordAddress(Address)->Address::: bit map get next marked word address
sun.jvm.hotspot.gc.cms.CMSBitMap#heapWordToOffset(Address)->int::: bit map heap word to offset
sun.jvm.hotspot.gc.cms.CMSBitMap#offsetToHeapWord(int)->Address::: bit map offset to heap word
sun.jvm.hotspot.gc.cms.CMSBitMap#isMarked(Address)->boolean::: bit map is marked
sun.jvm.hotspot.gc.cms.CMSCollector#markBitMap()->CMSBitMap::: collector mark bit map
sun.jvm.hotspot.gc.cms.CMSCollector#blockSizeUsingPrintezisBits(Address)->long::: collector block size using printezis bits
sun.jvm.hotspot.gc.cms.CMSHeap#kind()->CollectedHeapName::: heap kind
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#collector()->CMSCollector::: compactible free list space collector
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#free0()->long::: compactible free list space free0
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#used()->long::: compactible free list space used
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#used0()->long::: compactible free list space used0
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#free()->long::: compactible free list space free
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#printOn(PrintStream)->void::: compactible free list space print on
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#skipBlockSizeUsingPrintezisBits(Address)->Address::: compactible free list space skip block size using printezis bits
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#getLiveRegions()->List::: compactible free list space get live regions
sun.jvm.hotspot.gc.cms.CompactibleFreeListSpace#adjustObjectSizeInBytes(long)->long::: compactible free list space adjust object size in bytes
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#cmsSpace()->CompactibleFreeListSpace::: concurrent mark sweep generation cms space
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#capacity()->long::: concurrent mark sweep generation capacity
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#used()->long::: concurrent mark sweep generation used
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#free()->long::: concurrent mark sweep generation free
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#contiguousAvailable()->long::: concurrent mark sweep generation contiguous available
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#contains(Address)->boolean::: concurrent mark sweep generation contains
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#spaceIterate(SpaceClosure, boolean)->void::: concurrent mark sweep generation space iterate
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#kind()->Generation.Name::: concurrent mark sweep generation kind
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#name()->String::: concurrent mark sweep generation name
sun.jvm.hotspot.gc.cms.ConcurrentMarkSweepGeneration#printOn(PrintStream)->void::: concurrent mark sweep generation print on
sun.jvm.hotspot.gc.cms.LinearAllocBlock#word_size()->long::: linear alloc block word_size
sun.jvm.hotspot.gc.cms.ParNewGeneration#kind()->Generation.Name::: par new generation kind
