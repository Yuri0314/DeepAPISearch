java.util.spi.AbstractResourceBundleProvider#toBundleName(String, Locale)->String:::Returns the bundle name for the given baseName and locale that this provider provides.
java.util.spi.AbstractResourceBundleProvider#getBundle(String, Locale)->ResourceBundle:::Returns a ResourceBundle for the given baseName and locale.
java.util.spi.CalendarDataProvider#getFirstDayOfWeek(Locale)->int:::Returns the first day of a week in the given locale
java.util.spi.CalendarDataProvider#getMinimalDaysInFirstWeek(Locale)->int:::Returns the minimal number of days required in the first week of a year
java.util.spi.CalendarNameProvider#getDisplayName(String, int, int, int, Locale)->String:::Returns the string representation (display name) of the calendar field value in the given style and locale
java.util.spi.CalendarNameProvider#getDisplayNames(String, int, int, Locale)->Map:::Returns a Map containing all string representations (display names) of the Calendar field in the given style and locale and their corresponding field values
java.util.spi.CurrencyNameProvider#getSymbol(String, Locale)->String:::Gets the symbol of the given currency code for the specified locale
java.util.spi.CurrencyNameProvider#getDisplayName(String, Locale)->String:::Returns a name for the currency that is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayLanguage(String, Locale)->String:::Returns a localized name for the given  IETF BCP47 language code and the given locale that is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayScript(String, Locale)->String:::Returns a localized name for the given  IETF BCP47 script code and the given locale that is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayCountry(String, Locale)->String:::Returns a localized name for the given  IETF BCP47 region code (either ISO 3166 country code or UN M.49 area codes) and the given locale that is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayVariant(String, Locale)->String:::Returns a localized name for the given variant code and the given locale that is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayUnicodeExtensionKey(String, Locale)->String:::Returns a localized name for the given Unicode extension key, and the given locale that is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayUnicodeExtensionType(String, String, Locale)->String:::Returns a localized name for the given Unicode extension type, and the given locale that is appropriate for display to the user
java.util.spi.LocaleServiceProvider#getAvailableLocales()->Locale[]:::Returns an array of all locales for which this locale service provider can provide localized objects or names
java.util.spi.LocaleServiceProvider#isSupportedLocale(Locale)->boolean:::Returns true if the given locale is supported by this locale service provider
java.util.spi.ResourceBundleControlProvider#getControl(String)->ResourceBundle.Control:::Returns a ResourceBundle.Control instance that is used to handle resource bundle loading for the given baseName
java.util.spi.ResourceBundleProvider#getBundle(String, Locale)->ResourceBundle:::Returns a ResourceBundle for the given bundle name and locale
java.util.spi.TimeZoneNameProvider#getDisplayName(String, boolean, int, Locale)->String:::Returns a name for the given time zone ID that's suitable for presentation to the user in the specified locale
java.util.spi.TimeZoneNameProvider#getGenericDisplayName(String, int, Locale)->String:::Returns a generic name for the given time zone ID that's suitable for presentation to the user in the specified locale
java.util.spi.ToolProvider#name()->String:::Returns the name of this tool provider.
java.util.spi.ToolProvider#run(PrintWriter, PrintWriter, String...)->int:::Runs an instance of the tool, returning zero for a successful run
java.util.spi.ToolProvider#run(PrintStream, PrintStream, String...)->int:::Runs an instance of the tool, returning zero for a successful run
java.util.spi.ToolProvider#findFirst(String)->Optional:::Returns the first instance of a ToolProvider with the given name, as loaded by ServiceLoader using the system class loader.
