java.util.spi.AbstractResourceBundleProvider#toBundleName(String, Locale)->String:::Returns the bundle name for the given {@code baseName} and {@code  locale} that this provider provides.
java.util.spi.AbstractResourceBundleProvider#getBundle(String, Locale)->ResourceBundle:::Returns a {@code ResourceBundle} for the given {@code baseName} and  {@code locale}.
java.util.spi.CalendarDataProvider#getFirstDayOfWeek(Locale)->int:::Returns the first day of a week in the given {@code locale}
java.util.spi.CalendarDataProvider#getMinimalDaysInFirstWeek(Locale)->int:::Returns the minimal number of days required in the first week of a  year
java.util.spi.CalendarNameProvider#getDisplayName(String, int, int, int, Locale)->String:::Returns the string representation (display name) of the calendar  <code>field value</code> in the given <code>style</code> and  <code>locale</code>
java.util.spi.CalendarNameProvider#Integer> getDisplayNames(String, int, int, Locale)->Map<String,:::Returns a {@code Map} containing all string representations (display  names) of the {@code Calendar} {@code field} in the given {@code style}  and {@code locale} and their corresponding field values
java.util.spi.CurrencyNameProvider#getSymbol(String, Locale)->String:::Gets the symbol of the given currency code for the specified locale
java.util.spi.CurrencyNameProvider#getDisplayName(String, Locale)->String:::Returns a name for the currency that is appropriate for display to the  user
java.util.spi.LocaleNameProvider#getDisplayLanguage(String, Locale)->String:::Returns a localized name for the given <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">  IETF BCP47</a> language code and the given locale that is appropriate for  display to the user
java.util.spi.LocaleNameProvider#getDisplayScript(String, Locale)->String:::Returns a localized name for the given <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">  IETF BCP47</a> script code and the given locale that is appropriate for  display to the user
java.util.spi.LocaleNameProvider#getDisplayCountry(String, Locale)->String:::Returns a localized name for the given <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">  IETF BCP47</a> region code (either ISO 3166 country code or UN M.49 area  codes) and the given locale that is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayVariant(String, Locale)->String:::Returns a localized name for the given variant code and the given locale that  is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayUnicodeExtensionKey(String, Locale)->String:::Returns a localized name for the given  <a href="../Locale.html#def_locale_extension">Unicode extension</a> key,  and the given locale that is appropriate for display to the user
java.util.spi.LocaleNameProvider#getDisplayUnicodeExtensionType(String, String, Locale)->String:::Returns a localized name for the given  <a href="../Locale.html#def_locale_extension">Unicode extension</a> type,  and the given locale that is appropriate for display to the user
java.util.spi.LocaleServiceProvider#getAvailableLocales()->Locale[]:::Returns an array of all locales for which this locale service provider  can provide localized objects or names
java.util.spi.LocaleServiceProvider#isSupportedLocale(Locale)->boolean:::Returns {@code true} if the given {@code locale} is supported by  this locale service provider
java.util.spi.ResourceBundleControlProvider#getControl(String)->ResourceBundle.Control:::Returns a {@code ResourceBundle.Control} instance that is used  to handle resource bundle loading for the given {@code  baseName}
java.util.spi.ResourceBundleProvider#getBundle(String, Locale)->ResourceBundle:::Returns a {@code ResourceBundle} for the given bundle name and locale
java.util.spi.TimeZoneNameProvider#getDisplayName(String, boolean, int, Locale)->String:::Returns a name for the given time zone ID that's suitable for  presentation to the user in the specified locale
java.util.spi.TimeZoneNameProvider#getGenericDisplayName(String, int, Locale)->String:::Returns a generic name for the given time zone {@code ID} that's suitable  for presentation to the user in the specified {@code locale}
java.util.spi.ToolProvider#name()->String:::Returns the name of this tool provider.
java.util.spi.ToolProvider#run(PrintWriter, PrintWriter, String...)->int:::Runs an instance of the tool, returning zero for a successful run
java.util.spi.ToolProvider#run(PrintStream, PrintStream, String...)->int:::Runs an instance of the tool, returning zero for a successful run
java.util.spi.ToolProvider#findFirst(String)->Optional<ToolProvider>:::Returns the first instance of a {@code ToolProvider} with the given name,  as loaded by {@link ServiceLoader} using the system class loader.
