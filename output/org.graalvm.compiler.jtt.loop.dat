org.graalvm.compiler.jtt.loop.DegeneratedLoop#test(int)->String::: degenerated loop test
org.graalvm.compiler.jtt.loop.DegeneratedLoop#run0()->void::: degenerated loop run0
org.graalvm.compiler.jtt.loop.Loop01#test()->boolean::: loop01 test
org.graalvm.compiler.jtt.loop.Loop01#run0()->void::: loop01 run0
org.graalvm.compiler.jtt.loop.Loop02#test(int)->boolean::: loop02 test
org.graalvm.compiler.jtt.loop.Loop02#run0()->void::: loop02 run0
org.graalvm.compiler.jtt.loop.Loop02#run1()->void::: loop02 run1
org.graalvm.compiler.jtt.loop.Loop03#test(int)->int::: loop03 test
org.graalvm.compiler.jtt.loop.Loop03#run0()->void::: loop03 run0
org.graalvm.compiler.jtt.loop.Loop04#test(int)->int::: loop04 test
org.graalvm.compiler.jtt.loop.Loop04#run0()->void::: loop04 run0
org.graalvm.compiler.jtt.loop.Loop04#run1()->void::: loop04 run1
org.graalvm.compiler.jtt.loop.Loop04#run2()->void::: loop04 run2
org.graalvm.compiler.jtt.loop.Loop05#test(int)->String::: loop05 test
org.graalvm.compiler.jtt.loop.Loop05#run0()->void::: loop05 run0
org.graalvm.compiler.jtt.loop.Loop05#run1()->void::: loop05 run1
org.graalvm.compiler.jtt.loop.Loop05#run2()->void::: loop05 run2
org.graalvm.compiler.jtt.loop.Loop06#test(int)->String::: loop06 test
org.graalvm.compiler.jtt.loop.Loop06#foo()->void::: loop06 foo
org.graalvm.compiler.jtt.loop.Loop06#run0()->void::: loop06 run0
org.graalvm.compiler.jtt.loop.Loop06#run1()->void::: loop06 run1
org.graalvm.compiler.jtt.loop.Loop06#run2()->void::: loop06 run2
org.graalvm.compiler.jtt.loop.Loop07#test(int)->String::: loop07 test
org.graalvm.compiler.jtt.loop.Loop07#run0()->void::: loop07 run0
org.graalvm.compiler.jtt.loop.Loop07#run1()->void::: loop07 run1
org.graalvm.compiler.jtt.loop.Loop07#run2()->void::: loop07 run2
org.graalvm.compiler.jtt.loop.Loop07_2#test(int)->int::: loop07_2 test
org.graalvm.compiler.jtt.loop.Loop07_2#run0()->void::: loop07_2 run0
org.graalvm.compiler.jtt.loop.Loop07_2#run1()->void::: loop07_2 run1
org.graalvm.compiler.jtt.loop.Loop07_2#run2()->void::: loop07_2 run2
org.graalvm.compiler.jtt.loop.Loop08#test(int)->int::: loop08 test
org.graalvm.compiler.jtt.loop.Loop08#run0()->void::: loop08 run0
org.graalvm.compiler.jtt.loop.Loop08#run1()->void::: loop08 run1
org.graalvm.compiler.jtt.loop.Loop08#run2()->void::: loop08 run2
org.graalvm.compiler.jtt.loop.Loop09#test(int)->String::: loop09 test
org.graalvm.compiler.jtt.loop.Loop09#foo()->void::: loop09 foo
org.graalvm.compiler.jtt.loop.Loop09#run0()->void::: loop09 run0
org.graalvm.compiler.jtt.loop.Loop09#run1()->void::: loop09 run1
org.graalvm.compiler.jtt.loop.Loop09#run2()->void::: loop09 run2
org.graalvm.compiler.jtt.loop.Loop09_2#test(int)->int::: loop09_2 test
org.graalvm.compiler.jtt.loop.Loop09_2#foo()->void::: loop09_2 foo
org.graalvm.compiler.jtt.loop.Loop09_2#run0()->void::: loop09_2 run0
org.graalvm.compiler.jtt.loop.Loop09_2#run1()->void::: loop09_2 run1
org.graalvm.compiler.jtt.loop.Loop09_2#run2()->void::: loop09_2 run2
org.graalvm.compiler.jtt.loop.Loop11#test(int)->int::: loop11 test
org.graalvm.compiler.jtt.loop.Loop11#run0()->void::: loop11 run0
org.graalvm.compiler.jtt.loop.Loop11#run1()->void::: loop11 run1
org.graalvm.compiler.jtt.loop.Loop11#run2()->void::: loop11 run2
org.graalvm.compiler.jtt.loop.Loop12#test(int)->int::: loop12 test
org.graalvm.compiler.jtt.loop.Loop12#run0()->void::: loop12 run0
org.graalvm.compiler.jtt.loop.Loop12#run1()->void::: loop12 run1
org.graalvm.compiler.jtt.loop.Loop12#run2()->void::: loop12 run2
org.graalvm.compiler.jtt.loop.Loop13.Loop#test0()->void::: loop test0
org.graalvm.compiler.jtt.loop.Loop13.Loop#getIndex()->int::: loop get index
org.graalvm.compiler.jtt.loop.Loop13#test(int)->int::: loop13 test
org.graalvm.compiler.jtt.loop.Loop13#run0()->void::: loop13 run0
org.graalvm.compiler.jtt.loop.Loop13#run1()->void::: loop13 run1
org.graalvm.compiler.jtt.loop.Loop13#run2()->void::: loop13 run2
org.graalvm.compiler.jtt.loop.Loop13#run3()->void::: loop13 run3
org.graalvm.compiler.jtt.loop.Loop13#run4()->void::: loop13 run4
org.graalvm.compiler.jtt.loop.Loop14#test(int)->int::: loop14 test
org.graalvm.compiler.jtt.loop.Loop14#calc(int)->int::: loop14 calc
org.graalvm.compiler.jtt.loop.Loop14#run0()->void::: loop14 run0
org.graalvm.compiler.jtt.loop.Loop14#run1()->void::: loop14 run1
org.graalvm.compiler.jtt.loop.Loop15#test(int)->int::: loop15 test
org.graalvm.compiler.jtt.loop.Loop15#run0()->void::: loop15 run0
org.graalvm.compiler.jtt.loop.Loop15#run1()->void::: loop15 run1
org.graalvm.compiler.jtt.loop.Loop15#run2()->void::: loop15 run2
org.graalvm.compiler.jtt.loop.Loop15#run3()->void::: loop15 run3
org.graalvm.compiler.jtt.loop.Loop16#test(int)->int::: loop16 test
org.graalvm.compiler.jtt.loop.Loop16#run0()->void::: loop16 run0
org.graalvm.compiler.jtt.loop.Loop17#test(int)->int::: loop17 test
org.graalvm.compiler.jtt.loop.Loop17#run0()->void::: loop17 run0
org.graalvm.compiler.jtt.loop.LoopEscape#test0(int)->int::: loop escape test0
org.graalvm.compiler.jtt.loop.LoopEscape#test1(int)->int::: loop escape test1
org.graalvm.compiler.jtt.loop.LoopEscape#run10()->void::: loop escape run10
org.graalvm.compiler.jtt.loop.LoopEscape#run11()->void::: loop escape run11
org.graalvm.compiler.jtt.loop.LoopEscape#run12()->void::: loop escape run12
org.graalvm.compiler.jtt.loop.LoopEscape#run00()->void::: loop escape run00
org.graalvm.compiler.jtt.loop.LoopEscape#run01()->void::: loop escape run01
org.graalvm.compiler.jtt.loop.LoopEscape#run02()->void::: loop escape run02
org.graalvm.compiler.jtt.loop.LoopEscape#run05()->void::: loop escape run05
org.graalvm.compiler.jtt.loop.LoopInline#test(int)->int::: loop inline test
org.graalvm.compiler.jtt.loop.LoopInline#foo(int)->int::: loop inline foo
org.graalvm.compiler.jtt.loop.LoopInline#foo2(int)->int::: loop inline foo2
org.graalvm.compiler.jtt.loop.LoopInline#run0()->void::: loop inline run0
org.graalvm.compiler.jtt.loop.LoopInline#run1()->void::: loop inline run1
org.graalvm.compiler.jtt.loop.LoopLastIndexOf#test(char[], int, int, char[], int, int, int)->int::: loop last index of test
org.graalvm.compiler.jtt.loop.LoopLastIndexOf#run0()->void::: loop last index of run0
org.graalvm.compiler.jtt.loop.LoopLastIndexOf#run1()->void::: loop last index of run1
org.graalvm.compiler.jtt.loop.LoopLastIndexOf#run2()->void::: loop last index of run2
org.graalvm.compiler.jtt.loop.LoopLastIndexOf#run3()->void::: loop last index of run3
org.graalvm.compiler.jtt.loop.LoopLastIndexOf#run4()->void::: loop last index of run4
org.graalvm.compiler.jtt.loop.LoopNewInstance#test(int)->int::: loop new instance test
org.graalvm.compiler.jtt.loop.LoopNewInstance#before(ResolvedJavaMethod)->void::: loop new instance before
org.graalvm.compiler.jtt.loop.LoopNewInstance#run0()->void::: loop new instance run0
org.graalvm.compiler.jtt.loop.LoopNewInstance#run1()->void::: loop new instance run1
org.graalvm.compiler.jtt.loop.LoopParseLong#testShortened(String, int)->long::: loop parse long test shortened
org.graalvm.compiler.jtt.loop.LoopParseLong#test(String, int)->long::: loop parse long test
org.graalvm.compiler.jtt.loop.LoopParseLong#run0()->void::: loop parse long run0
org.graalvm.compiler.jtt.loop.LoopParseLong#run1()->void::: loop parse long run1
org.graalvm.compiler.jtt.loop.LoopParseLong#run2()->void::: loop parse long run2
org.graalvm.compiler.jtt.loop.LoopParseLong#run3()->void::: loop parse long run3
org.graalvm.compiler.jtt.loop.LoopPhi#test(int)->int::: loop phi test
org.graalvm.compiler.jtt.loop.LoopPhi#testHelper(int, int, int, int, int, int)->int::: loop phi test helper
org.graalvm.compiler.jtt.loop.LoopPhi#run0()->void::: loop phi run0
org.graalvm.compiler.jtt.loop.LoopPhiResolutionTest#test(int)->int::: loop phi resolution test test
org.graalvm.compiler.jtt.loop.LoopPhiResolutionTest#run0()->void::: loop phi resolution test run0
org.graalvm.compiler.jtt.loop.LoopPhiResolutionTest#run1()->void::: loop phi resolution test run1
org.graalvm.compiler.jtt.loop.LoopPhiResolutionTest#run2()->void::: loop phi resolution test run2
org.graalvm.compiler.jtt.loop.LoopSpilling#test(int[])->void:::Modification of sun.security.provider.SHA2.implCompress().
org.graalvm.compiler.jtt.loop.LoopSpilling#run0()->void::: loop spilling run0
org.graalvm.compiler.jtt.loop.LoopSwitch01#test()->String::: loop switch01 test
org.graalvm.compiler.jtt.loop.LoopSwitch01#run0()->void::: loop switch01 run0
org.graalvm.compiler.jtt.loop.LoopUnroll#test(int)->int::: loop unroll test
org.graalvm.compiler.jtt.loop.LoopUnroll#run0()->void::: loop unroll run0
org.graalvm.compiler.jtt.loop.SpillLoopPhiVariableAtDefinition#test(int)->int::: spill loop phi variable at definition test
org.graalvm.compiler.jtt.loop.SpillLoopPhiVariableAtDefinition#run0()->void::: spill loop phi variable at definition run0
org.graalvm.compiler.jtt.loop.SpillLoopPhiVariableAtDefinition#run1()->void::: spill loop phi variable at definition run1
org.graalvm.compiler.jtt.loop.SpillLoopPhiVariableAtDefinition#run2()->void::: spill loop phi variable at definition run2
