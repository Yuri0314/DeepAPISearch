Utils#getClass(String):::This method returns the class matching the name className:::c->if->primitiveMap->get->return->return->Class->forName
Utils#isUniformCollection(Collection, Class):::Check if the given collection is a uniform collection of the given type.:::if->throw->new->IllegalArgumentException->if->throw->new->IllegalArgumentException->if->c->isEmpty->return->foreach->if->e->o->getClass->isAssignableFrom->return->return
Utils#canBeRenderedAsArray(Object):::Check if the given element denotes a supported array-friendly data structure, i.e:::if->isSupportedArray->return->if->c->if->c->isEmpty->return->else->return->isUniformCollection->isUniformCollection->if->return->return
Utils#isSupportedArray(Object):::Check if the given element is an array:::if->elem->getClass->isArray->return->ct->elem->getClass->getComponentType->if->ct->isArray->return->if->Array->getLength->isAssignableFrom->isAssignableFrom->return->return
Utils#getArrayClassName(String):::This method provides a readable classname if it's an array, i.e:::className->if->name->startsWith->index->name->lastIndexOf->name->name->length->substring->if->className->startsWith->className->className->length->substring->else->try->c->Class->forName->c->getComponentType->getName->catch->throw->new->IllegalArgumentException->finally->return
Utils#getReadableClassName(String):::This methods provides a readable classname:::className->getArrayClassName->if->return->index->name->lastIndexOf->brackets->new->StringBuilder->for->i->return->brackets->toString
Utils#isEditableType(String):::This method tells whether the type is editable (means can be created with a String or not):::return->editableTypes->contains
Utils#getDefaultValue(String):::This method inserts a default value for the standard java types, else it inserts the text name of the expected class type:::if->numericalTypes->contains->extraNumericalTypes->contains->return->if->booleanTypes->contains->return->getReadableClassName->i->type->lastIndexOf->if->return->type->type->length->substring->else->return
Utils#newStringConstructor(String, String):::Try to create a Java object using a one-string-param constructor.:::c->Utils->getClass->getConstructor->try->return->c->newInstance->catch->t->e->getTargetException->if->throw->else->throw->finally
Utils#createObjectFromString(String, String):::This method attempts to create an object of the given "type" using the "value" parameter:::result->if->primitiveToWrapper->containsKey->if->type->getName->equals->value->charAt->else->primitiveToWrapper->get->getName->newStringConstructor->else->if->type->getName->equals->value->charAt->else->if->Utils->getClass->isAssignableFrom->createNumberFromStringValue->else->if->value->equals->else->newStringConstructor->return
Utils#getParameters(XTextField[], String[]):::This method is responsible for converting the inputs given by the user into a useful object array for passing into a parameter array.:::result->new->ObjectArr->userInput->for->i->return
Utils#getActualException(Throwable):::If the exception is wrapped, unwrap it.:::if->e->getCause->if->t->e->getCause->if->return->return
XMBeanAttributes#getRowCount():::Override JTable method in order to make any call to this method atomic with TableModel elements.:::return->super->getRowCount
XOpenTypeViewer#isViewableValue(Object):::The supplied value is viewable iff: - it's a CompositeData/TabularData, or - it's a non-empty array of CompositeData/TabularData, or - it's a non-empty Collection of CompositeData/TabularData.:::if->return->if->return->Array->getLength->if->c->if->c->isEmpty->return->else->return->Utils->isUniformCollection->Utils->isUniformCollection->return
XTable#sortRequested(int):::Called by TableSorter if a mouse event requests to sort the rows.:::
XTable#getSelectedIndex():::This returns the select index as the table was at initialization:::return->getSelectedRow->convertRowToIndex
XTable#getCellRenderer(int, int):::This method sets read write rows to be blue, and other rows to be their default rendered colour.:::tcr->super->getCellRenderer->tcr->getToolTip->setToolTipText->if->tcr->getForeground->if->return->if->tcr->setForeground->return->if->isCellError->tcr->setForeground->else->if->isCellEditable->tcr->setForeground->else->tcr->setForeground->return
XTextField#getValue():::This method returns either the user inputted String, or an XObject if one was dropped on the input field.:::if->if->return->else->return->else->return->textField->getText
XTree#hasMetadataNodes(DefaultMutableTreeNode):::Returns true if any of the children nodes is an MBean metadata node.:::for->e->node->children->e->hasMoreElements->return
XTree#isMetadataNode(DefaultMutableTreeNode):::Returns true if the given node is an MBean metadata node.:::uo->node->getUserObject->if->switch->getType->return->return->else->return
