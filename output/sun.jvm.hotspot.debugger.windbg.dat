sun.jvm.hotspot.debugger.windbg.AddressDataSource#readByte()->byte::: address data source read byte
sun.jvm.hotspot.debugger.windbg.AddressDataSource#readShort()->short::: address data source read short
sun.jvm.hotspot.debugger.windbg.AddressDataSource#readInt()->int::: address data source read int
sun.jvm.hotspot.debugger.windbg.AddressDataSource#readLong()->long::: address data source read long
sun.jvm.hotspot.debugger.windbg.AddressDataSource#read(byte[])->int::: address data source read
sun.jvm.hotspot.debugger.windbg.AddressDataSource#seek(long)->void::: address data source seek
sun.jvm.hotspot.debugger.windbg.AddressDataSource#getFilePointer()->long::: address data source get file pointer
sun.jvm.hotspot.debugger.windbg.AddressDataSource#close()->void::: address data source close
sun.jvm.hotspot.debugger.windbg.DLL#isDLL()->boolean:::Indicates whether this is really a DLL or actually a .EXE       file.
sun.jvm.hotspot.debugger.windbg.DLL#lookupSymbol(String)->Address:::Look up a symbol; returns absolute address or null if symbol was       not found.
sun.jvm.hotspot.debugger.windbg.DLL#getBase()->Address::: l get base
sun.jvm.hotspot.debugger.windbg.DLL#getName()->String:::Returns the full path name of this DLL/EXE, or null if this DLL       object was created by parsing the target process's address       space.
sun.jvm.hotspot.debugger.windbg.DLL#getSize()->long::: l get size
sun.jvm.hotspot.debugger.windbg.DLL#getDebugInfoDataBase()->CDebugInfoDataBase::: l get debug info data base
sun.jvm.hotspot.debugger.windbg.DLL#debugInfoForPC(Address)->BlockSym::: l debug info for c
sun.jvm.hotspot.debugger.windbg.DLL#closestSymbolToPC(Address)->ClosestSymbol::: l closest symbol to c
sun.jvm.hotspot.debugger.windbg.DLL#lineNumberForPC(Address)->LineNumberInfo::: l line number for c
sun.jvm.hotspot.debugger.windbg.DLL#close()->void::: l close
sun.jvm.hotspot.debugger.windbg.WindbgAddress#equals(Object)->boolean::: windbg address equals
sun.jvm.hotspot.debugger.windbg.WindbgAddress#hashCode()->int::: windbg address hash code
sun.jvm.hotspot.debugger.windbg.WindbgAddress#toString()->String::: windbg address to string
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getCIntegerAt(long, long, boolean)->long::: windbg address get integer at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getAddressAt(long)->Address::: windbg address get address at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getCompOopAddressAt(long)->Address::: windbg address get comp oop address at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getCompKlassAddressAt(long)->Address::: windbg address get comp klass address at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getJBooleanAt(long)->boolean::: windbg address get boolean at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getJByteAt(long)->byte::: windbg address get byte at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getJCharAt(long)->char::: windbg address get char at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getJDoubleAt(long)->double::: windbg address get double at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getJFloatAt(long)->float::: windbg address get float at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getJIntAt(long)->int::: windbg address get int at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getJLongAt(long)->long::: windbg address get long at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getJShortAt(long)->short::: windbg address get short at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getOopHandleAt(long)->OopHandle::: windbg address get oop handle at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getCompOopHandleAt(long)->OopHandle::: windbg address get comp oop handle at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setCIntegerAt(long, long, long)->void::: windbg address set integer at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setAddressAt(long, Address)->void::: windbg address set address at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setJBooleanAt(long, boolean)->void::: windbg address set boolean at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setJByteAt(long, byte)->void::: windbg address set byte at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setJCharAt(long, char)->void::: windbg address set char at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setJDoubleAt(long, double)->void::: windbg address set double at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setJFloatAt(long, float)->void::: windbg address set float at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setJIntAt(long, int)->void::: windbg address set int at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setJLongAt(long, long)->void::: windbg address set long at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setJShortAt(long, short)->void::: windbg address set short at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#setOopHandleAt(long, OopHandle)->void::: windbg address set oop handle at
sun.jvm.hotspot.debugger.windbg.WindbgAddress#addOffsetTo(long)->Address::: windbg address add offset to
sun.jvm.hotspot.debugger.windbg.WindbgAddress#addOffsetToAsOopHandle(long)->OopHandle::: windbg address add offset to as oop handle
sun.jvm.hotspot.debugger.windbg.WindbgAddress#minus(Address)->long:::(FIXME: any signed/unsigned issues? Should this work for       OopHandles?)
sun.jvm.hotspot.debugger.windbg.WindbgAddress#lessThan(Address)->boolean::: windbg address less than
sun.jvm.hotspot.debugger.windbg.WindbgAddress#lessThanOrEqual(Address)->boolean::: windbg address less than or equal
sun.jvm.hotspot.debugger.windbg.WindbgAddress#greaterThan(Address)->boolean::: windbg address greater than
sun.jvm.hotspot.debugger.windbg.WindbgAddress#greaterThanOrEqual(Address)->boolean::: windbg address greater than or equal
sun.jvm.hotspot.debugger.windbg.WindbgAddress#andWithMask(long)->Address::: windbg address and with mask
sun.jvm.hotspot.debugger.windbg.WindbgAddress#orWithMask(long)->Address::: windbg address or with mask
sun.jvm.hotspot.debugger.windbg.WindbgAddress#xorWithMask(long)->Address::: windbg address xor with mask
sun.jvm.hotspot.debugger.windbg.WindbgAddress#asLongValue()->long::: windbg address as long value
sun.jvm.hotspot.debugger.windbg.WindbgAddress#getValue()->long::: windbg address get value
sun.jvm.hotspot.debugger.windbg.WindbgAddress#main(String[])->void::: windbg address main
sun.jvm.hotspot.debugger.windbg.WindbgCDebugger#getThreadList()->List::: windbg debugger get thread list
sun.jvm.hotspot.debugger.windbg.WindbgCDebugger#getLoadObjectList()->List::: windbg debugger get load object list
sun.jvm.hotspot.debugger.windbg.WindbgCDebugger#loadObjectContainingPC(Address)->LoadObject::: windbg debugger load object containing c
sun.jvm.hotspot.debugger.windbg.WindbgCDebugger#topFrameForThread(ThreadProxy)->CFrame::: windbg debugger top frame for thread
sun.jvm.hotspot.debugger.windbg.WindbgCDebugger#getNameOfFile(String)->String::: windbg debugger get name of file
sun.jvm.hotspot.debugger.windbg.WindbgCDebugger#getProcessControl()->ProcessControl::: windbg debugger get process control
sun.jvm.hotspot.debugger.windbg.WindbgCDebugger#canDemangle()->boolean::: windbg debugger can demangle
sun.jvm.hotspot.debugger.windbg.WindbgCDebugger#demangle(String)->String::: windbg debugger demangle
sun.jvm.hotspot.debugger.windbg.WindbgCDebugInfoBuilder#buildDataBase(String, Address)->CDebugInfoDataBase::: windbg debug info builder build data base
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#addressValueToString(long)->String::: windbg debugger address value to string
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readJBoolean(long)->boolean::: windbg debugger read boolean
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readJByte(long)->byte::: windbg debugger read byte
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readJChar(long)->char::: windbg debugger read char
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readJDouble(long)->double::: windbg debugger read double
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readJFloat(long)->float::: windbg debugger read float
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readJInt(long)->int::: windbg debugger read int
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readJLong(long)->long::: windbg debugger read long
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readJShort(long)->short::: windbg debugger read short
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readCInteger(long, long, boolean)->long::: windbg debugger read integer
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readAddress(long)->WindbgAddress::: windbg debugger read address
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readCompOopAddress(long)->WindbgAddress::: windbg debugger read comp oop address
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readCompKlassAddress(long)->WindbgAddress::: windbg debugger read comp klass address
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readOopHandle(long)->WindbgOopHandle::: windbg debugger read oop handle
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#readCompOopHandle(long)->WindbgOopHandle::: windbg debugger read comp oop handle
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#getThreadIntegerRegisterSet(long)->long[]::: windbg debugger get thread integer register set
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#newAddress(long)->Address::: windbg debugger new address
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#getThreadIdFromSysId(long)->long::: windbg debugger get thread id from sys id
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#getThreadList()->List::: windbg debugger get thread list
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#getLoadObjectList()->List::: windbg debugger get load object list
sun.jvm.hotspot.debugger.windbg.WindbgDebugger#getAddressSize()->int::: windbg debugger get address size
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#hasProcessList()->boolean:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getProcessList()->List:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#attach(int)->void:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#attach(String, String)->void:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getLoadObjectList()->List::: windbg debugger local get load object list
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#detach()->boolean:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#parseAddress(String)->Address:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getOS()->String:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getCPU()->String:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#hasConsole()->boolean::: windbg debugger local has console
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#consoleExecuteCommand(String)->String::: windbg debugger local console execute command
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getConsolePrompt()->String::: windbg debugger local get console prompt
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getCDebugger()->CDebugger::: windbg debugger local get debugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#lookup(String, String)->Address:::From the SymbolLookup interface via Debugger and JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#lookupOop(String, String)->OopHandle:::From the SymbolLookup interface via Debugger and JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#lookup(long)->ClosestSymbol::: windbg debugger local lookup
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getMachineDescription()->MachineDescription:::From the Debugger interface
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getThreadForIdentifierAddress(Address)->ThreadProxy:::From the ThreadAccess interface via Debugger and JVMDebugger
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getThreadForThreadId(long)->ThreadProxy::: windbg debugger local get thread for thread id
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getThreadIdFromSysId(long)->long::: windbg debugger local get thread id from sys id
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#readJLong(long)->long::: windbg debugger local read long
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#addressValueToString(long)->String:::From the WindbgDebugger interface
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#readAddress(long)->WindbgAddress:::From the WindbgDebugger interface
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#readCompOopAddress(long)->WindbgAddress::: windbg debugger local read comp oop address
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#readCompKlassAddress(long)->WindbgAddress::: windbg debugger local read comp klass address
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#readOopHandle(long)->WindbgOopHandle:::From the WindbgDebugger interface
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#readCompOopHandle(long)->WindbgOopHandle::: windbg debugger local read comp oop handle
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getAddressSize()->int:::From the WindbgDebugger interface
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getThreadIntegerRegisterSet(long)->long[]::: windbg debugger local get thread integer register set
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getThreadList()->List::: windbg debugger local get thread list
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#getAddressValue(Address)->long:::From the Debugger interface
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#newAddress(long)->Address:::From the WindbgDebugger interface
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#lookupByName(String, String)->long::: windbg debugger local lookup by name
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#readBytesFromProcess(long, long)->ReadResult:::This reads bytes from the remote process.
sun.jvm.hotspot.debugger.windbg.WindbgDebuggerLocal#writeBytesToProcess(long, long, byte[])->void::: windbg debugger local write bytes to process
sun.jvm.hotspot.debugger.windbg.WindbgOopHandle#equals(Object)->boolean::: windbg oop handle equals
sun.jvm.hotspot.debugger.windbg.WindbgOopHandle#addOffsetTo(long)->Address::: windbg oop handle add offset to
sun.jvm.hotspot.debugger.windbg.WindbgOopHandle#andWithMask(long)->Address::: windbg oop handle and with mask
sun.jvm.hotspot.debugger.windbg.WindbgOopHandle#orWithMask(long)->Address::: windbg oop handle or with mask
sun.jvm.hotspot.debugger.windbg.WindbgOopHandle#xorWithMask(long)->Address::: windbg oop handle xor with mask
sun.jvm.hotspot.debugger.windbg.WindbgThreadFactory#createThreadWrapper(Address)->ThreadProxy::: windbg thread factory create thread wrapper
sun.jvm.hotspot.debugger.windbg.WindbgThreadFactory#createThreadWrapper(long)->ThreadProxy::: windbg thread factory create thread wrapper
