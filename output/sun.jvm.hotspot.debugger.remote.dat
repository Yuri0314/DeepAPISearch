sun.jvm.hotspot.debugger.remote.RemoteAddress#equals(Object)->boolean::: remote address equals
sun.jvm.hotspot.debugger.remote.RemoteAddress#hashCode()->int::: remote address hash code
sun.jvm.hotspot.debugger.remote.RemoteAddress#toString()->String::: remote address to string
sun.jvm.hotspot.debugger.remote.RemoteAddress#getCIntegerAt(long, long, boolean)->long::: remote address get integer at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getAddressAt(long)->Address::: remote address get address at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getCompOopAddressAt(long)->Address::: remote address get comp oop address at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getCompKlassAddressAt(long)->Address::: remote address get comp klass address at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getJBooleanAt(long)->boolean::: remote address get boolean at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getJByteAt(long)->byte::: remote address get byte at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getJCharAt(long)->char::: remote address get char at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getJDoubleAt(long)->double::: remote address get double at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getJFloatAt(long)->float::: remote address get float at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getJIntAt(long)->int::: remote address get int at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getJLongAt(long)->long::: remote address get long at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getJShortAt(long)->short::: remote address get short at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getOopHandleAt(long)->OopHandle::: remote address get oop handle at
sun.jvm.hotspot.debugger.remote.RemoteAddress#getCompOopHandleAt(long)->OopHandle::: remote address get comp oop handle at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setCIntegerAt(long, long, long)->void::: remote address set integer at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setAddressAt(long, Address)->void::: remote address set address at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setJBooleanAt(long, boolean)->void::: remote address set boolean at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setJByteAt(long, byte)->void::: remote address set byte at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setJCharAt(long, char)->void::: remote address set char at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setJDoubleAt(long, double)->void::: remote address set double at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setJFloatAt(long, float)->void::: remote address set float at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setJIntAt(long, int)->void::: remote address set int at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setJLongAt(long, long)->void::: remote address set long at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setJShortAt(long, short)->void::: remote address set short at
sun.jvm.hotspot.debugger.remote.RemoteAddress#setOopHandleAt(long, OopHandle)->void::: remote address set oop handle at
sun.jvm.hotspot.debugger.remote.RemoteAddress#addOffsetTo(long)->Address::: remote address add offset to
sun.jvm.hotspot.debugger.remote.RemoteAddress#addOffsetToAsOopHandle(long)->OopHandle::: remote address add offset to as oop handle
sun.jvm.hotspot.debugger.remote.RemoteAddress#minus(Address)->long:::(FIXME: any signed/unsigned issues? Should this work for       OopHandles?)
sun.jvm.hotspot.debugger.remote.RemoteAddress#lessThan(Address)->boolean::: remote address less than
sun.jvm.hotspot.debugger.remote.RemoteAddress#lessThanOrEqual(Address)->boolean::: remote address less than or equal
sun.jvm.hotspot.debugger.remote.RemoteAddress#greaterThan(Address)->boolean::: remote address greater than
sun.jvm.hotspot.debugger.remote.RemoteAddress#greaterThanOrEqual(Address)->boolean::: remote address greater than or equal
sun.jvm.hotspot.debugger.remote.RemoteAddress#andWithMask(long)->Address::: remote address and with mask
sun.jvm.hotspot.debugger.remote.RemoteAddress#orWithMask(long)->Address::: remote address or with mask
sun.jvm.hotspot.debugger.remote.RemoteAddress#xorWithMask(long)->Address::: remote address xor with mask
sun.jvm.hotspot.debugger.remote.RemoteAddress#asLongValue()->long::: remote address as long value
sun.jvm.hotspot.debugger.remote.RemoteAddress#getValue()->long::: remote address get value
sun.jvm.hotspot.debugger.remote.RemoteAddress#main(String[])->void::: remote address main
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getOS()->String::: remote debugger get s
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getCPU()->String::: remote debugger get u
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getMachineDescription()->MachineDescription::: remote debugger get machine description
sun.jvm.hotspot.debugger.remote.RemoteDebugger#lookupInProcess(String, String)->long::: remote debugger lookup in process
sun.jvm.hotspot.debugger.remote.RemoteDebugger#readBytesFromProcess(long, long)->ReadResult::: remote debugger read bytes from process
sun.jvm.hotspot.debugger.remote.RemoteDebugger#hasConsole()->boolean::: remote debugger has console
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getConsolePrompt()->String::: remote debugger get console prompt
sun.jvm.hotspot.debugger.remote.RemoteDebugger#consoleExecuteCommand(String)->String::: remote debugger console execute command
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getJBooleanSize()->long::: remote debugger get boolean size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getJByteSize()->long::: remote debugger get byte size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getJCharSize()->long::: remote debugger get char size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getJDoubleSize()->long::: remote debugger get double size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getJFloatSize()->long::: remote debugger get float size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getJIntSize()->long::: remote debugger get int size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getJLongSize()->long::: remote debugger get long size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getJShortSize()->long::: remote debugger get short size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getHeapOopSize()->long::: remote debugger get heap oop size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getNarrowOopBase()->long::: remote debugger get narrow oop base
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getNarrowOopShift()->int::: remote debugger get narrow oop shift
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getKlassPtrSize()->long::: remote debugger get klass ptr size
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getNarrowKlassBase()->long::: remote debugger get narrow klass base
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getNarrowKlassShift()->int::: remote debugger get narrow klass shift
sun.jvm.hotspot.debugger.remote.RemoteDebugger#areThreadsEqual(long, boolean, long, boolean)->boolean::: remote debugger are threads equal
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getThreadHashCode(long, boolean)->int::: remote debugger get thread hash code
sun.jvm.hotspot.debugger.remote.RemoteDebugger#getThreadIntegerRegisterSet(long, boolean)->long[]::: remote debugger get thread integer register set
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getThreadIntegerRegisterSet(Address)->long[]::: remote debugger client get thread integer register set
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getThreadIntegerRegisterSet(long)->long[]::: remote debugger client get thread integer register set
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#hasProcessList()->boolean:::Unimplemented in this class (remote remoteDebugger should already be attached)
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getProcessList()->List:::Unimplemented in this class (remote remoteDebugger should already be attached)
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#attach(int)->void:::Unimplemented in this class (remote remoteDebugger should already be attached)
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#attach(String, String)->void:::Unimplemented in this class (remote remoteDebugger should already be attached)
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#detach()->boolean:::Unimplemented in this class (remote remoteDebugger can not be detached)
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#parseAddress(String)->Address::: remote debugger client parse address
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getOS()->String::: remote debugger client get s
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getCPU()->String::: remote debugger client get u
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#hasConsole()->boolean::: remote debugger client has console
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#consoleExecuteCommand(String)->String::: remote debugger client console execute command
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getConsolePrompt()->String::: remote debugger client get console prompt
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getCDebugger()->CDebugger::: remote debugger client get debugger
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#lookup(String, String)->Address::: remote debugger client lookup
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#lookupOop(String, String)->OopHandle::: remote debugger client lookup oop
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#readCInteger(long, long, boolean)->long:::Need to override this to relax alignment checks on x86.
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#readJLong(long)->long::: remote debugger client read long
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#configureJavaPrimitiveTypeSizes(long, long, long, long, long, long, long, long)->void:::Unimplemented in this class (remote remoteDebugger should already be configured)
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#setMachineDescription(MachineDescription)->void::: remote debugger client set machine description
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getRemoteProcessAddressSize()->int::: remote debugger client get remote process address size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#addressValueToString(long)->String::: remote debugger client address value to string
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getAddressValue(Address)->long::: remote debugger client get address value
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#newAddress(long)->Address::: remote debugger client new address
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#readAddress(long)->RemoteAddress::: remote debugger client read address
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#readCompOopAddress(long)->RemoteAddress::: remote debugger client read comp oop address
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#readCompKlassAddress(long)->RemoteAddress::: remote debugger client read comp klass address
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#readOopHandle(long)->RemoteOopHandle::: remote debugger client read oop handle
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#readCompOopHandle(long)->RemoteOopHandle::: remote debugger client read comp oop handle
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#areThreadsEqual(Address, Address)->boolean::: remote debugger client are threads equal
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#areThreadsEqual(long, long)->boolean::: remote debugger client are threads equal
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#areThreadsEqual(Address, long)->boolean::: remote debugger client are threads equal
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#areThreadsEqual(long, Address)->boolean::: remote debugger client are threads equal
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getThreadHashCode(Address)->int::: remote debugger client get thread hash code
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getThreadHashCode(long)->int::: remote debugger client get thread hash code
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getThreadForIdentifierAddress(Address)->ThreadProxy::: remote debugger client get thread for identifier address
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getThreadForThreadId(long)->ThreadProxy::: remote debugger client get thread for thread id
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#getMachineDescription()->MachineDescription::: remote debugger client get machine description
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#readBytesFromProcess(long, long)->ReadResult:::This reads bytes from the remote process.
sun.jvm.hotspot.debugger.remote.RemoteDebuggerClient#writeBytesToProcess(long, long, byte[])->void::: remote debugger client write bytes to process
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getOS()->String::: remote debugger server get s
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getCPU()->String::: remote debugger server get u
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getMachineDescription()->MachineDescription::: remote debugger server get machine description
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#lookupInProcess(String, String)->long::: remote debugger server lookup in process
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#readBytesFromProcess(long, long)->ReadResult::: remote debugger server read bytes from process
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#hasConsole()->boolean::: remote debugger server has console
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getConsolePrompt()->String::: remote debugger server get console prompt
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#consoleExecuteCommand(String)->String::: remote debugger server console execute command
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getJBooleanSize()->long::: remote debugger server get boolean size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getJByteSize()->long::: remote debugger server get byte size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getJCharSize()->long::: remote debugger server get char size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getJDoubleSize()->long::: remote debugger server get double size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getJFloatSize()->long::: remote debugger server get float size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getJIntSize()->long::: remote debugger server get int size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getJLongSize()->long::: remote debugger server get long size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getJShortSize()->long::: remote debugger server get short size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getHeapOopSize()->long::: remote debugger server get heap oop size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getNarrowOopBase()->long::: remote debugger server get narrow oop base
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getNarrowOopShift()->int::: remote debugger server get narrow oop shift
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getKlassPtrSize()->long::: remote debugger server get klass ptr size
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getNarrowKlassBase()->long::: remote debugger server get narrow klass base
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getNarrowKlassShift()->int::: remote debugger server get narrow klass shift
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#areThreadsEqual(long, boolean, long, boolean)->boolean::: remote debugger server are threads equal
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getThreadHashCode(long, boolean)->int::: remote debugger server get thread hash code
sun.jvm.hotspot.debugger.remote.RemoteDebuggerServer#getThreadIntegerRegisterSet(long, boolean)->long[]::: remote debugger server get thread integer register set
sun.jvm.hotspot.debugger.remote.RemoteOopHandle#addOffsetTo(long)->Address::: remote oop handle add offset to
sun.jvm.hotspot.debugger.remote.RemoteOopHandle#andWithMask(long)->Address::: remote oop handle and with mask
sun.jvm.hotspot.debugger.remote.RemoteOopHandle#orWithMask(long)->Address::: remote oop handle or with mask
sun.jvm.hotspot.debugger.remote.RemoteOopHandle#xorWithMask(long)->Address::: remote oop handle xor with mask
sun.jvm.hotspot.debugger.remote.RemoteThread#canSetContext()->boolean::: remote thread can set context
sun.jvm.hotspot.debugger.remote.RemoteThread#setContext(ThreadContext)->void::: remote thread set context
sun.jvm.hotspot.debugger.remote.RemoteThread#equals(Object)->boolean::: remote thread equals
sun.jvm.hotspot.debugger.remote.RemoteThread#hashCode()->int::: remote thread hash code
sun.jvm.hotspot.debugger.remote.RemoteThread#toString()->String::: remote thread to string
sun.jvm.hotspot.debugger.remote.RemoteThreadFactory#createThreadWrapper(Address)->ThreadProxy::: remote thread factory create thread wrapper
sun.jvm.hotspot.debugger.remote.RemoteThreadFactory#createThreadWrapper(long)->ThreadProxy::: remote thread factory create thread wrapper
