jdk.internal.jline.console.completer.AggregateCompleter#getCompleters()->Collection:::Retrieve the collection of completers currently being aggregated.
jdk.internal.jline.console.completer.AggregateCompleter#complete(String, int, List)->int:::Perform a completion operation across all aggregated completers.
jdk.internal.jline.console.completer.AggregateCompleter#toString()->String::: aggregate completer to string
jdk.internal.jline.console.completer.AnsiStringsCompleter#getStrings()->Collection::: ansi strings completer get strings
jdk.internal.jline.console.completer.AnsiStringsCompleter#complete(String, int, List)->int::: ansi strings completer complete
jdk.internal.jline.console.completer.ArgumentCompleter#setStrict(boolean)->void:::If true, a completion at argument index N will only succeed if all the completions from 0-(N-1) also succeed.
jdk.internal.jline.console.completer.ArgumentCompleter#isStrict()->boolean:::Returns whether a completion at argument index N will success if all the completions from arguments 0-(N-1) also succeed.
jdk.internal.jline.console.completer.ArgumentCompleter#getDelimiter()->ArgumentDelimiter::: argument completer get delimiter
jdk.internal.jline.console.completer.ArgumentCompleter#getCompleters()->List::: argument completer get completers
jdk.internal.jline.console.completer.ArgumentCompleter#complete(String, int, List)->int::: argument completer complete
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentDelimiter#delimit(CharSequence, int)->ArgumentList:::Break the specified buffer into individual tokens that can be completed on their own.
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentDelimiter#isDelimiter(CharSequence, int)->boolean:::Returns true if the specified character is a whitespace parameter.
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#setQuoteChars(char[])->void::: abstract argument delimiter set quote chars
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#getQuoteChars()->char[]::: abstract argument delimiter get quote chars
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#setEscapeChars(char[])->void::: abstract argument delimiter set escape chars
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#getEscapeChars()->char[]::: abstract argument delimiter get escape chars
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#delimit(CharSequence, int)->ArgumentList::: abstract argument delimiter delimit
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#isDelimiter(CharSequence, int)->boolean:::Returns true if the specified character is a whitespace parameter
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#isQuoted(CharSequence, int)->boolean::: abstract argument delimiter is quoted
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#isQuoteChar(CharSequence, int)->boolean::: abstract argument delimiter is quote char
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#isEscapeChar(CharSequence, int)->boolean:::Check if this character is a valid escape char (i.e
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#isEscaped(CharSequence, int)->boolean:::Check if a character is escaped (i.e
jdk.internal.jline.console.completer.ArgumentCompleter.AbstractArgumentDelimiter#isDelimiterChar(CharSequence, int)->boolean:::Returns true if the character at the specified position if a delimiter
jdk.internal.jline.console.completer.ArgumentCompleter.WhitespaceArgumentDelimiter#isDelimiterChar(CharSequence, int)->boolean:::The character is a delimiter if it is whitespace, and the preceding character is not an escape character.
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#setCursorArgumentIndex(int)->void::: argument list set cursor argument index
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#getCursorArgumentIndex()->int::: argument list get cursor argument index
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#getCursorArgument()->String::: argument list get cursor argument
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#setArgumentPosition(int)->void::: argument list set argument position
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#getArgumentPosition()->int::: argument list get argument position
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#setArguments(String[])->void::: argument list set arguments
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#getArguments()->String[]::: argument list get arguments
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#setBufferPosition(int)->void::: argument list set buffer position
jdk.internal.jline.console.completer.ArgumentCompleter.ArgumentList#getBufferPosition()->int::: argument list get buffer position
jdk.internal.jline.console.completer.CandidateListCompletionHandler#getPrintSpaceAfterFullCompletion()->boolean::: candidate list completion handler get print space after full completion
jdk.internal.jline.console.completer.CandidateListCompletionHandler#setPrintSpaceAfterFullCompletion(boolean)->void::: candidate list completion handler set print space after full completion
jdk.internal.jline.console.completer.CandidateListCompletionHandler#isStripAnsi()->boolean::: candidate list completion handler is strip ansi
jdk.internal.jline.console.completer.CandidateListCompletionHandler#setStripAnsi(boolean)->void::: candidate list completion handler set strip ansi
jdk.internal.jline.console.completer.CandidateListCompletionHandler#complete(ConsoleReader, List, int)->boolean::: candidate list completion handler complete
jdk.internal.jline.console.completer.CandidateListCompletionHandler#setBuffer(ConsoleReader, CharSequence, int)->void::: candidate list completion handler set buffer
jdk.internal.jline.console.completer.CandidateListCompletionHandler#printCandidates(ConsoleReader, Collection)->void:::Print out the candidates
jdk.internal.jline.console.completer.Completer#complete(String, int, List)->int:::Populates candidates with a list of possible completions for the buffer
jdk.internal.jline.console.completer.CompletionHandler#complete(ConsoleReader, List, int)->boolean::: completion handler complete
jdk.internal.jline.console.completer.FileNameCompleter#complete(String, int, List)->int::: file name completer complete
jdk.internal.jline.console.completer.FileNameCompleter#separator()->String::: file name completer separator
jdk.internal.jline.console.completer.FileNameCompleter#getUserHome()->File::: file name completer get user home
jdk.internal.jline.console.completer.FileNameCompleter#getUserDir()->File::: file name completer get user dir
jdk.internal.jline.console.completer.FileNameCompleter#matchFiles(String, String, File[], List)->int::: file name completer match files
jdk.internal.jline.console.completer.FileNameCompleter#render(File, CharSequence)->CharSequence::: file name completer render
jdk.internal.jline.console.completer.NullCompleter#complete(String, int, List)->int::: null completer complete
jdk.internal.jline.console.completer.StringsCompleter#getStrings()->Collection::: strings completer get strings
jdk.internal.jline.console.completer.StringsCompleter#complete(String, int, List)->int::: strings completer complete
