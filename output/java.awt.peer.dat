ButtonPeer#setLabel(String):::Sets the label that is displayed on the button:::
CanvasPeer#getAppropriateGraphicsConfiguration(GraphicsConfiguration):::Requests a GC that best suits this Canvas:::
CheckboxMenuItemPeer#setState(boolean):::Sets the state of the checkbox to be checked true or unchecked false.:::
CheckboxPeer#setState(boolean):::Sets the state of the checkbox to be checked true or unchecked false.:::
CheckboxPeer#setCheckboxGroup(CheckboxGroup):::Sets the checkbox group for this checkbox:::
CheckboxPeer#setLabel(String):::Sets the label that should be displayed on the checkbox:::
ChoicePeer#add(String, int):::Adds an item with the string item to the combo box list at index index.:::
ChoicePeer#remove(int):::Removes the item at index index from the combo box list.:::
ChoicePeer#removeAll():::Removes all items from the combo box list.:::
ChoicePeer#select(int):::Selects the item at index index.:::
ComponentPeer#isObscured():::Determines if a component has been obscured, i.e:::
ComponentPeer#canDetermineObscurity():::Returns true when the peer can determine if a component has been obscured, false false otherwise.:::
ComponentPeer#setVisible(boolean):::Makes a component visible or invisible.:::
ComponentPeer#setEnabled(boolean):::Enables or disables a component:::
ComponentPeer#paint(Graphics):::Paints the component to the specified graphics context:::
ComponentPeer#print(Graphics):::Prints the component to the specified graphics context:::
ComponentPeer#setBounds(int, int, int, int, int):::Sets the location or size or both of the component:::
ComponentPeer#handleEvent(AWTEvent):::Called to let the component peer handle events.:::
ComponentPeer#coalescePaintEvent(PaintEvent):::Called to coalesce paint events.:::
ComponentPeer#getLocationOnScreen():::Determines the location of the component on the screen.:::
ComponentPeer#getPreferredSize():::Determines the preferred size of the component.:::
ComponentPeer#getMinimumSize():::Determines the minimum size of the component.:::
ComponentPeer#getColorModel():::Returns the color model used by the component.:::
ComponentPeer#getGraphics()::: component peer get graphics:::
ComponentPeer#getFontMetrics(Font):::Returns a font metrics object to determine the metrics properties of the specified font.:::
ComponentPeer#dispose():::Disposes all resources held by the component peer:::
ComponentPeer#setForeground(Color):::Sets the foreground color of this component.:::
ComponentPeer#setBackground(Color):::Sets the background color of this component.:::
ComponentPeer#setFont(Font):::Sets the font of this component.:::
ComponentPeer#updateCursorImmediately():::Updates the cursor of the component.:::
ComponentPeer#requestFocus(Component, boolean, boolean, long, Cause):::Requests focus on this component.:::
ComponentPeer#isFocusable():::Returns true when the component takes part in the focus traversal, false otherwise.:::
ComponentPeer#createImage(ImageProducer):::Creates an image using the specified image producer.:::
ComponentPeer#createImage(int, int)::: component peer create image:::
ComponentPeer#createVolatileImage(int, int)::: component peer create volatile image:::
ComponentPeer#prepareImage(Image, int, int, ImageObserver):::Prepare the specified image for rendering on this component:::
ComponentPeer#checkImage(Image, int, int, ImageObserver):::Determines the status of the construction of the screen representation of the specified image.:::
ComponentPeer#getGraphicsConfiguration():::Returns the graphics configuration that corresponds to this component.:::
ComponentPeer#handlesWheelScrolling():::Determines if the component handles wheel scrolling itself:::
ComponentPeer#createBuffers(int, BufferCapabilities):::Create numBuffers flipping buffers with the specified buffer capabilities.:::
ComponentPeer#getBackBuffer():::Returns the back buffer as image.:::
ComponentPeer#flip(int, int, int, int, BufferCapabilities.FlipContents):::Move the back buffer to the front buffer.:::
ComponentPeer#destroyBuffers():::Destroys all created buffers.:::
ComponentPeer#reparent(ContainerPeer):::Reparents this peer to the new parent referenced by newContainer peer:::
ComponentPeer#isReparentSupported():::Returns whether this peer supports reparenting to another parent without destroying the peer.:::
ComponentPeer#layout():::Used by lightweight implementations to tell a ComponentPeer to layout its sub-elements:::
ComponentPeer#applyShape(Region):::Applies the shape to the native component window.:::
ComponentPeer#setZOrder(ComponentPeer):::Lowers this component at the bottom of the above HW peer:::
ComponentPeer#updateGraphicsData(GraphicsConfiguration):::Updates internal data structures related to the component's GC.:::
ContainerPeer#getInsets():::Returns the insets of this container:::
ContainerPeer#beginValidate():::Notifies the peer that validation of the component tree is about to begin.:::
ContainerPeer#endValidate():::Notifies the peer that validation of the component tree is finished.:::
ContainerPeer#beginLayout():::Notifies the peer that layout is about to begin:::
ContainerPeer#endLayout():::Notifies the peer that layout is finished:::
DesktopPeer#isSupported(Action):::Returns whether the given action is supported on the current platform.:::
DesktopPeer#open(File):::Launches the associated application to open the given file:::
DesktopPeer#edit(File):::Launches the associated editor and opens the given file for editing:::
DesktopPeer#print(File):::Prints the given file with the native desktop printing facility, using the associated application's print command.:::
DesktopPeer#mail(URI):::Launches the mail composing window of the user default mail client, filling the message fields including to, cc, etc, with the values specified by the given mailto URL.:::
DesktopPeer#browse(URI):::Launches the user default browser to display the given URI.:::
DesktopPeer#addAppEventListener(SystemEventListener):::Adds sub-types of SystemEventListener to listen for notifications from the native system.:::
DesktopPeer#removeAppEventListener(SystemEventListener):::Removes sub-types of SystemEventListener to listen for notifications from the native system.:::
DesktopPeer#setAboutHandler(AboutHandler):::Installs a handler to show a custom About window for your application:::
DesktopPeer#setPreferencesHandler(PreferencesHandler):::Installs a handler to show a custom Preferences window for your application:::
DesktopPeer#setOpenFileHandler(OpenFilesHandler):::Installs the handler which is notified when the application is asked to open a list of files.:::
DesktopPeer#setPrintFileHandler(PrintFilesHandler):::Installs the handler which is notified when the application is asked to print a list of files.:::
DesktopPeer#setOpenURIHandler(OpenURIHandler):::Installs the handler which is notified when the application is asked to open a URL:::
DesktopPeer#setQuitHandler(QuitHandler):::Installs the handler which determines if the application should quit.:::
DesktopPeer#setQuitStrategy(QuitStrategy):::Sets the default strategy used to quit this application:::
DesktopPeer#enableSuddenTermination():::Enables this application to be suddenly terminated.:::
DesktopPeer#disableSuddenTermination():::Prevents this application from being suddenly terminated.:::
DesktopPeer#requestForeground(boolean):::Requests this application to move to the foreground.:::
DesktopPeer#openHelpViewer():::Opens the native help viewer application.:::
DesktopPeer#setDefaultMenuBar(JMenuBar):::Sets the default menu bar to use when there are no active frames.:::
DesktopPeer#browseFileDirectory(File):::Opens a folder containing the file in a default system file manager.:::return
DesktopPeer#moveToTrash(File):::Moves the specified file to the trash.:::return
DialogPeer#setTitle(String):::Sets the title on the dialog window.:::
DialogPeer#setResizable(boolean):::Sets if the dialog should be resizable or not.:::
DialogPeer#blockWindows(java.util.List):::Block the specified windows:::
FileDialogPeer#setFile(String):::Sets the selected file for this file dialog.:::
FileDialogPeer#setDirectory(String):::Sets the current directory for this file dialog.:::
FileDialogPeer#setFilenameFilter(FilenameFilter):::Sets the filename filter for filtering the displayed files.:::
FramePeer#setTitle(String):::Sets the title on the frame.:::
FramePeer#setMenuBar(MenuBar):::Sets the menu bar for the frame.:::
FramePeer#setResizable(boolean):::Sets if the frame should be resizable or not.:::
FramePeer#setState(int):::Changes the state of the frame.:::
FramePeer#getState():::Returns the current state of the frame.:::
FramePeer#setMaximizedBounds(Rectangle):::Sets the bounds of the frame when it becomes maximized.:::
FramePeer#setBoundsPrivate(int, int, int, int)::: frame peer set bounds private:::
FramePeer#getBoundsPrivate()::: frame peer get bounds private:::
FramePeer#emulateActivation(boolean):::Requests the peer to emulate window activation.:::
KeyboardFocusManagerPeer#setCurrentFocusedWindow(Window):::Sets the window that should become the focused window.:::
KeyboardFocusManagerPeer#getCurrentFocusedWindow():::Returns the currently focused window.:::
KeyboardFocusManagerPeer#setCurrentFocusOwner(Component):::Sets the component that should become the focus owner.:::
KeyboardFocusManagerPeer#getCurrentFocusOwner():::Returns the component that currently owns the input focus.:::
KeyboardFocusManagerPeer#clearGlobalFocusOwner(Window):::Clears the current global focus owner.:::
LabelPeer#setText(String):::Sets the text to be displayed on the label.:::
LabelPeer#setAlignment(int):::Sets the alignment of the label text.:::
ListPeer#getSelectedIndexes():::Returns the indices of the list items that are currently selected:::
ListPeer#add(String, int):::Adds an item to the list at the specified index.:::
ListPeer#delItems(int, int):::Deletes items from the list:::
ListPeer#removeAll():::Removes all items from the list.:::
ListPeer#select(int):::Selects the item at the specified index.:::
ListPeer#deselect(int):::De-selects the item at the specified index.:::
ListPeer#makeVisible(int):::Makes sure that the item at the specified index is visible, by scrolling the list or similar.:::
ListPeer#setMultipleMode(boolean):::Toggles multiple selection mode on or off.:::
ListPeer#getPreferredSize(int):::Returns the preferred size for a list with the specified number of rows.:::
ListPeer#getMinimumSize(int):::Returns the minimum size for a list with the specified number of rows.:::
MenuBarPeer#addMenu(Menu):::Adds a menu to the menu bar.:::
MenuBarPeer#delMenu(int):::Deletes a menu from the menu bar.:::
MenuBarPeer#addHelpMenu(Menu):::Adds a help menu to the menu bar.:::
MenuComponentPeer#dispose():::Disposes the menu component.:::
MenuComponentPeer#setFont(Font):::Sets the font for the menu component.:::
MenuItemPeer#setLabel(String):::Sets the label to be displayed in this menu item.:::
MenuItemPeer#setEnabled(boolean):::Enables or disables the menu item.:::
MenuPeer#addSeparator():::Adds a separator (e.g:::
MenuPeer#addItem(MenuItem):::Adds the specified menu item to the menu.:::
MenuPeer#delItem(int):::Removes the menu item at the specified index.:::
MouseInfoPeer#fillPointWithCoords(Point):::This method does two things: it fills the point fields with the current coordinates of the mouse cursor and returns the number of the screen device where the pointer is located:::
MouseInfoPeer#isWindowUnderMouse(Window):::Returns whether or not the window is located under the mouse pointer:::
PopupMenuPeer#show(Event):::Shows the popup menu.:::
RobotPeer#mouseMove(int, int):::Moves the mouse pointer to the specified screen location.:::
RobotPeer#mousePress(int):::Simulates a mouse press with the specified button(s).:::
RobotPeer#mouseRelease(int):::Simulates a mouse release with the specified button(s).:::
RobotPeer#mouseWheel(int):::Simulates mouse wheel action.:::
RobotPeer#keyPress(int):::Simulates a key press of the specified key.:::
RobotPeer#keyRelease(int):::Simulates a key release of the specified key.:::
RobotPeer#getRGBPixel(int, int):::Gets the RGB value of the specified pixel on screen.:::
RobotPeer#getRGBPixels(Rectangle):::Gets the RGB values of the specified screen area as an array.:::
RobotPeer#dispose():::Disposes the robot peer when it is not needed anymore.:::
ScrollbarPeer#setValues(int, int, int, int):::Sets the parameters for the scrollbar.:::
ScrollbarPeer#setLineIncrement(int):::Sets the line increment of the scrollbar.:::
ScrollbarPeer#setPageIncrement(int):::Sets the page increment of the scrollbar.:::
ScrollPanePeer#getHScrollbarHeight():::Returns the height of the horizontal scroll bar.:::
ScrollPanePeer#getVScrollbarWidth():::Returns the width of the vertical scroll bar.:::
ScrollPanePeer#setScrollPosition(int, int):::Sets the scroll position of the child.:::
ScrollPanePeer#childResized(int, int):::Called when the child component changes its size.:::
ScrollPanePeer#setUnitIncrement(Adjustable, int):::Sets the unit increment of one of the scroll pane's adjustables.:::
ScrollPanePeer#setValue(Adjustable, int):::Sets the value for one of the scroll pane's adjustables.:::
SystemTrayPeer#getTrayIconSize():::Returns the size of the system tray icon.:::
TaskbarPeer#requestUserAttention(boolean, boolean):::Requests user attention to this application.:::
TaskbarPeer#requestWindowUserAttention(Window):::Requests user attention to the specified window.:::
TaskbarPeer#setMenu(PopupMenu):::Attaches the contents of the provided PopupMenu to the application icon in system task area.:::
TaskbarPeer#getMenu():::Gets PopupMenu used to add items to this application's icon in system task area.:::return
TaskbarPeer#setIconImage(Image):::Changes this application's icon to the provided image.:::
TaskbarPeer#getIconImage():::Obtains an image of this application's icon.:::return
TaskbarPeer#setIconBadge(String):::Affixes a small system-provided badge to this application's icon:::
TaskbarPeer#setWindowIconBadge(Window, Image):::Affixes a small badge to this application's icon in task area for the specified window.:::
TaskbarPeer#setWindowProgressValue(Window, int):::Displays progress for specified window.:::
TaskbarPeer#setWindowProgressState(Window, State):::Sets a progress state for a specified window.:::
TaskbarPeer#setProgressValue(int):::Affixes a small system-provided progress bar to this application's icon.:::
TaskbarPeer#isSupported(Feature):::Tests support of Feature on current platform.:::return
TextAreaPeer#insert(String, int):::Inserts the specified text at the specified position in the document.:::
TextAreaPeer#replaceRange(String, int, int):::Replaces a range of text by the specified string.:::
TextAreaPeer#getPreferredSize(int, int):::Returns the preferred size of a textarea with the specified number of columns and rows.:::
TextAreaPeer#getMinimumSize(int, int):::Returns the minimum size of a textarea with the specified number of columns and rows.:::
TextComponentPeer#setEditable(boolean):::Sets if the text component should be editable or not.:::
TextComponentPeer#getText():::Returns the current content of the text component.:::
TextComponentPeer#setText(String):::Sets the content for the text component.:::
TextComponentPeer#getSelectionStart():::Returns the start index of the current selection.:::
TextComponentPeer#getSelectionEnd():::Returns the end index of the current selection.:::
TextComponentPeer#select(int, int):::Selects an area of the text component.:::
TextComponentPeer#setCaretPosition(int):::Sets the caret position of the text component.:::
TextComponentPeer#getCaretPosition():::Returns the current caret position.:::
TextComponentPeer#getInputMethodRequests():::Returns the input method requests.:::
TextFieldPeer#setEchoChar(char):::Sets the echo character.:::
TextFieldPeer#getPreferredSize(int):::Returns the preferred size of the text field with the specified number of columns.:::
TextFieldPeer#getMinimumSize(int):::Returns the minimum size of the text field with the specified number of columns.:::
TrayIconPeer#dispose():::Disposes the tray icon and releases and resources held by it.:::
TrayIconPeer#setToolTip(String):::Sets the tool tip for the tray icon.:::
TrayIconPeer#updateImage():::Updates the icon image:::
TrayIconPeer#displayMessage(String, String, String):::Displays a message at the tray icon.:::
TrayIconPeer#showPopupMenu(int, int):::Shows the popup menu of this tray icon at the specified position.:::
WindowPeer#toFront():::Makes this window the topmost window on the desktop.:::
WindowPeer#toBack():::Makes this window the bottommost window on the desktop.:::
WindowPeer#updateAlwaysOnTopState():::Updates the window's always-on-top state:::
WindowPeer#updateFocusableWindowState():::Updates the window's focusable state.:::
WindowPeer#setModalBlocked(Dialog, boolean):::Sets if this window is blocked by a modal dialog or not.:::
WindowPeer#updateMinimumSize():::Updates the minimum size on the peer.:::
WindowPeer#updateIconImages():::Updates the icons for the window.:::
WindowPeer#setOpacity(float):::Sets the level of opacity for the window.:::
WindowPeer#setOpaque(boolean):::Enables the per-pixel alpha support for the window.:::
WindowPeer#updateWindow():::Updates the native part of non-opaque window.:::
WindowPeer#repositionSecurityWarning():::Instructs the peer to update the position of the security warning.:::
