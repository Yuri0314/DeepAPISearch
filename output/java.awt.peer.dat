java.awt.peer.ButtonPeer#setLabel(String)->void:::Sets the label that is displayed on the button
java.awt.peer.CanvasPeer#getAppropriateGraphicsConfiguration(GraphicsConfiguration)->GraphicsConfiguration:::Requests a GC that best suits this Canvas
java.awt.peer.CheckboxMenuItemPeer#setState(boolean)->void:::Sets the state of the checkbox to be checked true or unchecked false.
java.awt.peer.CheckboxPeer#setState(boolean)->void:::Sets the state of the checkbox to be checked true or unchecked false.
java.awt.peer.CheckboxPeer#setCheckboxGroup(CheckboxGroup)->void:::Sets the checkbox group for this checkbox
java.awt.peer.CheckboxPeer#setLabel(String)->void:::Sets the label that should be displayed on the checkbox
java.awt.peer.ChoicePeer#add(String, int)->void:::Adds an item with the string item to the combo box list at index index.
java.awt.peer.ChoicePeer#remove(int)->void:::Removes the item at index index from the combo box list.
java.awt.peer.ChoicePeer#removeAll()->void:::Removes all items from the combo box list.
java.awt.peer.ChoicePeer#select(int)->void:::Selects the item at index index.
java.awt.peer.ComponentPeer#isObscured()->boolean:::Determines if a component has been obscured, i.e
java.awt.peer.ComponentPeer#canDetermineObscurity()->boolean:::Returns true when the peer can determine if a component has been obscured, false false otherwise.
java.awt.peer.ComponentPeer#setVisible(boolean)->void:::Makes a component visible or invisible.
java.awt.peer.ComponentPeer#setEnabled(boolean)->void:::Enables or disables a component
java.awt.peer.ComponentPeer#paint(Graphics)->void:::Paints the component to the specified graphics context
java.awt.peer.ComponentPeer#print(Graphics)->void:::Prints the component to the specified graphics context
java.awt.peer.ComponentPeer#setBounds(int, int, int, int, int)->void:::Sets the location or size or both of the component
java.awt.peer.ComponentPeer#handleEvent(AWTEvent)->void:::Called to let the component peer handle events.
java.awt.peer.ComponentPeer#coalescePaintEvent(PaintEvent)->void:::Called to coalesce paint events.
java.awt.peer.ComponentPeer#getLocationOnScreen()->Point:::Determines the location of the component on the screen.
java.awt.peer.ComponentPeer#getPreferredSize()->Dimension:::Determines the preferred size of the component.
java.awt.peer.ComponentPeer#getMinimumSize()->Dimension:::Determines the minimum size of the component.
java.awt.peer.ComponentPeer#getColorModel()->ColorModel:::Returns the color model used by the component.
java.awt.peer.ComponentPeer#getGraphics()->Graphics::: component peer get graphics
java.awt.peer.ComponentPeer#getFontMetrics(Font)->FontMetrics:::Returns a font metrics object to determine the metrics properties of the specified font.
java.awt.peer.ComponentPeer#dispose()->void:::Disposes all resources held by the component peer
java.awt.peer.ComponentPeer#setForeground(Color)->void:::Sets the foreground color of this component.
java.awt.peer.ComponentPeer#setBackground(Color)->void:::Sets the background color of this component.
java.awt.peer.ComponentPeer#setFont(Font)->void:::Sets the font of this component.
java.awt.peer.ComponentPeer#updateCursorImmediately()->void:::Updates the cursor of the component.
java.awt.peer.ComponentPeer#requestFocus(Component, boolean, boolean, long, Cause)->boolean:::Requests focus on this component.
java.awt.peer.ComponentPeer#isFocusable()->boolean:::Returns true when the component takes part in the focus traversal, false otherwise.
java.awt.peer.ComponentPeer#createImage(ImageProducer)->Image:::Creates an image using the specified image producer.
java.awt.peer.ComponentPeer#createImage(int, int)->Image::: component peer create image
java.awt.peer.ComponentPeer#createVolatileImage(int, int)->VolatileImage::: component peer create volatile image
java.awt.peer.ComponentPeer#prepareImage(Image, int, int, ImageObserver)->boolean:::Prepare the specified image for rendering on this component
java.awt.peer.ComponentPeer#checkImage(Image, int, int, ImageObserver)->int:::Determines the status of the construction of the screen representation of the specified image.
java.awt.peer.ComponentPeer#getGraphicsConfiguration()->GraphicsConfiguration:::Returns the graphics configuration that corresponds to this component.
java.awt.peer.ComponentPeer#handlesWheelScrolling()->boolean:::Determines if the component handles wheel scrolling itself
java.awt.peer.ComponentPeer#createBuffers(int, BufferCapabilities)->void:::Create numBuffers flipping buffers with the specified buffer capabilities.
java.awt.peer.ComponentPeer#getBackBuffer()->Image:::Returns the back buffer as image.
java.awt.peer.ComponentPeer#flip(int, int, int, int, BufferCapabilities.FlipContents)->void:::Move the back buffer to the front buffer.
java.awt.peer.ComponentPeer#destroyBuffers()->void:::Destroys all created buffers.
java.awt.peer.ComponentPeer#reparent(ContainerPeer)->void:::Reparents this peer to the new parent referenced by newContainer peer
java.awt.peer.ComponentPeer#isReparentSupported()->boolean:::Returns whether this peer supports reparenting to another parent without destroying the peer.
java.awt.peer.ComponentPeer#layout()->void:::Used by lightweight implementations to tell a ComponentPeer to layout its sub-elements
java.awt.peer.ComponentPeer#applyShape(Region)->void:::Applies the shape to the native component window.
java.awt.peer.ComponentPeer#setZOrder(ComponentPeer)->void:::Lowers this component at the bottom of the above HW peer
java.awt.peer.ComponentPeer#updateGraphicsData(GraphicsConfiguration)->boolean:::Updates internal data structures related to the component's GC.
java.awt.peer.ContainerPeer#getInsets()->Insets:::Returns the insets of this container
java.awt.peer.ContainerPeer#beginValidate()->void:::Notifies the peer that validation of the component tree is about to begin.
java.awt.peer.ContainerPeer#endValidate()->void:::Notifies the peer that validation of the component tree is finished.
java.awt.peer.ContainerPeer#beginLayout()->void:::Notifies the peer that layout is about to begin
java.awt.peer.ContainerPeer#endLayout()->void:::Notifies the peer that layout is finished
java.awt.peer.DesktopPeer#isSupported(Action)->boolean:::Returns whether the given action is supported on the current platform.
java.awt.peer.DesktopPeer#open(File)->void:::Launches the associated application to open the given file
java.awt.peer.DesktopPeer#edit(File)->void:::Launches the associated editor and opens the given file for editing
java.awt.peer.DesktopPeer#print(File)->void:::Prints the given file with the native desktop printing facility, using the associated application's print command.
java.awt.peer.DesktopPeer#mail(URI)->void:::Launches the mail composing window of the user default mail client, filling the message fields including to, cc, etc, with the values specified by the given mailto URL.
java.awt.peer.DesktopPeer#browse(URI)->void:::Launches the user default browser to display the given URI.
java.awt.peer.DesktopPeer#addAppEventListener(SystemEventListener)->void:::Adds sub-types of SystemEventListener to listen for notifications from the native system.
java.awt.peer.DesktopPeer#removeAppEventListener(SystemEventListener)->void:::Removes sub-types of SystemEventListener to listen for notifications from the native system.
java.awt.peer.DesktopPeer#setAboutHandler(AboutHandler)->void:::Installs a handler to show a custom About window for your application
java.awt.peer.DesktopPeer#setPreferencesHandler(PreferencesHandler)->void:::Installs a handler to show a custom Preferences window for your application
java.awt.peer.DesktopPeer#setOpenFileHandler(OpenFilesHandler)->void:::Installs the handler which is notified when the application is asked to open a list of files.
java.awt.peer.DesktopPeer#setPrintFileHandler(PrintFilesHandler)->void:::Installs the handler which is notified when the application is asked to print a list of files.
java.awt.peer.DesktopPeer#setOpenURIHandler(OpenURIHandler)->void:::Installs the handler which is notified when the application is asked to open a URL
java.awt.peer.DesktopPeer#setQuitHandler(QuitHandler)->void:::Installs the handler which determines if the application should quit.
java.awt.peer.DesktopPeer#setQuitStrategy(QuitStrategy)->void:::Sets the default strategy used to quit this application
java.awt.peer.DesktopPeer#enableSuddenTermination()->void:::Enables this application to be suddenly terminated.
java.awt.peer.DesktopPeer#disableSuddenTermination()->void:::Prevents this application from being suddenly terminated.
java.awt.peer.DesktopPeer#requestForeground(boolean)->void:::Requests this application to move to the foreground.
java.awt.peer.DesktopPeer#openHelpViewer()->void:::Opens the native help viewer application.
java.awt.peer.DesktopPeer#setDefaultMenuBar(JMenuBar)->void:::Sets the default menu bar to use when there are no active frames.
java.awt.peer.DesktopPeer#browseFileDirectory(File)->boolean:::Opens a folder containing the file in a default system file manager.
java.awt.peer.DesktopPeer#moveToTrash(File)->boolean:::Moves the specified file to the trash.
java.awt.peer.DialogPeer#setTitle(String)->void:::Sets the title on the dialog window.
java.awt.peer.DialogPeer#setResizable(boolean)->void:::Sets if the dialog should be resizable or not.
java.awt.peer.DialogPeer#blockWindows(java.util.List)->void:::Block the specified windows
java.awt.peer.FileDialogPeer#setFile(String)->void:::Sets the selected file for this file dialog.
java.awt.peer.FileDialogPeer#setDirectory(String)->void:::Sets the current directory for this file dialog.
java.awt.peer.FileDialogPeer#setFilenameFilter(FilenameFilter)->void:::Sets the filename filter for filtering the displayed files.
java.awt.peer.FramePeer#setTitle(String)->void:::Sets the title on the frame.
java.awt.peer.FramePeer#setMenuBar(MenuBar)->void:::Sets the menu bar for the frame.
java.awt.peer.FramePeer#setResizable(boolean)->void:::Sets if the frame should be resizable or not.
java.awt.peer.FramePeer#setState(int)->void:::Changes the state of the frame.
java.awt.peer.FramePeer#getState()->int:::Returns the current state of the frame.
java.awt.peer.FramePeer#setMaximizedBounds(Rectangle)->void:::Sets the bounds of the frame when it becomes maximized.
java.awt.peer.FramePeer#setBoundsPrivate(int, int, int, int)->void::: frame peer set bounds private
java.awt.peer.FramePeer#getBoundsPrivate()->Rectangle::: frame peer get bounds private
java.awt.peer.FramePeer#emulateActivation(boolean)->void:::Requests the peer to emulate window activation.
java.awt.peer.KeyboardFocusManagerPeer#setCurrentFocusedWindow(Window)->void:::Sets the window that should become the focused window.
java.awt.peer.KeyboardFocusManagerPeer#getCurrentFocusedWindow()->Window:::Returns the currently focused window.
java.awt.peer.KeyboardFocusManagerPeer#setCurrentFocusOwner(Component)->void:::Sets the component that should become the focus owner.
java.awt.peer.KeyboardFocusManagerPeer#getCurrentFocusOwner()->Component:::Returns the component that currently owns the input focus.
java.awt.peer.KeyboardFocusManagerPeer#clearGlobalFocusOwner(Window)->void:::Clears the current global focus owner.
java.awt.peer.LabelPeer#setText(String)->void:::Sets the text to be displayed on the label.
java.awt.peer.LabelPeer#setAlignment(int)->void:::Sets the alignment of the label text.
java.awt.peer.ListPeer#getSelectedIndexes()->int[]:::Returns the indices of the list items that are currently selected
java.awt.peer.ListPeer#add(String, int)->void:::Adds an item to the list at the specified index.
java.awt.peer.ListPeer#delItems(int, int)->void:::Deletes items from the list
java.awt.peer.ListPeer#removeAll()->void:::Removes all items from the list.
java.awt.peer.ListPeer#select(int)->void:::Selects the item at the specified index.
java.awt.peer.ListPeer#deselect(int)->void:::De-selects the item at the specified index.
java.awt.peer.ListPeer#makeVisible(int)->void:::Makes sure that the item at the specified index is visible, by scrolling the list or similar.
java.awt.peer.ListPeer#setMultipleMode(boolean)->void:::Toggles multiple selection mode on or off.
java.awt.peer.ListPeer#getPreferredSize(int)->Dimension:::Returns the preferred size for a list with the specified number of rows.
java.awt.peer.ListPeer#getMinimumSize(int)->Dimension:::Returns the minimum size for a list with the specified number of rows.
java.awt.peer.MenuBarPeer#addMenu(Menu)->void:::Adds a menu to the menu bar.
java.awt.peer.MenuBarPeer#delMenu(int)->void:::Deletes a menu from the menu bar.
java.awt.peer.MenuBarPeer#addHelpMenu(Menu)->void:::Adds a help menu to the menu bar.
java.awt.peer.MenuComponentPeer#dispose()->void:::Disposes the menu component.
java.awt.peer.MenuComponentPeer#setFont(Font)->void:::Sets the font for the menu component.
java.awt.peer.MenuItemPeer#setLabel(String)->void:::Sets the label to be displayed in this menu item.
java.awt.peer.MenuItemPeer#setEnabled(boolean)->void:::Enables or disables the menu item.
java.awt.peer.MenuPeer#addSeparator()->void:::Adds a separator (e.g
java.awt.peer.MenuPeer#addItem(MenuItem)->void:::Adds the specified menu item to the menu.
java.awt.peer.MenuPeer#delItem(int)->void:::Removes the menu item at the specified index.
java.awt.peer.MouseInfoPeer#fillPointWithCoords(Point)->int:::This method does two things: it fills the point fields with the current coordinates of the mouse cursor and returns the number of the screen device where the pointer is located
java.awt.peer.MouseInfoPeer#isWindowUnderMouse(Window)->boolean:::Returns whether or not the window is located under the mouse pointer
java.awt.peer.PopupMenuPeer#show(Event)->void:::Shows the popup menu.
java.awt.peer.RobotPeer#mouseMove(int, int)->void:::Moves the mouse pointer to the specified screen location.
java.awt.peer.RobotPeer#mousePress(int)->void:::Simulates a mouse press with the specified button(s).
java.awt.peer.RobotPeer#mouseRelease(int)->void:::Simulates a mouse release with the specified button(s).
java.awt.peer.RobotPeer#mouseWheel(int)->void:::Simulates mouse wheel action.
java.awt.peer.RobotPeer#keyPress(int)->void:::Simulates a key press of the specified key.
java.awt.peer.RobotPeer#keyRelease(int)->void:::Simulates a key release of the specified key.
java.awt.peer.RobotPeer#getRGBPixel(int, int)->int:::Gets the RGB value of the specified pixel on screen.
java.awt.peer.RobotPeer#getRGBPixels(Rectangle)->int[]:::Gets the RGB values of the specified screen area as an array.
java.awt.peer.RobotPeer#dispose()->void:::Disposes the robot peer when it is not needed anymore.
java.awt.peer.ScrollbarPeer#setValues(int, int, int, int)->void:::Sets the parameters for the scrollbar.
java.awt.peer.ScrollbarPeer#setLineIncrement(int)->void:::Sets the line increment of the scrollbar.
java.awt.peer.ScrollbarPeer#setPageIncrement(int)->void:::Sets the page increment of the scrollbar.
java.awt.peer.ScrollPanePeer#getHScrollbarHeight()->int:::Returns the height of the horizontal scroll bar.
java.awt.peer.ScrollPanePeer#getVScrollbarWidth()->int:::Returns the width of the vertical scroll bar.
java.awt.peer.ScrollPanePeer#setScrollPosition(int, int)->void:::Sets the scroll position of the child.
java.awt.peer.ScrollPanePeer#childResized(int, int)->void:::Called when the child component changes its size.
java.awt.peer.ScrollPanePeer#setUnitIncrement(Adjustable, int)->void:::Sets the unit increment of one of the scroll pane's adjustables.
java.awt.peer.ScrollPanePeer#setValue(Adjustable, int)->void:::Sets the value for one of the scroll pane's adjustables.
java.awt.peer.SystemTrayPeer#getTrayIconSize()->Dimension:::Returns the size of the system tray icon.
java.awt.peer.TaskbarPeer#requestUserAttention(boolean, boolean)->void:::Requests user attention to this application.
java.awt.peer.TaskbarPeer#requestWindowUserAttention(Window)->void:::Requests user attention to the specified window.
java.awt.peer.TaskbarPeer#setMenu(PopupMenu)->void:::Attaches the contents of the provided PopupMenu to the application icon in system task area.
java.awt.peer.TaskbarPeer#getMenu()->PopupMenu:::Gets PopupMenu used to add items to this application's icon in system task area.
java.awt.peer.TaskbarPeer#setIconImage(Image)->void:::Changes this application's icon to the provided image.
java.awt.peer.TaskbarPeer#getIconImage()->Image:::Obtains an image of this application's icon.
java.awt.peer.TaskbarPeer#setIconBadge(String)->void:::Affixes a small system-provided badge to this application's icon
java.awt.peer.TaskbarPeer#setWindowIconBadge(Window, Image)->void:::Affixes a small badge to this application's icon in task area for the specified window.
java.awt.peer.TaskbarPeer#setWindowProgressValue(Window, int)->void:::Displays progress for specified window.
java.awt.peer.TaskbarPeer#setWindowProgressState(Window, State)->void:::Sets a progress state for a specified window.
java.awt.peer.TaskbarPeer#setProgressValue(int)->void:::Affixes a small system-provided progress bar to this application's icon.
java.awt.peer.TaskbarPeer#isSupported(Feature)->boolean:::Tests support of Feature on current platform.
java.awt.peer.TextAreaPeer#insert(String, int)->void:::Inserts the specified text at the specified position in the document.
java.awt.peer.TextAreaPeer#replaceRange(String, int, int)->void:::Replaces a range of text by the specified string.
java.awt.peer.TextAreaPeer#getPreferredSize(int, int)->Dimension:::Returns the preferred size of a textarea with the specified number of columns and rows.
java.awt.peer.TextAreaPeer#getMinimumSize(int, int)->Dimension:::Returns the minimum size of a textarea with the specified number of columns and rows.
java.awt.peer.TextComponentPeer#setEditable(boolean)->void:::Sets if the text component should be editable or not.
java.awt.peer.TextComponentPeer#getText()->String:::Returns the current content of the text component.
java.awt.peer.TextComponentPeer#setText(String)->void:::Sets the content for the text component.
java.awt.peer.TextComponentPeer#getSelectionStart()->int:::Returns the start index of the current selection.
java.awt.peer.TextComponentPeer#getSelectionEnd()->int:::Returns the end index of the current selection.
java.awt.peer.TextComponentPeer#select(int, int)->void:::Selects an area of the text component.
java.awt.peer.TextComponentPeer#setCaretPosition(int)->void:::Sets the caret position of the text component.
java.awt.peer.TextComponentPeer#getCaretPosition()->int:::Returns the current caret position.
java.awt.peer.TextComponentPeer#getInputMethodRequests()->InputMethodRequests:::Returns the input method requests.
java.awt.peer.TextFieldPeer#setEchoChar(char)->void:::Sets the echo character.
java.awt.peer.TextFieldPeer#getPreferredSize(int)->Dimension:::Returns the preferred size of the text field with the specified number of columns.
java.awt.peer.TextFieldPeer#getMinimumSize(int)->Dimension:::Returns the minimum size of the text field with the specified number of columns.
java.awt.peer.TrayIconPeer#dispose()->void:::Disposes the tray icon and releases and resources held by it.
java.awt.peer.TrayIconPeer#setToolTip(String)->void:::Sets the tool tip for the tray icon.
java.awt.peer.TrayIconPeer#updateImage()->void:::Updates the icon image
java.awt.peer.TrayIconPeer#displayMessage(String, String, String)->void:::Displays a message at the tray icon.
java.awt.peer.TrayIconPeer#showPopupMenu(int, int)->void:::Shows the popup menu of this tray icon at the specified position.
java.awt.peer.WindowPeer#toFront()->void:::Makes this window the topmost window on the desktop.
java.awt.peer.WindowPeer#toBack()->void:::Makes this window the bottommost window on the desktop.
java.awt.peer.WindowPeer#updateAlwaysOnTopState()->void:::Updates the window's always-on-top state
java.awt.peer.WindowPeer#updateFocusableWindowState()->void:::Updates the window's focusable state.
java.awt.peer.WindowPeer#setModalBlocked(Dialog, boolean)->void:::Sets if this window is blocked by a modal dialog or not.
java.awt.peer.WindowPeer#updateMinimumSize()->void:::Updates the minimum size on the peer.
java.awt.peer.WindowPeer#updateIconImages()->void:::Updates the icons for the window.
java.awt.peer.WindowPeer#setOpacity(float)->void:::Sets the level of opacity for the window.
java.awt.peer.WindowPeer#setOpaque(boolean)->void:::Enables the per-pixel alpha support for the window.
java.awt.peer.WindowPeer#updateWindow()->void:::Updates the native part of non-opaque window.
java.awt.peer.WindowPeer#repositionSecurityWarning()->void:::Instructs the peer to update the position of the security warning.
