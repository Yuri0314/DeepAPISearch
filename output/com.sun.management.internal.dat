com.sun.management.internal.DiagnosticCommandArgumentInfo#getName()->String:::Returns the argument name.
com.sun.management.internal.DiagnosticCommandArgumentInfo#getDescription()->String:::Returns the argument description.
com.sun.management.internal.DiagnosticCommandArgumentInfo#getType()->String:::Returns the argument type.
com.sun.management.internal.DiagnosticCommandArgumentInfo#getDefault()->String:::Returns the default value as a String if a default value is defined, null otherwise.
com.sun.management.internal.DiagnosticCommandArgumentInfo#isMandatory()->boolean:::Returns true if the argument is mandatory,         false otherwise.
com.sun.management.internal.DiagnosticCommandArgumentInfo#isOption()->boolean:::Returns true if the argument is an option,         false otherwise
com.sun.management.internal.DiagnosticCommandArgumentInfo#isMultiple()->boolean:::Returns true if the argument can be specified multiple times,         false otherwise.
com.sun.management.internal.DiagnosticCommandArgumentInfo#getPosition()->int:::Returns the expected position of this argument if it is not an option,         -1 otherwise
com.sun.management.internal.DiagnosticCommandImpl#getDiagnosticCommandMBean()->DiagnosticCommandMBean::: diagnostic command impl get diagnostic command bean
com.sun.management.internal.DiagnosticCommandImpl#getAttribute(String)->Object::: diagnostic command impl get attribute
com.sun.management.internal.DiagnosticCommandImpl#setAttribute(Attribute)->void::: diagnostic command impl set attribute
com.sun.management.internal.DiagnosticCommandImpl#getAttributes(String[])->AttributeList::: diagnostic command impl get attributes
com.sun.management.internal.DiagnosticCommandImpl#setAttributes(AttributeList)->AttributeList::: diagnostic command impl set attributes
com.sun.management.internal.DiagnosticCommandImpl#getMBeanInfo()->MBeanInfo::: diagnostic command impl get bean info
com.sun.management.internal.DiagnosticCommandImpl#invoke(String, Object[], String[])->Object::: diagnostic command impl invoke
com.sun.management.internal.DiagnosticCommandImpl#getNotificationInfo()->MBeanNotificationInfo[]::: diagnostic command impl get notification info
com.sun.management.internal.DiagnosticCommandImpl#addNotificationListener(NotificationListener, NotificationFilter, Object)->void::: diagnostic command impl add notification listener
com.sun.management.internal.DiagnosticCommandImpl#removeNotificationListener(NotificationListener)->void::: diagnostic command impl remove notification listener
com.sun.management.internal.DiagnosticCommandImpl#removeNotificationListener(NotificationListener, NotificationFilter, Object)->void::: diagnostic command impl remove notification listener
com.sun.management.internal.DiagnosticCommandInfo#getName()->String:::Returns the diagnostic command name.
com.sun.management.internal.DiagnosticCommandInfo#getDescription()->String:::Returns the diagnostic command description.
com.sun.management.internal.DiagnosticCommandInfo#getImpact()->String:::Returns the potential impact of the diagnostic command execution         on the Java virtual machine behavior.
com.sun.management.internal.DiagnosticCommandInfo#getPermissionClass()->String:::Returns the name of the permission class required to be allowed         to invoke the diagnostic command, or null if no permission         is required.
com.sun.management.internal.DiagnosticCommandInfo#getPermissionName()->String:::Returns the permission name required to be allowed to invoke the         diagnostic command, or null if no permission is required.
com.sun.management.internal.DiagnosticCommandInfo#getPermissionAction()->String:::Returns the permission action required to be allowed to invoke the         diagnostic command, or null if no permission is required or         if the permission has no action specified.
com.sun.management.internal.DiagnosticCommandInfo#isEnabled()->boolean:::Returns true if the diagnostic command is enabled,         false otherwise
com.sun.management.internal.DiagnosticCommandInfo#getArgumentsInfo()->List:::Returns the list of the diagnostic command arguments description
com.sun.management.internal.Flag#getValue()->Object::: flag get value
com.sun.management.internal.Flag#isWriteable()->boolean::: flag is writeable
com.sun.management.internal.Flag#isExternal()->boolean::: flag is external
com.sun.management.internal.Flag#getVMOption()->VMOption::: flag get option
com.sun.management.internal.Flag#getFlag(String)->Flag::: flag get flag
com.sun.management.internal.Flag#getAllFlags()->List::: flag get all flags
com.sun.management.internal.Flag#setLongValue(String, long)->void::: flag set long value
com.sun.management.internal.Flag#setDoubleValue(String, double)->void::: flag set double value
com.sun.management.internal.Flag#setBooleanValue(String, boolean)->void::: flag set boolean value
com.sun.management.internal.Flag#setStringValue(String, String)->void::: flag set string value
com.sun.management.internal.GarbageCollectionNotifInfoCompositeData#getGarbageCollectionNotifInfo()->GarbageCollectionNotificationInfo::: garbage collection notif info composite data get garbage collection notif info
com.sun.management.internal.GarbageCollectionNotifInfoCompositeData#toCompositeData(GarbageCollectionNotificationInfo)->CompositeData::: garbage collection notif info composite data to composite data
com.sun.management.internal.GarbageCollectionNotifInfoCompositeData#getCompositeData()->CompositeData::: garbage collection notif info composite data get composite data
com.sun.management.internal.GarbageCollectionNotifInfoCompositeData#getGcName(CompositeData)->String::: garbage collection notif info composite data get gc name
com.sun.management.internal.GarbageCollectionNotifInfoCompositeData#getGcAction(CompositeData)->String::: garbage collection notif info composite data get gc action
com.sun.management.internal.GarbageCollectionNotifInfoCompositeData#getGcCause(CompositeData)->String::: garbage collection notif info composite data get gc cause
com.sun.management.internal.GarbageCollectionNotifInfoCompositeData#getGcInfo(CompositeData)->GcInfo::: garbage collection notif info composite data get gc info
com.sun.management.internal.GarbageCollectionNotifInfoCompositeData#validateCompositeData(CompositeData)->void:::Validate if the input CompositeData has the expected CompositeType (i.e
com.sun.management.internal.GarbageCollectorExtImpl#getLastGcInfo()->GcInfo::: garbage collector ext impl get last gc info
com.sun.management.internal.GarbageCollectorExtImpl#getNotificationInfo()->MBeanNotificationInfo[]::: garbage collector ext impl get notification info
com.sun.management.internal.GarbageCollectorExtImpl#createGCNotification(long, String, String, String, GcInfo)->void::: garbage collector ext impl create notification
com.sun.management.internal.GarbageCollectorExtImpl#addNotificationListener(NotificationListener, NotificationFilter, Object)->void::: garbage collector ext impl add notification listener
com.sun.management.internal.GarbageCollectorExtImpl#removeNotificationListener(NotificationListener)->void::: garbage collector ext impl remove notification listener
com.sun.management.internal.GarbageCollectorExtImpl#removeNotificationListener(NotificationListener, NotificationFilter, Object)->void::: garbage collector ext impl remove notification listener
com.sun.management.internal.GcInfoBuilder#getLastGcInfo()->GcInfo::: gc info builder get last gc info
com.sun.management.internal.GcInfoBuilder#getPoolNames()->String[]::: gc info builder get pool names
com.sun.management.internal.GcInfoBuilder#getGcExtItemCount()->int::: gc info builder get gc ext item count
com.sun.management.internal.GcInfoBuilder#getGcInfoCompositeType()->CompositeType::: gc info builder get gc info composite type
com.sun.management.internal.GcInfoBuilder#getItemNames()->String[]::: gc info builder get item names
com.sun.management.internal.GcInfoCompositeData#getGcInfo()->GcInfo::: gc info composite data get gc info
com.sun.management.internal.GcInfoCompositeData#toCompositeData(GcInfo)->CompositeData::: gc info composite data to composite data
com.sun.management.internal.GcInfoCompositeData#getCompositeData()->CompositeData::: gc info composite data get composite data
com.sun.management.internal.GcInfoCompositeData#getBaseGcInfoItemNames()->String[]::: gc info composite data get base gc info item names
com.sun.management.internal.GcInfoCompositeData#getBaseGcInfoItemTypes()->OpenType[]::: gc info composite data get base gc info item types
com.sun.management.internal.GcInfoCompositeData#getId(CompositeData)->long::: gc info composite data get id
com.sun.management.internal.GcInfoCompositeData#getStartTime(CompositeData)->long::: gc info composite data get start time
com.sun.management.internal.GcInfoCompositeData#getEndTime(CompositeData)->long::: gc info composite data get end time
com.sun.management.internal.GcInfoCompositeData#getMemoryUsageBeforeGc(CompositeData)->Map::: gc info composite data get memory usage before gc
com.sun.management.internal.GcInfoCompositeData#cast(Object)->Map::: gc info composite data cast
com.sun.management.internal.GcInfoCompositeData#getMemoryUsageAfterGc(CompositeData)->Map::: gc info composite data get memory usage after gc
com.sun.management.internal.GcInfoCompositeData#validateCompositeData(CompositeData)->void:::Returns true if the input CompositeData has the expected CompositeType (i.e
com.sun.management.internal.GcInfoCompositeData#getBaseGcInfoCompositeType()->CompositeType::: gc info composite data get base gc info composite type
com.sun.management.internal.HotSpotDiagnostic#dumpHeap(String, boolean)->void::: hot spot diagnostic dump heap
com.sun.management.internal.HotSpotDiagnostic#getDiagnosticOptions()->List::: hot spot diagnostic get diagnostic options
com.sun.management.internal.HotSpotDiagnostic#getVMOption(String)->VMOption::: hot spot diagnostic get option
com.sun.management.internal.HotSpotDiagnostic#setVMOption(String, String)->void::: hot spot diagnostic set option
com.sun.management.internal.HotSpotDiagnostic#getObjectName()->ObjectName::: hot spot diagnostic get object name
com.sun.management.internal.HotSpotThreadImpl#isThreadAllocatedMemorySupported()->boolean::: hot spot thread impl is thread allocated memory supported
com.sun.management.internal.HotSpotThreadImpl#isThreadAllocatedMemoryEnabled()->boolean::: hot spot thread impl is thread allocated memory enabled
com.sun.management.internal.HotSpotThreadImpl#getThreadCpuTime(long[])->long[]::: hot spot thread impl get thread cpu time
com.sun.management.internal.HotSpotThreadImpl#getThreadUserTime(long[])->long[]::: hot spot thread impl get thread user time
com.sun.management.internal.HotSpotThreadImpl#getThreadAllocatedBytes(long)->long::: hot spot thread impl get thread allocated bytes
com.sun.management.internal.HotSpotThreadImpl#getThreadAllocatedBytes(long[])->long[]::: hot spot thread impl get thread allocated bytes
com.sun.management.internal.HotSpotThreadImpl#setThreadAllocatedMemoryEnabled(boolean)->void::: hot spot thread impl set thread allocated memory enabled
com.sun.management.internal.OperatingSystemImpl#getCommittedVirtualMemorySize()->long::: operating system impl get committed virtual memory size
com.sun.management.internal.OperatingSystemImpl#getTotalSwapSpaceSize()->long::: operating system impl get total swap space size
com.sun.management.internal.OperatingSystemImpl#getFreeSwapSpaceSize()->long::: operating system impl get free swap space size
com.sun.management.internal.OperatingSystemImpl#getProcessCpuTime()->long::: operating system impl get process cpu time
com.sun.management.internal.OperatingSystemImpl#getFreePhysicalMemorySize()->long::: operating system impl get free physical memory size
com.sun.management.internal.OperatingSystemImpl#getTotalPhysicalMemorySize()->long::: operating system impl get total physical memory size
com.sun.management.internal.OperatingSystemImpl#getSystemCpuLoad()->double::: operating system impl get system cpu load
com.sun.management.internal.OperatingSystemImpl#getProcessCpuLoad()->double::: operating system impl get process cpu load
com.sun.management.internal.PlatformMBeanProviderImpl#getPlatformComponentList()->List>::: platform bean provider impl get platform component list
com.sun.management.internal.VMOptionCompositeData#getVMOption()->VMOption::: option composite data get option
com.sun.management.internal.VMOptionCompositeData#toCompositeData(VMOption)->CompositeData::: option composite data to composite data
com.sun.management.internal.VMOptionCompositeData#getCompositeData()->CompositeData::: option composite data get composite data
com.sun.management.internal.VMOptionCompositeData#getVMOptionCompositeType()->CompositeType::: option composite data get option composite type
com.sun.management.internal.VMOptionCompositeData#getName(CompositeData)->String::: option composite data get name
com.sun.management.internal.VMOptionCompositeData#getValue(CompositeData)->String::: option composite data get value
com.sun.management.internal.VMOptionCompositeData#getOrigin(CompositeData)->Origin::: option composite data get origin
com.sun.management.internal.VMOptionCompositeData#isWriteable(CompositeData)->boolean::: option composite data is writeable
com.sun.management.internal.VMOptionCompositeData#validateCompositeData(CompositeData)->void:::Validate if the input CompositeData has the expected CompositeType (i.e
