DiagnosticCommandArgumentInfo#getName():::Returns the argument name.:::return
DiagnosticCommandArgumentInfo#getDescription():::Returns the argument description.:::return
DiagnosticCommandArgumentInfo#getType():::Returns the argument type.:::return
DiagnosticCommandArgumentInfo#getDefault():::Returns the default value as a String if a default value is defined, null otherwise.:::return
DiagnosticCommandArgumentInfo#isMandatory():::Returns true if the argument is mandatory,         false otherwise.:::return
DiagnosticCommandArgumentInfo#isOption():::Returns true if the argument is an option,         false otherwise:::return
DiagnosticCommandArgumentInfo#isMultiple():::Returns true if the argument can be specified multiple times,         false otherwise.:::return
DiagnosticCommandArgumentInfo#getPosition():::Returns the expected position of this argument if it is not an option,         -1 otherwise:::return
DiagnosticCommandInfo#getName():::Returns the diagnostic command name.:::return
DiagnosticCommandInfo#getDescription():::Returns the diagnostic command description.:::return
DiagnosticCommandInfo#getImpact():::Returns the potential impact of the diagnostic command execution         on the Java virtual machine behavior.:::return
DiagnosticCommandInfo#getPermissionClass():::Returns the name of the permission class required to be allowed         to invoke the diagnostic command, or null if no permission         is required.:::return
DiagnosticCommandInfo#getPermissionName():::Returns the permission name required to be allowed to invoke the         diagnostic command, or null if no permission is required.:::return
DiagnosticCommandInfo#getPermissionAction():::Returns the permission action required to be allowed to invoke the         diagnostic command, or null if no permission is required or         if the permission has no action specified.:::return
DiagnosticCommandInfo#isEnabled():::Returns true if the diagnostic command is enabled,         false otherwise:::return
DiagnosticCommandInfo#getArgumentsInfo():::Returns the list of the diagnostic command arguments description:::return
GarbageCollectionNotifInfoCompositeData#validateCompositeData(CompositeData):::Validate if the input CompositeData has the expected CompositeType (i.e:::if->throw->new->NullPointerException->if->getBaseGcNotifInfoCompositeType->cd->getCompositeType->isTypeMatched->throw->new->IllegalArgumentException
GcInfoCompositeData#validateCompositeData(CompositeData):::Returns true if the input CompositeData has the expected CompositeType (i.e:::if->throw->new->NullPointerException->if->getBaseGcInfoCompositeType->cd->getCompositeType->isTypeMatched->throw->new->IllegalArgumentException
VMOptionCompositeData#validateCompositeData(CompositeData):::Validate if the input CompositeData has the expected CompositeType (i.e:::if->throw->new->NullPointerException->if->cd->getCompositeType->isTypeMatched->throw->new->IllegalArgumentException
