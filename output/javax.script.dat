javax.script.AbstractScriptEngine#setContext(ScriptContext)->void:::Sets the value of the protected context field to the specified ScriptContext.
javax.script.AbstractScriptEngine#getContext()->ScriptContext:::Returns the value of the protected context field.
javax.script.AbstractScriptEngine#getBindings(int)->Bindings:::Returns the Bindings with the specified scope value in the protected context field.
javax.script.AbstractScriptEngine#setBindings(Bindings, int)->void:::Sets the Bindings with the corresponding scope value in the context field.
javax.script.AbstractScriptEngine#put(String, Object)->void:::Sets the specified value with the specified key in the ENGINE_SCOPE Bindings of the protected context field.
javax.script.AbstractScriptEngine#get(String)->Object:::Gets the value for the specified key in the ENGINE_SCOPE of the protected context field.
javax.script.AbstractScriptEngine#eval(Reader, Bindings)->Object:::eval(Reader, Bindings) calls the abstract eval(Reader, ScriptContext) method, passing it a ScriptContext whose Reader, Writers and Bindings for scopes other that ENGINE_SCOPE are identical to those members of the protected context field
javax.script.AbstractScriptEngine#eval(String, Bindings)->Object:::Same as eval(Reader, Bindings) except that the abstract eval(String, ScriptContext) is used.
javax.script.AbstractScriptEngine#eval(Reader)->Object:::eval(Reader) calls the abstract eval(Reader, ScriptContext) passing the value of the context field.
javax.script.AbstractScriptEngine#eval(String)->Object:::Same as eval(Reader) except that the abstract eval(String, ScriptContext) is used.
javax.script.AbstractScriptEngine#getScriptContext(Bindings)->ScriptContext:::Returns a SimpleScriptContext
javax.script.Bindings#put(String, Object)->Object:::Set a named value.
javax.script.Bindings#putAll(Map)->void:::Adds all the mappings in a given Map to this Bindings.
javax.script.Bindings#containsKey(Object)->boolean:::Returns true if this map contains a mapping for the specified key
javax.script.Bindings#get(Object)->Object:::Returns the value to which this map maps the specified key
javax.script.Bindings#remove(Object)->Object:::Removes the mapping for this key from this map if it is present (optional operation)
javax.script.Compilable#compile(String)->CompiledScript::: compilable compile
javax.script.Compilable#compile(Reader)->CompiledScript:::Compiles the script (source read from Reader) for later execution
javax.script.CompiledScript#eval(ScriptContext)->Object::: compiled script eval
javax.script.CompiledScript#eval(Bindings)->Object:::Executes the program stored in the CompiledScript object using the supplied Bindings of attributes as the ENGINE_SCOPE of the associated ScriptEngine during script execution
javax.script.CompiledScript#eval()->Object:::Executes the program stored in the CompiledScript object
javax.script.CompiledScript#getEngine()->ScriptEngine:::Returns the ScriptEngine whose compile method created this CompiledScript
javax.script.Invocable#invokeMethod(Object, String, Object...)->Object:::Calls a method on a script object compiled during a previous script execution, which is retained in the state of the ScriptEngine.
javax.script.Invocable#invokeFunction(String, Object...)->Object:::Used to call top-level procedures and functions defined in scripts.
javax.script.Invocable#getInterface(Class)->T:::Returns an implementation of an interface using functions compiled in the interpreter
javax.script.Invocable#getInterface(Object, Class)->T:::Returns an implementation of an interface using member functions of a scripting object compiled in the interpreter
javax.script.ScriptContext#setBindings(Bindings, int)->void:::Associates a Bindings instance with a particular scope in this ScriptContext
javax.script.ScriptContext#getBindings(int)->Bindings:::Gets the Bindings  associated with the given scope in this ScriptContext.
javax.script.ScriptContext#setAttribute(String, Object, int)->void:::Sets the value of an attribute in a given scope
javax.script.ScriptContext#getAttribute(String, int)->Object:::Gets the value of an attribute in a given scope.
javax.script.ScriptContext#removeAttribute(String, int)->Object:::Remove an attribute in a given scope.
javax.script.ScriptContext#getAttribute(String)->Object:::Retrieves the value of the attribute with the given name in the scope occurring earliest in the search order
javax.script.ScriptContext#getAttributesScope(String)->int:::Get the lowest scope in which an attribute is defined.
javax.script.ScriptContext#getWriter()->Writer:::Returns the Writer for scripts to use when displaying output.
javax.script.ScriptContext#getErrorWriter()->Writer:::Returns the Writer used to display error output.
javax.script.ScriptContext#setWriter(Writer)->void:::Sets the Writer for scripts to use when displaying output.
javax.script.ScriptContext#setErrorWriter(Writer)->void:::Sets the Writer used to display error output.
javax.script.ScriptContext#getReader()->Reader:::Returns a Reader to be used by the script to read input.
javax.script.ScriptContext#setReader(Reader)->void:::Sets the Reader for scripts to read input .
javax.script.ScriptContext#getScopes()->List:::Returns immutable List of all the valid values for scope in the ScriptContext.
javax.script.ScriptEngine#eval(String, ScriptContext)->Object:::Causes the immediate execution of the script whose source is the String passed as the first argument
javax.script.ScriptEngine#eval(Reader, ScriptContext)->Object:::Same as eval(String, ScriptContext) where the source of the script is read from a Reader.
javax.script.ScriptEngine#eval(String)->Object:::Executes the specified script
javax.script.ScriptEngine#eval(Reader)->Object:::Same as eval(String) except that the source of the script is provided as a Reader
javax.script.ScriptEngine#eval(String, Bindings)->Object:::Executes the script using the Bindings argument as the ENGINE_SCOPE Bindings of the ScriptEngine during the script execution
javax.script.ScriptEngine#eval(Reader, Bindings)->Object:::Same as eval(String, Bindings) except that the source of the script is provided as a Reader.
javax.script.ScriptEngine#put(String, Object)->void:::Sets a key/value pair in the state of the ScriptEngine that may either create a Java Language Binding to be used in the execution of scripts or be used in some other way, depending on whether the key is reserved
javax.script.ScriptEngine#get(String)->Object:::Retrieves a value set in the state of this engine
javax.script.ScriptEngine#getBindings(int)->Bindings:::Returns a scope of named values
javax.script.ScriptEngine#setBindings(Bindings, int)->void:::Sets a scope of named values to be used by scripts
javax.script.ScriptEngine#createBindings()->Bindings:::Returns an uninitialized Bindings.
javax.script.ScriptEngine#getContext()->ScriptContext:::Returns the default ScriptContext of the ScriptEngine whose Bindings, Reader and Writers are used for script executions when no ScriptContext is specified.
javax.script.ScriptEngine#setContext(ScriptContext)->void:::Sets the default ScriptContext of the ScriptEngine whose Bindings, Reader and Writers are used for script executions when no ScriptContext is specified.
javax.script.ScriptEngine#getFactory()->ScriptEngineFactory:::Returns a ScriptEngineFactory for the class to which this ScriptEngine belongs.
javax.script.ScriptEngineFactory#getEngineName()->String:::Returns the full  name of the ScriptEngine
javax.script.ScriptEngineFactory#getEngineVersion()->String:::Returns the version of the ScriptEngine.
javax.script.ScriptEngineFactory#getExtensions()->List:::Returns an immutable list of filename extensions, which generally identify scripts written in the language supported by this ScriptEngine
javax.script.ScriptEngineFactory#getMimeTypes()->List:::Returns an immutable list of mimetypes, associated with scripts that can be executed by the engine
javax.script.ScriptEngineFactory#getNames()->List:::Returns an immutable list of  short names for the ScriptEngine, which may be used to identify the ScriptEngine by the ScriptEngineManager
javax.script.ScriptEngineFactory#getLanguageName()->String:::Returns the name of the scripting language supported by this ScriptEngine.
javax.script.ScriptEngineFactory#getLanguageVersion()->String:::Returns the version of the scripting language supported by this ScriptEngine.
javax.script.ScriptEngineFactory#getParameter(String)->Object:::Returns the value of an attribute whose meaning may be implementation-specific
javax.script.ScriptEngineFactory#getMethodCallSyntax(String, String, String...)->String:::Returns a String which can be used to invoke a method of a  Java object using the syntax of the supported scripting language
javax.script.ScriptEngineFactory#getOutputStatement(String)->String:::Returns a String that can be used as a statement to display the specified String  using the syntax of the supported scripting language
javax.script.ScriptEngineFactory#getProgram(String...)->String:::Returns a valid scripting language executable program with given statements
javax.script.ScriptEngineFactory#getScriptEngine()->ScriptEngine:::Returns an instance of the ScriptEngine associated with this ScriptEngineFactory
javax.script.ScriptEngineManager#setBindings(Bindings)->void:::setBindings stores the specified Bindings in the globalScope field
javax.script.ScriptEngineManager#getBindings()->Bindings:::getBindings returns the value of the globalScope field
javax.script.ScriptEngineManager#put(String, Object)->void:::Sets the specified key/value pair in the Global Scope.
javax.script.ScriptEngineManager#get(String)->Object:::Gets the value for the specified key in the Global Scope
javax.script.ScriptEngineManager#getEngineByName(String)->ScriptEngine:::Looks up and creates a ScriptEngine for a given  name
javax.script.ScriptEngineManager#getEngineByExtension(String)->ScriptEngine:::Look up and create a ScriptEngine for a given extension
javax.script.ScriptEngineManager#getEngineByMimeType(String)->ScriptEngine:::Look up and create a ScriptEngine for a given mime type
javax.script.ScriptEngineManager#getEngineFactories()->List:::Returns a list whose elements are instances of all the ScriptEngineFactory classes found by the discovery mechanism.
javax.script.ScriptEngineManager#registerEngineName(String, ScriptEngineFactory)->void:::Registers a ScriptEngineFactory to handle a language name
javax.script.ScriptEngineManager#registerEngineMimeType(String, ScriptEngineFactory)->void:::Registers a ScriptEngineFactory to handle a mime type
javax.script.ScriptEngineManager#registerEngineExtension(String, ScriptEngineFactory)->void:::Registers a ScriptEngineFactory to handle an extension
javax.script.ScriptException#getMessage()->String:::Returns a message containing the String passed to a constructor as well as line and column numbers and filename if any of these are known.
javax.script.ScriptException#getLineNumber()->int:::Get the line number on which an error occurred.
javax.script.ScriptException#getColumnNumber()->int:::Get the column number on which an error occurred.
javax.script.ScriptException#getFileName()->String:::Get the source of the script causing the error.
javax.script.SimpleBindings#put(String, Object)->Object:::Sets the specified key/value in the underlying map field.
javax.script.SimpleBindings#putAll(Map)->void:::putAll is implemented using Map.putAll.
javax.script.SimpleBindings#clear()->void::: simple bindings clear
javax.script.SimpleBindings#containsKey(Object)->boolean:::Returns true if this map contains a mapping for the specified key
javax.script.SimpleBindings#containsValue(Object)->boolean::: simple bindings contains value
javax.script.SimpleBindings#entrySet()->Set>::: simple bindings entry set
javax.script.SimpleBindings#get(Object)->Object:::Returns the value to which this map maps the specified key
javax.script.SimpleBindings#isEmpty()->boolean::: simple bindings is empty
javax.script.SimpleBindings#keySet()->Set::: simple bindings key set
javax.script.SimpleBindings#remove(Object)->Object:::Removes the mapping for this key from this map if it is present (optional operation)
javax.script.SimpleBindings#size()->int::: simple bindings size
javax.script.SimpleBindings#values()->Collection::: simple bindings values
javax.script.SimpleScriptContext#setBindings(Bindings, int)->void:::Sets a Bindings of attributes for the given scope
javax.script.SimpleScriptContext#getAttribute(String)->Object:::Retrieves the value of the attribute with the given name in the scope occurring earliest in the search order
javax.script.SimpleScriptContext#getAttribute(String, int)->Object:::Gets the value of an attribute in a given scope.
javax.script.SimpleScriptContext#removeAttribute(String, int)->Object:::Remove an attribute in a given scope.
javax.script.SimpleScriptContext#setAttribute(String, Object, int)->void:::Sets the value of an attribute in a given scope
javax.script.SimpleScriptContext#getWriter()->Writer::: simple script context get writer
javax.script.SimpleScriptContext#getReader()->Reader::: simple script context get reader
javax.script.SimpleScriptContext#setReader(Reader)->void::: simple script context set reader
javax.script.SimpleScriptContext#setWriter(Writer)->void::: simple script context set writer
javax.script.SimpleScriptContext#getErrorWriter()->Writer::: simple script context get error writer
javax.script.SimpleScriptContext#setErrorWriter(Writer)->void::: simple script context set error writer
javax.script.SimpleScriptContext#getAttributesScope(String)->int:::Get the lowest scope in which an attribute is defined.
javax.script.SimpleScriptContext#getBindings(int)->Bindings:::Returns the value of the engineScope field if specified scope is ENGINE_SCOPE
javax.script.SimpleScriptContext#getScopes()->List::: simple script context get scopes
