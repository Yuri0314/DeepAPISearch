ServiceProviderProcessor#getSupportedSourceVersion()::: service provider processor get supported source version:::return->SourceVersion->latest
ServiceProviderProcessor#verifyAnnotation(TypeMirror, TypeElement)::: service provider processor verify annotation:::if->processingEnv->getTypeUtils->serviceProvider->asType->isSubtype->msg->String->serviceProvider->getSimpleName->format->processingEnv->getMessager->printMessage->return->return
ServiceProviderProcessor#processElement(TypeElement)::: service provider processor process element:::if->processed->contains->return->processed->add->annotation->getType->getAnnotation->if->service->getAnnotationValue->if->verifyAnnotation->if->serviceProvider->getNestingKind->isNested->msg->String->serviceProvider->getSimpleName->format->processingEnv->getMessager->printMessage->else->serviceElement->processingEnv->getTypeUtils->asElement->serviceName->serviceElement->getSimpleName->toString->enclosing->serviceElement->getEnclosingElement->while->kind->enclosing->getKind->if->getQualifiedName->toString->break->else->if->getSimpleName->toString->enclosing->getEnclosingElement->else->msg->String->serviceElement->getQualifiedName->format->processingEnv->getMessager->printMessage->return->serviceProviders->put
ServiceProviderProcessor#doProcess(Set, RoundEnvironment)::: service provider processor do process:::if->roundEnv->processingOver->foreach->serviceProviders->entrySet->e->getKey->getQualifiedName->toString->e->getValue->e->getKey->createProviderFile->serviceProviders->clear->return->serviceProviderTypeElement->getTypeElement->foreach->roundEnv->getElementsAnnotatedWith->processElement->return
