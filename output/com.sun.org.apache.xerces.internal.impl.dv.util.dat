Base64#isWhiteSpace(char)::: base64 is white space:::return
Base64#isPad(char)::: base64 is pad:::return
Base64#isData(char)::: base64 is data:::return
Base64#isBase64(char)::: base64 is base64:::return->isWhiteSpace->isPad->isData
Base64#encode(byte[]):::Encodes hex octects into Base64:::if->return->lengthDataBits->if->return->fewerThan24bits->numberTriplets->numberQuartet->encodedData->new->charArr->k->l->b1->b2->b3->encodedIndex->dataIndex->if->println->for->i->if->if->println->println->val1->else->if->val1->val2->return->new->String
Base64#decode(String):::Decodes Base64 data into octects:::if->return->base64Data->encoded->toCharArray->len->removeWhiteSpace->if->return->numberQuadruple->if->return->new->byteArr->decodedData->b1->b2->b3->b4->d1->d2->d3->d4->i->encodedIndex->dataIndex->new->byteArr->for->if->isData->isData->return->if->isData->isData->if->isPad->isPad->if->return->tmp->new->byteArr->System->arraycopy->return->else->if->isPad->isPad->if->return->tmp->new->byteArr->System->arraycopy->return->else->return->else->return
Base64#removeWhiteSpace(char[]):::remove WhiteSpace from MIME containing encoded Base64 data.:::if->return->newSize->len->for->i->return
ByteListImpl#getLength():::The number of bytes in the list:::return
ByteListImpl#contains(byte):::Checks if the byte item is a member of this list.:::for->i->return
ByteListImpl#item(int):::Returns the indexth item in the collection:::if->throw->new->XSException->return
ByteListImpl#get(int)::: byte list impl get:::if->return->throw->new->IndexOutOfBoundsException
ByteListImpl#size()::: byte list impl size:::return->getLength
ByteListImpl#toByteArray()::: byte list impl to byte array:::ret->new->byteArr->System->arraycopy->return
HexBin#encode(byte[]):::Encode a byte array to hex string:::if->return->lengthData->lengthEncode->encodedData->new->charArr->temp->for->i->return->new->String
HexBin#decode(String):::Decode hex string to a byte array:::if->return->lengthData->encoded->length->if->return->binaryData->encoded->toCharArray->lengthDecode->decodedData->new->byteArr->temp1->temp2->tempChar->for->i->return
