BooleanEditor#getJavaInitializationString()::: boolean editor get java initialization string:::value->getValue->return->value->toString
BooleanEditor#getAsText()::: boolean editor get as text:::value->getValue->return->getValidName
BooleanEditor#setAsText(String)::: boolean editor set as text:::if->setValue->else->if->isValidName->setValue->else->if->isValidName->setValue->else->throw->new->java.lang.IllegalArgumentException
BooleanEditor#getTags()::: boolean editor get tags:::return->new->StringArr->getValidName->getValidName
BooleanEditor#getValidName(boolean)::: boolean editor get valid name:::return
BooleanEditor#isValidName(boolean, String)::: boolean editor is valid name:::return->getValidName->equalsIgnoreCase
ByteEditor#getJavaInitializationString()::: byte editor get java initialization string:::value->getValue->return
ByteEditor#setAsText(String)::: byte editor set as text:::Byte->decode->setValue
ColorEditor#setValue(Object)::: color editor set value:::c->changeColor
ColorEditor#preferredSize()::: color editor preferred size:::return->new->Dimension
ColorEditor#keyUp(Event, int)::: color editor key up:::if->try->text->getText->setAsText->catch->finally->return
ColorEditor#setAsText(String)::: color editor set as text:::if->changeColor->return->c1->s->indexOf->c2->s->indexOf->if->throw->new->IllegalArgumentException->try->r->Integer->s->substring->parseInt->g->Integer->s->substring->parseInt->b->Integer->s->substring->parseInt->c->new->Color->changeColor->catch->throw->new->IllegalArgumentException->finally
ColorEditor#action(Event, Object)::: color editor action:::if->choser->getSelectedIndex->changeColor->return
ColorEditor#getJavaInitializationString()::: color editor get java initialization string:::return->getRGB
ColorEditor#changeColor(Color)::: color editor change color:::if->setText->return->text->c->getRed->c->getGreen->c->getBlue->setText->active->for->i->choser->select->sample->setBackground->sample->repaint->support->firePropertyChange
ColorEditor#getValue()::: color editor get value:::return
ColorEditor#isPaintable()::: color editor is paintable:::return
ColorEditor#paintValue(java.awt.Graphics, java.awt.Rectangle)::: color editor paint value:::oldColor->gfx->getColor->gfx->setColor->gfx->drawRect->gfx->setColor->gfx->fillRect->gfx->setColor
ColorEditor#getAsText()::: color editor get as text:::return->getRed->getGreen->getBlue
ColorEditor#getTags()::: color editor get tags:::return
ColorEditor#getCustomEditor()::: color editor get custom editor:::return
ColorEditor#supportsCustomEditor()::: color editor supports custom editor:::return
ColorEditor#addPropertyChangeListener(PropertyChangeListener)::: color editor add property change listener:::support->addPropertyChangeListener
ColorEditor#removePropertyChangeListener(PropertyChangeListener)::: color editor remove property change listener:::support->removePropertyChangeListener
DoubleEditor#setAsText(String)::: double editor set as text:::Double->valueOf->setValue
EnumEditor#getValue()::: enum editor get value:::return
EnumEditor#setValue(Object)::: enum editor set value:::if->isInstance->throw->new->IllegalArgumentException->oldValue->listeners->synchronized->if->value->equals->return->size->size->if->return->new->PropertyChangeListenerArr->toArray->event->new->PropertyChangeEvent->foreach->listener->propertyChange
EnumEditor#getAsText()::: enum editor get as text:::return->name
EnumEditor#setAsText(String)::: enum editor set as text:::tmp->Enum->valueOf->setValue
EnumEditor#getTags()::: enum editor get tags:::return->clone
EnumEditor#getJavaInitializationString()::: enum editor get java initialization string:::name->getAsText->return->getName
EnumEditor#isPaintable()::: enum editor is paintable:::return
EnumEditor#paintValue(Graphics, Rectangle)::: enum editor paint value:::
EnumEditor#supportsCustomEditor()::: enum editor supports custom editor:::return
EnumEditor#getCustomEditor()::: enum editor get custom editor:::return
EnumEditor#addPropertyChangeListener(PropertyChangeListener)::: enum editor add property change listener:::synchronized->add
EnumEditor#removePropertyChangeListener(PropertyChangeListener)::: enum editor remove property change listener:::synchronized->remove
FloatEditor#getJavaInitializationString()::: float editor get java initialization string:::value->getValue->return
FloatEditor#setAsText(String)::: float editor set as text:::Float->valueOf->setValue
FontEditor#preferredSize()::: font editor preferred size:::return->new->Dimension
FontEditor#setValue(Object)::: font editor set value:::if->return->changeFont->for->i->for->i->for->i
FontEditor#changeFont(Font)::: font editor change font:::if->remove->new->Label->sample->setFont->add->p->getParent->if->p->invalidate->p->layout->invalidate->layout->repaint->support->firePropertyChange
FontEditor#getValue()::: font editor get value:::return
FontEditor#getJavaInitializationString()::: font editor get java initialization string:::if->return->return->font->getName->font->getStyle->font->getSize
FontEditor#action(Event, Object)::: font editor action:::family->familyChoser->getSelectedItem->style->styleChoser->getSelectedIndex->size->sizeChoser->getSelectedIndex->try->f->new->Font->changeFont->catch->println->finally->return
FontEditor#isPaintable()::: font editor is paintable:::return
FontEditor#paintValue(java.awt.Graphics, java.awt.Rectangle)::: font editor paint value:::oldFont->gfx->getFont->gfx->setFont->fm->gfx->getFontMetrics->vpad->fm->getAscent->gfx->drawString->gfx->setFont
FontEditor#getAsText()::: font editor get as text:::if->return->sb->new->StringBuilder->sb->getName->append->sb->append->b->isBold->if->sb->append->i->isItalic->if->sb->append->if->sb->append->sb->getSize->append->return->sb->toString
FontEditor#setAsText(String)::: font editor set as text:::Font->decode->setValue
FontEditor#getTags()::: font editor get tags:::return
FontEditor#getCustomEditor()::: font editor get custom editor:::return
FontEditor#supportsCustomEditor()::: font editor supports custom editor:::return
FontEditor#addPropertyChangeListener(PropertyChangeListener)::: font editor add property change listener:::support->addPropertyChangeListener
FontEditor#removePropertyChangeListener(PropertyChangeListener)::: font editor remove property change listener:::support->removePropertyChangeListener
IntegerEditor#setAsText(String)::: integer editor set as text:::Integer->decode->setValue
LongEditor#getJavaInitializationString()::: long editor get java initialization string:::value->getValue->return
LongEditor#setAsText(String)::: long editor set as text:::Long->decode->setValue
NumberEditor#getJavaInitializationString()::: number editor get java initialization string:::value->getValue->return->value->toString
ShortEditor#getJavaInitializationString()::: short editor get java initialization string:::value->getValue->return
ShortEditor#setAsText(String)::: short editor set as text:::Short->decode->setValue
StringEditor#getJavaInitializationString()::: string editor get java initialization string:::value->getValue->if->return->str->value->toString->length->str->length->sb->new->StringBuilder->sb->append->for->i->sb->append->return->sb->toString
StringEditor#setAsText(String)::: string editor set as text:::setValue
