AccessWatchpointSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::field->refType->fieldByName->em->refType->virtualMachine->eventRequestManager->wp->em->createAccessWatchpointRequest->wp->setSuspendPolicy->wp->enable->return
BreakpointSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::location->location->if->throw->new->InvalidTypeException->em->refType->virtualMachine->eventRequestManager->bp->em->createBreakpointRequest->bp->setSuspendPolicy->bp->enable->return
Env#sourceReader(Location):::Return a Reader cooresponding to the source of this location:::return->sourceMapper->sourceReader
Env#description(ObjectReference):::Return a description of an object.:::clazz->ref->referenceType->id->ref->uniqueID->if->return->toHex->else->return->MessageOutput->new->ObjectArr->clazz->name->toHex->format
Env#toHex(long):::Convert a long to a hexadecimal string.:::s1->new->charArr->s2->new->charArr->i->do->d->while->j->while->return->new->String
Env#fromHex(String):::Convert hexadecimal strings to longs.:::str->hexStr->startsWith->hexStr->substring->toLowerCase->hexStr->toLowerCase->if->hexStr->length->throw->new->NumberFormatException->ret->for->i->str->length->return
EventRequestSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::
EventRequestSpecList#resolve(ClassPrepareEvent):::Resolve all deferred eventRequests waiting for 'refType'.:::failure->synchronized->foreach->if->spec->isResolved->try->eventRequest->spec->resolve->if->MessageOutput->spec->toString->println->catch->MessageOutput->new->ObjectArr->spec->toString->spec->errorMessageFor->println->finally->return
ExceptionSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::em->refType->virtualMachine->eventRequestManager->excReq->em->createExceptionRequest->excReq->enable->return
MessageOutput#fatalError(String):::Fatal shutdown notification:::println->format->println->format->println->Env->shutdown
MessageOutput#format(String):::"Format" a string by doing a simple key lookup.:::return->textResources->getString
MessageOutput#format(String, String):::Fetch and format a message with one string argument:::return->new->ObjectArr->format
MessageOutput#format(String, Object[]):::Fetch a string by key lookup and format in the arguments.:::if->textResources->getString->new->MessageFormat->else->messageFormat->textResources->getString->applyPattern->return->messageFormat->format
MessageOutput#printDirectln(String):::Print directly to System.out:::println
MessageOutput#println():::Print a newline:::println
MessageOutput#print(String):::Format and print a simple string.:::format->print
MessageOutput#println(String):::Format and print a simple string.:::format->println
MessageOutput#print(String, String):::Fetch, format and print a message with one string argument:::format->print
MessageOutput#println(String, Object[]):::Fetch, format and print a message with an arbitrary number of message arguments.:::format->println
MessageOutput#lnprint(String):::Print a newline, followed by the string.:::println->textResources->getString->print
MessageOutput#printException(String, Exception):::Print an exception message with a stack trace.:::if->try->println->catch->printDirectln->finally->flush->e->printStackTrace
ModificationWatchpointSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::field->refType->fieldByName->em->refType->virtualMachine->eventRequestManager->wp->em->createModificationWatchpointRequest->wp->setSuspendPolicy->wp->enable->return
PatternReferenceTypeSpec#isUnique():::Is this spec unique or is it a class pattern?:::return->classId->equals
PatternReferenceTypeSpec#matches(ReferenceType):::Does the specified ReferenceType match this spec.:::if->classId->startsWith->return->refType->name->endsWith->else->if->classId->endsWith->return->refType->name->startsWith->else->return->refType->name->equals
ReferenceTypeSpec#matches(ReferenceType):::Does the specified ReferenceType match this spec.:::
SourceMapper#sourceFile(Location):::Return a File cooresponding to the source of this location:::try->filename->loc->sourceName->refName->loc->declaringType->name->iDot->refName->lastIndexOf->pkgName->refName->substring->full->pkgName->replace->for->i->return->catch->return->finally
SourceMapper#sourceReader(Location):::Return a BufferedReader cooresponding to the source of this location:::sourceFile->sourceFile->if->return->try->return->new->FileReader->new->BufferedReader->catch->finally->return
ThreadInfo#getCurrentThreadInfo():::Get the current ThreadInfo object.:::return
ThreadInfo#getThread():::Get the thread from this ThreadInfo object.:::return
ThreadInfo#getStack():::Get the thread stack frames.:::return->thread->frames
ThreadInfo#getCurrentFrame():::Get the current stackframe.:::if->thread->frameCount->return->return->thread->frame
ThreadInfo#invalidate():::Invalidate the current stackframe index.:::
ThreadInfo#getCurrentFrameIndex():::Get the current stackframe index.:::return
ThreadInfo#setCurrentFrameIndex(int):::Set the current stackframe to a specific frame.:::assureSuspended->if->thread->frameCount->throw->new->ArrayIndexOutOfBoundsException
ThreadInfo#up(int):::Change the current stackframe to be one or more frames higher (as in, away from the current program counter).:::setCurrentFrameIndex
ThreadInfo#down(int):::Change the current stackframe to be one or more frames lower (as in, toward the current program counter):::setCurrentFrameIndex
TTY#readCommandFile(File):::Read and execute a command file:::inFile->try->if->f->canRead->MessageOutput->f->getPath->println->new->FileReader->new->BufferedReader->ln->while->inFile->readLine->t->new->StringTokenizer->if->t->hasMoreTokens->executeCommand->catch->finally->if->try->inFile->close->catch->finally->return
TTY#readStartupCommandFile(String, String, String):::Try to read commands from dir/fname, unless the canonical path passed in is the same as that for dir/fname:::dotInitFile->new->File->if->dotInitFile->exists->return->myCanonFile->try->dotInitFile->getCanonicalPath->catch->MessageOutput->dotInitFile->getPath->println->return->finally->if->canonPath->equals->if->readCommandFile->MessageOutput->dotInitFile->getPath->println->return
TTYResources#getContents():::Returns the contents of this ResourceBundle:::temp->new->ObjectArrs->return
TTYResources_ja#getContents():::Returns the contents of this ResourceBundle:::temp->new->ObjectArrs->return
TTYResources_zh_CN#getContents():::Returns the contents of this ResourceBundle:::temp->new->ObjectArrs->return
