AccessWatchpointSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::field->refType->fieldByName->em->refType->virtualMachine->eventRequestManager->wp->em->createAccessWatchpointRequest->wp->setSuspendPolicy->wp->enable->return
AccessWatchpointSpec#toString()::: access watchpoint spec to string:::return->MessageOutput->new->ObjectArr->refSpec->toString->format
BreakpointSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::location->location->if->throw->new->InvalidTypeException->em->refType->virtualMachine->eventRequestManager->bp->em->createBreakpointRequest->bp->setSuspendPolicy->bp->enable->return
BreakpointSpec#methodName()::: breakpoint spec method name:::return
BreakpointSpec#lineNumber()::: breakpoint spec line number:::return
BreakpointSpec#methodArgs()::: breakpoint spec method args:::return
BreakpointSpec#isMethodBreakpoint()::: breakpoint spec is method breakpoint:::return
BreakpointSpec#hashCode()::: breakpoint spec hash code:::return->refSpec->hashCode->methodId->hashCode->methodArgs->hashCode
BreakpointSpec#equals(Object)::: breakpoint spec equals:::if->breakpoint->return->methodId->equals->methodArgs->equals->refSpec->equals->else->return
BreakpointSpec#errorMessageFor(Exception)::: breakpoint spec error message for:::if->return->MessageOutput->methodName->format->else->if->return->MessageOutput->new->ObjectArr->methodName->refSpec->toString->format->else->if->return->MessageOutput->refSpec->toString->format->else->if->return->MessageOutput->new->ObjectArr->Long->lineNumber->valueOf->refSpec->toString->format->else->if->return->MessageOutput->refSpec->toString->format->else->return->super->errorMessageFor
BreakpointSpec#toString()::: breakpoint spec to string:::sb->refSpec->toString->new->StringBuilder->if->isMethodBreakpoint->sb->append->sb->append->if->first->sb->append->foreach->if->sb->append->sb->append->sb->append->else->sb->append->sb->append->return->MessageOutput->sb->toString->format
BreakpointSpec#location(ReferenceType)::: breakpoint spec location:::location->if->isMethodBreakpoint->method->findMatchingMethod->method->location->else->locs->refType->lineNumber->locationsOfLine->if->locs->size->throw->new->LineNotFoundException->locs->get->if->location->method->throw->new->LineNotFoundException->return
BreakpointSpec#isValidMethodName(String)::: breakpoint spec is valid method name:::return->isJavaIdentifier->s->equals->s->equals
BreakpointSpec#compareArgTypes(Method, List)::: breakpoint spec compare arg types:::argTypeNames->method->argumentTypeNames->if->argTypeNames->size->nameList->size->return->nTypes->argTypeNames->size->for->i->return
BreakpointSpec#normalizeArgTypeName(String)::: breakpoint spec normalize arg type name:::i->typePart->new->StringBuilder->arrayPart->new->StringBuilder->name->trim->nameLength->name->length->isVarArgs->name->endsWith->if->while->c->name->charAt->if->Character->isWhitespace->break->typePart->append->while->c->name->charAt->if->arrayPart->append->else->if->Character->isWhitespace->throw->MessageOutput->format->new->IllegalArgumentException->typePart->toString->if->name->indexOf->name->startsWith->try->argClass->Env->getReferenceTypeFromToken->if->argClass->name->catch->finally->arrayPart->toString->if->return
BreakpointSpec#findMatchingMethod(ReferenceType)::: breakpoint spec find matching method:::argTypeNames->if->methodArgs->methodArgs->size->new->ArrayList<String>->foreach->methodArgs->normalizeArgTypeName->argTypeNames->add->firstMatch->exactMatch->matchCount->foreach->refType->methods->if->candidate->name->methodName->equals->if->if->compareArgTypes->break->method->if->else->if->if->else->throw->new->AmbiguousMethodException->else->throw->methodName->new->NoSuchMethodException->return
Commands.AsyncExecution#action()::: async execution action:::
Commands.AsyncExecution#execute()::: async execution execute:::threadInfo->ThreadInfo->getCurrentThreadInfo->stackFrame->threadInfo->getCurrentFrameIndex->thread->new->Thread->thread->start
Commands#evaluate(String)::: commands evaluate:::result->frameGetter->try->threadInfo->ThreadInfo->getCurrentThreadInfo->if->threadInfo->getCurrentFrame->new->ExpressionParser.GetFrame->ExpressionParser->Env->vm->evaluate->catch->MessageOutput->ie->exception->referenceType->name->println->exMessage->ex->getMessage->if->MessageOutput->printException->else->s->try->MessageOutput->format->catch->ex->toString->finally->MessageOutput->printDirectln->finally->return
Commands#getStringValue()::: commands get string value:::val->valStr->try->ExpressionParser->getMassagedValue->val->toString->catch->msg->e->getMessage->if->MessageOutput->printException->else->s->try->MessageOutput->format->catch->e->toString->finally->MessageOutput->printDirectln->finally->return
Commands#doGetThread(String)::: commands do get thread:::threadInfo->ThreadInfo->getThreadInfo->if->MessageOutput->println->return
Commands#typedName(Method)::: commands typed name:::sb->new->StringBuilder->sb->method->name->append->sb->append->args->method->argumentTypeNames->lastParam->args->size->for->ii->if->lastStr->args->get->if->method->isVarArgs->sb->lastStr->lastStr->length->substring->append->sb->append->else->sb->append->sb->append->return->sb->toString
Commands#commandConnectors(VirtualMachineManager)::: commands command connectors:::ccs->vmm->allConnectors->if->ccs->isEmpty->MessageOutput->println->foreach->transportName->cc->transport->cc->transport->name->MessageOutput->println->MessageOutput->new->ObjectArr->cc->name->println->MessageOutput->cc->description->println->foreach->cc->defaultArguments->values->MessageOutput->println->requiredArgument->aa->mustSpecify->if->aa->value->aa->value->MessageOutput->aa->name->println->else->MessageOutput->new->ObjectArr->aa->name->aa->value->println->MessageOutput->aa->description->println
Commands#commandClasses()::: commands command classes:::classList->new->StringBuilder->foreach->Env->vm->allClasses->classList->refType->name->append->classList->append->MessageOutput->classList->toString->print
Commands#commandClass(StringTokenizer)::: commands command class:::if->t->hasMoreTokens->MessageOutput->println->return->idClass->t->nextToken->showAll->if->t->hasMoreTokens->if->t->nextToken->toLowerCase->equals->else->MessageOutput->println->return->type->Env->getReferenceTypeFromToken->if->MessageOutput->println->return->if->clazz->MessageOutput->clazz->name->println->superclass->clazz->superclass->while->MessageOutput->superclass->name->println->superclass->superclass->interfaces->clazz->allInterfaces->clazz->interfaces->foreach->MessageOutput->interfaze->name->println->foreach->clazz->subclasses->MessageOutput->sub->name->println->foreach->clazz->nestedTypes->MessageOutput->nest->name->println->else->if->interfaze->MessageOutput->interfaze->name->println->foreach->interfaze->superinterfaces->MessageOutput->superinterface->name->println->foreach->interfaze->subinterfaces->MessageOutput->sub->name->println->foreach->interfaze->implementors->MessageOutput->implementor->name->println->foreach->interfaze->nestedTypes->MessageOutput->nest->name->println->else->array->MessageOutput->array->name->println
Commands#commandMethods(StringTokenizer)::: commands command methods:::if->t->hasMoreTokens->MessageOutput->println->return->idClass->t->nextToken->cls->Env->getReferenceTypeFromToken->if->methodsList->new->StringBuilder->foreach->cls->allMethods->methodsList->method->declaringType->name->append->methodsList->append->methodsList->typedName->append->methodsList->append->MessageOutput->methodsList->toString->print->else->MessageOutput->println
Commands#commandFields(StringTokenizer)::: commands command fields:::if->t->hasMoreTokens->MessageOutput->println->return->idClass->t->nextToken->cls->Env->getReferenceTypeFromToken->if->fields->cls->allFields->visible->cls->visibleFields->fieldsList->new->StringBuilder->foreach->s->if->visible->contains->MessageOutput->new->ObjectArr->field->typeName->field->name->format->else->if->field->declaringType->equals->MessageOutput->new->ObjectArr->field->typeName->field->name->field->declaringType->name->format->else->MessageOutput->new->ObjectArr->field->typeName->field->name->format->fieldsList->append->MessageOutput->fieldsList->toString->print->else->MessageOutput->println
Commands#printThreadGroup(ThreadGroupReference)::: commands print thread group:::threadIter->new->ThreadIterator->MessageOutput->tg->name->println->maxIdLength->maxNameLength->while->threadIter->hasNext->thr->threadIter->next->Math->Env->description->length->max->Math->thr->name->length->max->new->ThreadIterator->while->threadIter->hasNext->thr->threadIter->next->if->thr->threadGroup->continue->if->thr->threadGroup->equals->thr->threadGroup->MessageOutput->tg->name->println->idBuffer->Env->description->new->StringBuilder->for->i->idBuffer->length->nameBuffer->thr->name->new->StringBuilder->for->i->nameBuffer->length->statusFormat->switch->thr->status->if->thr->isAtBreakpoint->else->break->if->thr->isAtBreakpoint->else->break->if->thr->isAtBreakpoint->else->break->if->thr->isAtBreakpoint->else->break->if->thr->isAtBreakpoint->else->break->if->thr->isAtBreakpoint->else->break->throw->MessageOutput->format->new->InternalError->MessageOutput->new->ObjectArr->idBuffer->toString->nameBuffer->toString->println
Commands#commandThreads(StringTokenizer)::: commands command threads:::if->t->hasMoreTokens->ThreadInfo->group->printThreadGroup->return->name->t->nextToken->tg->ThreadGroupIterator->find->if->MessageOutput->println->else->printThreadGroup
Commands#commandThreadGroups()::: commands command thread groups:::it->new->ThreadGroupIterator->cnt->while->it->hasNext->tg->it->nextThreadGroup->MessageOutput->new->ObjectArr->Integer->valueOf->Env->description->tg->name->println
Commands#commandThread(StringTokenizer)::: commands command thread:::if->t->hasMoreTokens->MessageOutput->println->return->threadInfo->t->nextToken->doGetThread->if->ThreadInfo->setCurrentThreadInfo
Commands#commandThreadGroup(StringTokenizer)::: commands command thread group:::if->t->hasMoreTokens->MessageOutput->println->return->name->t->nextToken->tg->ThreadGroupIterator->find->if->MessageOutput->println->else->ThreadInfo->setThreadGroup
Commands#commandRun(StringTokenizer)::: commands command run:::connection->Env->connection->if->connection->isLaunch->if->t->hasMoreTokens->commandCont->else->MessageOutput->println->return->if->connection->isOpen->MessageOutput->println->return->args->if->t->hasMoreTokens->t->nextToken->argsSet->connection->setConnectorArg->if->MessageOutput->println->return->else->connection->connectorArg->if->args->length->MessageOutput->println->return->MessageOutput->println->connection->open
Commands#commandLoad(StringTokenizer)::: commands command load:::MessageOutput->println
Commands#allThreads(ThreadGroupReference)::: commands all threads:::list->new->ArrayList<ThreadReference>->list->group->threads->addAll->foreach->group->threadGroups->list->allThreads->addAll->return
Commands#commandSuspend(StringTokenizer)::: commands command suspend:::if->t->hasMoreTokens->Env->vm->suspend->MessageOutput->println->else->while->t->hasMoreTokens->threadInfo->t->nextToken->doGetThread->if->threadInfo->getThread->suspend
Commands#commandResume(StringTokenizer)::: commands command resume:::if->t->hasMoreTokens->ThreadInfo->invalidateAll->Env->vm->resume->MessageOutput->println->else->while->t->hasMoreTokens->threadInfo->t->nextToken->doGetThread->if->threadInfo->invalidate->threadInfo->getThread->resume
Commands#commandCont()::: commands command cont:::if->ThreadInfo->getCurrentThreadInfo->MessageOutput->println->return->ThreadInfo->invalidateAll->Env->vm->resume
Commands#clearPreviousStep(ThreadReference)::: commands clear previous step:::mgr->Env->vm->eventRequestManager->foreach->mgr->stepRequests->if->request->thread->equals->mgr->deleteEventRequest->break
Commands#commandStep(StringTokenizer)::: commands command step:::threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->depth->if->t->hasMoreTokens->t->nextToken->toLowerCase->equals->else->threadInfo->getThread->clearPreviousStep->reqMgr->Env->vm->eventRequestManager->request->reqMgr->threadInfo->getThread->createStepRequest->if->Env->addExcludes->request->addCountFilter->request->enable->ThreadInfo->invalidateAll->Env->vm->resume
Commands#commandStepi()::: commands command stepi:::threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->threadInfo->getThread->clearPreviousStep->reqMgr->Env->vm->eventRequestManager->request->reqMgr->threadInfo->getThread->createStepRequest->Env->addExcludes->request->addCountFilter->request->enable->ThreadInfo->invalidateAll->Env->vm->resume
Commands#commandNext()::: commands command next:::threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->threadInfo->getThread->clearPreviousStep->reqMgr->Env->vm->eventRequestManager->request->reqMgr->threadInfo->getThread->createStepRequest->Env->addExcludes->request->addCountFilter->request->enable->ThreadInfo->invalidateAll->Env->vm->resume
Commands#doKill(ThreadReference, StringTokenizer)::: commands do kill:::if->t->hasMoreTokens->MessageOutput->println->return->expr->t->nextToken->val->evaluate->if->try->thread->stop->MessageOutput->thread->toString->println->catch->MessageOutput->println->finally->else->MessageOutput->println
Commands#doKillThread(ThreadReference, StringTokenizer)::: commands do kill thread:::new->AsyncExecution
Commands#commandKill(StringTokenizer)::: commands command kill:::if->t->hasMoreTokens->MessageOutput->println->return->threadInfo->t->nextToken->doGetThread->if->MessageOutput->threadInfo->getThread->name->println->threadInfo->getThread->doKillThread->return
Commands#listCaughtExceptions()::: commands list caught exceptions:::noExceptions->foreach->eventRequestSpecs->if->if->MessageOutput->println->MessageOutput->spec->toString->println->if->MessageOutput->println
Commands#parseExceptionSpec(StringTokenizer)::: commands parse exception spec:::notification->t->nextToken->notifyCaught->notifyUncaught->spec->classPattern->if->notification->equals->else->if->notification->equals->else->if->notification->equals->else->if->t->hasMoreTokens->t->nextToken->if->try->createExceptionCatch->catch->MessageOutput->println->finally->return
Commands#commandCatchException(StringTokenizer)::: commands command catch exception:::if->t->hasMoreTokens->listCaughtExceptions->else->spec->parseExceptionSpec->if->resolveNow->else->MessageOutput->println
Commands#commandIgnoreException(StringTokenizer)::: commands command ignore exception:::if->t->hasMoreTokens->listCaughtExceptions->else->spec->parseExceptionSpec->if->delete->MessageOutput->spec->toString->println->else->if->MessageOutput->spec->toString->println->MessageOutput->println
Commands#commandUp(StringTokenizer)::: commands command up:::threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->nLevels->if->t->hasMoreTokens->idToken->t->nextToken->i->try->nf->NumberFormat->getNumberInstance->nf->setParseIntegerOnly->n->nf->parse->n->intValue->catch->finally->if->MessageOutput->println->return->try->threadInfo->up->catch->MessageOutput->println->MessageOutput->println->finally
Commands#commandDown(StringTokenizer)::: commands command down:::threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->nLevels->if->t->hasMoreTokens->idToken->t->nextToken->i->try->nf->NumberFormat->getNumberInstance->nf->setParseIntegerOnly->n->nf->parse->n->intValue->catch->finally->if->MessageOutput->println->return->try->threadInfo->down->catch->MessageOutput->println->MessageOutput->println->finally
Commands#dumpStack(ThreadInfo, boolean)::: commands dump stack:::stack->try->threadInfo->getStack->catch->MessageOutput->println->return->finally->if->MessageOutput->println->else->nFrames->stack->size->for->i->threadInfo->getCurrentFrameIndex
Commands#dumpFrame(int, boolean, StackFrame)::: commands dump frame:::loc->frame->location->pc->if->loc->codeIndex->meth->loc->method->lineNumber->loc->lineNumber->methodInfo->if->meth->isNative->MessageOutput->format->else->if->try->loc->sourceName->MessageOutput->new->ObjectArr->Long->valueOf->format->catch->MessageOutput->format->finally->if->MessageOutput->new->ObjectArr->meth->declaringType->name->meth->name->Long->valueOf->println->else->MessageOutput->new->ObjectArr->meth->declaringType->name->meth->name->println
Commands#commandWhere(StringTokenizer, boolean)::: commands command where:::if->t->hasMoreTokens->threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->dumpStack->else->token->t->nextToken->if->token->toLowerCase->equals->foreach->ThreadInfo->threads->MessageOutput->threadInfo->getThread->name->println->dumpStack->else->threadInfo->doGetThread->if->ThreadInfo->setCurrentThreadInfo->dumpStack
Commands#commandInterrupt(StringTokenizer)::: commands command interrupt:::if->t->hasMoreTokens->threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->threadInfo->getThread->interrupt->else->threadInfo->t->nextToken->doGetThread->if->threadInfo->getThread->interrupt
Commands#commandMemory()::: commands command memory:::MessageOutput->println
Commands#commandGC()::: commands command c:::MessageOutput->println
Commands#locationString(Location)::: commands location string:::return->MessageOutput->new->ObjectArr->loc->declaringType->name->loc->method->name->Integer->loc->lineNumber->valueOf->Long->loc->codeIndex->valueOf->format
Commands#listBreakpoints()::: commands list breakpoints:::noBreakpoints->foreach->eventRequestSpecs->if->if->MessageOutput->println->MessageOutput->spec->toString->println->if->MessageOutput->println
Commands#printBreakpointCommandUsage(String, String)::: commands print breakpoint command usage:::MessageOutput->new->ObjectArr->println
Commands#parseBreakpointSpec(StringTokenizer, String, String)::: commands parse breakpoint spec:::breakpoint->try->token->t->nextToken->rest->try->t->nextToken->trim->catch->finally->if->rest->startsWith->rest->substring->new->StringTokenizer->classId->lineToken->t->nextToken->nf->NumberFormat->getNumberInstance->nf->setParseIntegerOnly->n->nf->parse->lineNumber->n->intValue->if->t->hasMoreTokens->printBreakpointCommandUsage->return->try->createBreakpoint->catch->MessageOutput->println->finally->else->idot->token->lastIndexOf->if->token->length->printBreakpointCommandUsage->return->methodName->token->substring->classId->token->substring->argumentList->if->if->rest->startsWith->rest->endsWith->MessageOutput->println->printBreakpointCommandUsage->return->rest->rest->length->substring->new->ArrayList<String>->new->StringTokenizer->while->t->hasMoreTokens->argumentList->t->nextToken->add->try->createBreakpoint->catch->MessageOutput->println->MessageOutput->println->finally->catch->printBreakpointCommandUsage->return->finally->return
Commands#resolveNow(EventRequestSpec)::: commands resolve now:::success->addEagerlyResolve->if->spec->isResolved->MessageOutput->spec->toString->println
Commands#commandStop(StringTokenizer)::: commands command stop:::atIn->suspendPolicy->if->t->hasMoreTokens->t->nextToken->if->atIn->equals->t->hasMoreTokens->t->nextToken->else->if->atIn->equals->t->hasMoreTokens->t->nextToken->else->listBreakpoints->return->spec->parseBreakpointSpec->if->if->atIn->equals->spec->isMethodBreakpoint->MessageOutput->println->printBreakpointCommandUsage->return->resolveNow
Commands#commandClear(StringTokenizer)::: commands command clear:::if->t->hasMoreTokens->listBreakpoints->return->spec->parseBreakpointSpec->if->if->delete->MessageOutput->spec->toString->println->else->MessageOutput->spec->toString->println
Commands#parseWatchpointSpec(StringTokenizer)::: commands parse watchpoint spec:::list->new->ArrayList<WatchpointSpec>->access->modification->suspendPolicy->fieldName->t->nextToken->if->fieldName->equals->t->nextToken->else->if->fieldName->equals->t->nextToken->if->fieldName->equals->t->nextToken->else->if->fieldName->equals->t->nextToken->else->dot->fieldName->lastIndexOf->if->MessageOutput->println->return->className->fieldName->substring->fieldName->substring->try->spec->if->createAccessWatchpoint->list->add->if->createModificationWatchpoint->list->add->catch->MessageOutput->println->MessageOutput->println->finally->return
Commands#commandWatch(StringTokenizer)::: commands command watch:::if->t->hasMoreTokens->MessageOutput->println->return->foreach->parseWatchpointSpec->resolveNow
Commands#commandUnwatch(StringTokenizer)::: commands command unwatch:::if->t->hasMoreTokens->MessageOutput->println->return->foreach->parseWatchpointSpec->if->delete->MessageOutput->spec->toString->println->else->MessageOutput->spec->toString->println
Commands#turnOnExitTrace(ThreadInfo, int)::: commands turn on exit trace:::erm->Env->vm->eventRequestManager->exit->erm->createMethodExitRequest->if->exit->threadInfo->getThread->addThreadFilter->Env->addExcludes->exit->setSuspendPolicy->exit->enable
Commands#commandTrace(StringTokenizer)::: commands command trace:::modif->suspendPolicy->threadInfo->goStr->if->t->hasMoreTokens->t->nextToken->if->modif->equals->if->t->hasMoreTokens->t->nextToken->else->if->modif->equals->if->t->hasMoreTokens->t->nextToken->if->modif->equals->traceCmd->if->t->hasMoreTokens->modif1->t->nextToken->if->modif1->equals->modif1->equals->if->t->hasMoreTokens->t->nextToken->doGetThread->if->modif1->equals->frame->try->ThreadInfo->getCurrentThreadInfo->getCurrentFrame->catch->MessageOutput->println->return->finally->Env->frame->location->method->setAtExitMethod->MessageOutput->Env->atExitMethod->toString->format->else->MessageOutput->format->new->StringTokenizer->commandUntrace->turnOnExitTrace->return->else->MessageOutput->println->return->if->modif->equals->entry->erm->Env->vm->eventRequestManager->if->t->hasMoreTokens->t->nextToken->doGetThread->if->erm->createMethodEntryRequest->entry->threadInfo->getThread->addThreadFilter->else->new->StringTokenizer->commandUntrace->erm->createMethodEntryRequest->Env->addExcludes->entry->setSuspendPolicy->entry->enable->turnOnExitTrace->MessageOutput->format->return->MessageOutput->println->return->if->MessageOutput->printDirectln
Commands#commandUntrace(StringTokenizer)::: commands command untrace:::modif->erm->Env->vm->eventRequestManager->if->t->hasMoreTokens->t->nextToken->if->modif->equals->erm->erm->methodEntryRequests->deleteEventRequests->erm->erm->methodExitRequests->deleteEventRequests->Env->setAtExitMethod
Commands#commandList(StringTokenizer)::: commands command list:::frame->threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->try->threadInfo->getCurrentFrame->catch->MessageOutput->println->return->finally->if->MessageOutput->println->return->loc->frame->location->if->loc->method->isNative->MessageOutput->println->return->sourceFileName->try->loc->sourceName->refType->loc->declaringType->lineno->loc->lineNumber->if->t->hasMoreTokens->id->t->nextToken->try->nf->NumberFormat->getNumberInstance->nf->setParseIntegerOnly->n->nf->parse->n->intValue->catch->meths->refType->methodsByName->if->meths->size->MessageOutput->new->ObjectArr->refType->name->println->return->else->if->meths->size->MessageOutput->new->ObjectArr->refType->name->println->return->meths->get->location->loc->lineNumber->finally->startLine->Math->max->endLine->if->MessageOutput->println->else->if->Env->sourceLine->MessageOutput->new->ObjectArr->Integer->valueOf->refType->name->println->else->for->i->catch->MessageOutput->loc->toString->println->MessageOutput->println->MessageOutput->exc->toString->println->finally
Commands#commandLines(StringTokenizer)::: commands command lines:::if->t->hasMoreTokens->MessageOutput->println->else->idClass->t->nextToken->idMethod->t->hasMoreTokens->t->nextToken->try->refType->Env->getReferenceTypeFromToken->if->lines->if->refType->allLineLocations->else->foreach->refType->allMethods->if->method->name->equals->method->allLineLocations->if->MessageOutput->println->foreach->MessageOutput->line->toString->printDirectln->else->MessageOutput->println->catch->MessageOutput->println->finally
Commands#commandClasspath(StringTokenizer)::: commands command classpath:::if->Env->vm->vm->Env->vm->MessageOutput->vm->baseDirectory->println->MessageOutput->vm->classPath->toString->println->else->MessageOutput->println
Commands#commandUse(StringTokenizer)::: commands command use:::if->t->hasMoreTokens->MessageOutput->Env->getSourcePath->printDirectln->else->Env->t->nextToken->trim->setSourcePath
Commands#printVar(LocalVariable, Value)::: commands print var:::MessageOutput->new->ObjectArr->var->name->value->toString->println
Commands#commandLocals()::: commands command locals:::frame->threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->try->threadInfo->getCurrentFrame->if->throw->new->AbsentInformationException->vars->frame->visibleVariables->if->vars->size->MessageOutput->println->return->values->frame->getValues->MessageOutput->println->foreach->if->var->isArgument->val->values->get->printVar->MessageOutput->println->foreach->if->var->isArgument->val->values->get->printVar->catch->MessageOutput->println->MessageOutput->println->finally
Commands#dump(ObjectReference, ReferenceType, ReferenceType)::: commands dump:::foreach->refType->fields->sb->new->StringBuilder->sb->append->if->refType->equals->sb->refType->name->append->sb->append->sb->field->name->append->sb->MessageOutput->format->append->sb->obj->getValue->append->MessageOutput->sb->toString->printDirectln->if->sup->superclass->if->dump->else->if->foreach->superinterfaces->dump->else->if->for->it->getValues->iterator->it->hasNext->MessageOutput->println
Commands#doPrint(StringTokenizer, boolean)::: commands do print:::if->t->hasMoreTokens->MessageOutput->println->return->while->t->hasMoreTokens->expr->t->nextToken->val->evaluate->if->MessageOutput->expr->toString->println->else->if->obj->refType->obj->referenceType->MessageOutput->new->ObjectArr->expr->toString->MessageOutput->format->println->dump->MessageOutput->println->else->strVal->getStringValue->if->MessageOutput->new->ObjectArr->expr->toString->println
Commands#commandPrint(StringTokenizer, boolean)::: commands command print:::new->AsyncExecution
Commands#commandSet(StringTokenizer)::: commands command set:::all->t->nextToken->if->all->indexOf->MessageOutput->println->MessageOutput->printPrompt->return->new->StringTokenizer->commandPrint
Commands#doLock(StringTokenizer)::: commands do lock:::if->t->hasMoreTokens->MessageOutput->println->return->expr->t->nextToken->val->evaluate->try->if->object->strVal->getStringValue->if->MessageOutput->new->ObjectArr->expr->trim->println->owner->object->owningThread->if->MessageOutput->println->else->MessageOutput->new->ObjectArr->owner->name->Integer->object->entryCount->valueOf->println->waiters->object->waitingThreads->if->waiters->size->MessageOutput->println->else->foreach->MessageOutput->waiter->name->println->else->MessageOutput->println->catch->MessageOutput->println->finally
Commands#commandLock(StringTokenizer)::: commands command lock:::new->AsyncExecution
Commands#printThreadLockInfo(ThreadInfo)::: commands print thread lock info:::thread->threadInfo->getThread->try->MessageOutput->thread->name->println->owned->thread->ownedMonitors->if->owned->size->MessageOutput->println->else->foreach->MessageOutput->monitor->toString->println->waiting->thread->currentContendedMonitor->if->MessageOutput->println->else->MessageOutput->waiting->toString->println->catch->MessageOutput->println->finally
Commands#commandThreadlocks(StringTokenizer)::: commands command threadlocks:::if->t->hasMoreTokens->threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->else->printThreadLockInfo->return->token->t->nextToken->if->token->toLowerCase->equals->foreach->ThreadInfo->threads->printThreadLockInfo->else->threadInfo->doGetThread->if->ThreadInfo->setCurrentThreadInfo->printThreadLockInfo
Commands#doDisableGC(StringTokenizer)::: commands do disable c:::if->t->hasMoreTokens->MessageOutput->println->return->expr->t->nextToken->val->evaluate->if->object->object->disableCollection->strVal->getStringValue->if->MessageOutput->println->else->MessageOutput->println
Commands#commandDisableGC(StringTokenizer)::: commands command disable c:::new->AsyncExecution
Commands#doEnableGC(StringTokenizer)::: commands do enable c:::if->t->hasMoreTokens->MessageOutput->println->return->expr->t->nextToken->val->evaluate->if->object->object->enableCollection->strVal->getStringValue->if->MessageOutput->println->else->MessageOutput->println
Commands#commandEnableGC(StringTokenizer)::: commands command enable c:::new->AsyncExecution
Commands#doSave(StringTokenizer)::: commands do save:::if->t->hasMoreTokens->MessageOutput->println->return->key->t->nextToken->if->t->hasMoreTokens->MessageOutput->println->return->expr->t->nextToken->val->evaluate->if->Env->setSavedValue->strVal->getStringValue->if->MessageOutput->println->else->MessageOutput->println
Commands#commandSave(StringTokenizer)::: commands command save:::if->t->hasMoreTokens->keys->Env->getSaveKeys->if->keys->isEmpty->MessageOutput->println->return->foreach->value->Env->getSavedValue->if->isCollected->MessageOutput->new->ObjectArr->value->toString->println->else->if->MessageOutput->println->else->MessageOutput->new->ObjectArr->value->toString->println->else->new->AsyncExecution
Commands#commandBytecodes(StringTokenizer)::: commands command bytecodes:::if->t->hasMoreTokens->MessageOutput->println->return->className->t->nextToken->if->t->hasMoreTokens->MessageOutput->println->return->methodName->t->nextToken->classes->Env->vm->classesByName->if->classes->size->if->className->indexOf->MessageOutput->println->else->MessageOutput->println->return->rt->classes->get->if->MessageOutput->println->return->bytecodes->foreach->rt->methodsByName->if->method->isAbstract->method->bytecodes->break->line->new->StringBuilder->line->append->for->i->if->line->length->MessageOutput->line->toString->printDirectln
Commands#commandExclude(StringTokenizer)::: commands command exclude:::if->t->hasMoreTokens->MessageOutput->Env->excludesString->printDirectln->else->rest->t->nextToken->if->rest->equals->Env->setExcludes
Commands#commandRedefine(StringTokenizer)::: commands command redefine:::if->t->hasMoreTokens->MessageOutput->println->else->className->t->nextToken->classes->Env->vm->classesByName->if->classes->size->MessageOutput->println->return->if->classes->size->MessageOutput->println->return->Env->Env->getSourcePath->setSourcePath->refType->classes->get->if->t->hasMoreTokens->MessageOutput->println->return->fileName->t->nextToken->phyl->new->File->bytes->phyl->length->new->byteArr->try->in->new->FileInputStream->in->read->in->close->catch->MessageOutput->new->ObjectArr->exc->toString->println->return->finally->map->new->HashMap<ReferenceType,byte[]>->map->put->try->Env->vm->redefineClasses->catch->MessageOutput->new->ObjectArr->println->finally
Commands#commandPopFrames(StringTokenizer, boolean)::: commands command pop frames:::threadInfo->if->t->hasMoreTokens->token->t->nextToken->doGetThread->if->return->else->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->println->return->try->frame->threadInfo->getCurrentFrame->threadInfo->getThread->popFrames->ThreadInfo->getCurrentThreadInfo->ThreadInfo->setCurrentThreadInfo->if->commandStepi->catch->MessageOutput->exc->toString->println->finally
Commands#commandExtension(StringTokenizer)::: commands command extension:::if->t->hasMoreTokens->MessageOutput->println->return->idClass->t->nextToken->cls->Env->getReferenceTypeFromToken->extension->if->try->cls->sourceDebugExtension->MessageOutput->println->catch->MessageOutput->println->finally->else->MessageOutput->println
Commands#commandVersion(String, VirtualMachineManager)::: commands command version:::MessageOutput->new->ObjectArr->vmm->majorInterfaceVersion->vmm->minorInterfaceVersion->System->getProperty->println->if->Env->connection->try->MessageOutput->Env->vm->description->printDirectln->catch->MessageOutput->println->finally
Env#init(String, boolean, int)::: env init:::new->VMConnection->if->connection->isLaunch->connection->open
Env#connection()::: env connection:::return
Env#vm()::: env vm:::return->connection->vm
Env#shutdown()::: env shutdown:::shutdown
Env#shutdown(String)::: env shutdown:::if->try->connection->disposeVM->catch->finally->if->MessageOutput->lnprint->MessageOutput->println->System->exit
Env#setSourcePath(String)::: env set source path:::new->SourceMapper->sourceCache->clear
Env#setSourcePath(List)::: env set source path:::new->SourceMapper->sourceCache->clear
Env#getSourcePath()::: env get source path:::return->sourceMapper->getSourcePath
Env#excludes()::: env excludes:::if->setExcludes->return
Env#excludesString()::: env excludes string:::sb->new->StringBuilder->foreach->excludes->sb->append->sb->append->return->sb->toString
Env#addExcludes(StepRequest)::: env add excludes:::foreach->excludes->request->addClassExclusionFilter
Env#addExcludes(MethodEntryRequest)::: env add excludes:::foreach->excludes->request->addClassExclusionFilter
Env#addExcludes(MethodExitRequest)::: env add excludes:::foreach->excludes->request->addClassExclusionFilter
Env#setExcludes(String)::: env set excludes:::t->new->StringTokenizer->list->new->ArrayList<String>->while->t->hasMoreTokens->list->t->nextToken->add
Env#atExitMethod()::: env at exit method:::return
Env#setAtExitMethod(Method)::: env set at exit method:::
Env#sourceReader(Location):::Return a Reader cooresponding to the source of this location:::return->sourceMapper->sourceReader
Env#sourceLine(Location, int)::: env source line:::if->throw->new->IllegalArgumentException->try->fileName->location->sourceName->iter->sourceCache->iterator->code->while->iter->hasNext->candidate->iter->next->if->candidate->fileName->equals->iter->remove->break->if->reader->sourceReader->if->throw->new->FileNotFoundException->new->SourceCode->if->sourceCache->size->sourceCache->sourceCache->size->remove->sourceCache->add->return->code->sourceLine->catch->throw->new->IllegalArgumentException->finally
Env#description(ObjectReference):::Return a description of an object.:::clazz->ref->referenceType->id->ref->uniqueID->if->return->toHex->else->return->MessageOutput->new->ObjectArr->clazz->name->toHex->format
Env#toHex(long):::Convert a long to a hexadecimal string.:::s1->new->charArr->s2->new->charArr->i->do->d->while->j->while->return->new->String
Env#fromHex(String):::Convert hexadecimal strings to longs.:::str->hexStr->startsWith->hexStr->substring->toLowerCase->hexStr->toLowerCase->if->hexStr->length->throw->new->NumberFormatException->ret->for->i->str->length->return
Env#getReferenceTypeFromToken(String)::: env get reference type from token:::cls->if->Character->idToken->charAt->isDigit->else->if->idToken->startsWith->idToken->substring->foreach->Env->vm->allClasses->if->type->name->endsWith->break->else->classes->Env->vm->classesByName->if->classes->size->classes->get->return
Env#getSaveKeys()::: env get save keys:::return->savedValues->keySet
Env#getSavedValue(String)::: env get saved value:::return->savedValues->get
Env#setSavedValue(String, Value)::: env set saved value:::savedValues->put
Env.SourceCode#fileName()::: source code file name:::return
Env.SourceCode#sourceLine(int)::: source code source line:::index->if->sourceLines->size->return->else->return->sourceLines->get
EventHandler#shutdown()::: event handler shutdown:::thread->interrupt->while->try->wait->catch->finally
EventHandler#run()::: event handler run:::queue->Env->vm->eventQueue->while->try->eventSet->queue->remove->resumeStoppedApp->it->eventSet->eventIterator->while->it->hasNext->it->nextEvent->handleEvent->if->eventSet->resume->else->if->eventSet->suspendPolicy->setCurrentThread->notifier->vmInterrupted->catch->handleDisconnectedException->break->finally->synchronized->notifyAll
EventHandler#handleEvent(Event)::: event handler handle event:::notifier->receivedEvent->if->return->exceptionEvent->else->if->return->breakpointEvent->else->if->return->fieldWatchEvent->else->if->return->stepEvent->else->if->return->methodEntryEvent->else->if->return->methodExitEvent->else->if->return->classPrepareEvent->else->if->return->classUnloadEvent->else->if->return->threadStartEvent->else->if->return->threadDeathEvent->else->if->return->vmStartEvent->else->return->handleExitEvent
EventHandler#handleExitEvent(Event)::: event handler handle exit event:::if->return->vmDeathEvent->else->if->if->vmDisconnectEvent->setShuttingDown->Env->shutdown->return->else->throw->MessageOutput->new->ObjectArr->event->getClass->format->new->InternalError
EventHandler#handleDisconnectedException()::: event handler handle disconnected exception:::queue->Env->vm->eventQueue->while->try->eventSet->queue->remove->iter->eventSet->eventIterator->while->iter->hasNext->iter->next->handleExitEvent->catch->finally
EventHandler#eventThread(Event)::: event handler event thread:::if->return->thread->else->if->return->thread->else->if->return->thread->else->if->return->thread->else->if->return->thread->else->return
EventHandler#setCurrentThread(EventSet)::: event handler set current thread:::thread->if->set->size->event->set->iterator->next->eventThread->else->setCurrentThread
EventHandler#setCurrentThread(ThreadReference)::: event handler set current thread:::ThreadInfo->invalidateAll->ThreadInfo->setCurrentThread
EventHandler#vmStartEvent(Event)::: event handler vm start event:::se->notifier->vmStartEvent->return
EventHandler#breakpointEvent(Event)::: event handler breakpoint event:::be->notifier->breakpointEvent->return
EventHandler#methodEntryEvent(Event)::: event handler method entry event:::me->notifier->methodEntryEvent->return
EventHandler#methodExitEvent(Event)::: event handler method exit event:::me->return->notifier->methodExitEvent
EventHandler#fieldWatchEvent(Event)::: event handler field watch event:::fwe->notifier->fieldWatchEvent->return
EventHandler#stepEvent(Event)::: event handler step event:::se->notifier->stepEvent->return
EventHandler#classPrepareEvent(Event)::: event handler class prepare event:::cle->notifier->classPrepareEvent->if->resolve->MessageOutput->lnprint->return->else->return
EventHandler#classUnloadEvent(Event)::: event handler class unload event:::cue->notifier->classUnloadEvent->return
EventHandler#exceptionEvent(Event)::: event handler exception event:::ee->notifier->exceptionEvent->return
EventHandler#threadDeathEvent(Event)::: event handler thread death event:::tee->ThreadInfo->tee->thread->removeThread->return
EventHandler#threadStartEvent(Event)::: event handler thread start event:::tse->ThreadInfo->tse->thread->addThread->notifier->threadStartEvent->return
EventHandler#vmDeathEvent(Event)::: event handler vm death event:::notifier->vmDeathEvent->return
EventHandler#vmDisconnectEvent(Event)::: event handler vm disconnect event:::notifier->vmDisconnectEvent->return
EventNotifier#vmStartEvent(VMStartEvent)::: event notifier vm start event:::
EventNotifier#vmDeathEvent(VMDeathEvent)::: event notifier vm death event:::
EventNotifier#vmDisconnectEvent(VMDisconnectEvent)::: event notifier vm disconnect event:::
EventNotifier#threadStartEvent(ThreadStartEvent)::: event notifier thread start event:::
EventNotifier#threadDeathEvent(ThreadDeathEvent)::: event notifier thread death event:::
EventNotifier#classPrepareEvent(ClassPrepareEvent)::: event notifier class prepare event:::
EventNotifier#classUnloadEvent(ClassUnloadEvent)::: event notifier class unload event:::
EventNotifier#breakpointEvent(BreakpointEvent)::: event notifier breakpoint event:::
EventNotifier#fieldWatchEvent(WatchpointEvent)::: event notifier field watch event:::
EventNotifier#stepEvent(StepEvent)::: event notifier step event:::
EventNotifier#exceptionEvent(ExceptionEvent)::: event notifier exception event:::
EventNotifier#methodEntryEvent(MethodEntryEvent)::: event notifier method entry event:::
EventNotifier#methodExitEvent(MethodExitEvent)::: event notifier method exit event:::
EventNotifier#vmInterrupted()::: event notifier vm interrupted:::
EventNotifier#receivedEvent(Event)::: event notifier received event:::
EventRequestSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::
EventRequestSpec#resolve(ClassPrepareEvent)::: event request spec resolve:::if->prepareRequest->event->request->equals->event->referenceType->resolveEventRequest->prepareRequest->disable->Env->vm->eventRequestManager->deleteEventRequest->if->prs->if->prs->isUnique->refSpec->createPrepareRequest->prepareRequest->enable->return
EventRequestSpec#remove()::: event request spec remove:::if->isResolved->Env->vm->eventRequestManager->resolved->deleteEventRequest->if->prs->if->prs->isUnique->deleteList->new->ArrayList<ExceptionRequest>->foreach->Env->vm->eventRequestManager->exceptionRequests->if->prs->er->exception->matches->deleteList->add->Env->vm->eventRequestManager->deleteEventRequests
EventRequestSpec#resolveAgainstPreparedClasses()::: event request spec resolve against prepared classes:::foreach->Env->vm->allClasses->if->refType->isPrepared->refSpec->matches->resolveEventRequest->return
EventRequestSpec#resolveEagerly()::: event request spec resolve eagerly:::try->if->refSpec->createPrepareRequest->prepareRequest->enable->resolveAgainstPreparedClasses->if->prepareRequest->disable->Env->vm->eventRequestManager->deleteEventRequest->if->prs->if->prs->isUnique->if->refSpec->createPrepareRequest->prepareRequest->enable->catch->finally->return
EventRequestSpec#resolved()::: event request spec resolved:::return
EventRequestSpec#isResolved()::: event request spec is resolved:::return
EventRequestSpec#isJavaIdentifier(String)::: event request spec is java identifier:::if->s->length->return->cp->s->codePointAt->if->Character->isJavaIdentifierStart->return->for->i->Character->charCount->s->length->Character->charCount->return
EventRequestSpec#errorMessageFor(Exception)::: event request spec error message for:::if->return->MessageOutput->format->else->if->throw->else->return->MessageOutput->toString->format
EventRequestSpecList#resolve(ClassPrepareEvent):::Resolve all deferred eventRequests waiting for 'refType'.:::failure->synchronized->foreach->if->spec->isResolved->try->eventRequest->spec->resolve->if->MessageOutput->spec->toString->println->catch->MessageOutput->new->ObjectArr->spec->toString->spec->errorMessageFor->println->finally->return
EventRequestSpecList#resolveAll()::: event request spec list resolve all:::foreach->try->eventRequest->spec->resolveEagerly->if->MessageOutput->spec->toString->println->catch->finally
EventRequestSpecList#addEagerlyResolve(EventRequestSpec)::: event request spec list add eagerly resolve:::try->eventRequestSpecs->add->eventRequest->spec->resolveEagerly->if->MessageOutput->spec->toString->println->return->catch->MessageOutput->new->ObjectArr->spec->toString->spec->errorMessageFor->println->return->finally
EventRequestSpecList#createBreakpoint(String, int)::: event request spec list create breakpoint:::refSpec->new->PatternReferenceTypeSpec->return->new->BreakpointSpec
EventRequestSpecList#createBreakpoint(String, String, List)::: event request spec list create breakpoint:::refSpec->new->PatternReferenceTypeSpec->return->new->BreakpointSpec
EventRequestSpecList#createExceptionCatch(String, boolean, boolean)::: event request spec list create exception catch:::refSpec->new->PatternReferenceTypeSpec->return->new->ExceptionSpec
EventRequestSpecList#createAccessWatchpoint(String, String)::: event request spec list create access watchpoint:::refSpec->new->PatternReferenceTypeSpec->return->new->AccessWatchpointSpec
EventRequestSpecList#createModificationWatchpoint(String, String)::: event request spec list create modification watchpoint:::refSpec->new->PatternReferenceTypeSpec->return->new->ModificationWatchpointSpec
EventRequestSpecList#delete(EventRequestSpec)::: event request spec list delete:::synchronized->inx->eventRequestSpecs->indexOf->if->spec->eventRequestSpecs->get->spec->remove->eventRequestSpecs->remove->return->else->return
EventRequestSpecList#eventRequestSpecs()::: event request spec list event request specs:::synchronized->return->new->ArrayList<EventRequestSpec>
ExceptionSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::em->refType->virtualMachine->eventRequestManager->excReq->em->createExceptionRequest->excReq->enable->return
ExceptionSpec#notifyCaught()::: exception spec notify caught:::return
ExceptionSpec#notifyUncaught()::: exception spec notify uncaught:::return
ExceptionSpec#hashCode()::: exception spec hash code:::result->notifyCaught->notifyUncaught->refSpec->hashCode->return
ExceptionSpec#equals(Object)::: exception spec equals:::if->es->if->refSpec->equals->this->notifyCaught->es->notifyCaught->this->notifyUncaught->es->notifyUncaught->return->return
ExceptionSpec#toString()::: exception spec to string:::s->if->MessageOutput->refSpec->toString->format->else->if->MessageOutput->refSpec->toString->format->else->MessageOutput->refSpec->toString->format->return
MessageOutput#fatalError(String):::Fatal shutdown notification:::println->format->println->format->println->Env->shutdown
MessageOutput#format(String):::"Format" a string by doing a simple key lookup.:::return->textResources->getString
MessageOutput#format(String, String):::Fetch and format a message with one string argument:::return->new->ObjectArr->format
MessageOutput#format(String, Object[]):::Fetch a string by key lookup and format in the arguments.:::if->textResources->getString->new->MessageFormat->else->messageFormat->textResources->getString->applyPattern->return->messageFormat->format
MessageOutput#printDirectln(String):::Print directly to System.out:::println
MessageOutput#printDirect(String)::: message output print direct:::print
MessageOutput#printDirect(char)::: message output print direct:::print
MessageOutput#println():::Print a newline:::println
MessageOutput#print(String):::Format and print a simple string.:::format->print
MessageOutput#println(String):::Format and print a simple string.:::format->println
MessageOutput#print(String, String):::Fetch, format and print a message with one string argument:::format->print
MessageOutput#println(String, String)::: message output println:::format->println
MessageOutput#println(String, Object[]):::Fetch, format and print a message with an arbitrary number of message arguments.:::format->println
MessageOutput#lnprint(String):::Print a newline, followed by the string.:::println->textResources->getString->print
MessageOutput#lnprint(String, String)::: message output lnprint:::println->format->print
MessageOutput#lnprint(String, Object[])::: message output lnprint:::println->format->print
MessageOutput#printException(String, Exception):::Print an exception message with a stack trace.:::if->try->println->catch->printDirectln->finally->flush->e->printStackTrace
MessageOutput#printPrompt()::: message output print prompt:::threadInfo->ThreadInfo->getCurrentThreadInfo->if->MessageOutput->format->print->else->MessageOutput->new->ObjectArr->threadInfo->getThread->name->Integer->threadInfo->getCurrentFrameIndex->valueOf->format->print->flush
ModificationWatchpointSpec#resolveEventRequest(ReferenceType):::The 'refType' is known to match, return the EventRequest.:::field->refType->fieldByName->em->refType->virtualMachine->eventRequestManager->wp->em->createModificationWatchpointRequest->wp->setSuspendPolicy->wp->enable->return
ModificationWatchpointSpec#toString()::: modification watchpoint spec to string:::return->MessageOutput->new->ObjectArr->refSpec->toString->format
PatternReferenceTypeSpec#isUnique():::Is this spec unique or is it a class pattern?:::return->classId->equals
PatternReferenceTypeSpec#matches(ReferenceType):::Does the specified ReferenceType match this spec.:::if->classId->startsWith->return->refType->name->endsWith->else->if->classId->endsWith->return->refType->name->startsWith->else->return->refType->name->equals
PatternReferenceTypeSpec#createPrepareRequest()::: pattern reference type spec create prepare request:::request->Env->vm->eventRequestManager->createClassPrepareRequest->request->addClassFilter->request->addCountFilter->return
PatternReferenceTypeSpec#hashCode()::: pattern reference type spec hash code:::return->classId->hashCode
PatternReferenceTypeSpec#equals(Object)::: pattern reference type spec equals:::if->spec->return->classId->equals->else->return
PatternReferenceTypeSpec#checkClassName(String)::: pattern reference type spec check class name:::tokenizer->new->StringTokenizer->while->tokenizer->hasMoreTokens->token->tokenizer->nextToken->if->isJavaIdentifier->throw->new->ClassNotFoundException
PatternReferenceTypeSpec#isJavaIdentifier(String)::: pattern reference type spec is java identifier:::if->s->length->return->cp->s->codePointAt->if->Character->isJavaIdentifierStart->return->for->i->Character->charCount->s->length->Character->charCount->return
PatternReferenceTypeSpec#toString()::: pattern reference type spec to string:::return
ReferenceTypeSpec#matches(ReferenceType):::Does the specified ReferenceType match this spec.:::
ReferenceTypeSpec#createPrepareRequest()::: reference type spec create prepare request:::
ReferenceTypeSpec#hashCode()::: reference type spec hash code:::
ReferenceTypeSpec#equals(Object)::: reference type spec equals:::
SourceMapper#getSourcePath()::: source mapper get source path:::i->sp->if->return->else->new->StringBuffer->for->return->sp->toString
SourceMapper#sourceFile(Location):::Return a File cooresponding to the source of this location:::try->filename->loc->sourceName->refName->loc->declaringType->name->iDot->refName->lastIndexOf->pkgName->refName->substring->full->pkgName->replace->for->i->return->catch->return->finally
SourceMapper#sourceReader(Location):::Return a BufferedReader cooresponding to the source of this location:::sourceFile->sourceFile->if->return->try->return->new->FileReader->new->BufferedReader->catch->finally->return
ThreadGroupIterator#top()::: thread group iterator top:::return->stack->peek
ThreadGroupIterator#push(List):::The invariant in this class is that the top iterator on the stack has more elements:::stack->tgl->iterator->push->while->stack->isEmpty->top->hasNext->stack->pop
ThreadGroupIterator#hasNext()::: thread group iterator has next:::return->stack->isEmpty
ThreadGroupIterator#next()::: thread group iterator next:::return->nextThreadGroup
ThreadGroupIterator#nextThreadGroup()::: thread group iterator next thread group:::tg->top->next->tg->threadGroups->push->return
ThreadGroupIterator#remove()::: thread group iterator remove:::throw->new->UnsupportedOperationException
ThreadGroupIterator#find(String)::: thread group iterator find:::tgi->new->ThreadGroupIterator->while->tgi->hasNext->tg->tgi->nextThreadGroup->if->tg->name->equals->return->return
ThreadInfo#initThreads()::: thread info init threads:::if->foreach->Env->vm->allThreads->threads->new->ThreadInfo->add
ThreadInfo#addThread(ThreadReference)::: thread info add thread:::synchronized->initThreads->ti->new->ThreadInfo->if->getThreadInfo->threads->add
ThreadInfo#removeThread(ThreadReference)::: thread info remove thread:::if->thread->equals->currentThreadName->try->thread->name->catch->finally->setCurrentThread->MessageOutput->println->MessageOutput->println->threads->getThreadInfo->remove
ThreadInfo#threads()::: thread info threads:::synchronized->initThreads->return->new->ArrayList<ThreadInfo>
ThreadInfo#invalidateAll()::: thread info invalidate all:::synchronized->foreach->threads->ti->invalidate
ThreadInfo#setThreadGroup(ThreadGroupReference)::: thread info set thread group:::
ThreadInfo#setCurrentThread(ThreadReference)::: thread info set current thread:::if->setCurrentThreadInfo->else->tinfo->getThreadInfo->setCurrentThreadInfo
ThreadInfo#setCurrentThreadInfo(ThreadInfo)::: thread info set current thread info:::if->current->invalidate
ThreadInfo#getCurrentThreadInfo():::Get the current ThreadInfo object.:::return
ThreadInfo#getThread():::Get the thread from this ThreadInfo object.:::return
ThreadInfo#group()::: thread info group:::if->Env->vm->topLevelThreadGroups->get->setThreadGroup->return
ThreadInfo#getThreadInfo(long)::: thread info get thread info:::retInfo->synchronized->foreach->threads->if->uniqueID->break->return
ThreadInfo#getThreadInfo(ThreadReference)::: thread info get thread info:::return->tr->uniqueID->getThreadInfo
ThreadInfo#getThreadInfo(String)::: thread info get thread info:::tinfo->if->idToken->startsWith->idToken->substring->try->threadId->Long->decode->longValue->getThreadInfo->catch->finally->return
ThreadInfo#getStack():::Get the thread stack frames.:::return->thread->frames
ThreadInfo#getCurrentFrame():::Get the current stackframe.:::if->thread->frameCount->return->return->thread->frame
ThreadInfo#invalidate():::Invalidate the current stackframe index.:::
ThreadInfo#assureSuspended()::: thread info assure suspended:::if->thread->isSuspended->throw->new->IncompatibleThreadStateException
ThreadInfo#getCurrentFrameIndex():::Get the current stackframe index.:::return
ThreadInfo#setCurrentFrameIndex(int):::Set the current stackframe to a specific frame.:::assureSuspended->if->thread->frameCount->throw->new->ArrayIndexOutOfBoundsException
ThreadInfo#up(int):::Change the current stackframe to be one or more frames higher (as in, away from the current program counter).:::setCurrentFrameIndex
ThreadInfo#down(int):::Change the current stackframe to be one or more frames lower (as in, toward the current program counter):::setCurrentFrameIndex
ThreadIterator#hasNext()::: thread iterator has next:::while->it->hasNext->if->tgi->hasNext->return->tgi->nextThreadGroup->threads->iterator->return
ThreadIterator#next()::: thread iterator next:::return->it->next
ThreadIterator#nextThread()::: thread iterator next thread:::return->next
ThreadIterator#remove()::: thread iterator remove:::throw->new->UnsupportedOperationException
TTY#setShuttingDown(boolean)::: y set shutting down:::
TTY#isShuttingDown()::: y is shutting down:::return
TTY#vmStartEvent(VMStartEvent)::: y vm start event:::Thread->yield->MessageOutput->lnprint
TTY#vmDeathEvent(VMDeathEvent)::: y vm death event:::
TTY#vmDisconnectEvent(VMDisconnectEvent)::: y vm disconnect event:::
TTY#threadStartEvent(ThreadStartEvent)::: y thread start event:::
TTY#threadDeathEvent(ThreadDeathEvent)::: y thread death event:::
TTY#classPrepareEvent(ClassPrepareEvent)::: y class prepare event:::
TTY#classUnloadEvent(ClassUnloadEvent)::: y class unload event:::
TTY#breakpointEvent(BreakpointEvent)::: y breakpoint event:::Thread->yield->MessageOutput->lnprint
TTY#fieldWatchEvent(WatchpointEvent)::: y field watch event:::field->fwe->field->obj->fwe->object->Thread->yield->if->MessageOutput->new->ObjectArr->fwe->valueCurrent->valueToBe->lnprint->else->MessageOutput->field->toString->lnprint
TTY#stepEvent(StepEvent)::: y step event:::Thread->yield->MessageOutput->lnprint
TTY#exceptionEvent(ExceptionEvent)::: y exception event:::Thread->yield->catchLocation->ee->catchLocation->if->MessageOutput->ee->exception->referenceType->name->lnprint->else->MessageOutput->new->ObjectArr->ee->exception->referenceType->name->Commands->locationString->lnprint
TTY#methodEntryEvent(MethodEntryEvent)::: y method entry event:::Thread->yield->if->me->request->suspendPolicy->MessageOutput->lnprint->else->MessageOutput->print->printLocationOfEvent
TTY#methodExitEvent(MethodExitEvent)::: y method exit event:::Thread->yield->mmm->Env->atExitMethod->meMethod->me->method->if->mmm->equals->if->me->request->suspendPolicy->MessageOutput->println->if->Env->vm->canGetMethodReturnValues->MessageOutput->me->returnValue->print->else->MessageOutput->print->if->me->request->suspendPolicy->printLocationOfEvent->if->Env->setAtExitMethod->erm->Env->vm->eventRequestManager->foreach->erm->methodExitRequests->if->eReq->me->request->equals->eReq->disable->return->return
TTY#vmInterrupted()::: y vm interrupted:::Thread->yield->printCurrentLocation->foreach->t->new->StringTokenizer->t->nextToken->executeCommand->MessageOutput->printPrompt
TTY#receivedEvent(Event)::: y received event:::
TTY#printBaseLocation(String, Location)::: y print base location:::MessageOutput->new->ObjectArr->Commands->locationString->println
TTY#printCurrentLocation()::: y print current location:::threadInfo->ThreadInfo->getCurrentThreadInfo->frame->try->threadInfo->getCurrentFrame->catch->MessageOutput->println->return->finally->if->MessageOutput->println->else->loc->frame->location->threadInfo->getThread->name->printBaseLocation->if->loc->lineNumber->line->try->Env->loc->lineNumber->sourceLine->catch->finally->if->MessageOutput->new->ObjectArr->loc->lineNumber->println->MessageOutput->println
TTY#printLocationOfEvent(LocatableEvent)::: y print location of event:::theEvent->thread->name->theEvent->location->printBaseLocation
TTY#help()::: y help:::MessageOutput->println
TTY#isCommand(String)::: y is command:::low->high->while->mid->midVal->compare->midVal->compareTo->if->else->if->else->return->return
TTY#isDisconnectCmd(int)::: y is disconnect cmd:::if->return->return->equals
TTY#isReadOnlyCmd(int)::: y is read only cmd:::if->return->return->equals
TTY#executeCommand(StringTokenizer)::: y execute command:::cmd->t->nextToken->toLowerCase->showPrompt->if->cmd->startsWith->if->Character->cmd->charAt->isDigit->t->hasMoreTokens->try->repeat->Integer->parseInt->subcom->t->nextToken->while->new->StringTokenizer->executeCommand->catch->MessageOutput->println->finally->else->commandNumber->isCommand->if->MessageOutput->println->else->if->Env->connection->isOpen->isDisconnectCmd->MessageOutput->println->else->if->Env->connection->isOpen->Env->vm->canBeModified->isReadOnlyCmd->MessageOutput->println->else->evaluator->new->Commands->try->if->cmd->equals->evaluator->commandPrint->else->if->cmd->equals->evaluator->commandPrint->else->if->cmd->equals->evaluator->commandSet->else->if->cmd->equals->evaluator->commandPrint->else->if->cmd->equals->evaluator->commandLocals->else->if->cmd->equals->evaluator->commandClasses->else->if->cmd->equals->evaluator->commandClass->else->if->cmd->equals->evaluator->Bootstrap->virtualMachineManager->commandConnectors->else->if->cmd->equals->evaluator->commandMethods->else->if->cmd->equals->evaluator->commandFields->else->if->cmd->equals->evaluator->commandThreads->else->if->cmd->equals->evaluator->commandThread->else->if->cmd->equals->evaluator->commandSuspend->else->if->cmd->equals->evaluator->commandResume->else->if->cmd->equals->evaluator->commandCont->else->if->cmd->equals->evaluator->commandThreadGroups->else->if->cmd->equals->evaluator->commandThreadGroup->else->if->cmd->equals->evaluator->commandCatchException->else->if->cmd->equals->evaluator->commandIgnoreException->else->if->cmd->equals->evaluator->commandStep->else->if->cmd->equals->evaluator->commandStepi->else->if->cmd->equals->evaluator->commandNext->else->if->cmd->equals->evaluator->commandKill->else->if->cmd->equals->evaluator->commandInterrupt->else->if->cmd->equals->evaluator->commandTrace->else->if->cmd->equals->evaluator->commandUntrace->else->if->cmd->equals->evaluator->commandWhere->else->if->cmd->equals->evaluator->commandWhere->else->if->cmd->equals->evaluator->commandUp->else->if->cmd->equals->evaluator->commandDown->else->if->cmd->equals->evaluator->commandLoad->else->if->cmd->equals->evaluator->commandRun->if->Env->connection->isOpen->new->EventHandler->else->if->cmd->equals->evaluator->commandMemory->else->if->cmd->equals->evaluator->commandGC->else->if->cmd->equals->evaluator->commandStop->else->if->cmd->equals->evaluator->commandClear->else->if->cmd->equals->evaluator->commandWatch->else->if->cmd->equals->evaluator->commandUnwatch->else->if->cmd->equals->evaluator->commandList->else->if->cmd->equals->evaluator->commandLines->else->if->cmd->equals->evaluator->commandClasspath->else->if->cmd->equals->cmd->equals->evaluator->commandUse->else->if->cmd->equals->monitorCommand->else->if->cmd->equals->unmonitorCommand->else->if->cmd->equals->evaluator->commandLock->else->if->cmd->equals->evaluator->commandThreadlocks->else->if->cmd->equals->evaluator->commandDisableGC->else->if->cmd->equals->evaluator->commandEnableGC->else->if->cmd->equals->evaluator->commandSave->else->if->cmd->equals->evaluator->commandBytecodes->else->if->cmd->equals->evaluator->commandRedefine->else->if->cmd->equals->evaluator->commandPopFrames->else->if->cmd->equals->evaluator->commandPopFrames->else->if->cmd->equals->evaluator->commandExtension->else->if->cmd->equals->evaluator->commandExclude->else->if->cmd->equals->readCommand->else->if->cmd->equals->cmd->equals->help->else->if->cmd->equals->evaluator->Bootstrap->virtualMachineManager->commandVersion->else->if->cmd->equals->cmd->equals->if->handler->shutdown->Env->shutdown->else->MessageOutput->println->catch->MessageOutput->println->MessageOutput->println->MessageOutput->println->MessageOutput->printException->finally->if->MessageOutput->printPrompt
TTY#monitorCommand(StringTokenizer)::: y monitor command:::if->t->hasMoreTokens->monitorCommands->t->nextToken->add->else->foreach->MessageOutput->printDirectln
TTY#unmonitorCommand(StringTokenizer)::: y unmonitor command:::if->t->hasMoreTokens->monTok->t->nextToken->monNum->try->Integer->parseInt->catch->MessageOutput->println->return->finally->monStr->foreach->ct->new->StringTokenizer->if->ct->nextToken->equals->monitorCommands->remove->MessageOutput->println->return->MessageOutput->println->else->MessageOutput->println
TTY#readCommand(StringTokenizer)::: y read command:::if->t->hasMoreTokens->cmdfname->t->nextToken->if->new->File->readCommandFile->MessageOutput->println->else->MessageOutput->println
TTY#readCommandFile(File):::Read and execute a command file:::inFile->try->if->f->canRead->MessageOutput->f->getPath->println->new->FileReader->new->BufferedReader->ln->while->inFile->readLine->t->new->StringTokenizer->if->t->hasMoreTokens->executeCommand->catch->finally->if->try->inFile->close->catch->finally->return
TTY#readStartupCommandFile(String, String, String):::Try to read commands from dir/fname, unless the canonical path passed in is the same as that for dir/fname:::dotInitFile->new->File->if->dotInitFile->exists->return->myCanonFile->try->dotInitFile->getCanonicalPath->catch->MessageOutput->dotInitFile->getPath->println->return->finally->if->canonPath->equals->if->readCommandFile->MessageOutput->dotInitFile->getPath->println->return
TTY#usage()::: y usage:::MessageOutput->new->ObjectArr->println->System->exit
TTY#usageError(String)::: y usage error:::MessageOutput->println->MessageOutput->println->usage
TTY#usageError(String, String)::: y usage error:::MessageOutput->println->MessageOutput->println->usage
TTY#supportsSharedMemory()::: y supports shared memory:::foreach->Bootstrap->virtualMachineManager->allConnectors->if->connector->transport->continue->if->connector->transport->name->equals->return->return
TTY#addressToSocketArgs(String)::: y address to socket args:::index->address->indexOf->if->hostString->address->substring->portString->address->substring->return->else->return
TTY#hasWhitespace(String)::: y has whitespace:::length->string->length->for->i->return
TTY#addArgument(String, String)::: y add argument:::if->hasWhitespace->argument->indexOf->sb->new->StringBuilder->sb->append->for->i->argument->length->sb->append->return->sb->toString->else->return
TTY#main(String[])::: y main:::cmdLine->javaArgs->traceFlags->launchImmediately->connectSpec->ResourceBundle->Locale->getDefault->getBundle->for->i->if->else->if->connectSpec->endsWith->connectSpec->endsWith->cmdLine->trim->javaArgs->trim->if->cmdLine->length->if->connectSpec->startsWith->usageError->return->if->javaArgs->length->if->connectSpec->startsWith->usageError->return->try->if->connectSpec->endsWith->Env->init->new->TTY->catch->MessageOutput->printException->finally
TTYResources#getContents():::Returns the contents of this ResourceBundle:::temp->new->ObjectArrs->return
TTYResources_ja#getContents():::Returns the contents of this ResourceBundle:::temp->new->ObjectArrs->return
TTYResources_zh_CN#getContents():::Returns the contents of this ResourceBundle:::temp->new->ObjectArrs->return
VMConnection#notifyOutputComplete()::: connection notify output complete:::notifyAll
VMConnection#waitOutputComplete()::: connection wait output complete:::if->while->try->wait->catch->finally
VMConnection#findConnector(String)::: connection find connector:::foreach->Bootstrap->virtualMachineManager->allConnectors->if->connector->name->equals->return->return
VMConnection#parseConnectorArgs(Connector, String)::: connection parse connector args:::arguments->connector->defaultArguments->regexPattern->p->Pattern->compile->m->p->matcher->while->m->find->startPosition->m->start->endPosition->m->end->if->throw->MessageOutput->format->new->IllegalArgumentException->token->argString->substring->index->token->indexOf->name->token->substring->value->token->token->length->substring->if->name->equals->sb->new->StringBuilder->foreach->splitStringAtNonEnclosedWhiteSpace->while->isEnclosed->isEnclosed->s->s->length->substring->sb->append->sb->append->sb->toString->argument->arguments->get->if->throw->MessageOutput->new->ObjectArr->connector->name->format->new->IllegalArgumentException->argument->setValue->argString->substring->p->matcher->if->argString->equals->argString->length->throw->MessageOutput->format->new->IllegalArgumentException->return
VMConnection#isEnclosed(String, String)::: connection is enclosed:::if->value->indexOf->lastIndex->value->lastIndexOf->if->value->length->return->return
VMConnection#splitStringAtNonEnclosedWhiteSpace(String)::: connection split string at non enclosed white space:::al->new->ArrayList<String>->arr->startPosition->endPosition->SPACE->DOUBLEQ->SINGLEQ->enclosingTargetChar->if->throw->MessageOutput->format->new->IllegalArgumentException->value->toCharArray->for->i->return
VMConnection#isPreviousCharWhitespace(char[], int)::: connection is previous char whitespace:::return->isCharWhitespace
VMConnection#isNextCharWhitespace(char[], int)::: connection is next char whitespace:::return->isCharWhitespace
VMConnection#isCharWhitespace(char[], int)::: connection is char whitespace:::if->return->if->return->return
VMConnection#isLastChar(char[], int)::: connection is last char:::return
VMConnection#open()::: connection open:::if->launchTarget->else->if->attachTarget->else->if->listenTarget->else->throw->MessageOutput->format->new->InternalError->vm->setDebugTraceMode->if->vm->canBeModified->setEventRequests->resolveEventRequests->if->Env->getSourcePath->length->if->psvm->Env->psvm->classPath->setSourcePath->else->Env->setSourcePath->return
VMConnection#setConnectorArg(String, String)::: connection set connector arg:::if->return->argument->connectorArgs->get->if->return->argument->setValue->return
VMConnection#connectorArg(String)::: connection connector arg:::argument->connectorArgs->get->if->return->return->argument->value
VMConnection#vm()::: connection vm:::if->throw->new->VMNotConnectedException->else->return
VMConnection#isOpen()::: connection is open:::return
VMConnection#isLaunch()::: connection is launch:::return
VMConnection#disposeVM()::: connection dispose m:::try->if->vm->dispose->catch->finally->if->process->destroy->waitOutputComplete
VMConnection#setEventRequests(VirtualMachine)::: connection set event requests:::erm->vm->eventRequestManager->evaluator->new->Commands->evaluator->new->StringTokenizer->commandCatchException->tsr->erm->createThreadStartRequest->tsr->enable->tdr->erm->createThreadDeathRequest->tdr->enable
VMConnection#resolveEventRequests()::: connection resolve event requests:::resolveAll
VMConnection#dumpStream(InputStream)::: connection dump stream:::in->new->InputStreamReader->new->BufferedReader->i->try->while->in->read->MessageOutput->printDirect->catch->s->ex->getMessage->if->s->startsWith->throw->finally
VMConnection#displayRemoteOutput(InputStream)::: Create a Thread that will retrieve and display any output:::thr->new->Thread->thr->setPriority->thr->start
VMConnection#dumpFailedLaunchInfo(Process)::: connection dump failed launch info:::try->process->getErrorStream->dumpStream->process->getInputStream->dumpStream->catch->MessageOutput->e->getMessage->println->finally
VMConnection#launchTarget()::: connection launch target:::launcher->try->vm->launcher->launch->vm->process->process->getErrorStream->displayRemoteOutput->process->getInputStream->displayRemoteOutput->return->catch->ioe->printStackTrace->MessageOutput->fatalError->icae->printStackTrace->MessageOutput->fatalError->MessageOutput->vmse->getMessage->println->MessageOutput->println->vmse->process->dumpFailedLaunchInfo->MessageOutput->fatalError->finally->return
VMConnection#attachTarget()::: connection attach target:::attacher->try->return->attacher->attach->catch->ioe->printStackTrace->MessageOutput->fatalError->icae->printStackTrace->MessageOutput->fatalError->finally->return
VMConnection#listenTarget()::: connection listen target:::listener->try->retAddress->listener->startListening->MessageOutput->println->listener->accept->listener->stopListening->return->catch->ioe->printStackTrace->MessageOutput->fatalError->icae->printStackTrace->MessageOutput->fatalError->finally->return
WatchpointSpec#hashCode()::: watchpoint spec hash code:::return->refSpec->hashCode->fieldId->hashCode->getClass->hashCode
WatchpointSpec#equals(Object)::: watchpoint spec equals:::if->watchpoint->return->fieldId->equals->refSpec->equals->getClass->watchpoint->getClass->equals->else->return
WatchpointSpec#errorMessageFor(Exception)::: watchpoint spec error message for:::if->return->MessageOutput->new->ObjectArr->refSpec->toString->format->else->return->super->errorMessageFor
