ProcAddress#minus(Address):::(FIXME: any signed/unsigned issues? Should this work for       OopHandles?):::if->return->return
ProcDebuggerLocal#hasProcessList():::FIXME: implement this with a Runtime.exec() of ps followed by parsing of its output:::return
ProcDebuggerLocal#attach(int):::From the Debugger interface via JVMDebugger:::checkAttached->new->Integer->toString->attach0
ProcDebuggerLocal#attach(String, String):::From the Debugger interface via JVMDebugger:::checkAttached->new->HashMap->attach0
ProcDebuggerLocal#detach():::From the Debugger interface via JVMDebugger:::if->return->try->if->return->detach0->clearCache->return->catch->e->printStackTrace->return->finally->resetNativePointers->clearCacheFields
ProcDebuggerLocal#parseAddress(String):::From the Debugger interface via JVMDebugger:::addr->utils->scanAddress->if->return->return->new->ProcAddress
ProcDebuggerLocal#getOS():::From the Debugger interface via JVMDebugger:::return->PlatformInfo->getOS
ProcDebuggerLocal#getCPU():::From the Debugger interface via JVMDebugger:::return->PlatformInfo->getCPU
ProcDebuggerLocal#lookup(String, String):::From the SymbolLookup interface via Debugger and JVMDebugger:::requireAttach->addr->lookupByName0->if->return->return->new->ProcAddress
ProcDebuggerLocal#lookupOop(String, String):::From the SymbolLookup interface via Debugger and JVMDebugger:::addr->lookup->if->return->return->addr->addOffsetToAsOopHandle
ProcDebuggerLocal#getMachineDescription():::From the ProcDebugger interface:::return
ProcDebuggerLocal#getThreadForIdentifierAddress(Address):::From the ThreadAccess interface via Debugger and JVMDebugger:::return->threadFactory->createThreadWrapper
ProcDebuggerLocal#addressValueToString(long):::From the ProcDebugger interface:::return->utils->addressValueToString
ProcDebuggerLocal#readCInteger(long, long, boolean):::Need to override this to relax alignment checks on Solaris/x86.:::checkConfigured->if->utils->checkAlignment->else->if->utils->checkAlignment->else->utils->checkAlignment->data->readBytes->return->utils->dataToCInteger
ProcDebuggerLocal#readAddress(long):::From the ProcDebugger interface:::value->readAddressValue->return->new->ProcAddress
ProcDebuggerLocal#readOopHandle(long):::From the ProcDebugger interface:::value->readAddressValue->return->new->ProcOopHandle
ProcDebuggerLocal#getThreadIntegerRegisterSet(int):::From the ProcDebugger interface:::requireAttach->return->getThreadIntegerRegisterSet0
ProcDebuggerLocal#getAddressValue(Address):::From the ProcDebugger interface:::if->return->return->getValue
ProcDebuggerLocal#newAddress(long):::From the ProcDebugger interface:::if->return->return->new->ProcAddress
ProcDebuggerLocal#getThreadList():::From the ProcDebugger interface:::requireAttach->res->if->else->new->ArrayList->fillThreadList0->if->return
ProcDebuggerLocal#getLoadObjectList():::From the ProcDebugger interface:::requireAttach->if->throw->new->DebuggerException->if->updateLoadObjectCache->return
ProcDebuggerLocal#topFrameForThread(ThreadProxy):::From the ProcDebugger interface:::requireAttach->res->if->topFrameCache->get->return->else->context->thread->getContext->numRegs->context->getNumRegisters->regs->new->longArr->for->i->fillCFrameList0->if->topFrameCache->put->return
ProcDebuggerLocal#lookup(long):::From the ProcDebugger interface:::requireAttach->return->lookupByAddress0
ProcDebuggerLocal#demangle(String):::From the ProcDebugger interface:::return->demangle0
