AclEntry.Builder#build():::Constructs an AclEntry from the components of this builder:::
AclEntry.Builder#setType(AclEntryType):::Sets the type component of this builder.:::
AclEntry.Builder#setPrincipal(UserPrincipal):::Sets the principal component of this builder.:::
AclEntry.Builder#setPermissions(Set):::Sets the permissions component of this builder:::perms.isEmpty->EnumSet.copyOf->this.checkSet->Collections.emptySet
AclEntry.Builder#setPermissions(AclEntryPermission...):::Sets the permissions component of this builder:::EnumSet.noneOf->set.add
AclEntry.Builder#setFlags(Set):::Sets the flags component of this builder:::flags.isEmpty->EnumSet.copyOf->this.checkSet->Collections.emptySet
AclEntry.Builder#setFlags(AclEntryFlag...):::Sets the flags component of this builder:::EnumSet.noneOf->set.add
AclEntry#newBuilder():::Constructs a new builder:::Collections.emptySet->Collections.emptySet
AclEntry#newBuilder(AclEntry):::Constructs a new builder with the components of an existing ACL entry.:::
AclEntry#type():::Returns the ACL entry type.:::
AclEntry#principal():::Returns the principal component.:::
AclEntry#permissions():::Returns a copy of the permissions component:::
AclEntry#flags():::Returns a copy of the flags component:::
AclEntry#equals(Object):::Compares the specified object with this ACL entry for equality:::this.who.equals->this.perms.equals->this.flags.equals
AclEntry#hashCode():::Returns the hash-code value for this ACL entry:::type.hashCode->this.hash->this.hash->this.hash
AclEntry#toString():::Returns the string representation of this ACL entry.:::who.getName->sb.append->sb.append->perm.name->sb.append->sb.append->sb.length->sb.setLength->sb.append->flags.isEmpty->flag.name->sb.append->sb.append->sb.length->sb.setLength->sb.append->type.name->sb.append->sb.toString
AclFileAttributeView#name():::Returns the name of the attribute view:::
AclFileAttributeView#getAcl():::Reads the access control list:::
AclFileAttributeView#setAcl(List):::Updates (replace) the access control list:::
AttributeView#name():::Returns the name of the attribute view.:::
BasicFileAttributes#lastModifiedTime():::Returns the time of last modification:::
BasicFileAttributes#lastAccessTime():::Returns the time of last access:::
BasicFileAttributes#creationTime():::Returns the creation time:::
BasicFileAttributes#isRegularFile():::Tells whether the file is a regular file with opaque content.:::
BasicFileAttributes#isDirectory():::Tells whether the file is a directory.:::
BasicFileAttributes#isSymbolicLink():::Tells whether the file is a symbolic link.:::
BasicFileAttributes#isOther():::Tells whether the file is something other than a regular file, directory, or symbolic link.:::
BasicFileAttributes#size():::Returns the size of the file (in bytes):::
BasicFileAttributes#fileKey():::Returns an object that uniquely identifies the given file, or null if a file key is not available:::
BasicFileAttributeView#name():::Returns the name of the attribute view:::
BasicFileAttributeView#readAttributes():::Reads the basic file attributes as a bulk operation:::
BasicFileAttributeView#setTimes(FileTime, FileTime, FileTime):::Updates any or all of the file's last modified time, last access time, and create time attributes:::
DosFileAttributes#isReadOnly():::Returns the value of the read-only attribute:::
DosFileAttributes#isHidden():::Returns the value of the hidden attribute:::
DosFileAttributes#isArchive():::Returns the value of the archive attribute:::
DosFileAttributes#isSystem():::Returns the value of the system attribute:::
DosFileAttributeView#name():::Returns the name of the attribute view:::
DosFileAttributeView#setReadOnly(boolean):::Updates the value of the read-only attribute:::
DosFileAttributeView#setHidden(boolean):::Updates the value of the hidden attribute:::
DosFileAttributeView#setSystem(boolean):::Updates the value of the system attribute:::
DosFileAttributeView#setArchive(boolean):::Updates the value of the archive attribute:::
FileAttribute#name():::Returns the attribute name.:::
FileAttribute#value():::Returns the attribute value.:::
FileOwnerAttributeView#name():::Returns the name of the attribute view:::
FileOwnerAttributeView#getOwner():::Read the file owner:::
FileOwnerAttributeView#setOwner(UserPrincipal):::Updates the file owner:::
FileTime#from(long, TimeUnit):::Returns a FileTime representing a value at the given unit of granularity.:::Objects.requireNonNull
FileTime#fromMillis(long):::Returns a FileTime representing the given value in milliseconds.:::
FileTime#from(Instant):::Returns a FileTime representing the same point of time value on the time-line as the provided Instant object.:::Objects.requireNonNull
FileTime#to(TimeUnit):::Returns the value at the given unit of granularity:::Objects.requireNonNull->instant.getEpochSecond->unit.convert->instant.getNano->unit.convert->unit.convert
FileTime#toMillis():::Returns the value in milliseconds:::instant.getEpochSecond->instant.getNano->Math.abs->unit.toMillis
FileTime#toInstant():::Converts this FileTime object to an Instant:::this.scale->this.scale->this.scale->Math.floorDiv->Math.floorMod->Math.floorDiv->Math.floorMod->Math.floorDiv->Math.floorMod->Instant.ofEpochSecond
FileTime#equals(Object):::Tests this FileTime for equality with the given object:::this.compareTo
FileTime#hashCode():::Computes a hash code for this file time:::toInstant().hashCode
FileTime#compareTo(FileTime):::Compares the value of two FileTime objects for order.:::toInstant().getEpochSecond->other.toInstant().getEpochSecond->Long.compare->toInstant().getNano->other.toInstant().getNano->Long.compare->this.toDays->other.toDays->this.toExcessNanos->other.toExcessNanos->Long.compare->Long.compare->Long.compare
FileTime#toString():::Returns the string representation of this FileTime:::unit.compareTo->toInstant().getEpochSecond->toInstant().getNano->unit.toSeconds->LocalDateTime.ofEpochSecond->ldt.getYear->Math.floorDiv->Math.floorMod->LocalDateTime.ofEpochSecond->ldt.getYear->ldt.getNano->sb.append->Math.abs->String.valueOf->sb.append->Math.abs->this.append->sb.append->ldt.getMonthValue->this.append->sb.append->ldt.getDayOfMonth->this.append->sb.append->ldt.getHour->this.append->sb.append->ldt.getMinute->this.append->sb.append->ldt.getSecond->this.append->sb.append->this.append->sb.append->sb.toString
PosixFileAttributes#owner():::Returns the owner of the file.:::
PosixFileAttributes#group():::Returns the group owner of the file.:::
PosixFileAttributes#permissions():::Returns the permissions of the file:::
PosixFileAttributeView#name():::Returns the name of the attribute view:::
PosixFileAttributeView#setPermissions(Set):::Updates the file permissions.:::
PosixFileAttributeView#setGroup(GroupPrincipal):::Updates the file group-owner.:::
PosixFilePermissions#toString(Set):::Returns the String representation of a set of permissions:::perms.contains->perms.contains->perms.contains->this.writeBits->perms.contains->perms.contains->perms.contains->this.writeBits->perms.contains->perms.contains->perms.contains->this.writeBits->sb.toString
PosixFilePermissions#fromString(String):::Returns the set of permissions corresponding to a given String representation:::perms.length->EnumSet.noneOf->perms.charAt->this.isR->result.add->perms.charAt->this.isW->result.add->perms.charAt->this.isX->result.add->perms.charAt->this.isR->result.add->perms.charAt->this.isW->result.add->perms.charAt->this.isX->result.add->perms.charAt->this.isR->result.add->perms.charAt->this.isW->result.add->perms.charAt->this.isX->result.add
PosixFilePermissions#asFileAttribute(Set):::Creates a FileAttribute, encapsulating a copy of the given file permissions, suitable for passing to the java.nio.file.Files#createFile createFile or java.nio.file.Files#createDirectory createDirectory methods.:::Collections.unmodifiableSet
UserDefinedFileAttributeView#name():::Returns the name of this attribute view:::
UserDefinedFileAttributeView#list():::Returns a list containing the names of the user-defined attributes.:::
UserDefinedFileAttributeView#size(String):::Returns the size of the value of a user-defined attribute.:::
UserDefinedFileAttributeView#read(String, ByteBuffer):::Read the value of a user-defined attribute into a buffer:::
UserDefinedFileAttributeView#write(String, ByteBuffer):::Writes the value of a user-defined attribute from a buffer:::
UserDefinedFileAttributeView#delete(String):::Deletes a user-defined attribute.:::
UserPrincipalLookupService#lookupPrincipalByName(String):::Lookup a user principal by name.:::
UserPrincipalLookupService#lookupPrincipalByGroupName(String):::Lookup a group principal by group name:::
UserPrincipalNotFoundException#getName():::Returns the user principal name if this exception was created with the user principal name that was not found, otherwise null.:::
