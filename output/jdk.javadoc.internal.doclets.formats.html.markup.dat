Comment#addContent(Content):::This method is not supported by the class.:::throw->new->UnsupportedOperationException
Comment#addContent(CharSequence):::This method is not supported by the class.:::throw->new->UnsupportedOperationException
Comment#isEmpty()::: comment is empty:::return->commentText->isEmpty
Comment#write(Writer, boolean)::: comment write:::if->out->write->out->write->out->write->out->write->return
ContentBuilder#addContent(Content)::: content builder add content:::nullCheck->ensureMutableContents->if->contents->addAll->else->contents->add
ContentBuilder#addContent(CharSequence)::: content builder add content:::if->text->length->return->ensureMutableContents->c->contents->isEmpty->contents->contents->size->get->sc->if->else->contents->new->StringContent->add->sc->addContent
ContentBuilder#write(Writer, boolean)::: content builder write:::foreach->content->write->return
ContentBuilder#isEmpty()::: content builder is empty:::foreach->if->content->isEmpty->return->return
ContentBuilder#charCount()::: content builder char count:::n->foreach->c->charCount->return
ContentBuilder#ensureMutableContents()::: content builder ensure mutable contents:::if->contents->isEmpty->new->ArrayList<>
FixedStringContent#addContent(Content):::This method is not supported by the class.:::throw->new->UnsupportedOperationException
FixedStringContent#addContent(CharSequence):::Adds content for the StringContent object:::throw->new->UnsupportedOperationException
FixedStringContent#isEmpty()::: fixed string content is empty:::return->string->isEmpty
FixedStringContent#charCount()::: fixed string content char count:::return->RawHtml->charCount
FixedStringContent#toString()::: fixed string content to string:::return
FixedStringContent#write(Writer, boolean)::: fixed string content write:::out->write->return->string->endsWith
FixedStringContent#needEscape(CharSequence)::: fixed string content need escape:::for->i->cs->length->return
FixedStringContent#escape(CharSequence)::: fixed string content escape:::sb->new->StringBuilder->for->i->s->length->return->sb->toString
Head#setTitle(String):::Sets the title to appear in the TITLE element.:::return
Head#setCharset(String)::: head set charset:::return
Head#addKeywords(List):::Adds a list of keywords to appear in META [@code keywords} elements.:::if->addAll->return
Head#setTimestamp(boolean)::: head set timestamp:::return
Head#setTimestamp(boolean, boolean)::: head set timestamp:::return
Head#setStylesheets(DocFile, List):::Sets the main and any additional stylesheets to be listed in the HEAD element.:::return
Head#setUseModuleDirectories(boolean):::Sets whether the module directories should be used:::return
Head#setIndex(boolean, Script):::Sets whether or not to include the supporting scripts and stylesheets for the "search" feature:::return
Head#addScript(Script):::Adds a script to be included in the HEAD element.:::scripts->add->return
Head#addDefaultScript(boolean):::Specifies whether or not to add a reference to a default script to be included in the HEAD element:::return
Head#setCanonicalLink(DocPath):::Specifies a value for a canonical link in the <head> element.:::
Head#addContent(Content...):::Adds additional content to be included in the HEAD element.:::extraContent->Arrays->asList->addAll->return
Head#toContent():::Returns the HTML for the HEAD element.:::now->calendar->getTime->tree->new->HtmlTree->if->tree->getGeneratedBy->addContent->tree->HtmlTree->TITLE->addContent->if->tree->HtmlTree->META->addContent->if->dateFormat->new->SimpleDateFormat->tree->HtmlTree->dateFormat->format->META->addContent->foreach->tree->HtmlTree->META->addContent->foreach->tree->addContent->if->link->new->HtmlTree->link->addAttr->link->canonicalLink->getPath->addAttr->tree->addContent->addStylesheets->addScripts->return
Head#getGeneratedBy(boolean, Date)::: head get generated by:::text->if->return->new->Comment
Head#addStylesheets(HtmlTree)::: head add stylesheets:::mainStylesheet->if->else->DocPath->mainStylesheetFile->getName->create->addStylesheet->foreach->DocPath->file->getName->create->addStylesheet->if->resolve->addStylesheet
Head#addStylesheet(HtmlTree, DocPath)::: head add stylesheet:::tree->HtmlTree->pathToRoot->resolve->getPath->LINK->addContent
Head#addScripts(HtmlTree)::: head add scripts:::if->tree->HtmlTree->pathToRoot->resolve->getPath->SCRIPT->addContent->if->if->ptrPath->pathToRoot->isEmpty->pathToRoot->getPath->mainBodyScript->append->appendStringLiteral->append->append->append->addJQueryFile->addJQueryFile->tree->new->RawHtml->addContent->addJQueryFile->tree->new->RawHtml->addContent->addJQueryFile->addJQueryFile->foreach->tree->script->asContent->addContent
Head#addJQueryFile(HtmlTree, DocPath)::: head add query file:::jqueryFile->pathToRoot->resolve->resolve->tree->HtmlTree->jqueryFile->getPath->SCRIPT->addContent
HtmlDocument#write(DocFile):::Writes the content of this document to the specified file.:::try->writer->docFile->openWriter->write->catch->throw->new->DocFileIOException->finally
HtmlDocument#toString()::: html document to string:::try->writer->new->StringWriter->write->return->writer->toString->catch->throw->new->Error->finally
HtmlDocument#write(Writer)::: html document write:::writer->write->writer->write->atNewline->foreach->c->write
HtmlTree#addAttr(HtmlAttr, String):::Adds an attribute for the HTML tag.:::if->attrs->isEmpty->new->LinkedHashMap<>->attrs->nullCheck->escapeHtmlChars->put->return
HtmlTree#setTitle(Content):::Sets the "title" attribute for this tag:::stripHtml->addAttr->return
HtmlTree#setRole(Role):::Sets the "role" attribute for this tag.:::role->toString->addAttr->return
HtmlTree#setStyle(HtmlStyle):::Sets the style for the HTML tag.:::style->toString->addAttr->return
HtmlTree#addContent(Content):::Adds content for the HTML tag.:::if->foreach->addContent->else->if->tagContent->isValid->if->content->isEmpty->new->ArrayList<>->content->add
HtmlTree#addContent(CharSequence):::Adds String content to the HTML tree:::if->content->isEmpty->lastContent->content->content->size->get->if->lastContent->addContent->else->new->StringContent->addContent->else->new->StringContent->addContent
HtmlTree#charCount()::: html tree char count:::n->foreach->c->charCount->return
HtmlTree#escapeHtmlChars(String):::Given a string, escape all special HTML characters and return the result.:::for->i->s->length->return
HtmlTree#bitSet(String)::: html tree bit set:::result->new->BitSet->for->i->s->length->return
HtmlTree#bitSet(char, char)::: html tree bit set:::result->new->BitSet->result->set->return
HtmlTree#bitSet(BitSet...)::: html tree bit set:::result->new->BitSet->foreach->result->or->return
HtmlTree#encodeURL(String):::Apply percent-encoding to a URL:::nonEncodingChars->sb->new->StringBuilder->foreach->url->Charset->forName->getBytes->if->sb->append->else->if->nonEncodingChars->get->sb->append->else->sb->String->format->append->return->sb->toString
HtmlTree#A(String, Content):::Generates an HTML anchor tag.:::htmltree->nullCheck->new->HtmlTree->htmltree->encodeURL->addAttr->return
HtmlTree#A(HtmlVersion, String, Content):::Generates an HTML anchor tag with an id or a name attribute and content.:::htmltree->new->HtmlTree->htmltree->nullCheck->addAttr->htmltree->nullCheck->addContent->return
HtmlTree#A_ID(String, Content):::Generates an HTML anchor tag with id attribute and a body.:::htmltree->new->HtmlTree->htmltree->nullCheck->addAttr->htmltree->nullCheck->addContent->return
HtmlTree#A_ID(HtmlStyle, String, Content):::Generates an HTML anchor tag with a style class, id attribute and a body.:::htmltree->A_ID->if->htmltree->setStyle->return
HtmlTree#CAPTION(Content):::Generates a CAPTION tag with some content.:::htmltree->nullCheck->new->HtmlTree->return
HtmlTree#CODE(Content):::Generates a CODE tag with some content.:::htmltree->nullCheck->new->HtmlTree->return
HtmlTree#DD(Content):::Generates a DD tag with some content.:::htmltree->nullCheck->new->HtmlTree->return
HtmlTree#DL(Content):::Generates a DL tag with some content.:::htmltree->nullCheck->new->HtmlTree->return
HtmlTree#DIV(HtmlStyle, Content):::Generates a DIV tag with the style class attributes:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setStyle->return
HtmlTree#DIV(Content):::Generates a DIV tag with some content.:::return->DIV
HtmlTree#DT(Content):::Generates a DT tag with some content.:::htmltree->nullCheck->new->HtmlTree->return
HtmlTree#FOOTER():::Generates a FOOTER tag with role attribute.:::htmltree->new->HtmlTree->htmltree->setRole->return
HtmlTree#HEADER():::Generates a HEADER tag with role attribute.:::htmltree->new->HtmlTree->htmltree->setRole->return
HtmlTree#HEADING(HtmlTag, boolean, HtmlStyle, Content):::Generates a heading tag (h1 to h6) with the title and style class attributes:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setTitle->if->htmltree->setStyle->return
HtmlTree#HEADING(HtmlTag, HtmlStyle, Content):::Generates a heading tag (h1 to h6) with style class attribute:::return->HEADING
HtmlTree#HEADING(HtmlTag, boolean, Content):::Generates a heading tag (h1 to h6) with the title attribute:::return->HEADING
HtmlTree#HEADING(HtmlTag, Content):::Generates a heading tag (h1 to h6)  with some content.:::return->HEADING
HtmlTree#HTML(String, Content, Content):::Generates an HTML tag with lang attribute:::htmltree->nullCheck->nullCheck->new->HtmlTree->htmltree->nullCheck->addAttr->return
HtmlTree#IFRAME(String, String, String):::Generates a IFRAME tag.:::htmltree->new->HtmlTree->htmltree->nullCheck->addAttr->htmltree->nullCheck->addAttr->htmltree->nullCheck->addAttr->return
HtmlTree#INPUT(String, String, String):::Generates a INPUT tag with some id.:::htmltree->new->HtmlTree->htmltree->nullCheck->addAttr->htmltree->nullCheck->addAttr->htmltree->nullCheck->addAttr->htmltree->addAttr->return
HtmlTree#LABEL(String, Content):::Generates a LABEL tag with some content.:::htmltree->nullCheck->new->HtmlTree->htmltree->nullCheck->addAttr->return
HtmlTree#LI(Content):::Generates a LI tag with some content.:::return->LI
HtmlTree#LI(HtmlStyle, Content):::Generates a LI tag with some content.:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setStyle->return
HtmlTree#LINK(String, String, String, String):::Generates a LINK tag with the rel, type, href and title attributes.:::htmltree->new->HtmlTree->htmltree->nullCheck->addAttr->htmltree->nullCheck->addAttr->htmltree->nullCheck->addAttr->htmltree->nullCheck->addAttr->return
HtmlTree#MAIN():::Generates a MAIN tag with role attribute.:::htmltree->new->HtmlTree->htmltree->setRole->return
HtmlTree#MAIN(Content):::Generates a MAIN tag with role attribute and some content.:::htmltree->nullCheck->new->HtmlTree->htmltree->setRole->return
HtmlTree#MAIN(HtmlStyle, Content):::Generates a MAIN tag with role attribute, style attribute and some content.:::htmltree->HtmlTree->MAIN->if->htmltree->setStyle->return
HtmlTree#META(String, String, String):::Generates a META tag with the http-equiv, content and charset attributes.:::htmltree->new->HtmlTree->contentCharset->htmltree->nullCheck->addAttr->htmltree->addAttr->return
HtmlTree#META(String, String):::Generates a META tag with the name and content attributes.:::htmltree->new->HtmlTree->htmltree->nullCheck->addAttr->htmltree->nullCheck->addAttr->return
HtmlTree#NAV():::Generates a NAV tag with the role attribute.:::htmltree->new->HtmlTree->htmltree->setRole->return
HtmlTree#NOSCRIPT(Content):::Generates a NOSCRIPT tag with some content.:::htmltree->nullCheck->new->HtmlTree->return
HtmlTree#P(Content):::Generates a P tag with some content.:::return->P
HtmlTree#P(HtmlStyle, Content):::Generates a P tag with some content.:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setStyle->return
HtmlTree#SCRIPT(String):::Generates a SCRIPT tag with the type and src attributes.:::htmltree->new->HtmlTree->htmltree->addAttr->htmltree->nullCheck->addAttr->return
HtmlTree#SECTION():::Generates a SECTION tag with role attribute.:::htmltree->new->HtmlTree->htmltree->setRole->return
HtmlTree#SECTION(Content):::Generates a SECTION tag with role attribute and some content.:::htmltree->nullCheck->new->HtmlTree->htmltree->setRole->return
HtmlTree#SMALL(Content):::Generates a SMALL tag with some content.:::htmltree->nullCheck->new->HtmlTree->return
HtmlTree#SPAN(Content):::Generates a SPAN tag with some content.:::return->SPAN
HtmlTree#SPAN(HtmlStyle, Content):::Generates a SPAN tag with style class attribute and some content.:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setStyle->return
HtmlTree#SPAN(String, HtmlStyle, Content):::Generates a SPAN tag with id and style class attributes:::htmltree->nullCheck->new->HtmlTree->htmltree->nullCheck->addAttr->if->htmltree->setStyle->return
HtmlTree#TABLE(HtmlStyle, String, Content):::Generates a Table tag with style class and summary attributes and some content.:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setStyle->htmltree->nullCheck->addAttr->return
HtmlTree#TABLE(HtmlStyle, Content):::Generates a Table tag with style class attribute and some content.:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setStyle->return
HtmlTree#TD(HtmlStyle, Content):::Generates a TD tag with style class attribute and some content.:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setStyle->return
HtmlTree#TD(Content):::Generates a TD tag for an HTML table with some content.:::return->TD
HtmlTree#TH(HtmlStyle, String, Content):::Generates a TH tag with style class and scope attributes and some content.:::htmltree->nullCheck->new->HtmlTree->if->htmltree->setStyle->htmltree->nullCheck->addAttr->return
HtmlTree#TH(String, Content):::Generates a TH tag with scope attribute and some content.:::return->TH
HtmlTree#TH_ROW_SCOPE(HtmlStyle, Content):::Generates a TH tag with style class, scope attribute and some content.:::return->TH
HtmlTree#TITLE(String):::Generates a TITLE tag with some content.:::htmltree->new->StringContent->new->HtmlTree->return
HtmlTree#TR(Content):::Generates a TR tag for an HTML table with some content.:::htmltree->nullCheck->new->HtmlTree->return
HtmlTree#UL(HtmlStyle, Content, Content...):::Generates a UL tag with the style class attribute and some content.:::htmlTree->new->HtmlTree->htmlTree->nullCheck->addContent->foreach->htmlTree->nullCheck->addContent->htmlTree->nullCheck->setStyle->return
HtmlTree#isEmpty()::: html tree is empty:::return->hasContent->hasAttrs
HtmlTree#hasContent():::Returns true if the HTML tree has content.:::return->content->isEmpty
HtmlTree#hasAttrs():::Returns true if the HTML tree has attributes.:::return->attrs->isEmpty
HtmlTree#hasAttr(HtmlAttr):::Returns true if the HTML tree has a specific attribute.:::return->attrs->containsKey
HtmlTree#isValid():::Returns true if the HTML tree is valid:::switch->return->hasAttr->hasAttr->hasAttr->hasContent->return->hasContent->hasAttrs->hasAttr->return->hasAttr->hasContent->return->hasContent->return->hasAttr->hasAttr->hasContent->return->hasAttr->hasContent->return->hasAttr->hasContent->return->hasAttr->hasAttr->hasContent->hasAttr->hasContent->return->hasContent
HtmlTree#isInline():::Returns true if the element is an inline element.:::return
HtmlTree#write(Writer, boolean)::: html tree write:::if->isInline->out->write->tagString->htmlTag->toString->out->write->out->write->iterator->attrs->keySet->iterator->key->value->while->iterator->hasNext->iterator->next->attrs->get->out->write->out->key->toString->write->if->value->isEmpty->out->write->out->write->out->write->out->write->nl->foreach->c->write->if->htmlTag->endTagRequired->out->write->out->write->out->write->if->isInline->out->write->return->else->return
HtmlTree#stripHtml(Content):::Given a Content node, strips all html characters and return the result.:::rawString->body->toString->rawString->replaceAll->rawString->replaceAll->return->rawString->trim
Links#createAnchor(String):::Creates an anchor of the form <!-- -->:::return->getName->createAnchor
Links#createAnchor(SectionName):::Creates an anchor of the form <!-- -->:::return->sectionName->getName->createAnchor
Links#createAnchor(SectionName, String):::Creates an anchor of the form <!-- -->:::return->sectionName->getName->getName->createAnchor
Links#createAnchor(String, Content):::Creates an anchor of the form content:::return->HtmlTree->A
Links#createLink(String, Content):::Creates a link of the form label.:::l->DocLink->getName->fragment->return->createLink
Links#createLink(SectionName, Content):::Creates a link of the form label.:::l->DocLink->sectionName->getName->fragment->return->createLink
Links#createLink(SectionName, String, Content):::Creates a link of the form label.:::l->DocLink->sectionName->getName->getName->fragment->return->createLink
Links#createLink(SectionName, Content, String, String):::Creates a link of the form label.:::l->DocLink->sectionName->getName->fragment->return->createLink
Links#createLink(DocPath, String):::Creates a link of the form label.:::return->new->StringContent->createLink
Links#createLink(DocPath, Content):::Creates a link of the form label.:::return->createLink
Links#createLink(DocPath, Content, boolean, String, String):::Creates a link of the form label:::return->new->DocLink->createLink
Links#createLink(DocPath, Content, String, String):::Creates a link of the form label.:::return->new->DocLink->createLink
Links#createLink(DocLink, Content):::Creates a link of the form label.:::return->createLink
Links#createLink(DocLink, Content, String, String):::Creates a link of the form label.:::anchor->HtmlTree->link->relativizeAgainst->toString->A->if->title->length->anchor->addAttr->if->target->length->anchor->addAttr->return
Links#createLink(DocLink, Content, boolean, String, String):::Creates a link of the form label:::return->createLink
Links#createLink(DocLink, Content, boolean, String, String, boolean):::Creates a link of the form label:::body->if->HtmlTree->SPAN->l->HtmlTree->link->relativizeAgainst->toString->A->if->title->length->l->addAttr->if->target->length->l->addAttr->if->l->setStyle->return
Links#createLink(DocLink, Content, boolean):::Creates a link.:::anchor->HtmlTree->link->relativizeAgainst->toString->A->anchor->setStyle->return
Links#getName(String):::Converts a name to a valid HTML name (id):::if->return->name->replaceAll->sb->new->StringBuilder->for->i->name->length->return->sb->toString
Navigation#populateNavContents(Position):::Populate the navigation contents for top and bottom navigation:::queue->new->ArrayDeque<>->skipNavLinks->configuration->getContent->switch->queue->links->createAnchor->addLast->queue->links->skipNavLinks->toString->createLink->addLast->queue->links->createAnchor->addLast->queue->links->createAnchor->addLast->topBottomNavContents->put->break->queue->links->createAnchor->addLast->queue->links->skipNavLinks->toString->createLink->addLast->queue->links->createAnchor->addLast->queue->links->createAnchor->addLast->topBottomNavContents->put->break->break
Navigation#setNavLinkModule(Content)::: navigation set nav link module:::return
Navigation#setNavLinkPackage(Content)::: navigation set nav link package:::return
Navigation#setNavLinkClass(Content)::: navigation set nav link class:::return
Navigation#setMemberSummaryBuilder(MemberSummaryBuilder)::: navigation set member summary builder:::return
Navigation#setDisplaySummaryModuleDescLink(boolean)::: navigation set display summary module desc link:::return
Navigation#setDisplaySummaryModulesLink(boolean)::: navigation set display summary modules link:::return
Navigation#setDisplaySummaryPackagesLink(boolean)::: navigation set display summary packages link:::return
Navigation#setDisplaySummaryServicesLink(boolean)::: navigation set display summary services link:::return
Navigation#setUserHeader(Content)::: navigation set user header:::return
Navigation#setUserFooter(Content)::: navigation set user footer:::return
Navigation#addMainNavLinks(Content):::Add the links for the main navigation.:::switch->addActivePageLink->addModuleLink->addPackageLink->addPageLabel->addPageLabel->addTreeLink->addDeprecatedLink->addIndexLink->addHelpLink->break->addOverviewLink->addActivePageLink->addPackageLink->addPageLabel->addPageLabel->addTreeLink->addDeprecatedLink->addIndexLink->addHelpLink->break->addOverviewLink->addModuleOfElementLink->addActivePageLink->addPageLabel->if->links->createLink->addContentToTree->if->links->createLink->addContentToTree->addDeprecatedLink->addIndexLink->addHelpLink->break->addOverviewLink->addModuleOfElementLink->addPackageSummaryLink->addActivePageLink->if->links->path->basename->resolve->createLink->addContentToTree->if->links->createLink->addContentToTree->addDeprecatedLink->addIndexLink->addHelpLink->break->addOverviewLink->addModuleOfElementLink->if->addPackageSummaryLink->addPageLabel->else->addPackageOfElementLink->addContentToTree->addActivePageLink->if->links->createLink->addContentToTree->else->isEnclosingPackageIncluded->links->resolve->createLink->links->pathToRoot->resolve->createLink->addContentToTree->addDeprecatedLink->addIndexLink->addHelpLink->break->addOverviewLink->if->addPageLabel->addPageLabel->else->addModuleOfElementLink->addPackageSummaryLink->addPageLabel->addPageLabel->addActivePageLink->addDeprecatedLink->addIndexLink->addHelpLink->break->addOverviewLink->addModuleLink->addPackageLink->addPageLabel->addPageLabel->addTreeLink->if->addActivePageLink->else->addDeprecatedLink->if->addActivePageLink->else->addIndexLink->if->addActivePageLink->else->addHelpLink->break->addOverviewLink->addModuleLink->addPackageLink->addPageLabel->addPageLabel->addTreeLink->addDeprecatedLink->addIndexLink->addHelpLink->break->addOverviewLink->addModuleOfElementLink->addContentToTree->addPageLabel->addPageLabel->addTreeLink->addDeprecatedLink->addIndexLink->addHelpLink->break->break
Navigation#addSummaryLinks(Content):::Add the summary links to the sub-navigation.:::listContents->new->ArrayList<>->switch->if->element->getKind->addAnnotationTypeSummaryLink->addAnnotationTypeSummaryLink->addAnnotationTypeSummaryLink->else->typeElement->foreach->if->isEnum->continue->if->isEnum->continue->writer->memberSummaryBuilder->getMemberSummaryWriter->if->contents->getNavLinkLabelContent->addContentToList->else->memberSummaryBuilder->members->memberSummaryBuilder->getVisibleMemberTable->addTypeSummaryLink->if->listContents->isEmpty->li->HtmlTree->LI->li->addContent->tree->addContent->addListToNav->break->if->links->createLink->addContentToList->else->addContentToList->if->links->createLink->addContentToList->else->addContentToList->if->links->createLink->addContentToList->else->addContentToList->if->links->createLink->addContentToList->else->addContentToList->if->listContents->isEmpty->li->HtmlTree->LI->li->addContent->tree->addContent->addListToNav->break->break
Navigation#addTypeSummaryLink(SortedSet, VisibleMemberTable, VisibleMemberTable.Kind, List):::Add the navigation summary link.:::if->members->isEmpty->addTypeSummaryLink->return->visibleClasses->vmt->getVisibleTypeElements->foreach->if->configuration->getVisibleMemberTable->hasVisibleMembers->addTypeSummaryLink->return->addTypeSummaryLink
Navigation#addTypeSummaryLink(TypeElement, VisibleMemberTable.Kind, boolean, List):::Add the navigation Type summary link.:::switch->if->links->createLink->addContentToList->else->addContentToList->break->if->if->links->createLink->addContentToList->else->links->configuration->getClassName->createLink->addContentToList->else->addContentToList->break->if->if->links->createLink->addContentToList->else->links->configuration->getClassName->createLink->addContentToList->else->addContentToList->break->if->if->links->createLink->addContentToList->else->links->configuration->getClassName->createLink->addContentToList->else->addContentToList->break->if->if->links->createLink->addContentToList->else->links->getFullyQualifiedName->createLink->addContentToList->else->addContentToList->break->if->if->links->createLink->addContentToList->else->links->configuration->getClassName->createLink->addContentToList->else->addContentToList->break->break
Navigation#addAnnotationTypeSummaryLink(String, VisibleMemberTable.Kind, List):::Add the navigation Type summary link.:::writer->memberSummaryBuilder->getMemberSummaryWriter->if->contents->getContent->addContentToList->else->link->memberSummaryBuilder->getVisibleMemberTable->hasVisibleMembers->switch->if->links->createLink->addContentToList->else->addContentToList->break->if->links->createLink->addContentToList->else->addContentToList->break->if->links->createLink->addContentToList->else->addContentToList->break->break
Navigation#addDetailLinks(Content):::Add the detail links to sub-navigation.:::switch->listContents->new->ArrayList<>->if->element->getKind->addAnnotationTypeDetailLink->else->typeElement->foreach->writer->memberSummaryBuilder->getMemberSummaryWriter->if->isEnum->continue->if->isEnum->continue->if->contents->getNavLinkLabelContent->addContentToList->else->memberSummaryBuilder->hasMembers->addTypeDetailLink->if->listContents->isEmpty->li->HtmlTree->LI->li->addContent->tree->addContent->addListToNav->break->break
Navigation#addTypeDetailLink(VisibleMemberTable.Kind, boolean, List):::Add the navigation Type detail link.:::switch->if->links->createLink->addContentToList->else->addContentToList->break->if->links->createLink->addContentToList->else->addContentToList->break->if->links->createLink->addContentToList->else->addContentToList->break->if->links->createLink->addContentToList->else->addContentToList->break->if->links->createLink->addContentToList->else->addContentToList->break->break
Navigation#addAnnotationTypeDetailLink(List):::Add the navigation Annotation Type detail link.:::annotationType->writerField->memberSummaryBuilder->getMemberSummaryWriter->writerOptional->memberSummaryBuilder->getMemberSummaryWriter->writerRequired->memberSummaryBuilder->getMemberSummaryWriter->if->getAnnotationFields->isEmpty->addAnnotationTypeDetailLink->else->addContentToList->if->annotationType->getAnnotationMirrors->isEmpty->addAnnotationTypeDetailLink->else->if->annotationType->getAnnotationMirrors->isEmpty->addAnnotationTypeDetailLink->else->addContentToList
Navigation#addAnnotationTypeDetailLink(VisibleMemberTable.Kind, boolean, List):::Add the navigation Annotation Type detail link.:::switch->if->links->createLink->addContentToList->else->addContentToList->break->if->links->createLink->addContentToList->else->addContentToList->break->break
Navigation#addContentToList(List, Content)::: navigation add content to list:::listContents->HtmlTree->LI->add
Navigation#addContentToTree(Content, Content)::: navigation add content to tree:::tree->HtmlTree->LI->addContent
Navigation#addListToNav(List, Content)::: navigation add list to nav:::count->foreach->if->listContents->size->liContent->addContent->liContent->addContent->liContent->addContent->tree->addContent
Navigation#addActivePageLink(Content, Content, boolean)::: navigation add active page link:::if->tree->HtmlTree->LI->addContent
Navigation#addPageLabel(Content, Content, boolean)::: navigation add page label:::if->tree->HtmlTree->LI->addContent
Navigation#addOverviewLink(Content)::: navigation add overview link:::if->tree->HtmlTree->links->pathToRoot->DocPaths->overviewSummary->resolve->createLink->LI->addContent
Navigation#addModuleLink(Content)::: navigation add module link:::if->if->size->mdle->first->included->isIncluded->tree->HtmlTree->links->pathToRoot->moduleSummary->resolve->createLink->LI->addContent->else->if->isEmpty->addPageLabel
Navigation#addModuleOfElementLink(Content)::: navigation add module of element link:::if->tree->HtmlTree->LI->addContent
Navigation#addPackageLink(Content)::: navigation add package link:::if->size->packageElement->first->included->isIncluded->if->foreach->if->p->equals->break->if->tree->HtmlTree->links->pathToRoot->forPackage->resolve->resolve->createLink->LI->addContent->else->crossPkgLink->getPath->getExternalLink->if->tree->HtmlTree->links->createLink->LI->addContent->else->tree->HtmlTree->LI->addContent->else->if->isEmpty->addPageLabel
Navigation#addPackageOfElementLink(Content)::: navigation add package of element link:::tree->HtmlTree->links->resolve->createLink->LI->addContent
Navigation#addPackageSummaryLink(Content)::: navigation add package summary link:::tree->HtmlTree->links->createLink->LI->addContent
Navigation#addTreeLink(Content)::: navigation add tree link:::if->packages->configuration->getSpecifiedPackageElements->new->ArrayList<>->docPath->packages->size->configuration->getSpecifiedTypeElements->isEmpty->pathToRoot->packages->get->forPackage->resolve->resolve->pathToRoot->resolve->tree->HtmlTree->links->createLink->LI->addContent
Navigation#addDeprecatedLink(Content)::: navigation add deprecated link:::if->tree->HtmlTree->links->pathToRoot->resolve->createLink->LI->addContent
Navigation#addIndexLink(Content)::: navigation add index link:::if->tree->HtmlTree->links->pathToRoot->DocPaths->indexN->resolve->resolve->createLink->LI->addContent
Navigation#addHelpLink(Content)::: navigation add help link:::if->helpfile->helpfilenm->if->helpfile->isEmpty->else->file->DocFile->createFileForInput->DocPath->file->getName->create->tree->HtmlTree->links->pathToRoot->resolve->createLink->LI->addContent
Navigation#addNavShowLists(Content):::Add "FRAMES" link, to switch to the frame version of the output.:::dl->pathToRoot->resolve->path->getPath->new->DocLink->framesContent->links->createLink->tree->HtmlTree->LI->addContent
Navigation#addNavHideLists(Content):::Add "NO FRAMES" link, to switch to the non-frame version of the output.:::noFramesContent->links->path->basename->createLink->tree->HtmlTree->LI->addContent
Navigation#addNavLinkClassIndex(Content)::: navigation add nav link class index:::allClassesContent->links->pathToRoot->DocPaths->AllClasses->resolve->createLink->tree->HtmlTree->LI->addContent
Navigation#addSearch(Content)::: navigation add search:::searchValueId->reset->inputText->HtmlTree->INPUT->inputReset->HtmlTree->INPUT->liInput->HtmlTree->HtmlTree->LABEL->LI->liInput->addContent->liInput->addContent->ulSearch->HtmlTree->UL->tree->addContent
Navigation#addAllClassesLinkScript(Content, boolean)::: navigation add all classes link script:::div->HtmlTree->allClassesLinkScript->asContent->allClassesLinkScript->asContent->DIV->div_noscript->HtmlTree->DIV->noScript->HtmlTree->NOSCRIPT->div->addContent->tree->addContent
Navigation#addFixedNavScript(Content)::: navigation add fixed nav script:::tree->FIXED_NAV_SCRIPT->asContent->addContent
Navigation#getContent(boolean):::Get the navigation content.:::contentTree->new->ContentBuilder->if->queue->tree->HtmlTree->NAV->navDiv->new->HtmlTree->if->topBottomNavContents->get->fixedNavDiv->startOfNav->addContent->navDiv->setStyle->else->topBottomNavContents->get->tree->startOfNav->addContent->navDiv->setStyle->navDiv->queue->poll->addContent->skipLinkDiv->HtmlTree->queue->poll->DIV->navDiv->addContent->navDiv->queue->poll->addContent->navList->new->HtmlTree->navList->setStyle->navList->addAttr->fixedNavDiv->setStyle->addMainNavLinks->navDiv->addContent->aboutDiv->HtmlTree->DIV->navDiv->addContent->if->fixedNavDiv->addContent->else->tree->addContent->subDiv->new->HtmlTree->subDiv->setStyle->ulFrames->new->HtmlTree->ulFrames->setStyle->if->if->addNavShowLists->addNavHideLists->subDiv->addContent->ulAllClasses->new->HtmlTree->ulAllClasses->setStyle->ulAllClasses->allClassesLinkId->allClassesLinkId->addAttr->addNavLinkClassIndex->subDiv->addContent->if->addSearch->addAllClassesLinkScript->div->new->HtmlTree->ulNavSummary->new->HtmlTree->ulNavSummary->setStyle->addSummaryLinks->div->addContent->ulNavDetail->new->HtmlTree->ulNavDetail->setStyle->addDetailLinks->div->addContent->subDiv->addContent->subDiv->queue->poll->addContent->if->fixedNavDiv->addContent->fixedNavDiv->endOfNav->addContent->tree->addContent->paddingDiv->HtmlTree->DIV->tree->addContent->addFixedNavScript->else->tree->addContent->tree->endOfNav->addContent->return->return
RawHtml#addContent(Content):::This method is not supported by the class.:::throw->new->UnsupportedOperationException
RawHtml#addContent(CharSequence):::This method is not supported by the class.:::throw->new->UnsupportedOperationException
RawHtml#isEmpty()::: raw html is empty:::return->rawHtmlContent->isEmpty
RawHtml#toString()::: raw html to string:::return
RawHtml#charCount()::: raw html char count:::return->charCount
RawHtml#charCount(CharSequence)::: raw html char count:::state->count->for->i->htmlText->length->return
RawHtml#write(Writer, boolean)::: raw html write:::out->write->return->rawHtmlContent->endsWith
Script#append(CharSequence):::Appends the given code to the script.:::sb->append->return
Script#appendStringLiteral(CharSequence):::Appends the given text as a string constant to the string:::sb->stringLiteral->append->return
Script#appendStringLiteral(CharSequence, char)::: script append string literal:::sb->stringLiteral->append->return
Script#asContent():::Returns a "live" view of the script as a Content object:::scriptContent->new->ScriptContent->tree->new->HtmlTree->tree->addAttr->tree->addContent->return
Script#stringLiteral(CharSequence):::Returns a JavaScript string literal containing a specified string, escaping the characters of that string as needed.:::return->stringLiteral
Script#stringLiteral(CharSequence, char)::: script string literal:::if->throw->new->IllegalArgumentException->sb->new->StringBuilder->sb->append->for->i->s->length->sb->append->return->sb->toString
Script.ScriptContent#addContent(Content)::: script content add content:::throw->new->UnsupportedOperationException
Script.ScriptContent#addContent(CharSequence)::: script content add content:::sb->append
Script.ScriptContent#write(Writer, boolean)::: script content write:::s->sb->toString->writer->s->replace->write->return->s->endsWith
Script.ScriptContent#isEmpty()::: script content is empty:::return
StringContent#addContent(Content):::This method is not supported by the class.:::throw->new->UnsupportedOperationException
StringContent#addContent(CharSequence):::Adds content for the StringContent object:::appendChars
StringContent#isEmpty()::: string content is empty:::return->stringContent->length
StringContent#charCount()::: string content char count:::return->RawHtml->stringContent->toString->charCount
StringContent#toString()::: string content to string:::return->stringContent->toString
StringContent#write(Writer, boolean)::: string content write:::s->stringContent->toString->out->write->return->s->endsWith
StringContent#appendChars(CharSequence)::: string content append chars:::for->i->s->length
Table#setSummary(String):::Sets the summary for the table:::if->return
Table#setCaption(Content):::Sets the caption for the table:::if->else->getCaption->return
Table#addTab(String, Predicate):::Adds a tab to the table:::if->new->LinkedHashMap<>->new->HashSet<>->tabMap->put->return
Table#setDefaultTab(String):::Sets the name for the default tab, which displays all the rows in the table:::return
Table#setTabScript(IntFunction):::Sets the function used to generate the JavaScript to be used when a tab is selected:::return
Table#setTabStyles(HtmlStyle, HtmlStyle, HtmlStyle):::Sets the name of the styles used to display the tabs.:::return
Table#setTabId(Function):::Sets the JavaScript function used to generate the id attribute for each tag:::return
Table#setHeader(TableHeader):::Sets the header for the table:::return
Table#setStripedStyles(HtmlStyle, HtmlStyle):::Sets the styles used for <tr> tags, to give a "striped" appearance:::Arrays->asList->return
Table#setRowScopeColumn(int):::Sets the column used to indicate which cell in a row should be declared as a header cell with the scope attribute set to row.:::return
Table#setColumnStyles(HtmlStyle...):::Sets the styles for be used for the cells in each row:::return->Arrays->asList->setColumnStyles
Table#setColumnStyles(List):::Sets the styles for be used for the cells in each row:::return
Table#setRowIdPrefix(String):::Sets the prefix used for the id attribute for each row in the table:::return
Table#setPutIdFirst(boolean):::Sets whether the id attribute should appear first in a <tr> tag:::return
Table#setUseTBody(boolean):::Sets whether or not to use an explicit <tbody> element to enclose the rows of a table:::return
Table#addRow(Content...):::Add a row of data to the table:::Arrays->asList->addRow
Table#addRow(List):::Add a row of data to the table:::addRow
Table#addRow(Element, Content...):::Add a row of data to the table:::Arrays->asList->addRow
Table#addRow(Element, List):::Add a row of data to the table:::if->throw->new->NullPointerException->row->new->HtmlTree->if->index->bodyRows->size->row->addAttr->if->rowIndex->bodyRows->size->row->stripedStyles->get->name->addAttr->colIndex->foreach->cellStyle->columnStyles->size->columnStyles->get->cell->HtmlTree->TH->HtmlTree->TD->row->addContent->bodyRows->add->if->if->index->bodyRows->size->row->addAttr->mask->maskBit->foreach->tabMap->entrySet->name->e->getKey->predicate->e->getValue->if->predicate->test->tabs->add->bodyRowMasks->add
Table#isEmpty():::Returns whether or not the table is empty:::return->bodyRows->isEmpty
Table#toContent():::Returns the HTML for the table.:::table->new->HtmlTree->table->setStyle->if->table->addAttr->if->if->tabs->size->tabName->tabs->iterator->next->table->new->StringContent->getCaption->addContent->else->cb->new->ContentBuilder->tabIndex->defaultTabSpan->HtmlTree->new->StringContent->SPAN->HtmlTree->SPAN->new->HtmlTree->tabId->apply->addAttr->setStyle->cb->addContent->foreach->tabMap->keySet->if->tabs->contains->script->tabScript->apply->link->HtmlTree->new->StringContent->A->tabSpan->HtmlTree->SPAN->HtmlTree->SPAN->new->HtmlTree->tabId->apply->addAttr->setStyle->cb->addContent->table->HtmlTree->CAPTION->addContent->else->table->addContent->table->header->toContent->addContent->if->tbody->new->HtmlTree->bodyRows->tbody->addContent->forEach->table->addContent->else->bodyRows->table->addContent->forEach->return
Table#needsScript():::Returns whether or not the table needs JavaScript support:::return->tabs->size
Table#getScript():::Returns the script to be used in conjunction with the table.:::if->throw->new->IllegalStateException->sb->new->StringBuilder->sb->append->append->rowIndex->foreach->if->sb->append->sb->append->append->append->append->append->sb->append->sb->append->tabId->apply->appendTabInfo->tabIndex->maskBit->foreach->tabMap->keySet->if->tabs->contains->sb->append->tabId->apply->appendTabInfo->sb->append->stripedStyles->get->stripedStyles->get->appendStyleInfo->return->sb->toString
Table#appendTabInfo(StringBuilder, int, String, String)::: table append tab info:::sb->append->append->Script->stringLiteral->append->append->Script->stringLiteral->append->append
Table#appendStyleInfo(StringBuilder, HtmlStyle...)::: table append style info:::foreach->sb->append->append->append->append->append
Table#getCaption(Content)::: table get caption:::return->HtmlTree->SPAN->HtmlTree->SPAN->new->HtmlTree
TableHeader#styles(HtmlStyle...):::Set the style class names for each header cell:::if->cellContents->size->throw->new->IllegalStateException->Arrays->asList->return
TableHeader#styles(List):::Set the style class names for each header cell:::if->styles->size->cellContents->size->throw->new->IllegalStateException->return
TableHeader#toContent():::Converts this header to a Content object, for use in an HtmlTree.:::scope->tr->new->HtmlTree->i->foreach->style->styles->get->cellContents->size->cell->HtmlTree->TH->HtmlTree->TH->tr->addContent->return
