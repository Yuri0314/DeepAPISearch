MoveProfilingPhase_OptionDescriptors#get(String)::: move profiling phase_ option descriptors get:::switch->return->OptionDescriptor->create->return
MoveProfilingPhase_OptionDescriptors#iterator()::: move profiling phase_ option descriptors iterator:::return->new->Iterator<OptionDescriptor>
MethodProfilingPhase#run(TargetDescription, LIRGenerationResult, PostAllocationOptimizationContext)::: method profiling phase run:::lirGenRes->getCompilationUnitName->lirGenRes->getLIR->new->Analyzer->run
MethodProfilingPhase.Analyzer#run()::: analyzer run:::lir->getControlFlowGraph->getStartBlock->doBlock->foreach->lir->getControlFlowGraph->getBlocks->if->block->isLoopHeader->doBlock
MethodProfilingPhase.Analyzer#doBlock(AbstractBlockBase, String)::: analyzer do block:::instructions->lir->getLIRforBlock->op->diagnosticLirGenTool->createBenchmarkCounter->buffer->init->buffer->append->buffer->finish
MoveProfiler#profile(LIR)::: move profiler profile:::profiler->new->MoveProfiler->profiler->run->return
MoveProfiler.MoveStatistics#add(MoveType)::: move statistics add:::moveType->ordinal
MoveProfiler.MoveStatistics#get(MoveType)::: move statistics get:::return->moveType->ordinal
MoveProfiler.MoveStatistics#add(MoveType, int)::: move statistics add:::moveType->ordinal
MoveProfiler#run()::: move profiler run:::foreach->lir->getControlFlowGraph->getBlocks->doBlock
MoveProfiler#doBlock(AbstractBlockBase)::: move profiler do block:::instructions->lir->getLIRforBlock->stats->foreach->if->MoveOp->isMoveOp->if->new->MoveStatistics->blockMap->put->stats->MoveType->get->add
MoveProfilingPhase#run(TargetDescription, LIRGenerationResult, PostAllocationOptimizationContext)::: move profiling phase run:::new->Analyzer->run
MoveProfilingPhase.Analyzer#run()::: analyzer run:::lir->lirGenRes->getLIR->collected->MoveProfiler->profile->foreach->lir->getControlFlowGraph->getBlocks->moveStatistics->collected->get->if->names->clear->groups->clear->increments->clear->doBlock
MoveProfilingPhase.Analyzer#doBlock(AbstractBlockBase, MoveStatistics)::: analyzer do block:::foreach->MoveType->values->name->type->toString->getGroupName->moveStatistics->get->addEntry->insertBenchmarkCounter
MoveProfilingPhase.Analyzer#addEntry(String, String, int)::: analyzer add entry:::if->names->add->groups->add->increments->LIRKind->fromJavaKind->JavaConstant->forInt->new->ConstantValue->add
MoveProfilingPhase.Analyzer#insertBenchmarkCounter(AbstractBlockBase)::: analyzer insert benchmark counter:::size->names->size->if->instructions->lirGenRes->getLIR->getLIRforBlock->inst->diagnosticLirGenTool->names->new->StringArr->toArray->groups->new->StringArr->toArray->increments->new->ValueArr->toArray->createMultiBenchmarkCounter->buffer->init->buffer->append->buffer->finish
MoveProfilingPhase.Analyzer#getGroupName()::: analyzer get group name:::if->createGroupName->return
MoveProfilingPhase.Analyzer#createGroupName()::: analyzer create group name:::if->lirGenRes->getLIR->getOptions->getValue->return->new->StringBuilder->append->append->lirGenRes->getCompilationUnitName->append->append->toString->return
