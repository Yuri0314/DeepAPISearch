org.graalvm.compiler.lir.profiling.MoveProfilingPhase_OptionDescriptors#get(String)->OptionDescriptor::: move profiling phase_ option descriptors get
org.graalvm.compiler.lir.profiling.MoveProfilingPhase_OptionDescriptors#iterator()->Iterator::: move profiling phase_ option descriptors iterator
org.graalvm.compiler.lir.profiling.MethodProfilingPhase#run(TargetDescription, LIRGenerationResult, PostAllocationOptimizationContext)->void::: method profiling phase run
org.graalvm.compiler.lir.profiling.MoveProfiler#profile(LIR)->BlockMap::: move profiler profile
org.graalvm.compiler.lir.profiling.MoveProfiler.MoveStatistics#add(MoveType)->void::: move statistics add
org.graalvm.compiler.lir.profiling.MoveProfiler.MoveStatistics#get(MoveType)->int::: move statistics get
org.graalvm.compiler.lir.profiling.MoveProfiler.MoveStatistics#add(MoveType, int)->void::: move statistics add
org.graalvm.compiler.lir.profiling.MoveProfilingPhase#run(TargetDescription, LIRGenerationResult, PostAllocationOptimizationContext)->void::: move profiling phase run
org.graalvm.compiler.lir.profiling.MoveProfilingPhase.Analyzer#run()->void::: analyzer run
org.graalvm.compiler.lir.profiling.MoveProfilingPhase.Analyzer#doBlock(AbstractBlockBase, MoveStatistics)->void::: analyzer do block
org.graalvm.compiler.lir.profiling.MoveProfilingPhase.Analyzer#addEntry(String, String, int)->void::: analyzer add entry
org.graalvm.compiler.lir.profiling.MoveProfilingPhase.Analyzer#insertBenchmarkCounter(AbstractBlockBase)->void::: analyzer insert benchmark counter
org.graalvm.compiler.lir.profiling.MoveProfilingPhase.Analyzer#getGroupName()->String::: analyzer get group name
org.graalvm.compiler.lir.profiling.MoveProfilingPhase.Analyzer#createGroupName()->String::: analyzer create group name
