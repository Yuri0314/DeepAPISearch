sun.jvm.hotspot.gc.z.ZAddress#as_long(Address)->long::: address as_long
sun.jvm.hotspot.gc.z.ZAddress#is_null(Address)->boolean::: address is_null
sun.jvm.hotspot.gc.z.ZAddress#is_weak_bad(Address)->boolean::: address is_weak_bad
sun.jvm.hotspot.gc.z.ZAddress#is_weak_good(Address)->boolean::: address is_weak_good
sun.jvm.hotspot.gc.z.ZAddress#is_weak_good_or_null(Address)->boolean::: address is_weak_good_or_null
sun.jvm.hotspot.gc.z.ZAddress#offset(Address)->long::: address offset
sun.jvm.hotspot.gc.z.ZAddress#address(long)->Address::: address address
sun.jvm.hotspot.gc.z.ZAddress#good(Address)->Address::: address good
sun.jvm.hotspot.gc.z.ZAddress#good_or_null(Address)->Address::: address good_or_null
sun.jvm.hotspot.gc.z.ZAddressRangeMapForPageTable#get(Address)->Address::: address range map for page table get
sun.jvm.hotspot.gc.z.ZBarrier#weak_barrier(Address)->Address::: barrier weak_barrier
sun.jvm.hotspot.gc.z.ZCollectedHeap#heap()->ZHeap::: collected heap heap
sun.jvm.hotspot.gc.z.ZCollectedHeap#kind()->CollectedHeapName::: collected heap kind
sun.jvm.hotspot.gc.z.ZCollectedHeap#printOn(PrintStream)->void::: collected heap print on
sun.jvm.hotspot.gc.z.ZCollectedHeap#oop_load_at(OopHandle, long)->OopHandle::: collected heap oop_load_at
sun.jvm.hotspot.gc.z.ZCollectedHeap#oopAddressDescription(OopHandle)->String::: collected heap oop address description
sun.jvm.hotspot.gc.z.ZForwardingTable#table()->Address::: forwarding table table
sun.jvm.hotspot.gc.z.ZForwardingTable#size()->long::: forwarding table size
sun.jvm.hotspot.gc.z.ZForwardingTable#at(ZForwardingTableCursor)->ZForwardingTableEntry::: forwarding table at
sun.jvm.hotspot.gc.z.ZForwardingTable#first(long, ZForwardingTableCursor)->ZForwardingTableEntry::: forwarding table first
sun.jvm.hotspot.gc.z.ZForwardingTable#next(ZForwardingTableCursor)->ZForwardingTableEntry::: forwarding table next
sun.jvm.hotspot.gc.z.ZForwardingTable#find(long, ZForwardingTableCursor)->ZForwardingTableEntry::: forwarding table find
sun.jvm.hotspot.gc.z.ZForwardingTable#find(long)->ZForwardingTableEntry::: forwarding table find
sun.jvm.hotspot.gc.z.ZForwardingTable#dump()->void::: forwarding table dump
sun.jvm.hotspot.gc.z.ZForwardingTableEntry#is_empty()->boolean::: forwarding table entry is_empty
sun.jvm.hotspot.gc.z.ZForwardingTableEntry#to_offset()->Address::: forwarding table entry to_offset
sun.jvm.hotspot.gc.z.ZForwardingTableEntry#from_index()->long::: forwarding table entry from_index
sun.jvm.hotspot.gc.z.ZForwardingTableEntry#toString()->String::: forwarding table entry to string
sun.jvm.hotspot.gc.z.ZGlobals#ZGlobalPhase()->int::: globals  global phase
sun.jvm.hotspot.gc.z.ZGlobals#ZAddressGoodMask()->long::: globals  address good mask
sun.jvm.hotspot.gc.z.ZGlobals#ZAddressBadMask()->long::: globals  address bad mask
sun.jvm.hotspot.gc.z.ZGlobals#ZAddressWeakBadMask()->long::: globals  address weak bad mask
sun.jvm.hotspot.gc.z.ZGlobals#ZObjectAlignmentSmallShift()->int::: globals  object alignment small shift
sun.jvm.hotspot.gc.z.ZGlobals#ZObjectAlignmentSmall()->int::: globals  object alignment small
sun.jvm.hotspot.gc.z.ZGlobalsForVMStructs#ZGlobalPhase()->int::: globals for structs  global phase
sun.jvm.hotspot.gc.z.ZGlobalsForVMStructs#ZAddressGoodMask()->long::: globals for structs  address good mask
sun.jvm.hotspot.gc.z.ZGlobalsForVMStructs#ZAddressBadMask()->long::: globals for structs  address bad mask
sun.jvm.hotspot.gc.z.ZGlobalsForVMStructs#ZAddressWeakBadMask()->long::: globals for structs  address weak bad mask
sun.jvm.hotspot.gc.z.ZGlobalsForVMStructs#ZObjectAlignmentSmallShift()->int::: globals for structs  object alignment small shift
sun.jvm.hotspot.gc.z.ZGlobalsForVMStructs#ZObjectAlignmentSmall()->int::: globals for structs  object alignment small
sun.jvm.hotspot.gc.z.ZHash#uint32_to_uint32(long)->long::: hash uint32_to_uint32
sun.jvm.hotspot.gc.z.ZHeap#pageTable()->ZPageTable::: heap page table
sun.jvm.hotspot.gc.z.ZHeap#maxCapacity()->long::: heap max capacity
sun.jvm.hotspot.gc.z.ZHeap#capacity()->long::: heap capacity
sun.jvm.hotspot.gc.z.ZHeap#used()->long::: heap used
sun.jvm.hotspot.gc.z.ZHeap#is_relocating(Address)->boolean::: heap is_relocating
sun.jvm.hotspot.gc.z.ZHeap#forward_object(Address)->Address::: heap forward_object
sun.jvm.hotspot.gc.z.ZHeap#relocate_object(Address)->Address::: heap relocate_object
sun.jvm.hotspot.gc.z.ZHeap#printOn(PrintStream)->void::: heap print on
sun.jvm.hotspot.gc.z.ZOop#to_address(long)->Address::: oop to_address
sun.jvm.hotspot.gc.z.ZOop#to_address(OopHandle)->Address::: oop to_address
sun.jvm.hotspot.gc.z.ZPage#forward_object(Address)->Address::: page forward_object
sun.jvm.hotspot.gc.z.ZPage#relocate_object(Address)->Address::: page relocate_object
sun.jvm.hotspot.gc.z.ZPage#object_alignment_shift()->long::: page object_alignment_shift
sun.jvm.hotspot.gc.z.ZPageAllocator#maxCapacity()->long::: page allocator max capacity
sun.jvm.hotspot.gc.z.ZPageAllocator#capacity()->long::: page allocator capacity
sun.jvm.hotspot.gc.z.ZPageAllocator#used()->long::: page allocator used
sun.jvm.hotspot.gc.z.ZPageTable#get(Address)->ZPage::: page table get
sun.jvm.hotspot.gc.z.ZPageTable#is_relocating(Address)->boolean::: page table is_relocating
sun.jvm.hotspot.gc.z.ZPageTableEntry#page()->ZPage::: page table entry page
sun.jvm.hotspot.gc.z.ZPageTableEntry#relocating()->boolean::: page table entry relocating
sun.jvm.hotspot.gc.z.ZPhysicalMemoryManager#capacity()->long::: physical memory manager capacity
sun.jvm.hotspot.gc.z.ZPhysicalMemoryManager#maxCapacity()->long::: physical memory manager max capacity
sun.jvm.hotspot.gc.z.ZVirtualMemory#start()->long::: virtual memory start
sun.jvm.hotspot.gc.z.ZVirtualMemory#end()->long::: virtual memory end
