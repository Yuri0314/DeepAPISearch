ConfigurationError#getException():::Returns the exception associated to this error.:::return
FeaturePropertyBase#setValue(Enum, State, String):::Set the value for a specific property.:::if->state->property->ordinal->compareTo->property->ordinal->property->ordinal
FeaturePropertyBase#setValue(int, State, String):::Set the value of a property by its index:::if->state->compareTo
FeaturePropertyBase#setValue(String, State, Object):::Set value by property name and state:::index->getIndex->if->setValue->return->return
FeaturePropertyBase#setValue(String, State, boolean):::Set value by property name and state:::index->getIndex->if->if->setValue->else->setValue->return->return
FeaturePropertyBase#getValue(Enum):::Return the value of the specified property:::return->property->ordinal
FeaturePropertyBase#getValue(String):::Return the value of the specified property:::index->getIndex->if->return->getValueByIndex->return
FeaturePropertyBase#getValueAsString(String):::Return the value of the specified property.:::index->getIndex->if->return->getValueByIndex->return
FeaturePropertyBase#getValueByIndex(int):::Return the value of a property by its ordinal:::return
FeaturePropertyBase#getIndex(String):::Get the index by property name:::
FeaturePropertyBase#getIndex(Class, String)::: feature property base get index:::foreach->property->getEnumConstants->if->enumItem->toString->equals->return->enumItem->ordinal->return
FeaturePropertyBase#getSystemProperty(Enum, String):::Read from system properties, or those in jaxp.properties:::try->value->SecuritySupport->getSystemProperty->if->property->ordinal->property->ordinal->return->SecuritySupport->readJAXPProperty->if->property->ordinal->property->ordinal->catch->finally
ObjectFactory#debugPrintln(Supplier):::Prints a message to standard error if debugging is enabled.:::if->msgGen->get->println
ObjectFactory#findClassLoader():::Figure out which ClassLoader to use:::if->System->getSecurityManager->return->context->SecuritySupport->getContextClassLoader->system->SecuritySupport->getSystemClassLoader->chain->while->if->current->getClassLoader->while->if->return->if->break->SecuritySupport->getParentClassLoader->return->if->break->SecuritySupport->getParentClassLoader->return
ObjectFactory#newInstance(String, boolean):::Create an instance of a class using the same class loader for the ObjectFactory by default or boot class loader when Security Manager is in place:::cl->System->getSecurityManager->findClassLoader->try->providerClass->findProviderClass->instance->providerClass->getConstructor->newInstance->debugPrintln->return->catch->throw->new->ConfigurationError->throw->new->ConfigurationError->finally
ObjectFactory#findProviderClass(String, boolean):::Find a Class using the same class loader for the ObjectFactory by default or boot class loader when Security Manager is in place:::return->findClassLoader->findProviderClass
ObjectFactory#findProviderClass(String, ClassLoader, boolean):::Find a Class using the specified ClassLoader:::security->System->getSecurityManager->try->if->if->className->startsWith->className->startsWith->else->lastDot->className->lastIndexOf->packageName->if->className->substring->security->checkPackageAccess->catch->throw->finally->providerClass->if->Class->getClassLoader->forName->else->try->cl->loadClass->catch->if->current->getClassLoader->if->Class->forName->else->if->cl->loadClass->else->throw->else->throw->finally->return
XMLSecurityManager#setSecureProcessing(boolean):::Setting FEATURE_SECURE_PROCESSING explicitly:::foreach->Limit->values->if->limit->ordinal->limit->secureValue->setLimit->else->limit->ordinal->limit->defaultValue->setLimit
XMLSecurityManager#setLimit(String, State, Object):::Set limit by property name and state:::index->getIndex->if->setLimit->return->return
XMLSecurityManager#setLimit(Limit, State, int):::Set the value for a specific limit.:::limit->ordinal->setLimit
XMLSecurityManager#setLimit(int, State, Object):::Set the value of a property by its index:::if->else->temp->try->Integer->parseInt->if->catch->finally->setLimit
XMLSecurityManager#setLimit(int, State, int):::Set the value of a property by its index:::if->else->if->state->compareTo
XMLSecurityManager#getLimitAsString(String):::Return the value of the specified property.:::index->getIndex->if->return->getLimitValueByIndex->return
XMLSecurityManager#getLimitValueAsString(Limit):::Return the value of a property by its ordinal:::return->Integer->limit->ordinal->toString
XMLSecurityManager#getLimit(Limit):::Return the value of the specified property:::return->limit->ordinal
XMLSecurityManager#getLimitByIndex(int):::Return the value of a property by its ordinal:::return
XMLSecurityManager#getLimitValueByIndex(int):::Return the value of a property by its index:::if->return->return->Integer->toString
XMLSecurityManager#getState(Limit):::Return the state of the limit property:::return->limit->ordinal
XMLSecurityManager#getStateLiteral(Limit):::Return the state of the limit property:::return->limit->ordinal->literal
XMLSecurityManager#getIndex(String):::Get the index by property name:::foreach->Limit->values->if->limit->equalsAPIPropertyName->return->limit->ordinal->if->propertyName->equals->return->return
XMLSecurityManager#isSet(int):::Indicate if a property is set explicitly:::return
XMLSecurityManager#printEntityCountInfo()::: security manager print entity count info:::return->printEntityCountInfo->equals
XMLSecurityManager#readSystemProperties():::Read from system properties, or those in jaxp.properties:::foreach->Limit->values->if->limit->systemProperty->getSystemProperty->foreach->NameMap->values->oldName->nameMap->limit->systemProperty->getOldName->if->getSystemProperty
XMLSecurityManager#printWarning(String, String, SAXException):::Prints out warnings if a parser does not support the specified feature/property.:::key->if->printedWarnings->addIfAbsent->exception->getMessage->println
XMLSecurityManager#getSystemProperty(Limit, String):::Read from system properties, or those in jaxp.properties:::try->value->SecuritySupport->getSystemProperty->if->value->equals->Integer->parseInt->limit->ordinal->limit->ordinal->return->SecuritySupport->readJAXPProperty->if->value->equals->Integer->parseInt->limit->ordinal->limit->ordinal->return->catch->throw->limit->systemProperty->new->NumberFormatException->finally->return
XMLSecurityPropertyManager#getIndex(String):::Get the index by property name:::foreach->Property->values->if->property->equalsName->return->property->ordinal->return
XMLSecurityPropertyManager#readSystemProperties():::Read from system properties, or those in jaxp.properties:::getSystemProperty->getSystemProperty
