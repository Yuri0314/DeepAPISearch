XPath#reset():::Reset this XPath to its original configuration:::
XPath#setXPathVariableResolver(XPathVariableResolver):::Establish a variable resolver:::
XPath#getXPathVariableResolver():::Return the current variable resolver:::
XPath#setXPathFunctionResolver(XPathFunctionResolver):::Establish a function resolver:::
XPath#getXPathFunctionResolver():::Return the current function resolver:::
XPath#setNamespaceContext(NamespaceContext):::Establish a namespace context:::
XPath#getNamespaceContext():::Return the current namespace context:::
XPath#compile(String):::Compile an XPath expression for later evaluation:::
XPath#evaluate(String, Object, QName):::Evaluate an XPath expression in the specified context and return the result as the specified type:::
XPath#evaluate(String, Object):::Evaluate an XPath expression in the specified context and return the result as a String:::
XPath#evaluate(String, InputSource, QName):::Evaluate an XPath expression in the context of the specified InputSource and return the result as the specified type:::
XPath#evaluate(String, InputSource):::Evaluate an XPath expression in the context of the specified InputSource and return the result as a String:::
XPath#evaluateExpression(String, Object, Class):::Evaluate an XPath expression in the specified context and return the result with the type specified through the class type   The parameter item represents the context the XPath expression will be operated on:::return->type->getQNameType->evaluate->cast
XPath#evaluateExpression(String, Object):::Evaluate an XPath expression in the specified context:::return->evaluateExpression
XPath#evaluateExpression(String, InputSource, Class):::Evaluate an XPath expression in the context of the specified source and return the result as specified:::return->type->getQNameType->evaluate->cast
XPath#evaluateExpression(String, InputSource):::Evaluate an XPath expression in the specified context:::return->evaluateExpression
XPathEvaluationResult#type():::Return the result type as an enum specified by XPathResultType:::
XPathEvaluationResult#value():::Returns the value of the result as the type <T> specified for the class.:::
XPathException#getCause():::Get the cause of this XPathException.:::return->super->getCause
XPathException#printStackTrace(java.io.PrintStream):::Print stack trace to specified PrintStream.:::if->getCause->getCause->printStackTrace->s->println->super->printStackTrace
XPathException#printStackTrace():::Print stack trace to System.err.:::printStackTrace
XPathException#printStackTrace(PrintWriter):::Print stack trace to specified PrintWriter.:::if->getCause->getCause->printStackTrace->s->println->super->printStackTrace
XPathExpression#evaluate(Object, QName):::Evaluate the compiled XPath expression in the specified context and return the result as the specified type:::
XPathExpression#evaluate(Object):::Evaluate the compiled XPath expression in the specified context and return the result as a String:::
XPathExpression#evaluate(InputSource, QName):::Evaluate the compiled XPath expression in the context of the specified InputSource and return the result as the specified type:::
XPathExpression#evaluate(InputSource):::Evaluate the compiled XPath expression in the context of the specified InputSource and return the result as a String:::
XPathExpression#evaluateExpression(Object, Class):::Evaluate the compiled XPath expression in the specified context, and return the result with the type specified through the class type:::return->type->getQNameType->evaluate->cast
XPathExpression#evaluateExpression(Object):::Evaluate the compiled XPath expression in the specified context:::return->evaluateExpression
XPathExpression#evaluateExpression(InputSource, Class):::Evaluate the compiled XPath expression in the specified context, and return the result with the type specified through the class type  This method builds a data model for the InputSource and calls #evaluateExpression(Object item, Class type) on the resulting document object:::return->type->getQNameType->evaluate->cast
XPathExpression#evaluateExpression(InputSource):::Evaluate the compiled XPath expression in the specified context:::return->evaluateExpression
XPathFactory#newDefaultInstance():::Creates a new instance of the XPathFactory builtin system-default implementation.:::return->new->XPathFactoryImpl
XPathFactory#newInstance():::Get a new XPathFactory instance using the default object model, #DEFAULT_OBJECT_MODEL_URI, the W3C DOM.  This method is functionally equivalent to:    newInstance(DEFAULT_OBJECT_MODEL_URI)   Since the implementation for the W3C DOM is always available, this method will never fail.:::try->return->newInstance->catch->throw->e->getMessage->new->RuntimeException->finally
XPathFactory#newInstance(String):::Get a new XPathFactory instance using the specified object model.  To find a XPathFactory object, this method looks the following places in the following order where "the class loader" refers to the context class loader: <ol>   <li>          If the system property #DEFAULT_PROPERTY_NAME + ":uri" is present,     where uri is the parameter to this method, then its value is read as a class name:::if->throw->new->NullPointerException->if->uri->length->throw->new->IllegalArgumentException->classLoader->SecuritySupport->getContextClassLoader->if->getClassLoader->xpathFactory->new->XPathFactoryFinder->newFactory->if->throw->new->XPathFactoryConfigurationException->return
XPathFactory#newInstance(String, String, ClassLoader):::Obtain a new instance of a XPathFactory from a factory class name:::cl->if->throw->new->NullPointerException->if->uri->length->throw->new->IllegalArgumentException->if->SecuritySupport->getContextClassLoader->f->new->XPathFactoryFinder->createInstance->if->throw->new->XPathFactoryConfigurationException->if->f->isObjectModelSupported->return->else->throw->new->XPathFactoryConfigurationException
XPathFactory#isObjectModelSupported(String):::Is specified object model supported by this XPathFactory?:::
XPathFactory#setFeature(String, boolean):::Set a feature for this XPathFactory and XPaths created by this factory.   Feature names are fully qualified java.net.URIs:::
XPathFactory#getFeature(String):::Get the state of the named feature.   Feature names are fully qualified java.net.URIs:::
XPathFactory#setXPathVariableResolver(XPathVariableResolver):::Establish a default variable resolver.  Any XPath objects constructed from this factory will use the specified resolver by default.  A NullPointerException is thrown if resolver is null.:::
XPathFactory#setXPathFunctionResolver(XPathFunctionResolver):::Establish a default function resolver.  Any XPath objects constructed from this factory will use the specified resolver by default.  A NullPointerException is thrown if resolver is null.:::
XPathFactory#newXPath():::Return a new XPath using the underlying object model determined when the XPathFactory was instantiated.:::
XPathFactoryFinder#newFactory(String):::Creates a new XPathFactory object for the specified object model.:::if->throw->new->NullPointerException->f->_newFactory->if->f->getClass->getName->debugPrintln->else->debugPrintln->return
XPathFactoryFinder#createInstance(String):::Creates an instance of the specified and returns it.:::xPathFactory->debugPrintln->clazz->createClass->if->debugPrintln->return->which->debugPrintln->try->clazz->getConstructor->newInstance->catch->clazz->getName->debugPrintln->if->ex->printStackTrace->return->finally->return
XPathFunction#evaluate(List):::Evaluate the function with the specified arguments.  To the greatest extent possible, side-effects should be avoided in the definition of extension functions:::
XPathFunctionResolver#resolveFunction(QName, int):::Find a function in the set of available functions.  If functionName or arity is null, then a NullPointerException is thrown.:::
XPathNodes#iterator():::Returns an iterator of the Nodes.:::
XPathNodes#size():::Returns the number of items in the result:::
XPathNodes#get(int):::Returns a Node at the specified position:::
XPathVariableResolver#resolveVariable(QName):::Find a variable in the set of available variables.  If variableName is null, then a NullPointerException is thrown.:::
