javax.xml.xpath.XPath#reset()->void:::Reset this XPath to its original configuration
javax.xml.xpath.XPath#setXPathVariableResolver(XPathVariableResolver)->void:::Establish a variable resolver
javax.xml.xpath.XPath#getXPathVariableResolver()->XPathVariableResolver:::Return the current variable resolver
javax.xml.xpath.XPath#setXPathFunctionResolver(XPathFunctionResolver)->void:::Establish a function resolver
javax.xml.xpath.XPath#getXPathFunctionResolver()->XPathFunctionResolver:::Return the current function resolver
javax.xml.xpath.XPath#setNamespaceContext(NamespaceContext)->void:::Establish a namespace context
javax.xml.xpath.XPath#getNamespaceContext()->NamespaceContext:::Return the current namespace context
javax.xml.xpath.XPath#compile(String)->XPathExpression:::Compile an XPath expression for later evaluation
javax.xml.xpath.XPath#evaluate(String, Object, QName)->Object:::Evaluate an XPath expression in the specified context and return the result as the specified type
javax.xml.xpath.XPath#evaluate(String, Object)->String:::Evaluate an XPath expression in the specified context and return the result as a String
javax.xml.xpath.XPath#evaluate(String, InputSource, QName)->Object:::Evaluate an XPath expression in the context of the specified InputSource and return the result as the specified type
javax.xml.xpath.XPath#evaluate(String, InputSource)->String:::Evaluate an XPath expression in the context of the specified InputSource and return the result as a String
javax.xml.xpath.XPath#evaluateExpression(String, Object, Class)->T:::Evaluate an XPath expression in the specified context and return the result with the type specified through the class type   The parameter item represents the context the XPath expression will be operated on
javax.xml.xpath.XPath#evaluateExpression(String, Object)->XPathEvaluationResult:::Evaluate an XPath expression in the specified context
javax.xml.xpath.XPath#evaluateExpression(String, InputSource, Class)->T:::Evaluate an XPath expression in the context of the specified source and return the result as specified
javax.xml.xpath.XPath#evaluateExpression(String, InputSource)->XPathEvaluationResult:::Evaluate an XPath expression in the specified context
javax.xml.xpath.XPathEvaluationResult#type()->XPathResultType:::Return the result type as an enum specified by XPathResultType
javax.xml.xpath.XPathEvaluationResult#value()->T:::Returns the value of the result as the type <T> specified for the class.
javax.xml.xpath.XPathException#getCause()->Throwable:::Get the cause of this XPathException.
javax.xml.xpath.XPathException#printStackTrace(java.io.PrintStream)->void:::Print stack trace to specified PrintStream.
javax.xml.xpath.XPathException#printStackTrace()->void:::Print stack trace to System.err.
javax.xml.xpath.XPathException#printStackTrace(PrintWriter)->void:::Print stack trace to specified PrintWriter.
javax.xml.xpath.XPathExpression#evaluate(Object, QName)->Object:::Evaluate the compiled XPath expression in the specified context and return the result as the specified type
javax.xml.xpath.XPathExpression#evaluate(Object)->String:::Evaluate the compiled XPath expression in the specified context and return the result as a String
javax.xml.xpath.XPathExpression#evaluate(InputSource, QName)->Object:::Evaluate the compiled XPath expression in the context of the specified InputSource and return the result as the specified type
javax.xml.xpath.XPathExpression#evaluate(InputSource)->String:::Evaluate the compiled XPath expression in the context of the specified InputSource and return the result as a String
javax.xml.xpath.XPathExpression#evaluateExpression(Object, Class)->T:::Evaluate the compiled XPath expression in the specified context, and return the result with the type specified through the class type
javax.xml.xpath.XPathExpression#evaluateExpression(Object)->XPathEvaluationResult:::Evaluate the compiled XPath expression in the specified context
javax.xml.xpath.XPathExpression#evaluateExpression(InputSource, Class)->T:::Evaluate the compiled XPath expression in the specified context, and return the result with the type specified through the class type  This method builds a data model for the InputSource and calls #evaluateExpression(Object item, Class type) on the resulting document object
javax.xml.xpath.XPathExpression#evaluateExpression(InputSource)->XPathEvaluationResult:::Evaluate the compiled XPath expression in the specified context
javax.xml.xpath.XPathFactory#newDefaultInstance()->XPathFactory:::Creates a new instance of the XPathFactory builtin system-default implementation.
javax.xml.xpath.XPathFactory#newInstance()->XPathFactory:::Get a new XPathFactory instance using the default object model, #DEFAULT_OBJECT_MODEL_URI, the W3C DOM.  This method is functionally equivalent to:    newInstance(DEFAULT_OBJECT_MODEL_URI)   Since the implementation for the W3C DOM is always available, this method will never fail.
javax.xml.xpath.XPathFactory#newInstance(String)->XPathFactory:::Get a new XPathFactory instance using the specified object model.  To find a XPathFactory object, this method looks the following places in the following order where "the class loader" refers to the context class loader: <ol>   <li>          If the system property #DEFAULT_PROPERTY_NAME + ":uri" is present,     where uri is the parameter to this method, then its value is read as a class name
javax.xml.xpath.XPathFactory#newInstance(String, String, ClassLoader)->XPathFactory:::Obtain a new instance of a XPathFactory from a factory class name
javax.xml.xpath.XPathFactory#isObjectModelSupported(String)->boolean:::Is specified object model supported by this XPathFactory?
javax.xml.xpath.XPathFactory#setFeature(String, boolean)->void:::Set a feature for this XPathFactory and XPaths created by this factory.   Feature names are fully qualified java.net.URIs
javax.xml.xpath.XPathFactory#getFeature(String)->boolean:::Get the state of the named feature.   Feature names are fully qualified java.net.URIs
javax.xml.xpath.XPathFactory#setXPathVariableResolver(XPathVariableResolver)->void:::Establish a default variable resolver.  Any XPath objects constructed from this factory will use the specified resolver by default.  A NullPointerException is thrown if resolver is null.
javax.xml.xpath.XPathFactory#setXPathFunctionResolver(XPathFunctionResolver)->void:::Establish a default function resolver.  Any XPath objects constructed from this factory will use the specified resolver by default.  A NullPointerException is thrown if resolver is null.
javax.xml.xpath.XPathFactory#newXPath()->XPath:::Return a new XPath using the underlying object model determined when the XPathFactory was instantiated.
javax.xml.xpath.XPathFactoryFinder#newFactory(String)->XPathFactory:::Creates a new XPathFactory object for the specified object model.
javax.xml.xpath.XPathFactoryFinder#createInstance(String)->XPathFactory:::Creates an instance of the specified and returns it.
javax.xml.xpath.XPathFunction#evaluate(List)->Object:::Evaluate the function with the specified arguments.  To the greatest extent possible, side-effects should be avoided in the definition of extension functions
javax.xml.xpath.XPathFunctionResolver#resolveFunction(QName, int)->XPathFunction:::Find a function in the set of available functions.  If functionName or arity is null, then a NullPointerException is thrown.
javax.xml.xpath.XPathNodes#iterator()->Iterator:::Returns an iterator of the Nodes.
javax.xml.xpath.XPathNodes#size()->int:::Returns the number of items in the result
javax.xml.xpath.XPathNodes#get(int)->Node:::Returns a Node at the specified position
javax.xml.xpath.XPathVariableResolver#resolveVariable(QName)->Object:::Find a variable in the set of available variables.  If variableName is null, then a NullPointerException is thrown.
