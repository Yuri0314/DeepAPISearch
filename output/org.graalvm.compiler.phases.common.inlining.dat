org.graalvm.compiler.phases.common.inlining.InliningPhase_OptionDescriptors#get(String)->OptionDescriptor::: inlining phase_ option descriptors get
org.graalvm.compiler.phases.common.inlining.InliningPhase_OptionDescriptors#iterator()->Iterator::: inlining phase_ option descriptors iterator
org.graalvm.compiler.phases.common.inlining.InliningPhase#getCanonicalizer()->CanonicalizerPhase::: inlining phase get canonicalizer
org.graalvm.compiler.phases.common.inlining.InliningPhase#codeSizeIncrease()->float::: inlining phase code size increase
org.graalvm.compiler.phases.common.inlining.InliningPhase#setMaxMethodsPerInlining(int)->void::: inlining phase set max methods per inlining
org.graalvm.compiler.phases.common.inlining.InliningPhase#setRootInvokes(LinkedList)->void::: inlining phase set root invokes
org.graalvm.compiler.phases.common.inlining.InliningPhase#run(StructuredGraph, HighTierContext)->void:::This method sets in motion the inlining machinery.
org.graalvm.compiler.phases.common.inlining.InliningUtil#traceInlinedMethod(InlineInfo, int, boolean, String, Object...)->void:::Trace a decision to inline a method
org.graalvm.compiler.phases.common.inlining.InliningUtil#traceInlinedMethod(Invoke, int, boolean, ResolvedJavaMethod, String, Object...)->void:::Trace a decision to inline a method
org.graalvm.compiler.phases.common.inlining.InliningUtil#traceNotInlinedMethod(InlineInfo, int, String, Object...)->void:::Trace a decision to not inline a method
org.graalvm.compiler.phases.common.inlining.InliningUtil#traceNotInlinedMethod(Invoke, int, ResolvedJavaMethod, String, Object...)->void:::Trace a decision about not inlining a method
org.graalvm.compiler.phases.common.inlining.InliningUtil#logInliningDecision(DebugContext, String, Object...)->void:::Output a generic inlining decision to the logging stream (e.g
org.graalvm.compiler.phases.common.inlining.InliningUtil#logNotInlinedMethod(Invoke, String)->void:::Output a decision about not inlining a method to the logging stream, for debugging purposes.
org.graalvm.compiler.phases.common.inlining.InliningUtil#replaceInvokeCallTarget(Invoke, StructuredGraph, InvokeKind, ResolvedJavaMethod)->void::: inlining util replace invoke call target
org.graalvm.compiler.phases.common.inlining.InliningUtil#createAnchoredReceiver(StructuredGraph, GuardingNode, ResolvedJavaType, ValueNode, boolean)->PiNode::: inlining util create anchored receiver
org.graalvm.compiler.phases.common.inlining.InliningUtil#checkInvokeConditions(Invoke)->String::: inlining util check invoke conditions
org.graalvm.compiler.phases.common.inlining.InliningUtil#inline(Invoke, StructuredGraph, boolean, ResolvedJavaMethod)->UnmodifiableEconomicMap:::Performs an actual inlining, thereby replacing the given invoke with the given inlineGraph.
org.graalvm.compiler.phases.common.inlining.InliningUtil#inline(Invoke, StructuredGraph, boolean, ResolvedJavaMethod, String, String)->UnmodifiableEconomicMap:::Performs an actual inlining, thereby replacing the given invoke with the given inlineGraph.
org.graalvm.compiler.phases.common.inlining.InliningUtil#inlineForCanonicalization(Invoke, StructuredGraph, boolean, ResolvedJavaMethod, String, String)->EconomicSet:::Inline inlineGraph into the current replacing the node Invoke and return the set of nodes which should be canonicalized
org.graalvm.compiler.phases.common.inlining.InliningUtil#inlineForCanonicalization(Invoke, StructuredGraph, boolean, ResolvedJavaMethod, Consumer>, String, String)->EconomicSet::: inlining util inline for canonicalization
org.graalvm.compiler.phases.common.inlining.InliningUtil#updateSourcePosition(StructuredGraph, UnmodifiableEconomicMap, Mark, NodeSourcePosition, boolean)->void::: inlining util update source position
org.graalvm.compiler.phases.common.inlining.InliningUtil#processMonitorId(FrameState, MonitorIdNode)->void::: inlining util process monitor id
org.graalvm.compiler.phases.common.inlining.InliningUtil#processFrameStates(Invoke, StructuredGraph, EconomicMap, FrameState, boolean)->void::: inlining util process frame states
org.graalvm.compiler.phases.common.inlining.InliningUtil#processFrameState(FrameState, Invoke, EconomicMap, ResolvedJavaMethod, FrameState, FrameState, boolean, ResolvedJavaMethod, List)->FrameState::: inlining util process frame state
org.graalvm.compiler.phases.common.inlining.InliningUtil#checkInlineeFrameState(Invoke, ResolvedJavaMethod, FrameState)->boolean::: inlining util check inlinee frame state
org.graalvm.compiler.phases.common.inlining.InliningUtil#handleMissingAfterExceptionFrameState(FrameState, Invoke, EconomicMap, boolean)->FrameState::: inlining util handle missing after exception frame state
org.graalvm.compiler.phases.common.inlining.InliningUtil#nonNullReceiver(Invoke)->ValueNode:::Gets the receiver for an invoke, adding a guard if necessary to ensure it is non-null, and ensuring that the resulting type is compatible with the method being invoked.
org.graalvm.compiler.phases.common.inlining.InliningUtil#getNodeCount(StructuredGraph)->int:::This method exclude InstrumentationNode from inlining heuristics.
