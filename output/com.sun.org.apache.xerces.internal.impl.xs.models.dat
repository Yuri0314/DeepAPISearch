CMBuilder#getContentModel(XSComplexTypeDecl, boolean):::Get content model for the a given type:::contentType->typeDecl->getContentType->if->return->particle->typeDecl->getParticle->if->return->cmValidator->if->createAllCM->else->createDFACM->fNodeFactory->resetNodeCount->if->return
CMNodeFactory#setProperty(String, Object):::Sets the value of a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->fSecurityManager->getLimit->return->if->length->propertyId->endsWith->return
XSAllCM#startContentModel():::This methods to be called on entering a first element whose type has this content model:::state->new->intArr->for->i->return
XSAllCM#oneTransition(QName, int[], SubstitutionGroupHandler):::The method corresponds to one transition in the content model.:::if->return->findMatchingDecl->matchingDecl->for->i->return->findMatchingDecl
XSAllCM#endContentModel(int[]):::The method indicates the end of list of children:::state->if->return->if->return->for->i->return
XSAllCM#checkUniqueParticleAttribution(SubstitutionGroupHandler):::check whether this content violates UPA constraint.:::for->i->return
XSAllCM#whatCanGoHere(int[]):::Check which elements are valid to appear at this point:::ret->new->ArrayList<>->for->i->return
XSCMUniOp#setUserData(Object):::Allows the user to set arbitrary data on this content model node:::super->setUserData->fChild->setUserData
XSCMValidator#startContentModel():::This methods to be called on entering a first element whose type has this content model:::
XSCMValidator#oneTransition(QName, int[], SubstitutionGroupHandler):::The method corresponds to one transaction in the content model.:::
XSCMValidator#endContentModel(int[]):::The method indicates the end of list of children:::
XSCMValidator#checkUniqueParticleAttribution(SubstitutionGroupHandler):::check whether this content violates UPA constraint.:::
XSCMValidator#whatCanGoHere(int[]):::Check which elements are valid to appear at this point:::
XSCMValidator#checkMinMaxBounds():::Used by constant space algorithm for a{n,m} for n > 1 and m <= unbounded:::
XSCMValidator#occurenceInfo(int[]):::Returns an array containing information about the current repeating term or null if no occurrence counting was being performed at the current state.  If an array is returned it will have a length == 4 and will contain:  <ul>   <li>a[0] :: min occurs</li>   <li>a[1] :: max occurs</li>   <li>a[2] :: current value of the counter</li>   <li>a[3] :: identifier for the repeating term</li>  </ul> :::
XSCMValidator#getTermName(int):::Returns the name of the term (element or wildcard) for the given identifier.:::
XSCMValidator#isCompactedForUPA():::Checks if this content model has had its min/maxOccurs values reduced for purposes of speeding up UPA:::
XSDFACM#isFinalState(int):::check whether the given state is one of the final states:::return
XSDFACM#oneTransition(QName, int[], SubstitutionGroupHandler):::one transition only:::curState->if->if->return->findMatchingDecl->nextState->elemIndex->matchingDecl->for->if->return->findMatchingDecl->if->o->if->if->if->return->findMatchingDecl->else->if->return->findMatchingDecl->else->if->else->if->return
XSDFACM#checkUniqueParticleAttribution(SubstitutionGroupHandler):::check whether this content violates UPA constraint.:::conflictTable->new->byteArrs->for->i->for->i->for->i->return
XSDFACM#whatCanGoHere(int[]):::Check which elements are valid to appear at this point:::curState->if->o->count->ret->new->ArrayList<>->for->elemIndex->return
XSDFACM#checkMinMaxBounds():::Used by constant space algorithm for a{n,m} for n > 1 and m <= unbounded:::result->for->elemIndex->return
XSEmptyCM#startContentModel():::This methods to be called on entering a first element whose type has this content model:::return->new->intArr
XSEmptyCM#oneTransition(QName, int[], SubstitutionGroupHandler):::The method corresponds to one transaction in the content model.:::if->return->return
XSEmptyCM#endContentModel(int[]):::The method indicates the end of list of children:::isFinal->state->if->return->return
XSEmptyCM#checkUniqueParticleAttribution(SubstitutionGroupHandler):::check whether this content violates UPA constraint.:::return
XSEmptyCM#whatCanGoHere(int[]):::Check which elements are valid to appear at this point:::return
