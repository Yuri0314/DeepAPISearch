sun.jvm.hotspot.debugger.bsd.BsdAddress#equals(Object)->boolean::: bsd address equals
sun.jvm.hotspot.debugger.bsd.BsdAddress#hashCode()->int::: bsd address hash code
sun.jvm.hotspot.debugger.bsd.BsdAddress#toString()->String::: bsd address to string
sun.jvm.hotspot.debugger.bsd.BsdAddress#getCIntegerAt(long, long, boolean)->long::: bsd address get integer at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getAddressAt(long)->Address::: bsd address get address at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getCompOopAddressAt(long)->Address::: bsd address get comp oop address at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getCompKlassAddressAt(long)->Address::: bsd address get comp klass address at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getJBooleanAt(long)->boolean::: bsd address get boolean at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getJByteAt(long)->byte::: bsd address get byte at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getJCharAt(long)->char::: bsd address get char at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getJDoubleAt(long)->double::: bsd address get double at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getJFloatAt(long)->float::: bsd address get float at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getJIntAt(long)->int::: bsd address get int at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getJLongAt(long)->long::: bsd address get long at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getJShortAt(long)->short::: bsd address get short at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getOopHandleAt(long)->OopHandle::: bsd address get oop handle at
sun.jvm.hotspot.debugger.bsd.BsdAddress#getCompOopHandleAt(long)->OopHandle::: bsd address get comp oop handle at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setCIntegerAt(long, long, long)->void::: bsd address set integer at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setAddressAt(long, Address)->void::: bsd address set address at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setJBooleanAt(long, boolean)->void::: bsd address set boolean at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setJByteAt(long, byte)->void::: bsd address set byte at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setJCharAt(long, char)->void::: bsd address set char at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setJDoubleAt(long, double)->void::: bsd address set double at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setJFloatAt(long, float)->void::: bsd address set float at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setJIntAt(long, int)->void::: bsd address set int at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setJLongAt(long, long)->void::: bsd address set long at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setJShortAt(long, short)->void::: bsd address set short at
sun.jvm.hotspot.debugger.bsd.BsdAddress#setOopHandleAt(long, OopHandle)->void::: bsd address set oop handle at
sun.jvm.hotspot.debugger.bsd.BsdAddress#addOffsetTo(long)->Address::: bsd address add offset to
sun.jvm.hotspot.debugger.bsd.BsdAddress#addOffsetToAsOopHandle(long)->OopHandle::: bsd address add offset to as oop handle
sun.jvm.hotspot.debugger.bsd.BsdAddress#minus(Address)->long:::(FIXME: any signed/unsigned issues? Should this work for       OopHandles?)
sun.jvm.hotspot.debugger.bsd.BsdAddress#lessThan(Address)->boolean::: bsd address less than
sun.jvm.hotspot.debugger.bsd.BsdAddress#lessThanOrEqual(Address)->boolean::: bsd address less than or equal
sun.jvm.hotspot.debugger.bsd.BsdAddress#greaterThan(Address)->boolean::: bsd address greater than
sun.jvm.hotspot.debugger.bsd.BsdAddress#greaterThanOrEqual(Address)->boolean::: bsd address greater than or equal
sun.jvm.hotspot.debugger.bsd.BsdAddress#andWithMask(long)->Address::: bsd address and with mask
sun.jvm.hotspot.debugger.bsd.BsdAddress#orWithMask(long)->Address::: bsd address or with mask
sun.jvm.hotspot.debugger.bsd.BsdAddress#xorWithMask(long)->Address::: bsd address xor with mask
sun.jvm.hotspot.debugger.bsd.BsdAddress#asLongValue()->long::: bsd address as long value
sun.jvm.hotspot.debugger.bsd.BsdAddress#getValue()->long::: bsd address get value
sun.jvm.hotspot.debugger.bsd.BsdAddress#main(String[])->void::: bsd address main
sun.jvm.hotspot.debugger.bsd.BsdCDebugger#getThreadList()->List::: bsd debugger get thread list
sun.jvm.hotspot.debugger.bsd.BsdCDebugger#getLoadObjectList()->List::: bsd debugger get load object list
sun.jvm.hotspot.debugger.bsd.BsdCDebugger#loadObjectContainingPC(Address)->LoadObject::: bsd debugger load object containing c
sun.jvm.hotspot.debugger.bsd.BsdCDebugger#topFrameForThread(ThreadProxy)->CFrame::: bsd debugger top frame for thread
sun.jvm.hotspot.debugger.bsd.BsdCDebugger#getNameOfFile(String)->String::: bsd debugger get name of file
sun.jvm.hotspot.debugger.bsd.BsdCDebugger#getProcessControl()->ProcessControl::: bsd debugger get process control
sun.jvm.hotspot.debugger.bsd.BsdCDebugger#canDemangle()->boolean::: bsd debugger can demangle
sun.jvm.hotspot.debugger.bsd.BsdCDebugger#demangle(String)->String::: bsd debugger demangle
sun.jvm.hotspot.debugger.bsd.BsdDebugger#addressValueToString(long)->String::: bsd debugger address value to string
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readJBoolean(long)->boolean::: bsd debugger read boolean
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readJByte(long)->byte::: bsd debugger read byte
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readJChar(long)->char::: bsd debugger read char
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readJDouble(long)->double::: bsd debugger read double
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readJFloat(long)->float::: bsd debugger read float
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readJInt(long)->int::: bsd debugger read int
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readJLong(long)->long::: bsd debugger read long
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readJShort(long)->short::: bsd debugger read short
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readCInteger(long, long, boolean)->long::: bsd debugger read integer
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readAddress(long)->BsdAddress::: bsd debugger read address
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readCompOopAddress(long)->BsdAddress::: bsd debugger read comp oop address
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readCompKlassAddress(long)->BsdAddress::: bsd debugger read comp klass address
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readOopHandle(long)->BsdOopHandle::: bsd debugger read oop handle
sun.jvm.hotspot.debugger.bsd.BsdDebugger#readCompOopHandle(long)->BsdOopHandle::: bsd debugger read comp oop handle
sun.jvm.hotspot.debugger.bsd.BsdDebugger#getThreadIntegerRegisterSet(long)->long[]::: bsd debugger get thread integer register set
sun.jvm.hotspot.debugger.bsd.BsdDebugger#getAddressValue(Address)->long::: bsd debugger get address value
sun.jvm.hotspot.debugger.bsd.BsdDebugger#newAddress(long)->Address::: bsd debugger new address
sun.jvm.hotspot.debugger.bsd.BsdDebugger#getThreadList()->List::: bsd debugger get thread list
sun.jvm.hotspot.debugger.bsd.BsdDebugger#getLoadObjectList()->List::: bsd debugger get load object list
sun.jvm.hotspot.debugger.bsd.BsdDebugger#lookup(long)->ClosestSymbol::: bsd debugger lookup
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getAddressSize()->int::: bsd debugger local get address size
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal.WorkerThreadTask#doit(BsdDebuggerLocal)->void::: worker thread task doit
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal.BsdDebuggerLocalWorkerThread#run()->void::: bsd debugger local worker thread run
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal.BsdDebuggerLocalWorkerThread#execute(WorkerThreadTask)->WorkerThreadTask::: bsd debugger local worker thread execute
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#hasProcessList()->boolean:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getProcessList()->List:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#attach(int)->void:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#attach(String, String)->void:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#detach()->boolean:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#parseAddress(String)->Address:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getOS()->String:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getCPU()->String:::From the Debugger interface via JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#hasConsole()->boolean::: bsd debugger local has console
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#consoleExecuteCommand(String)->String::: bsd debugger local console execute command
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getConsolePrompt()->String::: bsd debugger local get console prompt
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#lookup(String, String)->Address:::From the SymbolLookup interface via Debugger and JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#lookupOop(String, String)->OopHandle:::From the SymbolLookup interface via Debugger and JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getMachineDescription()->MachineDescription:::From the Debugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getThreadForIdentifierAddress(Address, Address)->ThreadProxy:::From the ThreadAccess interface via Debugger and JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getThreadForIdentifierAddress(Address)->ThreadProxy::: bsd debugger local get thread for identifier address
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getThreadForThreadId(long)->ThreadProxy:::From the ThreadAccess interface via Debugger and JVMDebugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#addressValueToString(long)->String:::From the BsdDebugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#readAddress(long)->BsdAddress:::From the BsdDebugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#readCompOopAddress(long)->BsdAddress::: bsd debugger local read comp oop address
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#readCompKlassAddress(long)->BsdAddress::: bsd debugger local read comp klass address
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#readOopHandle(long)->BsdOopHandle:::From the BsdDebugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#readCompOopHandle(long)->BsdOopHandle::: bsd debugger local read comp oop handle
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getThreadIntegerRegisterSet(long)->long[]::: bsd debugger local get thread integer register set
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#readCInteger(long, long, boolean)->long:::Need to override this to relax alignment checks on x86.
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#readJLong(long)->long::: bsd debugger local read long
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getAddressValue(Address)->long:::From the BsdDebugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#newAddress(long)->Address:::From the BsdDebugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getThreadList()->List:::From the BsdCDebugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getLoadObjectList()->List:::From the BsdCDebugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#lookup(long)->ClosestSymbol:::From the BsdCDebugger interface
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getCDebugger()->CDebugger::: bsd debugger local get debugger
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#readBytesFromProcess(long, long)->ReadResult:::This reads bytes from the remote process.
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#writeBytesToProcess(long, long, byte[])->void::: bsd debugger local write bytes to process
sun.jvm.hotspot.debugger.bsd.BsdDebuggerLocal#getJavaThreadsInfo()->long[]:::this functions used for core file reading and called from native attach0,         it returns an array of long integers as         [thread_id, stack_start, stack_end, thread_id, stack_start, stack_end, ....] for         all java threads recorded in Threads
sun.jvm.hotspot.debugger.bsd.BsdOopHandle#equals(Object)->boolean::: bsd oop handle equals
sun.jvm.hotspot.debugger.bsd.BsdOopHandle#addOffsetTo(long)->Address::: bsd oop handle add offset to
sun.jvm.hotspot.debugger.bsd.BsdOopHandle#andWithMask(long)->Address::: bsd oop handle and with mask
sun.jvm.hotspot.debugger.bsd.BsdOopHandle#orWithMask(long)->Address::: bsd oop handle or with mask
sun.jvm.hotspot.debugger.bsd.BsdOopHandle#xorWithMask(long)->Address::: bsd oop handle xor with mask
sun.jvm.hotspot.debugger.bsd.BsdThread#equals(Object)->boolean::: bsd thread equals
sun.jvm.hotspot.debugger.bsd.BsdThread#hashCode()->int::: bsd thread hash code
sun.jvm.hotspot.debugger.bsd.BsdThread#toString()->String::: bsd thread to string
sun.jvm.hotspot.debugger.bsd.BsdThread#getContext()->ThreadContext::: bsd thread get context
sun.jvm.hotspot.debugger.bsd.BsdThread#canSetContext()->boolean::: bsd thread can set context
sun.jvm.hotspot.debugger.bsd.BsdThread#setContext(ThreadContext)->void::: bsd thread set context
sun.jvm.hotspot.debugger.bsd.BsdThread#getUniqueThreadId()->long:::this is not interface function, used in core file to get unique thread id on Macosx
sun.jvm.hotspot.debugger.bsd.BsdThreadContextFactory#createThreadContext(BsdDebugger)->ThreadContext::: bsd thread context factory create thread context
sun.jvm.hotspot.debugger.bsd.SharedObject#newAddress(long)->Address::: shared object new address
sun.jvm.hotspot.debugger.bsd.SharedObject#getAddressValue(Address)->long::: shared object get address value
