CompilerConfiguration#createHighTier(OptionValues)::: compiler configuration create high tier:::
CompilerConfiguration#createMidTier(OptionValues)::: compiler configuration create mid tier:::
CompilerConfiguration#createLowTier(OptionValues)::: compiler configuration create low tier:::
CompilerConfiguration#createPreAllocationOptimizationStage(OptionValues)::: compiler configuration create pre allocation optimization stage:::
CompilerConfiguration#createAllocationStage(OptionValues)::: compiler configuration create allocation stage:::
CompilerConfiguration#createPostAllocationOptimizationStage(OptionValues)::: compiler configuration create post allocation optimization stage:::
HighTierContext#getGraphBuilderSuite()::: high tier context get graph builder suite:::return
HighTierContext#getOptimisticOptimizations()::: high tier context get optimistic optimizations:::return
LowTierContext#getTarget()::: low tier context get target:::return->target->getTarget
LowTierContext#getTargetProvider()::: low tier context get target provider:::return
MidTierContext#getTarget()::: mid tier context get target:::return->target->getTarget
MidTierContext#getTargetProvider()::: mid tier context get target provider:::return
MidTierContext#getOptimisticOptimizations()::: mid tier context get optimistic optimizations:::return
MidTierContext#getProfilingInfo()::: mid tier context get profiling info:::return
Suites#getHighTier()::: suites get high tier:::return
Suites#getMidTier()::: suites get mid tier:::return
Suites#getLowTier()::: suites get low tier:::return
Suites#createSuites(CompilerConfiguration, OptionValues)::: suites create suites:::return->config->createHighTier->config->createMidTier->config->createLowTier->new->Suites
Suites#createLIRSuites(CompilerConfiguration, OptionValues)::: suites create suites:::allocationStage->config->createAllocationStage->return->config->createPreAllocationOptimizationStage->config->createPostAllocationOptimizationStage->new->LIRSuites
Suites#verifyAllocationStage(LIRPhaseSuite)::: suites verify allocation stage:::allocationPhase->foreach->allocationStage->getPhases->if->if->return->return
Suites#isImmutable()::: suites is immutable:::return
Suites#setImmutable()::: suites set immutable:::if->highTier->setImmutable->midTier->setImmutable->lowTier->setImmutable
Suites#copy()::: suites copy:::return->highTier->copy->midTier->copy->lowTier->copy->new->Suites
SuitesCreator#createSuites(OptionValues):::Create a new set of phase suites based on options.:::
SuitesCreator#createLIRSuites(OptionValues):::Create a new set of low-level phase suites based on options.:::
SuitesProvider#getDefaultSuites(OptionValues):::Get the default phase suites of this compiler:::
SuitesProvider#getDefaultGraphBuilderSuite():::Get the default phase suite for creating new graphs.:::
SuitesProvider#getDefaultLIRSuites(OptionValues):::Get the default LIR phase suites of this compiler:::
TargetProvider#getTarget()::: target provider get target:::
