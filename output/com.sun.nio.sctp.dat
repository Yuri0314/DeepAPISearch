com.sun.nio.sctp.AbstractNotificationHandler#handleNotification(Notification, T)->HandlerResult:::Invoked when an implementation specific notification is received from the SCTP stack.
com.sun.nio.sctp.AbstractNotificationHandler#handleNotification(AssociationChangeNotification, T)->HandlerResult:::Invoked when an AssociationChangeNotification is received from the SCTP stack.
com.sun.nio.sctp.AbstractNotificationHandler#handleNotification(PeerAddressChangeNotification, T)->HandlerResult:::Invoked when an PeerAddressChangeNotification is received from the SCTP stack.
com.sun.nio.sctp.AbstractNotificationHandler#handleNotification(SendFailedNotification, T)->HandlerResult:::Invoked when an SendFailedNotification is received from the SCTP stack.
com.sun.nio.sctp.AbstractNotificationHandler#handleNotification(ShutdownNotification, T)->HandlerResult:::Invoked when an ShutdownNotification is received from the SCTP stack.
com.sun.nio.sctp.Association#associationID()->int:::Returns the associationID.
com.sun.nio.sctp.Association#maxInboundStreams()->int:::Returns the maximum number of inbound streams that this association supports
com.sun.nio.sctp.Association#maxOutboundStreams()->int:::Returns the maximum number of outbound streams that this association supports
com.sun.nio.sctp.AssociationChangeNotification#association()->Association:::Returns the association that this notification is applicable to.
com.sun.nio.sctp.AssociationChangeNotification#event()->AssocChangeEvent:::Returns the type of change event.
com.sun.nio.sctp.MessageInfo#createOutgoing(SocketAddress, int)->MessageInfo:::Creates a MessageInfo instance suitable for use when sending a message
com.sun.nio.sctp.MessageInfo#createOutgoing(Association, SocketAddress, int)->MessageInfo:::Creates a MessageInfo instance suitable for use when sending a message to a given association
com.sun.nio.sctp.MessageInfo#address()->SocketAddress:::Returns the source socket address if the message has been received, otherwise the preferred destination of the message to be sent.
com.sun.nio.sctp.MessageInfo#association()->Association:::Returns the association that the message was received on, if the message has been received, otherwise the association that the message is to be sent on.
com.sun.nio.sctp.MessageInfo#bytes()->int:::Returns the number of bytes read for the received message
com.sun.nio.sctp.MessageInfo#isComplete()->boolean:::Tells whether or not the message is complete
com.sun.nio.sctp.MessageInfo#complete(boolean)->MessageInfo:::Sets whether or not the message is complete
com.sun.nio.sctp.MessageInfo#isUnordered()->boolean:::Tells whether or not the message is unordered
com.sun.nio.sctp.MessageInfo#unordered(boolean)->MessageInfo:::Sets whether or not the message is unordered.
com.sun.nio.sctp.MessageInfo#payloadProtocolID()->int:::Returns the payload protocol Identifier
com.sun.nio.sctp.MessageInfo#payloadProtocolID(int)->MessageInfo:::Sets the payload protocol Identifier
com.sun.nio.sctp.MessageInfo#streamNumber()->int:::Returns the stream number that the message was received on, if the message has been received, otherwise the stream number that the message is to be sent on.
com.sun.nio.sctp.MessageInfo#streamNumber(int)->MessageInfo:::Sets the stream number that the message is to be sent on.
com.sun.nio.sctp.MessageInfo#timeToLive()->long:::The time period that the sending side may expire the message if it has not been sent, or 0 to indicate that no timeout should occur
com.sun.nio.sctp.MessageInfo#timeToLive(long)->MessageInfo:::Sets the time period that the sending side may expire the message if it has not been sent.
com.sun.nio.sctp.Notification#association()->Association:::Returns the association that this notification is applicable to.
com.sun.nio.sctp.NotificationHandler#handleNotification(Notification, T)->HandlerResult:::Invoked when a notification is received from the SCTP stack.
com.sun.nio.sctp.PeerAddressChangeNotification#address()->SocketAddress:::Returns the peer address.
com.sun.nio.sctp.PeerAddressChangeNotification#association()->Association:::Returns the association that this notification is applicable to.
com.sun.nio.sctp.PeerAddressChangeNotification#event()->AddressChangeEvent:::Returns the type of change event.
com.sun.nio.sctp.SctpChannel#open()->SctpChannel:::Opens an SCTP channel
com.sun.nio.sctp.SctpChannel#open(SocketAddress, int, int)->SctpChannel:::Opens an SCTP channel and connects it to a remote address
com.sun.nio.sctp.SctpChannel#association()->Association:::Returns the association on this channel's socket.
com.sun.nio.sctp.SctpChannel#bind(SocketAddress)->SctpChannel:::Binds the channel's socket to a local address
com.sun.nio.sctp.SctpChannel#bindAddress(InetAddress)->SctpChannel:::Adds the given address to the bound addresses for the channel's socket
com.sun.nio.sctp.SctpChannel#unbindAddress(InetAddress)->SctpChannel:::Removes the given address from the bound addresses for the channel's socket
com.sun.nio.sctp.SctpChannel#connect(SocketAddress)->boolean:::Connects this channel's socket
com.sun.nio.sctp.SctpChannel#connect(SocketAddress, int, int)->boolean:::Connects this channel's socket
com.sun.nio.sctp.SctpChannel#isConnectionPending()->boolean:::Tells whether or not a connection operation is in progress on this channel.
com.sun.nio.sctp.SctpChannel#finishConnect()->boolean:::Finishes the process of connecting an SCTP channel
com.sun.nio.sctp.SctpChannel#getAllLocalAddresses()->Set:::Returns all of the socket addresses to which this channel's socket is bound.
com.sun.nio.sctp.SctpChannel#getRemoteAddresses()->Set:::Returns all of the remote addresses to which this channel's socket is connected
com.sun.nio.sctp.SctpChannel#shutdown()->SctpChannel:::Shutdown a connection without closing the channel
com.sun.nio.sctp.SctpChannel#getOption(SctpSocketOption)->T:::Returns the value of a socket option.
com.sun.nio.sctp.SctpChannel#setOption(SctpSocketOption, T)->SctpChannel:::Sets the value of a socket option.
com.sun.nio.sctp.SctpChannel#supportedOptions()->Set>:::Returns a set of the socket options supported by this channel
com.sun.nio.sctp.SctpChannel#validOps()->int:::Returns an operation set identifying this channel's supported operations
com.sun.nio.sctp.SctpChannel#receive(ByteBuffer, T, NotificationHandler)->MessageInfo:::Receives a message into the given buffer and/or handles a notification
com.sun.nio.sctp.SctpChannel#send(ByteBuffer, MessageInfo)->int:::Sends a message via this channel
com.sun.nio.sctp.SctpMultiChannel#open()->SctpMultiChannel:::Opens an SCTP multi channel
com.sun.nio.sctp.SctpMultiChannel#associations()->Set:::Returns the open associations on this channel's socket
com.sun.nio.sctp.SctpMultiChannel#bind(SocketAddress, int)->SctpMultiChannel:::Binds the channel's socket to a local address and configures the socket to listen for connections
com.sun.nio.sctp.SctpMultiChannel#bind(SocketAddress)->SctpMultiChannel:::Binds the channel's socket to a local address and configures the socket to listen for connections
com.sun.nio.sctp.SctpMultiChannel#bindAddress(InetAddress)->SctpMultiChannel:::Adds the given address to the bound addresses for the channel's socket
com.sun.nio.sctp.SctpMultiChannel#unbindAddress(InetAddress)->SctpMultiChannel:::Removes the given address from the bound addresses for the channel's socket
com.sun.nio.sctp.SctpMultiChannel#getAllLocalAddresses()->Set:::Returns all of the socket addresses to which this channel's socket is bound.
com.sun.nio.sctp.SctpMultiChannel#getRemoteAddresses(Association)->Set:::Returns all of the remote addresses to which the given association on this channel's socket is connected.
com.sun.nio.sctp.SctpMultiChannel#shutdown(Association)->SctpMultiChannel:::Shutdown an association without closing the channel.
com.sun.nio.sctp.SctpMultiChannel#getOption(SctpSocketOption, Association)->T:::Returns the value of a socket option
com.sun.nio.sctp.SctpMultiChannel#setOption(SctpSocketOption, T, Association)->SctpMultiChannel:::Sets the value of a socket option
com.sun.nio.sctp.SctpMultiChannel#supportedOptions()->Set>:::Returns a set of the socket options supported by this channel
com.sun.nio.sctp.SctpMultiChannel#validOps()->int:::Returns an operation set identifying this channel's supported operations
com.sun.nio.sctp.SctpMultiChannel#receive(ByteBuffer, T, NotificationHandler)->MessageInfo:::Receives a message and/or handles a notification via this channel
com.sun.nio.sctp.SctpMultiChannel#send(ByteBuffer, MessageInfo)->int:::Sends a message via this channel
com.sun.nio.sctp.SctpMultiChannel#branch(Association)->SctpChannel:::Branches off an association
com.sun.nio.sctp.SctpServerChannel#open()->SctpServerChannel:::Opens an SCTP server channel
com.sun.nio.sctp.SctpServerChannel#accept()->SctpChannel:::Accepts an association on this channel's socket
com.sun.nio.sctp.SctpServerChannel#bind(SocketAddress)->SctpServerChannel:::Binds the channel's socket to a local address and configures the socket to listen for associations
com.sun.nio.sctp.SctpServerChannel#bind(SocketAddress, int)->SctpServerChannel:::Binds the channel's socket to a local address and configures the socket to listen for associations
com.sun.nio.sctp.SctpServerChannel#bindAddress(InetAddress)->SctpServerChannel:::Adds the given address to the bound addresses for the channel's socket
com.sun.nio.sctp.SctpServerChannel#unbindAddress(InetAddress)->SctpServerChannel:::Removes the given address from the bound addresses for the channel's socket
com.sun.nio.sctp.SctpServerChannel#getAllLocalAddresses()->Set:::Returns all of the socket addresses to which this channel's socket is bound.
com.sun.nio.sctp.SctpServerChannel#getOption(SctpSocketOption)->T:::Returns the value of a socket option.
com.sun.nio.sctp.SctpServerChannel#setOption(SctpSocketOption, T)->SctpServerChannel:::Sets the value of a socket option.
com.sun.nio.sctp.SctpServerChannel#supportedOptions()->Set>:::Returns a set of the socket options supported by this channel
com.sun.nio.sctp.SctpServerChannel#validOps()->int:::Returns an operation set identifying this channel's supported operations
com.sun.nio.sctp.SctpStandardSocketOptions.InitMaxStreams#create(int, int)->InitMaxStreams:::Creates an InitMaxStreams instance.
com.sun.nio.sctp.SctpStandardSocketOptions.InitMaxStreams#maxInStreams()->int:::Returns the maximum number of inbound streams.
com.sun.nio.sctp.SctpStandardSocketOptions.InitMaxStreams#maxOutStreams()->int:::Returns the maximum number of outbound streams.
com.sun.nio.sctp.SctpStandardSocketOptions.InitMaxStreams#toString()->String:::Returns a string representation of this init max streams, including the maximum in and out bound streams.
com.sun.nio.sctp.SctpStandardSocketOptions.InitMaxStreams#equals(Object)->boolean:::Returns true if the specified object is another InitMaxStreams instance with the same number of in and out bound streams.
com.sun.nio.sctp.SctpStandardSocketOptions.InitMaxStreams#hashCode()->int:::Returns a hash code value for this init max streams.
com.sun.nio.sctp.SendFailedNotification#association()->Association:::Returns the association that this notification is applicable to.
com.sun.nio.sctp.SendFailedNotification#address()->SocketAddress:::Returns the address.
com.sun.nio.sctp.SendFailedNotification#buffer()->ByteBuffer:::Returns the data that was to be sent.
com.sun.nio.sctp.SendFailedNotification#errorCode()->int:::Returns the error code
com.sun.nio.sctp.SendFailedNotification#streamNumber()->int:::Returns the stream number that the messge was to be sent on.
com.sun.nio.sctp.ShutdownNotification#association()->Association:::Returns the association that this notification is applicable to.
