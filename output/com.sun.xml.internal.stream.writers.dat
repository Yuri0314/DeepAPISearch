WriterUtility#setWriter(Writer):::sets the writer object:::
WriterUtility#writeXMLContent(char[], int, int):::writes xml content (characters and element content:::getEscapeCharacters->writeXMLContent
WriterUtility#writeXMLContent(String):::writes xml content (characters and element content:::if->content->length->return->content->toCharArray->content->length->writeXMLContent
XMLDOMWriterImpl#close():::This method has no effect when called.:::
XMLDOMWriterImpl#flush():::This method has no effect when called.:::
XMLDOMWriterImpl#getProperty(String):::Is not supported in this implementation.:::throw->new->UnsupportedOperationException
XMLDOMWriterImpl#setDefaultNamespace(String):::Is not supported in this version of the implementation.:::namespaceContext->declarePrefix->if
XMLDOMWriterImpl#setPrefix(String, String):::Is not supported in this version of the implementation.:::if->throw->new->XMLStreamException->namespaceContext->declarePrefix->if
XMLDOMWriterImpl#writeAttribute(String, String):::Creates a DOM Atrribute @see org.w3c.dom.Node and associates it with the current DOM element @see org.w3c.dom.Node.:::if->currentNode->getNodeType->attr->ownerDoc->createAttribute->attr->setValue->setAttributeNode->else->throw->currentNode->getNodeType->new->IllegalStateException
XMLDOMWriterImpl#writeAttribute(String, String, String):::Creates a DOM Atrribute @see org.w3c.dom.Node and associates it with the current DOM element @see org.w3c.dom.Node.:::if->currentNode->getNodeType->prefix->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->namespaceContext->getPrefix->if->throw->new->XMLStreamException->qualifiedName->if->prefix->equals->else->getQName->attr->ownerDoc->createAttributeNS->attr->setValue->setAttributeNode->else->throw->currentNode->getNodeType->new->IllegalStateException
XMLDOMWriterImpl#writeAttribute(String, String, String, String):::Creates a DOM Atrribute @see org.w3c.dom.Node and associates it with the current DOM element @see org.w3c.dom.Node.:::if->currentNode->getNodeType->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->qualifiedName->if->prefix->equals->else->getQName->attr->ownerDoc->createAttributeNS->attr->setValue->setAttributeNodeNS->else->throw->currentNode->getNodeType->new->IllegalStateException
XMLDOMWriterImpl#writeCData(String):::Creates a CDATA object @see org.w3c.dom.CDATASection.:::if->throw->new->XMLStreamException->cdata->ownerDoc->createCDATASection->getNode->appendChild
XMLDOMWriterImpl#writeCharacters(String):::Creates a character object @see org.w3c.dom.Text and appends it to the current element in the DOM tree.:::text->ownerDoc->createTextNode->currentNode->appendChild
XMLDOMWriterImpl#writeCharacters(char[], int, int):::Creates a character object @see org.w3c.dom.Text and appends it to the current element in the DOM tree.:::text->ownerDoc->new->String->createTextNode->currentNode->appendChild
XMLDOMWriterImpl#writeComment(String):::Creates a Comment object @see org.w3c.dom.Comment and appends it to the current element in the DOM tree.:::comment->ownerDoc->createComment->getNode->appendChild
XMLDOMWriterImpl#writeDTD(String):::This method is not supported in this implementation.:::throw->new->UnsupportedOperationException
XMLDOMWriterImpl#writeDefaultNamespace(String):::Creates a DOM attribute and adds it to the current element in the DOM tree.:::if->currentNode->getNodeType->qname->setAttributeNS->else->throw->currentNode->getNodeType->new->IllegalStateException
XMLDOMWriterImpl#writeEmptyElement(String):::creates a DOM Element and appends it to the current element in the tree.:::if->element->ownerDoc->createElement->if->currentNode->appendChild->else->ownerDoc->appendChild
XMLDOMWriterImpl#writeEmptyElement(String, String):::creates a DOM Element and appends it to the current element in the tree.:::if->qualifiedName->prefix->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->namespaceContext->getPrefix->if->throw->new->XMLStreamException->if->equals->else->getQName->element->ownerDoc->createElementNS->if->currentNode->appendChild->else->ownerDoc->appendChild
XMLDOMWriterImpl#writeEmptyElement(String, String, String):::creates a DOM Element and appends it to the current element in the tree.:::if->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->qualifiedName->if->equals->else->getQName->el->ownerDoc->createElementNS->if->currentNode->appendChild->else->ownerDoc->appendChild
XMLDOMWriterImpl#writeEndDocument():::Will reset current Node pointer maintained by the implementation.:::for->i
XMLDOMWriterImpl#writeEndElement():::Internal current Node pointer will point to the parent of the current Node.:::node->currentNode->getParentNode->if->currentNode->getNodeType->else->if->namespaceContext->popContext
XMLDOMWriterImpl#writeEntityRef(String):::Is not supported in this implementation.:::er->ownerDoc->createEntityReference->currentNode->appendChild
XMLDOMWriterImpl#writeNamespace(String, String):::creates a namespace attribute and will associate it with the current element in the DOM tree.:::if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->qname->if->prefix->equals->else->getQName->setAttributeNS
XMLDOMWriterImpl#writeProcessingInstruction(String):::is not supported in this release.:::if->throw->new->XMLStreamException->pi->ownerDoc->createProcessingInstruction->currentNode->appendChild
XMLDOMWriterImpl#writeProcessingInstruction(String, String):::is not supported in this release.:::if->throw->new->XMLStreamException->pi->ownerDoc->createProcessingInstruction->currentNode->appendChild
XMLDOMWriterImpl#writeStartDocument():::will set version on the Document object when the DOM Node passed to this implementation supports DOM Level3 API's.:::ownerDoc->setXmlVersion
XMLDOMWriterImpl#writeStartDocument(String):::will set version on the Document object when the DOM Node passed to this implementation supports DOM Level3 API's.:::writeStartDocument
XMLDOMWriterImpl#writeStartDocument(String, String):::will set version on the Document object when the DOM Node passed to this implementation supports DOM Level3 API's.:::writeStartDocument
XMLDOMWriterImpl#writeStartElement(String):::creates a DOM Element and appends it to the current element in the tree.:::if->element->ownerDoc->createElement->if->currentNode->appendChild->else->ownerDoc->appendChild->if->namespaceContext->pushContext->incDepth
XMLDOMWriterImpl#writeStartElement(String, String):::creates a DOM Element and appends it to the current element in the tree.:::if->qualifiedName->prefix->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->namespaceContext->getPrefix->if->throw->new->XMLStreamException->if->equals->else->getQName->element->ownerDoc->createElementNS->if->currentNode->appendChild->else->ownerDoc->appendChild->if->namespaceContext->pushContext->incDepth
XMLDOMWriterImpl#writeStartElement(String, String, String):::creates a DOM Element and appends it to the current element in the tree.:::if->qname->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->prefix->equals->else->getQName->el->ownerDoc->createElementNS->if->currentNode->appendChild->else->ownerDoc->appendChild->if->namespaceContext->pushContext->incDepth
XMLStreamWriterBase#writeStartDocument(String, String, boolean, boolean):::Writes the XML declaration.:::
XMLStreamWriterImpl#reset():::Reset this instance so that it can be re-used:::reset
XMLStreamWriterImpl#reset(boolean):::Reset this instance so that it can be re-used:::if->throw->new->java.lang.IllegalStateException->fNamespaceDecls->clear->fAttributeCache->clear->fElementStack->clear->fInternalNamespaceContext->reset->if->ob->fPropertyManager->getProperty->fPropertyManager->getProperty->setEscapeCharacters
XMLStreamWriterImpl#setOutput(StreamResult, String):::Use a StreamResult to initialize the output for this XMLStreamWriter:::if->sr->getOutputStream->sr->getOutputStream->setOutputUsingStream->else->if->sr->getWriter->sr->getWriter->setOutputUsingWriter->else->if->sr->getSystemId->sr->getSystemId->new->FileOutputStream->setOutputUsingStream
XMLStreamWriterImpl#canReuse():::Can this instance be reused:::return
XMLStreamWriterImpl#close():::Close this XMLStreamWriter by closing underlying writer.:::if->try->fWriter->flush->catch->throw->new->XMLStreamException->finally->fNamespaceDecls->clear->fAttributeCache->clear->fElementStack->clear->fInternalNamespaceContext->reset
XMLStreamWriterImpl#flush():::Flush this XMLStreamWriter by flushin underlying writer.:::try->fWriter->flush->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#getNamespaceContext():::Return NamespaceContext being used by the writer.:::return
XMLStreamWriterImpl#getPrefix(String):::Return a prefix associated with specified uri, or null if the uri is unknown.:::return->fNamespaceContext->getPrefix
XMLStreamWriterImpl#getProperty(String):::Returns value associated with the specified property name.:::if->throw->new->NullPointerException->if->fPropertyManager->containsProperty->throw->new->IllegalArgumentException->return->fPropertyManager->getProperty
XMLStreamWriterImpl#setDefaultNamespace(String):::Set the specified URI as default namespace in the current namespace context.:::if->fSymbolTable->addSymbol->if->if->isDefaultNamespace->return->qname->new->QName->qname->setValues->fNamespaceDecls->add->else->fInternalNamespaceContext->declarePrefix
XMLStreamWriterImpl#setNamespaceContext(NamespaceContext):::Sets the current NamespaceContext for prefix and uri bindings:::
XMLStreamWriterImpl#setPrefix(String, String):::Sets the prefix the uri is bound to:::if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->fSymbolTable->addSymbol->fSymbolTable->addSymbol->if->tmpURI->fInternalNamespaceContext->getURI->if->return->if->checkUserNamespaceContext->return->qname->new->QName->qname->setValues->fNamespaceDecls->add->return->fInternalNamespaceContext->declarePrefix
XMLStreamWriterImpl#writeNamespace(String, String):::Write a Namespace declaration:::namespaceURINormalized->if->else->try->qname->if->throw->new->IllegalStateException->if->prefix->equals->prefix->equals->writeDefaultNamespace->return->if->prefix->equals->namespaceURINormalized->equals->return->fSymbolTable->addSymbol->fSymbolTable->addSymbol->if->tmpURI->fInternalNamespaceContext->getURI->if->tmpURI->equals->return->new->QName->qname->setValues->fNamespaceDecls->add->return->if->fInternalNamespaceContext->containsPrefixInCurrentContext->tmp->fInternalNamespaceContext->getURI->if->tmp->equals->throw->new->XMLStreamException->fInternalNamespaceContext->declarePrefix->writenamespace->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeStartDocument():::Writes the XML declaration.:::writeStartDocument
XMLStreamWriterImpl#writeStartDocument(String):::Writes the XML declaration.:::writeStartDocument
XMLStreamWriterImpl#writeStartDocument(String, String):::Writes the XML declaration.:::writeStartDocument
XMLStreamWriterImpl#repair():::Correct's namespaces  as per requirements of isReparisingNamespace property.:::attr->attr2->currentElement->fElementStack->peek->removeDuplicateDecls->for->i->fAttributeCache->size->if->isDeclared->if->if->equals->equals->fNamespaceDecls->add->for->i->fAttributeCache->size->repairNamespaceDecl->i->for->fAttributeCache->size->qname->for->fNamespaceDecls->size->for->fAttributeCache->size
XMLStreamWriterImpl.ElementStack#push(ElementState):::Pushes an element on the stack:::if->array->new->ElementStateArr->System->arraycopy->for->i->setValues->return
XMLStreamWriterImpl.ElementStack#pop():::Pops an element off of the stack by setting the values of the specified QName:::return
XMLStreamWriterImpl.ElementStack#clear():::Clears the stack without throwing away existing QName objects.:::
XMLStreamWriterImpl.ElementStack#peek():::This function is as a result of optimization done for endElement -- we dont need to set the value for every end element we encouter:::return
XMLStreamWriterImpl#get(Object):::Returns the value associated to an implementation-specific property.:::if->key->equals->return->return
XMLStreamWriterImpl#toString():::Overrides the method defined in AbstractMap which is not completely implemented:::return->getClass->getName->Integer->hashCode->toHexString
XMLStreamWriterImpl#hashCode():::Overrides the method defined in AbstractMap This is required by the toString() method:::return->fElementStack->hashCode
XMLStreamWriterImpl#equals(Object):::Overrides the method defined in AbstractMap This is required to satisfy the contract for hashCode.:::return
XMLWriter#write(String, int, int):::Write a portion of a string.:::str->toCharArray->write
XMLWriter#write(String):::Write a string.:::if->str->length->writeBufferedData->writer->write->else->buffer->append->conditionalWrite
XMLWriter#close():::Close the stream, flushing it first:::if->return->flush->writer->close
XMLWriter#reset():::Reset this Writer:::buffer->clear
XMLWriter#setWriter(Writer):::Set the given Writer.:::buffer->clear
XMLWriter#setWriter(Writer, int):::Set the given Writer:::
XMLWriter#getWriter():::Returns underlying Writer:::return
