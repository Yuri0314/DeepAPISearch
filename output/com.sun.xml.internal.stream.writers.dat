UTF8OutputStreamWriter#getEncoding()::: f8 output stream writer get encoding:::return
UTF8OutputStreamWriter#write(int)::: f8 output stream writer write:::if->uc->if->throw->new->IOException->out->write->out->write->out->write->out->write->return->if->out->write->else->if->out->write->out->write->else->if->if->XMLChar->isHighSurrogate->XMLChar->isLowSurrogate->out->write->out->write->out->write->else
UTF8OutputStreamWriter#write(char[])::: f8 output stream writer write:::for->i
UTF8OutputStreamWriter#write(char[], int, int)::: f8 output stream writer write:::for->i
UTF8OutputStreamWriter#write(String)::: f8 output stream writer write:::len->str->length->for->i
UTF8OutputStreamWriter#write(String, int, int)::: f8 output stream writer write:::for->i
UTF8OutputStreamWriter#flush()::: f8 output stream writer flush:::out->flush
UTF8OutputStreamWriter#close()::: f8 output stream writer close:::if->throw->new->IllegalStateException->out->close
WriterUtility#setWriter(Writer):::sets the writer object:::
WriterUtility#setEscapeCharacters(boolean)::: writer utility set escape characters:::
WriterUtility#getEscapeCharacters()::: writer utility get escape characters:::return
WriterUtility#writeXMLContent(char[], int, int):::writes xml content (characters and element content:::getEscapeCharacters->writeXMLContent
WriterUtility#writeXMLContent(char[], int, int, boolean):::writes xml content (characters and element content:::if->new->String->println->index->ch->sc->end->startWritePos->for->if->new->String->println->fWriter->write
WriterUtility#writeXMLContent(String):::writes xml content (characters and element content:::if->content->length->return->content->toCharArray->content->length->writeXMLContent
WriterUtility#writeXMLAttributeValue(String)::: writer utility write attribute value:::value->toCharArray->value->length->writeXMLContent
WriterUtility#getDefaultEncoder()::: writer utility get default encoder:::try->encoding->SecuritySupport->getSystemProperty->if->return->Charset->forName->newEncoder->catch->finally->return
XMLDOMWriterImpl#close():::This method has no effect when called.:::
XMLDOMWriterImpl#flush():::This method has no effect when called.:::
XMLDOMWriterImpl#getNamespaceContext()::: writer impl get namespace context:::return
XMLDOMWriterImpl#getPrefix(String)::: writer impl get prefix:::prefix->if->namespaceContext->getPrefix->return
XMLDOMWriterImpl#getProperty(String):::Is not supported in this implementation.:::throw->new->UnsupportedOperationException
XMLDOMWriterImpl#setDefaultNamespace(String):::Is not supported in this version of the implementation.:::namespaceContext->declarePrefix->if
XMLDOMWriterImpl#setNamespaceContext(javax.xml.namespace.NamespaceContext)::: writer impl set namespace context:::throw->new->UnsupportedOperationException
XMLDOMWriterImpl#setPrefix(String, String):::Is not supported in this version of the implementation.:::if->throw->new->XMLStreamException->namespaceContext->declarePrefix->if
XMLDOMWriterImpl#writeAttribute(String, String):::Creates a DOM Atrribute @see org.w3c.dom.Node and associates it with the current DOM element @see org.w3c.dom.Node.:::if->currentNode->getNodeType->attr->ownerDoc->createAttribute->attr->setValue->setAttributeNode->else->throw->currentNode->getNodeType->new->IllegalStateException
XMLDOMWriterImpl#writeAttribute(String, String, String):::Creates a DOM Atrribute @see org.w3c.dom.Node and associates it with the current DOM element @see org.w3c.dom.Node.:::if->currentNode->getNodeType->prefix->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->namespaceContext->getPrefix->if->throw->new->XMLStreamException->qualifiedName->if->prefix->equals->else->getQName->attr->ownerDoc->createAttributeNS->attr->setValue->setAttributeNode->else->throw->currentNode->getNodeType->new->IllegalStateException
XMLDOMWriterImpl#writeAttribute(String, String, String, String):::Creates a DOM Atrribute @see org.w3c.dom.Node and associates it with the current DOM element @see org.w3c.dom.Node.:::if->currentNode->getNodeType->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->qualifiedName->if->prefix->equals->else->getQName->attr->ownerDoc->createAttributeNS->attr->setValue->setAttributeNodeNS->else->throw->currentNode->getNodeType->new->IllegalStateException
XMLDOMWriterImpl#writeCData(String):::Creates a CDATA object @see org.w3c.dom.CDATASection.:::if->throw->new->XMLStreamException->cdata->ownerDoc->createCDATASection->getNode->appendChild
XMLDOMWriterImpl#writeCharacters(String):::Creates a character object @see org.w3c.dom.Text and appends it to the current element in the DOM tree.:::text->ownerDoc->createTextNode->currentNode->appendChild
XMLDOMWriterImpl#writeCharacters(char[], int, int):::Creates a character object @see org.w3c.dom.Text and appends it to the current element in the DOM tree.:::text->ownerDoc->new->String->createTextNode->currentNode->appendChild
XMLDOMWriterImpl#writeComment(String):::Creates a Comment object @see org.w3c.dom.Comment and appends it to the current element in the DOM tree.:::comment->ownerDoc->createComment->getNode->appendChild
XMLDOMWriterImpl#writeDTD(String):::This method is not supported in this implementation.:::throw->new->UnsupportedOperationException
XMLDOMWriterImpl#writeDefaultNamespace(String):::Creates a DOM attribute and adds it to the current element in the DOM tree.:::if->currentNode->getNodeType->qname->setAttributeNS->else->throw->currentNode->getNodeType->new->IllegalStateException
XMLDOMWriterImpl#writeEmptyElement(String):::creates a DOM Element and appends it to the current element in the tree.:::if->element->ownerDoc->createElement->if->currentNode->appendChild->else->ownerDoc->appendChild
XMLDOMWriterImpl#writeEmptyElement(String, String):::creates a DOM Element and appends it to the current element in the tree.:::if->qualifiedName->prefix->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->namespaceContext->getPrefix->if->throw->new->XMLStreamException->if->equals->else->getQName->element->ownerDoc->createElementNS->if->currentNode->appendChild->else->ownerDoc->appendChild
XMLDOMWriterImpl#writeEmptyElement(String, String, String):::creates a DOM Element and appends it to the current element in the tree.:::if->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->qualifiedName->if->equals->else->getQName->el->ownerDoc->createElementNS->if->currentNode->appendChild->else->ownerDoc->appendChild
XMLDOMWriterImpl#writeEndDocument():::Will reset current Node pointer maintained by the implementation.:::for->i
XMLDOMWriterImpl#writeEndElement():::Internal current Node pointer will point to the parent of the current Node.:::node->currentNode->getParentNode->if->currentNode->getNodeType->else->if->namespaceContext->popContext
XMLDOMWriterImpl#writeEntityRef(String):::Is not supported in this implementation.:::er->ownerDoc->createEntityReference->currentNode->appendChild
XMLDOMWriterImpl#writeNamespace(String, String):::creates a namespace attribute and will associate it with the current element in the DOM tree.:::if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->qname->if->prefix->equals->else->getQName->setAttributeNS
XMLDOMWriterImpl#writeProcessingInstruction(String):::is not supported in this release.:::if->throw->new->XMLStreamException->pi->ownerDoc->createProcessingInstruction->currentNode->appendChild
XMLDOMWriterImpl#writeProcessingInstruction(String, String):::is not supported in this release.:::if->throw->new->XMLStreamException->pi->ownerDoc->createProcessingInstruction->currentNode->appendChild
XMLDOMWriterImpl#writeStartDocument():::will set version on the Document object when the DOM Node passed to this implementation supports DOM Level3 API's.:::ownerDoc->setXmlVersion
XMLDOMWriterImpl#writeStartDocument(String):::will set version on the Document object when the DOM Node passed to this implementation supports DOM Level3 API's.:::writeStartDocument
XMLDOMWriterImpl#writeStartDocument(String, String):::will set version on the Document object when the DOM Node passed to this implementation supports DOM Level3 API's.:::writeStartDocument
XMLDOMWriterImpl#writeStartDocument(String, String, boolean, boolean)::: writer impl write start document:::if->ownerDoc->getClass->isAssignableFrom->setXmlEncoding->ownerDoc->setXmlVersion->if->ownerDoc->setXmlStandalone
XMLDOMWriterImpl#writeStartElement(String):::creates a DOM Element and appends it to the current element in the tree.:::if->element->ownerDoc->createElement->if->currentNode->appendChild->else->ownerDoc->appendChild->if->namespaceContext->pushContext->incDepth
XMLDOMWriterImpl#writeStartElement(String, String):::creates a DOM Element and appends it to the current element in the tree.:::if->qualifiedName->prefix->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->namespaceContext->getPrefix->if->throw->new->XMLStreamException->if->equals->else->getQName->element->ownerDoc->createElementNS->if->currentNode->appendChild->else->ownerDoc->appendChild->if->namespaceContext->pushContext->incDepth
XMLDOMWriterImpl#writeStartElement(String, String, String):::creates a DOM Element and appends it to the current element in the tree.:::if->qname->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->prefix->equals->else->getQName->el->ownerDoc->createElementNS->if->currentNode->appendChild->else->ownerDoc->appendChild->if->namespaceContext->pushContext->incDepth
XMLDOMWriterImpl#getQName(String, String)::: writer impl get name:::stringBuffer->setLength->stringBuffer->append->stringBuffer->append->stringBuffer->append->return->stringBuffer->toString
XMLDOMWriterImpl#getNode()::: writer impl get node:::if->return->else->return
XMLDOMWriterImpl#incDepth()::: writer impl inc depth:::if->array->new->booleanArr->System->arraycopy
XMLEventWriterImpl#add(XMLEventReader)::: event writer impl add:::if->throw->new->XMLStreamException->while->xMLEventReader->hasNext->xMLEventReader->nextEvent->add
XMLEventWriterImpl#add(XMLEvent)::: event writer impl add:::type->xMLEvent->getEventType->switch->dtd->if->dtd->toString->println->fStreamWriter->dtd->getDocumentTypeDeclaration->writeDTD->break->startDocument->if->startDocument->toString->println->try->fStreamWriter->startDocument->getCharacterEncodingScheme->startDocument->getVersion->startDocument->isStandalone->startDocument->standaloneSet->writeStartDocument->catch->fStreamWriter->startDocument->getVersion->writeStartDocument->finally->break->startElement->xMLEvent->asStartElement->if->startElement->toString->println->qname->startElement->getName->fStreamWriter->qname->getPrefix->qname->getLocalPart->qname->getNamespaceURI->writeStartElement->iterator->startElement->getNamespaces->while->iterator->hasNext->namespace->iterator->next->fStreamWriter->namespace->getPrefix->namespace->getNamespaceURI->writeNamespace->attributes->startElement->getAttributes->while->attributes->hasNext->attribute->attributes->next->aqname->attribute->getName->fStreamWriter->aqname->getPrefix->aqname->getNamespaceURI->aqname->getLocalPart->attribute->getValue->writeAttribute->break->namespace->if->namespace->toString->println->fStreamWriter->namespace->getPrefix->namespace->getNamespaceURI->writeNamespace->break->comment->if->comment->toString->println->fStreamWriter->comment->getText->writeComment->break->processingInstruction->if->processingInstruction->toString->println->fStreamWriter->processingInstruction->getTarget->processingInstruction->getData->writeProcessingInstruction->break->characters->xMLEvent->asCharacters->if->characters->toString->println->if->characters->isCData->fStreamWriter->characters->getData->writeCData->else->fStreamWriter->characters->getData->writeCharacters->break->entityReference->if->entityReference->toString->println->fStreamWriter->entityReference->getName->writeEntityRef->break->attribute->if->attribute->toString->println->qname->attribute->getName->fStreamWriter->qname->getPrefix->qname->getNamespaceURI->qname->getLocalPart->attribute->getValue->writeAttribute->break->characters->if->characters->toString->println->if->characters->isCData->fStreamWriter->characters->getData->writeCData->break->fStreamWriter->writeEndElement->break->fStreamWriter->writeEndDocument->break
XMLEventWriterImpl#close()::: event writer impl close:::fStreamWriter->close
XMLEventWriterImpl#flush()::: event writer impl flush:::fStreamWriter->flush
XMLEventWriterImpl#getNamespaceContext()::: event writer impl get namespace context:::return->fStreamWriter->getNamespaceContext
XMLEventWriterImpl#getPrefix(String)::: event writer impl get prefix:::return->fStreamWriter->getPrefix
XMLEventWriterImpl#setDefaultNamespace(String)::: event writer impl set default namespace:::fStreamWriter->setDefaultNamespace
XMLEventWriterImpl#setNamespaceContext(NamespaceContext)::: event writer impl set namespace context:::fStreamWriter->setNamespaceContext
XMLEventWriterImpl#setPrefix(String, String)::: event writer impl set prefix:::fStreamWriter->setPrefix
XMLStreamWriterBase#writeStartDocument(String, String, boolean, boolean):::Writes the XML declaration.:::
XMLStreamWriterImpl#init():::Initialize an instance of this XMLStreamWriter:::new->ArrayList<>->new->Random->new->ArrayList<>->new->NamespaceSupport->fInternalNamespaceContext->reset->new->NamespaceContextImpl->ob->fPropertyManager->getProperty->fPropertyManager->getProperty->setEscapeCharacters
XMLStreamWriterImpl#reset():::Reset this instance so that it can be re-used:::reset
XMLStreamWriterImpl#reset(boolean):::Reset this instance so that it can be re-used:::if->throw->new->java.lang.IllegalStateException->fNamespaceDecls->clear->fAttributeCache->clear->fElementStack->clear->fInternalNamespaceContext->reset->if->ob->fPropertyManager->getProperty->fPropertyManager->getProperty->setEscapeCharacters
XMLStreamWriterImpl#setOutput(StreamResult, String):::Use a StreamResult to initialize the output for this XMLStreamWriter:::if->sr->getOutputStream->sr->getOutputStream->setOutputUsingStream->else->if->sr->getWriter->sr->getWriter->setOutputUsingWriter->else->if->sr->getSystemId->sr->getSystemId->new->FileOutputStream->setOutputUsingStream
XMLStreamWriterImpl#setOutputUsingWriter(Writer)::: stream writer impl set output using writer:::if->charset->getEncoding->if->charset->equalsIgnoreCase->Charset->forName->newEncoder
XMLStreamWriterImpl#setOutputUsingStream(OutputStream, String):::Utility method to create a writer when passed an OutputStream:::if->if->encoding->equalsIgnoreCase->new->UTF8OutputStreamWriter->else->new->OutputStreamWriter->new->XMLWriter->Charset->forName->newEncoder->else->SecuritySupport->getSystemProperty->if->encoding->equalsIgnoreCase->new->UTF8OutputStreamWriter->else->new->OutputStreamWriter->new->XMLWriter
XMLStreamWriterImpl#canReuse():::Can this instance be reused:::return
XMLStreamWriterImpl#setEscapeCharacters(boolean)::: stream writer impl set escape characters:::
XMLStreamWriterImpl#getEscapeCharacters()::: stream writer impl get escape characters:::return
XMLStreamWriterImpl#close():::Close this XMLStreamWriter by closing underlying writer.:::if->try->fWriter->flush->catch->throw->new->XMLStreamException->finally->fNamespaceDecls->clear->fAttributeCache->clear->fElementStack->clear->fInternalNamespaceContext->reset
XMLStreamWriterImpl#flush():::Flush this XMLStreamWriter by flushin underlying writer.:::try->fWriter->flush->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#getNamespaceContext():::Return NamespaceContext being used by the writer.:::return
XMLStreamWriterImpl#getPrefix(String):::Return a prefix associated with specified uri, or null if the uri is unknown.:::return->fNamespaceContext->getPrefix
XMLStreamWriterImpl#getProperty(String):::Returns value associated with the specified property name.:::if->throw->new->NullPointerException->if->fPropertyManager->containsProperty->throw->new->IllegalArgumentException->return->fPropertyManager->getProperty
XMLStreamWriterImpl#setDefaultNamespace(String):::Set the specified URI as default namespace in the current namespace context.:::if->fSymbolTable->addSymbol->if->if->isDefaultNamespace->return->qname->new->QName->qname->setValues->fNamespaceDecls->add->else->fInternalNamespaceContext->declarePrefix
XMLStreamWriterImpl#setNamespaceContext(NamespaceContext):::Sets the current NamespaceContext for prefix and uri bindings:::
XMLStreamWriterImpl#setPrefix(String, String):::Sets the prefix the uri is bound to:::if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->fSymbolTable->addSymbol->fSymbolTable->addSymbol->if->tmpURI->fInternalNamespaceContext->getURI->if->return->if->checkUserNamespaceContext->return->qname->new->QName->qname->setValues->fNamespaceDecls->add->return->fInternalNamespaceContext->declarePrefix
XMLStreamWriterImpl#writeAttribute(String, String)::: stream writer impl write attribute:::try->if->throw->new->XMLStreamException->if->attr->new->Attribute->attr->setValues->fAttributeCache->add->return->fWriter->write->fWriter->write->fWriter->write->writeXMLContent->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeAttribute(String, String, String)::: stream writer impl write attribute:::try->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->fSymbolTable->addSymbol->prefix->fInternalNamespaceContext->getPrefix->if->if->throw->new->XMLStreamException->writeAttributeWithPrefix->else->attr->new->Attribute->attr->setValues->fAttributeCache->add->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeAttributeWithPrefix(String, String, String)::: stream writer impl write attribute with prefix:::fWriter->write->if->prefix->equals->fWriter->write->fWriter->write->fWriter->write->fWriter->write->writeXMLContent->fWriter->write
XMLStreamWriterImpl#writeAttribute(String, String, String, String)::: stream writer impl write attribute:::try->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->if->prefix->equals->if->namespaceURI->equals->throw->new->XMLStreamException->else->writeAttributeWithPrefix->return->if->prefix->equals->namespaceURI->equals->fSymbolTable->addSymbol->fSymbolTable->addSymbol->if->fInternalNamespaceContext->containsPrefixInCurrentContext->tmpURI->fInternalNamespaceContext->getURI->if->throw->new->XMLStreamException->fInternalNamespaceContext->declarePrefix->writeAttributeWithPrefix->else->if->fSymbolTable->addSymbol->fSymbolTable->addSymbol->attr->new->Attribute->attr->setValues->fAttributeCache->add->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeCData(String)::: stream writer impl write data:::try->if->throw->new->XMLStreamException->if->closeStartTag->fWriter->write->fWriter->write->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeCharacters(String)::: stream writer impl write characters:::try->if->closeStartTag->writeXMLContent->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeCharacters(char[], int, int)::: stream writer impl write characters:::try->if->closeStartTag->writeXMLContent->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeComment(String)::: stream writer impl write comment:::try->if->closeStartTag->fWriter->write->if->fWriter->write->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeDTD(String)::: stream writer impl write d:::try->if->closeStartTag->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeDefaultNamespace(String)::: stream writer impl write default namespace:::namespaceURINormalized->if->else->try->if->throw->new->IllegalStateException->if->qname->new->QName->qname->setValues->fNamespaceDecls->add->return->fSymbolTable->addSymbol->if->fInternalNamespaceContext->containsPrefixInCurrentContext->tmp->fInternalNamespaceContext->getURI->if->tmp->equals->throw->new->XMLStreamException->fInternalNamespaceContext->declarePrefix->writenamespace->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeEmptyElement(String)::: stream writer impl write empty element:::try->if->closeStartTag->openStartTag->fElementStack->push->fInternalNamespaceContext->pushContext->if->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeEmptyElement(String, String)::: stream writer impl write empty element:::if->throw->new->XMLStreamException->fSymbolTable->addSymbol->prefix->fNamespaceContext->getPrefix->writeEmptyElement
XMLStreamWriterImpl#writeEmptyElement(String, String, String)::: stream writer impl write empty element:::try->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->fSymbolTable->addSymbol->fSymbolTable->addSymbol->if->closeStartTag->openStartTag->fElementStack->push->fInternalNamespaceContext->pushContext->if->if->throw->new->XMLStreamException->else->return->if->prefix->equals->fWriter->write->fWriter->write->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeEndDocument()::: stream writer impl write end document:::try->if->closeStartTag->while->fElementStack->empty->elem->fElementStack->pop->fInternalNamespaceContext->popContext->if->else->fWriter->write->if->equals->fWriter->write->fWriter->write->fWriter->write->fWriter->write->catch->throw->new->XMLStreamException->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeEndElement()::: stream writer impl write end element:::try->if->closeStartTag->currentElement->fElementStack->pop->if->throw->new->XMLStreamException->if->return->fWriter->write->if->equals->fWriter->write->fWriter->write->fWriter->write->fWriter->write->fInternalNamespaceContext->popContext->catch->throw->new->XMLStreamException->throw->e->toString->new->XMLStreamException->finally
XMLStreamWriterImpl#writeEntityRef(String)::: stream writer impl write entity ref:::try->if->closeStartTag->fWriter->write->fWriter->write->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeNamespace(String, String):::Write a Namespace declaration:::namespaceURINormalized->if->else->try->qname->if->throw->new->IllegalStateException->if->prefix->equals->prefix->equals->writeDefaultNamespace->return->if->prefix->equals->namespaceURINormalized->equals->return->fSymbolTable->addSymbol->fSymbolTable->addSymbol->if->tmpURI->fInternalNamespaceContext->getURI->if->tmpURI->equals->return->new->QName->qname->setValues->fNamespaceDecls->add->return->if->fInternalNamespaceContext->containsPrefixInCurrentContext->tmp->fInternalNamespaceContext->getURI->if->tmp->equals->throw->new->XMLStreamException->fInternalNamespaceContext->declarePrefix->writenamespace->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writenamespace(String, String)::: stream writer impl writenamespace:::fWriter->write->if->prefix->equals->fWriter->write->fWriter->write->fWriter->write->writeXMLContent->fWriter->write
XMLStreamWriterImpl#writeProcessingInstruction(String)::: stream writer impl write processing instruction:::try->if->closeStartTag->if->fWriter->write->fWriter->write->fWriter->write->return->catch->throw->new->XMLStreamException->finally->throw->new->XMLStreamException
XMLStreamWriterImpl#writeProcessingInstruction(String, String)::: stream writer impl write processing instruction:::try->if->closeStartTag->if->throw->new->XMLStreamException->fWriter->write->fWriter->write->fWriter->write->fWriter->write->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeStartDocument():::Writes the XML declaration.:::writeStartDocument
XMLStreamWriterImpl#writeStartDocument(String):::Writes the XML declaration.:::writeStartDocument
XMLStreamWriterImpl#writeStartDocument(String, String):::Writes the XML declaration.:::writeStartDocument
XMLStreamWriterImpl#writeStartDocument(String, String, boolean, boolean)::: stream writer impl write start document:::try->if->encoding->length->version->length->fWriter->write->return->if->encoding->equals->verifyEncoding->fWriter->write->if->version->equals->fWriter->write->else->fWriter->write->if->encoding->equals->fWriter->write->fWriter->write->if->fWriter->write->if->fWriter->write->else->fWriter->write->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#verifyEncoding(String):::Verifies that the encoding is consistent between the underlying encoding and that specified.:::streamEncoding->if->getEncoding->else->if->getEncoding->else->if->getWriter->getEncoding->if->streamEncoding->equalsIgnoreCase->foundAlias->aliases->Charset->forName->aliases->for->it->aliases->iterator->it->hasNext->if->throw->new->XMLStreamException
XMLStreamWriterImpl#writeStartElement(String)::: stream writer impl write start element:::try->if->throw->new->XMLStreamException->if->closeStartTag->openStartTag->fElementStack->push->fInternalNamespaceContext->pushContext->if->return->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeStartElement(String, String)::: stream writer impl write start element:::if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->fSymbolTable->addSymbol->prefix->if->fNamespaceContext->getPrefix->if->fSymbolTable->addSymbol->writeStartElement
XMLStreamWriterImpl#writeStartElement(String, String, String)::: stream writer impl write start element:::try->if->throw->new->XMLStreamException->if->throw->new->XMLStreamException->if->if->throw->new->XMLStreamException->if->closeStartTag->openStartTag->fSymbolTable->addSymbol->if->fSymbolTable->addSymbol->fElementStack->push->fInternalNamespaceContext->pushContext->tmpPrefix->fNamespaceContext->getPrefix->if->prefix->equals->fInternalNamespaceContext->declarePrefix->if->if->prefix->equals->return->qname->new->QName->qname->setValues->fNamespaceDecls->add->return->if->fWriter->write->fWriter->write->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#writeCharRef(int):::Writes character reference in hex format.:::fWriter->write->fWriter->Integer->toHexString->write->fWriter->write
XMLStreamWriterImpl#writeXMLContent(char[], int, int, boolean):::Writes XML content to underlying writer:::if->fWriter->write->return->startWritePos->end->for->index->fWriter->write
XMLStreamWriterImpl#writeXMLContent(String)::: stream writer impl write content:::if->content->length->writeXMLContent
XMLStreamWriterImpl#writeXMLContent(String, boolean, boolean):::Writes XML content to underlying writer:::if->fWriter->write->return->startWritePos->end->content->length->for->index->fWriter->write
XMLStreamWriterImpl#closeStartTag():::marks close of start tag and writes the same into the writer.:::try->currentElement->fElementStack->peek->if->repair->correctPrefix->if->fWriter->write->fWriter->write->fWriter->write->len->fNamespaceDecls->size->qname->for->i->fNamespaceDecls->clear->attr->for->j->fAttributeCache->size->fAttributeCache->clear->if->fElementStack->pop->fInternalNamespaceContext->popContext->fWriter->write->else->fWriter->write->catch->throw->new->XMLStreamException->finally
XMLStreamWriterImpl#openStartTag():::marks open of start tag and writes the same into the writer.:::fWriter->write
XMLStreamWriterImpl#correctPrefix(QName, int)::: stream writer impl correct prefix:::tmpPrefix->prefix->uri->isSpecialCaseURI->if->prefix->equals->if->return->if->equals->uri->equals->return->fSymbolTable->addSymbol->decl->for->i->fNamespaceDecls->size->fNamespaceContext->getPrefix->if->equals->if->return->else->if->getAttrPrefix->if->genPrefix->new->StringBuilder->for->i->genPrefix->toString->fSymbolTable->addSymbol->else->fSymbolTable->addSymbol->if->if->addAttrNamespace->else->qname->new->QName->qname->setValues->fNamespaceDecls->add->fInternalNamespaceContext->fSymbolTable->addSymbol->declarePrefix
XMLStreamWriterImpl#getAttrPrefix(String):::return the prefix if the attribute has an uri the same as that of the default namespace:::if->return->fAttrNamespace->get->return
XMLStreamWriterImpl#addAttrNamespace(String, String)::: stream writer impl add attr namespace:::if->new->HashMap<>->fAttrNamespace->put
XMLStreamWriterImpl#isDefaultNamespace(String)::: stream writer impl is default namespace:::defaultNamespace->fInternalNamespaceContext->getURI->if->uri->equals->return->return
XMLStreamWriterImpl#checkUserNamespaceContext(String, String)::: stream writer impl check user namespace context:::if->tmpURI->getNamespaceURI->if->tmpURI->equals->return->return
XMLStreamWriterImpl#repair():::Correct's namespaces  as per requirements of isReparisingNamespace property.:::attr->attr2->currentElement->fElementStack->peek->removeDuplicateDecls->for->i->fAttributeCache->size->if->isDeclared->if->if->equals->equals->fNamespaceDecls->add->for->i->fAttributeCache->size->repairNamespaceDecl->i->for->fAttributeCache->size->qname->for->fNamespaceDecls->size->for->fAttributeCache->size
XMLStreamWriterImpl#correctPrefix(QName, QName)::: stream writer impl correct prefix:::tmpPrefix->decl->checkForNull->checkForNull->if->equals->equals->fNamespaceContext->getPrefix->if->fSymbolTable->addSymbol->else->for->n->fNamespaceDecls->size->genPrefix->new->StringBuilder->for->k->genPrefix->toString->fSymbolTable->addSymbol->qname->new->QName->qname->setValues->fNamespaceDecls->add
XMLStreamWriterImpl#checkForNull(QName)::: stream writer impl check for null:::if->if
XMLStreamWriterImpl#removeDuplicateDecls()::: stream writer impl remove duplicate decls:::decl1->decl2->for->i->fNamespaceDecls->size
XMLStreamWriterImpl#repairNamespaceDecl(QName)::: stream writer impl repair namespace decl:::decl->tmpURI->for->j->fNamespaceDecls->size
XMLStreamWriterImpl#isDeclared(QName)::: stream writer impl is declared:::decl->for->n->fNamespaceDecls->size->if->if->fNamespaceContext->getPrefix->return->return
XMLStreamWriterImpl.ElementStack#push(ElementState):::Pushes an element on the stack:::if->array->new->ElementStateArr->System->arraycopy->for->i->setValues->return
XMLStreamWriterImpl.ElementStack#push(String, String, String, String, boolean)::: element stack push:::if->array->new->ElementStateArr->System->arraycopy->for->i->setValues->return
XMLStreamWriterImpl.ElementStack#pop():::Pops an element off of the stack by setting the values of the specified QName:::return
XMLStreamWriterImpl.ElementStack#clear():::Clears the stack without throwing away existing QName objects.:::
XMLStreamWriterImpl.ElementStack#peek():::This function is as a result of optimization done for endElement -- we dont need to set the value for every end element we encouter:::return
XMLStreamWriterImpl.ElementStack#empty()::: element stack empty:::return
XMLStreamWriterImpl.ElementState#setValues(String, String, String, String, boolean)::: element state set values:::super->setValues
XMLStreamWriterImpl.NamespaceContextImpl#getNamespaceURI(String)::: namespace context impl get namespace i:::uri->if->fSymbolTable->addSymbol->if->internalContext->getURI->if->return->if->userContext->getNamespaceURI->return->return
XMLStreamWriterImpl.NamespaceContextImpl#getPrefix(String)::: namespace context impl get prefix:::prefix->if->fSymbolTable->addSymbol->if->internalContext->getPrefix->if->return->if->return->userContext->getPrefix->return
XMLStreamWriterImpl.NamespaceContextImpl#getPrefixes(String)::: namespace context impl get prefixes:::prefixes->itr->if->fSymbolTable->addSymbol->if->userContext->getPrefixes->if->internalContext->getPrefixes->if->return->else->if->return->prefixes->iterator->new->ReadOnlyIterator<>->else->if->ob->while->itr->hasNext->itr->next->if->fSymbolTable->addSymbol->if->prefixes->contains->prefixes->add->return->prefixes->iterator->new->ReadOnlyIterator<>->return
XMLStreamWriterImpl#size()::: stream writer impl size:::return
XMLStreamWriterImpl#isEmpty()::: stream writer impl is empty:::return
XMLStreamWriterImpl#containsKey(Object)::: stream writer impl contains key:::return->key->equals
XMLStreamWriterImpl#get(Object):::Returns the value associated to an implementation-specific property.:::if->key->equals->return->return
XMLStreamWriterImpl#entrySet()::: stream writer impl entry set:::throw->new->UnsupportedOperationException
XMLStreamWriterImpl#toString():::Overrides the method defined in AbstractMap which is not completely implemented:::return->getClass->getName->Integer->hashCode->toHexString
XMLStreamWriterImpl#hashCode():::Overrides the method defined in AbstractMap This is required by the toString() method:::return->fElementStack->hashCode
XMLStreamWriterImpl#equals(Object):::Overrides the method defined in AbstractMap This is required to satisfy the contract for hashCode.:::return
XMLWriter#write(int)::: writer write:::ensureOpen->buffer->append->conditionalWrite
XMLWriter#write(char[])::: writer write:::write
XMLWriter#write(char[], int, int)::: writer write:::ensureOpen->if->writeBufferedData->writer->write->else->buffer->append->conditionalWrite
XMLWriter#write(String, int, int):::Write a portion of a string.:::str->toCharArray->write
XMLWriter#write(String):::Write a string.:::if->str->length->writeBufferedData->writer->write->else->buffer->append->conditionalWrite
XMLWriter#close():::Close the stream, flushing it first:::if->return->flush->writer->close
XMLWriter#flush()::: writer flush:::ensureOpen->writeBufferedData->writer->flush
XMLWriter#reset():::Reset this Writer:::buffer->clear
XMLWriter#setWriter(Writer):::Set the given Writer.:::buffer->clear
XMLWriter#setWriter(Writer, int):::Set the given Writer:::
XMLWriter#getWriter():::Returns underlying Writer:::return
XMLWriter#conditionalWrite():::write the buffer data, if the buffer size has increased the size specified:::if->if->println->new->String->println->writeBufferedData
XMLWriter#writeBufferedData():::Write the data present in the buffer to the writer:::writer->write->buffer->clear
XMLWriter#ensureOpen():::Check to make sure that the stream has not been closed:::if->throw->new->IOException
