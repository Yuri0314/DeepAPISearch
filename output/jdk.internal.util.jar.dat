JarIndex#getJarIndex(JarFile):::Returns the jar index, or null if none.:::index->e->jar->getJarEntry->if->jar->getInputStream->new->JarIndex->return
JarIndex#getJarFiles():::Returns the jar files that are defined in this index.:::return
JarIndex#addToList(String, String, HashMap>)::: jar index add to list:::list->t->get->if->new->LinkedList<>->list->add->t->put->else->if->list->contains->list->add
JarIndex#get(String):::Returns the list of jar files that are mapped to the file.:::jarFiles->if->indexMap->get->pos->if->fileName->lastIndexOf->indexMap->fileName->substring->get->return
JarIndex#add(String, String):::Add the mapping from the specified file to the specified jar file:::packageName->pos->if->fileName->lastIndexOf->fileName->substring->else->addMapping
JarIndex#addMapping(String, String):::Same as add(String,String) except that it doesn't strip off from the last index of '/':::addToList->addToList
JarIndex#parseJars(String[]):::Go through all the jar files and construct the index table.:::if->return->currentJar->for->i
JarIndex#write(OutputStream):::Writes the index to the specified OutputStream:::bw->new->OutputStreamWriter->new->BufferedWriter->bw->write->if->for->i->bw->flush
JarIndex#read(InputStream):::Reads the index from the specified InputStream.:::br->new->InputStreamReader->new->BufferedReader->line->currentJar->jars->new->Vector<>->while->br->readLine->line->endsWith->for->br->readLine->jars->jars->size->new->StringArr->toArray
JarIndex#merge(JarIndex, String):::Merges the current index into another index, taking into account the relative path of the current index.:::itr->indexMap->entrySet->iterator->while->itr->hasNext->e->itr->next->packageName->e->getKey->from_list->e->getValue->listItr->from_list->iterator->while->listItr->hasNext->jarName->listItr->next->if->path->concat->toIndex->addMapping
