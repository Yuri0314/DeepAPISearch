ModuleSource#getModulePath()::: module source get module path:::return
ModuleSource#eachClass(BiConsumer)::: module source each class:::finder->ClassSource->pathIsClassFile->new->FileSystemFinder->foreach->consumer->ClassSource->modulePath->relativize->normalize->makeClassName->accept
ModuleSource#toString()::: module source to string:::return->modulePath->toString
ModuleSourceProvider#findSource(String, SearchPath)::: module source provider find source:::path->fileSystem->getPath->dir->fileSystem->getPath->if->fileSupport->isDirectory->return->found->findModuleDirectory->if->return->return->new->ModuleSource
ModuleSourceProvider#findModuleDirectory(Path, Path)::: module source provider find module directory:::try->return->fileSupport->getSubDirectory->catch->throw->new->InternalError->finally
ModuleSourceProvider#supports(String)::: module source provider supports:::return->TYPE->equals
