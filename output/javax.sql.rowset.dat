javax.sql.rowset.BaseRowSet#initParams()->void:::Performs the necessary internal configurations and initializations to allow any JDBC RowSet implementation to start using the standard facilities provided by a BaseRowSet instance
javax.sql.rowset.BaseRowSet#addRowSetListener(RowSetListener)->void:::The listener will be notified whenever an event occurs on this RowSet object
javax.sql.rowset.BaseRowSet#removeRowSetListener(RowSetListener)->void:::Removes the designated object from this RowSet object's list of listeners
javax.sql.rowset.BaseRowSet#notifyCursorMoved()->void:::Notifies all of the listeners registered with this RowSet object that its cursor has moved
javax.sql.rowset.BaseRowSet#notifyRowChanged()->void:::Notifies all of the listeners registered with this RowSet object that one of its rows has changed
javax.sql.rowset.BaseRowSet#notifyRowSetChanged()->void:::Notifies all of the listeners registered with this RowSet object that its entire contents have changed
javax.sql.rowset.BaseRowSet#getCommand()->String:::Retrieves the SQL query that is the command for this RowSet object
javax.sql.rowset.BaseRowSet#setCommand(String)->void:::Sets this RowSet object's command property to the given String object and clears the parameters, if any, that were set for the previous command
javax.sql.rowset.BaseRowSet#getUrl()->String:::Retrieves the JDBC URL that this RowSet object's javax.sql.Reader object uses to make a connection with a relational database using a JDBC technology-enabled driver
javax.sql.rowset.BaseRowSet#setUrl(String)->void:::Sets the Url property for this RowSet object to the given String object and sets the dataSource name property to null
javax.sql.rowset.BaseRowSet#getDataSourceName()->String:::Returns the logical name that when supplied to a naming service that uses the Java Naming and Directory Interface (JNDI) API, will retrieve a javax.sql.DataSource object
javax.sql.rowset.BaseRowSet#setDataSourceName(String)->void:::Sets the DataSource name property for this RowSet object to the given logical name and sets this RowSet object's Url property to null
javax.sql.rowset.BaseRowSet#getUsername()->String:::Returns the user name used to create a database connection
javax.sql.rowset.BaseRowSet#setUsername(String)->void:::Sets the username property for this RowSet object to the given user name
javax.sql.rowset.BaseRowSet#getPassword()->String:::Returns the password used to create a database connection for this RowSet object
javax.sql.rowset.BaseRowSet#setPassword(String)->void:::Sets the password used to create a database connection for this RowSet object to the given String object
javax.sql.rowset.BaseRowSet#setType(int)->void:::Sets the type for this RowSet object to the specified type
javax.sql.rowset.BaseRowSet#getType()->int:::Returns the type of this RowSet object
javax.sql.rowset.BaseRowSet#setConcurrency(int)->void:::Sets the concurrency for this RowSet object to the specified concurrency
javax.sql.rowset.BaseRowSet#isReadOnly()->boolean:::Returns a boolean indicating whether this RowSet object is read-only
javax.sql.rowset.BaseRowSet#setReadOnly(boolean)->void:::Sets this RowSet object's readOnly  property to the given boolean.
javax.sql.rowset.BaseRowSet#getTransactionIsolation()->int:::Returns the transaction isolation property for this RowSet object's connection
javax.sql.rowset.BaseRowSet#setTransactionIsolation(int)->void:::Sets the transaction isolation property for this JDBC RowSet object to the given constant
javax.sql.rowset.BaseRowSet#getTypeMap()->java.util.Map>:::Retrieves the type map associated with the Connection object for this RowSet object
javax.sql.rowset.BaseRowSet#setTypeMap(java.util.Map>)->void:::Installs the given java.util.Map object as the type map associated with the Connection object for this RowSet object
javax.sql.rowset.BaseRowSet#getMaxFieldSize()->int:::Retrieves the maximum number of bytes that can be used for a column value in this RowSet object
javax.sql.rowset.BaseRowSet#setMaxFieldSize(int)->void:::Sets the maximum number of bytes that can be used for a column value in this RowSet object to the given number
javax.sql.rowset.BaseRowSet#getMaxRows()->int:::Retrieves the maximum number of rows that this RowSet object may contain
javax.sql.rowset.BaseRowSet#setMaxRows(int)->void:::Sets the maximum number of rows that this RowSet object may contain to the given number
javax.sql.rowset.BaseRowSet#setEscapeProcessing(boolean)->void:::Sets to the given boolean whether or not the driver will scan for escape syntax and do escape substitution before sending SQL statements to the database
javax.sql.rowset.BaseRowSet#getQueryTimeout()->int:::Retrieves the maximum number of seconds the driver will wait for a query to execute
javax.sql.rowset.BaseRowSet#setQueryTimeout(int)->void:::Sets to the given number the maximum number of seconds the driver will wait for a query to execute
javax.sql.rowset.BaseRowSet#getShowDeleted()->boolean:::Retrieves a boolean indicating whether rows marked for deletion appear in the set of current rows
javax.sql.rowset.BaseRowSet#setShowDeleted(boolean)->void:::Sets the property showDeleted to the given boolean value, which determines whether rows marked for deletion appear in the set of current rows.
javax.sql.rowset.BaseRowSet#getEscapeProcessing()->boolean:::Ascertains whether escape processing is enabled for this RowSet object.
javax.sql.rowset.BaseRowSet#setFetchDirection(int)->void:::Gives the driver a performance hint as to the direction in which the rows in this RowSet object will be processed
javax.sql.rowset.BaseRowSet#getFetchDirection()->int:::Retrieves this RowSet object's current setting for the fetch direction
javax.sql.rowset.BaseRowSet#setFetchSize(int)->void:::Sets the fetch size for this RowSet object to the given number of rows
javax.sql.rowset.BaseRowSet#getFetchSize()->int:::Returns the fetch size for this RowSet object
javax.sql.rowset.BaseRowSet#getConcurrency()->int:::Returns the concurrency for this RowSet object
javax.sql.rowset.BaseRowSet#setNull(int, int)->void:::Sets the designated parameter to SQL NULL
javax.sql.rowset.BaseRowSet#setNull(int, int, String)->void:::Sets the designated parameter to SQL NULL
javax.sql.rowset.BaseRowSet#setBoolean(int, boolean)->void:::Sets the designated parameter to the given boolean in the Java programming language
javax.sql.rowset.BaseRowSet#setByte(int, byte)->void:::Sets the designated parameter to the given byte in the Java programming language
javax.sql.rowset.BaseRowSet#setShort(int, short)->void:::Sets the designated parameter to the given short in the Java programming language
javax.sql.rowset.BaseRowSet#setInt(int, int)->void:::Sets the designated parameter to an int in the Java programming language
javax.sql.rowset.BaseRowSet#setLong(int, long)->void:::Sets the designated parameter to the given long in the Java programming language
javax.sql.rowset.BaseRowSet#setFloat(int, float)->void:::Sets the designated parameter to the given float in the Java programming language
javax.sql.rowset.BaseRowSet#setDouble(int, double)->void:::Sets the designated parameter to the given double in the Java programming language
javax.sql.rowset.BaseRowSet#setBigDecimal(int, java.math.BigDecimal)->void:::Sets the designated parameter to the given java.lang.BigDecimal value
javax.sql.rowset.BaseRowSet#setString(int, String)->void:::Sets the designated parameter to the given String value
javax.sql.rowset.BaseRowSet#setBytes(int, byte[])->void:::Sets the designated parameter to the given array of bytes
javax.sql.rowset.BaseRowSet#setDate(int, java.sql.Date)->void:::Sets the designated parameter to the given java.sql.Date value
javax.sql.rowset.BaseRowSet#setTime(int, java.sql.Time)->void:::Sets the designated parameter to the given java.sql.Time value
javax.sql.rowset.BaseRowSet#setTimestamp(int, java.sql.Timestamp)->void:::Sets the designated parameter to the given java.sql.Timestamp value
javax.sql.rowset.BaseRowSet#setAsciiStream(int, java.io.InputStream, int)->void:::Sets the designated parameter to the given java.io.InputStream object, which will have the specified number of bytes
javax.sql.rowset.BaseRowSet#setAsciiStream(int, java.io.InputStream)->void:::Sets the designated parameter in this RowSet object's command to the given input stream
javax.sql.rowset.BaseRowSet#setBinaryStream(int, java.io.InputStream, int)->void:::Sets the designated parameter to the given java.io.InputStream object, which will have the specified number of bytes
javax.sql.rowset.BaseRowSet#setBinaryStream(int, java.io.InputStream)->void:::Sets the designated parameter in this RowSet object's command to the given input stream
javax.sql.rowset.BaseRowSet#setUnicodeStream(int, java.io.InputStream, int)->void:::Sets the designated parameter to the given java.io.InputStream object, which will have the specified number of bytes
javax.sql.rowset.BaseRowSet#setCharacterStream(int, Reader, int)->void:::Sets the designated parameter to the given java.io.Reader object, which will have the specified number of characters
javax.sql.rowset.BaseRowSet#setCharacterStream(int, java.io.Reader)->void:::Sets the designated parameter in this RowSet object's command to the given Reader object
javax.sql.rowset.BaseRowSet#setObject(int, Object, int, int)->void:::Sets the designated parameter to an Object in the Java programming language
javax.sql.rowset.BaseRowSet#setObject(int, Object, int)->void:::Sets the value of the designated parameter with the given Object value
javax.sql.rowset.BaseRowSet#setObject(int, Object)->void:::Sets the designated parameter to an Object in the Java programming language
javax.sql.rowset.BaseRowSet#setRef(int, Ref)->void:::Sets the designated parameter to the given Ref object in the Java programming language
javax.sql.rowset.BaseRowSet#setBlob(int, Blob)->void:::Sets the designated parameter to the given Blob object in the Java programming language
javax.sql.rowset.BaseRowSet#setClob(int, Clob)->void:::Sets the designated parameter to the given Clob object in the Java programming language
javax.sql.rowset.BaseRowSet#setArray(int, Array)->void:::Sets the designated parameter to an Array object in the Java programming language
javax.sql.rowset.BaseRowSet#setDate(int, java.sql.Date, Calendar)->void:::Sets the designated parameter to the given java.sql.Date object
javax.sql.rowset.BaseRowSet#setTime(int, java.sql.Time, Calendar)->void:::Sets the designated parameter to the given java.sql.Time object
javax.sql.rowset.BaseRowSet#setTimestamp(int, java.sql.Timestamp, Calendar)->void:::Sets the designated parameter to the given java.sql.Timestamp object
javax.sql.rowset.BaseRowSet#clearParameters()->void:::Clears all of the current parameter values in this RowSet object's internal representation of the parameters to be set in this RowSet object's command when it is executed
javax.sql.rowset.BaseRowSet#getParams()->Object[]:::Retrieves an array containing the parameter values (both Objects and primitives) that have been set for this RowSet object's command and throws an SQLException object if all parameters have not been set
javax.sql.rowset.BaseRowSet#setNull(String, int)->void:::Sets the designated parameter to SQL NULL
javax.sql.rowset.BaseRowSet#setNull(String, int, String)->void:::Sets the designated parameter to SQL NULL
javax.sql.rowset.BaseRowSet#setBoolean(String, boolean)->void:::Sets the designated parameter to the given Java boolean value
javax.sql.rowset.BaseRowSet#setByte(String, byte)->void:::Sets the designated parameter to the given Java byte value
javax.sql.rowset.BaseRowSet#setShort(String, short)->void:::Sets the designated parameter to the given Java short value
javax.sql.rowset.BaseRowSet#setInt(String, int)->void:::Sets the designated parameter to the given Java int value
javax.sql.rowset.BaseRowSet#setLong(String, long)->void:::Sets the designated parameter to the given Java long value
javax.sql.rowset.BaseRowSet#setFloat(String, float)->void:::Sets the designated parameter to the given Java float value
javax.sql.rowset.BaseRowSet#setDouble(String, double)->void:::Sets the designated parameter to the given Java double value
javax.sql.rowset.BaseRowSet#setBigDecimal(String, BigDecimal)->void:::Sets the designated parameter to the given java.math.BigDecimal value
javax.sql.rowset.BaseRowSet#setString(String, String)->void:::Sets the designated parameter to the given Java String value
javax.sql.rowset.BaseRowSet#setBytes(String, byte[])->void:::Sets the designated parameter to the given Java array of bytes
javax.sql.rowset.BaseRowSet#setTimestamp(String, java.sql.Timestamp)->void:::Sets the designated parameter to the given java.sql.Timestamp value
javax.sql.rowset.BaseRowSet#setAsciiStream(String, java.io.InputStream, int)->void:::Sets the designated parameter to the given input stream, which will have the specified number of bytes
javax.sql.rowset.BaseRowSet#setBinaryStream(String, java.io.InputStream, int)->void:::Sets the designated parameter to the given input stream, which will have the specified number of bytes
javax.sql.rowset.BaseRowSet#setCharacterStream(String, java.io.Reader, int)->void:::Sets the designated parameter to the given Reader object, which is the given number of characters long
javax.sql.rowset.BaseRowSet#setAsciiStream(String, java.io.InputStream)->void:::Sets the designated parameter to the given input stream
javax.sql.rowset.BaseRowSet#setBinaryStream(String, java.io.InputStream)->void:::Sets the designated parameter to the given input stream
javax.sql.rowset.BaseRowSet#setCharacterStream(String, java.io.Reader)->void:::Sets the designated parameter to the given Reader object
javax.sql.rowset.BaseRowSet#setNCharacterStream(int, Reader)->void:::Sets the designated parameter in this RowSet object's command to a Reader object
javax.sql.rowset.BaseRowSet#setObject(String, Object, int, int)->void:::Sets the value of the designated parameter with the given object
javax.sql.rowset.BaseRowSet#setObject(String, Object, int)->void:::Sets the value of the designated parameter with the given object
javax.sql.rowset.BaseRowSet#setObject(String, Object)->void:::Sets the value of the designated parameter with the given object
javax.sql.rowset.BaseRowSet#setBlob(int, InputStream, long)->void:::Sets the designated parameter to a InputStream object
javax.sql.rowset.BaseRowSet#setBlob(int, InputStream)->void:::Sets the designated parameter to a InputStream object
javax.sql.rowset.BaseRowSet#setBlob(String, InputStream, long)->void:::Sets the designated parameter to a InputStream object
javax.sql.rowset.BaseRowSet#setBlob(String, Blob)->void:::Sets the designated parameter to the given java.sql.Blob object
javax.sql.rowset.BaseRowSet#setBlob(String, InputStream)->void:::Sets the designated parameter to a InputStream object
javax.sql.rowset.BaseRowSet#setClob(int, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setClob(int, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setClob(String, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setClob(String, Clob)->void:::Sets the designated parameter to the given java.sql.Clob object
javax.sql.rowset.BaseRowSet#setClob(String, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setDate(String, java.sql.Date)->void:::Sets the designated parameter to the given java.sql.Date value using the default time zone of the virtual machine that is running the application
javax.sql.rowset.BaseRowSet#setDate(String, java.sql.Date, Calendar)->void:::Sets the designated parameter to the given java.sql.Date value, using the given Calendar object
javax.sql.rowset.BaseRowSet#setTime(String, java.sql.Time)->void:::Sets the designated parameter to the given java.sql.Time value
javax.sql.rowset.BaseRowSet#setTime(String, java.sql.Time, Calendar)->void:::Sets the designated parameter to the given java.sql.Time value, using the given Calendar object
javax.sql.rowset.BaseRowSet#setTimestamp(String, java.sql.Timestamp, Calendar)->void:::Sets the designated parameter to the given java.sql.Timestamp value, using the given Calendar object
javax.sql.rowset.BaseRowSet#setSQLXML(int, SQLXML)->void:::Sets the designated parameter to the given java.sql.SQLXML object
javax.sql.rowset.BaseRowSet#setSQLXML(String, SQLXML)->void:::Sets the designated parameter to the given java.sql.SQLXML object
javax.sql.rowset.BaseRowSet#setRowId(int, RowId)->void:::Sets the designated parameter to the given java.sql.RowId object
javax.sql.rowset.BaseRowSet#setRowId(String, RowId)->void:::Sets the designated parameter to the given java.sql.RowId object
javax.sql.rowset.BaseRowSet#setNString(int, String)->void:::Sets the designated parameter to the given String object
javax.sql.rowset.BaseRowSet#setNString(String, String)->void:::Sets the designated parameter to the given String object
javax.sql.rowset.BaseRowSet#setNCharacterStream(int, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setNCharacterStream(String, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setNCharacterStream(String, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setNClob(String, NClob)->void:::Sets the designated parameter to a java.sql.NClob object
javax.sql.rowset.BaseRowSet#setNClob(String, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setNClob(String, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setNClob(int, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setNClob(int, NClob)->void:::Sets the designated parameter to a java.sql.NClob object
javax.sql.rowset.BaseRowSet#setNClob(int, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.rowset.BaseRowSet#setURL(int, java.net.URL)->void:::Sets the designated parameter to the given java.net.URL value
javax.sql.rowset.CachedRowSet#populate(ResultSet)->void:::Populates this CachedRowSet object with data from the given ResultSet object
javax.sql.rowset.CachedRowSet#execute(Connection)->void:::Populates this CachedRowSet object with data, using the given connection to produce the result set from which the data will be read
javax.sql.rowset.CachedRowSet#acceptChanges()->void:::Propagates row update, insert and delete changes made to this CachedRowSet object to the underlying data source
javax.sql.rowset.CachedRowSet#acceptChanges(Connection)->void:::Propagates all row update, insert and delete changes to the data source backing this CachedRowSet object using the specified Connection object to establish a connection to the data source
javax.sql.rowset.CachedRowSet#restoreOriginal()->void:::Restores this CachedRowSet object to its original value, that is, its value before the last set of changes
javax.sql.rowset.CachedRowSet#release()->void:::Releases the current contents of this CachedRowSet object and sends a rowSetChanged event to all registered listeners
javax.sql.rowset.CachedRowSet#undoDelete()->void:::Cancels the deletion of the current row and notifies listeners that a row has changed
javax.sql.rowset.CachedRowSet#undoInsert()->void:::Immediately removes the current row from this CachedRowSet object if the row has been inserted, and also notifies listeners that a row has changed
javax.sql.rowset.CachedRowSet#undoUpdate()->void:::Immediately reverses the last update operation if the row has been modified
javax.sql.rowset.CachedRowSet#columnUpdated(int)->boolean:::Indicates whether the designated column in the current row of this CachedRowSet object has been updated.
javax.sql.rowset.CachedRowSet#columnUpdated(String)->boolean:::Indicates whether the designated column in the current row of this CachedRowSet object has been updated.
javax.sql.rowset.CachedRowSet#toCollection()->Collection:::Converts this CachedRowSet object to a Collection object that contains all of this CachedRowSet object's data
javax.sql.rowset.CachedRowSet#toCollection(int)->Collection:::Converts the designated column in this CachedRowSet object to a Collection object
javax.sql.rowset.CachedRowSet#toCollection(String)->Collection:::Converts the designated column in this CachedRowSet object to a Collection object
javax.sql.rowset.CachedRowSet#getSyncProvider()->SyncProvider:::Retrieves the SyncProvider implementation for this CachedRowSet object
javax.sql.rowset.CachedRowSet#setSyncProvider(String)->void:::Sets the SyncProvider object for this CachedRowSet object to the one specified
javax.sql.rowset.CachedRowSet#size()->int:::Returns the number of rows in this CachedRowSet object.
javax.sql.rowset.CachedRowSet#setMetaData(RowSetMetaData)->void:::Sets the metadata for this CachedRowSet object with the given RowSetMetaData object
javax.sql.rowset.CachedRowSet#getOriginal()->ResultSet:::Returns a ResultSet object containing the original value of this CachedRowSet object
javax.sql.rowset.CachedRowSet#getOriginalRow()->ResultSet:::Returns a ResultSet object containing the original value for the current row only of this CachedRowSet object
javax.sql.rowset.CachedRowSet#setOriginalRow()->void:::Sets the current row in this CachedRowSet object as the original row
javax.sql.rowset.CachedRowSet#getTableName()->String:::Returns an identifier for the object (table) that was used to create this CachedRowSet object
javax.sql.rowset.CachedRowSet#setTableName(String)->void:::Sets the identifier for the table from which this CachedRowSet object was derived to the given table name
javax.sql.rowset.CachedRowSet#getKeyColumns()->int[]:::Returns an array containing one or more column numbers indicating the columns that form a key that uniquely identifies a row in this CachedRowSet object.
javax.sql.rowset.CachedRowSet#setKeyColumns(int[])->void:::Sets this CachedRowSet object's keyCols field with the given array of column numbers, which forms a key for uniquely identifying a row in this CachedRowSet object
javax.sql.rowset.CachedRowSet#createShared()->RowSet:::Returns a new RowSet object backed by the same data as that of this CachedRowSet object
javax.sql.rowset.CachedRowSet#createCopy()->CachedRowSet:::Creates a RowSet object that is a deep copy of the data in this CachedRowSet object
javax.sql.rowset.CachedRowSet#createCopySchema()->CachedRowSet:::Creates a CachedRowSet object that is an empty copy of this CachedRowSet object
javax.sql.rowset.CachedRowSet#createCopyNoConstraints()->CachedRowSet:::Creates a CachedRowSet object that is a deep copy of this CachedRowSet object's data but is independent of it
javax.sql.rowset.CachedRowSet#getRowSetWarnings()->RowSetWarning:::Retrieves the first warning reported by calls on this RowSet object
javax.sql.rowset.CachedRowSet#getShowDeleted()->boolean:::Retrieves a boolean indicating whether rows marked for deletion appear in the set of current rows
javax.sql.rowset.CachedRowSet#setShowDeleted(boolean)->void:::Sets the property showDeleted to the given boolean value, which determines whether rows marked for deletion appear in the set of current rows
javax.sql.rowset.CachedRowSet#commit()->void:::Each CachedRowSet object's SyncProvider contains a Connection object from the ResultSet or JDBC properties passed to it's constructors
javax.sql.rowset.CachedRowSet#rollback()->void:::Each CachedRowSet object's SyncProvider contains a Connection object from the original ResultSet or JDBC properties passed to it
javax.sql.rowset.CachedRowSet#rollback(Savepoint)->void:::Each CachedRowSet object's SyncProvider contains a Connection object from the original ResultSet or JDBC properties passed to it
javax.sql.rowset.CachedRowSet#rowSetPopulated(RowSetEvent, int)->void:::Notifies registered listeners that a RowSet object in the given RowSetEvent object has populated a number of additional rows
javax.sql.rowset.CachedRowSet#populate(ResultSet, int)->void:::Populates this CachedRowSet object with data from the given ResultSet object
javax.sql.rowset.CachedRowSet#setPageSize(int)->void:::Sets the CachedRowSet object's page-size
javax.sql.rowset.CachedRowSet#getPageSize()->int:::Returns the page-size for the CachedRowSet object
javax.sql.rowset.CachedRowSet#nextPage()->boolean:::Increments the current page of the CachedRowSet
javax.sql.rowset.CachedRowSet#previousPage()->boolean:::Decrements the current page of the CachedRowSet
javax.sql.rowset.FilteredRowSet#setFilter(Predicate)->void:::Applies the given Predicate object to this FilteredRowSet object
javax.sql.rowset.FilteredRowSet#getFilter()->Predicate:::Retrieves the active filter for this FilteredRowSet object.
javax.sql.rowset.JdbcRowSet#getShowDeleted()->boolean:::Retrieves a boolean indicating whether rows marked for deletion appear in the set of current rows
javax.sql.rowset.JdbcRowSet#setShowDeleted(boolean)->void:::Sets the property showDeleted to the given boolean value
javax.sql.rowset.JdbcRowSet#getRowSetWarnings()->RowSetWarning:::Retrieves the first warning reported by calls on this JdbcRowSet object
javax.sql.rowset.JdbcRowSet#commit()->void:::Each JdbcRowSet contains a Connection object from the ResultSet or JDBC properties passed to it's constructors
javax.sql.rowset.JdbcRowSet#getAutoCommit()->boolean:::Each JdbcRowSet contains a Connection object from the original ResultSet or JDBC properties passed to it
javax.sql.rowset.JdbcRowSet#setAutoCommit(boolean)->void:::Each JdbcRowSet contains a Connection object from the original ResultSet or JDBC properties passed to it
javax.sql.rowset.JdbcRowSet#rollback()->void:::Each JdbcRowSet contains a Connection object from the original ResultSet or JDBC properties passed to it
javax.sql.rowset.JdbcRowSet#rollback(Savepoint)->void:::Each JdbcRowSet contains a Connection object from the original ResultSet or JDBC properties passed to it
javax.sql.rowset.Joinable#setMatchColumn(int)->void:::Sets the designated column as the match column for this RowSet object
javax.sql.rowset.Joinable#setMatchColumn(int[])->void:::Sets the designated columns as the match column for this RowSet object
javax.sql.rowset.Joinable#setMatchColumn(String)->void:::Sets the designated column as the match column for this RowSet object
javax.sql.rowset.Joinable#setMatchColumn(String[])->void:::Sets the designated columns as the match column for this RowSet object
javax.sql.rowset.Joinable#getMatchColumnIndexes()->int[]:::Retrieves the indexes of the match columns that were set for this RowSet object with the method setMatchColumn(int[] columnIdxes).
javax.sql.rowset.Joinable#getMatchColumnNames()->String[]:::Retrieves the names of the match columns that were set for this RowSet object with the method setMatchColumn(String [] columnNames).
javax.sql.rowset.Joinable#unsetMatchColumn(int)->void:::Unsets the designated column as the match column for this RowSet object
javax.sql.rowset.Joinable#unsetMatchColumn(int[])->void:::Unsets the designated columns as the match column for this RowSet object.
javax.sql.rowset.Joinable#unsetMatchColumn(String)->void:::Unsets the designated column as the match column for this RowSet object
javax.sql.rowset.Joinable#unsetMatchColumn(String[])->void:::Unsets the designated columns as the match columns for this RowSet object.
javax.sql.rowset.JoinRowSet#addRowSet(Joinable)->void:::Adds the given RowSet object to this JoinRowSet object
javax.sql.rowset.JoinRowSet#addRowSet(RowSet, int)->void:::Adds the given RowSet object to this JoinRowSet object and sets the designated column as the match column for the RowSet object
javax.sql.rowset.JoinRowSet#addRowSet(RowSet, String)->void:::Adds rowset to this JoinRowSet object and sets the designated column as the match column
javax.sql.rowset.JoinRowSet#addRowSet(RowSet[], int[])->void:::Adds one or more RowSet objects contained in the given array of RowSet objects to this JoinRowSet object and sets the match column for each of the RowSet objects to the match columns in the given array of column indexes
javax.sql.rowset.JoinRowSet#addRowSet(RowSet[], String[])->void:::Adds one or more RowSet objects contained in the given array of RowSet objects to this JoinRowSet object and sets the match column for each of the RowSet objects to the match columns in the given array of column names
javax.sql.rowset.JoinRowSet#getRowSets()->Collection:::Returns a Collection object containing the RowSet objects that have been added to this JoinRowSet object
javax.sql.rowset.JoinRowSet#getRowSetNames()->String[]:::Returns a String array containing the names of the         RowSet objects added to this JoinRowSet         object.
javax.sql.rowset.JoinRowSet#toCachedRowSet()->CachedRowSet:::Creates a new CachedRowSet object containing the data in this JoinRowSet object, which can be saved to a data source using the SyncProvider object for the CachedRowSet object
javax.sql.rowset.JoinRowSet#supportsCrossJoin()->boolean:::Indicates if CROSS_JOIN is supported by a JoinRowSet implementation
javax.sql.rowset.JoinRowSet#supportsInnerJoin()->boolean:::Indicates if INNER_JOIN is supported by a JoinRowSet implementation
javax.sql.rowset.JoinRowSet#supportsLeftOuterJoin()->boolean:::Indicates if LEFT_OUTER_JOIN is supported by a JoinRowSet implementation
javax.sql.rowset.JoinRowSet#supportsRightOuterJoin()->boolean:::Indicates if RIGHT_OUTER_JOIN is supported by a JoinRowSet implementation
javax.sql.rowset.JoinRowSet#supportsFullJoin()->boolean:::Indicates if FULL_JOIN is supported by a JoinRowSet implementation
javax.sql.rowset.JoinRowSet#setJoinType(int)->void:::Allow the application to adjust the type of JOIN imposed on tables contained within the JoinRowSet object instance
javax.sql.rowset.JoinRowSet#getWhereClause()->String:::Return a SQL-like description of the WHERE clause being used in a JoinRowSet object
javax.sql.rowset.JoinRowSet#getJoinType()->int:::Returns a int describing the set SQL JOIN type governing this JoinRowSet instance
javax.sql.rowset.Predicate#evaluate(RowSet)->boolean:::This method is typically called a FilteredRowSet object internal methods (not public) that control the RowSet object's cursor moving  from row to the next
javax.sql.rowset.Predicate#evaluate(Object, int)->boolean:::This method is called by a FilteredRowSet object to check whether the value lies between the filtering criterion (or criteria if multiple constraints exist) set using the setFilter() method
javax.sql.rowset.Predicate#evaluate(Object, String)->boolean:::This method is called by the FilteredRowSet object to check whether the value lies between the filtering criteria set using the setFilter method
javax.sql.rowset.RowSetFactory#createCachedRowSet()->CachedRowSet:::Creates a new instance of a CachedRowSet.
javax.sql.rowset.RowSetFactory#createFilteredRowSet()->FilteredRowSet:::Creates a new instance of a FilteredRowSet.
javax.sql.rowset.RowSetFactory#createJdbcRowSet()->JdbcRowSet:::Creates a new instance of a JdbcRowSet.
javax.sql.rowset.RowSetFactory#createJoinRowSet()->JoinRowSet:::Creates a new instance of a JoinRowSet.
javax.sql.rowset.RowSetFactory#createWebRowSet()->WebRowSet:::Creates a new instance of a WebRowSet.
javax.sql.rowset.RowSetMetaDataImpl#setColumnCount(int)->void:::Sets to the given number the number of columns in the RowSet object for which this RowSetMetaDataImpl object was created.
javax.sql.rowset.RowSetMetaDataImpl#setAutoIncrement(int, boolean)->void:::Sets whether the designated column is automatically numbered, thus read-only, to the given boolean value.
javax.sql.rowset.RowSetMetaDataImpl#setCaseSensitive(int, boolean)->void:::Sets whether the name of the designated column is case sensitive to the given boolean.
javax.sql.rowset.RowSetMetaDataImpl#setSearchable(int, boolean)->void:::Sets whether a value stored in the designated column can be used in a WHERE clause to the given boolean value.
javax.sql.rowset.RowSetMetaDataImpl#setCurrency(int, boolean)->void:::Sets whether a value stored in the designated column is a cash value to the given boolean.
javax.sql.rowset.RowSetMetaDataImpl#setNullable(int, int)->void:::Sets whether a value stored in the designated column can be set to NULL to the given constant from the interface ResultSetMetaData.
javax.sql.rowset.RowSetMetaDataImpl#setSigned(int, boolean)->void:::Sets whether a value stored in the designated column is a signed number to the given boolean.
javax.sql.rowset.RowSetMetaDataImpl#setColumnDisplaySize(int, int)->void:::Sets the normal maximum number of chars in the designated column to the given number.
javax.sql.rowset.RowSetMetaDataImpl#setColumnLabel(int, String)->void:::Sets the suggested column label for use in printouts and displays, if any, to label
javax.sql.rowset.RowSetMetaDataImpl#setColumnName(int, String)->void:::Sets the column name of the designated column to the given name.
javax.sql.rowset.RowSetMetaDataImpl#setSchemaName(int, String)->void:::Sets the designated column's table's schema name, if any, to schemaName
javax.sql.rowset.RowSetMetaDataImpl#setPrecision(int, int)->void:::Sets the total number of decimal digits in a value stored in the designated column to the given number.
javax.sql.rowset.RowSetMetaDataImpl#setScale(int, int)->void:::Sets the number of digits to the right of the decimal point in a value stored in the designated column to the given number.
javax.sql.rowset.RowSetMetaDataImpl#setTableName(int, String)->void:::Sets the name of the table from which the designated column was derived to the given table name.
javax.sql.rowset.RowSetMetaDataImpl#setCatalogName(int, String)->void:::Sets the catalog name of the table from which the designated column was derived to catalogName
javax.sql.rowset.RowSetMetaDataImpl#setColumnType(int, int)->void:::Sets the SQL type code for values stored in the designated column to the given type code from the class java.sql.Types.
javax.sql.rowset.RowSetMetaDataImpl#setColumnTypeName(int, String)->void:::Sets the type name used by the data source for values stored in the designated column to the given type name.
javax.sql.rowset.RowSetMetaDataImpl#getColumnCount()->int:::Retrieves the number of columns in the RowSet object for which this RowSetMetaDataImpl object was created.
javax.sql.rowset.RowSetMetaDataImpl#isAutoIncrement(int)->boolean:::Retrieves whether a value stored in the designated column is automatically numbered, and thus readonly.
javax.sql.rowset.RowSetMetaDataImpl#isCaseSensitive(int)->boolean:::Indicates whether the case of the designated column's name matters.
javax.sql.rowset.RowSetMetaDataImpl#isSearchable(int)->boolean:::Indicates whether a value stored in the designated column can be used in a WHERE clause.
javax.sql.rowset.RowSetMetaDataImpl#isCurrency(int)->boolean:::Indicates whether a value stored in the designated column is a cash value.
javax.sql.rowset.RowSetMetaDataImpl#isNullable(int)->int:::Retrieves a constant indicating whether it is possible to store a NULL value in the designated column.
javax.sql.rowset.RowSetMetaDataImpl#isSigned(int)->boolean:::Indicates whether a value stored in the designated column is a signed number.
javax.sql.rowset.RowSetMetaDataImpl#getColumnDisplaySize(int)->int:::Retrieves the normal maximum width in chars of the designated column.
javax.sql.rowset.RowSetMetaDataImpl#getColumnLabel(int)->String:::Retrieves the suggested column title for the designated column for use in printouts and displays.
javax.sql.rowset.RowSetMetaDataImpl#getColumnName(int)->String:::Retrieves the name of the designated column.
javax.sql.rowset.RowSetMetaDataImpl#getSchemaName(int)->String:::Retrieves the schema name of the table from which the value in the designated column was derived.
javax.sql.rowset.RowSetMetaDataImpl#getPrecision(int)->int:::Retrieves the total number of digits for values stored in the designated column.
javax.sql.rowset.RowSetMetaDataImpl#getScale(int)->int:::Retrieves the number of digits to the right of the decimal point for values stored in the designated column.
javax.sql.rowset.RowSetMetaDataImpl#getTableName(int)->String:::Retrieves the name of the table from which the value in the designated column was derived.
javax.sql.rowset.RowSetMetaDataImpl#getCatalogName(int)->String:::Retrieves the catalog name of the table from which the value in the designated column was derived.
javax.sql.rowset.RowSetMetaDataImpl#getColumnType(int)->int:::Retrieves the type code (one of the java.sql.Types constants) for the SQL type of the value stored in the designated column.
javax.sql.rowset.RowSetMetaDataImpl#getColumnTypeName(int)->String:::Retrieves the DBMS-specific type name for values stored in the designated column.
javax.sql.rowset.RowSetMetaDataImpl#isReadOnly(int)->boolean:::Indicates whether the designated column is definitely not writable, thus readonly.
javax.sql.rowset.RowSetMetaDataImpl#isWritable(int)->boolean:::Indicates whether it is possible for a write operation on the designated column to succeed
javax.sql.rowset.RowSetMetaDataImpl#isDefinitelyWritable(int)->boolean:::Indicates whether a write operation on the designated column will definitely succeed.
javax.sql.rowset.RowSetMetaDataImpl#getColumnClassName(int)->String:::Retrieves the fully-qualified name of the class in the Java programming language to which a value in the designated column will be mapped
javax.sql.rowset.RowSetMetaDataImpl#unwrap(java.lang.Class)->T:::Returns an object that implements the given interface to allow access to non-standard methods, or standard methods not exposed by the proxy
javax.sql.rowset.RowSetMetaDataImpl#isWrapperFor(Class)->boolean:::Returns true if this either implements the interface argument or is directly or indirectly a wrapper for an object that does
javax.sql.rowset.RowSetProvider#newFactory()->RowSetFactory:::Creates a new instance of a RowSetFactory implementation
javax.sql.rowset.RowSetProvider#newFactory(String, ClassLoader)->RowSetFactory:::Creates  a new instance of a RowSetFactory from the specified factory class name
javax.sql.rowset.RowSetWarning#getNextWarning()->RowSetWarning:::Retrieves the warning chained to this RowSetWarning object.
javax.sql.rowset.RowSetWarning#setNextWarning(RowSetWarning)->void:::Sets warning as the next warning, that is, the warning chained to this RowSetWarning object.
javax.sql.rowset.WebRowSet#readXml(java.io.Reader)->void:::Reads a WebRowSet object in its XML format from the given Reader object.
javax.sql.rowset.WebRowSet#readXml(java.io.InputStream)->void:::Reads a stream based XML input to populate this WebRowSet object.
javax.sql.rowset.WebRowSet#writeXml(ResultSet, java.io.Writer)->void:::Populates this WebRowSet object with the contents of the given ResultSet object and writes its data, properties, and metadata to the given Writer object in XML format
javax.sql.rowset.WebRowSet#writeXml(ResultSet, java.io.OutputStream)->void:::Populates this WebRowSet object with the contents of the given ResultSet object and writes its data, properties, and metadata to the given OutputStream object in XML format
javax.sql.rowset.WebRowSet#writeXml(java.io.Writer)->void:::Writes the data, properties, and metadata for this WebRowSet object to the given Writer object in XML format.
javax.sql.rowset.WebRowSet#writeXml(java.io.OutputStream)->void:::Writes the data, properties, and metadata for this WebRowSet object to the given OutputStream object in XML format.
