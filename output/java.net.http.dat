java.net.http.HttpClient#newHttpClient()->HttpClient:::Returns a new HttpClient with default settings
java.net.http.HttpClient#newBuilder()->Builder:::Creates a new HttpClient builder.
java.net.http.HttpClient.Builder#cookieHandler(CookieHandler)->Builder:::Sets a cookie handler.
java.net.http.HttpClient.Builder#connectTimeout(Duration)->Builder:::Sets the connect timeout duration for this client
java.net.http.HttpClient.Builder#sslContext(SSLContext)->Builder:::Sets an SSLContext
java.net.http.HttpClient.Builder#sslParameters(SSLParameters)->Builder:::Sets an SSLParameters
java.net.http.HttpClient.Builder#executor(Executor)->Builder:::Sets the executor to be used for asynchronous and dependent tasks
java.net.http.HttpClient.Builder#followRedirects(Redirect)->Builder:::Specifies whether requests will automatically follow redirects issued by the server
java.net.http.HttpClient.Builder#version(HttpClient.Version)->Builder:::Requests a specific HTTP protocol version where possible
java.net.http.HttpClient.Builder#priority(int)->Builder:::Sets the default priority for any HTTP/2 requests sent from this client
java.net.http.HttpClient.Builder#proxy(ProxySelector)->Builder:::Sets a java.net.ProxySelector.
java.net.http.HttpClient.Builder#authenticator(Authenticator)->Builder:::Sets an authenticator to use for HTTP authentication.
java.net.http.HttpClient.Builder#build()->HttpClient:::Returns a new HttpClient built from the current state of this builder.
java.net.http.HttpClient#cookieHandler()->Optional:::Returns an Optional containing this client's CookieHandler
java.net.http.HttpClient#connectTimeout()->Optional:::Returns an Optional containing the connect timeout duration for this client
java.net.http.HttpClient#followRedirects()->Redirect:::Returns the follow redirects policy for this client
java.net.http.HttpClient#proxy()->Optional:::Returns an Optional containing the ProxySelector supplied to this client
java.net.http.HttpClient#sslContext()->SSLContext:::Returns this client's SSLContext
java.net.http.HttpClient#sslParameters()->SSLParameters:::Returns a copy of this client's SSLParameters
java.net.http.HttpClient#authenticator()->Optional:::Returns an Optional containing the Authenticator set on this client
java.net.http.HttpClient#version()->HttpClient.Version:::Returns the preferred HTTP protocol version for this client
java.net.http.HttpClient#executor()->Optional:::Returns an Optional containing this client's Executor
java.net.http.HttpClient#send(HttpRequest, HttpResponse.BodyHandler)->HttpResponse:::Sends the given request using this client, blocking if necessary to get the response
java.net.http.HttpClient#sendAsync(HttpRequest, BodyHandler)->CompletableFuture>:::Sends the given request asynchronously using this client with the given response body handler
java.net.http.HttpClient#sendAsync(HttpRequest, BodyHandler, PushPromiseHandler)->CompletableFuture>:::Sends the given request asynchronously using this client with the given response body handler and push promise handler
java.net.http.HttpClient#newWebSocketBuilder()->WebSocket.Builder:::Creates a new WebSocket builder (optional operation)
java.net.http.HttpHeaders#firstValue(String)->Optional:::Returns an Optional containing the first header string value of the given named (and possibly multi-valued) header
java.net.http.HttpHeaders#firstValueAsLong(String)->OptionalLong:::Returns an OptionalLong containing the first header string value of the named header field
java.net.http.HttpHeaders#allValues(String)->List:::Returns an unmodifiable List of all of the header string values of the given named header
java.net.http.HttpHeaders#map()->Map>:::Returns an unmodifiable multi Map view of this HttpHeaders.
java.net.http.HttpHeaders#equals(Object)->boolean:::Tests this HTTP headers instance for equality with the given object
java.net.http.HttpHeaders#hashCode()->int:::Computes a hash code for this HTTP headers instance
java.net.http.HttpHeaders#toString()->String:::Returns this HTTP headers as a string.
java.net.http.HttpHeaders#of(Map>, BiPredicate)->HttpHeaders:::Returns an HTTP headers from the given map
java.net.http.HttpRequest.Builder#uri(URI)->Builder:::Sets this HttpRequest's request URI.
java.net.http.HttpRequest.Builder#expectContinue(boolean)->Builder:::Requests the server to acknowledge the request before sending the body
java.net.http.HttpRequest.Builder#version(HttpClient.Version)->Builder:::Sets the preferred HttpClient.Version for this request
java.net.http.HttpRequest.Builder#header(String, String)->Builder:::Adds the given name value pair to the set of headers for this request
java.net.http.HttpRequest.Builder#headers(String...)->Builder:::Adds the given name value pairs to the set of headers for this request
java.net.http.HttpRequest.Builder#timeout(Duration)->Builder:::Sets a timeout for this request
java.net.http.HttpRequest.Builder#setHeader(String, String)->Builder:::Sets the given name value pair to the set of headers for this request
java.net.http.HttpRequest.Builder#GET()->Builder:::Sets the request method of this builder to GET
java.net.http.HttpRequest.Builder#POST(BodyPublisher)->Builder:::Sets the request method of this builder to POST and sets its request body publisher to the given value.
java.net.http.HttpRequest.Builder#PUT(BodyPublisher)->Builder:::Sets the request method of this builder to PUT and sets its request body publisher to the given value.
java.net.http.HttpRequest.Builder#DELETE()->Builder:::Sets the request method of this builder to DELETE.
java.net.http.HttpRequest.Builder#method(String, BodyPublisher)->Builder:::Sets the request method and request body of this builder to the given values.
java.net.http.HttpRequest.Builder#build()->HttpRequest:::Builds and returns an HttpRequest.
java.net.http.HttpRequest.Builder#copy()->Builder:::Returns an exact duplicate copy of this Builder based on current state
java.net.http.HttpRequest#newBuilder(URI)->HttpRequest.Builder:::Creates an HttpRequest builder with the given URI.
java.net.http.HttpRequest#newBuilder()->HttpRequest.Builder:::Creates an HttpRequest builder.
java.net.http.HttpRequest#bodyPublisher()->Optional:::Returns an Optional containing the BodyPublisher set on this request
java.net.http.HttpRequest#method()->String:::Returns the request method for this request
java.net.http.HttpRequest#timeout()->Optional:::Returns an Optional containing this request's timeout duration
java.net.http.HttpRequest#expectContinue()->boolean:::Returns this request's HttpRequest.Builder#expectContinue(boolean) expect continue setting.
java.net.http.HttpRequest#uri()->URI:::Returns this request's URI.
java.net.http.HttpRequest#version()->Optional:::Returns an Optional containing the HTTP protocol version that will be requested for this HttpRequest
java.net.http.HttpRequest#headers()->HttpHeaders:::The (user-accessible) request headers that this request was (or will be) sent with.
java.net.http.HttpRequest#equals(Object)->boolean:::Tests this HTTP request instance for equality with the given object
java.net.http.HttpRequest#hashCode()->int:::Computes a hash code for this HTTP request instance
java.net.http.HttpRequest.BodyPublisher#contentLength()->long:::Returns the content length for this request body
java.net.http.HttpRequest.BodyPublishers#fromPublisher(Flow.Publisher)->BodyPublisher:::Returns a request body publisher whose body is retrieved from the given Flow.Publisher
java.net.http.HttpRequest.BodyPublishers#fromPublisher(Flow.Publisher, long)->BodyPublisher:::Returns a request body publisher whose body is retrieved from the given Flow.Publisher
java.net.http.HttpRequest.BodyPublishers#ofString(String)->BodyPublisher:::Returns a request body publisher whose body is the given String, converted using the StandardCharsets#UTF_8 UTF_8 character set.
java.net.http.HttpRequest.BodyPublishers#ofString(String, Charset)->BodyPublisher:::Returns a request body publisher whose body is the given String, converted using the given character set.
java.net.http.HttpRequest.BodyPublishers#ofInputStream(Supplier)->BodyPublisher::: body publishers of input stream
java.net.http.HttpRequest.BodyPublishers#ofByteArray(byte[])->BodyPublisher:::Returns a request body publisher whose body is the given byte array.
java.net.http.HttpRequest.BodyPublishers#ofByteArray(byte[], int, int)->BodyPublisher:::Returns a request body publisher whose body is the content of the given byte array of length bytes starting from the specified offset.
java.net.http.HttpRequest.BodyPublishers#ofFile(Path)->BodyPublisher:::A request body publisher that takes data from the contents of a File
java.net.http.HttpRequest.BodyPublishers#ofByteArrays(Iterable)->BodyPublisher:::A request body publisher that takes data from an Iterable of byte arrays
java.net.http.HttpRequest.BodyPublishers#noBody()->BodyPublisher:::A request body publisher which sends no request body.
java.net.http.HttpResponse#statusCode()->int:::Returns the status code for this response.
java.net.http.HttpResponse#request()->HttpRequest:::Returns the HttpRequest corresponding to this response
java.net.http.HttpResponse#previousResponse()->Optional>:::Returns an Optional containing the previous intermediate response if one was received
java.net.http.HttpResponse#headers()->HttpHeaders:::Returns the received response headers.
java.net.http.HttpResponse#body()->T:::Returns the body
java.net.http.HttpResponse#sslSession()->Optional:::Returns an Optional containing the SSLSession in effect for this response
java.net.http.HttpResponse#uri()->URI:::Returns the URI that the response was received from
java.net.http.HttpResponse#version()->HttpClient.Version:::Returns the HTTP protocol version that was used for this response.
java.net.http.HttpResponse.ResponseInfo#statusCode()->int:::Provides the response status code.
java.net.http.HttpResponse.ResponseInfo#headers()->HttpHeaders:::Provides the response headers.
java.net.http.HttpResponse.ResponseInfo#version()->HttpClient.Version:::Provides the response protocol version.
java.net.http.HttpResponse.BodyHandler#apply(ResponseInfo)->BodySubscriber:::Returns a BodySubscriber BodySubscriber considering the given response status code and headers
java.net.http.HttpResponse.BodyHandlers#fromSubscriber(Subscriber>)->BodyHandler:::Returns a response body handler that returns a BodySubscriber BodySubscriber<Void> obtained from BodySubscribers#fromSubscriber(Subscriber), with the given subscriber
java.net.http.HttpResponse.BodyHandlers#fromSubscriber(S, Function)->BodyHandler:::Returns a response body handler that returns a BodySubscriber BodySubscriber<T> obtained from BodySubscribers#fromSubscriber(Subscriber, Function), with the given subscriber and finisher function
java.net.http.HttpResponse.BodyHandlers#fromLineSubscriber(Subscriber)->BodyHandler:::Returns a response body handler that returns a BodySubscriber BodySubscriber<Void> obtained from BodySubscribers#fromLineSubscriber(Subscriber, Function, Charset, String) BodySubscribers.fromLineSubscriber(subscriber, s -> null, charset, null), with the given subscriber
java.net.http.HttpResponse.BodyHandlers#fromLineSubscriber(S, Function, String)->BodyHandler:::Returns a response body handler that returns a BodySubscriber BodySubscriber<T> obtained from BodySubscribers#fromLineSubscriber(Subscriber, Function, Charset, String) BodySubscribers.fromLineSubscriber(subscriber, finisher, charset, lineSeparator), with the given subscriber, finisher function, and line separator
java.net.http.HttpResponse.BodyHandlers#discarding()->BodyHandler:::Returns a response body handler that discards the response body.
java.net.http.HttpResponse.BodyHandlers#replacing(U)->BodyHandler:::Returns a response body handler that returns the given replacement value, after discarding the response body.
java.net.http.HttpResponse.BodyHandlers#ofString(Charset)->BodyHandler:::Returns a BodyHandler<String> that returns a BodySubscriber BodySubscriber<String> obtained from BodySubscribers#ofString(Charset) BodySubscribers.ofString(Charset)
java.net.http.HttpResponse.BodyHandlers#ofFile(Path, OpenOption...)->BodyHandler:::Returns a BodyHandler<Path> that returns a BodySubscriber BodySubscriber<Path> obtained from BodySubscribers#ofFile(Path, OpenOption...) BodySubscribers.ofFile(Path,OpenOption...)
java.net.http.HttpResponse.BodyHandlers#ofFile(Path)->BodyHandler:::Returns a BodyHandler<Path> that returns a BodySubscriber BodySubscriber<Path>
java.net.http.HttpResponse.BodyHandlers#ofFileDownload(Path, OpenOption...)->BodyHandler:::Returns a BodyHandler<Path> that returns a BodySubscriber BodySubscriber&lt;Path&gt; where the download directory is specified, but the filename is obtained from the Content-Disposition response header
java.net.http.HttpResponse.BodyHandlers#ofInputStream()->BodyHandler:::Returns a BodyHandler<InputStream> that returns a BodySubscriber BodySubscriber<InputStream> obtained from BodySubscribers#ofInputStream() BodySubscribers.ofInputStream
java.net.http.HttpResponse.BodyHandlers#ofLines()->BodyHandler>:::Returns a BodyHandler<Stream<String>> that returns a BodySubscriber BodySubscriber<Stream<String>> obtained from BodySubscribers#ofLines(Charset) BodySubscribers.ofLines(charset)
java.net.http.HttpResponse.BodyHandlers#ofByteArrayConsumer(Consumer>)->BodyHandler:::Returns a BodyHandler<Void> that returns a BodySubscriber BodySubscriber<Void> obtained from BodySubscribers#ofByteArrayConsumer(Consumer) BodySubscribers.ofByteArrayConsumer(Consumer)
java.net.http.HttpResponse.BodyHandlers#ofByteArray()->BodyHandler:::Returns a BodyHandler<byte[]> that returns a BodySubscriber BodySubscriber&lt;byte[]&gt; obtained from BodySubscribers#ofByteArray() BodySubscribers.ofByteArray()
java.net.http.HttpResponse.BodyHandlers#ofString()->BodyHandler:::Returns a BodyHandler<String> that returns a BodySubscriber BodySubscriber<String> obtained from BodySubscribers#ofString(Charset) BodySubscribers.ofString(Charset)
java.net.http.HttpResponse.BodyHandlers#ofPublisher()->BodyHandler>>:::Returns a BodyHandler<Publisher<List<ByteBuffer>>> that creates a BodySubscriber BodySubscriber<Publisher<List<ByteBuffer>>> obtained from BodySubscribers#ofPublisher() BodySubscribers.ofPublisher()
java.net.http.HttpResponse.BodyHandlers#buffering(BodyHandler, int)->BodyHandler:::Returns a BodyHandler which, when invoked, returns a BodySubscribers#buffering(BodySubscriber,int) buffering BodySubscriber that buffers data before delivering it to the downstream subscriber
java.net.http.HttpResponse.PushPromiseHandler#applyPushPromise(HttpRequest, HttpRequest, Function, CompletableFuture>>)->void:::Notification of an incoming push promise
java.net.http.HttpResponse.PushPromiseHandler#of(Function>, ConcurrentMap>>)->PushPromiseHandler:::Returns a push promise handler that accumulates push promises, and their responses, into the given map
java.net.http.HttpResponse.BodySubscriber#getBody()->CompletionStage:::Returns a CompletionStage which when completed will return the response body object
java.net.http.HttpResponse.BodySubscribers#fromSubscriber(Subscriber>)->BodySubscriber:::Returns a body subscriber that forwards all response body to the given Flow.Subscriber
java.net.http.HttpResponse.BodySubscribers#fromSubscriber(S, Function)->BodySubscriber:::Returns a body subscriber that forwards all response body to the given Flow.Subscriber
java.net.http.HttpResponse.BodySubscribers#fromLineSubscriber(Subscriber)->BodySubscriber:::Returns a body subscriber that forwards all response body to the given Flow.Subscriber, line by line
java.net.http.HttpResponse.BodySubscribers#fromLineSubscriber(S, Function, Charset, String)->BodySubscriber:::Returns a body subscriber that forwards all response body to the given Flow.Subscriber, line by line
java.net.http.HttpResponse.BodySubscribers#ofString(Charset)->BodySubscriber:::Returns a body subscriber which stores the response body as a String converted using the given Charset
java.net.http.HttpResponse.BodySubscribers#ofByteArray()->BodySubscriber:::Returns a BodySubscriber which stores the response body as a byte array
java.net.http.HttpResponse.BodySubscribers#ofFile(Path, OpenOption...)->BodySubscriber:::Returns a BodySubscriber which stores the response body in a file opened with the given options and name
java.net.http.HttpResponse.BodySubscribers#ofFile(Path)->BodySubscriber:::Returns a BodySubscriber which stores the response body in a file opened with the given name
java.net.http.HttpResponse.BodySubscribers#ofByteArrayConsumer(Consumer>)->BodySubscriber:::Returns a BodySubscriber which provides the incoming body data to the provided Consumer of Optional<byte[]>
java.net.http.HttpResponse.BodySubscribers#ofInputStream()->BodySubscriber:::Returns a BodySubscriber which streams the response body as an InputStream
java.net.http.HttpResponse.BodySubscribers#ofLines(Charset)->BodySubscriber>:::Returns a BodySubscriber which streams the response body as a Stream Stream<String>, where each string in the stream corresponds to a line as defined by BufferedReader#lines()
java.net.http.HttpResponse.BodySubscribers#ofPublisher()->BodySubscriber>>:::Returns a response subscriber which publishes the response body through a Publisher<List<ByteBuffer>>
java.net.http.HttpResponse.BodySubscribers#replacing(U)->BodySubscriber:::Returns a response subscriber which discards the response body
java.net.http.HttpResponse.BodySubscribers#discarding()->BodySubscriber:::Returns a response subscriber which discards the response body.
java.net.http.HttpResponse.BodySubscribers#buffering(BodySubscriber, int)->BodySubscriber:::Returns a BodySubscriber which buffers data before delivering it to the given downstream subscriber
java.net.http.HttpResponse.BodySubscribers#mapping(BodySubscriber, Function)->BodySubscriber:::Returns a BodySubscriber whose response body value is that of the result of applying the given function to the body object of the given upstream BodySubscriber
java.net.http.WebSocket.Builder#header(String, String)->Builder:::Adds the given name-value pair to the list of additional HTTP headers sent during the opening handshake
java.net.http.WebSocket.Builder#connectTimeout(Duration)->Builder:::Sets a timeout for establishing a WebSocket connection
java.net.http.WebSocket.Builder#subprotocols(String, String...)->Builder:::Sets a request for the given subprotocols
java.net.http.WebSocket.Builder#buildAsync(URI, Listener)->CompletableFuture:::Builds a WebSocket connected to the given URI and associated with the given Listener
java.net.http.WebSocket.Listener#onOpen(WebSocket)->void:::A WebSocket has been connected
java.net.http.WebSocket.Listener#onText(WebSocket, CharSequence, boolean)->CompletionStage:::A textual data has been received
java.net.http.WebSocket.Listener#onBinary(WebSocket, ByteBuffer, boolean)->CompletionStage:::A binary data has been received
java.net.http.WebSocket.Listener#onPing(WebSocket, ByteBuffer)->CompletionStage:::A Ping message has been received
java.net.http.WebSocket.Listener#onPong(WebSocket, ByteBuffer)->CompletionStage:::A Pong message has been received
java.net.http.WebSocket.Listener#onClose(WebSocket, int, String)->CompletionStage:::Receives a Close message indicating the WebSocket's input has been closed
java.net.http.WebSocket.Listener#onError(WebSocket, Throwable)->void:::An error has occurred
java.net.http.WebSocket#sendText(CharSequence, boolean)->CompletableFuture:::Sends textual data with characters from the given character sequence
java.net.http.WebSocket#sendBinary(ByteBuffer, boolean)->CompletableFuture:::Sends binary data with bytes from the given buffer
java.net.http.WebSocket#sendPing(ByteBuffer)->CompletableFuture:::Sends a Ping message with bytes from the given buffer
java.net.http.WebSocket#sendPong(ByteBuffer)->CompletableFuture:::Sends a Pong message with bytes from the given buffer
java.net.http.WebSocket#sendClose(int, String)->CompletableFuture:::Initiates an orderly closure of this WebSocket's output by sending a Close message with the given status code and the reason
java.net.http.WebSocket#request(long)->void:::Increments the counter of invocations of receive methods
java.net.http.WebSocket#getSubprotocol()->String:::Returns the subprotocol used by this WebSocket.
java.net.http.WebSocket#isOutputClosed()->boolean:::Tells whether this WebSocket's output is closed
java.net.http.WebSocket#isInputClosed()->boolean:::Tells whether this WebSocket's input is closed
java.net.http.WebSocket#abort()->void:::Closes this WebSocket's input and output abruptly
java.net.http.WebSocketHandshakeException#getResponse()->HttpResponse:::Returns the server's counterpart of the opening handshake
java.net.http.WebSocketHandshakeException#initCause(Throwable)->WebSocketHandshakeException::: web socket handshake exception init cause
