javax.naming.BinaryRefAddr#getContent()->Object:::Retrieves the contents of this address as an Object
javax.naming.BinaryRefAddr#equals(Object)->boolean:::Determines whether obj is equal to this address
javax.naming.BinaryRefAddr#hashCode()->int:::Computes the hash code of this address using its address type and contents
javax.naming.BinaryRefAddr#toString()->String:::Generates the string representation of this address
javax.naming.Binding#getClassName()->String:::Retrieves the class name of the object bound to the name of this binding
javax.naming.Binding#getObject()->Object::: binding get object
javax.naming.Binding#setObject(Object)->void:::Sets the object associated with this binding.
javax.naming.Binding#toString()->String::: binding to string
javax.naming.CannotProceedException#getEnvironment()->Hashtable:::Retrieves the environment that was in effect when this exception was created.
javax.naming.CannotProceedException#setEnvironment(Hashtable)->void:::Sets the environment that will be returned when getEnvironment() is called.
javax.naming.CannotProceedException#getRemainingNewName()->Name:::Retrieves the "remaining new name" field of this exception, which is used when this exception is thrown during a rename() operation.
javax.naming.CannotProceedException#setRemainingNewName(Name)->void:::Sets the "remaining new name" field of this exception
javax.naming.CannotProceedException#getAltName()->Name:::Retrieves the altName field of this exception
javax.naming.CannotProceedException#setAltName(Name)->void:::Sets the altName field of this exception.
javax.naming.CannotProceedException#getAltNameCtx()->Context:::Retrieves the altNameCtx field of this exception
javax.naming.CannotProceedException#setAltNameCtx(Context)->void:::Sets the altNameCtx field of this exception.
javax.naming.CompositeName#toString()->String:::Generates the string representation of this composite name
javax.naming.CompositeName#equals(Object)->boolean:::Determines whether two composite names are equal
javax.naming.CompositeName#hashCode()->int:::Computes the hash code of this composite name
javax.naming.CompositeName#compareTo(Object)->int:::Compares this CompositeName with the specified Object for order
javax.naming.CompositeName#clone()->Object:::Generates a copy of this composite name
javax.naming.CompositeName#size()->int:::Retrieves the number of components in this composite name.
javax.naming.CompositeName#isEmpty()->boolean:::Determines whether this composite name is empty
javax.naming.CompositeName#getAll()->Enumeration:::Retrieves the components of this composite name as an enumeration of strings
javax.naming.CompositeName#get(int)->String:::Retrieves a component of this composite name.
javax.naming.CompositeName#getPrefix(int)->Name:::Creates a composite name whose components consist of a prefix of the components in this composite name
javax.naming.CompositeName#getSuffix(int)->Name:::Creates a composite name whose components consist of a suffix of the components in this composite name
javax.naming.CompositeName#startsWith(Name)->boolean:::Determines whether a composite name is a prefix of this composite name
javax.naming.CompositeName#endsWith(Name)->boolean:::Determines whether a composite name is a suffix of this composite name
javax.naming.CompositeName#addAll(Name)->Name:::Adds the components of a composite name -- in order -- to the end of this composite name.
javax.naming.CompositeName#addAll(int, Name)->Name:::Adds the components of a composite name -- in order -- at a specified position within this composite name
javax.naming.CompositeName#add(String)->Name:::Adds a single component to the end of this composite name.
javax.naming.CompositeName#add(int, String)->Name:::Adds a single component at a specified position within this composite name
javax.naming.CompositeName#remove(int)->Object:::Deletes a component from this composite name
javax.naming.CompoundName#toString()->String:::Generates the string representation of this compound name, using the syntax rules of the compound name
javax.naming.CompoundName#equals(Object)->boolean:::Determines whether obj is syntactically equal to this compound name
javax.naming.CompoundName#hashCode()->int:::Computes the hash code of this compound name
javax.naming.CompoundName#clone()->Object:::Creates a copy of this compound name
javax.naming.CompoundName#compareTo(Object)->int:::Compares this CompoundName with the specified Object for order
javax.naming.CompoundName#size()->int:::Retrieves the number of components in this compound name.
javax.naming.CompoundName#isEmpty()->boolean:::Determines whether this compound name is empty
javax.naming.CompoundName#getAll()->Enumeration:::Retrieves the components of this compound name as an enumeration of strings
javax.naming.CompoundName#get(int)->String:::Retrieves a component of this compound name.
javax.naming.CompoundName#getPrefix(int)->Name:::Creates a compound name whose components consist of a prefix of the components in this compound name
javax.naming.CompoundName#getSuffix(int)->Name:::Creates a compound name whose components consist of a suffix of the components in this compound name
javax.naming.CompoundName#startsWith(Name)->boolean:::Determines whether a compound name is a prefix of this compound name
javax.naming.CompoundName#endsWith(Name)->boolean:::Determines whether a compound name is a suffix of this compound name
javax.naming.CompoundName#addAll(Name)->Name:::Adds the components of a compound name -- in order -- to the end of this compound name
javax.naming.CompoundName#addAll(int, Name)->Name:::Adds the components of a compound name -- in order -- at a specified position within this compound name
javax.naming.CompoundName#add(String)->Name:::Adds a single component to the end of this compound name.
javax.naming.CompoundName#add(int, String)->Name:::Adds a single component at a specified position within this compound name
javax.naming.CompoundName#remove(int)->Object:::Deletes a component from this compound name
javax.naming.Context#lookup(Name)->Object:::Retrieves the named object
javax.naming.Context#lookup(String)->Object:::Retrieves the named object
javax.naming.Context#bind(Name, Object)->void:::Binds a name to an object
javax.naming.Context#bind(String, Object)->void:::Binds a name to an object
javax.naming.Context#rebind(Name, Object)->void:::Binds a name to an object, overwriting any existing binding
javax.naming.Context#rebind(String, Object)->void:::Binds a name to an object, overwriting any existing binding
javax.naming.Context#unbind(Name)->void:::Unbinds the named object
javax.naming.Context#unbind(String)->void:::Unbinds the named object
javax.naming.Context#rename(Name, Name)->void:::Binds a new name to the object bound to an old name, and unbinds the old name
javax.naming.Context#rename(String, String)->void:::Binds a new name to the object bound to an old name, and unbinds the old name
javax.naming.Context#list(Name)->NamingEnumeration:::Enumerates the names bound in the named context, along with the class names of objects bound to them
javax.naming.Context#list(String)->NamingEnumeration:::Enumerates the names bound in the named context, along with the class names of objects bound to them
javax.naming.Context#listBindings(Name)->NamingEnumeration:::Enumerates the names bound in the named context, along with the objects bound to them
javax.naming.Context#listBindings(String)->NamingEnumeration:::Enumerates the names bound in the named context, along with the objects bound to them
javax.naming.Context#destroySubcontext(Name)->void:::Destroys the named context and removes it from the namespace
javax.naming.Context#destroySubcontext(String)->void:::Destroys the named context and removes it from the namespace
javax.naming.Context#createSubcontext(Name)->Context:::Creates and binds a new context
javax.naming.Context#createSubcontext(String)->Context:::Creates and binds a new context
javax.naming.Context#lookupLink(Name)->Object:::Retrieves the named object, following links except for the terminal atomic component of the name
javax.naming.Context#lookupLink(String)->Object:::Retrieves the named object, following links except for the terminal atomic component of the name
javax.naming.Context#getNameParser(Name)->NameParser:::Retrieves the parser associated with the named context
javax.naming.Context#getNameParser(String)->NameParser:::Retrieves the parser associated with the named context
javax.naming.Context#composeName(Name, Name)->Name:::Composes the name of this context with a name relative to this context
javax.naming.Context#composeName(String, String)->String:::Composes the name of this context with a name relative to this context
javax.naming.Context#addToEnvironment(String, Object)->Object:::Adds a new environment property to the environment of this context
javax.naming.Context#removeFromEnvironment(String)->Object:::Removes an environment property from the environment of this context
javax.naming.Context#getEnvironment()->Hashtable:::Retrieves the environment in effect for this context
javax.naming.Context#close()->void:::Closes this context
javax.naming.Context#getNameInNamespace()->String:::Retrieves the full name of this context within its own namespace
javax.naming.InitialContext#init(Hashtable)->void:::Initializes the initial context using the supplied environment
javax.naming.InitialContext#doLookup(Name)->T:::A static method to retrieve the named object
javax.naming.InitialContext#doLookup(String)->T:::A static method to retrieve the named object
javax.naming.InitialContext#getDefaultInitCtx()->Context:::Retrieves the initial context by calling NamingManager.getInitialContext() and cache it in defaultInitCtx
javax.naming.InitialContext#getURLOrDefaultInitCtx(String)->Context:::Retrieves a context for resolving the string name name
javax.naming.InitialContext#getURLOrDefaultInitCtx(Name)->Context:::Retrieves a context for resolving name
javax.naming.InitialContext#lookup(String)->Object::: initial context lookup
javax.naming.InitialContext#lookup(Name)->Object::: initial context lookup
javax.naming.InitialContext#bind(String, Object)->void::: initial context bind
javax.naming.InitialContext#bind(Name, Object)->void::: initial context bind
javax.naming.InitialContext#rebind(String, Object)->void::: initial context rebind
javax.naming.InitialContext#rebind(Name, Object)->void::: initial context rebind
javax.naming.InitialContext#unbind(String)->void::: initial context unbind
javax.naming.InitialContext#unbind(Name)->void::: initial context unbind
javax.naming.InitialContext#rename(String, String)->void::: initial context rename
javax.naming.InitialContext#rename(Name, Name)->void::: initial context rename
javax.naming.InitialContext#list(String)->NamingEnumeration::: initial context list
javax.naming.InitialContext#list(Name)->NamingEnumeration::: initial context list
javax.naming.InitialContext#listBindings(String)->NamingEnumeration::: initial context list bindings
javax.naming.InitialContext#listBindings(Name)->NamingEnumeration::: initial context list bindings
javax.naming.InitialContext#destroySubcontext(String)->void::: initial context destroy subcontext
javax.naming.InitialContext#destroySubcontext(Name)->void::: initial context destroy subcontext
javax.naming.InitialContext#createSubcontext(String)->Context::: initial context create subcontext
javax.naming.InitialContext#createSubcontext(Name)->Context::: initial context create subcontext
javax.naming.InitialContext#lookupLink(String)->Object::: initial context lookup link
javax.naming.InitialContext#lookupLink(Name)->Object::: initial context lookup link
javax.naming.InitialContext#getNameParser(String)->NameParser::: initial context get name parser
javax.naming.InitialContext#getNameParser(Name)->NameParser::: initial context get name parser
javax.naming.InitialContext#composeName(String, String)->String:::Composes the name of this context with a name relative to this context
javax.naming.InitialContext#composeName(Name, Name)->Name:::Composes the name of this context with a name relative to this context
javax.naming.InitialContext#addToEnvironment(String, Object)->Object::: initial context add to environment
javax.naming.InitialContext#removeFromEnvironment(String)->Object::: initial context remove from environment
javax.naming.InitialContext#getEnvironment()->Hashtable::: initial context get environment
javax.naming.InitialContext#close()->void::: initial context close
javax.naming.InitialContext#getNameInNamespace()->String::: initial context get name in namespace
javax.naming.LinkException#getLinkResolvedName()->Name:::Retrieves the leading portion of the link name that was resolved successfully.
javax.naming.LinkException#getLinkRemainingName()->Name:::Retrieves the remaining unresolved portion of the link name.
javax.naming.LinkException#getLinkResolvedObj()->Object:::Retrieves the object to which resolution was successful
javax.naming.LinkException#getLinkExplanation()->String:::Retrieves the explanation associated with the problem encountered when resolving a link.
javax.naming.LinkException#setLinkExplanation(String)->void:::Sets the explanation associated with the problem encountered when resolving a link.
javax.naming.LinkException#setLinkResolvedName(Name)->void:::Sets the resolved link name field of this exception
javax.naming.LinkException#setLinkRemainingName(Name)->void:::Sets the remaining link name field of this exception
javax.naming.LinkException#setLinkResolvedObj(Object)->void:::Sets the link resolved object field of this exception
javax.naming.LinkException#toString()->String:::Generates the string representation of this exception
javax.naming.LinkException#toString(boolean)->String:::Generates the string representation of this exception
javax.naming.LinkRef#getLinkName()->String:::Retrieves the name of this link.
javax.naming.Name#clone()->Object:::Generates a new copy of this name
javax.naming.Name#compareTo(Object)->int:::Compares this name with another name for order
javax.naming.Name#size()->int:::Returns the number of components in this name.
javax.naming.Name#isEmpty()->boolean:::Determines whether this name is empty
javax.naming.Name#getAll()->Enumeration:::Retrieves the components of this name as an enumeration of strings
javax.naming.Name#get(int)->String:::Retrieves a component of this name.
javax.naming.Name#getPrefix(int)->Name:::Creates a name whose components consist of a prefix of the components of this name
javax.naming.Name#getSuffix(int)->Name:::Creates a name whose components consist of a suffix of the components in this name
javax.naming.Name#startsWith(Name)->boolean:::Determines whether this name starts with a specified prefix
javax.naming.Name#endsWith(Name)->boolean:::Determines whether this name ends with a specified suffix
javax.naming.Name#addAll(Name)->Name:::Adds the components of a name -- in order -- to the end of this name.
javax.naming.Name#addAll(int, Name)->Name:::Adds the components of a name -- in order -- at a specified position within this name
javax.naming.Name#add(String)->Name:::Adds a single component to the end of this name.
javax.naming.Name#add(int, String)->Name:::Adds a single component at a specified position within this name
javax.naming.Name#remove(int)->Object:::Removes a component from this name
javax.naming.NameClassPair#getClassName()->String:::Retrieves the class name of the object bound to the name of this binding
javax.naming.NameClassPair#getName()->String:::Retrieves the name of this binding
javax.naming.NameClassPair#setName(String)->void:::Sets the name of this binding.
javax.naming.NameClassPair#setClassName(String)->void:::Sets the class name of this binding.
javax.naming.NameClassPair#isRelative()->boolean:::Determines whether the name of this binding is relative to the target context (which is named by the first parameter of the list() method).
javax.naming.NameClassPair#setRelative(boolean)->void:::Sets whether the name of this binding is relative to the target context (which is named by the first parameter of the list() method).
javax.naming.NameClassPair#getNameInNamespace()->String:::Retrieves the full name of this binding
javax.naming.NameClassPair#setNameInNamespace(String)->void:::Sets the full name of this binding
javax.naming.NameClassPair#toString()->String:::Generates the string representation of this name/class pair
javax.naming.NameImpl#toString()->String::: name impl to string
javax.naming.NameImpl#equals(Object)->boolean::: name impl equals
javax.naming.NameImpl#compareTo(NameImpl)->int:::Compares obj to this NameImpl to determine ordering
javax.naming.NameImpl#size()->int::: name impl size
javax.naming.NameImpl#getAll()->Enumeration::: name impl get all
javax.naming.NameImpl#get(int)->String::: name impl get
javax.naming.NameImpl#getPrefix(int)->Enumeration::: name impl get prefix
javax.naming.NameImpl#getSuffix(int)->Enumeration::: name impl get suffix
javax.naming.NameImpl#isEmpty()->boolean::: name impl is empty
javax.naming.NameImpl#startsWith(int, Enumeration)->boolean::: name impl starts with
javax.naming.NameImpl#endsWith(int, Enumeration)->boolean::: name impl ends with
javax.naming.NameImpl#addAll(Enumeration)->boolean::: name impl add all
javax.naming.NameImpl#addAll(int, Enumeration)->boolean::: name impl add all
javax.naming.NameImpl#add(String)->void::: name impl add
javax.naming.NameImpl#add(int, String)->void::: name impl add
javax.naming.NameImpl#remove(int)->Object::: name impl remove
javax.naming.NameImpl#hashCode()->int::: name impl hash code
javax.naming.NameImplEnumerator#hasMoreElements()->boolean::: name impl enumerator has more elements
javax.naming.NameImplEnumerator#nextElement()->String::: name impl enumerator next element
javax.naming.NameParser#parse(String)->Name:::Parses a name into its components.
javax.naming.NamingEnumeration#next()->T:::Retrieves the next element in the enumeration
javax.naming.NamingEnumeration#hasMore()->boolean:::Determines whether there are any more elements in the enumeration
javax.naming.NamingEnumeration#close()->void:::Closes this enumeration
javax.naming.NamingException#getResolvedName()->Name:::Retrieves the leading portion of the name that was resolved successfully.
javax.naming.NamingException#getRemainingName()->Name:::Retrieves the remaining unresolved portion of the name.
javax.naming.NamingException#getResolvedObj()->Object:::Retrieves the object to which resolution was successful
javax.naming.NamingException#getExplanation()->String:::Retrieves the explanation associated with this exception.
javax.naming.NamingException#setResolvedName(Name)->void:::Sets the resolved name field of this exception
javax.naming.NamingException#setRemainingName(Name)->void:::Sets the remaining name field of this exception
javax.naming.NamingException#setResolvedObj(Object)->void:::Sets the resolved object field of this exception.
javax.naming.NamingException#appendRemainingComponent(String)->void:::Add name as the last component in remaining name.
javax.naming.NamingException#appendRemainingName(Name)->void:::Add components from 'name' as the last components in remaining name
javax.naming.NamingException#getRootCause()->Throwable:::Retrieves the root cause of this NamingException, if any
javax.naming.NamingException#setRootCause(Throwable)->void:::Records the root cause of this NamingException
javax.naming.NamingException#getCause()->Throwable:::Returns the cause of this exception
javax.naming.NamingException#initCause(Throwable)->Throwable:::Initializes the cause of this exception to the specified value
javax.naming.NamingException#toString()->String:::Generates the string representation of this exception
javax.naming.NamingException#toString(boolean)->String:::Generates the string representation in more detail
javax.naming.RefAddr#getType()->String:::Retrieves the address type of this address.
javax.naming.RefAddr#getContent()->Object:::Retrieves the contents of this address.
javax.naming.RefAddr#equals(Object)->boolean:::Determines whether obj is equal to this RefAddr
javax.naming.RefAddr#hashCode()->int:::Computes the hash code of this address using its address type and contents
javax.naming.RefAddr#toString()->String:::Generates the string representation of this address
javax.naming.Reference#getClassName()->String:::Retrieves the class name of the object to which this reference refers.
javax.naming.Reference#getFactoryClassName()->String:::Retrieves the class name of the factory of the object to which this reference refers.
javax.naming.Reference#getFactoryClassLocation()->String:::Retrieves the location of the factory of the object to which this reference refers
javax.naming.Reference#get(String)->RefAddr:::Retrieves the first address that has the address type 'addrType'
javax.naming.Reference#get(int)->RefAddr:::Retrieves the address at index posn.
javax.naming.Reference#getAll()->Enumeration:::Retrieves an enumeration of the addresses in this reference
javax.naming.Reference#size()->int:::Retrieves the number of addresses in this reference.
javax.naming.Reference#add(RefAddr)->void:::Adds an address to the end of the list of addresses.
javax.naming.Reference#add(int, RefAddr)->void:::Adds an address to the list of addresses at index posn
javax.naming.Reference#remove(int)->Object:::Deletes the address at index posn from the list of addresses
javax.naming.Reference#clear()->void:::Deletes all addresses from this reference.
javax.naming.Reference#equals(Object)->boolean:::Determines whether obj is a reference with the same addresses (in same order) as this reference
javax.naming.Reference#hashCode()->int:::Computes the hash code of this reference
javax.naming.Reference#toString()->String:::Generates the string representation of this reference
javax.naming.Reference#clone()->Object:::Makes a copy of this reference using its class name list of addresses, class factory name and class factory location
javax.naming.Referenceable#getReference()->Reference:::Retrieves the Reference of this object.
javax.naming.ReferralException#getReferralInfo()->Object:::Retrieves information (such as URLs) related to this referral
javax.naming.ReferralException#getReferralContext()->Context:::Retrieves the context at which to continue the method
javax.naming.ReferralException#getReferralContext(Hashtable)->Context:::Retrieves the context at which to continue the method using environment properties
javax.naming.ReferralException#skipReferral()->boolean:::Discards the referral about to be processed
javax.naming.ReferralException#retryReferral()->void:::Retries the referral currently being processed
javax.naming.StringRefAddr#getContent()->Object:::Retrieves the contents of this address
