DirectExecutionControl#classesRedefined(ClassBytecodes[]):::Notify that classes have been redefined.:::loaderDelegate->classesRedefined
DirectExecutionControl#stop():::  Not supported.:::throw->new->NotImplementedException
DirectExecutionControl#findClass(String):::Finds the class with the specified binary name.:::return->loaderDelegate->findClass
DirectExecutionControl#invoke(Method):::Invoke the specified "doit-method", a static method with no parameters:::res->doitMethod->new->ObjectArr->invoke->return->valueString
DirectExecutionControl#valueString(Object):::Converts the Object value from ExecutionControl#invoke(String, String)   or ExecutionControl#varValue(String, String)    to String.:::if->return->else->if->return->codePoints->codePoints->codePoints->IntStream->of->flatMap->StringBuilder->new->StringBuilder->appendCodePoint->StringBuilder->append->collect->toString->else->if->cp->return->String->valueOf->else->if->value->getClass->isArray->dims->t->value->getClass->while->ct->t->getComponentType->if->break->tn->t->getTypeName->len->Array->getLength->sb->new->StringBuilder->sb->tn->tn->lastIndexOf->tn->length->substring->append->sb->append->sb->append->sb->append->for->i->sb->append->for->i->sb->append->return->sb->toString->else->return->value->toString
DirectExecutionControl#throwConvertedInvocationException(Throwable):::Converts incoming exceptions in user code into instances of subtypes of ExecutionControl.ExecutionControlException and throws the converted exception.:::throw->asRunException
DirectExecutionControl#throwConvertedOtherException(Throwable):::Converts incoming exceptions in agent code into instances of subtypes of ExecutionControl.ExecutionControlException and throws the converted exception.:::throw->ex->toString->new->InternalException
DirectExecutionControl#clientCodeEnter():::Marks entry into user code.:::
DirectExecutionControl#clientCodeLeave():::Marks departure from user code.:::
FailOverExecutionControlProvider#name():::The unique name of this ExecutionControlProvider.:::return
FailOverExecutionControlProvider#defaultParameters():::Create and return the default parameter map for this ExecutionControlProvider:::dp->new->HashMap<>->dp->put->for->i->return
FailOverExecutionControlProvider#generate(ExecutionEnv, Map):::Create and return a locally executing ExecutionControl instance:::thrown->for->i->logger->severe->if->throw->new->IllegalArgumentException->throw
JdiDefaultExecutionControl#create(ExecutionEnv, String, boolean, String, int):::Creates an ExecutionControl instance based on a JDI ListeningConnector or LaunchingConnector:::try->listener->InetAddress->getLoopbackAddress->new->ServerSocket->listener->setSoTimeout->port->listener->getLocalPort->jdii->env->extraRemoteVMOptions->Collections->emptyMap->new->JdiInitiator->vm->jdii->vm->process->jdii->process->deathListeners->new->ArrayList<>->Util->foreach->h->accept->detectJdiExitEvent->socket->listener->accept->out->socket->getOutputStream->outputs->new->HashMap<>->outputs->env->userOut->put->outputs->env->userErr->put->input->new->HashMap<>->input->env->userIn->put->return->socket->getInputStream->new->JdiDefaultExecutionControl->remoteInputOutput->catch->finally
JdiDefaultExecutionControl#stop():::Interrupts a running remote invoke by manipulating remote variables and sending a stop via JDI.:::synchronized->if->return->vm->suspend->try->foreach->vm->allThreads->foreach->thread->frames->if->remoteAgent->frame->location->declaringType->name->equals->frame->location->method->name->equals->frame->location->method->name->equals->thiz->frame->thisObject->inClientCode->thiz->referenceType->fieldByName->expectingStop->thiz->referenceType->fieldByName->stopException->thiz->referenceType->fieldByName->if->thiz->getValue->value->thiz->vm->mirrorOf->setValue->stopInstance->thiz->getValue->vm->resume->debug->thread->stop->thiz->vm->mirrorOf->setValue->break->catch->throw->new->InternalException->finally->vm->resume
JdiEventHandler#start():::Starts the event handler.:::thread->start
JdiExecutionControl#vm():::Returns the JDI VirtualMachine instance.:::
JdiExecutionControl#redefine(ClassBytecodes[]):::Redefine the specified classes:::try->vm->vm->rmp->Stream->of->cbc->name->referenceType->cbc->bytecodes->toMap->collect->vm->redefineClasses->catch->throw->throw->ex->getMessage->new->booleanArr->new->ClassInstallException->finally->try->super->redefine->catch->finally
JdiExecutionControl#referenceType(VirtualMachine, String):::Returns the JDI ReferenceType corresponding to the specified class name.:::return->toReferenceType->nameToRef->computeIfAbsent
JdiExecutionControlProvider#name():::The unique name of this ExecutionControlProvider.:::return
JdiExecutionControlProvider#defaultParameters():::Create and return the default parameter map for this ExecutionControlProvider:::dp->new->HashMap<>->dp->getName->put->dp->put->dp->put->dp->put->return
JdiInitiator#vm():::Returns the resulting VirtualMachine instance.:::return
JdiInitiator#process():::Returns the launched process.:::return
LoaderDelegate#load(ClassBytecodes[]):::Attempts to load new classes.:::
LoaderDelegate#classesRedefined(ClassBytecodes[]):::Notify that classes have been redefined.:::
LoaderDelegate#addToClasspath(String):::Adds the path to the execution class path.:::
LoaderDelegate#findClass(String):::Finds the class with the specified binary name.:::
LocalExecutionControlProvider#name():::The unique name of this ExecutionControlProvider.:::return
LocalExecutionControlProvider#defaultParameters():::Create and return the default parameter map for LocalExecutionControlProvider:::return->ExecutionControlProvider.super->defaultParameters
LocalExecutionControlProvider#generate(ExecutionEnv, Map):::Create and return a locally executing ExecutionControl instance.:::return->new->LocalExecutionControl
RemoteExecutionControl#main(String[]):::Launch the agent, connecting to the JShell-core over the socket specified in the command-line argument.:::loopBack->socket->Integer->parseInt->new->Socket->inStream->socket->getInputStream->outStream->socket->getOutputStream->outputs->new->HashMap<>->outputs->System->new->PrintStream->setOut->put->outputs->System->new->PrintStream->setErr->put->input->new->HashMap<>->input->System->setIn->put->new->RemoteExecutionControl->forwardExecutionControlAndIO
RemoteExecutionControl#redefine(ClassBytecodes[]):::Redefine processing on the remote end is only to register the redefined classes:::classesRedefined
StreamingExecutionControl#close():::Closes the execution engine:::try->writeCommand->out->flush->catch->finally
Util#forwardExecutionControl(ExecutionControl, ObjectInput, ObjectOutput):::Forward commands from the input to the specified ExecutionControl instance, then responses back on the output.:::new->ExecutionControlForwarder->commandLoop
Util#forwardExecutionControlAndIO(ExecutionControl, InputStream, OutputStream, Map>, Map>):::Forward commands from the input to the specified ExecutionControl instance, then responses back on the output.:::foreach->outputStreamMap->entrySet->e->getValue->e->getKey->multiplexingOutputStream->accept->cmdOut->multiplexingOutputStream->new->ObjectOutputStream->cmdInPipe->new->PipeInputStream->inputs->new->HashMap<>->inputs->cmdInPipe->createOutput->put->foreach->inputStreamMap->entrySet->inputSignal->e->getKey->multiplexingOutputStream->inputPipe->new->PipeInputStream->inputs->e->getKey->inputPipe->createOutput->put->e->getValue->accept->inputs->values->new->DemultiplexInput->start->cmdIn->new->ObjectInputStream->forwardExecutionControl
Util#remoteInputOutput(InputStream, OutputStream, Map, Map, BiFunction):::Creates an ExecutionControl for given packetized input and output:::result->new->ExecutionControlArr->augmentedStreamMap->new->HashMap<>->commandOut->Util->multiplexingOutputStream->new->ObjectOutputStream->foreach->inputStreamMap->entrySet->in->e->getValue->inTarget->Util->e->getKey->multiplexingOutputStream->augmentedStreamMap->e->getKey->new->OutputStream->put->commandIn->new->PipeInputStream->commandInTarget->commandIn->createOutput->augmentedStreamMap->put->Arrays->asList->new->DemultiplexInput->start->return->factory->new->ObjectInputStream->apply
Util#detectJdiExitEvent(VirtualMachine, Consumer):::Monitor the JDI event stream for com.sun.jdi.event.VMDeathEvent and com.sun.jdi.event.VMDisconnectEvent:::if->vm->canBeModified->new->JdiEventHandler->start
