DefaultLoaderDelegate.RemoteClassLoader.ResourceURLStreamHandler#openConnection(URL)::: resource stream handler open connection:::return->new->URLConnection
DefaultLoaderDelegate.RemoteClassLoader#declare(String, byte[])::: remote class loader declare:::classFiles->toResourceString->System->currentTimeMillis->new->ClassFile->put
DefaultLoaderDelegate.RemoteClassLoader#findClass(String)::: remote class loader find class:::file->classFiles->toResourceString->get->if->return->super->findClass->return->super->defineClass
DefaultLoaderDelegate.RemoteClassLoader#findResource(String)::: remote class loader find resource:::u->doFindResource->return->super->findResource
DefaultLoaderDelegate.RemoteClassLoader#findResources(String)::: remote class loader find resources:::u->doFindResource->sup->super->findResources->if->return->result->new->ArrayList<>->while->sup->hasMoreElements->result->sup->nextElement->add->result->add->return->Collections->enumeration
DefaultLoaderDelegate.RemoteClassLoader#doFindResource(String)::: remote class loader do find resource:::if->classFiles->containsKey->try->return->new->URI->toString->new->ResourceURLStreamHandler->new->URL->catch->throw->new->InternalError->finally->return
DefaultLoaderDelegate.RemoteClassLoader#toResourceString(String)::: remote class loader to resource string:::return->className->replace
DefaultLoaderDelegate.RemoteClassLoader#addURL(URL)::: remote class loader add l:::super->addURL
DefaultLoaderDelegate#load(ClassBytecodes[])::: default loader delegate load:::loaded->new->booleanArr->try->foreach->loader->cbc->name->cbc->bytecodes->declare->for->i->catch->throw->ex->getMessage->new->ClassInstallException->finally
DefaultLoaderDelegate#classesRedefined(ClassBytecodes[])::: default loader delegate classes redefined:::foreach->loader->cbc->name->cbc->bytecodes->declare
DefaultLoaderDelegate#addToClasspath(String)::: default loader delegate add to classpath:::try->foreach->cp->split->loader->new->File->toURI->toURL->addURL->catch->throw->ex->toString->new->InternalException->finally
DefaultLoaderDelegate#findClass(String)::: default loader delegate find class:::klass->klasses->get->if->throw->new->ClassNotFoundException->else->return
DemultiplexInput#run()::: demultiplex input run:::try->while->nameLen->delegate->read->if->break->name->new->byteArr->readFully->dataLen->delegate->read->data->new->byteArr->readFully->chan->new->String->out->io->get->if->debug->else->out->write->catch->debug->finally->foreach->try->out->close->catch->debug->finally
DemultiplexInput#debug(String, Object...):::Log debugging information:::
DemultiplexInput#debug(Throwable, String):::Log a serious unexpected internal exception.:::
DirectExecutionControl#load(ClassBytecodes[])::: direct execution control load:::loaderDelegate->load
DirectExecutionControl#redefine(ClassBytecodes[])::: direct execution control redefine:::throw->new->NotImplementedException
DirectExecutionControl#classesRedefined(ClassBytecodes[]):::Notify that classes have been redefined.:::loaderDelegate->classesRedefined
DirectExecutionControl#invoke(String, String)::: direct execution control invoke:::doitMethod->try->klass->findClass->klass->new->Class<?>Arr->getDeclaredMethod->doitMethod->setAccessible->catch->throw->ex->toString->new->InternalException->finally->try->clientCodeEnter->result->invoke->flush->return->catch->throw->return->throwConvertedInvocationException->return->ex->getCause->throwConvertedInvocationException->return->throwConvertedOtherException->finally->clientCodeLeave
DirectExecutionControl#varValue(String, String)::: direct execution control var value:::val->try->klass->findClass->var->klass->getDeclaredField->var->setAccessible->var->get->catch->throw->ex->toString->new->InternalException->finally->try->clientCodeEnter->return->valueString->catch->return->throwConvertedInvocationException->finally->clientCodeLeave
DirectExecutionControl#addToClasspath(String)::: direct execution control add to classpath:::loaderDelegate->addToClasspath
DirectExecutionControl#stop():::  Not supported.:::throw->new->NotImplementedException
DirectExecutionControl#extensionCommand(String, Object)::: direct execution control extension command:::throw->new->NotImplementedException
DirectExecutionControl#close()::: direct execution control close:::
DirectExecutionControl#findClass(String):::Finds the class with the specified binary name.:::return->loaderDelegate->findClass
DirectExecutionControl#invoke(Method):::Invoke the specified "doit-method", a static method with no parameters:::res->doitMethod->new->ObjectArr->invoke->return->valueString
DirectExecutionControl#valueString(Object):::Converts the Object value from ExecutionControl#invoke(String, String)   or ExecutionControl#varValue(String, String)    to String.:::if->return->else->if->return->codePoints->codePoints->codePoints->IntStream->of->flatMap->StringBuilder->new->StringBuilder->appendCodePoint->StringBuilder->append->collect->toString->else->if->cp->return->String->valueOf->else->if->value->getClass->isArray->dims->t->value->getClass->while->ct->t->getComponentType->if->break->tn->t->getTypeName->len->Array->getLength->sb->new->StringBuilder->sb->tn->tn->lastIndexOf->tn->length->substring->append->sb->append->sb->append->sb->append->for->i->sb->append->for->i->sb->append->return->sb->toString->else->return->value->toString
DirectExecutionControl#throwConvertedInvocationException(Throwable):::Converts incoming exceptions in user code into instances of subtypes of ExecutionControl.ExecutionControlException and throws the converted exception.:::throw->asRunException
DirectExecutionControl#asRunException(Throwable)::: direct execution control as run exception:::if->spire->return->spire->id->spire->getStackTrace->new->ResolutionException->else->ue->ex->getMessage->ex->getClass->getName->ex->getStackTrace->new->UserException->cause->ex->getCause->ue->asRunException->initCause->return
DirectExecutionControl#throwConvertedOtherException(Throwable):::Converts incoming exceptions in agent code into instances of subtypes of ExecutionControl.ExecutionControlException and throws the converted exception.:::throw->ex->toString->new->InternalException
DirectExecutionControl#clientCodeEnter():::Marks entry into user code.:::
DirectExecutionControl#clientCodeLeave():::Marks departure from user code.:::
ExecutionControlForwarder#writeSuccess()::: execution control forwarder write success:::writeStatus->flush->return
ExecutionControlForwarder#writeSuccessAndResult(String)::: execution control forwarder write success and result:::writeStatus->writeUTF->flush->return
ExecutionControlForwarder#writeSuccessAndResult(Object)::: execution control forwarder write success and result:::writeStatus->writeObject->flush->return
ExecutionControlForwarder#writeStatus(int)::: execution control forwarder write status:::out->writeInt
ExecutionControlForwarder#writeObject(Object)::: execution control forwarder write object:::out->writeObject
ExecutionControlForwarder#writeInt(int)::: execution control forwarder write int:::out->writeInt
ExecutionControlForwarder#writeNullOrUTF(String)::: execution control forwarder write null or f:::writeUTF
ExecutionControlForwarder#writeUTF(String)::: execution control forwarder write f:::if->else->if->s->length->s->substring->out->writeUTF
ExecutionControlForwarder#flush()::: execution control forwarder flush:::out->flush
ExecutionControlForwarder#processCommand()::: execution control forwarder process command:::try->prefix->in->readInt->if->throw->new->EngineTerminationException->cmd->in->readUTF->switch->cbcs->in->readObject->ec->load->return->writeSuccess->cbcs->in->readObject->ec->redefine->return->writeSuccess->className->in->readUTF->methodName->in->readUTF->res->ec->invoke->return->writeSuccessAndResult->className->in->readUTF->varName->in->readUTF->res->ec->varValue->return->writeSuccessAndResult->cp->in->readUTF->ec->addToClasspath->return->writeSuccess->try->ec->stop->catch->finally->return->try->ec->close->catch->finally->return->arg->in->readObject->res->ec->extensionCommand->return->writeSuccessAndResult->catch->throw->writeStatus->ex->getMessage->writeUTF->flush->return->writeStatus->ex->getMessage->writeUTF->flush->return->writeInternalException->flush->return->writeStatus->ex->getMessage->writeUTF->ex->installed->writeObject->flush->return->writeStatus->for->e->writeStatus->flush->return->writeResolutionException->flush->return->writeStatus->flush->return->writeStatus->msg->ex->getMessage->ex->toString->writeUTF->flush->return->finally
ExecutionControlForwarder#writeInternalException(Throwable)::: execution control forwarder write internal exception:::writeStatus->ex->getMessage->writeUTF
ExecutionControlForwarder#writeUserException(UserException)::: execution control forwarder write user exception:::writeStatus->ex->getMessage->writeNullOrUTF->ex->causeExceptionClass->writeUTF->ex->getStackTrace->writeObject
ExecutionControlForwarder#writeResolutionException(ResolutionException)::: execution control forwarder write resolution exception:::writeStatus->ex->id->writeInt->ex->getStackTrace->writeObject
ExecutionControlForwarder#commandLoop()::: execution control forwarder command loop:::try->while->processCommand->catch->finally
FailOverExecutionControlProvider#name():::The unique name of this ExecutionControlProvider.:::return
FailOverExecutionControlProvider#defaultParameters():::Create and return the default parameter map for this ExecutionControlProvider:::dp->new->HashMap<>->dp->put->for->i->return
FailOverExecutionControlProvider#generate(ExecutionEnv, Map):::Create and return a locally executing ExecutionControl instance:::thrown->for->i->logger->severe->if->throw->new->IllegalArgumentException->throw
FailOverExecutionControlProvider#logger()::: fail over execution control provider logger:::if->Logger->getLogger->if->logger->getLevel->logger->setLevel->return
JdiDefaultExecutionControl#create(ExecutionEnv, String, boolean, String, int):::Creates an ExecutionControl instance based on a JDI ListeningConnector or LaunchingConnector:::try->listener->InetAddress->getLoopbackAddress->new->ServerSocket->listener->setSoTimeout->port->listener->getLocalPort->jdii->env->extraRemoteVMOptions->Collections->emptyMap->new->JdiInitiator->vm->jdii->vm->process->jdii->process->deathListeners->new->ArrayList<>->Util->foreach->h->accept->detectJdiExitEvent->socket->listener->accept->out->socket->getOutputStream->outputs->new->HashMap<>->outputs->env->userOut->put->outputs->env->userErr->put->input->new->HashMap<>->input->env->userIn->put->return->socket->getInputStream->new->JdiDefaultExecutionControl->remoteInputOutput->catch->finally
JdiDefaultExecutionControl#invoke(String, String)::: jdi default execution control invoke:::res->synchronized->try->super->invoke->catch->finally->synchronized->return
JdiDefaultExecutionControl#stop():::Interrupts a running remote invoke by manipulating remote variables and sending a stop via JDI.:::synchronized->if->return->vm->suspend->try->foreach->vm->allThreads->foreach->thread->frames->if->remoteAgent->frame->location->declaringType->name->equals->frame->location->method->name->equals->frame->location->method->name->equals->thiz->frame->thisObject->inClientCode->thiz->referenceType->fieldByName->expectingStop->thiz->referenceType->fieldByName->stopException->thiz->referenceType->fieldByName->if->thiz->getValue->value->thiz->vm->mirrorOf->setValue->stopInstance->thiz->getValue->vm->resume->debug->thread->stop->thiz->vm->mirrorOf->setValue->break->catch->throw->new->InternalException->finally->vm->resume
JdiDefaultExecutionControl#close()::: jdi default execution control close:::super->close->disposeVM
JdiDefaultExecutionControl#disposeVM()::: jdi default execution control dispose m:::try->if->vm->dispose->catch->debug->finally->if->process->destroy
JdiDefaultExecutionControl#vm()::: jdi default execution control vm:::if->throw->new->EngineTerminationException->else->return
JdiDefaultExecutionControl#debug(String, Object...):::Log debugging information:::
JdiDefaultExecutionControl#debug(Throwable, String):::Log a serious unexpected internal exception.:::
JdiEventHandler#start():::Starts the event handler.:::thread->start
JdiEventHandler#shutdown()::: jdi event handler shutdown:::thread->interrupt->while->try->wait->catch->finally
JdiEventHandler#run()::: jdi event handler run:::queue->vm->eventQueue->while->try->eventSet->queue->remove->resumeStoppedApp->it->eventSet->eventIterator->while->it->hasNext->it->nextEvent->handleEvent->if->eventSet->resume->catch->handleDisconnectedException->break->finally->synchronized->notifyAll
JdiEventHandler#handleEvent(Event)::: jdi event handler handle event:::handleExitEvent->return
JdiEventHandler#handleExitEvent(Event)::: jdi event handler handle exit event:::if->reportVMExit->accept->else->if->reportVMExit->accept->else
JdiEventHandler#handleDisconnectedException()::: jdi event handler handle disconnected exception:::queue->vm->eventQueue->while->try->eventSet->queue->remove->iter->eventSet->eventIterator->while->iter->hasNext->iter->next->handleExitEvent->catch->finally
JdiExecutionControl#vm():::Returns the JDI VirtualMachine instance.:::
JdiExecutionControl#redefine(ClassBytecodes[]):::Redefine the specified classes:::try->vm->vm->rmp->Stream->of->cbc->name->referenceType->cbc->bytecodes->toMap->collect->vm->redefineClasses->catch->throw->throw->ex->getMessage->new->booleanArr->new->ClassInstallException->finally->try->super->redefine->catch->finally
JdiExecutionControl#referenceType(VirtualMachine, String):::Returns the JDI ReferenceType corresponding to the specified class name.:::return->toReferenceType->nameToRef->computeIfAbsent
JdiExecutionControl#nameToRef(VirtualMachine, String)::: jdi execution control name to ref:::rtl->vm->classesByName->if->rtl->size->return->return->rtl->get
JdiExecutionControlProvider#name():::The unique name of this ExecutionControlProvider.:::return
JdiExecutionControlProvider#defaultParameters():::Create and return the default parameter map for this ExecutionControlProvider:::dp->new->HashMap<>->dp->getName->put->dp->put->dp->put->dp->put->return
JdiExecutionControlProvider#generate(ExecutionEnv, Map)::: jdi execution control provider generate:::dp->defaultParameters->if->remoteAgent->parameters->dp->get->getOrDefault->timeout->Integer->parameters->dp->get->getOrDefault->parseUnsignedInt->host->parameters->dp->get->getOrDefault->sIsLaunch->parameters->dp->get->getOrDefault->toLowerCase->isLaunch->sIsLaunch->length->startsWith->startsWith->return->JdiDefaultExecutionControl->create
JdiInitiator#vm():::Returns the resulting VirtualMachine instance.:::return
JdiInitiator#process():::Returns the launched process.:::return
JdiInitiator#launchTarget()::: jdi initiator launch target:::launcher->try->new_vm->launcher->launch->timedVirtualMachineCreation->new_vm->process->return->catch->throw->reportLaunchFail->finally
JdiInitiator#listenTarget(int, List):::Directly launch the remote agent and connect JDI to it with a ListeningConnector.:::listener->crashErrorFile->createTempFile->crashOutputFile->createTempFile->try->addr->listener->startListening->debug->javaHome->System->getProperty->args->new->ArrayList<>->args->add->args->connector->transport->name->add->args->addAll->args->add->args->add->pb->new->ProcessBuilder->pb->redirectError->pb->redirectOutput->pb->start->listener->accept->process->waitFor->timedVirtualMachineCreation->try->listener->stopListening->catch->finally->crashErrorFile->delete->crashOutputFile->delete->return->catch->if->process->destroyForcibly->try->listener->stopListening->catch->finally->text->readFile->readFile->crashErrorFile->delete->crashOutputFile->delete->if->text->isEmpty->throw->reportLaunchFail->else->throw->new->IllegalArgumentException->finally
JdiInitiator#createTempFile(String)::: jdi initiator create temp file:::try->f->File->createTempFile->f->deleteOnExit->return->catch->throw->new->InternalError->finally
JdiInitiator#readFile(File)::: jdi initiator read file:::try->return->Files->f->toPath->readAllBytes->new->String->catch->return->ex->toString->finally
JdiInitiator#timedVirtualMachineCreation(Callable, Callable)::: jdi initiator timed virtual machine creation:::result->executor->Executors->thread->Executors->defaultThreadFactory->newThread->thread->setDaemon->return->newCachedThreadPool->try->future->executor->submit->if->executor->i->processComplete->call->future->cancel->return->submit->try->future->get->catch->future->cancel->throw->finally->catch->finally->executor->shutdownNow->return
JdiInitiator#findConnector(String)::: jdi initiator find connector:::foreach->Bootstrap->virtualMachineManager->allConnectors->if->cntor->name->equals->return->return
JdiInitiator#mergeConnectorArgs(Connector, Map)::: jdi initiator merge connector args:::arguments->connector->defaultArguments->foreach->argumentName2Value->entrySet->name->argumentEntry->getKey->value->argumentEntry->getValue->argument->arguments->get->if->throw->connector->name->new->IllegalArgumentException->argument->setValue->return
JdiInitiator#launchArgs(int, String):::The JShell specific Connector args for the LaunchingConnector.:::argumentName2Value->new->HashMap<>->argumentName2Value->put->argumentName2Value->put->return
JdiInitiator#reportLaunchFail(Throwable, String)::: jdi initiator report launch fail:::return->ex->toString->new->InternalError
JdiInitiator#debug(String, Object...):::Log debugging information:::
JdiInitiator#debug(Throwable, String):::Log a serious unexpected internal exception.:::
LoaderDelegate#load(ClassBytecodes[]):::Attempts to load new classes.:::
LoaderDelegate#classesRedefined(ClassBytecodes[]):::Notify that classes have been redefined.:::
LoaderDelegate#addToClasspath(String):::Adds the path to the execution class path.:::
LoaderDelegate#findClass(String):::Finds the class with the specified binary name.:::
LocalExecutionControl#invoke(Method)::: local execution control invoke:::new->ThreadGroup->iteEx->new->AtomicReference<>->iaeEx->new->AtomicReference<>->nmeEx->new->AtomicReference<>->stopped->new->AtomicReference<>->Thread->if->if->e->getCause->stopped->set->else->iteEx->set->else->if->iaeEx->set->else->if->nmeEx->set->else->if->stopped->set->setDefaultUncaughtExceptionHandler->res->new->ObjectArr->snippetThread->try->doitMethod->new->ObjectArr->invoke->catch->if->e->getCause->stopped->set->else->iteEx->set->iaeEx->set->stopped->set->finally->new->Thread->snippetThread->start->threadList->execThreadGroup->activeCount->new->ThreadArr->execThreadGroup->enumerate->foreach->if->thread->join->if->stopped->get->throw->new->StoppedException->if->iteEx->get->throw->iteEx->get->else->if->nmeEx->get->throw->nmeEx->get->else->if->iaeEx->get->throw->iaeEx->get->return->valueString
LocalExecutionControl#stop()::: local execution control stop:::synchronized->if->return->if->throw->new->InternalException->execThreadGroup->stop
LocalExecutionControl#clientCodeEnter()::: local execution control client code enter:::synchronized
LocalExecutionControl#clientCodeLeave()::: local execution control client code leave:::synchronized
LocalExecutionControlProvider#name():::The unique name of this ExecutionControlProvider.:::return
LocalExecutionControlProvider#defaultParameters():::Create and return the default parameter map for LocalExecutionControlProvider:::return->ExecutionControlProvider.super->defaultParameters
LocalExecutionControlProvider#generate(ExecutionEnv, Map):::Create and return a locally executing ExecutionControl instance.:::return->new->LocalExecutionControl
MultiplexingOutputStream#write(int)::: multiplexing output stream write:::new->byteArr->write
MultiplexingOutputStream#write(byte[], int, int)::: multiplexing output stream write:::synchronized->i->while->size->Math->min->data->new->byteArr->System->arraycopy->System->arraycopy->delegate->write->delegate->flush
MultiplexingOutputStream#flush()::: multiplexing output stream flush:::super->flush->delegate->flush
MultiplexingOutputStream#close()::: multiplexing output stream close:::super->close->delegate->close
PipeInputStream#read()::: pipe input stream read:::if->inputNeeded->while->if->return->try->wait->catch->finally->try->return->catch->finally
PipeInputStream#read(byte[], int, int)::: pipe input stream read:::if->throw->new->NullPointerException->else->if->throw->new->IndexOutOfBoundsException->else->if->return->c->read->if->return->totalRead->while->r->read->if->break->return
PipeInputStream#inputNeeded()::: pipe input stream input needed:::
PipeInputStream#write(int)::: pipe input stream write:::if->throw->new->IllegalStateException->newEnd->if->newBuffer->new->intArr->rightPart->leftPart->System->arraycopy->System->arraycopy->notifyAll
PipeInputStream#close()::: pipe input stream close:::notifyAll
PipeInputStream#createOutput()::: pipe input stream create output:::return->new->OutputStream
RemoteExecutionControl#main(String[]):::Launch the agent, connecting to the JShell-core over the socket specified in the command-line argument.:::loopBack->socket->Integer->parseInt->new->Socket->inStream->socket->getInputStream->outStream->socket->getOutputStream->outputs->new->HashMap<>->outputs->System->new->PrintStream->setOut->put->outputs->System->new->PrintStream->setErr->put->input->new->HashMap<>->input->System->setIn->put->new->RemoteExecutionControl->forwardExecutionControlAndIO
RemoteExecutionControl#redefine(ClassBytecodes[]):::Redefine processing on the remote end is only to register the redefined classes:::classesRedefined
RemoteExecutionControl#stop()::: remote execution control stop:::
RemoteExecutionControl#invoke(Method)::: remote execution control invoke:::return->super->invoke
RemoteExecutionControl#varValue(String, String)::: remote execution control var value:::return->super->varValue
RemoteExecutionControl#throwConvertedInvocationException(Throwable)::: remote execution control throw converted invocation exception:::if->throw->new->StoppedException->else->return->super->throwConvertedInvocationException
RemoteExecutionControl#throwConvertedOtherException(Throwable)::: remote execution control throw converted other exception:::if->ex->getCause->throw->new->StoppedException->return->super->throwConvertedOtherException
RemoteExecutionControl#clientCodeEnter()::: remote execution control client code enter:::
RemoteExecutionControl#clientCodeLeave()::: remote execution control client code leave:::while->try->Thread->sleep->catch->throw->new->InternalException->finally
RemoteExecutionControl.StopExecutionException#fillInStackTrace()::: stop execution exception fill in stack trace:::return
StreamingExecutionControl#load(ClassBytecodes[])::: streaming execution control load:::try->writeCommand->out->writeObject->out->flush->readAndReportClassInstallResult->catch->throw->new->EngineTerminationException->finally
StreamingExecutionControl#redefine(ClassBytecodes[])::: streaming execution control redefine:::try->writeCommand->out->writeObject->out->flush->readAndReportClassInstallResult->catch->throw->new->EngineTerminationException->finally
StreamingExecutionControl#invoke(String, String)::: streaming execution control invoke:::try->writeCommand->out->writeUTF->out->writeUTF->out->flush->readAndReportExecutionResult->result->in->readUTF->return->catch->throw->new->EngineTerminationException->finally
StreamingExecutionControl#varValue(String, String)::: streaming execution control var value:::try->writeCommand->out->writeUTF->out->writeUTF->out->flush->readAndReportExecutionResult->result->in->readUTF->return->catch->throw->new->EngineTerminationException->finally
StreamingExecutionControl#addToClasspath(String)::: streaming execution control add to classpath:::try->writeCommand->out->writeUTF->out->flush->readAndReportClassSimpleResult->catch->throw->new->EngineTerminationException->finally
StreamingExecutionControl#stop()::: streaming execution control stop:::try->writeCommand->out->flush->catch->throw->new->EngineTerminationException->finally
StreamingExecutionControl#extensionCommand(String, Object)::: streaming execution control extension command:::try->writeCommand->out->writeObject->out->flush->readAndReportExecutionResult->result->in->readObject->return->catch->throw->new->EngineTerminationException->finally
StreamingExecutionControl#close():::Closes the execution engine:::try->writeCommand->out->flush->catch->finally
StreamingExecutionControl#writeCommand(String)::: streaming execution control write command:::out->writeInt->out->writeUTF
StreamingExecutionControl#readNullOrUTF():::Read a UTF or a null encoded as a null marker.:::s->in->readUTF->return->s->equals
StreamingExecutionControl#readAndReportClassSimpleResult():::Reports results from a remote agent command that does not expect exceptions.:::try->status->in->readInt->switch->return->message->in->readUTF->throw->new->NotImplementedException->message->in->readUTF->throw->new->InternalException->message->in->readUTF->throw->new->EngineTerminationException->throw->new->EngineTerminationException->catch->throw->ex->toString->new->EngineTerminationException->finally
StreamingExecutionControl#readAndReportClassInstallResult():::Reports results from a remote agent command that does not expect exceptions.:::try->status->in->readInt->switch->return->message->in->readUTF->throw->new->NotImplementedException->message->in->readUTF->loaded->in->readObject->throw->new->ClassInstallException->message->in->readUTF->throw->new->EngineTerminationException->throw->new->EngineTerminationException->catch->throw->ex->toString->new->EngineTerminationException->finally
StreamingExecutionControl#readAndReportExecutionResult():::Reports results from a remote agent command that expects runtime exceptions.:::try->status->in->readInt->switch->return->message->in->readUTF->throw->new->NotImplementedException->throw->readUserException->throw->readResolutionException->in->readInt->result->readUserException->caused->while->ex->cstatus->in->readInt->switch->readUserException->break->readResolutionException->break->break->throw->new->EngineTerminationException->caused->initCause->caused->initCause->throw->throw->new->StoppedException->message->in->readUTF->throw->new->InternalException->message->in->readUTF->throw->new->EngineTerminationException->throw->new->EngineTerminationException->catch->ex->printStackTrace->throw->ex->toString->new->EngineTerminationException->finally
StreamingExecutionControl#readUserException()::: streaming execution control read user exception:::message->readNullOrUTF->exceptionClassName->in->readUTF->elems->in->readObject->return->new->UserException
StreamingExecutionControl#readResolutionException()::: streaming execution control read resolution exception:::id->in->readInt->elems->in->readObject->return->new->ResolutionException
Util#forwardExecutionControl(ExecutionControl, ObjectInput, ObjectOutput):::Forward commands from the input to the specified ExecutionControl instance, then responses back on the output.:::new->ExecutionControlForwarder->commandLoop
Util#forwardExecutionControlAndIO(ExecutionControl, InputStream, OutputStream, Map>, Map>):::Forward commands from the input to the specified ExecutionControl instance, then responses back on the output.:::foreach->outputStreamMap->entrySet->e->getValue->e->getKey->multiplexingOutputStream->accept->cmdOut->multiplexingOutputStream->new->ObjectOutputStream->cmdInPipe->new->PipeInputStream->inputs->new->HashMap<>->inputs->cmdInPipe->createOutput->put->foreach->inputStreamMap->entrySet->inputSignal->e->getKey->multiplexingOutputStream->inputPipe->new->PipeInputStream->inputs->e->getKey->inputPipe->createOutput->put->e->getValue->accept->inputs->values->new->DemultiplexInput->start->cmdIn->new->ObjectInputStream->forwardExecutionControl
Util#multiplexingOutputStream(String, OutputStream)::: util multiplexing output stream:::return->new->MultiplexingOutputStream
Util#remoteInputOutput(InputStream, OutputStream, Map, Map, BiFunction):::Creates an ExecutionControl for given packetized input and output:::result->new->ExecutionControlArr->augmentedStreamMap->new->HashMap<>->commandOut->Util->multiplexingOutputStream->new->ObjectOutputStream->foreach->inputStreamMap->entrySet->in->e->getValue->inTarget->Util->e->getKey->multiplexingOutputStream->augmentedStreamMap->e->getKey->new->OutputStream->put->commandIn->new->PipeInputStream->commandInTarget->commandIn->createOutput->augmentedStreamMap->put->Arrays->asList->new->DemultiplexInput->start->return->factory->new->ObjectInputStream->apply
Util#detectJdiExitEvent(VirtualMachine, Consumer):::Monitor the JDI event stream for com.sun.jdi.event.VMDeathEvent and com.sun.jdi.event.VMDisconnectEvent:::if->vm->canBeModified->new->JdiEventHandler->start
Util#debug(Throwable, String):::Log a serious unexpected internal exception.:::
