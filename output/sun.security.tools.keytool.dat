CertAndKeyGen#setRandom(SecureRandom):::Sets the source of random numbers used when generating keys:::
CertAndKeyGen#generate(int):::Generates a random public/private key pair, with a given key size:::pair->try->if->new->SecureRandom->keyGen->initialize->keyGen->generateKeyPair->catch->throw->e->getMessage->new->IllegalArgumentException->finally->pair->getPublic->pair->getPrivate->if->publicKey->getFormat->equalsIgnoreCase->throw->publicKey->getFormat->new->IllegalArgumentException->if->AlgorithmId->getDefaultSigAlgForKey->if->throw->privateKey->getAlgorithm->new->IllegalArgumentException
CertAndKeyGen#getPublicKey():::Returns the public key of the generated key pair if it is of type X509Key, or null if the public key is of a different type:::if->return->return
CertAndKeyGen#getPublicKeyAnyway():::Always returns the public key of the generated key pair:::return
CertAndKeyGen#getPrivateKey():::Returns the private key of the generated key pair:::return
CertAndKeyGen#getSelfCertificate(X500Name, Date, long):::Returns a self-signed X.509v3 certificate for the public key:::return->getSelfCertificate
CertAndKeyGen#getCertRequest(X500Name):::Returns a PKCS #10 certificate request:::req->new->PKCS10->try->signature->Signature->getInstance->signature->initSign->req->encodeAndSign->catch->throw->new->SignatureException->throw->new->SignatureException->throw->new->SignatureException->finally->return
Main#parseArgs(String[]):::Parse command line arguments.:::i->help->confFile->optionsSet->new->HashSet<>->for->if->KeyStoreUtil->command->toString->command->getAltName->expandArgs->Arrays->stream->collator->compare->anyMatch->if->Arrays->toString->println->for->startsWith->if->rb->getString->println->tinyHelp->if->if->usage->else->rb->getString->println->tinyHelp->else->if->usage->return
Main#doCommands(PrintStream):::Execute the commands.:::if->if->throw->rb->getString->new->IllegalArgumentException->KeyStoreUtil->getCacerts->if->P11KEYSTORE->equalsIgnoreCase->KeyStoreUtil->isWindowsKeyStore->if->if->NONE->equals->if->MessageFormat->rb->getString->format->println->println->tinyHelp->if->throw->MessageFormat->rb->getString->format->new->UnsupportedOperationException->if->throw->MessageFormat->rb->getString->format->new->IllegalArgumentException->if->if->throw->rb->getString->new->IllegalArgumentException->if->if->throw->rb->getString->new->IllegalArgumentException->if->KeyStoreUtil->isWindowsKeyStore->if->throw->rb->getString->new->IllegalArgumentException->if->KeyStoreUtil->isWindowsKeyStore->if->throw->rb->getString->new->IllegalArgumentException->if->throw->rb->getString->new->Exception->if->foreach->try->KeyStoreUtil->loadProviderByName->if->println->catch->throw->String->rb->getString->format->new->Exception->finally->if->cl->if->path->PathList->System->getProperty->appendPath->PathList->System->getProperty->appendPath->PathList->appendPath->urls->PathList->pathToURLs->new->URLClassLoader->else->ClassLoader->getSystemClassLoader->foreach->try->KeyStoreUtil->loadProviderByClass->if->println->catch->throw->String->rb->getString->format->new->Exception->throw->String->rb->getString->format->e->getCause->new->Exception->finally->if->rb->getString->println->tinyHelp->if->throw->rb->getString->new->Exception->if->throw->rb->getString->new->Exception->if->throw->rb->getString->new->Exception->if->System->getProperty->srcKeyStore->if->inplaceImportCheck->if->loadSourceKeyStore->if->if->isKeyStoreRelated->try->new->File->if->ksfile->exists->ksfile->length->throw->rb->getString->new->Exception->new->FileInputStream->catch->if->throw->rb->getString->new->Exception->finally->if->getAlias->if->equals->throw->rb->getString->new->Exception->if->getAlias->if->equals->throw->rb->getString->new->Exception->if->KeyStore->getInstance->keyStore->getType->else->if->KeyStore->getDefaultType->if->KeyStore->getInstance->else->KeyStore->getInstance->if->if->keyStore->load->else->keyStore->load->if->ksStream->close->if->P12KEYSTORE->equalsIgnoreCase->throw->rb->getString->new->UnsupportedOperationException->if->keyStore->load->else->if->if->throw->rb->getString->new->Exception->else->if->if->KeyStoreUtil->isWindowsKeyStore->count->do->if->rb->getString->print->else->rb->getString->print->flush->Password->readPassword->passwords->add->if->rb->getString->println->if->rb->getString->print->storePassAgain->Password->readPassword->passwords->add->if->Arrays->equals->rb->getString->println->while->if->rb->getString->println->return->else->if->KeyStoreUtil->isWindowsKeyStore->isKeyStoreRelated->if->rb->getString->print->flush->Password->readPassword->passwords->add->if->keyStore->load->else->if->new->FileInputStream->keyStore->load->ksStream->close->if->P12KEYSTORE->equalsIgnoreCase->form->rb->getString->new->MessageFormat->if->Arrays->equals->source->form->format->println->if->Arrays->equals->source->form->format->println->if->CertificateFactory->getInstance->if->if->KeyStoreUtil->getCacertsKeyStore->if->if->try->ps->new->FileOutputStream->new->PrintStream->doCertReq->catch->finally->else->doCertReq->if->form->rb->getString->new->MessageFormat->source->form->format->println->rb->getString->println->else->if->doDeleteEntry->else->if->if->try->ps->new->FileOutputStream->new->PrintStream->doExportCert->catch->finally->else->doExportCert->if->form->rb->getString->new->MessageFormat->source->form->format->println->else->if->if->doGenKeyPair->else->if->if->doGenSecretKey->else->if->if->doGenSecretKey->else->if->if->try->inStream->new->FileInputStream->doImportIdentityDatabase->catch->finally->else->doImportIdentityDatabase->else->if->inStream->if->new->FileInputStream->importAlias->try->if->keyStore->entryInstanceOf->installReply->if->rb->getString->println->else->rb->getString->println->else->if->keyStore->containsAlias->keyStore->entryInstanceOf->addTrustedCert->if->rb->getString->println->else->rb->getString->println->catch->finally->if->inStream->close->else->if->if->loadSourceKeyStore->doImportKeyStore->else->if->if->if->keyStore->containsAlias->form->rb->getString->new->MessageFormat->source->throw->form->format->new->Exception->if->keyStore->entryInstanceOf->form->rb->getString->new->MessageFormat->source->throw->form->format->new->Exception->doCloneEntry->else->if->if->doCloneEntry->if->keyStore->containsAlias->doDeleteEntry->else->if->doChangeKeyPasswd->else->if->if->KeyStoreUtil->isWindowsKeyStore->printNoIntegrityWarning->if->rb->getString->doPrintEntry->else->doPrintEntries->else->if->doPrintCert->else->if->doSelfCert->else->if->doChangeStorePasswd->else->if->if->inStream->if->new->FileInputStream->ps->if->new->FileOutputStream->new->PrintStream->try->doGenCert->catch->finally->if->inStream->close->if->ps->close->else->if->if->if->try->ps->new->FileOutputStream->new->PrintStream->doGenCRL->catch->finally->else->doGenCRL->else->if->if->try->inStream->new->FileInputStream->doPrintCertReq->catch->finally->else->doPrintCertReq->else->if->doPrintCRL->if->if->form->rb->getString->new->MessageFormat->source->form->format->println->if->keyStore->store->else->pass->if->keyStore->store->else->bout->new->ByteArrayOutputStream->keyStore->store->try->fout->new->FileOutputStream->fout->bout->toByteArray->write->catch->finally->if->isKeyStoreRelated->f->new->File->pass->if->f->exists->realType->try->KeyStore->getInstance->keyStore->getType->if->realType->equalsIgnoreCase->realType->equalsIgnoreCase->allCerts->foreach->Collections->keyStore->aliases->list->if->keyStore->entryInstanceOf->break->if->weakWarnings->String->rb->getString->format->add->catch->finally->if->realSourceStoreType->try->KeyStore->new->File->getInstance->getType->catch->finally->format->realType->equalsIgnoreCase->rb->getString->rb->getString->weakWarnings->String->format->add
Main#loadSourceKeyStore():::Load the srckeystore from a stream, used in -importkeystore:::is->srcksfile->if->P11KEYSTORE->equalsIgnoreCase->KeyStoreUtil->isWindowsKeyStore->if->NONE->equals->MessageFormat->rb->getString->format->println->println->tinyHelp->else->new->File->new->FileInputStream->store->try->if->KeyStore->getInstance->store->getType->else->if->KeyStore->getDefaultType->if->KeyStore->getInstance->else->KeyStore->getInstance->if->KeyStoreUtil->isWindowsKeyStore->rb->getString->print->flush->Password->readPassword->passwords->add->if->P12KEYSTORE->equalsIgnoreCase->if->Arrays->equals->form->rb->getString->new->MessageFormat->source->form->format->println->store->load->catch->finally->if->is->close->if->KeyStoreUtil->isWindowsKeyStore->println->rb->getString->println->rb->getString->println->rb->getString->println->println->return
Main#loadCRLs(String):::Loads CRLs from a source:::in->uri->if->else->try->new->URI->if->uri->getScheme->equals->else->uri->toURL->openStream->catch->try->new->FileInputStream->catch->if->uri->getScheme->throw->else->throw->finally->finally->if->try->bout->new->ByteArrayOutputStream->b->new->byteArr->while->len->in->read->if->break->bout->write->return->CertificateFactory->getInstance->bout->toByteArray->new->ByteArrayInputStream->generateCRLs->catch->finally->if->in->close->else->params->new->URICertStoreParameters->s->CertStore->getInstance->return->s->new->X509CRLSelector->getCRLs
Main#readCRLsFromCert(X509Certificate):::Returns CRLs described in a X509Certificate's CRLDistributionPoints Extension:::crls->new->ArrayList<>->ext->X509CertImpl->toImpl->getCRLDistributionPointsExtension->if->return->distPoints->ext->get->foreach->names->o->getFullName->if->foreach->names->names->if->name->getType->uriName->name->getName->foreach->uriName->getName->loadCRLs->if->crls->add->break->return
Resources#getContents():::Returns the contents of this ResourceBundle:::return
Resources_ja#getContents():::Returns the contents of this ResourceBundle:::return
Resources_zh_CN#getContents():::Returns the contents of this ResourceBundle:::return
