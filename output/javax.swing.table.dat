javax.swing.table.AbstractTableModel#getColumnName(int)->String::: Returns a default name for the column using spreadsheet conventions:  A, B, C, ..
javax.swing.table.AbstractTableModel#findColumn(String)->int:::Returns a column given its name
javax.swing.table.AbstractTableModel#getColumnClass(int)->Class::: Returns Object.class regardless of columnIndex.
javax.swing.table.AbstractTableModel#isCellEditable(int, int)->boolean::: Returns false
javax.swing.table.AbstractTableModel#setValueAt(Object, int, int)->void::: This empty implementation is provided so users don't have to implement  this method if their data model is not editable.
javax.swing.table.AbstractTableModel#addTableModelListener(TableModelListener)->void:::Adds a listener to the list that's notified each time a change to the data model occurs.
javax.swing.table.AbstractTableModel#removeTableModelListener(TableModelListener)->void:::Removes a listener from the list that's notified each time a change to the data model occurs.
javax.swing.table.AbstractTableModel#getTableModelListeners()->TableModelListener[]:::Returns an array of all the table model listeners registered on this model.
javax.swing.table.AbstractTableModel#fireTableDataChanged()->void:::Notifies all listeners that all cell values in the table's rows may have changed
javax.swing.table.AbstractTableModel#fireTableStructureChanged()->void:::Notifies all listeners that the table's structure has changed
javax.swing.table.AbstractTableModel#fireTableRowsInserted(int, int)->void:::Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been inserted.
javax.swing.table.AbstractTableModel#fireTableRowsUpdated(int, int)->void:::Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been updated.
javax.swing.table.AbstractTableModel#fireTableRowsDeleted(int, int)->void:::Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been deleted.
javax.swing.table.AbstractTableModel#fireTableCellUpdated(int, int)->void:::Notifies all listeners that the value of the cell at [row, column] has been updated.
javax.swing.table.AbstractTableModel#fireTableChanged(TableModelEvent)->void:::Forwards the given notification event to all TableModelListeners that registered themselves as listeners for this table model.
javax.swing.table.AbstractTableModel#getListeners(Class)->T[]:::Returns an array of all the objects currently registered as FooListeners upon this AbstractTableModel
javax.swing.table.DefaultTableCellRenderer#setForeground(Color)->void:::Overrides JComponent.setForeground to assign the unselected-foreground color to the specified color.
javax.swing.table.DefaultTableCellRenderer#setBackground(Color)->void:::Overrides JComponent.setBackground to assign the unselected-background color to the specified color.
javax.swing.table.DefaultTableCellRenderer#updateUI()->void:::Notification from the UIManager that the look and feel [L&amp;F] has changed
javax.swing.table.DefaultTableCellRenderer#getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)->Component:::Returns the default table cell renderer
javax.swing.table.DefaultTableCellRenderer#isOpaque()->boolean:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#invalidate()->void:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#validate()->void:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#revalidate()->void:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#repaint(long, int, int, int, int)->void:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#repaint(Rectangle)->void:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#repaint()->void:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#firePropertyChange(String, Object, Object)->void:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#firePropertyChange(String, boolean, boolean)->void:::Overridden for performance reasons
javax.swing.table.DefaultTableCellRenderer#setValue(Object)->void:::Sets the String object for the cell being rendered to value.
javax.swing.table.DefaultTableColumnModel#addColumn(TableColumn)->void::: Appends aColumn to the end of the  tableColumns array
javax.swing.table.DefaultTableColumnModel#removeColumn(TableColumn)->void::: Deletes the column from the  tableColumns array
javax.swing.table.DefaultTableColumnModel#moveColumn(int, int)->void:::Moves the column and heading at columnIndex to newIndex
javax.swing.table.DefaultTableColumnModel#setColumnMargin(int)->void:::Sets the column margin to newMargin
javax.swing.table.DefaultTableColumnModel#getColumnCount()->int:::Returns the number of columns in the tableColumns array.
javax.swing.table.DefaultTableColumnModel#getColumns()->Enumeration:::Returns an Enumeration of all the columns in the model.
javax.swing.table.DefaultTableColumnModel#getColumnIndex(Object)->int:::Returns the index of the first column in the tableColumns array whose identifier is equal to identifier, when compared using equals.
javax.swing.table.DefaultTableColumnModel#getColumn(int)->TableColumn:::Returns the TableColumn object for the column at columnIndex.
javax.swing.table.DefaultTableColumnModel#getColumnMargin()->int:::Returns the width margin for TableColumn
javax.swing.table.DefaultTableColumnModel#getColumnIndexAtX(int)->int:::Returns the index of the column that lies at position x, or -1 if no column covers this point
javax.swing.table.DefaultTableColumnModel#getTotalColumnWidth()->int:::Returns the total combined width of all columns.
javax.swing.table.DefaultTableColumnModel#setSelectionModel(ListSelectionModel)->void::: Sets the selection model for this TableColumnModel  to newModel  and registers for listener notifications from the new selection  model
javax.swing.table.DefaultTableColumnModel#getSelectionModel()->ListSelectionModel:::Returns the ListSelectionModel that is used to maintain column selection state.
javax.swing.table.DefaultTableColumnModel#setColumnSelectionAllowed(boolean)->void:::Sets whether column selection is allowed
javax.swing.table.DefaultTableColumnModel#getColumnSelectionAllowed()->boolean:::Returns true if column selection is allowed, otherwise false
javax.swing.table.DefaultTableColumnModel#getSelectedColumns()->int[]:::Returns an array of selected columns
javax.swing.table.DefaultTableColumnModel#getSelectedColumnCount()->int:::Returns the number of columns selected.
javax.swing.table.DefaultTableColumnModel#addColumnModelListener(TableColumnModelListener)->void:::Adds a listener for table column model events.
javax.swing.table.DefaultTableColumnModel#removeColumnModelListener(TableColumnModelListener)->void:::Removes a listener for table column model events.
javax.swing.table.DefaultTableColumnModel#getColumnModelListeners()->TableColumnModelListener[]:::Returns an array of all the column model listeners registered on this model.
javax.swing.table.DefaultTableColumnModel#fireColumnAdded(TableColumnModelEvent)->void:::Notifies all listeners that have registered interest for notification on this event type
javax.swing.table.DefaultTableColumnModel#fireColumnRemoved(TableColumnModelEvent)->void:::Notifies all listeners that have registered interest for notification on this event type
javax.swing.table.DefaultTableColumnModel#fireColumnMoved(TableColumnModelEvent)->void:::Notifies all listeners that have registered interest for notification on this event type
javax.swing.table.DefaultTableColumnModel#fireColumnSelectionChanged(ListSelectionEvent)->void:::Notifies all listeners that have registered interest for notification on this event type
javax.swing.table.DefaultTableColumnModel#fireColumnMarginChanged()->void:::Notifies all listeners that have registered interest for notification on this event type
javax.swing.table.DefaultTableColumnModel#getListeners(Class)->T[]:::Returns an array of all the objects currently registered as FooListeners upon this model
javax.swing.table.DefaultTableColumnModel#propertyChange(PropertyChangeEvent)->void:::Property Change Listener change method
javax.swing.table.DefaultTableColumnModel#valueChanged(ListSelectionEvent)->void:::A ListSelectionListener that forwards ListSelectionEvents when there is a column selection change.
javax.swing.table.DefaultTableColumnModel#createSelectionModel()->ListSelectionModel:::Creates a new default list selection model.
javax.swing.table.DefaultTableColumnModel#recalcWidthCache()->void:::Recalculates the total combined width of all columns
javax.swing.table.DefaultTableModel#getDataVector()->Vector::: Returns the Vector of Vectors  that contains the table's  data values
javax.swing.table.DefaultTableModel#setDataVector(Vector, Vector)->void::: Replaces the current dataVector instance variable  with the new Vector of rows, dataVector
javax.swing.table.DefaultTableModel#setDataVector(Object[][], Object[])->void::: Replaces the value in the dataVector instance  variable with the values in the array dataVector
javax.swing.table.DefaultTableModel#newDataAvailable(TableModelEvent)->void::: Equivalent to fireTableChanged.
javax.swing.table.DefaultTableModel#newRowsAdded(TableModelEvent)->void::: Ensures that the new rows have the correct number of columns
javax.swing.table.DefaultTableModel#rowsRemoved(TableModelEvent)->void::: Equivalent to fireTableChanged.
javax.swing.table.DefaultTableModel#setNumRows(int)->void:::Obsolete as of Java 2 platform v1.3
javax.swing.table.DefaultTableModel#setRowCount(int)->void::: Sets the number of rows in the model
javax.swing.table.DefaultTableModel#addRow(Vector)->void::: Adds a row to the end of the model
javax.swing.table.DefaultTableModel#addRow(Object[])->void::: Adds a row to the end of the model
javax.swing.table.DefaultTableModel#insertRow(int, Vector)->void::: Inserts a row at row in the model
javax.swing.table.DefaultTableModel#insertRow(int, Object[])->void::: Inserts a row at row in the model
javax.swing.table.DefaultTableModel#moveRow(int, int, int)->void::: Moves one or more rows from the inclusive range start to  end to the to position in the model
javax.swing.table.DefaultTableModel#removeRow(int)->void::: Removes the row at row from the model
javax.swing.table.DefaultTableModel#setColumnIdentifiers(Vector)->void:::Replaces the column identifiers in the model
javax.swing.table.DefaultTableModel#setColumnIdentifiers(Object[])->void:::Replaces the column identifiers in the model
javax.swing.table.DefaultTableModel#setColumnCount(int)->void::: Sets the number of columns in the model
javax.swing.table.DefaultTableModel#addColumn(Object)->void::: Adds a column to the model
javax.swing.table.DefaultTableModel#addColumn(Object, Vector)->void::: Adds a column to the model
javax.swing.table.DefaultTableModel#addColumn(Object, Object[])->void::: Adds a column to the model
javax.swing.table.DefaultTableModel#getRowCount()->int:::Returns the number of rows in this data table.
javax.swing.table.DefaultTableModel#getColumnCount()->int:::Returns the number of columns in this data table.
javax.swing.table.DefaultTableModel#getColumnName(int)->String:::Returns the column name.
javax.swing.table.DefaultTableModel#isCellEditable(int, int)->boolean:::Returns true regardless of parameter values.
javax.swing.table.DefaultTableModel#getValueAt(int, int)->Object:::Returns an attribute value for the cell at row and column.
javax.swing.table.DefaultTableModel#setValueAt(Object, int, int)->void:::Sets the object value for the cell at column and row
javax.swing.table.DefaultTableModel#convertToVector(Object[])->Vector:::Returns a vector that contains the same objects as the array.
javax.swing.table.DefaultTableModel#convertToVector(Object[][])->Vector>:::Returns a vector of vectors that contains the same objects as the array.
javax.swing.table.JTableHeader#setTable(JTable)->void::: Sets the table associated with this header.
javax.swing.table.JTableHeader#getTable()->JTable::: Returns the table associated with this header.
javax.swing.table.JTableHeader#setReorderingAllowed(boolean)->void::: Sets whether the user can drag column headers to reorder columns.
javax.swing.table.JTableHeader#getReorderingAllowed()->boolean:::Returns true if the user is allowed to rearrange columns by dragging their headers, false otherwise
javax.swing.table.JTableHeader#setResizingAllowed(boolean)->void::: Sets whether the user can resize columns by dragging between headers.
javax.swing.table.JTableHeader#getResizingAllowed()->boolean:::Returns true if the user is allowed to resize columns by dragging between their headers, false otherwise
javax.swing.table.JTableHeader#getDraggedColumn()->TableColumn:::Returns the dragged column, if and only if, a drag is in process, otherwise returns null.
javax.swing.table.JTableHeader#getDraggedDistance()->int:::Returns the column's horizontal distance from its original position, if and only if, a drag is in process
javax.swing.table.JTableHeader#getResizingColumn()->TableColumn:::Returns the resizing column
javax.swing.table.JTableHeader#setUpdateTableInRealTime(boolean)->void:::Obsolete as of Java 2 platform v1.3
javax.swing.table.JTableHeader#getUpdateTableInRealTime()->boolean:::Obsolete as of Java 2 platform v1.3
javax.swing.table.JTableHeader#setDefaultRenderer(TableCellRenderer)->void:::Sets the default renderer to be used when no headerRenderer is defined by a TableColumn.
javax.swing.table.JTableHeader#getDefaultRenderer()->TableCellRenderer:::Returns the default renderer used when no headerRenderer is defined by a TableColumn.
javax.swing.table.JTableHeader#columnAtPoint(Point)->int:::Returns the index of the column that point lies in, or -1 if it lies out of bounds.
javax.swing.table.JTableHeader#getHeaderRect(int)->Rectangle:::Returns the rectangle containing the header tile at column
javax.swing.table.JTableHeader#getToolTipText(MouseEvent)->String:::Allows the renderer's tips to be used if there is text set.
javax.swing.table.JTableHeader#getPreferredSize()->Dimension:::Returns the preferred size of the table header
javax.swing.table.JTableHeader#getUI()->TableHeaderUI:::Returns the look and feel (L&amp;F) object that renders this component.
javax.swing.table.JTableHeader#setUI(TableHeaderUI)->void:::Sets the look and feel (L&amp;F) object that renders this component.
javax.swing.table.JTableHeader#updateUI()->void:::Notification from the UIManager that the look and feel (L&amp;F) has changed
javax.swing.table.JTableHeader#getUIClassID()->String:::Returns the suffix used to construct the name of the look and feel (L&amp;F) class used to render this component.
javax.swing.table.JTableHeader#setColumnModel(TableColumnModel)->void::: Sets the column model for this table to newModel and registers  for listener notifications from the new column model.
javax.swing.table.JTableHeader#getColumnModel()->TableColumnModel:::Returns the TableColumnModel that contains all column information of this table header.
javax.swing.table.JTableHeader#columnAdded(TableColumnModelEvent)->void:::Invoked when a column is added to the table column model
javax.swing.table.JTableHeader#columnRemoved(TableColumnModelEvent)->void:::Invoked when a column is removed from the table column model
javax.swing.table.JTableHeader#columnMoved(TableColumnModelEvent)->void:::Invoked when a column is repositioned
javax.swing.table.JTableHeader#columnMarginChanged(ChangeEvent)->void:::Invoked when a column is moved due to a margin change
javax.swing.table.JTableHeader#columnSelectionChanged(ListSelectionEvent)->void::: table header column selection changed
javax.swing.table.JTableHeader#createDefaultColumnModel()->TableColumnModel::: Returns the default column model object which is  a DefaultTableColumnModel
javax.swing.table.JTableHeader#createDefaultRenderer()->TableCellRenderer::: Returns a default renderer to be used when no header renderer  is defined by a TableColumn.
javax.swing.table.JTableHeader#initializeLocalVars()->void:::Initializes the local variables and properties with default values
javax.swing.table.JTableHeader#resizeAndRepaint()->void:::Sizes the header and marks it as needing display
javax.swing.table.JTableHeader#setDraggedColumn(TableColumn)->void::: Sets the header's draggedColumn to aColumn
javax.swing.table.JTableHeader#setDraggedDistance(int)->void::: Sets the header's draggedDistance to distance.
javax.swing.table.JTableHeader#setResizingColumn(TableColumn)->void::: Sets the header's resizingColumn to aColumn
javax.swing.table.JTableHeader#paramString()->String:::Returns a string representation of this JTableHeader
javax.swing.table.JTableHeader#getAccessibleContext()->AccessibleContext:::Gets the AccessibleContext associated with this JTableHeader
javax.swing.table.JTableHeader.AccessibleJTableHeader#getAccessibleRole()->AccessibleRole:::Get the role of this object.
javax.swing.table.JTableHeader.AccessibleJTableHeader#getAccessibleAt(Point)->Accessible:::Returns the Accessible child, if one exists, contained at the local coordinate Point.
javax.swing.table.JTableHeader.AccessibleJTableHeader#getAccessibleChildrenCount()->int:::Returns the number of accessible children in the object
javax.swing.table.JTableHeader.AccessibleJTableHeader#getAccessibleChild(int)->Accessible:::Return the nth Accessible child of the object.
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleContext()->AccessibleContext:::Get the AccessibleContext associated with this object
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleName()->String::: accessible table header entry get accessible name
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setAccessibleName(String)->void::: accessible table header entry set accessible name
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleDescription()->String::: accessible table header entry get accessible description
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setAccessibleDescription(String)->void::: accessible table header entry set accessible description
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleRole()->AccessibleRole::: accessible table header entry get accessible role
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleStateSet()->AccessibleStateSet::: accessible table header entry get accessible state set
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleIndexInParent()->int::: accessible table header entry get accessible index in parent
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleChildrenCount()->int::: accessible table header entry get accessible children count
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleChild(int)->Accessible::: accessible table header entry get accessible child
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getLocale()->Locale::: accessible table header entry get locale
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#addPropertyChangeListener(PropertyChangeListener)->void::: accessible table header entry add property change listener
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#removePropertyChangeListener(PropertyChangeListener)->void::: accessible table header entry remove property change listener
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleAction()->AccessibleAction::: accessible table header entry get accessible action
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleComponent()->AccessibleComponent:::Get the AccessibleComponent associated with this object
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleSelection()->AccessibleSelection::: accessible table header entry get accessible selection
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleText()->AccessibleText::: accessible table header entry get accessible text
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleValue()->AccessibleValue::: accessible table header entry get accessible value
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getBackground()->Color::: accessible table header entry get background
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setBackground(Color)->void::: accessible table header entry set background
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getForeground()->Color::: accessible table header entry get foreground
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setForeground(Color)->void::: accessible table header entry set foreground
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getCursor()->Cursor::: accessible table header entry get cursor
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setCursor(Cursor)->void::: accessible table header entry set cursor
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getFont()->Font::: accessible table header entry get font
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setFont(Font)->void::: accessible table header entry set font
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getFontMetrics(Font)->FontMetrics::: accessible table header entry get font metrics
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#isEnabled()->boolean::: accessible table header entry is enabled
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setEnabled(boolean)->void::: accessible table header entry set enabled
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#isVisible()->boolean::: accessible table header entry is visible
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setVisible(boolean)->void::: accessible table header entry set visible
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#isShowing()->boolean::: accessible table header entry is showing
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#contains(Point)->boolean::: accessible table header entry contains
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getLocationOnScreen()->Point::: accessible table header entry get location on screen
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getLocation()->Point::: accessible table header entry get location
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setLocation(Point)->void::: accessible table header entry set location
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getBounds()->Rectangle::: accessible table header entry get bounds
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setBounds(Rectangle)->void::: accessible table header entry set bounds
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getSize()->Dimension::: accessible table header entry get size
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#setSize(Dimension)->void::: accessible table header entry set size
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#getAccessibleAt(Point)->Accessible::: accessible table header entry get accessible at
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#isFocusTraversable()->boolean::: accessible table header entry is focus traversable
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#requestFocus()->void::: accessible table header entry request focus
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#addFocusListener(FocusListener)->void::: accessible table header entry add focus listener
javax.swing.table.JTableHeader.AccessibleJTableHeader.AccessibleJTableHeaderEntry#removeFocusListener(FocusListener)->void::: accessible table header entry remove focus listener
javax.swing.table.TableCellEditor#getTableCellEditorComponent(JTable, Object, boolean, int, int)->Component::: Sets an initial value for the editor
javax.swing.table.TableCellRenderer#getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)->Component:::Returns the component used for drawing the cell
javax.swing.table.TableColumn#setModelIndex(int)->void:::Sets the model index for this column
javax.swing.table.TableColumn#getModelIndex()->int:::Returns the model index for this column.
javax.swing.table.TableColumn#setIdentifier(Object)->void:::Sets the TableColumn's identifier to anIdentifier
javax.swing.table.TableColumn#getIdentifier()->Object::: Returns the identifier object for this column
javax.swing.table.TableColumn#setHeaderValue(Object)->void:::Sets the Object whose string representation will be used as the value for the headerRenderer
javax.swing.table.TableColumn#getHeaderValue()->Object:::Returns the Object used as the value for the header renderer.
javax.swing.table.TableColumn#setHeaderRenderer(TableCellRenderer)->void:::Sets the TableCellRenderer used to draw the TableColumn's header to headerRenderer
javax.swing.table.TableColumn#getHeaderRenderer()->TableCellRenderer:::Returns the TableCellRenderer used to draw the header of the TableColumn
javax.swing.table.TableColumn#setCellRenderer(TableCellRenderer)->void:::Sets the TableCellRenderer used by JTable to draw individual values for this column.
javax.swing.table.TableColumn#getCellRenderer()->TableCellRenderer:::Returns the TableCellRenderer used by the JTable to draw values for this column
javax.swing.table.TableColumn#setCellEditor(TableCellEditor)->void:::Sets the editor to used by when a cell in this column is edited.
javax.swing.table.TableColumn#getCellEditor()->TableCellEditor:::Returns the TableCellEditor used by the JTable to edit values for this column
javax.swing.table.TableColumn#setWidth(int)->void:::This method should not be used to set the widths of columns in the JTable, use setPreferredWidth instead
javax.swing.table.TableColumn#getWidth()->int:::Returns the width of the TableColumn
javax.swing.table.TableColumn#setPreferredWidth(int)->void:::Sets this column's preferred width to preferredWidth
javax.swing.table.TableColumn#getPreferredWidth()->int:::Returns the preferred width of the TableColumn
javax.swing.table.TableColumn#setMinWidth(int)->void:::Sets the TableColumn's minimum width to minWidth, adjusting the new minimum width if necessary to ensure that 0 &lt;= minWidth &lt;= maxWidth
javax.swing.table.TableColumn#getMinWidth()->int:::Returns the minimum width for the TableColumn
javax.swing.table.TableColumn#setMaxWidth(int)->void:::Sets the TableColumn's maximum width to maxWidth or, if maxWidth is less than the minimum width, to the minimum width
javax.swing.table.TableColumn#getMaxWidth()->int:::Returns the maximum width for the TableColumn
javax.swing.table.TableColumn#setResizable(boolean)->void:::Sets whether this column can be resized.
javax.swing.table.TableColumn#getResizable()->boolean:::Returns true if the user is allowed to resize the TableColumn's width, false otherwise
javax.swing.table.TableColumn#sizeWidthToFit()->void:::Resizes the TableColumn to fit the width of its header cell
javax.swing.table.TableColumn#disableResizedPosting()->void:::This field was not used in previous releases and there are currently no plans to support it in the future.
javax.swing.table.TableColumn#enableResizedPosting()->void:::This field was not used in previous releases and there are currently no plans to support it in the future.
javax.swing.table.TableColumn#addPropertyChangeListener(PropertyChangeListener)->void:::Adds a PropertyChangeListener to the listener list
javax.swing.table.TableColumn#removePropertyChangeListener(PropertyChangeListener)->void::: table column remove property change listener
javax.swing.table.TableColumn#getPropertyChangeListeners()->PropertyChangeListener[]:::Returns an array of all the PropertyChangeListeners added to this TableColumn with addPropertyChangeListener().
javax.swing.table.TableColumn#createDefaultHeaderRenderer()->TableCellRenderer:::As of Java 2 platform v1.3, this method is not called by the TableColumn constructor
javax.swing.table.TableColumnModel#addColumn(TableColumn)->void::: Appends aColumn to the end of the  tableColumns array
javax.swing.table.TableColumnModel#removeColumn(TableColumn)->void::: Deletes the TableColumn column from the  tableColumns array
javax.swing.table.TableColumnModel#moveColumn(int, int)->void:::Moves the column and its header at columnIndex to newIndex
javax.swing.table.TableColumnModel#setColumnMargin(int)->void:::Sets the TableColumn's column margin to newMargin
javax.swing.table.TableColumnModel#getColumnCount()->int:::Returns the number of columns in the model.
javax.swing.table.TableColumnModel#getColumns()->Enumeration:::Returns an Enumeration of all the columns in the model.
javax.swing.table.TableColumnModel#getColumnIndex(Object)->int:::Returns the index of the first column in the table whose identifier is equal to identifier, when compared using equals.
javax.swing.table.TableColumnModel#getColumn(int)->TableColumn:::Returns the TableColumn object for the column at columnIndex.
javax.swing.table.TableColumnModel#getColumnMargin()->int:::Returns the width between the cells in each column.
javax.swing.table.TableColumnModel#getColumnIndexAtX(int)->int:::Returns the index of the column that lies on the horizontal point, xPosition; or -1 if it lies outside the any of the column's bounds
javax.swing.table.TableColumnModel#getTotalColumnWidth()->int:::Returns the total width of all the columns.
javax.swing.table.TableColumnModel#setColumnSelectionAllowed(boolean)->void:::Sets whether the columns in this model may be selected.
javax.swing.table.TableColumnModel#getColumnSelectionAllowed()->boolean:::Returns true if columns may be selected.
javax.swing.table.TableColumnModel#getSelectedColumns()->int[]:::Returns an array of indicies of all selected columns.
javax.swing.table.TableColumnModel#getSelectedColumnCount()->int:::Returns the number of selected columns.
javax.swing.table.TableColumnModel#setSelectionModel(ListSelectionModel)->void:::Sets the selection model.
javax.swing.table.TableColumnModel#getSelectionModel()->ListSelectionModel:::Returns the current selection model.
javax.swing.table.TableColumnModel#addColumnModelListener(TableColumnModelListener)->void:::Adds a listener for table column model events.
javax.swing.table.TableColumnModel#removeColumnModelListener(TableColumnModelListener)->void:::Removes a listener for table column model events.
javax.swing.table.TableModel#getRowCount()->int:::Returns the number of rows in the model
javax.swing.table.TableModel#getColumnCount()->int:::Returns the number of columns in the model
javax.swing.table.TableModel#getColumnName(int)->String:::Returns the name of the column at columnIndex
javax.swing.table.TableModel#getColumnClass(int)->Class:::Returns the most specific superclass for all the cell values in the column
javax.swing.table.TableModel#isCellEditable(int, int)->boolean:::Returns true if the cell at rowIndex and columnIndex is editable
javax.swing.table.TableModel#getValueAt(int, int)->Object:::Returns the value for the cell at columnIndex and rowIndex.
javax.swing.table.TableModel#setValueAt(Object, int, int)->void:::Sets the value in the cell at columnIndex and rowIndex to aValue.
javax.swing.table.TableModel#addTableModelListener(TableModelListener)->void:::Adds a listener to the list that is notified each time a change to the data model occurs.
javax.swing.table.TableModel#removeTableModelListener(TableModelListener)->void:::Removes a listener from the list that is notified each time a change to the data model occurs.
javax.swing.table.TableRowSorter#setModel(M)->void:::Sets the TableModel to use as the underlying model for this TableRowSorter
javax.swing.table.TableRowSorter#setStringConverter(TableStringConverter)->void:::Sets the object responsible for converting values from the model to strings
javax.swing.table.TableRowSorter#getStringConverter()->TableStringConverter:::Returns the object responsible for converting values from the model to strings.
javax.swing.table.TableRowSorter#getComparator(int)->Comparator:::Returns the Comparator for the specified column
javax.swing.table.TableRowSorter#useToString(int)->boolean::: table row sorter use to string
javax.swing.table.TableStringConverter#toString(TableModel, int, int)->String:::Returns the string representation of the value at the specified location.
