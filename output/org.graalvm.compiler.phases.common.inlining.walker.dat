org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolder#method()->ResolvedJavaMethod:::Gets the method associated with the #graph() graph represented by this object.
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolder#hasRemainingInvokes()->boolean:::The stack realized by InliningData grows upon InliningData#moveForward() deciding to explore (depth-first) a callsite of the graph associated to this CallsiteHolder
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolder#graph()->StructuredGraph:::The graph about which this object contains inlining information.
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#getFixedParams()->EconomicSet::: Parameters for which the callsite targeting #graph() provides "fixed" arguments
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#repOK()->boolean::: callsite holder explorable rep k
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#method()->ResolvedJavaMethod::: callsite holder explorable method
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#hasRemainingInvokes()->boolean::: callsite holder explorable has remaining invokes
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#graph()->StructuredGraph::: callsite holder explorable graph
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#popInvoke()->Invoke::: callsite holder explorable pop invoke
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#pushInvoke(Invoke)->void::: callsite holder explorable push invoke
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#allArgsNonNull(Invoke)->boolean::: callsite holder explorable all args non null
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#containsInvoke(Invoke)->boolean::: callsite holder explorable contains invoke
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#containsParam(ParameterNode)->boolean::: callsite holder explorable contains param
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#computeProbabilities()->void::: callsite holder explorable compute probabilities
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#invokeProbability(Invoke)->double::: callsite holder explorable invoke probability
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#invokeRelevance(Invoke)->double::: callsite holder explorable invoke relevance
org.graalvm.compiler.phases.common.inlining.walker.CallsiteHolderExplorable#toString()->String::: callsite holder explorable to string
org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance#compute()->void:::Initializes or updates the relevance computation
org.graalvm.compiler.phases.common.inlining.walker.ComputeInliningRelevance#getRelevance(Invoke)->double::: compute inlining relevance get relevance
org.graalvm.compiler.phases.common.inlining.walker.InliningData#isFreshInstantiation(ValueNode)->boolean::: inlining data is fresh instantiation
org.graalvm.compiler.phases.common.inlining.walker.InliningData#freshlyInstantiatedArguments(Invoke, EconomicSet)->BitSet:::Gets the freshly instantiated arguments
org.graalvm.compiler.phases.common.inlining.walker.InliningData#graphCount()->int::: inlining data graph count
org.graalvm.compiler.phases.common.inlining.walker.InliningData#hasUnprocessedGraphs()->boolean::: inlining data has unprocessed graphs
org.graalvm.compiler.phases.common.inlining.walker.InliningData#countRecursiveInlining(ResolvedJavaMethod)->int::: inlining data count recursive inlining
org.graalvm.compiler.phases.common.inlining.walker.InliningData#inliningDepth()->int::: inlining data inlining depth
org.graalvm.compiler.phases.common.inlining.walker.InliningData#toString()->String::: inlining data to string
org.graalvm.compiler.phases.common.inlining.walker.InliningData#getInvocationStackTrace()->Collection:::Gets a stack trace representing the current inlining stack represented by this object.
org.graalvm.compiler.phases.common.inlining.walker.InliningData#moveForward()->boolean::: The stack realized by InliningData grows and shrinks as choices are made among the alternatives below: <ol> <li>not worth inlining: pop stack top, which comprises: <ul> <li>pop any remaining graphs not yet delved into</li> <li>pop the current invocation</li> </ul> </li> <li>#processNextInvoke() delve into one of the callsites hosted in the current graph, such callsite is explored next by #moveForward()</li> <li>#tryToInline(MethodInvocation, int) try to inline: move past the current graph (remove it from the topmost element)
org.graalvm.compiler.phases.common.inlining.walker.InliningData#repOK()->boolean:::This method checks invariants for this class
org.graalvm.compiler.phases.common.inlining.walker.InliningIterator#apply()->LinkedList::: inlining iterator apply
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#incrementProcessedGraphs()->void::: method invocation increment processed graphs
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#processedGraphs()->int::: method invocation processed graphs
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#totalGraphs()->int::: method invocation total graphs
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#callee()->InlineInfo::: method invocation callee
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#probability()->double::: method invocation probability
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#relevance()->double::: method invocation relevance
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#isRoot()->boolean::: method invocation is root
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#getFreshlyInstantiatedArguments()->BitSet::: method invocation get freshly instantiated arguments
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#getSizeFreshArgs()->int::: method invocation get size fresh args
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#buildCallsiteHolderForElement(int)->CallsiteHolder::: method invocation build callsite holder for element
org.graalvm.compiler.phases.common.inlining.walker.MethodInvocation#toString()->String::: method invocation to string
