AccessorElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->else->super->addAttribute
AccessorElementHandler#addArgument(Object):::Adds the argument that is used to set the value of this element.:::if->throw->new->IllegalStateException->setValue
AccessorElementHandler#getValueObject():::Returns the value of this element.:::if->ValueObjectImpl->getValue->create->return
AccessorElementHandler#getValue(String):::Returns the value of the entity with specified name.:::
AccessorElementHandler#setValue(String, Object):::Sets the new value for the entity with specified name.:::
ArrayElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->Integer->valueOf->else->super->addAttribute
ArrayElementHandler#startElement():::Calculates the value of this element if the lentgh attribute is set.:::if->getValueObject
ArrayElementHandler#isArgument():::Tests whether the value of this element can be used as an argument of the element that contained in this one.:::return
ArrayElementHandler#getValueObject(Class, Object[]):::Creates an instance of the array.:::if->if->return->ValueObjectImpl->Array->newInstance->create->array->Array->newInstance->for->i->return->ValueObjectImpl->create
BooleanElementHandler#getValue(String):::Creates boolean value from the text of the body of this element.:::if->toString->equalsIgnoreCase->return->if->toString->equalsIgnoreCase->return->throw->new->IllegalArgumentException
ByteElementHandler#getValue(String):::Creates byte value from the text of the body of this element.:::return->Byte->decode
CharElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->code->Integer->decode->foreach->Character->toChars->addCharacter->else->super->addAttribute
CharElementHandler#getValue(String):::Creates char value from the text of the body of this element.:::if->argument->length->throw->new->IllegalArgumentException->return->Character->argument->charAt->valueOf
ClassElementHandler#getValue(String):::Creates class by the name from the text of the body of this element.:::return->getOwner->findClass
DocumentHandler#getClassLoader():::Returns the class loader used to instantiate objects:::return->get
DocumentHandler#setClassLoader(ClassLoader):::Sets the class loader used to instantiate objects:::new->WeakReference<ClassLoader>
DocumentHandler#getExceptionListener():::Returns the exception listener for parsing:::return
DocumentHandler#setExceptionListener(ExceptionListener):::Sets the exception listener for parsing:::
DocumentHandler#getOwner():::Returns the owner of this document handler.:::return
DocumentHandler#setOwner(Object):::Sets the owner of this document handler.:::
DocumentHandler#getElementHandler(String):::Returns the handler for the element with specified name.:::type->get->if->throw->new->IllegalArgumentException->return
DocumentHandler#setElementHandler(String, Class):::Sets the handler for the element with specified name.:::put
DocumentHandler#hasVariable(String):::Indicates whether the variable with specified identifier is defined.:::return->containsKey
DocumentHandler#getVariable(String):::Returns the value of the variable with specified identifier.:::if->containsKey->throw->new->IllegalArgumentException->return->get
DocumentHandler#setVariable(String, Object):::Sets new value of the variable with specified identifier.:::put
DocumentHandler#getObjects():::Returns the array of readed objects.:::return->toArray
DocumentHandler#addObject(Object):::Adds the object to the list of readed objects.:::add
DocumentHandler#resolveEntity(String, String):::Disables any external entities.:::return->new->StringReader->new->InputSource
DocumentHandler#startDocument():::Prepares this handler to read objects from XML document.:::clear
DocumentHandler#startElement(String, String, String, Attributes):::Parses opening tag of XML element using corresponding element handler.:::parent->try->getElementHandler->newInstance->setOwner->setParent->catch->throw->new->SAXException->finally->for->i->attributes->getLength->startElement
DocumentHandler#endElement(String, String, String):::Parses closing tag of XML element using corresponding element handler.:::try->endElement->catch->handleException->finally->getParent
DocumentHandler#characters(char[], int, int):::Parses character data inside XML element.:::if->try->while->addCharacter->catch->handleException->finally
DocumentHandler#handleException(Exception):::Handles an exception using current exception listener.:::if->throw->new->IllegalStateException->exceptionThrown
DocumentHandler#parse(InputSource):::Starts parsing of the specified input source.:::if->System->getSecurityManager->throw->new->SecurityException->stack->AccessController->getContext->SharedSecrets->getJavaSecurityAccess->new->PrivilegedAction<Void>->doIntersectionPrivilege
DocumentHandler#findClass(String):::Resolves class by name using current class loader:::try->return->ClassFinder->getClassLoader->resolveClass->catch->handleException->return->finally
DoubleElementHandler#getValue(String):::Creates double value from the text of the body of this element.:::return->Double->valueOf
ElementHandler#getOwner():::Returns the document handler that creates this element handler.:::return
ElementHandler#setOwner(DocumentHandler):::Sets the document handler that creates this element handler:::if->throw->new->IllegalArgumentException
ElementHandler#getParent():::Returns the element handler that contains this one.:::return
ElementHandler#setParent(ElementHandler):::Sets the element handler that contains this one:::
ElementHandler#getVariable(String):::Returns the value of the variable with specified identifier.:::if->id->equals->value->getValueObject->if->value->isVoid->throw->new->IllegalStateException->return->value->getValue->return->getVariable->getVariable
ElementHandler#getContextBean():::Returns the value of the parent element.:::if->value->getValueObject->if->value->isVoid->return->value->getValue->throw->new->IllegalStateException->else->value->getOwner->if->return->throw->new->IllegalStateException
ElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->else->throw->new->IllegalArgumentException
ElementHandler#startElement():::This method is called before parsing of the element's body:::
ElementHandler#endElement():::This method is called after parsing of the element's body:::value->getValueObject->if->value->isVoid->if->value->getValue->setVariable->if->isArgument->if->value->getValue->addArgument->else->value->getValue->addObject
ElementHandler#addCharacter(char):::Adds the character that contained in this element:::if->throw->new->IllegalStateException
ElementHandler#addArgument(Object):::Adds the argument that is used to calculate the value of this element:::throw->new->IllegalStateException
ElementHandler#isArgument():::Tests whether the value of this element can be used as an argument of the element that contained in this one.:::return
ElementHandler#getValueObject():::Returns the value of this element.:::
FalseElementHandler#getValue():::Returns Boolean.FALSE as a value of &lt;false&gt; element.:::return
FieldElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->getOwner->findClass->else->super->addAttribute
FieldElementHandler#isArgument():::Tests whether the value of this element can be used as an argument of the element that contained in this one.:::return->super->isArgument
FieldElementHandler#getContextBean():::Returns the context of the field:::return->super->getContextBean
FieldElementHandler#getValue(String):::Returns the value of the field with specified name.:::try->return->getContextBean->getFieldValue->catch->getOwner->handleException->finally->return
FieldElementHandler#setValue(String, Object):::Sets the new value for the field with specified name.:::try->getContextBean->setFieldValue->catch->getOwner->handleException->finally
FieldElementHandler#getFieldValue(Object, String):::Performs the search of the field with specified name in specified context and returns its value.:::return->findField->get
FloatElementHandler#getValue(String):::Creates float value from the text of the body of this element.:::return->Float->valueOf
IntElementHandler#getValue(String):::Creates int value from the text of the body of this element.:::return->Integer->decode
JavaElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->else->if->name->equals->getOwner->findClass->else->super->addAttribute
JavaElementHandler#addArgument(Object):::Adds the argument to the list of readed objects.:::getOwner->addObject
JavaElementHandler#isArgument():::Tests whether the value of this element can be used as an argument of the element that contained in this one.:::return
JavaElementHandler#getValueObject():::Returns the value of this element.:::if->ValueObjectImpl->getValue->create->return
LongElementHandler#getValue(String):::Creates long value from the text of the body of this element.:::return->Long->decode
MethodElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->else->super->addAttribute
MethodElementHandler#getValueObject(Class, Object[]):::Returns the result of method execution.:::bean->getContextBean->types->getArgumentTypes->method->MethodFinder->findStaticMethod->MethodFinder->bean->getClass->findMethod->if->method->isVarArgs->method->getParameterTypes->getArguments->value->MethodUtil->invoke->return->method->getReturnType->equals->ValueObjectImpl->create
NewElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->getOwner->findClass->else->super->addAttribute
NewElementHandler#addArgument(Object):::Adds the argument to the list of arguments that is used to calculate the value of this element.:::if->throw->new->IllegalStateException->add
NewElementHandler#getContextBean():::Returns the context of the method:::return->super->getContextBean
NewElementHandler#getValueObject():::Returns the value of this element.:::if->try->toArray->getValueObject->catch->getOwner->handleException->finally->return
NewElementHandler#getValueObject(Class, Object[]):::Calculates the value of this element using the base class and the array of arguments:::if->throw->new->IllegalArgumentException->types->getArgumentTypes->constructor->ConstructorFinder->findConstructor->if->constructor->isVarArgs->constructor->getParameterTypes->getArguments->return->ValueObjectImpl->constructor->newInstance->create
NewElementHandler#getArgumentTypes(Object[]):::Converts the array of arguments to the array of corresponding classes:::types->new->Class<?>Arr->for->i->return
NewElementHandler#getArguments(Object[], Class[]):::Resolves variable arguments.:::index->if->argument->if->return->type->if->type->argument->getClass->isAssignableFrom->return->length->type->getComponentType->array->Array->newInstance->System->arraycopy->args->new->ObjectArr->System->arraycopy->return
NullElementHandler#getValueObject():::Returns the value of this element.:::return
NullElementHandler#getValue():::Returns null as a value of &lt;null&gt; element:::return
NullElementHandler#isVoid():::Returns void state of this value object.:::return
ObjectElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->else->if->name->equals->else->if->name->equals->Integer->valueOf->addArgument->else->if->name->equals->else->if->name->equals->else->super->addAttribute
ObjectElementHandler#startElement():::Calculates the value of this element if the field attribute or the idref attribute is set.:::if->getValueObject
ObjectElementHandler#isArgument():::Tests whether the value of this element can be used as an argument of the element that contained in this one.:::return
ObjectElementHandler#getValueObject(Class, Object[]):::Creates the value of this element.:::if->return->ValueObjectImpl->FieldElementHandler->getContextBean->getFieldValue->create->if->return->ValueObjectImpl->getVariable->create->bean->getContextBean->name->if->else->if->if->length->substring->toUpperCase->substring->else->length->expression->new->Expression->return->ValueObjectImpl->expression->getValue->create
PropertyElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->Integer->valueOf->else->super->addAttribute
PropertyElementHandler#isArgument():::Tests whether the value of this element can be used as an argument of the element that contained in this one.:::return
PropertyElementHandler#getValue(String):::Returns the value of the property with specified name.:::try->return->getContextBean->getPropertyValue->catch->getOwner->handleException->finally->return
PropertyElementHandler#setValue(String, Object):::Sets the new value for the property with specified name.:::try->getContextBean->setPropertyValue->catch->getOwner->handleException->finally
ShortElementHandler#getValue(String):::Creates short value from the text of the body of this element.:::return->Short->decode
StringElementHandler#addCharacter(char):::Adds the character that contained in this element.:::if->throw->new->IllegalStateException->append
StringElementHandler#addArgument(Object):::Adds the string value of the argument to the string value of this element.:::if->throw->new->IllegalStateException->append
StringElementHandler#getValueObject():::Returns the value of this element.:::if->try->ValueObjectImpl->toString->getValue->create->catch->getOwner->handleException->finally->return
StringElementHandler#getValue(String):::Returns the text of the body of this element:::return
TrueElementHandler#getValue():::Returns Boolean.TRUE as a value of &lt;true&gt; element.:::return
ValueObject#getValue():::Returns the result of method execution.:::
ValueObject#isVoid():::Returns void state of this value object.:::
ValueObjectImpl#create(Object):::Returns the object that describes returning value.:::return->new->ValueObjectImpl
ValueObjectImpl#getValue():::Returns the result of method execution.:::return
ValueObjectImpl#isVoid():::Returns void state of this value object.:::return
VarElementHandler#addAttribute(String, String):::Parses attributes of the element:::if->name->equals->ValueObjectImpl->getVariable->create->else->super->addAttribute
VarElementHandler#getValueObject():::Returns the value of this element.:::if->throw->new->IllegalArgumentException->return
VoidElementHandler#isArgument():::Tests whether the value of this element can be used as an argument of the element that contained in this one.:::return
