LSInputListImpl#getLength():::The number of LSInputs in the list:::return
LSInputListImpl#item(int):::Returns the indexth item in the collection or null if index is greater than or equal to the number of objects in the list:::if->return->return
LSInputListImpl#get(int)::: input list impl get:::if->return->throw->new->IndexOutOfBoundsException
LSInputListImpl#size()::: input list impl size:::return->getLength
LSInputListImpl#toArray()::: input list impl to array:::a->new->ObjectArr->toArray0->return
LSInputListImpl#toArray(Object[])::: input list impl to array:::if->arrayClass->a->getClass->componentType->arrayClass->getComponentType->Array->newInstance->toArray0->if->return
LSInputListImpl#toArray0(Object[])::: input list impl to array0:::if->System->arraycopy
ObjectListImpl#getLength()::: object list impl get length:::return
ObjectListImpl#contains(Object)::: object list impl contains:::if->for->i->else->for->i->return
ObjectListImpl#item(int)::: object list impl item:::if->return->return
ObjectListImpl#get(int)::: object list impl get:::if->return->throw->new->IndexOutOfBoundsException
ObjectListImpl#size()::: object list impl size:::return->getLength
ObjectListImpl#toArray()::: object list impl to array:::a->new->ObjectArr->toArray0->return
ObjectListImpl#toArray(Object[])::: object list impl to array:::if->arrayClass->a->getClass->componentType->arrayClass->getComponentType->Array->newInstance->toArray0->if->return
ObjectListImpl#toArray0(Object[])::: object list impl to array0:::if->System->arraycopy
ShortListImpl#getLength():::The number of Objects in the list:::return
ShortListImpl#contains(short)::: Checks if the unsigned short item is a member of this list.:::for->i->return
ShortListImpl#item(int)::: short list impl item:::if->throw->new->XSException->return
ShortListImpl#equals(Object)::: short list impl equals:::if->return->rhs->if->rhs->getLength->return->for->i->return
ShortListImpl#get(int)::: short list impl get:::if->return->throw->new->IndexOutOfBoundsException
ShortListImpl#size()::: short list impl size:::return->getLength
SimpleLocator#setValues(String, String, int, int)::: simple locator set values:::setValues
SimpleLocator#setValues(String, String, int, int, int)::: simple locator set values:::
SimpleLocator#getLineNumber()::: simple locator get line number:::return
SimpleLocator#getColumnNumber()::: simple locator get column number:::return
SimpleLocator#getCharacterOffset()::: simple locator get character offset:::return
SimpleLocator#getPublicId()::: simple locator get public id:::return
SimpleLocator#getExpandedSystemId()::: simple locator get expanded system id:::return
SimpleLocator#getLiteralSystemId()::: simple locator get literal system id:::return
SimpleLocator#getBaseSystemId()::: simple locator get base system id:::return
SimpleLocator#setColumnNumber(int)::: simple locator set column number:::
SimpleLocator#setLineNumber(int)::: simple locator set line number:::
SimpleLocator#setCharacterOffset(int)::: simple locator set character offset:::
SimpleLocator#setBaseSystemId(String)::: simple locator set base system id:::
SimpleLocator#setExpandedSystemId(String)::: simple locator set expanded system id:::
SimpleLocator#setLiteralSystemId(String)::: simple locator set literal system id:::
SimpleLocator#setPublicId(String)::: simple locator set public id:::
SimpleLocator#getEncoding():::Returns the encoding of the current entity:::return
SimpleLocator#getXMLVersion()::: simple locator get version:::return
StringListImpl#getLength():::The number of Objects in the list:::return
StringListImpl#contains(String)::: Checks if the GenericString item is a member of this list.:::if->return->fVector->contains->if->for->i->else->for->i->return
StringListImpl#item(int)::: string list impl item:::if->return->if->return->fVector->get->return
StringListImpl#get(int)::: string list impl get:::if->if->return->fVector->get->return->throw->new->IndexOutOfBoundsException
StringListImpl#size()::: string list impl size:::return->getLength
StringListImpl#toArray()::: string list impl to array:::if->return->fVector->toArray->a->new->ObjectArr->toArray0->return
StringListImpl#toArray(Object[])::: string list impl to array:::if->return->fVector->toArray->if->arrayClass->a->getClass->componentType->arrayClass->getComponentType->Array->newInstance->toArray0->if->return
StringListImpl#toArray0(Object[])::: string list impl to array0:::if->System->arraycopy
XInt#intValue()::: int int value:::return
XInt#shortValue()::: int short value:::return
XInt#equals(XInt)::: int equals:::return
XInt#toString()::: int to string:::return->Integer->toString
XIntPool#getXInt(int)::: int pool get int:::if->return->else->return->new->XInt
XS10TypeHelper#getSchemaTypeName(XSTypeDefinition)::: s10 type helper get schema type name:::typeNameStr->if->getTypeName->else->getTypeName->return
XSGrammarPool#toXSModel():::Return an XSModel that represents components in the schema grammars in this pool implementation.:::return->toXSModel
XSGrammarPool#toXSModel(short)::: grammar pool to model:::list->new->ArrayList<>->for->i->size->list->size->if->return->new->SchemaGrammarArr->toXSModel->gs->list->new->SchemaGrammarArr->toArray->return->toXSModel
XSGrammarPool#toXSModel(SchemaGrammar[], short)::: grammar pool to model:::return->new->XSModelImpl
XSInputSource#getGrammars()::: input source get grammars:::return
XSInputSource#setGrammars(SchemaGrammar[])::: input source set grammars:::
XSInputSource#getComponents()::: input source get components:::return
XSInputSource#setComponents(XSObject[])::: input source set components:::
XSNamedMap4Types#getLength():::The number of XSObjects in the XSObjectList:::if->length->for->i->pos->array->new->XSObjectArr->for->i->new->XSObjectArr->type->for->i->return
XSNamedMap4Types#itemByName(String, String):::Retrieves an XSObject specified by local name and namespace URI.:::for->i->return
XSNamedMap4Types#item(int):::Returns the indexth item in the map:::if->getLength->if->return->return
XSNamedMapImpl#getLength():::The number of XSObjects in the XSObjectList:::if->for->i->return
XSNamedMapImpl#itemByName(String, String):::Retrieves an XSObject specified by local name and namespace URI:::for->i->return
XSNamedMapImpl#item(int):::Returns the indexth item in the collection or null if index is greater than or equal to the number of objects in the list:::if->getLength->new->XSObjectArr->pos->for->i->if->return->return
XSNamedMapImpl#isEqual(String, String)::: named map impl is equal:::return->one->equals
XSNamedMapImpl#containsKey(Object)::: named map impl contains key:::return->get
XSNamedMapImpl#get(Object)::: named map impl get:::if->name->namespaceURI->name->getNamespaceURI->if->equals->localPart->name->getLocalPart->return->itemByName->return
XSNamedMapImpl#size()::: named map impl size:::return->getLength
XSNamedMapImpl#entrySet()::: named map impl entry set:::if->length->getLength->entries->new->XSNamedMapEntryArr->for->i->new->AbstractSet<Map.Entry<QName,XSObject>>->return
XSNamedMapImpl.XSNamedMapEntry#getKey()::: named map entry get key:::return
XSNamedMapImpl.XSNamedMapEntry#getValue()::: named map entry get value:::return
XSNamedMapImpl.XSNamedMapEntry#setValue(XSObject)::: named map entry set value:::throw->new->UnsupportedOperationException
XSNamedMapImpl.XSNamedMapEntry#equals(XSNamedMapEntry)::: named map entry equals:::if->e->otherKey->e->getKey->otherValue->e->getValue->return->key->equals->value->equals->return
XSNamedMapImpl.XSNamedMapEntry#hashCode()::: named map entry hash code:::return->key->hashCode->value->hashCode
XSNamedMapImpl.XSNamedMapEntry#toString()::: named map entry to string:::buffer->new->StringBuilder->buffer->String->valueOf->append->buffer->append->buffer->String->valueOf->append->return->buffer->toString
XSObjectListImpl.EmptyIterator#hasNext()::: empty iterator has next:::return
XSObjectListImpl.EmptyIterator#next()::: empty iterator next:::throw->new->NoSuchElementException
XSObjectListImpl.EmptyIterator#hasPrevious()::: empty iterator has previous:::return
XSObjectListImpl.EmptyIterator#previous()::: empty iterator previous:::throw->new->NoSuchElementException
XSObjectListImpl.EmptyIterator#nextIndex()::: empty iterator next index:::return
XSObjectListImpl.EmptyIterator#previousIndex()::: empty iterator previous index:::return
XSObjectListImpl.EmptyIterator#remove()::: empty iterator remove:::throw->new->UnsupportedOperationException
XSObjectListImpl.EmptyIterator#set(XSObject)::: empty iterator set:::throw->new->UnsupportedOperationException
XSObjectListImpl.EmptyIterator#add(XSObject)::: empty iterator add:::throw->new->UnsupportedOperationException
XSObjectListImpl#getLength():::The number of XSObjects in the list:::return
XSObjectListImpl#item(int):::Returns the indexth item in the collection:::if->return->return
XSObjectListImpl#clearXSObjectList()::: object list impl clear object list:::for->i
XSObjectListImpl#addXSObject(XSObject)::: object list impl add object:::if->temp->new->XSObjectArr->System->arraycopy
XSObjectListImpl#addXSObject(int, XSObject)::: object list impl add object:::
XSObjectListImpl#contains(Object)::: object list impl contains:::return->containsNull->containsObject
XSObjectListImpl#get(int)::: object list impl get:::if->return->throw->new->IndexOutOfBoundsException
XSObjectListImpl#size()::: object list impl size:::return->getLength
XSObjectListImpl#iterator()::: object list impl iterator:::return->listIterator0
XSObjectListImpl#listIterator()::: object list impl list iterator:::return->listIterator0
XSObjectListImpl#listIterator(int)::: object list impl list iterator:::if->return->listIterator0->throw->new->IndexOutOfBoundsException
XSObjectListImpl#listIterator0(int)::: object list impl list iterator0:::return->new->XSObjectListIterator
XSObjectListImpl#containsObject(Object)::: object list impl contains object:::for->i->return
XSObjectListImpl#containsNull()::: object list impl contains null:::for->i->return
XSObjectListImpl#toArray()::: object list impl to array:::a->new->ObjectArr->toArray0->return
XSObjectListImpl#toArray(Object[])::: object list impl to array:::if->arrayClass->a->getClass->componentType->arrayClass->getComponentType->Array->newInstance->toArray0->if->return
XSObjectListImpl#toArray0(Object[])::: object list impl to array0:::if->System->arraycopy
XSObjectListImpl.XSObjectListIterator#hasNext()::: object list iterator has next:::return
XSObjectListImpl.XSObjectListIterator#next()::: object list iterator next:::if->return->throw->new->NoSuchElementException
XSObjectListImpl.XSObjectListIterator#hasPrevious()::: object list iterator has previous:::return
XSObjectListImpl.XSObjectListIterator#previous()::: object list iterator previous:::if->return->throw->new->NoSuchElementException
XSObjectListImpl.XSObjectListIterator#nextIndex()::: object list iterator next index:::return
XSObjectListImpl.XSObjectListIterator#previousIndex()::: object list iterator previous index:::return
XSObjectListImpl.XSObjectListIterator#remove()::: object list iterator remove:::throw->new->UnsupportedOperationException
XSObjectListImpl.XSObjectListIterator#set(XSObject)::: object list iterator set:::throw->new->UnsupportedOperationException
XSObjectListImpl.XSObjectListIterator#add(XSObject)::: object list iterator add:::throw->new->UnsupportedOperationException
