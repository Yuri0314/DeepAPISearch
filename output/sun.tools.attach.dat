sun.tools.attach.AttachProviderImpl#name()->String::: attach provider impl name
sun.tools.attach.AttachProviderImpl#type()->String::: attach provider impl type
sun.tools.attach.AttachProviderImpl#attachVirtualMachine(String)->VirtualMachine::: attach provider impl attach virtual machine
sun.tools.attach.AttachProviderImpl#listVirtualMachines()->List::: attach provider impl list virtual machines
sun.tools.attach.HotSpotAttachProvider#checkAttachPermission()->void::: hot spot attach provider check attach permission
sun.tools.attach.HotSpotAttachProvider#listVirtualMachines()->List::: hot spot attach provider list virtual machines
sun.tools.attach.HotSpotAttachProvider#testAttachable(String)->void:::Test if a VM is attachable
sun.tools.attach.HotSpotAttachProvider.HotSpotVirtualMachineDescriptor#isAttachable()->boolean::: hot spot virtual machine descriptor is attachable
sun.tools.attach.HotSpotVirtualMachine#loadAgentLibrary(String, String)->void::: hot spot virtual machine load agent library
sun.tools.attach.HotSpotVirtualMachine#loadAgentPath(String, String)->void::: hot spot virtual machine load agent path
sun.tools.attach.HotSpotVirtualMachine#loadAgent(String, String)->void::: hot spot virtual machine load agent
sun.tools.attach.HotSpotVirtualMachine#getSystemProperties()->Properties::: hot spot virtual machine get system properties
sun.tools.attach.HotSpotVirtualMachine#getAgentProperties()->Properties::: hot spot virtual machine get agent properties
sun.tools.attach.HotSpotVirtualMachine#startManagementAgent(Properties)->void::: hot spot virtual machine start management agent
sun.tools.attach.HotSpotVirtualMachine#startLocalManagementAgent()->String::: hot spot virtual machine start local management agent
sun.tools.attach.HotSpotVirtualMachine#localDataDump()->void::: hot spot virtual machine local data dump
sun.tools.attach.HotSpotVirtualMachine#remoteDataDump(Object...)->InputStream::: hot spot virtual machine remote data dump
sun.tools.attach.HotSpotVirtualMachine#dumpHeap(Object...)->InputStream::: hot spot virtual machine dump heap
sun.tools.attach.HotSpotVirtualMachine#heapHisto(Object...)->InputStream::: hot spot virtual machine heap histo
sun.tools.attach.HotSpotVirtualMachine#setFlag(String, String)->InputStream::: hot spot virtual machine set flag
sun.tools.attach.HotSpotVirtualMachine#printFlag(String)->InputStream::: hot spot virtual machine print flag
sun.tools.attach.HotSpotVirtualMachine#executeJCmd(String)->InputStream::: hot spot virtual machine execute cmd
sun.tools.attach.HotSpotVirtualMachine#execute(String, Object...)->InputStream::: hot spot virtual machine execute
sun.tools.attach.HotSpotVirtualMachine#executeCommand(String, Object...)->InputStream::: hot spot virtual machine execute command
sun.tools.attach.HotSpotVirtualMachine#readInt(InputStream)->int::: hot spot virtual machine read int
sun.tools.attach.HotSpotVirtualMachine#readErrorMessage(InputStream)->String::: hot spot virtual machine read error message
sun.tools.attach.HotSpotVirtualMachine#attachTimeout()->long::: hot spot virtual machine attach timeout
sun.tools.attach.VirtualMachineImpl#detach()->void::: virtual machine impl detach
sun.tools.attach.VirtualMachineImpl#execute(String, Object...)->InputStream::: virtual machine impl execute
sun.tools.attach.VirtualMachineImpl#init()->void::: virtual machine impl init
sun.tools.attach.VirtualMachineImpl#generateStub()->byte[]::: virtual machine impl generate stub
sun.tools.attach.VirtualMachineImpl#openProcess(int)->long::: virtual machine impl open process
sun.tools.attach.VirtualMachineImpl#closeProcess(long)->void::: virtual machine impl close process
sun.tools.attach.VirtualMachineImpl#createPipe(String)->long::: virtual machine impl create pipe
sun.tools.attach.VirtualMachineImpl#closePipe(long)->void::: virtual machine impl close pipe
sun.tools.attach.VirtualMachineImpl#connectPipe(long)->void::: virtual machine impl connect pipe
sun.tools.attach.VirtualMachineImpl#readPipe(long, byte[], int, int)->int::: virtual machine impl read pipe
sun.tools.attach.VirtualMachineImpl#enqueue(long, byte[], String, String, Object...)->void::: virtual machine impl enqueue
