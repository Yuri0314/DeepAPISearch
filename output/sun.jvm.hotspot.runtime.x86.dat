X86CurrentFrameGuess#run(long):::Returns false if not able to find a frame within a reasonable range.:::sp->context->getRegisterAsAddress->pc->context->getRegisterAsAddress->fp->context->getRegisterAsAddress->if->if->thread->getLastJavaSP->thread->getLastJavaSP->thread->getLastJavaFP->setValues->return->return->end->sp->addOffsetTo->vm->VM->getVM->setValues->if->vm->isJavaPCDbg->if->vm->isClientCompiler->setValues->return->else->if->vm->getInterpreter->contains->if->println->setValues->return->for->offset->vm->getAddressSize->return->else->if->thread->getLastJavaSP->thread->getLastJavaFP->println->if->thread->getLastJavaSP->return->thread->getLastJavaSP->thread->getLastJavaFP->setValues->return
X86CurrentFrameGuess#getSP()::: x86 current frame guess get p:::return
X86CurrentFrameGuess#getFP()::: x86 current frame guess get p:::return
X86CurrentFrameGuess#getPC():::May be null if getting values from thread-local storage; take       care to call the correct X86Frame constructor to recover this if       necessary:::return
X86CurrentFrameGuess#setValues(Address, Address, Address)::: x86 current frame guess set values:::
X86Frame#initialize(TypeDataBase)::: x86 frame initialize:::db->lookupIntConstant->if->VM->getVM->getAddressSize->new->VMReg->else->new->VMReg
X86Frame#adjustForDeopt()::: x86 frame adjust for deopt:::if->cb->VM->getVM->getCodeCache->findBlob->if->cb->isJavaMethod->nm->if->pc->nm->deoptHandlerBegin->equals->if->Assert->this->getUnextendedSP->that->this->getUnextendedSP->nm->origPCOffset->getAddressAt
X86Frame#clone()::: x86 frame clone:::frame->new->X86Frame->return
X86Frame#equals(Object)::: x86 frame equals:::if->return->if->return->other->return->AddressOps->getSP->other->getSP->equal->AddressOps->getUnextendedSP->other->getUnextendedSP->equal->AddressOps->getFP->other->getFP->equal->AddressOps->getPC->other->getPC->equal
X86Frame#hashCode()::: x86 frame hash code:::if->return->return->raw_sp->hashCode
X86Frame#toString()::: x86 frame to string:::return->getSP->getSP->toString->getUnextendedSP->getUnextendedSP->toString->getFP->getFP->toString->pc->toString
X86Frame#getFP()::: x86 frame get p:::return
X86Frame#getSP()::: x86 frame get p:::return
X86Frame#getID()::: x86 frame get d:::return
X86Frame#isSignalHandlerFrameDbg()::: x86 frame is signal handler frame dbg:::return
X86Frame#getSignalNumberDbg()::: x86 frame get signal number dbg:::return
X86Frame#getSignalNameDbg()::: x86 frame get signal name dbg:::return
X86Frame#isInterpretedFrameValid()::: x86 frame is interpreted frame valid:::if->Assert->isInterpretedFrame->that->if->getFP->getFP->andWithMask->return->if->getSP->getSP->andWithMask->return->if->getFP->VM->getVM->getAddressSize->addOffsetTo->getSP->lessThan->return->if->getFP->getSP->lessThanOrEqual->return->if->getFP->getSP->minus->VM->getVM->getAddressSize->return->return
X86Frame#sender(RegisterMap, CodeBlob)::: x86 frame sender:::map->if->Assert->that->map->setIncludeArgumentOops->if->isEntryFrame->return->senderForEntryFrame->if->isInterpretedFrame->return->senderForInterpreterFrame->if->VM->getVM->getCodeCache->getPC->findBlob->else->if->Assert->cb->VM->getVM->getCodeCache->getPC->findBlob->equals->that->if->return->senderForCompiledFrame->return->getSenderSP->getLink->getSenderPC->new->X86Frame
X86Frame#senderForEntryFrame(X86RegisterMap)::: x86 frame sender for entry frame:::if->println->if->Assert->that->jcw->getEntryFrameCallWrapper->if->Assert->entryFrameIsFirst->that->Assert->jcw->getLastJavaSP->getSP->greaterThan->that->fr->if->jcw->getLastJavaPC->jcw->getLastJavaSP->jcw->getLastJavaFP->jcw->getLastJavaPC->new->X86Frame->else->jcw->getLastJavaSP->jcw->getLastJavaFP->new->X86Frame->map->clear->if->Assert->map->getIncludeArgumentOops->that->return
X86Frame#adjustUnextendedSP()::: x86 frame adjust unextended p:::cb->cb->senderNm->cb->asNMethodOrNull->if->if->senderNm->getPC->isDeoptEntry->senderNm->getPC->isDeoptMhEntry
X86Frame#senderForInterpreterFrame(X86RegisterMap)::: x86 frame sender for interpreter frame:::if->println->unextendedSP->addressOfStackSlot->getAddressAt->sp->addressOfStackSlot->if->map->getUpdateMap->addressOfStackSlot->updateMapWithSavedLink->return->getLink->getSenderPC->new->X86Frame
X86Frame#updateMapWithSavedLink(RegisterMap, Address)::: x86 frame update map with saved link:::map->setLocation
X86Frame#senderForCompiledFrame(X86RegisterMap, CodeBlob)::: x86 frame sender for compiled frame:::if->println->if->Assert->that->if->Assert->cb->getFrameSize->that->senderSP->getUnextendedSP->cb->getFrameSize->addOffsetTo->senderPC->senderSP->VM->getVM->getAddressSize->getAddressAt->savedFPAddr->senderSP->VM->getVM->getAddressSize->addOffsetTo->if->map->getUpdateMap->map->cb->callerMustGCArguments->setIncludeArgumentOops->if->cb->getOopMaps->ImmutableOopMapSet->updateRegisterMap->updateMapWithSavedLink->return->savedFPAddr->getAddressAt->new->X86Frame
X86Frame#hasSenderPD()::: x86 frame has sender d:::return
X86Frame#frameSize()::: x86 frame frame size:::return->getSenderSP->getSP->minus->VM->getVM->getAddressSize
X86Frame#getLink()::: x86 frame get link:::return->addressOfStackSlot->getAddressAt
X86Frame#getUnextendedSP()::: x86 frame get unextended p:::return
X86Frame#getSenderPCAddr()::: x86 frame get sender addr:::return->addressOfStackSlot
X86Frame#getSenderPC()::: x86 frame get sender c:::return->getSenderPCAddr->getAddressAt
X86Frame#getSenderSP()::: x86 frame get sender p:::return->addressOfStackSlot
X86Frame#addressOfInterpreterFrameLocals()::: x86 frame address of interpreter frame locals:::return->addressOfStackSlot
X86Frame#addressOfInterpreterFrameBCX()::: x86 frame address of interpreter frame x:::return->addressOfStackSlot
X86Frame#getInterpreterFrameBCI()::: x86 frame get interpreter frame i:::bcp->addressOfInterpreterFrameBCX->getAddressAt->methodHandle->addressOfInterpreterFrameMethod->getAddressAt->method->Metadata->instantiateWrapperFor->return->bcpToBci
X86Frame#addressOfInterpreterFrameMDX()::: x86 frame address of interpreter frame x:::return->addressOfStackSlot
X86Frame#addressOfInterpreterFrameExpressionStack()::: x86 frame address of interpreter frame expression stack:::monitorEnd->interpreterFrameMonitorEnd->address->return->monitorEnd->VM->getVM->getAddressSize->addOffsetTo
X86Frame#getInterpreterFrameExpressionStackDirection()::: x86 frame get interpreter frame expression stack direction:::return
X86Frame#addressOfInterpreterFrameTOS()::: x86 frame address of interpreter frame s:::return->getSP
X86Frame#addressOfInterpreterFrameTOSAt(int):::Expression stack from top down:::return->addressOfInterpreterFrameTOS->VM->getVM->getAddressSize->addOffsetTo
X86Frame#getInterpreterFrameSenderSP()::: x86 frame get interpreter frame sender p:::if->Assert->isInterpretedFrame->that->return->addressOfStackSlot->getAddressAt
X86Frame#interpreterFrameMonitorBegin()::: x86 frame interpreter frame monitor begin:::return->addressOfStackSlot->new->BasicObjectLock
X86Frame#interpreterFrameMonitorEnd()::: x86 frame interpreter frame monitor end:::result->addressOfStackSlot->getAddressAt->if->Assert->AddressOps->getFP->gt->that->Assert->AddressOps->getSP->lte->that->return->new->BasicObjectLock
X86Frame#interpreterFrameMonitorSize()::: x86 frame interpreter frame monitor size:::return->BasicObjectLock->size
X86Frame#addressOfInterpreterFrameMethod()::: x86 frame address of interpreter frame method:::return->addressOfStackSlot
X86Frame#addressOfInterpreterFrameCPCache()::: x86 frame address of interpreter frame cache:::return->addressOfStackSlot
X86Frame#getEntryFrameCallWrapper()::: x86 frame get entry frame call wrapper:::return->addressOfStackSlot->getAddressAt->new->X86JavaCallWrapper
X86Frame#addressOfSavedOopResult()::: x86 frame address of saved oop result:::return->getSP->VM->getVM->isClientCompiler->VM->getVM->getAddressSize->addOffsetTo
X86Frame#addressOfSavedReceiver()::: x86 frame address of saved receiver:::return->getSP->VM->getVM->getAddressSize->addOffsetTo
X86Frame#dumpStack()::: x86 frame dump stack:::if->getFP->for->addr->getSP->VM->getVM->getAddressSize->addOffsetTo->AddressOps->getFP->VM->getVM->getAddressSize->addOffsetTo->lte->addr->VM->getVM->getAddressSize->addOffsetTo->else->for->addr->getSP->VM->getVM->getAddressSize->addOffsetTo->AddressOps->getSP->VM->getVM->getAddressSize->addOffsetTo->lte->addr->VM->getVM->getAddressSize->addOffsetTo
X86JavaCallWrapper#initialize(TypeDataBase)::: x86 java call wrapper initialize:::type->db->lookupType->type->getAddressField
X86JavaCallWrapper#getLastJavaFP()::: x86 java call wrapper get last java p:::return->lastJavaFPField->addr->anchorField->getOffset->addOffsetTo->getValue
X86RegisterMap#clone()::: x86 register map clone:::retval->new->X86RegisterMap->return
X86RegisterMap#clearPD()::: x86 register map clear d:::
X86RegisterMap#initializePD()::: x86 register map initialize d:::
X86RegisterMap#initializeFromPD(RegisterMap)::: x86 register map initialize from d:::
X86RegisterMap#getLocationPD(VMReg)::: x86 register map get location d:::return
