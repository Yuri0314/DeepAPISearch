sun.jvm.hotspot.gc.g1.G1CollectedHeap#capacity()->long::: g1 collected heap capacity
sun.jvm.hotspot.gc.g1.G1CollectedHeap#used()->long::: g1 collected heap used
sun.jvm.hotspot.gc.g1.G1CollectedHeap#n_regions()->long::: g1 collected heap n_regions
sun.jvm.hotspot.gc.g1.G1CollectedHeap#hrm()->HeapRegionManager::: g1 collected heap hrm
sun.jvm.hotspot.gc.g1.G1CollectedHeap#g1mm()->G1MonitoringSupport::: g1 collected heap g1mm
sun.jvm.hotspot.gc.g1.G1CollectedHeap#oldSet()->HeapRegionSetBase::: g1 collected heap old set
sun.jvm.hotspot.gc.g1.G1CollectedHeap#humongousSet()->HeapRegionSetBase::: g1 collected heap humongous set
sun.jvm.hotspot.gc.g1.G1CollectedHeap#heapRegionIterate(SpaceClosure)->void::: g1 collected heap heap region iterate
sun.jvm.hotspot.gc.g1.G1CollectedHeap#kind()->CollectedHeapName::: g1 collected heap kind
sun.jvm.hotspot.gc.g1.G1CollectedHeap#printOn(PrintStream)->void::: g1 collected heap print on
sun.jvm.hotspot.gc.g1.G1CollectedHeap#printRegionDetails(PrintStream)->void::: g1 collected heap print region details
sun.jvm.hotspot.gc.g1.G1HeapRegionTable#length()->long::: g1 heap region table length
sun.jvm.hotspot.gc.g1.G1HeapRegionTable#bias()->long::: g1 heap region table bias
sun.jvm.hotspot.gc.g1.G1HeapRegionTable#shiftBy()->long::: g1 heap region table shift by
sun.jvm.hotspot.gc.g1.G1HeapRegionTable#heapRegionIterator(long)->Iterator::: g1 heap region table heap region iterator
sun.jvm.hotspot.gc.g1.G1HeapRegionTable#getByAddress(Address)->HeapRegion::: g1 heap region table get by address
sun.jvm.hotspot.gc.g1.G1MonitoringSupport#edenCommitted()->long::: g1 monitoring support eden committed
sun.jvm.hotspot.gc.g1.G1MonitoringSupport#edenUsed()->long::: g1 monitoring support eden used
sun.jvm.hotspot.gc.g1.G1MonitoringSupport#edenRegionNum()->long::: g1 monitoring support eden region num
sun.jvm.hotspot.gc.g1.G1MonitoringSupport#survivorCommitted()->long::: g1 monitoring support survivor committed
sun.jvm.hotspot.gc.g1.G1MonitoringSupport#survivorUsed()->long::: g1 monitoring support survivor used
sun.jvm.hotspot.gc.g1.G1MonitoringSupport#survivorRegionNum()->long::: g1 monitoring support survivor region num
sun.jvm.hotspot.gc.g1.G1MonitoringSupport#oldCommitted()->long::: g1 monitoring support old committed
sun.jvm.hotspot.gc.g1.G1MonitoringSupport#oldUsed()->long::: g1 monitoring support old used
sun.jvm.hotspot.gc.g1.HeapRegion#grainBytes()->long::: heap region grain bytes
sun.jvm.hotspot.gc.g1.HeapRegion#top()->Address::: heap region top
sun.jvm.hotspot.gc.g1.HeapRegion#getLiveRegions()->List::: heap region get live regions
sun.jvm.hotspot.gc.g1.HeapRegion#used()->long::: heap region used
sun.jvm.hotspot.gc.g1.HeapRegion#free()->long::: heap region free
sun.jvm.hotspot.gc.g1.HeapRegion#isFree()->boolean::: heap region is free
sun.jvm.hotspot.gc.g1.HeapRegion#isYoung()->boolean::: heap region is young
sun.jvm.hotspot.gc.g1.HeapRegion#isHumongous()->boolean::: heap region is humongous
sun.jvm.hotspot.gc.g1.HeapRegion#isPinned()->boolean::: heap region is pinned
sun.jvm.hotspot.gc.g1.HeapRegion#isOld()->boolean::: heap region is old
sun.jvm.hotspot.gc.g1.HeapRegion#getPointerSize()->long::: heap region get pointer size
sun.jvm.hotspot.gc.g1.HeapRegion#printOn(PrintStream)->void::: heap region print on
sun.jvm.hotspot.gc.g1.HeapRegionManager#capacity()->long::: heap region manager capacity
sun.jvm.hotspot.gc.g1.HeapRegionManager#length()->long::: heap region manager length
sun.jvm.hotspot.gc.g1.HeapRegionManager#committedLength()->long::: heap region manager committed length
sun.jvm.hotspot.gc.g1.HeapRegionManager#heapRegionIterator()->Iterator::: heap region manager heap region iterator
sun.jvm.hotspot.gc.g1.HeapRegionManager#getByAddress(Address)->HeapRegion::: heap region manager get by address
sun.jvm.hotspot.gc.g1.HeapRegionSetBase#length()->long::: heap region set base length
sun.jvm.hotspot.gc.g1.HeapRegionType#isFree()->boolean::: heap region type is free
sun.jvm.hotspot.gc.g1.HeapRegionType#isEden()->boolean::: heap region type is eden
sun.jvm.hotspot.gc.g1.HeapRegionType#isSurvivor()->boolean::: heap region type is survivor
sun.jvm.hotspot.gc.g1.HeapRegionType#isYoung()->boolean::: heap region type is young
sun.jvm.hotspot.gc.g1.HeapRegionType#isHumongous()->boolean::: heap region type is humongous
sun.jvm.hotspot.gc.g1.HeapRegionType#isStartsHumongous()->boolean::: heap region type is starts humongous
sun.jvm.hotspot.gc.g1.HeapRegionType#isContinuesHumongous()->boolean::: heap region type is continues humongous
sun.jvm.hotspot.gc.g1.HeapRegionType#isArchive()->boolean::: heap region type is archive
sun.jvm.hotspot.gc.g1.HeapRegionType#isPinned()->boolean::: heap region type is pinned
sun.jvm.hotspot.gc.g1.HeapRegionType#isOld()->boolean::: heap region type is old
sun.jvm.hotspot.gc.g1.HeapRegionType#typeAnnotation()->String::: heap region type type annotation
