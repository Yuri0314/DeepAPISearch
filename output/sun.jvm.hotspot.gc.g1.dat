G1CollectedHeap#initialize(TypeDataBase)::: g1 collected heap initialize:::type->db->lookupType->type->getField->getOffset->type->getCIntegerField->type->getAddressField->type->getField->getOffset->type->getField->getOffset
G1CollectedHeap#capacity()::: g1 collected heap capacity:::return->hrm->capacity
G1CollectedHeap#used()::: g1 collected heap used:::return->summaryBytesUsedField->getValue
G1CollectedHeap#n_regions()::: g1 collected heap n_regions:::return->hrm->length
G1CollectedHeap#hrm()::: g1 collected heap hrm:::hrmAddr->addr->addOffsetTo->return->VMObjectFactory->newObject
G1CollectedHeap#g1mm()::: g1 collected heap g1mm:::g1mmAddr->g1mmField->getValue->return->VMObjectFactory->newObject
G1CollectedHeap#oldSet()::: g1 collected heap old set:::oldSetAddr->addr->addOffsetTo->return->VMObjectFactory->newObject
G1CollectedHeap#humongousSet()::: g1 collected heap humongous set:::humongousSetAddr->addr->addOffsetTo->return->VMObjectFactory->newObject
G1CollectedHeap#heapRegionIterator()::: g1 collected heap heap region iterator:::return->hrm->heapRegionIterator
G1CollectedHeap#heapRegionIterate(SpaceClosure)::: g1 collected heap heap region iterate:::iter->heapRegionIterator->while->iter->hasNext->hr->iter->next->scl->doSpace
G1CollectedHeap#kind()::: g1 collected heap kind:::return
G1CollectedHeap#printOn(PrintStream)::: g1 collected heap print on:::mr->reservedRegion->tty->print->tty->mr->start->mr->end->print->tty->HeapRegion->grainBytes->println->sum->new->HeapSummary->sum->printG1HeapSummary
G1CollectedHeap#printRegionDetails(PrintStream)::: g1 collected heap print region details:::prc->new->PrintRegionClosure->heapRegionIterate
G1HeapRegionTable#initialize(TypeDataBase)::: g1 heap region table initialize:::type->db->lookupType->type->getAddressField->type->getCIntegerField->type->getAddressField->type->getCIntegerField->type->getCIntegerField
G1HeapRegionTable#at(long)::: g1 heap region table at:::arrayAddr->baseField->getValue->offset->VM->getVM->getAddressSize->regionAddr->arrayAddr->getAddressAt->return->VMObjectFactory->newObject
G1HeapRegionTable#length()::: g1 heap region table length:::return->lengthField->getValue
G1HeapRegionTable#bias()::: g1 heap region table bias:::return->biasField->getValue
G1HeapRegionTable#shiftBy()::: g1 heap region table shift by:::return->shiftByField->getValue
G1HeapRegionTable.HeapRegionIterator#positionToNext()::: heap region iterator position to next:::result->while->at->if->at->else->return
G1HeapRegionTable.HeapRegionIterator#hasNext()::: heap region iterator has next:::return
G1HeapRegionTable.HeapRegionIterator#next()::: heap region iterator next:::return->positionToNext
G1HeapRegionTable.HeapRegionIterator#remove()::: heap region iterator remove:::
G1HeapRegionTable#heapRegionIterator(long)::: g1 heap region table heap region iterator:::return->new->HeapRegionIterator
G1HeapRegionTable#getByAddress(Address)::: g1 heap region table get by address:::arrayAddr->biasedBaseField->getValue->biasedIndex->target->asLongValue->shiftBy->offset->HeapRegion->getPointerSize->regionAddr->arrayAddr->getAddressAt->return->VMObjectFactory->newObject
G1MonitoringSupport#initialize(TypeDataBase)::: g1 monitoring support initialize:::type->db->lookupType->type->getCIntegerField->type->getCIntegerField->type->getCIntegerField->type->getCIntegerField->type->getCIntegerField->type->getCIntegerField
G1MonitoringSupport#edenCommitted()::: g1 monitoring support eden committed:::return->edenCommittedField->getValue
G1MonitoringSupport#edenUsed()::: g1 monitoring support eden used:::return->edenUsedField->getValue
G1MonitoringSupport#edenRegionNum()::: g1 monitoring support eden region num:::return->edenUsed->HeapRegion->grainBytes
G1MonitoringSupport#survivorCommitted()::: g1 monitoring support survivor committed:::return->survivorCommittedField->getValue
G1MonitoringSupport#survivorUsed()::: g1 monitoring support survivor used:::return->survivorUsedField->getValue
G1MonitoringSupport#survivorRegionNum()::: g1 monitoring support survivor region num:::return->survivorUsed->HeapRegion->grainBytes
G1MonitoringSupport#oldCommitted()::: g1 monitoring support old committed:::return->oldCommittedField->getValue
G1MonitoringSupport#oldUsed()::: g1 monitoring support old used:::return->oldUsedField->getValue
HeapRegion#initialize(TypeDataBase)::: heap region initialize:::type->db->lookupType->type->getCIntegerField->type->getAddressField->type->getField->getOffset->db->lookupType->getSize
HeapRegion#grainBytes()::: heap region grain bytes:::return->grainBytesField->getValue
HeapRegion#top()::: heap region top:::return->topField->getValue
HeapRegion#getLiveRegions()::: heap region get live regions:::res->new->ArrayList->res->bottom->top->new->MemRegion->add->return
HeapRegion#used()::: heap region used:::return->top->bottom->minus
HeapRegion#free()::: heap region free:::return->end->top->minus
HeapRegion#isFree()::: heap region is free:::return->type->isFree
HeapRegion#isYoung()::: heap region is young:::return->type->isYoung
HeapRegion#isHumongous()::: heap region is humongous:::return->type->isHumongous
HeapRegion#isPinned()::: heap region is pinned:::return->type->isPinned
HeapRegion#isOld()::: heap region is old:::return->type->isOld
HeapRegion#getPointerSize()::: heap region get pointer size:::return
HeapRegion#printOn(PrintStream)::: heap region print on:::tty->bottom->top->end->print->tty->type->typeAnnotation->println
HeapRegionManager#initialize(TypeDataBase)::: heap region manager initialize:::type->db->lookupType->type->getField->getOffset->type->getCIntegerField
HeapRegionManager#regions()::: heap region manager regions:::regionsAddr->addr->addOffsetTo->return->VMObjectFactory->newObject
HeapRegionManager#capacity()::: heap region manager capacity:::return->length->HeapRegion->grainBytes
HeapRegionManager#length()::: heap region manager length:::return->regions->length
HeapRegionManager#committedLength()::: heap region manager committed length:::return->numCommittedField->getValue
HeapRegionManager#heapRegionIterator()::: heap region manager heap region iterator:::return->regions->length->heapRegionIterator
HeapRegionManager#getByAddress(Address)::: heap region manager get by address:::return->regions->getByAddress
HeapRegionSetBase#initialize(TypeDataBase)::: heap region set base initialize:::type->db->lookupType->type->getCIntegerField
HeapRegionSetBase#length()::: heap region set base length:::return->lengthField->getValue
HeapRegionType#initialize(TypeDataBase)::: heap region type initialize:::type->db->lookupType->type->getCIntegerField->db->lookupIntConstant->db->lookupIntConstant->db->lookupIntConstant->db->lookupIntConstant->db->lookupIntConstant->db->lookupIntConstant->db->lookupIntConstant->db->lookupIntConstant->db->lookupIntConstant->db->lookupIntConstant
HeapRegionType#isFree()::: heap region type is free:::return->tagField->getValue
HeapRegionType#isEden()::: heap region type is eden:::return->tagField->getValue
HeapRegionType#isSurvivor()::: heap region type is survivor:::return->tagField->getValue
HeapRegionType#isYoung()::: heap region type is young:::return->tagField->getValue
HeapRegionType#isHumongous()::: heap region type is humongous:::return->tagField->getValue
HeapRegionType#isStartsHumongous()::: heap region type is starts humongous:::return->tagField->getValue
HeapRegionType#isContinuesHumongous()::: heap region type is continues humongous:::return->tagField->getValue
HeapRegionType#isArchive()::: heap region type is archive:::return->tagField->getValue
HeapRegionType#isPinned()::: heap region type is pinned:::return->tagField->getValue
HeapRegionType#isOld()::: heap region type is old:::return->tagField->getValue
HeapRegionType#typeAnnotation()::: heap region type type annotation:::if->isFree->return->if->isEden->return->if->isSurvivor->return->if->isStartsHumongous->return->if->isContinuesHumongous->return->if->isArchive->return->if->isPinned->return->if->isOld->return->return
