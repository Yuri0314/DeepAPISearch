JImageTask#setLog(PrintWriter)::: image task set log:::TASK_HELPER->setLog
JImageTask#pad(String, int, boolean)::: image task pad:::length->string->length->if->return->if->return->string->substring->padding->sb->new->StringBuilder->if->for->i->sb->append->if->for->i->return->sb->toString
JImageTask#pad(String, int)::: image task pad:::return->pad
JImageTask#pad(long, int)::: image task pad:::return->Long->toString->pad
JImageTask#run(String[])::: image task run:::if->new->PrintWriter->setLog->if->log->TASK_HELPER->getMessage->println->return->try->command->remaining->try->Enum->toUpperCase->valueOf->Arrays->copyOfRange->new->StringArr->catch->finally->unhandled->OPTION_HELPER->handleOptions->foreach->new->File->add->if->throw->TASK_HELPER->newBadArgs->if->if->log->TASK_HELPER->getMessage->println->Arrays->asList->stream->option->isHidden->filter->sorted->log->TASK_HELPER->option->resourceName->getMessage->println->forEach->log->TASK_HELPER->getMessage->println->else->try->log->TASK_HELPER->toString->toLowerCase->getMessage->println->catch->throw->TASK_HELPER->newBadArgs->finally->return->if->if->unhandled->isEmpty->throw->TASK_HELPER->Stream->of->Collectors->joining->collect->newBadArgs->TASK_HELPER->showVersion->if->unhandled->isEmpty->return->processInclude->return->run->catch->TASK_HELPER->reportError->if->log->TASK_HELPER->getMessage->println->return->x->printStackTrace->return->finally->log->flush
JImageTask#processInclude(String)::: image task process include:::if->include->isEmpty->return->foreach->include->split->matcher->Utils->getPathMatcher->predicate->matcher->JRT_FILE_SYSTEM->getPath->matches->includePredicates->add
JImageTask#listTitle(File, BasicImageReader)::: image task list title:::log->println
JImageTask.JImageAction#apply(File, BasicImageReader)::: image action apply:::
JImageTask.ModuleAction#apply(BasicImageReader, String, String)::: module action apply:::
JImageTask.ResourceAction#apply(BasicImageReader, String, ImageLocation)::: resource action apply:::
JImageTask#extract(BasicImageReader, String, ImageLocation)::: image task extract:::directory->new->File->bytes->reader->getResource->resource->new->File->parent->resource->getParentFile->if->parent->exists->if->parent->isDirectory->throw->TASK_HELPER->parent->getAbsolutePath->newBadArgs->else->if->parent->mkdirs->throw->TASK_HELPER->parent->getAbsolutePath->newBadArgs->if->ImageResourcesTree->isTreeInfoResource->Files->resource->toPath->write
JImageTask#trimModule(String)::: image task trim module:::offset->name->indexOf->if->name->length->return->name->substring->return
JImageTask#print(String, ImageLocation)::: image task print:::log->location->getContentOffset->pad->print->log->location->getUncompressedSize->pad->print->log->location->getCompressedSize->pad->print->log->trimModule->println
JImageTask#print(BasicImageReader, String)::: image task print:::if->reader->findLocation->print->else->log->trimModule->println
JImageTask#info(File, BasicImageReader)::: image task info:::header->reader->getHeader->log->header->getMajorVersion->println->log->header->getMinorVersion->println->log->Integer->header->getFlags->toHexString->println->log->header->getResourceCount->println->log->header->getTableLength->println->log->header->getOffsetsSize->println->log->header->getRedirectSize->println->log->header->getLocationsSize->println->log->header->getStringsSize->println->log->header->getIndexSize->println
JImageTask#listModule(BasicImageReader, String, String)::: image task list module:::log->println->log->println->if->log->pad->print->log->pad->print->log->pad->print->log->println
JImageTask#list(BasicImageReader, String, ImageLocation)::: image task list:::print
JImageTask#verify(BasicImageReader, String, ImageLocation)::: image task verify:::if->name->endsWith->name->endsWith->try->bytes->reader->getResource->cr->new->ClassReader->cn->new->ClassNode->cr->accept->catch->log->println->finally
JImageTask#iterate(JImageAction, ModuleAction, ResourceAction)::: image task iterate:::if->isEmpty->throw->TASK_HELPER->newBadArgs->foreach->if->file->exists->file->isFile->throw->TASK_HELPER->newBadArgs->try->reader->BasicImageReader->file->toPath->open->if->jimageAction->apply->if->entryNames->reader->getEntryNames->oldModule->foreach->match->includePredicates->isEmpty->foreach->if->predicate->test->break->if->continue->if->ImageResourcesTree->isTreeInfoResource->if->offset->name->indexOf->newModule->name->substring->if->oldModule->equals->moduleAction->apply->location->reader->findLocation->resourceAction->apply->catch->throw->TASK_HELPER->ioe->getMessage->newBadArgs->finally
JImageTask#run()::: image task run:::switch->this->extract->iterate->break->this->info->iterate->break->this->listTitle->this->listModule->this->list->iterate->break->this->listTitle->this->verify->iterate->break->throw->TASK_HELPER->name->newBadArgs->showUsage->return
Main#main(String[])::: main main:::t->new->JImageTask->rc->t->run->System->exit
Main#run(String[], PrintWriter):::Entry point that does not call System.exit.:::t->new->JImageTask->t->setLog->return->t->run
