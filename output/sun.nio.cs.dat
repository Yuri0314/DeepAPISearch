sun.nio.cs.ArrayDecoder#decode(byte[], int, int, char[])->int::: array decoder decode
sun.nio.cs.ArrayDecoder#isASCIICompatible()->boolean::: array decoder is compatible
sun.nio.cs.ArrayEncoder#encode(char[], int, int, byte[])->int::: array encoder encode
sun.nio.cs.ArrayEncoder#encodeFromLatin1(byte[], int, int, byte[])->int::: array encoder encode from latin1
sun.nio.cs.ArrayEncoder#encodeFromUTF16(byte[], int, int, byte[])->int::: array encoder encode from f16
sun.nio.cs.ArrayEncoder#isASCIICompatible()->boolean::: array encoder is compatible
sun.nio.cs.CESU_8#historicalName()->String::: u_8 historical name
sun.nio.cs.CESU_8#newDecoder()->CharsetDecoder::: u_8 new decoder
sun.nio.cs.CESU_8#newEncoder()->CharsetEncoder::: u_8 new encoder
sun.nio.cs.CharsetMapping#decodeSingle(int)->char::: charset mapping decode single
sun.nio.cs.CharsetMapping#decodeDouble(int, int)->char::: charset mapping decode double
sun.nio.cs.CharsetMapping#decodeSurrogate(int, char[])->char[]::: charset mapping decode surrogate
sun.nio.cs.CharsetMapping#decodeComposite(Entry, char[])->char[]::: charset mapping decode composite
sun.nio.cs.CharsetMapping#encodeChar(char)->int::: charset mapping encode char
sun.nio.cs.CharsetMapping#encodeSurrogate(char, char)->int::: charset mapping encode surrogate
sun.nio.cs.CharsetMapping#isCompositeBase(Entry)->boolean::: charset mapping is composite base
sun.nio.cs.CharsetMapping#encodeComposite(Entry)->int::: charset mapping encode composite
sun.nio.cs.CharsetMapping#get(InputStream)->CharsetMapping::: charset mapping get
sun.nio.cs.CharsetMapping#findBytes(Entry[], Entry)->int::: charset mapping find bytes
sun.nio.cs.CharsetMapping#findCP(Entry[], Entry)->int::: charset mapping find p
sun.nio.cs.CharsetMapping#findComp(Entry[], Entry)->int::: charset mapping find comp
sun.nio.cs.CharsetMapping#readSINGLEBYTE()->void::: charset mapping read e
sun.nio.cs.CharsetMapping#readINDEXC2B()->void::: charset mapping read c2 b
sun.nio.cs.CharsetMapping#readDB(int, int, int)->char[]::: charset mapping read b
sun.nio.cs.CharsetMapping#readDOUBLEBYTE1()->void::: charset mapping read e1
sun.nio.cs.CharsetMapping#readDOUBLEBYTE2()->void::: charset mapping read e2
sun.nio.cs.CharsetMapping#readCOMPOSITE()->void::: charset mapping read e
sun.nio.cs.CharsetMapping#load(InputStream)->CharsetMapping::: charset mapping load
sun.nio.cs.DelegatableDecoder#decodeLoop(ByteBuffer, CharBuffer)->CoderResult::: delegatable decoder decode loop
sun.nio.cs.DelegatableDecoder#implReset()->void::: delegatable decoder impl reset
sun.nio.cs.DelegatableDecoder#implFlush(CharBuffer)->CoderResult::: delegatable decoder impl flush
sun.nio.cs.DoubleByte.Decoder#crMalformedOrUnderFlow(int)->CoderResult::: decoder cr malformed or under flow
sun.nio.cs.DoubleByte.Decoder#crMalformedOrUnmappable(int, int)->CoderResult::: decoder cr malformed or unmappable
sun.nio.cs.DoubleByte.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder decode array loop
sun.nio.cs.DoubleByte.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder decode buffer loop
sun.nio.cs.DoubleByte.Decoder#decodeLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder decode loop
sun.nio.cs.DoubleByte.Decoder#decode(byte[], int, int, char[])->int::: decoder decode
sun.nio.cs.DoubleByte.Decoder#isASCIICompatible()->boolean::: decoder is compatible
sun.nio.cs.DoubleByte.Decoder#implReset()->void::: decoder impl reset
sun.nio.cs.DoubleByte.Decoder#implFlush(CharBuffer)->CoderResult::: decoder impl flush
sun.nio.cs.DoubleByte.Decoder#decodeSingle(int)->char::: decoder decode single
sun.nio.cs.DoubleByte.Decoder#decodeDouble(int, int)->char::: decoder decode double
sun.nio.cs.DoubleByte.Decoder_EBCDIC#implReset()->void::: decoder_ c impl reset
sun.nio.cs.DoubleByte.Decoder_EBCDIC#decodeArrayLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder_ c decode array loop
sun.nio.cs.DoubleByte.Decoder_EBCDIC#decodeBufferLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder_ c decode buffer loop
sun.nio.cs.DoubleByte.Decoder_EBCDIC#decode(byte[], int, int, char[])->int::: decoder_ c decode
sun.nio.cs.DoubleByte.Decoder_DBCSONLY#crMalformedOrUnmappable(int, int)->CoderResult::: decoder_ y cr malformed or unmappable
sun.nio.cs.DoubleByte.Decoder_EUC_SIM#crMalformedOrUnderFlow(int)->CoderResult::: decoder_ c_ m cr malformed or under flow
sun.nio.cs.DoubleByte.Decoder_EUC_SIM#crMalformedOrUnmappable(int, int)->CoderResult::: decoder_ c_ m cr malformed or unmappable
sun.nio.cs.DoubleByte.Decoder_EUC_SIM#decode(byte[], int, int, char[])->int::: decoder_ c_ m decode
sun.nio.cs.DoubleByte.Encoder#canEncode(char)->boolean::: encoder can encode
sun.nio.cs.DoubleByte.Encoder#sgp()->Surrogate.Parser::: encoder sgp
sun.nio.cs.DoubleByte.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder encode array loop
sun.nio.cs.DoubleByte.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder encode buffer loop
sun.nio.cs.DoubleByte.Encoder#encodeLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder encode loop
sun.nio.cs.DoubleByte.Encoder#implReplaceWith(byte[])->void::: encoder impl replace with
sun.nio.cs.DoubleByte.Encoder#encode(char[], int, int, byte[])->int::: encoder encode
sun.nio.cs.DoubleByte.Encoder#encodeFromLatin1(byte[], int, int, byte[])->int::: encoder encode from latin1
sun.nio.cs.DoubleByte.Encoder#encodeFromUTF16(byte[], int, int, byte[])->int::: encoder encode from f16
sun.nio.cs.DoubleByte.Encoder#isASCIICompatible()->boolean::: encoder is compatible
sun.nio.cs.DoubleByte.Encoder#encodeChar(char)->int::: encoder encode char
sun.nio.cs.DoubleByte.Encoder#initC2B(String[], String, String, String, int, int, char[], char[])->void::: encoder init c2 b
sun.nio.cs.DoubleByte.Encoder_DBCSONLY#encodeChar(char)->int::: encoder_ y encode char
sun.nio.cs.DoubleByte.Encoder_EBCDIC#implReset()->void::: encoder_ c impl reset
sun.nio.cs.DoubleByte.Encoder_EBCDIC#implFlush(ByteBuffer)->CoderResult::: encoder_ c impl flush
sun.nio.cs.DoubleByte.Encoder_EBCDIC#encodeArrayLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder_ c encode array loop
sun.nio.cs.DoubleByte.Encoder_EBCDIC#encodeBufferLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder_ c encode buffer loop
sun.nio.cs.DoubleByte.Encoder_EBCDIC#encode(char[], int, int, byte[])->int::: encoder_ c encode
sun.nio.cs.DoubleByte.Encoder_EBCDIC#encodeFromLatin1(byte[], int, int, byte[])->int::: encoder_ c encode from latin1
sun.nio.cs.DoubleByte.Encoder_EBCDIC#encodeFromUTF16(byte[], int, int, byte[])->int::: encoder_ c encode from f16
sun.nio.cs.GBK#historicalName()->String::: k historical name
sun.nio.cs.GBK#contains(Charset)->boolean::: k contains
sun.nio.cs.GBK#newDecoder()->CharsetDecoder::: k new decoder
sun.nio.cs.GBK#newEncoder()->CharsetEncoder::: k new encoder
sun.nio.cs.GBK#initb2c()->void::: k initb2c
sun.nio.cs.GBK#initc2b()->void::: k initc2b
sun.nio.cs.HistoricallyNamedCharset#historicalName()->String::: historically named charset historical name
sun.nio.cs.HKSCS.Decoder#decodeSingle(int)->char::: decoder decode single
sun.nio.cs.HKSCS.Decoder#decodeBig5(int, int)->char::: decoder decode big5
sun.nio.cs.HKSCS.Decoder#decodeDouble(int, int)->char::: decoder decode double
sun.nio.cs.HKSCS.Decoder#decodeDoubleEx(int, int)->char::: decoder decode double ex
sun.nio.cs.HKSCS.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder decode array loop
sun.nio.cs.HKSCS.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder decode buffer loop
sun.nio.cs.HKSCS.Decoder#decode(byte[], int, int, char[])->int::: decoder decode
sun.nio.cs.HKSCS.Decoder#decodeLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder decode loop
sun.nio.cs.HKSCS.Decoder#initb2c(char[][], String[])->void::: decoder initb2c
sun.nio.cs.HKSCS.Encoder#encodeBig5(char)->int::: encoder encode big5
sun.nio.cs.HKSCS.Encoder#encodeChar(char)->int::: encoder encode char
sun.nio.cs.HKSCS.Encoder#encodeSupp(int)->int::: encoder encode supp
sun.nio.cs.HKSCS.Encoder#canEncode(char)->boolean::: encoder can encode
sun.nio.cs.HKSCS.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder encode array loop
sun.nio.cs.HKSCS.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder encode buffer loop
sun.nio.cs.HKSCS.Encoder#encodeLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder encode loop
sun.nio.cs.HKSCS.Encoder#implReplaceWith(byte[])->void::: encoder impl replace with
sun.nio.cs.HKSCS.Encoder#encode(char[], int, int, byte[])->int::: encoder encode
sun.nio.cs.HKSCS.Encoder#encodeFromUTF16(byte[], int, int, byte[])->int::: encoder encode from f16
sun.nio.cs.HKSCS.Encoder#initc2b(char[][], String[], String)->void::: encoder initc2b
sun.nio.cs.IBM437#historicalName()->String::: m437 historical name
sun.nio.cs.IBM437#contains(Charset)->boolean::: m437 contains
sun.nio.cs.IBM437#newDecoder()->CharsetDecoder::: m437 new decoder
sun.nio.cs.IBM437#newEncoder()->CharsetEncoder::: m437 new encoder
sun.nio.cs.IBM737#historicalName()->String::: m737 historical name
sun.nio.cs.IBM737#contains(Charset)->boolean::: m737 contains
sun.nio.cs.IBM737#newDecoder()->CharsetDecoder::: m737 new decoder
sun.nio.cs.IBM737#newEncoder()->CharsetEncoder::: m737 new encoder
sun.nio.cs.IBM775#historicalName()->String::: m775 historical name
sun.nio.cs.IBM775#contains(Charset)->boolean::: m775 contains
sun.nio.cs.IBM775#newDecoder()->CharsetDecoder::: m775 new decoder
sun.nio.cs.IBM775#newEncoder()->CharsetEncoder::: m775 new encoder
sun.nio.cs.IBM850#historicalName()->String::: m850 historical name
sun.nio.cs.IBM850#contains(Charset)->boolean::: m850 contains
sun.nio.cs.IBM850#newDecoder()->CharsetDecoder::: m850 new decoder
sun.nio.cs.IBM850#newEncoder()->CharsetEncoder::: m850 new encoder
sun.nio.cs.IBM852#historicalName()->String::: m852 historical name
sun.nio.cs.IBM852#contains(Charset)->boolean::: m852 contains
sun.nio.cs.IBM852#newDecoder()->CharsetDecoder::: m852 new decoder
sun.nio.cs.IBM852#newEncoder()->CharsetEncoder::: m852 new encoder
sun.nio.cs.IBM855#historicalName()->String::: m855 historical name
sun.nio.cs.IBM855#contains(Charset)->boolean::: m855 contains
sun.nio.cs.IBM855#newDecoder()->CharsetDecoder::: m855 new decoder
sun.nio.cs.IBM855#newEncoder()->CharsetEncoder::: m855 new encoder
sun.nio.cs.IBM857#historicalName()->String::: m857 historical name
sun.nio.cs.IBM857#contains(Charset)->boolean::: m857 contains
sun.nio.cs.IBM857#newDecoder()->CharsetDecoder::: m857 new decoder
sun.nio.cs.IBM857#newEncoder()->CharsetEncoder::: m857 new encoder
sun.nio.cs.IBM858#historicalName()->String::: m858 historical name
sun.nio.cs.IBM858#contains(Charset)->boolean::: m858 contains
sun.nio.cs.IBM858#newDecoder()->CharsetDecoder::: m858 new decoder
sun.nio.cs.IBM858#newEncoder()->CharsetEncoder::: m858 new encoder
sun.nio.cs.IBM862#historicalName()->String::: m862 historical name
sun.nio.cs.IBM862#contains(Charset)->boolean::: m862 contains
sun.nio.cs.IBM862#newDecoder()->CharsetDecoder::: m862 new decoder
sun.nio.cs.IBM862#newEncoder()->CharsetEncoder::: m862 new encoder
sun.nio.cs.IBM866#historicalName()->String::: m866 historical name
sun.nio.cs.IBM866#contains(Charset)->boolean::: m866 contains
sun.nio.cs.IBM866#newDecoder()->CharsetDecoder::: m866 new decoder
sun.nio.cs.IBM866#newEncoder()->CharsetEncoder::: m866 new encoder
sun.nio.cs.IBM874#historicalName()->String::: m874 historical name
sun.nio.cs.IBM874#contains(Charset)->boolean::: m874 contains
sun.nio.cs.IBM874#newDecoder()->CharsetDecoder::: m874 new decoder
sun.nio.cs.IBM874#newEncoder()->CharsetEncoder::: m874 new encoder
sun.nio.cs.ISO_8859_1#historicalName()->String::: o_8859_1 historical name
sun.nio.cs.ISO_8859_1#contains(Charset)->boolean::: o_8859_1 contains
sun.nio.cs.ISO_8859_1#newDecoder()->CharsetDecoder::: o_8859_1 new decoder
sun.nio.cs.ISO_8859_1#newEncoder()->CharsetEncoder::: o_8859_1 new encoder
sun.nio.cs.ISO_8859_13#historicalName()->String::: o_8859_13 historical name
sun.nio.cs.ISO_8859_13#contains(Charset)->boolean::: o_8859_13 contains
sun.nio.cs.ISO_8859_13#newDecoder()->CharsetDecoder::: o_8859_13 new decoder
sun.nio.cs.ISO_8859_13#newEncoder()->CharsetEncoder::: o_8859_13 new encoder
sun.nio.cs.ISO_8859_15#historicalName()->String::: o_8859_15 historical name
sun.nio.cs.ISO_8859_15#contains(Charset)->boolean::: o_8859_15 contains
sun.nio.cs.ISO_8859_15#newDecoder()->CharsetDecoder::: o_8859_15 new decoder
sun.nio.cs.ISO_8859_15#newEncoder()->CharsetEncoder::: o_8859_15 new encoder
sun.nio.cs.ISO_8859_16#historicalName()->String::: o_8859_16 historical name
sun.nio.cs.ISO_8859_16#contains(Charset)->boolean::: o_8859_16 contains
sun.nio.cs.ISO_8859_16#newDecoder()->CharsetDecoder::: o_8859_16 new decoder
sun.nio.cs.ISO_8859_16#newEncoder()->CharsetEncoder::: o_8859_16 new encoder
sun.nio.cs.ISO_8859_2#historicalName()->String::: o_8859_2 historical name
sun.nio.cs.ISO_8859_2#contains(Charset)->boolean::: o_8859_2 contains
sun.nio.cs.ISO_8859_2#newDecoder()->CharsetDecoder::: o_8859_2 new decoder
sun.nio.cs.ISO_8859_2#newEncoder()->CharsetEncoder::: o_8859_2 new encoder
sun.nio.cs.ISO_8859_4#historicalName()->String::: o_8859_4 historical name
sun.nio.cs.ISO_8859_4#contains(Charset)->boolean::: o_8859_4 contains
sun.nio.cs.ISO_8859_4#newDecoder()->CharsetDecoder::: o_8859_4 new decoder
sun.nio.cs.ISO_8859_4#newEncoder()->CharsetEncoder::: o_8859_4 new encoder
sun.nio.cs.ISO_8859_5#historicalName()->String::: o_8859_5 historical name
sun.nio.cs.ISO_8859_5#contains(Charset)->boolean::: o_8859_5 contains
sun.nio.cs.ISO_8859_5#newDecoder()->CharsetDecoder::: o_8859_5 new decoder
sun.nio.cs.ISO_8859_5#newEncoder()->CharsetEncoder::: o_8859_5 new encoder
sun.nio.cs.ISO_8859_7#historicalName()->String::: o_8859_7 historical name
sun.nio.cs.ISO_8859_7#contains(Charset)->boolean::: o_8859_7 contains
sun.nio.cs.ISO_8859_7#newDecoder()->CharsetDecoder::: o_8859_7 new decoder
sun.nio.cs.ISO_8859_7#newEncoder()->CharsetEncoder::: o_8859_7 new encoder
sun.nio.cs.ISO_8859_9#historicalName()->String::: o_8859_9 historical name
sun.nio.cs.ISO_8859_9#contains(Charset)->boolean::: o_8859_9 contains
sun.nio.cs.ISO_8859_9#newDecoder()->CharsetDecoder::: o_8859_9 new decoder
sun.nio.cs.ISO_8859_9#newEncoder()->CharsetEncoder::: o_8859_9 new encoder
sun.nio.cs.JIS_X_0201#historicalName()->String::: s_ x_0201 historical name
sun.nio.cs.JIS_X_0201#contains(Charset)->boolean::: s_ x_0201 contains
sun.nio.cs.JIS_X_0201#newDecoder()->CharsetDecoder::: s_ x_0201 new decoder
sun.nio.cs.JIS_X_0201#newEncoder()->CharsetEncoder::: s_ x_0201 new encoder
sun.nio.cs.Johab#historicalName()->String::: johab historical name
sun.nio.cs.Johab#contains(Charset)->boolean::: johab contains
sun.nio.cs.Johab#newDecoder()->CharsetDecoder::: johab new decoder
sun.nio.cs.Johab#newEncoder()->CharsetEncoder::: johab new encoder
sun.nio.cs.Johab#initb2c()->void::: johab initb2c
sun.nio.cs.Johab#initc2b()->void::: johab initc2b
sun.nio.cs.KOI8_R#historicalName()->String::: i8_ r historical name
sun.nio.cs.KOI8_R#contains(Charset)->boolean::: i8_ r contains
sun.nio.cs.KOI8_R#newDecoder()->CharsetDecoder::: i8_ r new decoder
sun.nio.cs.KOI8_R#newEncoder()->CharsetEncoder::: i8_ r new encoder
sun.nio.cs.KOI8_U#historicalName()->String::: i8_ u historical name
sun.nio.cs.KOI8_U#contains(Charset)->boolean::: i8_ u contains
sun.nio.cs.KOI8_U#newDecoder()->CharsetDecoder::: i8_ u new decoder
sun.nio.cs.KOI8_U#newEncoder()->CharsetEncoder::: i8_ u new encoder
sun.nio.cs.MS1250#historicalName()->String::: s1250 historical name
sun.nio.cs.MS1250#contains(Charset)->boolean::: s1250 contains
sun.nio.cs.MS1250#newDecoder()->CharsetDecoder::: s1250 new decoder
sun.nio.cs.MS1250#newEncoder()->CharsetEncoder::: s1250 new encoder
sun.nio.cs.MS1251#historicalName()->String::: s1251 historical name
sun.nio.cs.MS1251#contains(Charset)->boolean::: s1251 contains
sun.nio.cs.MS1251#newDecoder()->CharsetDecoder::: s1251 new decoder
sun.nio.cs.MS1251#newEncoder()->CharsetEncoder::: s1251 new encoder
sun.nio.cs.MS1252#historicalName()->String::: s1252 historical name
sun.nio.cs.MS1252#contains(Charset)->boolean::: s1252 contains
sun.nio.cs.MS1252#newDecoder()->CharsetDecoder::: s1252 new decoder
sun.nio.cs.MS1252#newEncoder()->CharsetEncoder::: s1252 new encoder
sun.nio.cs.MS1253#historicalName()->String::: s1253 historical name
sun.nio.cs.MS1253#contains(Charset)->boolean::: s1253 contains
sun.nio.cs.MS1253#newDecoder()->CharsetDecoder::: s1253 new decoder
sun.nio.cs.MS1253#newEncoder()->CharsetEncoder::: s1253 new encoder
sun.nio.cs.MS1254#historicalName()->String::: s1254 historical name
sun.nio.cs.MS1254#contains(Charset)->boolean::: s1254 contains
sun.nio.cs.MS1254#newDecoder()->CharsetDecoder::: s1254 new decoder
sun.nio.cs.MS1254#newEncoder()->CharsetEncoder::: s1254 new encoder
sun.nio.cs.MS1255#historicalName()->String::: s1255 historical name
sun.nio.cs.MS1255#contains(Charset)->boolean::: s1255 contains
sun.nio.cs.MS1255#newDecoder()->CharsetDecoder::: s1255 new decoder
sun.nio.cs.MS1255#newEncoder()->CharsetEncoder::: s1255 new encoder
sun.nio.cs.MS1256#historicalName()->String::: s1256 historical name
sun.nio.cs.MS1256#contains(Charset)->boolean::: s1256 contains
sun.nio.cs.MS1256#newDecoder()->CharsetDecoder::: s1256 new decoder
sun.nio.cs.MS1256#newEncoder()->CharsetEncoder::: s1256 new encoder
sun.nio.cs.MS1257#historicalName()->String::: s1257 historical name
sun.nio.cs.MS1257#contains(Charset)->boolean::: s1257 contains
sun.nio.cs.MS1257#newDecoder()->CharsetDecoder::: s1257 new decoder
sun.nio.cs.MS1257#newEncoder()->CharsetEncoder::: s1257 new encoder
sun.nio.cs.MS1258#historicalName()->String::: s1258 historical name
sun.nio.cs.MS1258#contains(Charset)->boolean::: s1258 contains
sun.nio.cs.MS1258#newDecoder()->CharsetDecoder::: s1258 new decoder
sun.nio.cs.MS1258#newEncoder()->CharsetEncoder::: s1258 new encoder
sun.nio.cs.MS874#historicalName()->String::: s874 historical name
sun.nio.cs.MS874#contains(Charset)->boolean::: s874 contains
sun.nio.cs.MS874#newDecoder()->CharsetDecoder::: s874 new decoder
sun.nio.cs.MS874#newEncoder()->CharsetEncoder::: s874 new encoder
sun.nio.cs.MS932#historicalName()->String::: s932 historical name
sun.nio.cs.MS932#contains(Charset)->boolean::: s932 contains
sun.nio.cs.MS932#newDecoder()->CharsetDecoder::: s932 new decoder
sun.nio.cs.MS932#newEncoder()->CharsetEncoder::: s932 new encoder
sun.nio.cs.MS932#initb2c()->void::: s932 initb2c
sun.nio.cs.MS932#initc2b()->void::: s932 initc2b
sun.nio.cs.MS936#historicalName()->String::: s936 historical name
sun.nio.cs.MS936#contains(Charset)->boolean::: s936 contains
sun.nio.cs.MS936#newDecoder()->CharsetDecoder::: s936 new decoder
sun.nio.cs.MS936#newEncoder()->CharsetEncoder::: s936 new encoder
sun.nio.cs.MS936#initb2c()->void::: s936 initb2c
sun.nio.cs.MS936#initc2b()->void::: s936 initc2b
sun.nio.cs.MS949#historicalName()->String::: s949 historical name
sun.nio.cs.MS949#contains(Charset)->boolean::: s949 contains
sun.nio.cs.MS949#newDecoder()->CharsetDecoder::: s949 new decoder
sun.nio.cs.MS949#newEncoder()->CharsetEncoder::: s949 new encoder
sun.nio.cs.MS949#initb2c()->void::: s949 initb2c
sun.nio.cs.MS949#initc2b()->void::: s949 initc2b
sun.nio.cs.MS950#historicalName()->String::: s950 historical name
sun.nio.cs.MS950#contains(Charset)->boolean::: s950 contains
sun.nio.cs.MS950#newDecoder()->CharsetDecoder::: s950 new decoder
sun.nio.cs.MS950#newEncoder()->CharsetEncoder::: s950 new encoder
sun.nio.cs.MS950#initb2c()->void::: s950 initb2c
sun.nio.cs.MS950#initc2b()->void::: s950 initc2b
sun.nio.cs.MS950_HKSCS#historicalName()->String::: s950_ s historical name
sun.nio.cs.MS950_HKSCS#contains(Charset)->boolean::: s950_ s contains
sun.nio.cs.MS950_HKSCS#newDecoder()->CharsetDecoder::: s950_ s new decoder
sun.nio.cs.MS950_HKSCS#newEncoder()->CharsetEncoder::: s950_ s new encoder
sun.nio.cs.MS950_HKSCS_XP#contains(Charset)->boolean::: s950_ s_ p contains
sun.nio.cs.MS950_HKSCS_XP#newDecoder()->CharsetDecoder::: s950_ s_ p new decoder
sun.nio.cs.MS950_HKSCS_XP#newEncoder()->CharsetEncoder::: s950_ s_ p new encoder
sun.nio.cs.MS950_HKSCS_XP.Decoder#decodeDoubleEx(int, int)->char::: decoder decode double ex
sun.nio.cs.SingleByte.Decoder#decodeLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder decode loop
sun.nio.cs.SingleByte.Decoder#decode(int)->char::: decoder decode
sun.nio.cs.SingleByte.Decoder#implReplaceWith(String)->void::: decoder impl replace with
sun.nio.cs.SingleByte.Decoder#decode(byte[], int, int, char[])->int::: decoder decode
sun.nio.cs.SingleByte.Decoder#isASCIICompatible()->boolean::: decoder is compatible
sun.nio.cs.SingleByte.Encoder#canEncode(char)->boolean::: encoder can encode
sun.nio.cs.SingleByte.Encoder#isLegalReplacement(byte[])->boolean::: encoder is legal replacement
sun.nio.cs.SingleByte.Encoder#encodeLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder encode loop
sun.nio.cs.SingleByte.Encoder#encode(char)->int::: encoder encode
sun.nio.cs.SingleByte.Encoder#implReplaceWith(byte[])->void::: encoder impl replace with
sun.nio.cs.SingleByte.Encoder#encode(char[], int, int, byte[])->int::: encoder encode
sun.nio.cs.SingleByte.Encoder#encodeFromLatin1(byte[], int, int, byte[])->int::: encoder encode from latin1
sun.nio.cs.SingleByte.Encoder#encodeFromUTF16(byte[], int, int, byte[])->int::: encoder encode from f16
sun.nio.cs.SingleByte.Encoder#isASCIICompatible()->boolean::: encoder is compatible
sun.nio.cs.SingleByte#initC2B(char[], char[], char[], char[])->void::: single byte init c2 b
sun.nio.cs.SJIS#historicalName()->String::: s historical name
sun.nio.cs.SJIS#contains(Charset)->boolean::: s contains
sun.nio.cs.SJIS#newDecoder()->CharsetDecoder::: s new decoder
sun.nio.cs.SJIS#newEncoder()->CharsetEncoder::: s new encoder
sun.nio.cs.SJIS#initb2c()->void::: s initb2c
sun.nio.cs.SJIS#initc2b()->void::: s initc2b
sun.nio.cs.StandardCharsets#aliases_US_ASCII()->String[]::: standard charsets aliases_ s_ i
sun.nio.cs.StandardCharsets#aliases_UTF_8()->String[]::: standard charsets aliases_ f_8
sun.nio.cs.StandardCharsets#aliases_CESU_8()->String[]::: standard charsets aliases_ u_8
sun.nio.cs.StandardCharsets#aliases_UTF_16()->String[]::: standard charsets aliases_ f_16
sun.nio.cs.StandardCharsets#aliases_UTF_16BE()->String[]::: standard charsets aliases_ f_16 e
sun.nio.cs.StandardCharsets#aliases_UTF_16LE()->String[]::: standard charsets aliases_ f_16 e
sun.nio.cs.StandardCharsets#aliases_UTF_16LE_BOM()->String[]::: standard charsets aliases_ f_16 e_ m
sun.nio.cs.StandardCharsets#aliases_UTF_32()->String[]::: standard charsets aliases_ f_32
sun.nio.cs.StandardCharsets#aliases_UTF_32LE()->String[]::: standard charsets aliases_ f_32 e
sun.nio.cs.StandardCharsets#aliases_UTF_32BE()->String[]::: standard charsets aliases_ f_32 e
sun.nio.cs.StandardCharsets#aliases_UTF_32LE_BOM()->String[]::: standard charsets aliases_ f_32 e_ m
sun.nio.cs.StandardCharsets#aliases_UTF_32BE_BOM()->String[]::: standard charsets aliases_ f_32 e_ m
sun.nio.cs.StandardCharsets#aliases_ISO_8859_1()->String[]::: standard charsets aliases_ o_8859_1
sun.nio.cs.StandardCharsets#aliases_ISO_8859_2()->String[]::: standard charsets aliases_ o_8859_2
sun.nio.cs.StandardCharsets#aliases_ISO_8859_4()->String[]::: standard charsets aliases_ o_8859_4
sun.nio.cs.StandardCharsets#aliases_ISO_8859_5()->String[]::: standard charsets aliases_ o_8859_5
sun.nio.cs.StandardCharsets#aliases_ISO_8859_7()->String[]::: standard charsets aliases_ o_8859_7
sun.nio.cs.StandardCharsets#aliases_ISO_8859_9()->String[]::: standard charsets aliases_ o_8859_9
sun.nio.cs.StandardCharsets#aliases_ISO_8859_13()->String[]::: standard charsets aliases_ o_8859_13
sun.nio.cs.StandardCharsets#aliases_ISO_8859_15()->String[]::: standard charsets aliases_ o_8859_15
sun.nio.cs.StandardCharsets#aliases_ISO_8859_16()->String[]::: standard charsets aliases_ o_8859_16
sun.nio.cs.StandardCharsets#aliases_KOI8_R()->String[]::: standard charsets aliases_ i8_ r
sun.nio.cs.StandardCharsets#aliases_KOI8_U()->String[]::: standard charsets aliases_ i8_ u
sun.nio.cs.StandardCharsets#aliases_MS1250()->String[]::: standard charsets aliases_ s1250
sun.nio.cs.StandardCharsets#aliases_MS1251()->String[]::: standard charsets aliases_ s1251
sun.nio.cs.StandardCharsets#aliases_MS1252()->String[]::: standard charsets aliases_ s1252
sun.nio.cs.StandardCharsets#aliases_MS1253()->String[]::: standard charsets aliases_ s1253
sun.nio.cs.StandardCharsets#aliases_MS1254()->String[]::: standard charsets aliases_ s1254
sun.nio.cs.StandardCharsets#aliases_MS1257()->String[]::: standard charsets aliases_ s1257
sun.nio.cs.StandardCharsets#aliases_IBM437()->String[]::: standard charsets aliases_ m437
sun.nio.cs.StandardCharsets#aliases_IBM737()->String[]::: standard charsets aliases_ m737
sun.nio.cs.StandardCharsets#aliases_IBM775()->String[]::: standard charsets aliases_ m775
sun.nio.cs.StandardCharsets#aliases_IBM850()->String[]::: standard charsets aliases_ m850
sun.nio.cs.StandardCharsets#aliases_IBM852()->String[]::: standard charsets aliases_ m852
sun.nio.cs.StandardCharsets#aliases_IBM855()->String[]::: standard charsets aliases_ m855
sun.nio.cs.StandardCharsets#aliases_IBM857()->String[]::: standard charsets aliases_ m857
sun.nio.cs.StandardCharsets#aliases_IBM858()->String[]::: standard charsets aliases_ m858
sun.nio.cs.StandardCharsets#aliases_IBM862()->String[]::: standard charsets aliases_ m862
sun.nio.cs.StandardCharsets#aliases_IBM866()->String[]::: standard charsets aliases_ m866
sun.nio.cs.StandardCharsets#aliases_IBM874()->String[]::: standard charsets aliases_ m874
sun.nio.cs.StandardCharsets#aliases_MS950_HKSCS_XP()->String[]::: standard charsets aliases_ s950_ s_ p
sun.nio.cs.StandardCharsets#aliases_MS950_HKSCS()->String[]::: standard charsets aliases_ s950_ s
sun.nio.cs.StandardCharsets#aliases_MS950()->String[]::: standard charsets aliases_ s950
sun.nio.cs.StandardCharsets#aliases_MS874()->String[]::: standard charsets aliases_ s874
sun.nio.cs.StandardCharsets#aliases_GBK()->String[]::: standard charsets aliases_ k
sun.nio.cs.StandardCharsets#aliases_MS936()->String[]::: standard charsets aliases_ s936
sun.nio.cs.StandardCharsets#aliases_SJIS()->String[]::: standard charsets aliases_ s
sun.nio.cs.StandardCharsets#aliases_MS932()->String[]::: standard charsets aliases_ s932
sun.nio.cs.StandardCharsets#aliases_JIS_X_0201()->String[]::: standard charsets aliases_ s_ x_0201
sun.nio.cs.StandardCharsets#aliases_MS949()->String[]::: standard charsets aliases_ s949
sun.nio.cs.StandardCharsets#aliases_Johab()->String[]::: standard charsets aliases_ johab
sun.nio.cs.StandardCharsets#aliases_MS1255()->String[]::: standard charsets aliases_ s1255
sun.nio.cs.StandardCharsets#aliases_MS1256()->String[]::: standard charsets aliases_ s1256
sun.nio.cs.StandardCharsets#aliases_MS1258()->String[]::: standard charsets aliases_ s1258
sun.nio.cs.StandardCharsets#charsetForName(String)->Charset::: standard charsets charset for name
sun.nio.cs.StandardCharsets#charsets()->Iterator::: standard charsets charsets
sun.nio.cs.StreamDecoder#forInputStreamReader(InputStream, Object, String)->StreamDecoder::: stream decoder for input stream reader
sun.nio.cs.StreamDecoder#forInputStreamReader(InputStream, Object, Charset)->StreamDecoder::: stream decoder for input stream reader
sun.nio.cs.StreamDecoder#forInputStreamReader(InputStream, Object, CharsetDecoder)->StreamDecoder::: stream decoder for input stream reader
sun.nio.cs.StreamDecoder#forDecoder(ReadableByteChannel, CharsetDecoder, int)->StreamDecoder::: stream decoder for decoder
sun.nio.cs.StreamDecoder#getEncoding()->String::: stream decoder get encoding
sun.nio.cs.StreamDecoder#read()->int::: stream decoder read
sun.nio.cs.StreamDecoder#read(char[], int, int)->int::: stream decoder read
sun.nio.cs.StreamDecoder#ready()->boolean::: stream decoder ready
sun.nio.cs.StreamDecoder#close()->void::: stream decoder close
sun.nio.cs.StreamDecoder#implRead(char[], int, int)->int::: stream decoder impl read
sun.nio.cs.StreamDecoder#encodingName()->String::: stream decoder encoding name
sun.nio.cs.StreamDecoder#implReady()->boolean::: stream decoder impl ready
sun.nio.cs.StreamDecoder#implClose()->void::: stream decoder impl close
sun.nio.cs.StreamEncoder#forOutputStreamWriter(OutputStream, Object, String)->StreamEncoder::: stream encoder for output stream writer
sun.nio.cs.StreamEncoder#forOutputStreamWriter(OutputStream, Object, Charset)->StreamEncoder::: stream encoder for output stream writer
sun.nio.cs.StreamEncoder#forOutputStreamWriter(OutputStream, Object, CharsetEncoder)->StreamEncoder::: stream encoder for output stream writer
sun.nio.cs.StreamEncoder#forEncoder(WritableByteChannel, CharsetEncoder, int)->StreamEncoder::: stream encoder for encoder
sun.nio.cs.StreamEncoder#getEncoding()->String::: stream encoder get encoding
sun.nio.cs.StreamEncoder#flushBuffer()->void::: stream encoder flush buffer
sun.nio.cs.StreamEncoder#write(int)->void::: stream encoder write
sun.nio.cs.StreamEncoder#write(char[], int, int)->void::: stream encoder write
sun.nio.cs.StreamEncoder#write(String, int, int)->void::: stream encoder write
sun.nio.cs.StreamEncoder#write(CharBuffer)->void::: stream encoder write
sun.nio.cs.StreamEncoder#flush()->void::: stream encoder flush
sun.nio.cs.StreamEncoder#close()->void::: stream encoder close
sun.nio.cs.StreamEncoder#implWrite(char[], int, int)->void::: stream encoder impl write
sun.nio.cs.StreamEncoder#implWrite(CharBuffer)->void::: stream encoder impl write
sun.nio.cs.StreamEncoder#implFlushBuffer()->void::: stream encoder impl flush buffer
sun.nio.cs.StreamEncoder#implFlush()->void::: stream encoder impl flush
sun.nio.cs.StreamEncoder#implClose()->void::: stream encoder impl close
sun.nio.cs.StreamEncoder#encodingName()->String::: stream encoder encoding name
sun.nio.cs.StringUTF16#getChar(byte[], int)->char::: string f16 get char
sun.nio.cs.Surrogate#isHigh(int)->boolean:::Tells whether or not the given value is in the high surrogate range
sun.nio.cs.Surrogate#isLow(int)->boolean:::Tells whether or not the given value is in the low surrogate range
sun.nio.cs.Surrogate#is(int)->boolean:::Tells whether or not the given value is in the surrogate range
sun.nio.cs.Surrogate#neededFor(int)->boolean:::Tells whether or not the given UCS-4 character must be represented as a surrogate pair in UTF-16
sun.nio.cs.Surrogate#high(int)->char:::Returns the high UTF-16 surrogate for the given supplementary UCS-4 character
sun.nio.cs.Surrogate#low(int)->char:::Returns the low UTF-16 surrogate for the given supplementary UCS-4 character
sun.nio.cs.Surrogate#toUCS4(char, char)->int:::Converts the given surrogate pair into a 32-bit UCS-4 character
sun.nio.cs.Surrogate.Parser#character()->int:::Returns the UCS-4 character previously parsed.
sun.nio.cs.Surrogate.Parser#isPair()->boolean:::Tells whether or not the previously-parsed UCS-4 character was originally represented by a surrogate pair.
sun.nio.cs.Surrogate.Parser#increment()->int:::Returns the number of UTF-16 characters consumed by the previous parse.
sun.nio.cs.Surrogate.Parser#error()->CoderResult:::If the previous parse operation detected an error, return the object describing that error.
sun.nio.cs.Surrogate.Parser#unmappableResult()->CoderResult:::Returns an unmappable-input result object, with the appropriate input length, for the previously-parsed character.
sun.nio.cs.Surrogate.Parser#parse(char, CharBuffer)->int:::Parses a UCS-4 character from the given source buffer, handling surrogates.
sun.nio.cs.Surrogate.Parser#parse(char, char[], int, int)->int:::Parses a UCS-4 character from the given source buffer, handling surrogates.
sun.nio.cs.Surrogate.Generator#error()->CoderResult:::If the previous generation operation detected an error, return the object describing that error.
sun.nio.cs.Surrogate.Generator#generate(int, int, CharBuffer)->int:::Generates one or two UTF-16 characters to represent the given UCS-4 character.
sun.nio.cs.Surrogate.Generator#generate(int, int, char[], int, int)->int:::Generates one or two UTF-16 characters to represent the given UCS-4 character.
sun.nio.cs.ThreadLocalCoders#decoderFor(Object)->CharsetDecoder::: thread local coders decoder for
sun.nio.cs.ThreadLocalCoders#encoderFor(Object)->CharsetEncoder::: thread local coders encoder for
sun.nio.cs.Unicode#contains(Charset)->boolean::: unicode contains
sun.nio.cs.UnicodeDecoder#decodeLoop(ByteBuffer, CharBuffer)->CoderResult::: unicode decoder decode loop
sun.nio.cs.UnicodeDecoder#implReset()->void::: unicode decoder impl reset
sun.nio.cs.UnicodeEncoder#encodeLoop(CharBuffer, ByteBuffer)->CoderResult::: unicode encoder encode loop
sun.nio.cs.UnicodeEncoder#implReset()->void::: unicode encoder impl reset
sun.nio.cs.UnicodeEncoder#canEncode(char)->boolean::: unicode encoder can encode
sun.nio.cs.US_ASCII#historicalName()->String::: s_ i historical name
sun.nio.cs.US_ASCII#contains(Charset)->boolean::: s_ i contains
sun.nio.cs.US_ASCII#newDecoder()->CharsetDecoder::: s_ i new decoder
sun.nio.cs.US_ASCII#newEncoder()->CharsetEncoder::: s_ i new encoder
sun.nio.cs.UTF_16#historicalName()->String::: f_16 historical name
sun.nio.cs.UTF_16#newDecoder()->CharsetDecoder::: f_16 new decoder
sun.nio.cs.UTF_16#newEncoder()->CharsetEncoder::: f_16 new encoder
sun.nio.cs.UTF_16BE#historicalName()->String::: f_16 e historical name
sun.nio.cs.UTF_16BE#newDecoder()->CharsetDecoder::: f_16 e new decoder
sun.nio.cs.UTF_16BE#newEncoder()->CharsetEncoder::: f_16 e new encoder
sun.nio.cs.UTF_16LE#historicalName()->String::: f_16 e historical name
sun.nio.cs.UTF_16LE#newDecoder()->CharsetDecoder::: f_16 e new decoder
sun.nio.cs.UTF_16LE#newEncoder()->CharsetEncoder::: f_16 e new encoder
sun.nio.cs.UTF_16LE_BOM#historicalName()->String::: f_16 e_ m historical name
sun.nio.cs.UTF_16LE_BOM#newDecoder()->CharsetDecoder::: f_16 e_ m new decoder
sun.nio.cs.UTF_16LE_BOM#newEncoder()->CharsetEncoder::: f_16 e_ m new encoder
sun.nio.cs.UTF_32#historicalName()->String::: f_32 historical name
sun.nio.cs.UTF_32#newDecoder()->CharsetDecoder::: f_32 new decoder
sun.nio.cs.UTF_32#newEncoder()->CharsetEncoder::: f_32 new encoder
sun.nio.cs.UTF_32BE#historicalName()->String::: f_32 e historical name
sun.nio.cs.UTF_32BE#newDecoder()->CharsetDecoder::: f_32 e new decoder
sun.nio.cs.UTF_32BE#newEncoder()->CharsetEncoder::: f_32 e new encoder
sun.nio.cs.UTF_32BE_BOM#historicalName()->String::: f_32 e_ m historical name
sun.nio.cs.UTF_32BE_BOM#newDecoder()->CharsetDecoder::: f_32 e_ m new decoder
sun.nio.cs.UTF_32BE_BOM#newEncoder()->CharsetEncoder::: f_32 e_ m new encoder
sun.nio.cs.UTF_32Coder.Decoder#decodeLoop(ByteBuffer, CharBuffer)->CoderResult::: decoder decode loop
sun.nio.cs.UTF_32Coder.Decoder#implReset()->void::: decoder impl reset
sun.nio.cs.UTF_32Coder.Encoder#put(int, ByteBuffer)->void::: encoder put
sun.nio.cs.UTF_32Coder.Encoder#encodeLoop(CharBuffer, ByteBuffer)->CoderResult::: encoder encode loop
sun.nio.cs.UTF_32Coder.Encoder#implReset()->void::: encoder impl reset
sun.nio.cs.UTF_32LE#historicalName()->String::: f_32 e historical name
sun.nio.cs.UTF_32LE#newDecoder()->CharsetDecoder::: f_32 e new decoder
sun.nio.cs.UTF_32LE#newEncoder()->CharsetEncoder::: f_32 e new encoder
sun.nio.cs.UTF_32LE_BOM#historicalName()->String::: f_32 e_ m historical name
sun.nio.cs.UTF_32LE_BOM#newDecoder()->CharsetDecoder::: f_32 e_ m new decoder
sun.nio.cs.UTF_32LE_BOM#newEncoder()->CharsetEncoder::: f_32 e_ m new encoder
sun.nio.cs.UTF_8#historicalName()->String::: f_8 historical name
sun.nio.cs.UTF_8#newDecoder()->CharsetDecoder::: f_8 new decoder
sun.nio.cs.UTF_8#newEncoder()->CharsetEncoder::: f_8 new encoder
sun.nio.cs.UTF_8#updatePositions(Buffer, int, Buffer, int)->void::: f_8 update positions
