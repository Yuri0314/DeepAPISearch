ArrayDecoder#decode(byte[], int, int, char[])::: array decoder decode:::
ArrayDecoder#isASCIICompatible()::: array decoder is compatible:::return
ArrayEncoder#encode(char[], int, int, byte[])::: array encoder encode:::
ArrayEncoder#encodeFromLatin1(byte[], int, int, byte[])::: array encoder encode from latin1:::return
ArrayEncoder#encodeFromUTF16(byte[], int, int, byte[])::: array encoder encode from f16:::return
ArrayEncoder#isASCIICompatible()::: array encoder is compatible:::return
CESU_8#historicalName()::: u_8 historical name:::return
CESU_8#newDecoder()::: u_8 new decoder:::return->new->Decoder
CESU_8#newEncoder()::: u_8 new encoder:::return->new->Encoder
CESU_8#updatePositions(Buffer, int, Buffer, int)::: u_8 update positions:::src->src->arrayOffset->position->dst->dst->arrayOffset->position
CESU_8.Decoder#isNotContinuation(int)::: decoder is not continuation:::return
CESU_8.Decoder#isMalformed3(int, int, int)::: decoder is malformed3:::return
CESU_8.Decoder#isMalformed3_2(int, int)::: decoder is malformed3_2:::return
CESU_8.Decoder#isMalformed4(int, int, int)::: decoder is malformed4:::return
CESU_8.Decoder#isMalformed4_2(int, int)::: decoder is malformed4_2:::return
CESU_8.Decoder#isMalformed4_3(int)::: decoder is malformed4_3:::return
CESU_8.Decoder#malformedN(ByteBuffer, int)::: decoder malformed n:::switch->return->CoderResult->malformedForLength->b1->src->get->b2->src->get->return->CoderResult->isNotContinuation->malformedForLength->src->get->src->get->if->isNotContinuation->return->CoderResult->malformedForLength->if->src->get->isNotContinuation->return->CoderResult->malformedForLength->return->CoderResult->malformedForLength->return
CESU_8.Decoder#malformed(ByteBuffer, int, CharBuffer, int, int)::: decoder malformed:::src->src->arrayOffset->position->cr->malformedN->updatePositions->return
CESU_8.Decoder#malformed(ByteBuffer, int, int)::: decoder malformed:::src->position->cr->malformedN->src->position->return
CESU_8.Decoder#malformedForLength(ByteBuffer, int, CharBuffer, int, int)::: decoder malformed for length:::updatePositions->return->CoderResult->malformedForLength
CESU_8.Decoder#malformedForLength(ByteBuffer, int, int)::: decoder malformed for length:::src->position->return->CoderResult->malformedForLength
CESU_8.Decoder#xflow(Buffer, int, int, Buffer, int, int)::: decoder xflow:::updatePositions->return
CESU_8.Decoder#xflow(Buffer, int, int)::: decoder xflow:::src->position->return->src->remaining
CESU_8.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)::: decoder decode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->dlASCII->Math->min->while->while->b1->if->if->return->xflow->else->if->if->return->xflow->b2->if->isNotContinuation->return->malformedForLength->else->if->srcRemaining->if->if->isMalformed3_2->return->malformedForLength->return->xflow->b2->b3->if->isMalformed3->return->malformed->else->return->malformed->return->xflow
CESU_8.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)::: decoder decode buffer loop:::mark->src->position->limit->src->limit->while->b1->src->get->if->if->dst->remaining->return->xflow->dst->put->else->if->if->dst->remaining->return->xflow->b2->src->get->if->isNotContinuation->return->malformedForLength->dst->put->else->if->srcRemaining->if->dst->remaining->if->src->get->isMalformed3_2->return->malformedForLength->return->xflow->b2->src->get->b3->src->get->if->isMalformed3->return->malformed->dst->put->else->return->malformed->return->xflow
CESU_8.Decoder#decodeLoop(ByteBuffer, CharBuffer)::: decoder decode loop:::if->src->hasArray->dst->hasArray->return->decodeArrayLoop->else->return->decodeBufferLoop
CESU_8.Decoder#getByteBuffer(ByteBuffer, byte[], int)::: decoder get byte buffer:::if->ByteBuffer->wrap->bb->position->return
CESU_8.Decoder#decode(byte[], int, int, char[])::: decoder decode:::sl->dp->dlASCII->Math->min->bb->while->while->b1->if->else->if->if->b2->if->isNotContinuation->if->malformedInputAction->return->replacement->charAt->else->continue->if->malformedInputAction->return->replacement->charAt->return->else->if->if->b2->b3->if->isMalformed3->if->malformedInputAction->return->replacement->charAt->getByteBuffer->malformedN->length->else->continue->if->malformedInputAction->return->if->isMalformed3_2->replacement->charAt->continue->replacement->charAt->return->else->if->malformedInputAction->return->replacement->charAt->return
CESU_8.Encoder#canEncode(char)::: encoder can encode:::return->Character->isSurrogate
CESU_8.Encoder#isLegalReplacement(byte[])::: encoder is legal replacement:::return->super->isLegalReplacement
CESU_8.Encoder#overflow(CharBuffer, int, ByteBuffer, int)::: encoder overflow:::updatePositions->return
CESU_8.Encoder#overflow(CharBuffer, int)::: encoder overflow:::src->position->return
CESU_8.Encoder#to3Bytes(byte[], int, char)::: encoder to3 bytes:::
CESU_8.Encoder#to3Bytes(ByteBuffer, char)::: encoder to3 bytes:::dst->put->dst->put->dst->put
CESU_8.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)::: encoder encode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->dlASCII->Math->min->while->while->c->if->if->return->overflow->else->if->if->return->overflow->else->if->Character->isSurrogate->if->new->Surrogate.Parser->uc->sgp->parse->if->updatePositions->return->sgp->error->if->return->overflow->Character->highSurrogate->to3Bytes->Character->lowSurrogate->to3Bytes->else->if->return->overflow->to3Bytes->updatePositions->return
CESU_8.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)::: encoder encode buffer loop:::mark->src->position->while->src->hasRemaining->c->src->get->if->if->dst->hasRemaining->return->overflow->dst->put->else->if->if->dst->remaining->return->overflow->dst->put->dst->put->else->if->Character->isSurrogate->if->new->Surrogate.Parser->uc->sgp->parse->if->src->position->return->sgp->error->if->dst->remaining->return->overflow->Character->highSurrogate->to3Bytes->Character->lowSurrogate->to3Bytes->else->if->dst->remaining->return->overflow->to3Bytes->src->position->return
CESU_8.Encoder#encodeLoop(CharBuffer, ByteBuffer)::: encoder encode loop:::if->src->hasArray->dst->hasArray->return->encodeArrayLoop->else->return->encodeBufferLoop
CESU_8.Encoder#encode(char[], int, int, byte[])::: encoder encode:::sl->dp->dlASCII->Math->min->while->while->c->if->else->if->else->if->Character->isSurrogate->if->new->Surrogate.Parser->uc->sgp->parse->if->if->malformedInputAction->return->replacement->else->Character->highSurrogate->to3Bytes->Character->lowSurrogate->to3Bytes->else->to3Bytes->return
CharsetMapping#decodeSingle(int)::: charset mapping decode single:::return
CharsetMapping#decodeDouble(int, int)::: charset mapping decode double:::if->if->return->if->return->return
CharsetMapping#decodeSurrogate(int, char[])::: charset mapping decode surrogate:::end->i->Arrays->binarySearch->if->Character->toChars->return->return
CharsetMapping#decodeComposite(Entry, char[])::: charset mapping decode composite:::i->findBytes->if->return->return
CharsetMapping#encodeChar(char)::: charset mapping encode char:::index->if->return->return
CharsetMapping#encodeSurrogate(char, char)::: charset mapping encode surrogate:::cp->Character->toCodePoint->if->return->end->i->Arrays->binarySearch->if->return->return
CharsetMapping#isCompositeBase(Entry)::: charset mapping is composite base:::if->return->findCP->return
CharsetMapping#encodeComposite(Entry)::: charset mapping encode composite:::i->findComp->if->return->return
CharsetMapping#get(InputStream)::: charset mapping get:::return->AccessController->new->PrivilegedAction<>->doPrivileged
CharsetMapping#findBytes(Entry[], Entry)::: charset mapping find bytes:::return->Arrays->binarySearch
CharsetMapping#findCP(Entry[], Entry)::: charset mapping find p:::return->Arrays->binarySearch
CharsetMapping#findComp(Entry[], Entry)::: charset mapping find comp:::return->Arrays->binarySearch
CharsetMapping#readNBytes(InputStream, byte[], int)::: charset mapping read bytes:::off->while->n->in->read->if->return->return
CharsetMapping#readCharArray()::: charset mapping read char array:::size->cc->new->charArr->for->i->return
CharsetMapping#readSINGLEBYTE()::: charset mapping read e:::map->readCharArray->for->i
CharsetMapping#readINDEXC2B()::: charset mapping read c2 b:::map->readCharArray->for->i
CharsetMapping#readDB(int, int, int)::: charset mapping read b:::map->readCharArray->for->i->return
CharsetMapping#readDOUBLEBYTE1()::: charset mapping read e1:::readDB
CharsetMapping#readDOUBLEBYTE2()::: charset mapping read e2:::readDB
CharsetMapping#readCOMPOSITE()::: charset mapping read e:::map->readCharArray->mLen->new->EntryArr->new->EntryArr->for->i->j->Arrays->sort
CharsetMapping#load(InputStream)::: charset mapping load:::try->len->in->read->in->read->in->read->in->read->new->byteArr->if->readNBytes->throw->new->RuntimeException->in->close->while->type->switch->readINDEXC2B->break->readSINGLEBYTE->break->readDOUBLEBYTE1->break->readDOUBLEBYTE2->break->readCharArray->break->readCharArray->break->readCOMPOSITE->break->throw->new->RuntimeException->return->catch->x->printStackTrace->return->finally
DelegatableDecoder#decodeLoop(ByteBuffer, CharBuffer)::: delegatable decoder decode loop:::
DelegatableDecoder#implReset()::: delegatable decoder impl reset:::
DelegatableDecoder#implFlush(CharBuffer)::: delegatable decoder impl flush:::
DoubleByte.Decoder#crMalformedOrUnderFlow(int)::: decoder cr malformed or under flow:::return
DoubleByte.Decoder#crMalformedOrUnmappable(int, int)::: decoder cr malformed or unmappable:::if->decodeSingle->return->CoderResult->malformedForLength->return->CoderResult->unmappableForLength
DoubleByte.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)::: decoder decode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->inSize->b1->c->if->if->return->crMalformedOrUnderFlow->b2->if->return->crMalformedOrUnmappable->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
DoubleByte.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)::: decoder decode buffer loop:::mark->src->position->try->while->src->hasRemaining->dst->hasRemaining->b1->src->get->c->inSize->if->if->src->remaining->return->crMalformedOrUnderFlow->b2->src->get->if->return->crMalformedOrUnmappable->dst->put->return->src->hasRemaining->catch->finally->src->position
DoubleByte.Decoder#decodeLoop(ByteBuffer, CharBuffer)::: decoder decode loop:::if->src->hasArray->dst->hasArray->return->decodeArrayLoop->else->return->decodeBufferLoop
DoubleByte.Decoder#decode(byte[], int, int, char[])::: decoder decode:::dp->sl->repl->replacement->charAt->while->b1->c->if->if->b2->if->if->crMalformedOrUnmappable->length->if->return
DoubleByte.Decoder#isASCIICompatible()::: decoder is compatible:::return
DoubleByte.Decoder#implReset()::: decoder impl reset:::super->implReset
DoubleByte.Decoder#implFlush(CharBuffer)::: decoder impl flush:::return->super->implFlush
DoubleByte.Decoder#decodeSingle(int)::: decoder decode single:::return
DoubleByte.Decoder#decodeDouble(int, int)::: decoder decode double:::if->return->return
DoubleByte.Decoder_EBCDIC#implReset()::: decoder_ c impl reset:::
DoubleByte.Decoder_EBCDIC#isDoubleByte(int, int)::: decoder_ c is double byte:::return
DoubleByte.Decoder_EBCDIC#decodeArrayLoop(ByteBuffer, CharBuffer)::: decoder_ c decode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->b1->inSize->if->if->return->CoderResult->malformedForLength->else->else->if->if->return->CoderResult->malformedForLength->else->else->c->if->if->return->CoderResult->unmappableForLength->else->if->return->b2->if->if->isDoubleByte->return->CoderResult->malformedForLength->return->CoderResult->unmappableForLength->if->return->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
DoubleByte.Decoder_EBCDIC#decodeBufferLoop(ByteBuffer, CharBuffer)::: decoder_ c decode buffer loop:::mark->src->position->try->while->src->hasRemaining->b1->src->get->inSize->if->if->return->CoderResult->malformedForLength->else->else->if->if->return->CoderResult->malformedForLength->else->else->c->if->if->return->CoderResult->unmappableForLength->else->if->src->remaining->return->b2->src->get->if->if->isDoubleByte->return->CoderResult->malformedForLength->return->CoderResult->unmappableForLength->if->dst->remaining->return->dst->put->return->catch->finally->src->position
DoubleByte.Decoder_EBCDIC#decode(byte[], int, int, char[])::: decoder_ c decode:::dp->sl->repl->replacement->charAt->while->b1->if->if->else->else->if->if->else->else->c->if->if->else->if->else->b2->if->return
DoubleByte.Decoder_DBCSONLY#crMalformedOrUnmappable(int, int)::: decoder_ y cr malformed or unmappable:::return->CoderResult->unmappableForLength
DoubleByte.Decoder_EUC_SIM#crMalformedOrUnderFlow(int)::: decoder_ c_ m cr malformed or under flow:::if->return->CoderResult->malformedForLength->return
DoubleByte.Decoder_EUC_SIM#crMalformedOrUnmappable(int, int)::: decoder_ c_ m cr malformed or unmappable:::if->return->CoderResult->malformedForLength->return->CoderResult->unmappableForLength
DoubleByte.Decoder_EUC_SIM#decode(byte[], int, int, char[])::: decoder_ c_ m decode:::dp->sl->repl->replacement->charAt->while->b1->c->if->if->b2->if->if->else->return
DoubleByte.Encoder#canEncode(char)::: encoder can encode:::return->encodeChar
DoubleByte.Encoder#sgp()::: encoder sgp:::if->new->Surrogate.Parser->return
DoubleByte.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)::: encoder encode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->c->bb->encodeChar->if->if->Character->isSurrogate->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->return->CoderResult->unmappableForLength->if->if->return->else->if->return->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
DoubleByte.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)::: encoder encode buffer loop:::mark->src->position->try->while->src->hasRemaining->c->src->get->bb->encodeChar->if->if->Character->isSurrogate->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->return->CoderResult->unmappableForLength->if->if->dst->remaining->return->dst->put->dst->put->else->if->dst->remaining->return->dst->put->return->catch->finally->src->position
DoubleByte.Encoder#encodeLoop(CharBuffer, ByteBuffer)::: encoder encode loop:::if->src->hasArray->dst->hasArray->return->encodeArrayLoop->else->return->encodeBufferLoop
DoubleByte.Encoder#implReplaceWith(byte[])::: encoder impl replace with:::
DoubleByte.Encoder#encode(char[], int, int, byte[])::: encoder encode:::dp->sl->dl->while->c->bb->encodeChar->if->if->Character->isHighSurrogate->Character->isLowSurrogate->if->continue->if->else->return
DoubleByte.Encoder#encodeFromLatin1(byte[], int, int, byte[])::: encoder encode from latin1:::dp->sl->while->c->bb->encodeChar->if->if->continue->if->else->return
DoubleByte.Encoder#encodeFromUTF16(byte[], int, int, byte[])::: encoder encode from f16:::dp->sl->while->c->StringUTF16->getChar->bb->encodeChar->if->if->Character->isHighSurrogate->Character->StringUTF16->getChar->isLowSurrogate->if->continue->if->else->return
DoubleByte.Encoder#isASCIICompatible()::: encoder is compatible:::return
DoubleByte.Encoder#encodeChar(char)::: encoder encode char:::return
DoubleByte.Encoder#initC2B(String[], String, String, String, int, int, char[], char[])::: encoder init c2 b:::Arrays->fill->off->b2c_ca->new->charArrs->b2cSB_ca->if->b2cSB->toCharArray->for->i->if->j->while->b2cNR->length->b->b2cNR->charAt->c->b2cNR->charAt->if->if->else->if->if->for->b->for->b1->if->for->i->c2bNR->length
DoubleByte.Encoder_DBCSONLY#encodeChar(char)::: encoder_ y encode char:::bb->super->encodeChar->if->return->return
DoubleByte.Encoder_EBCDIC#implReset()::: encoder_ c impl reset:::
DoubleByte.Encoder_EBCDIC#implFlush(ByteBuffer)::: encoder_ c impl flush:::if->if->out->remaining->return->out->put->implReset->return
DoubleByte.Encoder_EBCDIC#encodeArrayLoop(CharBuffer, ByteBuffer)::: encoder_ c encode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->c->bb->encodeChar->if->if->Character->isSurrogate->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->return->CoderResult->unmappableForLength->if->if->if->return->if->return->else->if->if->return->if->return->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
DoubleByte.Encoder_EBCDIC#encodeBufferLoop(CharBuffer, ByteBuffer)::: encoder_ c encode buffer loop:::mark->src->position->try->while->src->hasRemaining->c->src->get->bb->encodeChar->if->if->Character->isSurrogate->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->return->CoderResult->unmappableForLength->if->if->if->dst->remaining->return->dst->put->if->dst->remaining->return->dst->put->dst->put->else->if->if->dst->remaining->return->dst->put->if->dst->remaining->return->dst->put->return->catch->finally->src->position
DoubleByte.Encoder_EBCDIC#encode(char[], int, int, byte[])::: encoder_ c encode:::dp->sl->while->c->bb->encodeChar->if->if->Character->isHighSurrogate->Character->isLowSurrogate->if->continue->if->if->else->if->if->return
DoubleByte.Encoder_EBCDIC#encodeFromLatin1(byte[], int, int, byte[])::: encoder_ c encode from latin1:::dp->sl->while->c->bb->encodeChar->if->if->continue->if->if->else->if->if->return
DoubleByte.Encoder_EBCDIC#encodeFromUTF16(byte[], int, int, byte[])::: encoder_ c encode from f16:::dp->sl->while->c->StringUTF16->getChar->bb->encodeChar->if->if->Character->isHighSurrogate->Character->StringUTF16->getChar->isLowSurrogate->if->continue->if->if->else->if->if->return
GBK#historicalName()::: k historical name:::return
GBK#contains(Charset)::: k contains:::return->cs->name->equals
GBK#newDecoder()::: k new decoder:::initb2c->return->new->DoubleByte.Decoder
GBK#newEncoder()::: k new encoder:::initc2b->return->new->DoubleByte.Encoder
GBK#initb2c()::: k initb2c:::if->return->synchronized->if->return->for->i->b2cSBStr->toCharArray
GBK#initc2b()::: k initc2b:::if->return->synchronized->if->return->b2cNR->c2bNR->initC2B
HistoricallyNamedCharset#historicalName()::: historically named charset historical name:::
HKSCS.Decoder#decodeSingle(int)::: decoder decode single:::return->big5Dec->decodeSingle
HKSCS.Decoder#decodeBig5(int, int)::: decoder decode big5:::return->big5Dec->decodeDouble
HKSCS.Decoder#decodeDouble(int, int)::: decoder decode double:::return
HKSCS.Decoder#decodeDoubleEx(int, int)::: decoder decode double ex:::return
HKSCS.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)::: decoder decode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->b1->c->decodeSingle->inSize->outSize->cc->if->if->return->b2->if->return->CoderResult->unmappableForLength->decodeDouble->if->decodeDoubleEx->if->decodeBig5->if->return->CoderResult->unmappableForLength->else->if->return->if->Surrogate->high->Surrogate->low->else->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
HKSCS.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)::: decoder decode buffer loop:::mark->src->position->try->while->src->hasRemaining->cc->b1->src->get->inSize->outSize->c->decodeSingle->if->if->src->remaining->return->b2->src->get->if->return->CoderResult->unmappableForLength->decodeDouble->if->decodeDoubleEx->if->decodeBig5->if->return->CoderResult->unmappableForLength->else->if->dst->remaining->return->if->dst->Surrogate->high->put->dst->Surrogate->low->put->else->dst->put->return->catch->finally->src->position
HKSCS.Decoder#decode(byte[], int, int, char[])::: decoder decode:::dp->sl->repl->replacement->charAt->while->b1->c->decodeSingle->if->if->else->b2->if->else->if->decodeDouble->decodeDoubleEx->if->decodeBig5->if->else->Surrogate->high->Surrogate->low->continue->return
HKSCS.Decoder#decodeLoop(ByteBuffer, CharBuffer)::: decoder decode loop:::if->src->hasArray->dst->hasArray->return->decodeArrayLoop->else->return->decodeBufferLoop
HKSCS.Decoder#initb2c(char[][], String[])::: decoder initb2c:::for->i
HKSCS.Encoder#encodeBig5(char)::: encoder encode big5:::return->big5Enc->encodeChar
HKSCS.Encoder#encodeChar(char)::: encoder encode char:::bb->if->return->encodeBig5->return
HKSCS.Encoder#encodeSupp(int)::: encoder encode supp:::if->return->return
HKSCS.Encoder#canEncode(char)::: encoder can encode:::return->encodeChar
HKSCS.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)::: encoder encode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->c->inSize->bb->encodeChar->if->if->Character->isSurrogate->cp->if->sgp->parse->return->sgp->error->encodeSupp->if->return->CoderResult->unmappableForLength->else->return->CoderResult->unmappableForLength->if->if->return->else->if->return->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
HKSCS.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)::: encoder encode buffer loop:::mark->src->position->try->while->src->hasRemaining->inSize->c->src->get->bb->encodeChar->if->if->Character->isSurrogate->cp->if->sgp->parse->return->sgp->error->encodeSupp->if->return->CoderResult->unmappableForLength->else->return->CoderResult->unmappableForLength->if->if->dst->remaining->return->dst->put->dst->put->else->if->dst->remaining->return->dst->put->return->catch->finally->src->position
HKSCS.Encoder#encodeLoop(CharBuffer, ByteBuffer)::: encoder encode loop:::if->src->hasArray->dst->hasArray->return->encodeArrayLoop->else->return->encodeBufferLoop
HKSCS.Encoder#implReplaceWith(byte[])::: encoder impl replace with:::
HKSCS.Encoder#encode(char[], int, int, byte[])::: encoder encode:::dp->sl->while->c->bb->encodeChar->if->if->Character->isHighSurrogate->Character->isLowSurrogate->Character->toCodePoint->encodeSupp->if->continue->if->else->return
HKSCS.Encoder#encodeFromUTF16(byte[], int, int, byte[])::: encoder encode from f16:::dp->sl->dl->while->c->StringUTF16->getChar->bb->encodeChar->if->if->Character->isHighSurrogate->Character->StringUTF16->getChar->isLowSurrogate->Character->StringUTF16->getChar->toCodePoint->encodeSupp->if->continue->if->else->return
HKSCS.Encoder#initc2b(char[][], String[], String)::: encoder initc2b:::b2Min->Arrays->fill->for->b1->if->c->for->i->pua->length
IBM437#historicalName()::: m437 historical name:::return
IBM437#contains(Charset)::: m437 contains:::return
IBM437#newDecoder()::: m437 new decoder:::return->new->SingleByte.Decoder
IBM437#newEncoder()::: m437 new encoder:::return->new->SingleByte.Encoder
IBM737#historicalName()::: m737 historical name:::return
IBM737#contains(Charset)::: m737 contains:::return
IBM737#newDecoder()::: m737 new decoder:::return->new->SingleByte.Decoder
IBM737#newEncoder()::: m737 new encoder:::return->new->SingleByte.Encoder
IBM775#historicalName()::: m775 historical name:::return
IBM775#contains(Charset)::: m775 contains:::return
IBM775#newDecoder()::: m775 new decoder:::return->new->SingleByte.Decoder
IBM775#newEncoder()::: m775 new encoder:::return->new->SingleByte.Encoder
IBM850#historicalName()::: m850 historical name:::return
IBM850#contains(Charset)::: m850 contains:::return
IBM850#newDecoder()::: m850 new decoder:::return->new->SingleByte.Decoder
IBM850#newEncoder()::: m850 new encoder:::return->new->SingleByte.Encoder
IBM852#historicalName()::: m852 historical name:::return
IBM852#contains(Charset)::: m852 contains:::return
IBM852#newDecoder()::: m852 new decoder:::return->new->SingleByte.Decoder
IBM852#newEncoder()::: m852 new encoder:::return->new->SingleByte.Encoder
IBM855#historicalName()::: m855 historical name:::return
IBM855#contains(Charset)::: m855 contains:::return
IBM855#newDecoder()::: m855 new decoder:::return->new->SingleByte.Decoder
IBM855#newEncoder()::: m855 new encoder:::return->new->SingleByte.Encoder
IBM857#historicalName()::: m857 historical name:::return
IBM857#contains(Charset)::: m857 contains:::return
IBM857#newDecoder()::: m857 new decoder:::return->new->SingleByte.Decoder
IBM857#newEncoder()::: m857 new encoder:::return->new->SingleByte.Encoder
IBM858#historicalName()::: m858 historical name:::return
IBM858#contains(Charset)::: m858 contains:::return
IBM858#newDecoder()::: m858 new decoder:::return->new->SingleByte.Decoder
IBM858#newEncoder()::: m858 new encoder:::return->new->SingleByte.Encoder
IBM862#historicalName()::: m862 historical name:::return
IBM862#contains(Charset)::: m862 contains:::return
IBM862#newDecoder()::: m862 new decoder:::return->new->SingleByte.Decoder
IBM862#newEncoder()::: m862 new encoder:::return->new->SingleByte.Encoder
IBM866#historicalName()::: m866 historical name:::return
IBM866#contains(Charset)::: m866 contains:::return
IBM866#newDecoder()::: m866 new decoder:::return->new->SingleByte.Decoder
IBM866#newEncoder()::: m866 new encoder:::return->new->SingleByte.Encoder
IBM874#historicalName()::: m874 historical name:::return
IBM874#contains(Charset)::: m874 contains:::return
IBM874#newDecoder()::: m874 new decoder:::return->new->SingleByte.Decoder
IBM874#newEncoder()::: m874 new encoder:::return->new->SingleByte.Encoder
ISO_8859_1#historicalName()::: o_8859_1 historical name:::return
ISO_8859_1#contains(Charset)::: o_8859_1 contains:::return
ISO_8859_1#newDecoder()::: o_8859_1 new decoder:::return->new->Decoder
ISO_8859_1#newEncoder()::: o_8859_1 new encoder:::return->new->Encoder
ISO_8859_1.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)::: decoder decode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->b->if->return->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
ISO_8859_1.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)::: decoder decode buffer loop:::mark->src->position->try->while->src->hasRemaining->b->src->get->if->dst->hasRemaining->return->dst->put->return->catch->finally->src->position
ISO_8859_1.Decoder#decodeLoop(ByteBuffer, CharBuffer)::: decoder decode loop:::if->src->hasArray->dst->hasArray->return->decodeArrayLoop->else->return->decodeBufferLoop
ISO_8859_1.Encoder#canEncode(char)::: encoder can encode:::return
ISO_8859_1.Encoder#isLegalReplacement(byte[])::: encoder is legal replacement:::return
ISO_8859_1.Encoder#encodeISOArray(char[], int, byte[], int, int)::: encoder encode array:::if->return->encodeISOArrayCheck->return->implEncodeISOArray
ISO_8859_1.Encoder#implEncodeISOArray(char[], int, byte[], int, int)::: encoder impl encode array:::i->for->return
ISO_8859_1.Encoder#encodeISOArrayCheck(char[], int, byte[], int, int)::: encoder encode array check:::Objects->requireNonNull->Objects->requireNonNull->if->throw->new->ArrayIndexOutOfBoundsException->if->throw->new->ArrayIndexOutOfBoundsException->endIndexSP->if->throw->new->ArrayIndexOutOfBoundsException->endIndexDP->if->throw->new->ArrayIndexOutOfBoundsException
ISO_8859_1.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)::: encoder encode array loop:::sa->src->array->soff->src->arrayOffset->sp->src->position->sl->src->limit->da->dst->array->doff->dst->arrayOffset->dp->dst->position->dl->dst->limit->dlen->slen->len->try->ret->encodeISOArray->if->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->if->return->return->catch->finally->src->position->dst->position
ISO_8859_1.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)::: encoder encode buffer loop:::mark->src->position->try->while->src->hasRemaining->c->src->get->if->if->dst->hasRemaining->return->dst->put->continue->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->return->catch->finally->src->position
ISO_8859_1.Encoder#encodeLoop(CharBuffer, ByteBuffer)::: encoder encode loop:::if->src->hasArray->dst->hasArray->return->encodeArrayLoop->else->return->encodeBufferLoop
ISO_8859_13#historicalName()::: o_8859_13 historical name:::return
ISO_8859_13#contains(Charset)::: o_8859_13 contains:::return->cs->name->equals
ISO_8859_13#newDecoder()::: o_8859_13 new decoder:::return->new->SingleByte.Decoder
ISO_8859_13#newEncoder()::: o_8859_13 new encoder:::return->new->SingleByte.Encoder
ISO_8859_15#historicalName()::: o_8859_15 historical name:::return
ISO_8859_15#contains(Charset)::: o_8859_15 contains:::return->cs->name->equals
ISO_8859_15#newDecoder()::: o_8859_15 new decoder:::return->new->SingleByte.Decoder
ISO_8859_15#newEncoder()::: o_8859_15 new encoder:::return->new->SingleByte.Encoder
ISO_8859_16#historicalName()::: o_8859_16 historical name:::return
ISO_8859_16#contains(Charset)::: o_8859_16 contains:::return->cs->name->equals
ISO_8859_16#newDecoder()::: o_8859_16 new decoder:::return->new->SingleByte.Decoder
ISO_8859_16#newEncoder()::: o_8859_16 new encoder:::return->new->SingleByte.Encoder
ISO_8859_2#historicalName()::: o_8859_2 historical name:::return
ISO_8859_2#contains(Charset)::: o_8859_2 contains:::return->cs->name->equals
ISO_8859_2#newDecoder()::: o_8859_2 new decoder:::return->new->SingleByte.Decoder
ISO_8859_2#newEncoder()::: o_8859_2 new encoder:::return->new->SingleByte.Encoder
ISO_8859_4#historicalName()::: o_8859_4 historical name:::return
ISO_8859_4#contains(Charset)::: o_8859_4 contains:::return->cs->name->equals
ISO_8859_4#newDecoder()::: o_8859_4 new decoder:::return->new->SingleByte.Decoder
ISO_8859_4#newEncoder()::: o_8859_4 new encoder:::return->new->SingleByte.Encoder
ISO_8859_5#historicalName()::: o_8859_5 historical name:::return
ISO_8859_5#contains(Charset)::: o_8859_5 contains:::return->cs->name->equals
ISO_8859_5#newDecoder()::: o_8859_5 new decoder:::return->new->SingleByte.Decoder
ISO_8859_5#newEncoder()::: o_8859_5 new encoder:::return->new->SingleByte.Encoder
ISO_8859_7#historicalName()::: o_8859_7 historical name:::return
ISO_8859_7#contains(Charset)::: o_8859_7 contains:::return->cs->name->equals
ISO_8859_7#newDecoder()::: o_8859_7 new decoder:::return->new->SingleByte.Decoder
ISO_8859_7#newEncoder()::: o_8859_7 new encoder:::return->new->SingleByte.Encoder
ISO_8859_9#historicalName()::: o_8859_9 historical name:::return
ISO_8859_9#contains(Charset)::: o_8859_9 contains:::return->cs->name->equals
ISO_8859_9#newDecoder()::: o_8859_9 new decoder:::return->new->SingleByte.Decoder
ISO_8859_9#newEncoder()::: o_8859_9 new encoder:::return->new->SingleByte.Encoder
JIS_X_0201#historicalName()::: s_ x_0201 historical name:::return
JIS_X_0201#contains(Charset)::: s_ x_0201 contains:::return->cs->name->equals
JIS_X_0201#newDecoder()::: s_ x_0201 new decoder:::return->new->SingleByte.Decoder
JIS_X_0201#newEncoder()::: s_ x_0201 new encoder:::return->new->SingleByte.Encoder
Johab#historicalName()::: johab historical name:::return
Johab#contains(Charset)::: johab contains:::return->cs->name->equals
Johab#newDecoder()::: johab new decoder:::initb2c->return->new->DoubleByte.Decoder
Johab#newEncoder()::: johab new encoder:::initc2b->return->new->DoubleByte.Encoder
Johab#initb2c()::: johab initb2c:::if->return->synchronized->if->return->for->i->b2cSBStr->toCharArray
Johab#initc2b()::: johab initc2b:::if->return->synchronized->if->return->b2cNR->c2bNR->initC2B
KOI8_R#historicalName()::: i8_ r historical name:::return
KOI8_R#contains(Charset)::: i8_ r contains:::return->cs->name->equals
KOI8_R#newDecoder()::: i8_ r new decoder:::return->new->SingleByte.Decoder
KOI8_R#newEncoder()::: i8_ r new encoder:::return->new->SingleByte.Encoder
KOI8_U#historicalName()::: i8_ u historical name:::return
KOI8_U#contains(Charset)::: i8_ u contains:::return->cs->name->equals
KOI8_U#newDecoder()::: i8_ u new decoder:::return->new->SingleByte.Decoder
KOI8_U#newEncoder()::: i8_ u new encoder:::return->new->SingleByte.Encoder
MS1250#historicalName()::: s1250 historical name:::return
MS1250#contains(Charset)::: s1250 contains:::return->cs->name->equals
MS1250#newDecoder()::: s1250 new decoder:::return->new->SingleByte.Decoder
MS1250#newEncoder()::: s1250 new encoder:::return->new->SingleByte.Encoder
MS1251#historicalName()::: s1251 historical name:::return
MS1251#contains(Charset)::: s1251 contains:::return->cs->name->equals
MS1251#newDecoder()::: s1251 new decoder:::return->new->SingleByte.Decoder
MS1251#newEncoder()::: s1251 new encoder:::return->new->SingleByte.Encoder
MS1252#historicalName()::: s1252 historical name:::return
MS1252#contains(Charset)::: s1252 contains:::return->cs->name->equals
MS1252#newDecoder()::: s1252 new decoder:::return->new->SingleByte.Decoder
MS1252#newEncoder()::: s1252 new encoder:::return->new->SingleByte.Encoder
MS1253#historicalName()::: s1253 historical name:::return
MS1253#contains(Charset)::: s1253 contains:::return->cs->name->equals
MS1253#newDecoder()::: s1253 new decoder:::return->new->SingleByte.Decoder
MS1253#newEncoder()::: s1253 new encoder:::return->new->SingleByte.Encoder
MS1254#historicalName()::: s1254 historical name:::return
MS1254#contains(Charset)::: s1254 contains:::return->cs->name->equals
MS1254#newDecoder()::: s1254 new decoder:::return->new->SingleByte.Decoder
MS1254#newEncoder()::: s1254 new encoder:::return->new->SingleByte.Encoder
MS1255#historicalName()::: s1255 historical name:::return
MS1255#contains(Charset)::: s1255 contains:::return->cs->name->equals
MS1255#newDecoder()::: s1255 new decoder:::return->new->SingleByte.Decoder
MS1255#newEncoder()::: s1255 new encoder:::return->new->SingleByte.Encoder
MS1256#historicalName()::: s1256 historical name:::return
MS1256#contains(Charset)::: s1256 contains:::return->cs->name->equals
MS1256#newDecoder()::: s1256 new decoder:::return->new->SingleByte.Decoder
MS1256#newEncoder()::: s1256 new encoder:::return->new->SingleByte.Encoder
MS1257#historicalName()::: s1257 historical name:::return
MS1257#contains(Charset)::: s1257 contains:::return->cs->name->equals
MS1257#newDecoder()::: s1257 new decoder:::return->new->SingleByte.Decoder
MS1257#newEncoder()::: s1257 new encoder:::return->new->SingleByte.Encoder
MS1258#historicalName()::: s1258 historical name:::return
MS1258#contains(Charset)::: s1258 contains:::return->cs->name->equals
MS1258#newDecoder()::: s1258 new decoder:::return->new->SingleByte.Decoder
MS1258#newEncoder()::: s1258 new encoder:::return->new->SingleByte.Encoder
MS874#historicalName()::: s874 historical name:::return
MS874#contains(Charset)::: s874 contains:::return->cs->name->equals
MS874#newDecoder()::: s874 new decoder:::return->new->SingleByte.Decoder
MS874#newEncoder()::: s874 new encoder:::return->new->SingleByte.Encoder
MS932#historicalName()::: s932 historical name:::return
MS932#contains(Charset)::: s932 contains:::return->cs->name->equals
MS932#newDecoder()::: s932 new decoder:::initb2c->return->new->DoubleByte.Decoder
MS932#newEncoder()::: s932 new encoder:::initc2b->return->new->DoubleByte.Encoder
MS932#initb2c()::: s932 initb2c:::if->return->synchronized->if->return->for->i->b2cSBStr->toCharArray
MS932#initc2b()::: s932 initc2b:::if->return->synchronized->if->return->b2cNR->c2bNR->initC2B
MS936#historicalName()::: s936 historical name:::return
MS936#contains(Charset)::: s936 contains:::return->cs->name->equals
MS936#newDecoder()::: s936 new decoder:::initb2c->return->new->DoubleByte.Decoder
MS936#newEncoder()::: s936 new encoder:::initc2b->return->new->DoubleByte.Encoder
MS936#initb2c()::: s936 initb2c:::if->return->synchronized->if->return->for->i->b2cSBStr->toCharArray
MS936#initc2b()::: s936 initc2b:::if->return->synchronized->if->return->b2cNR->c2bNR->initC2B
MS949#historicalName()::: s949 historical name:::return
MS949#contains(Charset)::: s949 contains:::return->cs->name->equals
MS949#newDecoder()::: s949 new decoder:::initb2c->return->new->DoubleByte.Decoder
MS949#newEncoder()::: s949 new encoder:::initc2b->return->new->DoubleByte.Encoder
MS949#initb2c()::: s949 initb2c:::if->return->synchronized->if->return->for->i->b2cSBStr->toCharArray
MS949#initc2b()::: s949 initc2b:::if->return->synchronized->if->return->b2cNR->c2bNR->initC2B
MS950#historicalName()::: s950 historical name:::return
MS950#contains(Charset)::: s950 contains:::return->cs->name->equals
MS950#newDecoder()::: s950 new decoder:::initb2c->return->new->DoubleByte.Decoder
MS950#newEncoder()::: s950 new encoder:::initc2b->return->new->DoubleByte.Encoder
MS950#initb2c()::: s950 initb2c:::if->return->synchronized->if->return->for->i->b2cSBStr->toCharArray
MS950#initc2b()::: s950 initc2b:::if->return->synchronized->if->return->b2cNR->c2bNR->initC2B
MS950_HKSCS#historicalName()::: s950_ s historical name:::return
MS950_HKSCS#contains(Charset)::: s950_ s contains:::return->cs->name->equals
MS950_HKSCS#newDecoder()::: s950_ s new decoder:::return->new->Decoder
MS950_HKSCS#newEncoder()::: s950_ s new encoder:::return->new->Encoder
MS950_HKSCS_XP#contains(Charset)::: s950_ s_ p contains:::return->cs->name->equals
MS950_HKSCS_XP#newDecoder()::: s950_ s_ p new decoder:::return->new->Decoder
MS950_HKSCS_XP#newEncoder()::: s950_ s_ p new encoder:::return->new->Encoder
MS950_HKSCS_XP.Decoder#decodeDoubleEx(int, int)::: decoder decode double ex:::return
MS950_HKSCS_XP.Encoder#encodeSupp(int)::: encoder encode supp:::return
SingleByte#withResult(CoderResult, Buffer, int, Buffer, int)::: single byte with result:::src->src->arrayOffset->position->dst->dst->arrayOffset->position->return
SingleByte.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)::: decoder decode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->cr->if->while->c->decode->if->return->CoderResult->unmappableForLength->withResult->return->withResult
SingleByte.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)::: decoder decode buffer loop:::mark->src->position->try->while->src->hasRemaining->c->src->get->decode->if->return->CoderResult->unmappableForLength->if->dst->hasRemaining->return->dst->put->return->catch->finally->src->position
SingleByte.Decoder#decodeLoop(ByteBuffer, CharBuffer)::: decoder decode loop:::if->src->hasArray->dst->hasArray->return->decodeArrayLoop->else->return->decodeBufferLoop
SingleByte.Decoder#decode(int)::: decoder decode:::return
SingleByte.Decoder#implReplaceWith(String)::: decoder impl replace with:::newReplacement->charAt
SingleByte.Decoder#decode(byte[], int, int, char[])::: decoder decode:::if->dp->while->decode->if->return
SingleByte.Decoder#isASCIICompatible()::: decoder is compatible:::return
SingleByte.Encoder#canEncode(char)::: encoder can encode:::return->encode
SingleByte.Encoder#isLegalReplacement(byte[])::: encoder is legal replacement:::return->super->isLegalReplacement
SingleByte.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)::: encoder encode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->len->Math->min->while->c->b->encode->if->if->Character->isSurrogate->if->new->Surrogate.Parser->if->sgp->parse->return->sgp->error->withResult->return->sgp->unmappableResult->withResult->return->CoderResult->unmappableForLength->withResult->return->withResult
SingleByte.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)::: encoder encode buffer loop:::mark->src->position->try->while->src->hasRemaining->c->src->get->b->encode->if->if->Character->isSurrogate->if->new->Surrogate.Parser->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->return->CoderResult->unmappableForLength->if->dst->hasRemaining->return->dst->put->return->catch->finally->src->position
SingleByte.Encoder#encodeLoop(CharBuffer, ByteBuffer)::: encoder encode loop:::if->src->hasArray->dst->hasArray->return->encodeArrayLoop->else->return->encodeBufferLoop
SingleByte.Encoder#encode(char)::: encoder encode:::index->if->return->return
SingleByte.Encoder#implReplaceWith(byte[])::: encoder impl replace with:::
SingleByte.Encoder#encode(char[], int, int, byte[])::: encoder encode:::dp->sl->Math->min->while->c->b->encode->if->continue->if->Character->isHighSurrogate->Character->isLowSurrogate->if->return
SingleByte.Encoder#encodeFromLatin1(byte[], int, int, byte[])::: encoder encode from latin1:::dp->sl->Math->min->while->c->b->encode->if->else->return
SingleByte.Encoder#encodeFromUTF16(byte[], int, int, byte[])::: encoder encode from f16:::dp->sl->Math->min->while->c->StringUTF16->getChar->b->encode->if->continue->if->Character->isHighSurrogate->Character->StringUTF16->getChar->isLowSurrogate->if->return
SingleByte.Encoder#isASCIICompatible()::: encoder is compatible:::return
SingleByte#initC2B(char[], char[], char[], char[])::: single byte init c2 b:::for->i->for->i->off->for->i->if->i->while->b->c->index->if
SJIS#historicalName()::: s historical name:::return
SJIS#contains(Charset)::: s contains:::return->cs->name->equals
SJIS#newDecoder()::: s new decoder:::initb2c->return->new->DoubleByte.Decoder
SJIS#newEncoder()::: s new encoder:::initc2b->return->new->DoubleByte.Encoder
SJIS#initb2c()::: s initb2c:::if->return->synchronized->if->return->for->i->b2cSBStr->toCharArray
SJIS#initc2b()::: s initc2b:::if->return->synchronized->if->return->b2cNR->c2bNR->initC2B
StandardCharsets#aliases_US_ASCII()::: standard charsets aliases_ s_ i:::return->new->StringArr
StandardCharsets#aliases_UTF_8()::: standard charsets aliases_ f_8:::return->new->StringArr
StandardCharsets#aliases_CESU_8()::: standard charsets aliases_ u_8:::return->new->StringArr
StandardCharsets#aliases_UTF_16()::: standard charsets aliases_ f_16:::return->new->StringArr
StandardCharsets#aliases_UTF_16BE()::: standard charsets aliases_ f_16 e:::return->new->StringArr
StandardCharsets#aliases_UTF_16LE()::: standard charsets aliases_ f_16 e:::return->new->StringArr
StandardCharsets#aliases_UTF_16LE_BOM()::: standard charsets aliases_ f_16 e_ m:::return->new->StringArr
StandardCharsets#aliases_UTF_32()::: standard charsets aliases_ f_32:::return->new->StringArr
StandardCharsets#aliases_UTF_32LE()::: standard charsets aliases_ f_32 e:::return->new->StringArr
StandardCharsets#aliases_UTF_32BE()::: standard charsets aliases_ f_32 e:::return->new->StringArr
StandardCharsets#aliases_UTF_32LE_BOM()::: standard charsets aliases_ f_32 e_ m:::return->new->StringArr
StandardCharsets#aliases_UTF_32BE_BOM()::: standard charsets aliases_ f_32 e_ m:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_1()::: standard charsets aliases_ o_8859_1:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_2()::: standard charsets aliases_ o_8859_2:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_4()::: standard charsets aliases_ o_8859_4:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_5()::: standard charsets aliases_ o_8859_5:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_7()::: standard charsets aliases_ o_8859_7:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_9()::: standard charsets aliases_ o_8859_9:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_13()::: standard charsets aliases_ o_8859_13:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_15()::: standard charsets aliases_ o_8859_15:::return->new->StringArr
StandardCharsets#aliases_ISO_8859_16()::: standard charsets aliases_ o_8859_16:::return->new->StringArr
StandardCharsets#aliases_KOI8_R()::: standard charsets aliases_ i8_ r:::return->new->StringArr
StandardCharsets#aliases_KOI8_U()::: standard charsets aliases_ i8_ u:::return->new->StringArr
StandardCharsets#aliases_MS1250()::: standard charsets aliases_ s1250:::return->new->StringArr
StandardCharsets#aliases_MS1251()::: standard charsets aliases_ s1251:::return->new->StringArr
StandardCharsets#aliases_MS1252()::: standard charsets aliases_ s1252:::return->new->StringArr
StandardCharsets#aliases_MS1253()::: standard charsets aliases_ s1253:::return->new->StringArr
StandardCharsets#aliases_MS1254()::: standard charsets aliases_ s1254:::return->new->StringArr
StandardCharsets#aliases_MS1257()::: standard charsets aliases_ s1257:::return->new->StringArr
StandardCharsets#aliases_IBM437()::: standard charsets aliases_ m437:::return->new->StringArr
StandardCharsets#aliases_IBM737()::: standard charsets aliases_ m737:::return->new->StringArr
StandardCharsets#aliases_IBM775()::: standard charsets aliases_ m775:::return->new->StringArr
StandardCharsets#aliases_IBM850()::: standard charsets aliases_ m850:::return->new->StringArr
StandardCharsets#aliases_IBM852()::: standard charsets aliases_ m852:::return->new->StringArr
StandardCharsets#aliases_IBM855()::: standard charsets aliases_ m855:::return->new->StringArr
StandardCharsets#aliases_IBM857()::: standard charsets aliases_ m857:::return->new->StringArr
StandardCharsets#aliases_IBM858()::: standard charsets aliases_ m858:::return->new->StringArr
StandardCharsets#aliases_IBM862()::: standard charsets aliases_ m862:::return->new->StringArr
StandardCharsets#aliases_IBM866()::: standard charsets aliases_ m866:::return->new->StringArr
StandardCharsets#aliases_IBM874()::: standard charsets aliases_ m874:::return->new->StringArr
StandardCharsets#aliases_MS950_HKSCS_XP()::: standard charsets aliases_ s950_ s_ p:::return->new->StringArr
StandardCharsets#aliases_MS950_HKSCS()::: standard charsets aliases_ s950_ s:::return->new->StringArr
StandardCharsets#aliases_MS950()::: standard charsets aliases_ s950:::return->new->StringArr
StandardCharsets#aliases_MS874()::: standard charsets aliases_ s874:::return->new->StringArr
StandardCharsets#aliases_GBK()::: standard charsets aliases_ k:::return->new->StringArr
StandardCharsets#aliases_MS936()::: standard charsets aliases_ s936:::return->new->StringArr
StandardCharsets#aliases_SJIS()::: standard charsets aliases_ s:::return
StandardCharsets#aliases_MS932()::: standard charsets aliases_ s932:::return
StandardCharsets#aliases_JIS_X_0201()::: standard charsets aliases_ s_ x_0201:::return->new->StringArr
StandardCharsets#aliases_MS949()::: standard charsets aliases_ s949:::return->new->StringArr
StandardCharsets#aliases_Johab()::: standard charsets aliases_ johab:::return->new->StringArr
StandardCharsets#aliases_MS1255()::: standard charsets aliases_ s1255:::return->new->StringArr
StandardCharsets#aliases_MS1256()::: standard charsets aliases_ s1256:::return->new->StringArr
StandardCharsets#aliases_MS1258()::: standard charsets aliases_ s1258:::return->new->StringArr
StandardCharsets.Aliases#init(Object[])::: aliases init:::new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr
StandardCharsets.Classes#init(Object[])::: classes init:::new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr
StandardCharsets.Cache#init(Object[])::: cache init:::new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr->new->ObjectArr
StandardCharsets#canonicalize(String)::: standard charsets canonicalize:::acn->aliasMap->get->return
StandardCharsets#aliasMap()::: standard charsets alias map:::map->if->new->Aliases->return
StandardCharsets#classMap()::: standard charsets class map:::map->if->new->Classes->return
StandardCharsets#cache()::: standard charsets cache:::map->if->new->Cache->map->put->map->put->map->put->map->put->map->put->map->put->return
StandardCharsets#toLower(String)::: standard charsets to lower:::n->s->length->allLower->for->i->if->return->sb->new->StringBuilder->for->i->return->sb->toString
StandardCharsets#lookup(String)::: standard charsets lookup:::init->csn->if->charsetName->equals->return->else->if->charsetName->equals->return->else->if->charsetName->equals->return->else->toLower->canonicalize->cs->cache->get->if->return->cln->classMap->get->if->return->try->o->Class->this->getClass->getClassLoader->forName->newInstance->return->cache->catch->return->finally
StandardCharsets#cache(String, Charset)::: standard charsets cache:::cache->put->return
StandardCharsets#charsetForName(String)::: standard charsets charset for name:::synchronized->return->lookup
StandardCharsets#charsets()::: standard charsets charsets:::charsetNames->synchronized->init->classMap->keySet->aliasMap->cache->return->new->Iterator<Charset>
StandardCharsets#init()::: standard charsets init:::if->return->if->isBooted->return->map->GetPropertyAction->privilegedGetProperty->if->aliasMap->aliasMap->classMap->classMap->maps->map->split->for->i
StreamDecoder#ensureOpen()::: stream decoder ensure open:::if->throw->new->IOException
StreamDecoder#forInputStreamReader(InputStream, Object, String)::: stream decoder for input stream reader:::csn->if->Charset->defaultCharset->name->try->if->Charset->isSupported->return->Charset->forName->new->StreamDecoder->catch->finally->throw->new->UnsupportedEncodingException
StreamDecoder#forInputStreamReader(InputStream, Object, Charset)::: stream decoder for input stream reader:::return->new->StreamDecoder
StreamDecoder#forInputStreamReader(InputStream, Object, CharsetDecoder)::: stream decoder for input stream reader:::return->new->StreamDecoder
StreamDecoder#forDecoder(ReadableByteChannel, CharsetDecoder, int)::: stream decoder for decoder:::return->new->StreamDecoder
StreamDecoder#getEncoding()::: stream decoder get encoding:::if->isOpen->return->encodingName->return
StreamDecoder#read()::: stream decoder read:::return->read0
StreamDecoder#read0()::: stream decoder read0:::synchronized->if->return->cb->new->charArr->n->read->switch->return->return->return
StreamDecoder#read(char[], int, int)::: stream decoder read:::off->len->synchronized->ensureOpen->if->throw->new->IndexOutOfBoundsException->if->return->n->if->if->implReady->return->if->c->read0->if->return->return->return->implRead
StreamDecoder#ready()::: stream decoder ready:::synchronized->ensureOpen->return->implReady
StreamDecoder#close()::: stream decoder close:::synchronized->if->return->implClose
StreamDecoder#isOpen()::: stream decoder is open:::return
StreamDecoder#getChannel(FileInputStream)::: stream decoder get channel:::if->return->try->return->in->getChannel->catch->return->finally
StreamDecoder#readBytes()::: stream decoder read bytes:::bb->compact->try->if->n->ch->read->if->return->else->lim->bb->limit->pos->bb->position->rem->n->in->bb->array->bb->arrayOffset->read->if->return->if->throw->new->IOException->bb->position->catch->finally->bb->flip->rem->bb->remaining->return
StreamDecoder#implRead(char[], int, int)::: stream decoder impl read:::cb->CharBuffer->wrap->if->cb->position->cb->slice->eof->for->if->decoder->reset->if->cb->position->if->return->return->cb->position
StreamDecoder#encodingName()::: stream decoder encoding name:::return->historicalName->cs->name
StreamDecoder#inReady()::: stream decoder in ready:::try->return->in->available->catch->return->finally
StreamDecoder#implReady()::: stream decoder impl ready:::return->bb->hasRemaining->inReady
StreamDecoder#implClose()::: stream decoder impl close:::if->ch->close->else->in->close
StreamEncoder#ensureOpen()::: stream encoder ensure open:::if->throw->new->IOException
StreamEncoder#forOutputStreamWriter(OutputStream, Object, String)::: stream encoder for output stream writer:::csn->if->Charset->defaultCharset->name->try->if->Charset->isSupported->return->Charset->forName->new->StreamEncoder->catch->finally->throw->new->UnsupportedEncodingException
StreamEncoder#forOutputStreamWriter(OutputStream, Object, Charset)::: stream encoder for output stream writer:::return->new->StreamEncoder
StreamEncoder#forOutputStreamWriter(OutputStream, Object, CharsetEncoder)::: stream encoder for output stream writer:::return->new->StreamEncoder
StreamEncoder#forEncoder(WritableByteChannel, CharsetEncoder, int)::: stream encoder for encoder:::return->new->StreamEncoder
StreamEncoder#getEncoding()::: stream encoder get encoding:::if->isOpen->return->encodingName->return
StreamEncoder#flushBuffer()::: stream encoder flush buffer:::synchronized->if->isOpen->implFlushBuffer->else->throw->new->IOException
StreamEncoder#write(int)::: stream encoder write:::cbuf->new->charArr->write
StreamEncoder#write(char[], int, int)::: stream encoder write:::synchronized->ensureOpen->if->throw->new->IndexOutOfBoundsException->else->if->return->implWrite
StreamEncoder#write(String, int, int)::: stream encoder write:::if->throw->new->IndexOutOfBoundsException->cbuf->new->charArr->str->getChars->write
StreamEncoder#write(CharBuffer)::: stream encoder write:::position->cb->position->try->synchronized->ensureOpen->implWrite->catch->finally->cb->position
StreamEncoder#flush()::: stream encoder flush:::synchronized->ensureOpen->implFlush
StreamEncoder#close()::: stream encoder close:::synchronized->if->return->implClose
StreamEncoder#isOpen()::: stream encoder is open:::return
StreamEncoder#writeBytes()::: stream encoder write bytes:::bb->flip->lim->bb->limit->pos->bb->position->rem->if->if->if->ch->write->else->out->bb->array->bb->arrayOffset->write->bb->clear
StreamEncoder#flushLeftoverChar(CharBuffer, boolean)::: stream encoder flush leftover char:::if->return->if->CharBuffer->allocate->else->lcb->clear->if->lcb->put->if->cb->hasRemaining->lcb->cb->get->put->lcb->flip->while->lcb->hasRemaining->cr->encoder->encode->if->cr->isUnderflow->if->lcb->hasRemaining->lcb->get->if->cb->hasRemaining->lcb->clear->lcb->put->cb->get->put->flip->continue->return->break->if->cr->isOverflow->writeBytes->continue->cr->throwException
StreamEncoder#implWrite(char[], int, int)::: stream encoder impl write:::cb->CharBuffer->wrap->implWrite
StreamEncoder#implWrite(CharBuffer)::: stream encoder impl write:::if->flushLeftoverChar->while->cb->hasRemaining->cr->encoder->encode->if->cr->isUnderflow->if->cb->remaining->cb->get->break->if->cr->isOverflow->writeBytes->continue->cr->throwException
StreamEncoder#implFlushBuffer()::: stream encoder impl flush buffer:::if->bb->position->writeBytes
StreamEncoder#implFlush()::: stream encoder impl flush:::implFlushBuffer->if->out->flush
StreamEncoder#implClose()::: stream encoder impl close:::flushLeftoverChar->try->for->if->bb->position->writeBytes->if->ch->close->else->out->close->catch->encoder->reset->throw->finally
StreamEncoder#encodingName()::: stream encoder encoding name:::return->historicalName->cs->name
StringUTF16#getChar(byte[], int)::: string f16 get char:::return->unsafe->getChar
Surrogate#isHigh(int):::Tells whether or not the given value is in the high surrogate range:::return
Surrogate#isLow(int):::Tells whether or not the given value is in the low surrogate range:::return
Surrogate#is(int):::Tells whether or not the given value is in the surrogate range:::return
Surrogate#neededFor(int):::Tells whether or not the given UCS-4 character must be represented as a surrogate pair in UTF-16:::return->Character->isSupplementaryCodePoint
Surrogate#high(int):::Returns the high UTF-16 surrogate for the given supplementary UCS-4 character:::return->Character->highSurrogate
Surrogate#low(int):::Returns the low UTF-16 surrogate for the given supplementary UCS-4 character:::return->Character->lowSurrogate
Surrogate#toUCS4(char, char):::Converts the given surrogate pair into a 32-bit UCS-4 character:::return->Character->toCodePoint
Surrogate.Parser#character():::Returns the UCS-4 character previously parsed.:::return
Surrogate.Parser#isPair():::Tells whether or not the previously-parsed UCS-4 character was originally represented by a surrogate pair.:::return
Surrogate.Parser#increment():::Returns the number of UTF-16 characters consumed by the previous parse.:::return
Surrogate.Parser#error():::If the previous parse operation detected an error, return the object describing that error.:::return
Surrogate.Parser#unmappableResult():::Returns an unmappable-input result object, with the appropriate input length, for the previously-parsed character.:::return->CoderResult->unmappableForLength
Surrogate.Parser#parse(char, CharBuffer):::Parses a UCS-4 character from the given source buffer, handling surrogates.:::if->Character->isHighSurrogate->if->in->hasRemaining->return->d->in->get->if->Character->isLowSurrogate->Character->toCodePoint->return->CoderResult->malformedForLength->return->if->Character->isLowSurrogate->CoderResult->malformedForLength->return->return
Surrogate.Parser#parse(char, char[], int, int):::Parses a UCS-4 character from the given source buffer, handling surrogates.:::if->Character->isHighSurrogate->if->return->d->if->Character->isLowSurrogate->Character->toCodePoint->return->CoderResult->malformedForLength->return->if->Character->isLowSurrogate->CoderResult->malformedForLength->return->return
Surrogate.Generator#error():::If the previous generation operation detected an error, return the object describing that error.:::return
Surrogate.Generator#generate(int, int, CharBuffer):::Generates one or two UTF-16 characters to represent the given UCS-4 character.:::if->Character->isBmpCodePoint->c->if->Character->isSurrogate->CoderResult->malformedForLength->return->if->dst->remaining->return->dst->put->return->else->if->Character->isValidCodePoint->if->dst->remaining->return->dst->Character->highSurrogate->put->dst->Character->lowSurrogate->put->return->else->CoderResult->unmappableForLength->return
Surrogate.Generator#generate(int, int, char[], int, int):::Generates one or two UTF-16 characters to represent the given UCS-4 character.:::if->Character->isBmpCodePoint->c->if->Character->isSurrogate->CoderResult->malformedForLength->return->if->return->return->else->if->Character->isValidCodePoint->if->return->Character->highSurrogate->Character->lowSurrogate->return->else->CoderResult->unmappableForLength->return
ThreadLocalCoders.Cache#create(Object)::: cache create:::
ThreadLocalCoders.Cache#moveToFront(Object[], int)::: cache move to front:::ob->for->j
ThreadLocalCoders.Cache#hasName(Object, Object)::: cache has name:::
ThreadLocalCoders.Cache#forName(Object)::: cache for name:::oa->cache->get->if->new->ObjectArr->cache->set->else->for->i->ob->create->moveToFront->return
ThreadLocalCoders#decoderFor(Object)::: thread local coders decoder for:::cd->decoderCache->forName->cd->reset->return
ThreadLocalCoders#encoderFor(Object)::: thread local coders encoder for:::ce->encoderCache->forName->ce->reset->return
Unicode#contains(Charset)::: unicode contains:::return->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals->cs->name->equals
UnicodeDecoder#decode(int, int)::: unicode decoder decode:::if->return->else->return
UnicodeDecoder#decodeLoop(ByteBuffer, CharBuffer)::: unicode decoder decode loop:::mark->src->position->try->while->src->remaining->b1->src->get->b2->src->get->if->c->if->continue->else->if->continue->else->c->decode->if->return->CoderResult->malformedForLength->if->Character->isSurrogate->if->Character->isHighSurrogate->if->src->remaining->return->c2->src->get->src->get->decode->if->Character->isLowSurrogate->return->CoderResult->malformedForLength->if->dst->remaining->return->dst->put->dst->put->continue->return->CoderResult->malformedForLength->if->dst->hasRemaining->return->dst->put->return->catch->finally->src->position
UnicodeDecoder#implReset()::: unicode decoder impl reset:::
UnicodeEncoder#put(char, ByteBuffer)::: unicode encoder put:::if->dst->put->dst->put->else->dst->put->dst->put
UnicodeEncoder#encodeLoop(CharBuffer, ByteBuffer)::: unicode encoder encode loop:::mark->src->position->if->src->hasRemaining->if->dst->remaining->return->put->try->while->src->hasRemaining->c->src->get->if->Character->isSurrogate->if->dst->remaining->return->put->continue->d->sgp->parse->if->return->sgp->error->if->dst->remaining->return->Character->highSurrogate->put->Character->lowSurrogate->put->return->catch->finally->src->position
UnicodeEncoder#implReset()::: unicode encoder impl reset:::
UnicodeEncoder#canEncode(char)::: unicode encoder can encode:::return->Character->isSurrogate
US_ASCII#historicalName()::: s_ i historical name:::return
US_ASCII#contains(Charset)::: s_ i contains:::return
US_ASCII#newDecoder()::: s_ i new decoder:::return->new->Decoder
US_ASCII#newEncoder()::: s_ i new encoder:::return->new->Encoder
US_ASCII.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)::: decoder decode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->b->if->if->return->continue->return->CoderResult->malformedForLength->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
US_ASCII.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)::: decoder decode buffer loop:::mark->src->position->try->while->src->hasRemaining->b->src->get->if->if->dst->hasRemaining->return->dst->put->continue->return->CoderResult->malformedForLength->return->catch->finally->src->position
US_ASCII.Decoder#decodeLoop(ByteBuffer, CharBuffer)::: decoder decode loop:::if->src->hasArray->dst->hasArray->return->decodeArrayLoop->else->return->decodeBufferLoop
US_ASCII.Encoder#canEncode(char)::: encoder can encode:::return
US_ASCII.Encoder#isLegalReplacement(byte[])::: encoder is legal replacement:::return->super->isLegalReplacement
US_ASCII.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)::: encoder encode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->try->while->c->if->if->return->continue->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->return->catch->finally->src->src->arrayOffset->position->dst->dst->arrayOffset->position
US_ASCII.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)::: encoder encode buffer loop:::mark->src->position->try->while->src->hasRemaining->c->src->get->if->if->dst->hasRemaining->return->dst->put->continue->if->sgp->parse->return->sgp->error->return->sgp->unmappableResult->return->catch->finally->src->position
US_ASCII.Encoder#encodeLoop(CharBuffer, ByteBuffer)::: encoder encode loop:::if->src->hasArray->dst->hasArray->return->encodeArrayLoop->else->return->encodeBufferLoop
UTF_16#historicalName()::: f_16 historical name:::return
UTF_16#newDecoder()::: f_16 new decoder:::return->new->Decoder
UTF_16#newEncoder()::: f_16 new encoder:::return->new->Encoder
UTF_16BE#historicalName()::: f_16 e historical name:::return
UTF_16BE#newDecoder()::: f_16 e new decoder:::return->new->Decoder
UTF_16BE#newEncoder()::: f_16 e new encoder:::return->new->Encoder
UTF_16LE#historicalName()::: f_16 e historical name:::return
UTF_16LE#newDecoder()::: f_16 e new decoder:::return->new->Decoder
UTF_16LE#newEncoder()::: f_16 e new encoder:::return->new->Encoder
UTF_16LE_BOM#historicalName()::: f_16 e_ m historical name:::return
UTF_16LE_BOM#newDecoder()::: f_16 e_ m new decoder:::return->new->Decoder
UTF_16LE_BOM#newEncoder()::: f_16 e_ m new encoder:::return->new->Encoder
UTF_32#historicalName()::: f_32 historical name:::return
UTF_32#newDecoder()::: f_32 new decoder:::return->new->UTF_32Coder.Decoder
UTF_32#newEncoder()::: f_32 new encoder:::return->new->UTF_32Coder.Encoder
UTF_32BE#historicalName()::: f_32 e historical name:::return
UTF_32BE#newDecoder()::: f_32 e new decoder:::return->new->UTF_32Coder.Decoder
UTF_32BE#newEncoder()::: f_32 e new encoder:::return->new->UTF_32Coder.Encoder
UTF_32BE_BOM#historicalName()::: f_32 e_ m historical name:::return
UTF_32BE_BOM#newDecoder()::: f_32 e_ m new decoder:::return->new->UTF_32Coder.Decoder
UTF_32BE_BOM#newEncoder()::: f_32 e_ m new encoder:::return->new->UTF_32Coder.Encoder
UTF_32Coder.Decoder#getCP(ByteBuffer)::: decoder get p:::return->src->get->src->get->src->get->src->get->src->get->src->get->src->get->src->get
UTF_32Coder.Decoder#decodeLoop(ByteBuffer, CharBuffer)::: decoder decode loop:::if->src->remaining->return->mark->src->position->cp->try->if->src->get->src->get->src->get->src->get->if->else->if->else->if->else->src->position->while->src->remaining->getCP->if->Character->isBmpCodePoint->if->dst->hasRemaining->return->dst->put->else->if->Character->isValidCodePoint->if->dst->remaining->return->dst->Character->highSurrogate->put->dst->Character->lowSurrogate->put->else->return->CoderResult->malformedForLength->return->catch->finally->src->position
UTF_32Coder.Decoder#implReset()::: decoder impl reset:::
UTF_32Coder.Encoder#put(int, ByteBuffer)::: encoder put:::if->dst->put->dst->put->dst->put->dst->put->else->dst->put->dst->put->dst->put->dst->put
UTF_32Coder.Encoder#encodeLoop(CharBuffer, ByteBuffer)::: encoder encode loop:::mark->src->position->if->src->hasRemaining->if->dst->remaining->return->put->try->while->src->hasRemaining->c->src->get->if->Character->isSurrogate->if->dst->remaining->return->put->else->if->Character->isHighSurrogate->if->src->hasRemaining->return->low->src->get->if->Character->isLowSurrogate->if->dst->remaining->return->Character->toCodePoint->put->else->return->CoderResult->malformedForLength->else->return->CoderResult->malformedForLength->return->catch->finally->src->position
UTF_32Coder.Encoder#implReset()::: encoder impl reset:::
UTF_32LE#historicalName()::: f_32 e historical name:::return
UTF_32LE#newDecoder()::: f_32 e new decoder:::return->new->UTF_32Coder.Decoder
UTF_32LE#newEncoder()::: f_32 e new encoder:::return->new->UTF_32Coder.Encoder
UTF_32LE_BOM#historicalName()::: f_32 e_ m historical name:::return
UTF_32LE_BOM#newDecoder()::: f_32 e_ m new decoder:::return->new->UTF_32Coder.Decoder
UTF_32LE_BOM#newEncoder()::: f_32 e_ m new encoder:::return->new->UTF_32Coder.Encoder
UTF_8#historicalName()::: f_8 historical name:::return
UTF_8#newDecoder()::: f_8 new decoder:::return->new->Decoder
UTF_8#newEncoder()::: f_8 new encoder:::return->new->Encoder
UTF_8#updatePositions(Buffer, int, Buffer, int)::: f_8 update positions:::src->src->arrayOffset->position->dst->dst->arrayOffset->position
UTF_8.Decoder#isNotContinuation(int)::: decoder is not continuation:::return
UTF_8.Decoder#isMalformed3(int, int, int)::: decoder is malformed3:::return
UTF_8.Decoder#isMalformed3_2(int, int)::: decoder is malformed3_2:::return
UTF_8.Decoder#isMalformed4(int, int, int)::: decoder is malformed4:::return
UTF_8.Decoder#isMalformed4_2(int, int)::: decoder is malformed4_2:::return
UTF_8.Decoder#isMalformed4_3(int)::: decoder is malformed4_3:::return
UTF_8.Decoder#lookupN(ByteBuffer, int)::: decoder lookup n:::for->i->return->CoderResult->malformedForLength
UTF_8.Decoder#malformedN(ByteBuffer, int)::: decoder malformed n:::switch->return->CoderResult->malformedForLength->b1->src->get->b2->src->get->return->CoderResult->isNotContinuation->malformedForLength->src->get->src->get->if->isNotContinuation->return->CoderResult->malformedForLength->if->src->get->isNotContinuation->return->CoderResult->malformedForLength->return->CoderResult->malformedForLength->return
UTF_8.Decoder#malformed(ByteBuffer, int, CharBuffer, int, int)::: decoder malformed:::src->src->arrayOffset->position->cr->malformedN->updatePositions->return
UTF_8.Decoder#malformed(ByteBuffer, int, int)::: decoder malformed:::src->position->cr->malformedN->src->position->return
UTF_8.Decoder#malformedForLength(ByteBuffer, int, CharBuffer, int, int)::: decoder malformed for length:::updatePositions->return->CoderResult->malformedForLength
UTF_8.Decoder#malformedForLength(ByteBuffer, int, int)::: decoder malformed for length:::src->position->return->CoderResult->malformedForLength
UTF_8.Decoder#xflow(Buffer, int, int, Buffer, int, int)::: decoder xflow:::updatePositions->return
UTF_8.Decoder#xflow(Buffer, int, int)::: decoder xflow:::src->position->return->src->remaining
UTF_8.Decoder#decodeArrayLoop(ByteBuffer, CharBuffer)::: decoder decode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->dlASCII->Math->min->while->while->b1->if->if->return->xflow->else->if->if->return->xflow->b2->if->isNotContinuation->return->malformedForLength->else->if->srcRemaining->if->if->isMalformed3_2->return->malformedForLength->return->xflow->b2->b3->if->isMalformed3->return->malformed->c->if->Character->isSurrogate->return->malformedForLength->else->if->srcRemaining->if->if->isMalformed4_2->return->malformedForLength->if->isMalformed4_3->return->malformedForLength->return->xflow->b2->b3->b4->uc->if->isMalformed4->Character->isSupplementaryCodePoint->return->malformed->Character->highSurrogate->Character->lowSurrogate->else->return->malformed->return->xflow
UTF_8.Decoder#decodeBufferLoop(ByteBuffer, CharBuffer)::: decoder decode buffer loop:::mark->src->position->limit->src->limit->while->b1->src->get->if->if->dst->remaining->return->xflow->dst->put->else->if->if->dst->remaining->return->xflow->b2->src->get->if->isNotContinuation->return->malformedForLength->dst->put->else->if->srcRemaining->if->dst->remaining->if->src->get->isMalformed3_2->return->malformedForLength->return->xflow->b2->src->get->b3->src->get->if->isMalformed3->return->malformed->c->if->Character->isSurrogate->return->malformedForLength->dst->put->else->if->srcRemaining->if->dst->remaining->if->src->get->isMalformed4_2->return->malformedForLength->if->src->get->isMalformed4_3->return->malformedForLength->return->xflow->b2->src->get->b3->src->get->b4->src->get->uc->if->isMalformed4->Character->isSupplementaryCodePoint->return->malformed->dst->Character->highSurrogate->put->dst->Character->lowSurrogate->put->else->return->malformed->return->xflow
UTF_8.Decoder#decodeLoop(ByteBuffer, CharBuffer)::: decoder decode loop:::if->src->hasArray->dst->hasArray->return->decodeArrayLoop->else->return->decodeBufferLoop
UTF_8.Decoder#getByteBuffer(ByteBuffer, byte[], int)::: decoder get byte buffer:::if->ByteBuffer->wrap->bb->position->return
UTF_8.Encoder#canEncode(char)::: encoder can encode:::return->Character->isSurrogate
UTF_8.Encoder#isLegalReplacement(byte[])::: encoder is legal replacement:::return->super->isLegalReplacement
UTF_8.Encoder#overflow(CharBuffer, int, ByteBuffer, int)::: encoder overflow:::updatePositions->return
UTF_8.Encoder#overflow(CharBuffer, int)::: encoder overflow:::src->position->return
UTF_8.Encoder#encodeArrayLoop(CharBuffer, ByteBuffer)::: encoder encode array loop:::sa->src->array->sp->src->arrayOffset->src->position->sl->src->arrayOffset->src->limit->da->dst->array->dp->dst->arrayOffset->dst->position->dl->dst->arrayOffset->dst->limit->dlASCII->Math->min->while->while->c->if->if->return->overflow->else->if->if->return->overflow->else->if->Character->isSurrogate->if->new->Surrogate.Parser->uc->sgp->parse->if->updatePositions->return->sgp->error->if->return->overflow->else->if->return->overflow->updatePositions->return
UTF_8.Encoder#encodeBufferLoop(CharBuffer, ByteBuffer)::: encoder encode buffer loop:::mark->src->position->while->src->hasRemaining->c->src->get->if->if->dst->hasRemaining->return->overflow->dst->put->else->if->if->dst->remaining->return->overflow->dst->put->dst->put->else->if->Character->isSurrogate->if->new->Surrogate.Parser->uc->sgp->parse->if->src->position->return->sgp->error->if->dst->remaining->return->overflow->dst->put->dst->put->dst->put->dst->put->else->if->dst->remaining->return->overflow->dst->put->dst->put->dst->put->src->position->return
UTF_8.Encoder#encodeLoop(CharBuffer, ByteBuffer)::: encoder encode loop:::if->src->hasArray->dst->hasArray->return->encodeArrayLoop->else->return->encodeBufferLoop
