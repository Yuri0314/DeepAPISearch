CommonDataSource#getLogWriter():::Retrieves the log writer for this DataSource object:::
CommonDataSource#setLogWriter(java.io.PrintWriter):::Sets the log writer for this DataSource object to the given java.io.PrintWriter object:::
CommonDataSource#setLoginTimeout(int):::Sets the maximum time in seconds that this data source will wait while attempting to connect to a database:::
CommonDataSource#getLoginTimeout():::Gets the maximum time in seconds that this data source can wait while attempting to connect to a database:::
CommonDataSource#getParentLogger():::Return the parent Logger of all the Loggers used by this data source:::
CommonDataSource#createShardingKeyBuilder():::Creates a new ShardingKeyBuilder instance:::throw->new->SQLFeatureNotSupportedException
ConnectionEvent#getSQLException():::<P>Retrieves the SQLException for this ConnectionEvent object:::return
ConnectionEventListener#connectionClosed(ConnectionEvent):::Notifies this ConnectionEventListener that the application has called the method close on its representation of a pooled connection.:::
ConnectionEventListener#connectionErrorOccurred(ConnectionEvent):::Notifies this ConnectionEventListener that a fatal error has occurred and the pooled connection can no longer be used:::
ConnectionPoolDataSource#getPooledConnection():::Attempts to establish a physical database connection that can be used as a pooled connection.:::
ConnectionPoolDataSource#getPooledConnection(String, String):::Attempts to establish a physical database connection that can be used as a pooled connection.:::
ConnectionPoolDataSource#getLogWriter()::: connection pool data source get log writer:::
ConnectionPoolDataSource#setLogWriter(java.io.PrintWriter)::: connection pool data source set log writer:::
ConnectionPoolDataSource#setLoginTimeout(int)::: connection pool data source set login timeout:::
ConnectionPoolDataSource#getLoginTimeout()::: connection pool data source get login timeout:::
ConnectionPoolDataSource#createPooledConnectionBuilder():::Creates a new PooledConnectionBuilder instance:::throw->new->SQLFeatureNotSupportedException
DataSource#getConnection():::Attempts to establish a connection with the data source that this DataSource object represents.:::
DataSource#getConnection(String, String):::Attempts to establish a connection with the data source that this DataSource object represents.:::
DataSource#getLogWriter()::: data source get log writer:::
DataSource#setLogWriter(java.io.PrintWriter)::: data source set log writer:::
DataSource#setLoginTimeout(int)::: data source set login timeout:::
DataSource#getLoginTimeout()::: data source get login timeout:::
DataSource#createConnectionBuilder():::Create a new ConnectionBuilder instance:::throw->new->SQLFeatureNotSupportedException
PooledConnection#getConnection():::Creates and returns a Connection object that is a handle for the physical connection that this PooledConnection object represents:::
PooledConnection#close():::Closes the physical connection that this PooledConnection object represents:::
PooledConnection#addConnectionEventListener(ConnectionEventListener):::Registers the given event listener so that it will be notified when an event occurs on this PooledConnection object.:::
PooledConnection#removeConnectionEventListener(ConnectionEventListener):::Removes the given event listener from the list of components that will be notified when an event occurs on this PooledConnection object.:::
PooledConnection#addStatementEventListener(StatementEventListener):::Registers a StatementEventListener with this PooledConnection object:::
PooledConnection#removeStatementEventListener(StatementEventListener):::Removes the specified StatementEventListener from the list of components that will be notified when the driver detects that a PreparedStatement has been closed or is invalid.:::
PooledConnectionBuilder#user(String):::Specifies the username to be used when creating a connection:::
PooledConnectionBuilder#password(String):::Specifies the password to be used when creating a connection:::
PooledConnectionBuilder#shardingKey(ShardingKey):::Specifies a shardingKey to be used when creating a connection:::
PooledConnectionBuilder#superShardingKey(ShardingKey):::Specifies a superShardingKey to be used when creating a connection:::
PooledConnectionBuilder#build():::Returns an instance of the object defined by this builder.:::
RowSet#getUrl():::Retrieves the url property this RowSet object will use to create a connection if it uses the DriverManager instead of a DataSource object to establish the connection:::
RowSet#setUrl(String):::Sets the URL this RowSet object will use when it uses the DriverManager to create a connection:::
RowSet#getDataSourceName():::Retrieves the logical name that identifies the data source for this RowSet object.:::
RowSet#setDataSourceName(String):::Sets the data source name property for this RowSet object to the given String:::
RowSet#getUsername():::Retrieves the username used to create a database connection for this RowSet object:::
RowSet#setUsername(String):::Sets the username property for this RowSet object to the given String.:::
RowSet#getPassword():::Retrieves the password used to create a database connection:::
RowSet#setPassword(String):::Sets the database password for this RowSet object to the given String.:::
RowSet#getTransactionIsolation():::Retrieves the transaction isolation level set for this RowSet object.:::
RowSet#setTransactionIsolation(int):::Sets the transaction isolation level for this RowSet object.:::
RowSet#getTypeMap():::Retrieves the Map object associated with this RowSet object, which specifies the custom mapping of SQL user-defined types, if any:::
RowSet#setTypeMap(java.util.Map>):::Installs the given java.util.Map object as the default type map for this RowSet object:::
RowSet#getCommand():::Retrieves this RowSet object's command property:::
RowSet#setCommand(String):::Sets this RowSet object's command property to the given SQL query:::
RowSet#isReadOnly():::Retrieves whether this RowSet object is read-only:::
RowSet#setReadOnly(boolean):::Sets whether this RowSet object is read-only to the given boolean.:::
RowSet#getMaxFieldSize():::Retrieves the maximum number of bytes that may be returned for certain column values:::
RowSet#setMaxFieldSize(int):::Sets the maximum number of bytes that can be returned for a column value to the given number of bytes:::
RowSet#getMaxRows():::Retrieves the maximum number of rows that this RowSet object can contain:::
RowSet#setMaxRows(int):::Sets the maximum number of rows that this RowSet object can contain to the specified number:::
RowSet#getEscapeProcessing():::Retrieves whether escape processing is enabled for this RowSet object:::
RowSet#setEscapeProcessing(boolean):::Sets escape processing for this RowSet object on or off:::
RowSet#getQueryTimeout():::Retrieves the maximum number of seconds the driver will wait for a statement to execute:::
RowSet#setQueryTimeout(int):::Sets the maximum time the driver will wait for a statement to execute to the given number of seconds:::
RowSet#setType(int):::Sets the type of this RowSet object to the given type:::
RowSet#setConcurrency(int):::Sets the concurrency of this RowSet object to the given concurrency level:::
RowSet#setNull(int, int):::Sets the designated parameter in this RowSet object's SQL command to SQL NULL:::
RowSet#setNull(String, int):::Sets the designated parameter to SQL NULL:::
RowSet#setNull(int, int, String):::Sets the designated parameter in this RowSet object's SQL command to SQL NULL:::
RowSet#setNull(String, int, String):::Sets the designated parameter to SQL NULL:::
RowSet#setBoolean(int, boolean):::Sets the designated parameter in this RowSet object's command to the given Java boolean value:::
RowSet#setBoolean(String, boolean):::Sets the designated parameter to the given Java boolean value:::
RowSet#setByte(int, byte):::Sets the designated parameter in this RowSet object's command to the given Java byte value:::
RowSet#setByte(String, byte):::Sets the designated parameter to the given Java byte value:::
RowSet#setShort(int, short):::Sets the designated parameter in this RowSet object's command to the given Java short value:::
RowSet#setShort(String, short):::Sets the designated parameter to the given Java short value:::
RowSet#setInt(int, int):::Sets the designated parameter in this RowSet object's command to the given Java int value:::
RowSet#setInt(String, int):::Sets the designated parameter to the given Java int value:::
RowSet#setLong(int, long):::Sets the designated parameter in this RowSet object's command to the given Java long value:::
RowSet#setLong(String, long):::Sets the designated parameter to the given Java long value:::
RowSet#setFloat(int, float):::Sets the designated parameter in this RowSet object's command to the given Java float value:::
RowSet#setFloat(String, float):::Sets the designated parameter to the given Java float value:::
RowSet#setDouble(int, double):::Sets the designated parameter in this RowSet object's command to the given Java double value:::
RowSet#setDouble(String, double):::Sets the designated parameter to the given Java double value:::
RowSet#setBigDecimal(int, BigDecimal):::Sets the designated parameter in this RowSet object's command to the given java.math.BigDecimal value:::
RowSet#setBigDecimal(String, BigDecimal):::Sets the designated parameter to the given java.math.BigDecimal value:::
RowSet#setString(int, String):::Sets the designated parameter in this RowSet object's command to the given Java String value:::
RowSet#setString(String, String):::Sets the designated parameter to the given Java String value:::
RowSet#setBytes(int, byte[]):::Sets the designated parameter in this RowSet object's command to the given Java array of byte values:::
RowSet#setBytes(String, byte[]):::Sets the designated parameter to the given Java array of bytes:::
RowSet#setDate(int, java.sql.Date):::Sets the designated parameter in this RowSet object's command to the given java.sql.Date value:::
RowSet#setTime(int, java.sql.Time):::Sets the designated parameter in this RowSet object's command to the given java.sql.Time value:::
RowSet#setTimestamp(int, java.sql.Timestamp):::Sets the designated parameter in this RowSet object's command to the given java.sql.Timestamp value:::
RowSet#setTimestamp(String, java.sql.Timestamp):::Sets the designated parameter to the given java.sql.Timestamp value:::
RowSet#setAsciiStream(int, java.io.InputStream, int):::Sets the designated parameter in this RowSet object's command to the given java.io.InputStream value:::
RowSet#setAsciiStream(String, java.io.InputStream, int):::Sets the designated parameter to the given input stream, which will have the specified number of bytes:::
RowSet#setBinaryStream(int, java.io.InputStream, int):::Sets the designated parameter in this RowSet object's command to the given java.io.InputStream value:::
RowSet#setBinaryStream(String, java.io.InputStream, int):::Sets the designated parameter to the given input stream, which will have the specified number of bytes:::
RowSet#setCharacterStream(int, Reader, int):::Sets the designated parameter in this RowSet object's command to the given java.io.Reader value:::
RowSet#setCharacterStream(String, java.io.Reader, int):::Sets the designated parameter to the given Reader object, which is the given number of characters long:::
RowSet#setAsciiStream(int, java.io.InputStream):::Sets the designated parameter in this RowSet object's command to the given input stream:::
RowSet#setAsciiStream(String, java.io.InputStream):::Sets the designated parameter to the given input stream:::
RowSet#setBinaryStream(int, java.io.InputStream):::Sets the designated parameter in this RowSet object's command to the given input stream:::
RowSet#setBinaryStream(String, java.io.InputStream):::Sets the designated parameter to the given input stream:::
RowSet#setCharacterStream(int, java.io.Reader):::Sets the designated parameter in this RowSet object's command to the given Reader object:::
RowSet#setCharacterStream(String, java.io.Reader):::Sets the designated parameter to the given Reader object:::
RowSet#setNCharacterStream(int, Reader):::Sets the designated parameter in this RowSet object's command to a Reader object:::
RowSet#setObject(int, Object, int, int):::Sets the designated parameter in this RowSet object's command with the given Java Object:::
RowSet#setObject(String, Object, int, int):::Sets the value of the designated parameter with the given object:::
RowSet#setObject(int, Object, int):::Sets the designated parameter in this RowSet object's command with a Java Object:::
RowSet#setObject(String, Object, int):::Sets the value of the designated parameter with the given object:::
RowSet#setObject(String, Object):::Sets the value of the designated parameter with the given object:::
RowSet#setObject(int, Object):::Sets the designated parameter in this RowSet object's command with a Java Object:::
RowSet#setRef(int, Ref):::Sets the designated parameter in this RowSet object's command with the given  Ref value:::
RowSet#setBlob(int, Blob):::Sets the designated parameter in this RowSet object's command with the given  Blob value:::
RowSet#setBlob(int, InputStream, long):::Sets the designated parameter to a InputStream object:::
RowSet#setBlob(int, InputStream):::Sets the designated parameter to a InputStream object:::
RowSet#setBlob(String, InputStream, long):::Sets the designated parameter to a InputStream object:::
RowSet#setBlob(String, Blob):::Sets the designated parameter to the given java.sql.Blob object:::
RowSet#setBlob(String, InputStream):::Sets the designated parameter to a InputStream object:::
RowSet#setClob(int, Clob):::Sets the designated parameter in this RowSet object's command with the given  Clob value:::
RowSet#setClob(int, Reader, long):::Sets the designated parameter to a Reader object:::
RowSet#setClob(int, Reader):::Sets the designated parameter to a Reader object:::
RowSet#setClob(String, Reader, long):::Sets the designated parameter to a Reader object:::
RowSet#setClob(String, Clob):::Sets the designated parameter to the given java.sql.Clob object:::
RowSet#setClob(String, Reader):::Sets the designated parameter to a Reader object:::
RowSet#setArray(int, Array):::Sets the designated parameter in this RowSet object's command with the given  Array value:::
RowSet#setDate(int, java.sql.Date, Calendar):::Sets the designated parameter in this RowSet object's command with the given  java.sql.Date value:::
RowSet#setDate(String, java.sql.Date):::Sets the designated parameter to the given java.sql.Date value using the default time zone of the virtual machine that is running the application:::
RowSet#setDate(String, java.sql.Date, Calendar):::Sets the designated parameter to the given java.sql.Date value, using the given Calendar object:::
RowSet#setTime(int, java.sql.Time, Calendar):::Sets the designated parameter in this RowSet object's command with the given  java.sql.Time value:::
RowSet#setTime(String, java.sql.Time):::Sets the designated parameter to the given java.sql.Time value:::
RowSet#setTime(String, java.sql.Time, Calendar):::Sets the designated parameter to the given java.sql.Time value, using the given Calendar object:::
RowSet#setTimestamp(int, java.sql.Timestamp, Calendar):::Sets the designated parameter in this RowSet object's command with the given  java.sql.Timestamp value:::
RowSet#setTimestamp(String, java.sql.Timestamp, Calendar):::Sets the designated parameter to the given java.sql.Timestamp value, using the given Calendar object:::
RowSet#clearParameters():::Clears the parameters set for this RowSet object's command:::
RowSet#execute():::Fills this RowSet object with data:::
RowSet#addRowSetListener(RowSetListener):::Registers the given listener so that it will be notified of events that occur on this RowSet object.:::
RowSet#removeRowSetListener(RowSetListener):::Removes the specified listener from the list of components that will be notified when an event occurs on this RowSet object.:::
RowSet#setSQLXML(int, SQLXML):::Sets the designated parameter to the given java.sql.SQLXML object:::
RowSet#setSQLXML(String, SQLXML):::Sets the designated parameter to the given java.sql.SQLXML object:::
RowSet#setRowId(int, RowId):::Sets the designated parameter to the given java.sql.RowId object:::
RowSet#setRowId(String, RowId):::Sets the designated parameter to the given java.sql.RowId object:::
RowSet#setNString(int, String):::Sets the designated parameter to the given String object:::
RowSet#setNString(String, String):::Sets the designated parameter to the given String object:::
RowSet#setNCharacterStream(int, Reader, long):::Sets the designated parameter to a Reader object:::
RowSet#setNCharacterStream(String, Reader, long):::Sets the designated parameter to a Reader object:::
RowSet#setNCharacterStream(String, Reader):::Sets the designated parameter to a Reader object:::
RowSet#setNClob(String, NClob):::Sets the designated parameter to a java.sql.NClob object:::
RowSet#setNClob(String, Reader, long):::Sets the designated parameter to a Reader object:::
RowSet#setNClob(String, Reader):::Sets the designated parameter to a Reader object:::
RowSet#setNClob(int, Reader, long):::Sets the designated parameter to a Reader object:::
RowSet#setNClob(int, NClob):::Sets the designated parameter to a java.sql.NClob object:::
RowSet#setNClob(int, Reader):::Sets the designated parameter to a Reader object:::
RowSet#setURL(int, java.net.URL):::Sets the designated parameter to the given java.net.URL value:::
RowSetInternal#getParams():::Retrieves the parameters that have been set for this RowSet object's command.:::
RowSetInternal#getConnection():::Retrieves the Connection object that was passed to this RowSet object.:::
RowSetInternal#setMetaData(RowSetMetaData):::Sets the given RowSetMetaData object as the RowSetMetaData object for this RowSet object:::
RowSetInternal#getOriginal():::Retrieves a ResultSet object containing the original value of this RowSet object:::
RowSetInternal#getOriginalRow():::Retrieves a ResultSet object containing the original value of the current row only:::
RowSetListener#rowSetChanged(RowSetEvent):::Notifies registered listeners that a RowSet object in the given RowSetEvent object has changed its entire contents:::
RowSetListener#rowChanged(RowSetEvent):::Notifies registered listeners that a RowSet object has had a change in one of its rows:::
RowSetListener#cursorMoved(RowSetEvent):::Notifies registered listeners that a RowSet object's cursor has moved:::
RowSetMetaData#setColumnCount(int):::Sets the number of columns in the RowSet object to the given number.:::
RowSetMetaData#setAutoIncrement(int, boolean):::Sets whether the designated column is automatically numbered, The default is for a RowSet object's columns not to be automatically numbered.:::
RowSetMetaData#setCaseSensitive(int, boolean):::Sets whether the designated column is case sensitive:::
RowSetMetaData#setSearchable(int, boolean):::Sets whether the designated column can be used in a where clause:::
RowSetMetaData#setCurrency(int, boolean):::Sets whether the designated column is a cash value:::
RowSetMetaData#setNullable(int, int):::Sets whether the designated column's value can be set to NULL:::
RowSetMetaData#setSigned(int, boolean):::Sets whether the designated column is a signed number:::
RowSetMetaData#setColumnDisplaySize(int, int):::Sets the designated column's normal maximum width in chars to the given int.:::
RowSetMetaData#setColumnLabel(int, String):::Sets the suggested column title for use in printouts and displays, if any, to the given String.:::
RowSetMetaData#setColumnName(int, String):::Sets the name of the designated column to the given String.:::
RowSetMetaData#setSchemaName(int, String):::Sets the name of the designated column's table's schema, if any, to the given String.:::
RowSetMetaData#setPrecision(int, int):::Sets the designated column's number of decimal digits to the given int.:::
RowSetMetaData#setScale(int, int):::Sets the designated column's number of digits to the right of the decimal point to the given int.:::
RowSetMetaData#setTableName(int, String):::Sets the designated column's table name, if any, to the given String.:::
RowSetMetaData#setCatalogName(int, String):::Sets the designated column's table's catalog name, if any, to the given String.:::
RowSetMetaData#setColumnType(int, int):::Sets the designated column's SQL type to the one given.:::
RowSetMetaData#setColumnTypeName(int, String):::Sets the designated column's type name that is specific to the data source, if any, to the given String.:::
RowSetReader#readData(RowSetInternal):::Reads the new contents of the calling RowSet object:::
RowSetWriter#writeData(RowSetInternal):::Writes the changes in this RowSetWriter object's rowset back to the data source from which it got its data.:::
StatementEvent#getStatement():::Returns the PreparedStatement that is being closed or is invalid:::return
StatementEvent#getSQLException():::Returns the SQLException the driver is about to throw:::return
StatementEventListener#statementClosed(StatementEvent):::The driver calls this method on all StatementEventListeners registered on the connection when it detects that a PreparedStatement is closed.:::
StatementEventListener#statementErrorOccurred(StatementEvent):::The driver calls this method on all StatementEventListeners registered on the connection when it detects that a PreparedStatement is invalid:::
XAConnection#getXAResource():::Retrieves an XAResource object that the transaction manager will use to manage this XAConnection object's participation in a distributed transaction.:::
XAConnectionBuilder#user(String):::Specifies the username to be used when creating a connection:::
XAConnectionBuilder#password(String):::Specifies the password to be used when creating a connection:::
XAConnectionBuilder#shardingKey(ShardingKey):::Specifies a shardingKey to be used when creating a connection:::
XAConnectionBuilder#superShardingKey(ShardingKey):::Specifies a superShardingKey to be used when creating a connection:::
XAConnectionBuilder#build():::Returns an instance of the object defined by this builder.:::
XADataSource#getXAConnection():::Attempts to establish a physical database connection that can be used in a distributed transaction.:::
XADataSource#getXAConnection(String, String):::Attempts to establish a physical database connection, using the given user name and password:::
XADataSource#getLogWriter()::: data source get log writer:::
XADataSource#setLogWriter(java.io.PrintWriter)::: data source set log writer:::
XADataSource#setLoginTimeout(int)::: data source set login timeout:::
XADataSource#getLoginTimeout()::: data source get login timeout:::
XADataSource#createXAConnectionBuilder():::Creates a new XAConnectionBuilder instance:::throw->new->SQLFeatureNotSupportedException
