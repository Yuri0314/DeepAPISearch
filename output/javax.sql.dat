javax.sql.CommonDataSource#getLogWriter()->java.io.PrintWriter:::Retrieves the log writer for this DataSource object
javax.sql.CommonDataSource#setLogWriter(java.io.PrintWriter)->void:::Sets the log writer for this DataSource object to the given java.io.PrintWriter object
javax.sql.CommonDataSource#setLoginTimeout(int)->void:::Sets the maximum time in seconds that this data source will wait while attempting to connect to a database
javax.sql.CommonDataSource#getLoginTimeout()->int:::Gets the maximum time in seconds that this data source can wait while attempting to connect to a database
javax.sql.CommonDataSource#getParentLogger()->Logger:::Return the parent Logger of all the Loggers used by this data source
javax.sql.CommonDataSource#createShardingKeyBuilder()->ShardingKeyBuilder:::Creates a new ShardingKeyBuilder instance
javax.sql.ConnectionEvent#getSQLException()->SQLException:::<P>Retrieves the SQLException for this ConnectionEvent object
javax.sql.ConnectionEventListener#connectionClosed(ConnectionEvent)->void:::Notifies this ConnectionEventListener that the application has called the method close on its representation of a pooled connection.
javax.sql.ConnectionEventListener#connectionErrorOccurred(ConnectionEvent)->void:::Notifies this ConnectionEventListener that a fatal error has occurred and the pooled connection can no longer be used
javax.sql.ConnectionPoolDataSource#getPooledConnection()->PooledConnection:::Attempts to establish a physical database connection that can be used as a pooled connection.
javax.sql.ConnectionPoolDataSource#getPooledConnection(String, String)->PooledConnection:::Attempts to establish a physical database connection that can be used as a pooled connection.
javax.sql.ConnectionPoolDataSource#getLogWriter()->java.io.PrintWriter::: connection pool data source get log writer
javax.sql.ConnectionPoolDataSource#setLogWriter(java.io.PrintWriter)->void::: connection pool data source set log writer
javax.sql.ConnectionPoolDataSource#setLoginTimeout(int)->void::: connection pool data source set login timeout
javax.sql.ConnectionPoolDataSource#getLoginTimeout()->int::: connection pool data source get login timeout
javax.sql.ConnectionPoolDataSource#createPooledConnectionBuilder()->PooledConnectionBuilder:::Creates a new PooledConnectionBuilder instance
javax.sql.DataSource#getConnection()->Connection:::Attempts to establish a connection with the data source that this DataSource object represents.
javax.sql.DataSource#getConnection(String, String)->Connection:::Attempts to establish a connection with the data source that this DataSource object represents.
javax.sql.DataSource#getLogWriter()->java.io.PrintWriter::: data source get log writer
javax.sql.DataSource#setLogWriter(java.io.PrintWriter)->void::: data source set log writer
javax.sql.DataSource#setLoginTimeout(int)->void::: data source set login timeout
javax.sql.DataSource#getLoginTimeout()->int::: data source get login timeout
javax.sql.DataSource#createConnectionBuilder()->ConnectionBuilder:::Create a new ConnectionBuilder instance
javax.sql.PooledConnection#getConnection()->Connection:::Creates and returns a Connection object that is a handle for the physical connection that this PooledConnection object represents
javax.sql.PooledConnection#close()->void:::Closes the physical connection that this PooledConnection object represents
javax.sql.PooledConnection#addConnectionEventListener(ConnectionEventListener)->void:::Registers the given event listener so that it will be notified when an event occurs on this PooledConnection object.
javax.sql.PooledConnection#removeConnectionEventListener(ConnectionEventListener)->void:::Removes the given event listener from the list of components that will be notified when an event occurs on this PooledConnection object.
javax.sql.PooledConnection#addStatementEventListener(StatementEventListener)->void:::Registers a StatementEventListener with this PooledConnection object
javax.sql.PooledConnection#removeStatementEventListener(StatementEventListener)->void:::Removes the specified StatementEventListener from the list of components that will be notified when the driver detects that a PreparedStatement has been closed or is invalid.
javax.sql.PooledConnectionBuilder#user(String)->PooledConnectionBuilder:::Specifies the username to be used when creating a connection
javax.sql.PooledConnectionBuilder#password(String)->PooledConnectionBuilder:::Specifies the password to be used when creating a connection
javax.sql.PooledConnectionBuilder#shardingKey(ShardingKey)->PooledConnectionBuilder:::Specifies a shardingKey to be used when creating a connection
javax.sql.PooledConnectionBuilder#superShardingKey(ShardingKey)->PooledConnectionBuilder:::Specifies a superShardingKey to be used when creating a connection
javax.sql.PooledConnectionBuilder#build()->PooledConnection:::Returns an instance of the object defined by this builder.
javax.sql.RowSet#getUrl()->String:::Retrieves the url property this RowSet object will use to create a connection if it uses the DriverManager instead of a DataSource object to establish the connection
javax.sql.RowSet#setUrl(String)->void:::Sets the URL this RowSet object will use when it uses the DriverManager to create a connection
javax.sql.RowSet#getDataSourceName()->String:::Retrieves the logical name that identifies the data source for this RowSet object.
javax.sql.RowSet#setDataSourceName(String)->void:::Sets the data source name property for this RowSet object to the given String
javax.sql.RowSet#getUsername()->String:::Retrieves the username used to create a database connection for this RowSet object
javax.sql.RowSet#setUsername(String)->void:::Sets the username property for this RowSet object to the given String.
javax.sql.RowSet#getPassword()->String:::Retrieves the password used to create a database connection
javax.sql.RowSet#setPassword(String)->void:::Sets the database password for this RowSet object to the given String.
javax.sql.RowSet#getTransactionIsolation()->int:::Retrieves the transaction isolation level set for this RowSet object.
javax.sql.RowSet#setTransactionIsolation(int)->void:::Sets the transaction isolation level for this RowSet object.
javax.sql.RowSet#getTypeMap()->java.util.Map>:::Retrieves the Map object associated with this RowSet object, which specifies the custom mapping of SQL user-defined types, if any
javax.sql.RowSet#setTypeMap(java.util.Map>)->void:::Installs the given java.util.Map object as the default type map for this RowSet object
javax.sql.RowSet#getCommand()->String:::Retrieves this RowSet object's command property
javax.sql.RowSet#setCommand(String)->void:::Sets this RowSet object's command property to the given SQL query
javax.sql.RowSet#isReadOnly()->boolean:::Retrieves whether this RowSet object is read-only
javax.sql.RowSet#setReadOnly(boolean)->void:::Sets whether this RowSet object is read-only to the given boolean.
javax.sql.RowSet#getMaxFieldSize()->int:::Retrieves the maximum number of bytes that may be returned for certain column values
javax.sql.RowSet#setMaxFieldSize(int)->void:::Sets the maximum number of bytes that can be returned for a column value to the given number of bytes
javax.sql.RowSet#getMaxRows()->int:::Retrieves the maximum number of rows that this RowSet object can contain
javax.sql.RowSet#setMaxRows(int)->void:::Sets the maximum number of rows that this RowSet object can contain to the specified number
javax.sql.RowSet#getEscapeProcessing()->boolean:::Retrieves whether escape processing is enabled for this RowSet object
javax.sql.RowSet#setEscapeProcessing(boolean)->void:::Sets escape processing for this RowSet object on or off
javax.sql.RowSet#getQueryTimeout()->int:::Retrieves the maximum number of seconds the driver will wait for a statement to execute
javax.sql.RowSet#setQueryTimeout(int)->void:::Sets the maximum time the driver will wait for a statement to execute to the given number of seconds
javax.sql.RowSet#setType(int)->void:::Sets the type of this RowSet object to the given type
javax.sql.RowSet#setConcurrency(int)->void:::Sets the concurrency of this RowSet object to the given concurrency level
javax.sql.RowSet#setNull(int, int)->void:::Sets the designated parameter in this RowSet object's SQL command to SQL NULL
javax.sql.RowSet#setNull(String, int)->void:::Sets the designated parameter to SQL NULL
javax.sql.RowSet#setNull(int, int, String)->void:::Sets the designated parameter in this RowSet object's SQL command to SQL NULL
javax.sql.RowSet#setNull(String, int, String)->void:::Sets the designated parameter to SQL NULL
javax.sql.RowSet#setBoolean(int, boolean)->void:::Sets the designated parameter in this RowSet object's command to the given Java boolean value
javax.sql.RowSet#setBoolean(String, boolean)->void:::Sets the designated parameter to the given Java boolean value
javax.sql.RowSet#setByte(int, byte)->void:::Sets the designated parameter in this RowSet object's command to the given Java byte value
javax.sql.RowSet#setByte(String, byte)->void:::Sets the designated parameter to the given Java byte value
javax.sql.RowSet#setShort(int, short)->void:::Sets the designated parameter in this RowSet object's command to the given Java short value
javax.sql.RowSet#setShort(String, short)->void:::Sets the designated parameter to the given Java short value
javax.sql.RowSet#setInt(int, int)->void:::Sets the designated parameter in this RowSet object's command to the given Java int value
javax.sql.RowSet#setInt(String, int)->void:::Sets the designated parameter to the given Java int value
javax.sql.RowSet#setLong(int, long)->void:::Sets the designated parameter in this RowSet object's command to the given Java long value
javax.sql.RowSet#setLong(String, long)->void:::Sets the designated parameter to the given Java long value
javax.sql.RowSet#setFloat(int, float)->void:::Sets the designated parameter in this RowSet object's command to the given Java float value
javax.sql.RowSet#setFloat(String, float)->void:::Sets the designated parameter to the given Java float value
javax.sql.RowSet#setDouble(int, double)->void:::Sets the designated parameter in this RowSet object's command to the given Java double value
javax.sql.RowSet#setDouble(String, double)->void:::Sets the designated parameter to the given Java double value
javax.sql.RowSet#setBigDecimal(int, BigDecimal)->void:::Sets the designated parameter in this RowSet object's command to the given java.math.BigDecimal value
javax.sql.RowSet#setBigDecimal(String, BigDecimal)->void:::Sets the designated parameter to the given java.math.BigDecimal value
javax.sql.RowSet#setString(int, String)->void:::Sets the designated parameter in this RowSet object's command to the given Java String value
javax.sql.RowSet#setString(String, String)->void:::Sets the designated parameter to the given Java String value
javax.sql.RowSet#setBytes(int, byte[])->void:::Sets the designated parameter in this RowSet object's command to the given Java array of byte values
javax.sql.RowSet#setBytes(String, byte[])->void:::Sets the designated parameter to the given Java array of bytes
javax.sql.RowSet#setDate(int, java.sql.Date)->void:::Sets the designated parameter in this RowSet object's command to the given java.sql.Date value
javax.sql.RowSet#setTime(int, java.sql.Time)->void:::Sets the designated parameter in this RowSet object's command to the given java.sql.Time value
javax.sql.RowSet#setTimestamp(int, java.sql.Timestamp)->void:::Sets the designated parameter in this RowSet object's command to the given java.sql.Timestamp value
javax.sql.RowSet#setTimestamp(String, java.sql.Timestamp)->void:::Sets the designated parameter to the given java.sql.Timestamp value
javax.sql.RowSet#setAsciiStream(int, java.io.InputStream, int)->void:::Sets the designated parameter in this RowSet object's command to the given java.io.InputStream value
javax.sql.RowSet#setAsciiStream(String, java.io.InputStream, int)->void:::Sets the designated parameter to the given input stream, which will have the specified number of bytes
javax.sql.RowSet#setBinaryStream(int, java.io.InputStream, int)->void:::Sets the designated parameter in this RowSet object's command to the given java.io.InputStream value
javax.sql.RowSet#setBinaryStream(String, java.io.InputStream, int)->void:::Sets the designated parameter to the given input stream, which will have the specified number of bytes
javax.sql.RowSet#setCharacterStream(int, Reader, int)->void:::Sets the designated parameter in this RowSet object's command to the given java.io.Reader value
javax.sql.RowSet#setCharacterStream(String, java.io.Reader, int)->void:::Sets the designated parameter to the given Reader object, which is the given number of characters long
javax.sql.RowSet#setAsciiStream(int, java.io.InputStream)->void:::Sets the designated parameter in this RowSet object's command to the given input stream
javax.sql.RowSet#setAsciiStream(String, java.io.InputStream)->void:::Sets the designated parameter to the given input stream
javax.sql.RowSet#setBinaryStream(int, java.io.InputStream)->void:::Sets the designated parameter in this RowSet object's command to the given input stream
javax.sql.RowSet#setBinaryStream(String, java.io.InputStream)->void:::Sets the designated parameter to the given input stream
javax.sql.RowSet#setCharacterStream(int, java.io.Reader)->void:::Sets the designated parameter in this RowSet object's command to the given Reader object
javax.sql.RowSet#setCharacterStream(String, java.io.Reader)->void:::Sets the designated parameter to the given Reader object
javax.sql.RowSet#setNCharacterStream(int, Reader)->void:::Sets the designated parameter in this RowSet object's command to a Reader object
javax.sql.RowSet#setObject(int, Object, int, int)->void:::Sets the designated parameter in this RowSet object's command with the given Java Object
javax.sql.RowSet#setObject(String, Object, int, int)->void:::Sets the value of the designated parameter with the given object
javax.sql.RowSet#setObject(int, Object, int)->void:::Sets the designated parameter in this RowSet object's command with a Java Object
javax.sql.RowSet#setObject(String, Object, int)->void:::Sets the value of the designated parameter with the given object
javax.sql.RowSet#setObject(String, Object)->void:::Sets the value of the designated parameter with the given object
javax.sql.RowSet#setObject(int, Object)->void:::Sets the designated parameter in this RowSet object's command with a Java Object
javax.sql.RowSet#setRef(int, Ref)->void:::Sets the designated parameter in this RowSet object's command with the given  Ref value
javax.sql.RowSet#setBlob(int, Blob)->void:::Sets the designated parameter in this RowSet object's command with the given  Blob value
javax.sql.RowSet#setBlob(int, InputStream, long)->void:::Sets the designated parameter to a InputStream object
javax.sql.RowSet#setBlob(int, InputStream)->void:::Sets the designated parameter to a InputStream object
javax.sql.RowSet#setBlob(String, InputStream, long)->void:::Sets the designated parameter to a InputStream object
javax.sql.RowSet#setBlob(String, Blob)->void:::Sets the designated parameter to the given java.sql.Blob object
javax.sql.RowSet#setBlob(String, InputStream)->void:::Sets the designated parameter to a InputStream object
javax.sql.RowSet#setClob(int, Clob)->void:::Sets the designated parameter in this RowSet object's command with the given  Clob value
javax.sql.RowSet#setClob(int, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setClob(int, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setClob(String, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setClob(String, Clob)->void:::Sets the designated parameter to the given java.sql.Clob object
javax.sql.RowSet#setClob(String, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setArray(int, Array)->void:::Sets the designated parameter in this RowSet object's command with the given  Array value
javax.sql.RowSet#setDate(int, java.sql.Date, Calendar)->void:::Sets the designated parameter in this RowSet object's command with the given  java.sql.Date value
javax.sql.RowSet#setDate(String, java.sql.Date)->void:::Sets the designated parameter to the given java.sql.Date value using the default time zone of the virtual machine that is running the application
javax.sql.RowSet#setDate(String, java.sql.Date, Calendar)->void:::Sets the designated parameter to the given java.sql.Date value, using the given Calendar object
javax.sql.RowSet#setTime(int, java.sql.Time, Calendar)->void:::Sets the designated parameter in this RowSet object's command with the given  java.sql.Time value
javax.sql.RowSet#setTime(String, java.sql.Time)->void:::Sets the designated parameter to the given java.sql.Time value
javax.sql.RowSet#setTime(String, java.sql.Time, Calendar)->void:::Sets the designated parameter to the given java.sql.Time value, using the given Calendar object
javax.sql.RowSet#setTimestamp(int, java.sql.Timestamp, Calendar)->void:::Sets the designated parameter in this RowSet object's command with the given  java.sql.Timestamp value
javax.sql.RowSet#setTimestamp(String, java.sql.Timestamp, Calendar)->void:::Sets the designated parameter to the given java.sql.Timestamp value, using the given Calendar object
javax.sql.RowSet#clearParameters()->void:::Clears the parameters set for this RowSet object's command
javax.sql.RowSet#execute()->void:::Fills this RowSet object with data
javax.sql.RowSet#addRowSetListener(RowSetListener)->void:::Registers the given listener so that it will be notified of events that occur on this RowSet object.
javax.sql.RowSet#removeRowSetListener(RowSetListener)->void:::Removes the specified listener from the list of components that will be notified when an event occurs on this RowSet object.
javax.sql.RowSet#setSQLXML(int, SQLXML)->void:::Sets the designated parameter to the given java.sql.SQLXML object
javax.sql.RowSet#setSQLXML(String, SQLXML)->void:::Sets the designated parameter to the given java.sql.SQLXML object
javax.sql.RowSet#setRowId(int, RowId)->void:::Sets the designated parameter to the given java.sql.RowId object
javax.sql.RowSet#setRowId(String, RowId)->void:::Sets the designated parameter to the given java.sql.RowId object
javax.sql.RowSet#setNString(int, String)->void:::Sets the designated parameter to the given String object
javax.sql.RowSet#setNString(String, String)->void:::Sets the designated parameter to the given String object
javax.sql.RowSet#setNCharacterStream(int, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setNCharacterStream(String, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setNCharacterStream(String, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setNClob(String, NClob)->void:::Sets the designated parameter to a java.sql.NClob object
javax.sql.RowSet#setNClob(String, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setNClob(String, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setNClob(int, Reader, long)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setNClob(int, NClob)->void:::Sets the designated parameter to a java.sql.NClob object
javax.sql.RowSet#setNClob(int, Reader)->void:::Sets the designated parameter to a Reader object
javax.sql.RowSet#setURL(int, java.net.URL)->void:::Sets the designated parameter to the given java.net.URL value
javax.sql.RowSetInternal#getParams()->Object[]:::Retrieves the parameters that have been set for this RowSet object's command.
javax.sql.RowSetInternal#getConnection()->Connection:::Retrieves the Connection object that was passed to this RowSet object.
javax.sql.RowSetInternal#setMetaData(RowSetMetaData)->void:::Sets the given RowSetMetaData object as the RowSetMetaData object for this RowSet object
javax.sql.RowSetInternal#getOriginal()->ResultSet:::Retrieves a ResultSet object containing the original value of this RowSet object
javax.sql.RowSetInternal#getOriginalRow()->ResultSet:::Retrieves a ResultSet object containing the original value of the current row only
javax.sql.RowSetListener#rowSetChanged(RowSetEvent)->void:::Notifies registered listeners that a RowSet object in the given RowSetEvent object has changed its entire contents
javax.sql.RowSetListener#rowChanged(RowSetEvent)->void:::Notifies registered listeners that a RowSet object has had a change in one of its rows
javax.sql.RowSetListener#cursorMoved(RowSetEvent)->void:::Notifies registered listeners that a RowSet object's cursor has moved
javax.sql.RowSetMetaData#setColumnCount(int)->void:::Sets the number of columns in the RowSet object to the given number.
javax.sql.RowSetMetaData#setAutoIncrement(int, boolean)->void:::Sets whether the designated column is automatically numbered, The default is for a RowSet object's columns not to be automatically numbered.
javax.sql.RowSetMetaData#setCaseSensitive(int, boolean)->void:::Sets whether the designated column is case sensitive
javax.sql.RowSetMetaData#setSearchable(int, boolean)->void:::Sets whether the designated column can be used in a where clause
javax.sql.RowSetMetaData#setCurrency(int, boolean)->void:::Sets whether the designated column is a cash value
javax.sql.RowSetMetaData#setNullable(int, int)->void:::Sets whether the designated column's value can be set to NULL
javax.sql.RowSetMetaData#setSigned(int, boolean)->void:::Sets whether the designated column is a signed number
javax.sql.RowSetMetaData#setColumnDisplaySize(int, int)->void:::Sets the designated column's normal maximum width in chars to the given int.
javax.sql.RowSetMetaData#setColumnLabel(int, String)->void:::Sets the suggested column title for use in printouts and displays, if any, to the given String.
javax.sql.RowSetMetaData#setColumnName(int, String)->void:::Sets the name of the designated column to the given String.
javax.sql.RowSetMetaData#setSchemaName(int, String)->void:::Sets the name of the designated column's table's schema, if any, to the given String.
javax.sql.RowSetMetaData#setPrecision(int, int)->void:::Sets the designated column's number of decimal digits to the given int.
javax.sql.RowSetMetaData#setScale(int, int)->void:::Sets the designated column's number of digits to the right of the decimal point to the given int.
javax.sql.RowSetMetaData#setTableName(int, String)->void:::Sets the designated column's table name, if any, to the given String.
javax.sql.RowSetMetaData#setCatalogName(int, String)->void:::Sets the designated column's table's catalog name, if any, to the given String.
javax.sql.RowSetMetaData#setColumnType(int, int)->void:::Sets the designated column's SQL type to the one given.
javax.sql.RowSetMetaData#setColumnTypeName(int, String)->void:::Sets the designated column's type name that is specific to the data source, if any, to the given String.
javax.sql.RowSetReader#readData(RowSetInternal)->void:::Reads the new contents of the calling RowSet object
javax.sql.RowSetWriter#writeData(RowSetInternal)->boolean:::Writes the changes in this RowSetWriter object's rowset back to the data source from which it got its data.
javax.sql.StatementEvent#getStatement()->PreparedStatement:::Returns the PreparedStatement that is being closed or is invalid
javax.sql.StatementEvent#getSQLException()->SQLException:::Returns the SQLException the driver is about to throw
javax.sql.StatementEventListener#statementClosed(StatementEvent)->void:::The driver calls this method on all StatementEventListeners registered on the connection when it detects that a PreparedStatement is closed.
javax.sql.StatementEventListener#statementErrorOccurred(StatementEvent)->void:::The driver calls this method on all StatementEventListeners registered on the connection when it detects that a PreparedStatement is invalid
javax.sql.XAConnection#getXAResource()->javax.transaction.xa.XAResource:::Retrieves an XAResource object that the transaction manager will use to manage this XAConnection object's participation in a distributed transaction.
javax.sql.XAConnectionBuilder#user(String)->XAConnectionBuilder:::Specifies the username to be used when creating a connection
javax.sql.XAConnectionBuilder#password(String)->XAConnectionBuilder:::Specifies the password to be used when creating a connection
javax.sql.XAConnectionBuilder#shardingKey(ShardingKey)->XAConnectionBuilder:::Specifies a shardingKey to be used when creating a connection
javax.sql.XAConnectionBuilder#superShardingKey(ShardingKey)->XAConnectionBuilder:::Specifies a superShardingKey to be used when creating a connection
javax.sql.XAConnectionBuilder#build()->XAConnection:::Returns an instance of the object defined by this builder.
javax.sql.XADataSource#getXAConnection()->XAConnection:::Attempts to establish a physical database connection that can be used in a distributed transaction.
javax.sql.XADataSource#getXAConnection(String, String)->XAConnection:::Attempts to establish a physical database connection, using the given user name and password
javax.sql.XADataSource#getLogWriter()->java.io.PrintWriter::: data source get log writer
javax.sql.XADataSource#setLogWriter(java.io.PrintWriter)->void::: data source set log writer
javax.sql.XADataSource#setLoginTimeout(int)->void::: data source set login timeout
javax.sql.XADataSource#getLoginTimeout()->int::: data source get login timeout
javax.sql.XADataSource#createXAConnectionBuilder()->XAConnectionBuilder:::Creates a new XAConnectionBuilder instance
