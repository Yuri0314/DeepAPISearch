Book#getNumberOfPages():::Returns the number of pages in this Book.:::return->mPages->size
Book#getPageFormat(int):::Returns the PageFormat of the page specified by pageIndex.:::return->getPage->getPageFormat
Book#getPrintable(int):::Returns the Printable instance responsible for rendering the page specified by pageIndex.:::return->getPage->getPrintable
Book#setPage(int, Printable, PageFormat):::Sets the PageFormat and the Painter for a specified page number.:::if->throw->new->NullPointerException->if->throw->new->NullPointerException->mPages->new->BookPage->setElementAt
Book#append(Printable, PageFormat):::Appends a single page to the end of this Book.:::mPages->new->BookPage->addElement
Book#append(Printable, PageFormat, int):::Appends numPages pages to the end of this Book:::bookPage->new->BookPage->pageIndex->mPages->size->newSize->mPages->setSize->for->i
Pageable#getNumberOfPages():::Returns the number of pages in the set:::
Pageable#getPageFormat(int):::Returns the PageFormat of the page specified by pageIndex.:::
Pageable#getPrintable(int):::Returns the Printable instance responsible for rendering the page specified by pageIndex.:::
PageFormat#clone():::Makes a copy of this PageFormat with the same contents as this PageFormat.:::newPage->try->super->clone->mPaper->clone->catch->e->printStackTrace->finally->return
PageFormat#getWidth():::Returns the width, in 1/72nds of an inch, of the page:::width->orientation->getOrientation->if->mPaper->getWidth->else->mPaper->getHeight->return
PageFormat#getHeight():::Returns the height, in 1/72nds of an inch, of the page:::height->orientation->getOrientation->if->mPaper->getHeight->else->mPaper->getWidth->return
PageFormat#getImageableX():::Returns the x coordinate of the upper left point of the imageable area of the Paper object associated with this PageFormat:::x->switch->getOrientation->mPaper->getHeight->mPaper->getImageableY->mPaper->getImageableHeight->break->mPaper->getImageableX->break->mPaper->getImageableY->break->throw->new->InternalError->return
PageFormat#getImageableY():::Returns the y coordinate of the upper left point of the imageable area of the Paper object associated with this PageFormat:::y->switch->getOrientation->mPaper->getImageableX->break->mPaper->getImageableY->break->mPaper->getWidth->mPaper->getImageableX->mPaper->getImageableWidth->break->throw->new->InternalError->return
PageFormat#getImageableWidth():::Returns the width, in 1/72nds of an inch, of the imageable area of the page:::width->if->getOrientation->mPaper->getImageableWidth->else->mPaper->getImageableHeight->return
PageFormat#getImageableHeight():::Return the height, in 1/72nds of an inch, of the imageable area of the page:::height->if->getOrientation->mPaper->getImageableHeight->else->mPaper->getImageableWidth->return
PageFormat#getPaper():::Returns a copy of the Paper object associated with this PageFormat:::return->mPaper->clone
PageFormat#setPaper(Paper):::Sets the Paper object for this PageFormat.:::paper->clone
PageFormat#setOrientation(int):::Sets the page orientation:::if->else->throw->new->IllegalArgumentException
PageFormat#getOrientation():::Returns the orientation of this PageFormat.:::return
PageFormat#getMatrix():::Returns a transformation matrix that translates user space rendering to the requested orientation of the page:::matrix->new->doubleArr->switch->mPaper->getHeight->break->break->mPaper->getWidth->break->throw->new->IllegalArgumentException->return
Paper#clone():::Creates a copy of this Paper with the same contents as this Paper.:::newPaper->try->super->clone->catch->e->printStackTrace->finally->return
Paper#getHeight():::Returns the height of the page in 1/72nds of an inch.:::return
Paper#setSize(double, double):::Sets the width and height of this Paper object, which represents the properties of the page onto which printing occurs:::
Paper#getWidth():::Returns the width of the page in 1/72nds of an inch.:::return
Paper#setImageableArea(double, double, double, double):::Sets the imageable area of this Paper:::new->Rectangle2D.Double
Paper#getImageableX():::Returns the x coordinate of the upper-left corner of this Paper object's imageable area.:::return->mImageableArea->getX
Paper#getImageableY():::Returns the y coordinate of the upper-left corner of this Paper object's imageable area.:::return->mImageableArea->getY
Paper#getImageableWidth():::Returns the width of this Paper object's imageable area.:::return->mImageableArea->getWidth
Paper#getImageableHeight():::Returns the height of this Paper object's imageable area.:::return->mImageableArea->getHeight
Printable#print(Graphics, PageFormat, int):::Prints the page at the specified index into the specified Graphics context in the specified format:::
PrinterGraphics#getPrinterJob():::Returns the PrinterJob that is controlling the current rendering request.:::
PrinterIOException#getIOException():::Returns the IOException that terminated the print job:::return
PrinterIOException#getCause():::Returns the cause of this exception (the IOException that terminated the print job).:::return
PrinterJob#getPrinterJob():::Creates and returns a PrinterJob which is initially associated with the default printer:::security->System->getSecurityManager->if->security->checkPrintJobAccess->return->new->java.security.PrivilegedAction<PrinterJob>->doPrivileged
PrinterJob#lookupPrintServices():::A convenience method which looks up 2D print services:::return->PrintServiceLookup->lookupPrintServices
PrinterJob#lookupStreamPrintServices(String):::A convenience method which locates factories for stream print services which can image 2D graphics:::return->StreamPrintServiceFactory->lookupStreamPrintServiceFactories
PrinterJob#getPrintService():::Returns the service (printer) for this printer job:::return
PrinterJob#setPrintService(PrintService):::Associate this PrinterJob with a new PrintService:::throw->new->PrinterException
PrinterJob#setPrintable(Printable):::Calls painter to render the pages:::
PrinterJob#setPrintable(Printable, PageFormat):::Calls painter to render the pages in the specified format:::
PrinterJob#setPageable(Pageable):::Queries document for the number of pages and the PageFormat and Printable for each page held in the Pageable instance, document.:::
PrinterJob#printDialog():::Presents a dialog to the user for changing the properties of the print job:::
PrinterJob#printDialog(PrintRequestAttributeSet):::A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the Pageable interface:::if->throw->new->NullPointerException->return->printDialog
PrinterJob#pageDialog(PageFormat):::Displays a dialog that allows modification of a PageFormat instance:::
PrinterJob#pageDialog(PrintRequestAttributeSet):::A convenience method which displays a cross-platform page setup dialog:::if->throw->new->NullPointerException->return->defaultPage->pageDialog
PrinterJob#defaultPage(PageFormat):::Clones the PageFormat argument and alters the clone to describe a default page size and orientation.:::
PrinterJob#defaultPage():::Creates a new PageFormat instance and sets it to a default size and orientation.:::return->new->PageFormat->defaultPage
PrinterJob#getPageFormat(PrintRequestAttributeSet):::Calculates a PageFormat with values consistent with those supported by the current PrintService for this job (ie the value returned by getPrintService()) and media, printable area and orientation contained in attributes:::service->getPrintService->pf->defaultPage->if->return->media->attributes->get->mpa->attributes->get->orientReq->attributes->get->if->return->paper->pf->getPaper->if->service->isAttributeCategorySupported->mpaVals->service->getSupportedAttributeValues->if->if->service->isAttributeValueSupported->if->msn->msz->MediaSize->getMediaSizeForName->if->inch->paperWid->msz->getX->paperHgt->msz->getY->paper->setSize->if->paper->setImageableArea->if->service->isAttributeValueSupported->printableArea->mpa->getPrintableArea->for->i->paper->setImageableArea->if->service->isAttributeValueSupported->orient->if->orientReq->equals->else->if->orientReq->equals->else->pf->setOrientation->pf->setPaper->validatePage->return
PrinterJob#validatePage(PageFormat):::Returns the clone of page with its settings adjusted to be compatible with the current printer of this PrinterJob:::
PrinterJob#print():::Prints a set of pages.:::
PrinterJob#print(PrintRequestAttributeSet):::Prints a set of pages using the settings in the attribute set:::print
PrinterJob#setCopies(int):::Sets the number of copies to be printed.:::
PrinterJob#getCopies():::Gets the number of copies to be printed.:::
PrinterJob#getUserName():::Gets the name of the printing user.:::
PrinterJob#setJobName(String):::Sets the name of the document to be printed:::
PrinterJob#getJobName():::Gets the name of the document to be printed.:::
PrinterJob#cancel():::Cancels a print job that is in progress:::
PrinterJob#isCancelled():::Returns true if a print job is in progress, but is going to be cancelled at the next opportunity; otherwise returns false.:::
