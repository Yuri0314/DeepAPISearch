java.awt.print.Book#getNumberOfPages()->int:::Returns the number of pages in this Book.
java.awt.print.Book#getPageFormat(int)->PageFormat:::Returns the PageFormat of the page specified by pageIndex.
java.awt.print.Book#getPrintable(int)->Printable:::Returns the Printable instance responsible for rendering the page specified by pageIndex.
java.awt.print.Book#setPage(int, Printable, PageFormat)->void:::Sets the PageFormat and the Painter for a specified page number.
java.awt.print.Book#append(Printable, PageFormat)->void:::Appends a single page to the end of this Book.
java.awt.print.Book#append(Printable, PageFormat, int)->void:::Appends numPages pages to the end of this Book
java.awt.print.Pageable#getNumberOfPages()->int:::Returns the number of pages in the set
java.awt.print.Pageable#getPageFormat(int)->PageFormat:::Returns the PageFormat of the page specified by pageIndex.
java.awt.print.Pageable#getPrintable(int)->Printable:::Returns the Printable instance responsible for rendering the page specified by pageIndex.
java.awt.print.PageFormat#clone()->Object:::Makes a copy of this PageFormat with the same contents as this PageFormat.
java.awt.print.PageFormat#getWidth()->double:::Returns the width, in 1/72nds of an inch, of the page
java.awt.print.PageFormat#getHeight()->double:::Returns the height, in 1/72nds of an inch, of the page
java.awt.print.PageFormat#getImageableX()->double:::Returns the x coordinate of the upper left point of the imageable area of the Paper object associated with this PageFormat
java.awt.print.PageFormat#getImageableY()->double:::Returns the y coordinate of the upper left point of the imageable area of the Paper object associated with this PageFormat
java.awt.print.PageFormat#getImageableWidth()->double:::Returns the width, in 1/72nds of an inch, of the imageable area of the page
java.awt.print.PageFormat#getImageableHeight()->double:::Return the height, in 1/72nds of an inch, of the imageable area of the page
java.awt.print.PageFormat#getPaper()->Paper:::Returns a copy of the Paper object associated with this PageFormat
java.awt.print.PageFormat#setPaper(Paper)->void:::Sets the Paper object for this PageFormat.
java.awt.print.PageFormat#setOrientation(int)->void:::Sets the page orientation
java.awt.print.PageFormat#getOrientation()->int:::Returns the orientation of this PageFormat.
java.awt.print.PageFormat#getMatrix()->double[]:::Returns a transformation matrix that translates user space rendering to the requested orientation of the page
java.awt.print.Paper#clone()->Object:::Creates a copy of this Paper with the same contents as this Paper.
java.awt.print.Paper#getHeight()->double:::Returns the height of the page in 1/72nds of an inch.
java.awt.print.Paper#setSize(double, double)->void:::Sets the width and height of this Paper object, which represents the properties of the page onto which printing occurs
java.awt.print.Paper#getWidth()->double:::Returns the width of the page in 1/72nds of an inch.
java.awt.print.Paper#setImageableArea(double, double, double, double)->void:::Sets the imageable area of this Paper
java.awt.print.Paper#getImageableX()->double:::Returns the x coordinate of the upper-left corner of this Paper object's imageable area.
java.awt.print.Paper#getImageableY()->double:::Returns the y coordinate of the upper-left corner of this Paper object's imageable area.
java.awt.print.Paper#getImageableWidth()->double:::Returns the width of this Paper object's imageable area.
java.awt.print.Paper#getImageableHeight()->double:::Returns the height of this Paper object's imageable area.
java.awt.print.Printable#print(Graphics, PageFormat, int)->int:::Prints the page at the specified index into the specified Graphics context in the specified format
java.awt.print.PrinterGraphics#getPrinterJob()->PrinterJob:::Returns the PrinterJob that is controlling the current rendering request.
java.awt.print.PrinterIOException#getIOException()->IOException:::Returns the IOException that terminated the print job
java.awt.print.PrinterIOException#getCause()->Throwable:::Returns the cause of this exception (the IOException that terminated the print job).
java.awt.print.PrinterJob#getPrinterJob()->PrinterJob:::Creates and returns a PrinterJob which is initially associated with the default printer
java.awt.print.PrinterJob#lookupPrintServices()->PrintService[]:::A convenience method which looks up 2D print services
java.awt.print.PrinterJob#lookupStreamPrintServices(String)->StreamPrintServiceFactory[]:::A convenience method which locates factories for stream print services which can image 2D graphics
java.awt.print.PrinterJob#getPrintService()->PrintService:::Returns the service (printer) for this printer job
java.awt.print.PrinterJob#setPrintService(PrintService)->void:::Associate this PrinterJob with a new PrintService
java.awt.print.PrinterJob#setPrintable(Printable)->void:::Calls painter to render the pages
java.awt.print.PrinterJob#setPrintable(Printable, PageFormat)->void:::Calls painter to render the pages in the specified format
java.awt.print.PrinterJob#setPageable(Pageable)->void:::Queries document for the number of pages and the PageFormat and Printable for each page held in the Pageable instance, document.
java.awt.print.PrinterJob#printDialog()->boolean:::Presents a dialog to the user for changing the properties of the print job
java.awt.print.PrinterJob#printDialog(PrintRequestAttributeSet)->boolean:::A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the Pageable interface
java.awt.print.PrinterJob#pageDialog(PageFormat)->PageFormat:::Displays a dialog that allows modification of a PageFormat instance
java.awt.print.PrinterJob#pageDialog(PrintRequestAttributeSet)->PageFormat:::A convenience method which displays a cross-platform page setup dialog
java.awt.print.PrinterJob#defaultPage(PageFormat)->PageFormat:::Clones the PageFormat argument and alters the clone to describe a default page size and orientation.
java.awt.print.PrinterJob#defaultPage()->PageFormat:::Creates a new PageFormat instance and sets it to a default size and orientation.
java.awt.print.PrinterJob#getPageFormat(PrintRequestAttributeSet)->PageFormat:::Calculates a PageFormat with values consistent with those supported by the current PrintService for this job (ie the value returned by getPrintService()) and media, printable area and orientation contained in attributes
java.awt.print.PrinterJob#validatePage(PageFormat)->PageFormat:::Returns the clone of page with its settings adjusted to be compatible with the current printer of this PrinterJob
java.awt.print.PrinterJob#print()->void:::Prints a set of pages.
java.awt.print.PrinterJob#print(PrintRequestAttributeSet)->void:::Prints a set of pages using the settings in the attribute set
java.awt.print.PrinterJob#setCopies(int)->void:::Sets the number of copies to be printed.
java.awt.print.PrinterJob#getCopies()->int:::Gets the number of copies to be printed.
java.awt.print.PrinterJob#getUserName()->String:::Gets the name of the printing user.
java.awt.print.PrinterJob#setJobName(String)->void:::Sets the name of the document to be printed
java.awt.print.PrinterJob#getJobName()->String:::Gets the name of the document to be printed.
java.awt.print.PrinterJob#cancel()->void:::Cancels a print job that is in progress
java.awt.print.PrinterJob#isCancelled()->boolean:::Returns true if a print job is in progress, but is going to be cancelled at the next opportunity; otherwise returns false.
