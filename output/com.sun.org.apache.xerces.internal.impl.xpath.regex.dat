com.sun.org.apache.xerces.internal.impl.xpath.regex.BMPattern#matches(CharacterIterator, int, int)->int::: pattern matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.BMPattern#matches(String, int, int)->int::: pattern matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.BMPattern#matches(char[], int, int)->int::: pattern matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.BMPattern#matchesIgnoreCase(CharacterIterator, int, int)->int::: pattern matches ignore case
com.sun.org.apache.xerces.internal.impl.xpath.regex.BMPattern#matchesIgnoreCase(String, int, int)->int::: pattern matches ignore case
com.sun.org.apache.xerces.internal.impl.xpath.regex.BMPattern#matchesIgnoreCase(char[], int, int)->int::: pattern matches ignore case
com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap#get(int)->int[]::: Return a list of code point characters (not including the input value)  that can be substituted in a case insensitive match
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#clone()->Object::: match clone
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#setNumberOfGroups(int)->void::: match set number of groups
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#setSource(CharacterIterator)->void::: match set source
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#setSource(String)->void::: match set source
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#setSource(char[])->void::: match set source
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#setBeginning(int, int)->void::: match set beginning
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#setEnd(int, int)->void::: match set end
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#getNumberOfGroups()->int:::Return the number of regular expression groups
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#getBeginning(int)->int:::Return a start position in the target text matched to specified regular expression group.
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#getEnd(int)->int:::Return an end position in the target text matched to specified regular expression group.
com.sun.org.apache.xerces.internal.impl.xpath.regex.Match#getCapturedText(int)->String:::Return an substring of the target text matched to specified regular expression group.
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createDot()->Op::: op create dot
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createChar(int)->CharOp::: op create char
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createAnchor(int)->CharOp::: op create anchor
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createCapture(int, Op)->CharOp::: op create capture
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createUnion(int)->UnionOp::: op create union
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createClosure(int)->ChildOp::: op create closure
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createNonGreedyClosure()->ChildOp::: op create non greedy closure
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createQuestion(boolean)->ChildOp::: op create question
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createRange(Token)->RangeOp::: op create range
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createLook(int, Op, Op)->ChildOp::: op create look
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createBackReference(int)->CharOp::: op create back reference
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createString(String)->StringOp::: op create string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createIndependent(Op, Op)->ChildOp::: op create independent
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createModifier(Op, Op, int, int)->ModifierOp::: op create modifier
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#createCondition(Op, int, Op, Op, Op)->ConditionOp::: op create condition
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#size()->int::: op size
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#elementAt(int)->Op::: op element at
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#getChild()->Op::: op get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#getData()->int::: op get data
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#getData2()->int::: op get data2
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#getToken()->RangeToken::: op get token
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op#getString()->String::: op get string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.CharOp#getData()->int::: char op get data
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.UnionOp#addElement(Op)->void::: union op add element
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.UnionOp#size()->int::: union op size
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.UnionOp#elementAt(int)->Op::: union op element at
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ChildOp#setChild(Op)->void::: child op set child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ChildOp#getChild()->Op::: child op get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ModifierOp#getData()->int::: modifier op get data
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ModifierOp#getData2()->int::: modifier op get data2
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.RangeOp#getToken()->RangeToken::: range op get token
com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.StringOp#getString()->String::: string op get string
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException#getLocation()->int::: parse exception get location
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processCaret()->Token::: parser for schema process caret
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processDollar()->Token::: parser for schema process dollar
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processLookahead()->Token::: parser for schema process lookahead
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processNegativelookahead()->Token::: parser for schema process negativelookahead
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processLookbehind()->Token::: parser for schema process lookbehind
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processNegativelookbehind()->Token::: parser for schema process negativelookbehind
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_A()->Token::: parser for schema process backsolidus_ a
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_Z()->Token::: parser for schema process backsolidus_ z
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_z()->Token::: parser for schema process backsolidus_z
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_b()->Token::: parser for schema process backsolidus_b
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_B()->Token::: parser for schema process backsolidus_ b
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_lt()->Token::: parser for schema process backsolidus_lt
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_gt()->Token::: parser for schema process backsolidus_gt
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processStar(Token)->Token::: parser for schema process star
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processPlus(Token)->Token::: parser for schema process plus
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processQuestion(Token)->Token::: parser for schema process question
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#checkQuestion(int)->boolean::: parser for schema check question
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processParen()->Token::: parser for schema process paren
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processParen2()->Token::: parser for schema process paren2
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processCondition()->Token::: parser for schema process condition
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processModifiers()->Token::: parser for schema process modifiers
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processIndependent()->Token::: parser for schema process independent
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_c()->Token::: parser for schema process backsolidus_c
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_C()->Token::: parser for schema process backsolidus_ c
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_i()->Token::: parser for schema process backsolidus_i
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_I()->Token::: parser for schema process backsolidus_ i
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_g()->Token::: parser for schema process backsolidus_g
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBacksolidus_X()->Token::: parser for schema process backsolidus_ x
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processBackreference()->Token::: parser for schema process backreference
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#processCIinCharacterClass(RangeToken, int)->int::: parser for schema process iin character class
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#parseCharacterClass(boolean)->RangeToken:::Parses a character-class-expression, not a character-class-escape
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#parseSetOperations()->RangeToken::: parser for schema parse set operations
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#getTokenForShorthand(int)->Token::: parser for schema get token for shorthand
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#decodeEscaped()->int::: parser for schema decode escaped
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#getRange(String, boolean)->RangeToken::: parser for schema get range
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#setupRange(Token, String)->void::: parser for schema setup range
com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema#setupRange(Token, int[])->void::: parser for schema setup range
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#addRange(int, int)->void::: range token add range
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#sortRanges()->void::: range token sort ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#compactRanges()->void:::this.ranges is sorted.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#mergeRanges(Token)->void::: range token merge ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#subtractRanges(Token)->void::: range token subtract ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#intersectRanges(Token)->void::: range token intersect ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#complementRanges(Token)->Token:::for RANGE: Creates complement
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#getCaseInsensitiveToken()->RangeToken::: range token get case insensitive token
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#dumpRanges()->void::: range token dump ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#match(int)->boolean::: range token match
com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken#toString(int)->String::: range token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#setLocale(Locale)->void::: regex parser set locale
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#ex(String, int)->ParseException::: regex parser ex
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#isSet(int)->boolean::: regex parser is set
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#parse(String, int)->Token::: regex parser parse
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#setContext(int)->void::: regex parser set context
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#read()->int::: regex parser read
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#next()->void::: regex parser next
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#parseRegex()->Token:::regex ::= term (`|` term)* term ::= factor+ factor ::= ('^' | '$' | '\A' | '\Z' | '\z' | '\b' | '\B' | '\<' | '\>'            | atom (('*' | '+' | '?' | minmax ) '?'? )?)            | '(?=' regex ')'  | '(?!' regex ')'  | '(?&lt;=' regex ')'  | '(?&lt;!' regex ')' atom ::= char | '.' | range | '(' regex ')' | '(?:' regex ')' | '\' [0-9]          | '\w' | '\W' | '\d' | '\D' | '\s' | '\S' | category-block
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#parseTerm()->Token:::term ::= factor+
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processCaret()->Token::: regex parser process caret
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processDollar()->Token::: regex parser process dollar
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processLookahead()->Token::: regex parser process lookahead
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processNegativelookahead()->Token::: regex parser process negativelookahead
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processLookbehind()->Token::: regex parser process lookbehind
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processNegativelookbehind()->Token::: regex parser process negativelookbehind
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_A()->Token::: regex parser process backsolidus_ a
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_Z()->Token::: regex parser process backsolidus_ z
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_z()->Token::: regex parser process backsolidus_z
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_b()->Token::: regex parser process backsolidus_b
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_B()->Token::: regex parser process backsolidus_ b
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_lt()->Token::: regex parser process backsolidus_lt
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_gt()->Token::: regex parser process backsolidus_gt
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processStar(Token)->Token::: regex parser process star
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processPlus(Token)->Token::: regex parser process plus
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processQuestion(Token)->Token::: regex parser process question
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#checkQuestion(int)->boolean::: regex parser check question
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processParen()->Token::: regex parser process paren
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processParen2()->Token::: regex parser process paren2
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processCondition()->Token::: regex parser process condition
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processModifiers()->Token::: regex parser process modifiers
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processIndependent()->Token::: regex parser process independent
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_c()->Token::: regex parser process backsolidus_c
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_C()->Token::: regex parser process backsolidus_ c
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_i()->Token::: regex parser process backsolidus_i
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_I()->Token::: regex parser process backsolidus_ i
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_g()->Token::: regex parser process backsolidus_g
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_X()->Token::: regex parser process backsolidus_ x
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBackreference()->Token::: regex parser process backreference
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#parseFactor()->Token:::factor ::= ('^' | '$' | '\A' | '\Z' | '\z' | '\b' | '\B' | '\<' | '\>'            | atom (('*' | '+' | '?' | minmax ) '?'? )?)            | '(?=' regex ')'  | '(?!' regex ')'  | '(?&lt;=' regex ')'  | '(?&lt;!' regex ')'            | '(?#' [^)]* ')' minmax ::= '{' min (',' max?)? '}' min ::= [0-9]+ max ::= [0-9]+
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#parseAtom()->Token:::atom ::= char | '.' | char-class | '(' regex ')' | '(?:' regex ')' | '\' [0-9]          | '\w' | '\W' | '\d' | '\D' | '\s' | '\S' | category-block          | '(?>' regex ')' char ::= '\\' | '\' [efnrt] | bmp-code | character-1
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processBacksolidus_pP(int)->RangeToken::: regex parser process backsolidus_p p
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#processCIinCharacterClass(RangeToken, int)->int::: regex parser process iin character class
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#parseCharacterClass(boolean)->RangeToken:::char-class ::= '[' ( '^'? range ','?)+ ']' range ::= '\d' | '\w' | '\s' | category-block | range-char           | range-char '-' range-char range-char ::= '\[' | '\]' | '\\' | '\' [,-efnrtv] | bmp-code | character-2 bmp-code ::= '\' 'u' [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#parseSetOperations()->RangeToken:::'(?[' ..
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#getTokenForShorthand(int)->Token::: regex parser get token for shorthand
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#decodeEscaped()->int::: regex parser decode escaped
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#addCaseInsensitiveChar(RangeToken, int)->void::: regex parser add case insensitive char
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser#addCaseInsensitiveCharRange(RangeToken, int, int)->void::: regex parser add case insensitive char range
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(char[])->boolean:::Checks whether the <var>target</var> text contains this pattern or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(char[], int, int)->boolean:::Checks whether the <var>target</var> text contains this pattern in specified range or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(char[], Match)->boolean:::Checks whether the <var>target</var> text contains this pattern or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(char[], int, int, Match)->boolean:::Checks whether the <var>target</var> text contains this pattern in specified range or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(String)->boolean:::Checks whether the <var>target</var> text contains this pattern or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(String, int, int)->boolean:::Checks whether the <var>target</var> text contains this pattern in specified range or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(String, Match)->boolean:::Checks whether the <var>target</var> text contains this pattern or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(String, int, int, Match)->boolean:::Checks whether the <var>target</var> text contains this pattern in specified range or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matchAnchor(ExpressionTarget, Op, Context, int, int)->boolean::: regular expression match anchor
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(CharacterIterator)->boolean:::Checks whether the <var>target</var> text contains this pattern or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#matches(CharacterIterator, Match)->boolean:::Checks whether the <var>target</var> text contains this pattern or not.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ExpressionTarget#charAt(int)->char::: expression target char at
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ExpressionTarget#regionMatches(boolean, int, int, String, int)->boolean::: expression target region matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ExpressionTarget#regionMatches(boolean, int, int, int, int)->boolean::: expression target region matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.StringTarget#resetTarget(String)->void::: string target reset target
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.StringTarget#charAt(int)->char::: string target char at
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.StringTarget#regionMatches(boolean, int, int, String, int)->boolean::: string target region matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.StringTarget#regionMatches(boolean, int, int, int, int)->boolean::: string target region matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharArrayTarget#resetTarget(char[])->void::: char array target reset target
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharArrayTarget#charAt(int)->char::: char array target char at
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharArrayTarget#regionMatches(boolean, int, int, String, int)->boolean::: char array target region matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharArrayTarget#regionMatches(boolean, int, int, int, int)->boolean::: char array target region matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharacterIteratorTarget#resetTarget(CharacterIterator)->void::: character iterator target reset target
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharacterIteratorTarget#charAt(int)->char::: character iterator target char at
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharacterIteratorTarget#regionMatches(boolean, int, int, String, int)->boolean::: character iterator target region matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharacterIteratorTarget#regionMatches(boolean, int, int, int, int)->boolean::: character iterator target region matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ClosureContext#contains(int)->boolean::: closure context contains
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ClosureContext#reset()->void::: closure context reset
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ClosureContext#addOffset(int)->void::: closure context add offset
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.Context#reset(CharacterIterator, int, int, int)->void::: context reset
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.Context#reset(String, int, int, int)->void::: context reset
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.Context#reset(char[], int, int, int)->void::: context reset
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.Context#setInUse(boolean)->void::: context set in use
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#prepare()->void:::Prepares for matching
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#setPattern(String)->void::: regular expression set pattern
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#setPattern(String, Locale)->void::: regular expression set pattern
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#setPattern(String, String)->void::: regular expression set pattern
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#setPattern(String, String, Locale)->void::: regular expression set pattern
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#getPattern()->String::: regular expression get pattern
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#toString()->String:::Represents this instence in String.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#getOptions()->String:::Returns a option string
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#equals(Object)->boolean::: Return true if patterns are the same and the options are equivalent.
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#equals(String, int)->boolean::: regular expression equals
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#hashCode()->int::: regular expression hash code
com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression#getNumberOfGroups()->int:::Return the number of regular expression groups
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#composeFromSurrogates(int, int)->int::: util compose from surrogates
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#isLowSurrogate(int)->boolean::: util is low surrogate
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#isHighSurrogate(int)->boolean::: util is high surrogate
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#decomposeToSurrogates(int)->String::: util decompose to surrogates
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#substring(CharacterIterator, int, int)->String::: util substring
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#getOptionValue(int)->int::: util get option value
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#parseOptions(String)->int::: util parse options
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#createOptionString(int)->String::: util create option string
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#stripExtendedComment(String)->String::: util strip extended comment
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#main(String[])->void:::Sample entry
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#createRegex(String, String)->RegularExpression:::Creates a RegularExpression instance
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#matches(String, String)->boolean::: util matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#matches(String, String, String)->boolean::: util matches
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#quoteMeta(String)->String::: util quote meta
com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil#dumpString(String)->void::: util dump string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createLook(int, Token)->Token.ParenToken::: token create look
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createParen(Token, int)->Token.ParenToken::: token create paren
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createClosure(Token)->Token.ClosureToken::: token create closure
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createNGClosure(Token)->Token.ClosureToken::: token create closure
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createConcat(Token, Token)->Token.ConcatToken::: token create concat
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createConcat()->Token.UnionToken::: token create concat
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createUnion()->Token.UnionToken::: token create union
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createEmpty()->Token::: token create empty
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createRange()->RangeToken::: token create range
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createNRange()->RangeToken::: token create range
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createChar(int)->Token.CharToken::: token create char
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createBackReference(int)->Token.StringToken::: token create back reference
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createString(String)->Token.StringToken::: token create string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createModifierGroup(Token, int, int)->Token.ModifierToken::: token create modifier group
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#createCondition(int, Token, Token, Token)->Token.ConditionToken::: token create condition
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#size()->int:::A number of children.
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getChild(int)->Token::: token get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#addChild(Token)->void::: token add child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#addRange(int, int)->void::: token add range
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#sortRanges()->void::: token sort ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#compactRanges()->void::: token compact ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#mergeRanges(Token)->void::: token merge ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#subtractRanges(Token)->void::: token subtract ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#intersectRanges(Token)->void::: token intersect ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#complementRanges(Token)->Token::: token complement ranges
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#setMin(int)->void::: token set min
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#setMax(int)->void::: token set max
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getMin()->int::: token get min
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getMax()->int::: token get max
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getReferenceNumber()->int::: token get reference number
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getString()->String::: token get string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getParenNumber()->int::: token get paren number
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getChar()->int::: token get char
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#toString()->String::: token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#toString(int)->String::: token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getMinLength()->int:::How many characters are needed?
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getMaxLength()->int::: token get max length
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#analyzeFirstCharacter(RangeToken, int)->int::: token analyze first character
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#findFixedString(FixedStringContainer, int)->void::: token find fixed string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#match(int)->boolean::: token match
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getRange(String, boolean)->RangeToken::: token get range
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getRange(String, boolean, boolean)->RangeToken::: token get range
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#registerNonXS(String)->void:::This method is called by only getRange()
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#isRegisterNonXS(String)->boolean::: token is register non s
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getGraphemePattern()->Token::: token get grapheme pattern
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token#getCombiningCharacterSequence()->Token::: token get combining character sequence
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.StringToken#getReferenceNumber()->int::: string token get reference number
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.StringToken#getString()->String::: string token get string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.StringToken#toString(int)->String::: string token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConcatToken#size()->int::: concat token size
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConcatToken#getChild(int)->Token::: concat token get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConcatToken#toString(int)->String::: concat token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.CharToken#getChar()->int::: char token get char
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.CharToken#toString(int)->String::: char token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.CharToken#match(int)->boolean::: char token match
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken#size()->int::: closure token size
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken#getChild(int)->Token::: closure token get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken#setMin(int)->void::: closure token set min
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken#setMax(int)->void::: closure token set max
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken#getMin()->int::: closure token get min
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken#getMax()->int::: closure token get max
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken#toString(int)->String::: closure token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken#size()->int::: paren token size
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken#getChild(int)->Token::: paren token get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken#getParenNumber()->int::: paren token get paren number
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken#toString(int)->String::: paren token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConditionToken#size()->int::: condition token size
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConditionToken#getChild(int)->Token::: condition token get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConditionToken#toString(int)->String::: condition token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken#size()->int::: modifier token size
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken#getChild(int)->Token::: modifier token get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken#getOptions()->int::: modifier token get options
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken#getOptionsMask()->int::: modifier token get options mask
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken#toString(int)->String::: modifier token to string
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.UnionToken#addChild(Token)->void::: union token add child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.UnionToken#size()->int::: union token size
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.UnionToken#getChild(int)->Token::: union token get child
com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.UnionToken#toString(int)->String::: union token to string
