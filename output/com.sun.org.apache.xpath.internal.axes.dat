com.sun.org.apache.xpath.internal.axes.AttributeIterator#getNextNode()->int:::Get the next node via getFirstAttribute && getNextAttribute.
com.sun.org.apache.xpath.internal.axes.AttributeIterator#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.AxesWalker#wi()->WalkingIterator::: axes walker wi
com.sun.org.apache.xpath.internal.axes.AxesWalker#init(Compiler, int, int)->void:::Initialize an AxesWalker during the parse of the XPath expression.
com.sun.org.apache.xpath.internal.axes.AxesWalker#clone()->Object:::Get a cloned AxesWalker.
com.sun.org.apache.xpath.internal.axes.AxesWalker#cloneDeep(WalkingIterator, List)->AxesWalker:::Do a deep clone of this walker, including next and previous walkers
com.sun.org.apache.xpath.internal.axes.AxesWalker#findClone(AxesWalker, List)->AxesWalker:::Find a clone that corresponds to the key argument.
com.sun.org.apache.xpath.internal.axes.AxesWalker#detach()->void:::Detaches the walker from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state.
com.sun.org.apache.xpath.internal.axes.AxesWalker#getRoot()->int:::The root node of the TreeWalker, as specified in setRoot(int root)
com.sun.org.apache.xpath.internal.axes.AxesWalker#getAnalysisBits()->int:::Get the analysis bits for this walker, as defined in the WalkerFactory.
com.sun.org.apache.xpath.internal.axes.AxesWalker#setRoot(int)->void:::Set the root node of the TreeWalker
com.sun.org.apache.xpath.internal.axes.AxesWalker#getCurrentNode()->int:::The node at which the TreeWalker is currently positioned
com.sun.org.apache.xpath.internal.axes.AxesWalker#setNextWalker(AxesWalker)->void:::Set the next walker in the location step chain.
com.sun.org.apache.xpath.internal.axes.AxesWalker#getNextWalker()->AxesWalker:::Get the next walker in the location step chain.
com.sun.org.apache.xpath.internal.axes.AxesWalker#setPrevWalker(AxesWalker)->void:::Set or clear the previous walker reference in the location step chain.
com.sun.org.apache.xpath.internal.axes.AxesWalker#getPrevWalker()->AxesWalker:::Get the previous walker reference in the location step chain.
com.sun.org.apache.xpath.internal.axes.AxesWalker#getNextNode()->int:::Get the next node in document order on the axes.
com.sun.org.apache.xpath.internal.axes.AxesWalker#nextNode()->int::: Moves the TreeWalker to the next visible node in document order relative to the current node, and returns the new node
com.sun.org.apache.xpath.internal.axes.AxesWalker#getLastPos(XPathContext)->int:::Get the index of the last node that can be itterated to.
com.sun.org.apache.xpath.internal.axes.AxesWalker#setDefaultDTM(DTM)->void:::Set the DTM for this walker.
com.sun.org.apache.xpath.internal.axes.AxesWalker#getDTM(int)->DTM:::Get the DTM for this walker.
com.sun.org.apache.xpath.internal.axes.AxesWalker#isDocOrdered()->boolean:::Returns true if all the nodes in the iteration well be returned in document order
com.sun.org.apache.xpath.internal.axes.AxesWalker#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.AxesWalker#callVisitors(ExpressionOwner, XPathVisitor)->void:::This will traverse the heararchy, calling the visitor for each member
com.sun.org.apache.xpath.internal.axes.AxesWalker#getExpression()->Expression::: axes walker get expression
com.sun.org.apache.xpath.internal.axes.AxesWalker#setExpression(Expression)->void::: axes walker set expression
com.sun.org.apache.xpath.internal.axes.AxesWalker#deepEquals(Expression)->boolean::: axes walker deep equals
com.sun.org.apache.xpath.internal.axes.BasicTestIterator#getNextNode()->int:::Get the next node via getNextXXX
com.sun.org.apache.xpath.internal.axes.BasicTestIterator#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.BasicTestIterator#cloneWithReset()->DTMIterator::: Get a cloned Iterator that is reset to the beginning  of the query.
com.sun.org.apache.xpath.internal.axes.ChildIterator#asNode(XPathContext)->int:::Return the first node out of the nodeset, if this expression is a nodeset expression
com.sun.org.apache.xpath.internal.axes.ChildIterator#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.ChildIterator#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.ChildTestIterator#getNextNode()->int:::Get the next node via getNextXXX
com.sun.org.apache.xpath.internal.axes.ChildTestIterator#cloneWithReset()->DTMIterator::: Get a cloned Iterator that is reset to the beginning  of the query.
com.sun.org.apache.xpath.internal.axes.ChildTestIterator#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.ChildTestIterator#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.ChildTestIterator#detach()->void::: Detaches the iterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state
com.sun.org.apache.xpath.internal.axes.ContextNodeList#getCurrentNode()->Node:::Get the current node.
com.sun.org.apache.xpath.internal.axes.ContextNodeList#getCurrentPos()->int:::Get the current position, which is one less than the next nextNode() call will retrieve
com.sun.org.apache.xpath.internal.axes.ContextNodeList#reset()->void:::Reset the iterator.
com.sun.org.apache.xpath.internal.axes.ContextNodeList#setShouldCacheNodes(boolean)->void:::If setShouldCacheNodes(true) is called, then nodes will be cached
com.sun.org.apache.xpath.internal.axes.ContextNodeList#runTo(int)->void:::If an index is requested, NodeSetDTM will call this method to run the iterator to the index
com.sun.org.apache.xpath.internal.axes.ContextNodeList#setCurrentPos(int)->void:::Set the current position in the node set.
com.sun.org.apache.xpath.internal.axes.ContextNodeList#size()->int:::Get the length of the list.
com.sun.org.apache.xpath.internal.axes.ContextNodeList#isFresh()->boolean:::Tells if this NodeSetDTM is "fresh", in other words, if the first nextNode() that is called will return the first node in the set.
com.sun.org.apache.xpath.internal.axes.ContextNodeList#cloneWithReset()->NodeIterator:::Get a cloned Iterator that is reset to the start of the iteration.
com.sun.org.apache.xpath.internal.axes.ContextNodeList#clone()->Object:::Get a clone of this iterator
com.sun.org.apache.xpath.internal.axes.ContextNodeList#getLast()->int:::Get the index of the last node in this list.
com.sun.org.apache.xpath.internal.axes.ContextNodeList#setLast(int)->void:::Set the index of the last node in this list.
com.sun.org.apache.xpath.internal.axes.DescendantIterator#cloneWithReset()->DTMIterator::: Get a cloned Iterator that is reset to the beginning  of the query.
com.sun.org.apache.xpath.internal.axes.DescendantIterator#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.DescendantIterator#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.DescendantIterator#asNode(XPathContext)->int:::Return the first node out of the nodeset, if this expression is a nodeset expression
com.sun.org.apache.xpath.internal.axes.DescendantIterator#detach()->void::: Detaches the iterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state
com.sun.org.apache.xpath.internal.axes.DescendantIterator#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.DescendantIterator#deepEquals(Expression)->boolean::: descendant iterator deep equals
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#getNextNode()->int:::Get the next node via getNextXXX
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#detach()->void:::Detaches the walker from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state.
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#fixupVariables(List, int)->void:::This function is used to fixup variables from QNames to stack frame indexes at stylesheet build time.
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#getInnerExpression()->Expression:::Get the inner contained expression of this filter.
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#setInnerExpression(Expression)->void:::Set the inner contained expression of this filter.
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#getAnalysisBits()->int:::Get the analysis bits for this walker, as defined in the WalkerFactory.
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#isDocOrdered()->boolean:::Returns true if all the nodes in the iteration well be returned in document order
com.sun.org.apache.xpath.internal.axes.FilterExprIterator.filterExprOwner#getExpression()->Expression:::filter expr owner get expression
com.sun.org.apache.xpath.internal.axes.FilterExprIterator.filterExprOwner#setExpression(Expression)->void:::filter expr owner set expression
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#callPredicateVisitors(XPathVisitor)->void:::This will traverse the heararchy, calling the visitor for each member
com.sun.org.apache.xpath.internal.axes.FilterExprIterator#deepEquals(Expression)->boolean::: filter expr iterator deep equals
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#executeFilterExpr(int, XPathContext, PrefixResolver, boolean, int, Expression)->XNodeSet:::Execute the expression
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#detach()->void:::Detaches the walker from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state.
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#fixupVariables(List, int)->void:::This function is used to fixup variables from QNames to stack frame indexes at stylesheet build time.
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#getInnerExpression()->Expression:::Get the inner contained expression of this filter.
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#setInnerExpression(Expression)->void:::Set the inner contained expression of this filter.
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#getAnalysisBits()->int:::Get the analysis bits for this walker, as defined in the WalkerFactory.
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#isDocOrdered()->boolean:::Returns true if all the nodes in the iteration well be returned in document order
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple.filterExprOwner#getExpression()->Expression:::filter expr owner get expression
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple.filterExprOwner#setExpression(Expression)->void:::filter expr owner set expression
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#callPredicateVisitors(XPathVisitor)->void:::This will traverse the heararchy, calling the visitor for each member
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#deepEquals(Expression)->boolean::: filter expr iterator simple deep equals
com.sun.org.apache.xpath.internal.axes.FilterExprIteratorSimple#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#init(Compiler, int, int)->void:::Init a FilterExprWalker.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#detach()->void:::Detaches the walker from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#setRoot(int)->void::: Set the root node of the TreeWalker.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#clone()->Object:::Get a cloned FilterExprWalker.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#acceptNode(int)->short:::This method needs to override AxesWalker.acceptNode because FilterExprWalkers don't need to, and shouldn't, do a node test.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#getNextNode()->int::: Moves the TreeWalker to the next visible node in document order relative to the current node, and returns the new node
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#getLastPos(XPathContext)->int:::Get the index of the last node that can be itterated to.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#fixupVariables(List, int)->void:::This function is used to fixup variables from QNames to stack frame indexes at stylesheet build time.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#getInnerExpression()->Expression:::Get the inner contained expression of this filter.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#setInnerExpression(Expression)->void:::Set the inner contained expression of this filter.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#getAnalysisBits()->int:::Get the analysis bits for this walker, as defined in the WalkerFactory.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#isDocOrdered()->boolean:::Returns true if all the nodes in the iteration well be returned in document order
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.FilterExprWalker.filterExprOwner#getExpression()->Expression:::filter expr owner get expression
com.sun.org.apache.xpath.internal.axes.FilterExprWalker.filterExprOwner#setExpression(Expression)->void:::filter expr owner set expression
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#callPredicateVisitors(XPathVisitor)->void:::This will traverse the heararchy, calling the visitor for each member
com.sun.org.apache.xpath.internal.axes.FilterExprWalker#deepEquals(Expression)->boolean::: filter expr walker deep equals
com.sun.org.apache.xpath.internal.axes.HasPositionalPredChecker#check(LocPathIterator)->boolean:::Process the LocPathIterator to see if it contains variables or functions that may make it context dependent.
com.sun.org.apache.xpath.internal.axes.HasPositionalPredChecker#visitFunction(ExpressionOwner, Function)->boolean:::Visit a function.
com.sun.org.apache.xpath.internal.axes.HasPositionalPredChecker#visitPredicate(ExpressionOwner, Expression)->boolean:::Visit a predicate within a location path
com.sun.org.apache.xpath.internal.axes.IteratorPool#getInstanceOrThrow()->DTMIterator:::Get an instance of the given object in this pool
com.sun.org.apache.xpath.internal.axes.IteratorPool#getInstance()->DTMIterator:::Get an instance of the given object in this pool
com.sun.org.apache.xpath.internal.axes.IteratorPool#freeInstance(DTMIterator)->void:::Add an instance of the given object to the pool
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getAnalysisBits()->int:::Get the analysis bits for this walker, as defined in the WalkerFactory.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#setEnvironment(Object)->void:::Set the environment in which this iterator operates, which should provide: a node (the context node..
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getDTM(int)->DTM:::Get an instance of a DTM that "owns" a node handle
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getDTMManager()->DTMManager:::Get an instance of the DTMManager
com.sun.org.apache.xpath.internal.axes.LocPathIterator#execute(XPathContext)->XObject:::Execute this iterator, meaning create a clone that can store state, and initialize it for fast execution from the current runtime state
com.sun.org.apache.xpath.internal.axes.LocPathIterator#executeCharsToContentHandler(XPathContext, org.xml.sax.ContentHandler)->void:::Execute an expression in the XPath runtime context, and return the result of the expression.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#asIterator(XPathContext, int)->DTMIterator:::Given an select expression and a context, evaluate the XPath and return the resulting iterator.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#isNodesetExpr()->boolean:::Tell if the expression is a nodeset expression.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#asNode(XPathContext)->int:::Return the first node out of the nodeset, if this expression is a nodeset expression
com.sun.org.apache.xpath.internal.axes.LocPathIterator#boolean bool(XPathContext)->:::Evaluate this operation directly to a boolean.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#setIsTopLevel(boolean)->void:::Set if this is an iterator at the upper level of the XPath.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getIsTopLevel()->boolean:::Get if this is an iterator at the upper level of the XPath.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#setNextPosition(int)->void:::Set the next position index of this iterator.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getCurrentPos()->int:::Get the current position, which is one less than the next nextNode() call will retrieve
com.sun.org.apache.xpath.internal.axes.LocPathIterator#setShouldCacheNodes(boolean)->void:::If setShouldCacheNodes(true) is called, then nodes will be cached
com.sun.org.apache.xpath.internal.axes.LocPathIterator#isMutable()->boolean:::Tells if this iterator can have nodes added to it or set via the setItem(int node, int index) method.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#setCurrentPos(int)->void:::Set the current position in the node set.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#incrementCurrentPos()->void:::Increment the current position in the node set.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#size()->int:::Get the length of the cached nodes
com.sun.org.apache.xpath.internal.axes.LocPathIterator#item(int)->int::: Returns the index th item in the collection
com.sun.org.apache.xpath.internal.axes.LocPathIterator#setItem(int, int)->void:::Sets the node at the specified index of this vector to be the specified node
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getLength()->int::: The number of nodes in the list
com.sun.org.apache.xpath.internal.axes.LocPathIterator#isFresh()->boolean:::Tells if this NodeSetDTM is "fresh", in other words, if the first nextNode() that is called will return the first node in the set.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#previousNode()->int::: Returns the previous node in the set and moves the position of the iterator backwards in the set.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getWhatToShow()->int:::This attribute determines which node types are presented via the iterator
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getFilter()->DTMFilter::: The filter used to screen nodes
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getRoot()->int:::The root node of the Iterator, as specified when it was created.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getExpandEntityReferences()->boolean::: The value of this flag determines whether the children of entity reference nodes are visible to the iterator
com.sun.org.apache.xpath.internal.axes.LocPathIterator#allowDetachToRelease(boolean)->void:::Specify if it's OK for detach to release the iterator for reuse.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#detach()->void::: Detaches the iterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state
com.sun.org.apache.xpath.internal.axes.LocPathIterator#reset()->void:::Reset the iterator.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#cloneWithReset()->DTMIterator:::Get a cloned Iterator that is reset to the beginning of the query.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.LocPathIterator#returnNextNode(int)->int:::Bottleneck the return of a next node, to make returns easier from nextNode().
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getCurrentNode()->int:::Return the last fetched node
com.sun.org.apache.xpath.internal.axes.LocPathIterator#runTo(int)->void:::If an index is requested, NodeSetDTM will call this method to run the iterator to the index
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getFoundLast()->boolean:::Tells if we've found the last node yet.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getXPathContext()->XPathContext:::The XPath execution context we are operating on.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getContext()->int:::The node context for the iterator.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getCurrentContextNode()->int:::The node context from where the expression is being executed from (i.e
com.sun.org.apache.xpath.internal.axes.LocPathIterator#setCurrentContextNode(int)->void:::Set the current context node for this iterator.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getPrefixResolver()->PrefixResolver:::Return the saved reference to the prefix resolver that was in effect when this iterator was created.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#callVisitors(ExpressionOwner, XPathVisitor)->void::: loc path iterator call visitors
com.sun.org.apache.xpath.internal.axes.LocPathIterator#isDocOrdered()->boolean:::Returns true if all the nodes in the iteration well be returned in document order.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.LocPathIterator#getLastPos(XPathContext)->int::: loc path iterator get last pos
com.sun.org.apache.xpath.internal.axes.MatchPatternIterator#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.MatchPatternIterator#detach()->void::: Detaches the iterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state
com.sun.org.apache.xpath.internal.axes.MatchPatternIterator#getNextNode()->int:::Get the next node via getNextXXX
com.sun.org.apache.xpath.internal.axes.MatchPatternIterator#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.MatchPatternIterator#acceptNode(int, XPathContext)->short::: Test whether a specified node is visible in the logical view of a TreeWalker or NodeIterator
com.sun.org.apache.xpath.internal.axes.NodeSequence#getVector()->NodeVector:::If this iterator needs to cache nodes that are fetched, they are stored in the Vector in the generic object.
com.sun.org.apache.xpath.internal.axes.NodeSequence#SetVector(NodeVector)->void:::Set the vector where nodes will be cached.
com.sun.org.apache.xpath.internal.axes.NodeSequence#hasCache()->boolean:::If the iterator needs to cache nodes as they are fetched, then this method returns true.
com.sun.org.apache.xpath.internal.axes.NodeSequence#setIter(DTMIterator)->void:::Set the functional iterator that fetches nodes.
com.sun.org.apache.xpath.internal.axes.NodeSequence#getContainedIter()->DTMIterator:::Get the functional iterator that fetches nodes.
com.sun.org.apache.xpath.internal.axes.NodeSequence#getDTM(int)->DTM::: node sequence get m
com.sun.org.apache.xpath.internal.axes.NodeSequence#getDTMManager()->DTMManager::: node sequence get manager
com.sun.org.apache.xpath.internal.axes.NodeSequence#getRoot()->int::: node sequence get root
com.sun.org.apache.xpath.internal.axes.NodeSequence#setRoot(int, Object)->void::: node sequence set root
com.sun.org.apache.xpath.internal.axes.NodeSequence#reset()->void::: node sequence reset
com.sun.org.apache.xpath.internal.axes.NodeSequence#getWhatToShow()->int::: node sequence get what to show
com.sun.org.apache.xpath.internal.axes.NodeSequence#getExpandEntityReferences()->boolean::: node sequence get expand entity references
com.sun.org.apache.xpath.internal.axes.NodeSequence#nextNode()->int::: node sequence next node
com.sun.org.apache.xpath.internal.axes.NodeSequence#previousNode()->int::: node sequence previous node
com.sun.org.apache.xpath.internal.axes.NodeSequence#detach()->void::: node sequence detach
com.sun.org.apache.xpath.internal.axes.NodeSequence#allowDetachToRelease(boolean)->void:::Calling this with a value of false will cause the nodeset to be cached.
com.sun.org.apache.xpath.internal.axes.NodeSequence#getCurrentNode()->int::: node sequence get current node
com.sun.org.apache.xpath.internal.axes.NodeSequence#isFresh()->boolean::: node sequence is fresh
com.sun.org.apache.xpath.internal.axes.NodeSequence#setShouldCacheNodes(boolean)->void::: node sequence set should cache nodes
com.sun.org.apache.xpath.internal.axes.NodeSequence#isMutable()->boolean::: node sequence is mutable
com.sun.org.apache.xpath.internal.axes.NodeSequence#getCurrentPos()->int::: node sequence get current pos
com.sun.org.apache.xpath.internal.axes.NodeSequence#runTo(int)->void::: node sequence run to
com.sun.org.apache.xpath.internal.axes.NodeSequence#setCurrentPos(int)->void::: node sequence set current pos
com.sun.org.apache.xpath.internal.axes.NodeSequence#item(int)->int::: node sequence item
com.sun.org.apache.xpath.internal.axes.NodeSequence#setItem(int, int)->void::: node sequence set item
com.sun.org.apache.xpath.internal.axes.NodeSequence#getLength()->int::: node sequence get length
com.sun.org.apache.xpath.internal.axes.NodeSequence#cloneWithReset()->DTMIterator:::Note: Not a deep clone.
com.sun.org.apache.xpath.internal.axes.NodeSequence#clone()->Object:::Get a clone of this iterator, but don't reset the iteration in the process, so that it may be used from the current position
com.sun.org.apache.xpath.internal.axes.NodeSequence#isDocOrdered()->boolean::: node sequence is doc ordered
com.sun.org.apache.xpath.internal.axes.NodeSequence#getAxis()->int::: node sequence get axis
com.sun.org.apache.xpath.internal.axes.NodeSequence#getAnalysisBits()->int::: node sequence get analysis bits
com.sun.org.apache.xpath.internal.axes.NodeSequence#fixupVariables(List, int)->void::: node sequence fixup variables
com.sun.org.apache.xpath.internal.axes.NodeSequence#addNodeInDocOrder(int)->int:::Add the node into a vector of nodes where it should occur in document order.
com.sun.org.apache.xpath.internal.axes.NodeSequence#setObject(Object)->void:::It used to be that many locations in the code simply did an assignment to this.m_obj directly, rather than calling the setObject(Object) method
com.sun.org.apache.xpath.internal.axes.NodeSequence#getIteratorCache()->IteratorCache:::Get the cached list of nodes appended with values obtained from the iterator as a NodeSequence is walked when its nextNode() method is called.
com.sun.org.apache.xpath.internal.axes.OneStepIterator#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.OneStepIterator#detach()->void::: Detaches the iterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state
com.sun.org.apache.xpath.internal.axes.OneStepIterator#getNextNode()->int:::Get the next node via getFirstAttribute && getNextAttribute.
com.sun.org.apache.xpath.internal.axes.OneStepIterator#clone()->Object:::Get a cloned iterator.
com.sun.org.apache.xpath.internal.axes.OneStepIterator#cloneWithReset()->DTMIterator::: Get a cloned Iterator that is reset to the beginning  of the query.
com.sun.org.apache.xpath.internal.axes.OneStepIterator#isReverseAxes()->boolean:::Tells if this is a reverse axes
com.sun.org.apache.xpath.internal.axes.OneStepIterator#getProximityPosition(int)->int:::Get the current sub-context position
com.sun.org.apache.xpath.internal.axes.OneStepIterator#getLength()->int::: The number of nodes in the list
com.sun.org.apache.xpath.internal.axes.OneStepIterator#countProximityPosition(int)->void:::Count backwards one proximity position.
com.sun.org.apache.xpath.internal.axes.OneStepIterator#reset()->void:::Reset the iterator.
com.sun.org.apache.xpath.internal.axes.OneStepIterator#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.OneStepIterator#deepEquals(Expression)->boolean::: one step iterator deep equals
com.sun.org.apache.xpath.internal.axes.OneStepIteratorForward#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.OneStepIteratorForward#getNextNode()->int:::Get the next node via getFirstAttribute && getNextAttribute.
com.sun.org.apache.xpath.internal.axes.OneStepIteratorForward#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.OneStepIteratorForward#deepEquals(Expression)->boolean::: one step iterator forward deep equals
com.sun.org.apache.xpath.internal.axes.PathComponent#getAnalysisBits()->int:::Get the analysis bits for this path component, as defined in the WalkerFactory.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#clone()->Object:::Get a cloned PrdicatedNodeTest.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#getPredicateCount()->int:::Get the number of predicates that this walker has.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#setPredicateCount(int)->void:::Set the number of predicates that this walker has
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#initPredicateInfo(Compiler, int)->void:::Init predicate info.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#getPredicate(int)->Expression:::Get a predicate expression at the given index.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#getProximityPosition()->int:::Get the current sub-context position.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#getProximityPosition(XPathContext)->int:::Get the current sub-context position.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#getLastPos(XPathContext)->int:::Get the index of the last node that can be itterated to.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#getProximityPosition(int)->int:::Get the current sub-context position.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#resetProximityPositions()->void:::Reset the proximity positions counts.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#initProximityPosition(int)->void:::Init the proximity position to zero for a forward axes.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#countProximityPosition(int)->void:::Count forward one proximity position.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#isReverseAxes()->boolean:::Tells if this is a reverse axes.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#getPredicateIndex()->int:::Get which predicate is executing.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#executePredicates(int, XPathContext)->boolean:::Process the predicates.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#fixupVariables(List, int)->void:::This function is used to fixup variables from QNames to stack frame indexes at stylesheet build time.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#nodeToString(int)->String:::Diagnostics.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#acceptNode(int)->short::: Test whether a specified node is visible in the logical view of a TreeWalker or NodeIterator
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#getLocPathIterator()->LocPathIterator:::Get the owning location path iterator.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#setLocPathIterator(LocPathIterator)->void:::Set the location path iterator owner for this walker
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#canTraverseOutsideSubtree()->boolean:::Tell if this expression or it's subexpressions can traverse outside the current subtree.
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#callPredicateVisitors(XPathVisitor)->void:::This will traverse the heararchy, calling the visitor for each member
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest#deepEquals(Expression)->boolean::: predicated node test deep equals
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest.PredOwner#getExpression()->Expression::: pred owner get expression
com.sun.org.apache.xpath.internal.axes.PredicatedNodeTest.PredOwner#setExpression(Expression)->void::: pred owner set expression
com.sun.org.apache.xpath.internal.axes.ReverseAxesWalker#setRoot(int)->void:::Set the root node of the TreeWalker
com.sun.org.apache.xpath.internal.axes.ReverseAxesWalker#detach()->void:::Detaches the walker from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state.
com.sun.org.apache.xpath.internal.axes.ReverseAxesWalker#getNextNode()->int:::Get the next node in document order on the axes.
com.sun.org.apache.xpath.internal.axes.ReverseAxesWalker#isReverseAxes()->boolean:::Tells if this is a reverse axes
com.sun.org.apache.xpath.internal.axes.ReverseAxesWalker#getProximityPosition(int)->int:::Get the current sub-context position
com.sun.org.apache.xpath.internal.axes.ReverseAxesWalker#countProximityPosition(int)->void:::Count backwards one proximity position.
com.sun.org.apache.xpath.internal.axes.ReverseAxesWalker#getLastPos(XPathContext)->int:::Get the number of nodes in this node list
com.sun.org.apache.xpath.internal.axes.ReverseAxesWalker#isDocOrdered()->boolean:::Returns true if all the nodes in the iteration well be returned in document order
com.sun.org.apache.xpath.internal.axes.SelfIteratorNoPredicate#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.SelfIteratorNoPredicate#asNode(XPathContext)->int:::Return the first node out of the nodeset, if this expression is a nodeset expression
com.sun.org.apache.xpath.internal.axes.SelfIteratorNoPredicate#getLastPos(XPathContext)->int:::Get the index of the last node that can be itterated to
com.sun.org.apache.xpath.internal.axes.SubContextList#getLastPos(XPathContext)->int:::Get the number of nodes in the node list, which, in the XSLT 1 based counting system, is the last index position.
com.sun.org.apache.xpath.internal.axes.SubContextList#getProximityPosition(XPathContext)->int:::Get the current sub-context position.
com.sun.org.apache.xpath.internal.axes.UnionChildIterator#addNodeTest(PredicatedNodeTest)->void:::Add a node test to the union list.
com.sun.org.apache.xpath.internal.axes.UnionChildIterator#fixupVariables(List, int)->void:::This function is used to fixup variables from QNames to stack frame indexes at stylesheet build time.
com.sun.org.apache.xpath.internal.axes.UnionChildIterator#acceptNode(int)->short:::Test whether a specified node is visible in the logical view of a TreeWalker or NodeIterator
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#addIterator(DTMIterator)->void:::Add an iterator to the union list.
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#detach()->void::: Detaches the iterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#createUnionIterator(Compiler, int)->LocPathIterator:::This will return an iterator capable of handling the union of paths given.
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#getAnalysisBits()->int:::Get the analysis bits for this walker, as defined in the WalkerFactory.
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#clone()->Object:::Get a cloned LocPathIterator that holds the same position as this iterator.
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#createDTMIterator(Compiler, int)->LocPathIterator:::Create a new location path iterator.
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#loadLocationPaths(Compiler, int, int)->void:::Initialize the location path iterators
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#fixupVariables(List, int)->void:::This function is used to fixup variables from QNames to stack frame indexes at stylesheet build time.
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#getAxis()->int:::Returns the axis being iterated, if it is known.
com.sun.org.apache.xpath.internal.axes.UnionPathIterator.iterOwner#getExpression()->Expression:::iter owner get expression
com.sun.org.apache.xpath.internal.axes.UnionPathIterator.iterOwner#setExpression(Expression)->void:::iter owner set expression
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#callVisitors(ExpressionOwner, XPathVisitor)->void::: union path iterator call visitors
com.sun.org.apache.xpath.internal.axes.UnionPathIterator#deepEquals(Expression)->boolean::: union path iterator deep equals
com.sun.org.apache.xpath.internal.axes.WalkerFactory#loadOneWalker(WalkingIterator, Compiler, int)->AxesWalker:::This method is for building an array of possible levels where the target element(s) could be found for a match.
com.sun.org.apache.xpath.internal.axes.WalkerFactory#loadWalkers(WalkingIterator, Compiler, int, int)->AxesWalker:::This method is for building an array of possible levels where the target element(s) could be found for a match.
com.sun.org.apache.xpath.internal.axes.WalkerFactory#isSet(int, int)->boolean::: walker factory is set
com.sun.org.apache.xpath.internal.axes.WalkerFactory#diagnoseIterator(String, int, Compiler)->void::: walker factory diagnose iterator
com.sun.org.apache.xpath.internal.axes.WalkerFactory#newDTMIterator(Compiler, int, boolean)->DTMIterator:::Create a new LocPathIterator iterator
com.sun.org.apache.xpath.internal.axes.WalkerFactory#getAxisFromStep(Compiler, int)->int:::Special purpose function to see if we can optimize the pattern for a DescendantIterator.
com.sun.org.apache.xpath.internal.axes.WalkerFactory#getAnalysisBitFromAxes(int)->int:::Get a corresponding BIT_XXX from an axis.
com.sun.org.apache.xpath.internal.axes.WalkerFactory#functionProximateOrContainsProximate(Compiler, int)->boolean::: walker factory function proximate or contains proximate
com.sun.org.apache.xpath.internal.axes.WalkerFactory#isProximateInnerExpr(Compiler, int)->boolean::: walker factory is proximate inner expr
com.sun.org.apache.xpath.internal.axes.WalkerFactory#mightBeProximate(Compiler, int, int)->boolean:::Tell if the predicates need to have proximity knowledge.
com.sun.org.apache.xpath.internal.axes.WalkerFactory#isDownwardAxisOfMany(int)->boolean:::Tell if the given axis goes downword
com.sun.org.apache.xpath.internal.axes.WalkerFactory#loadSteps(MatchPatternIterator, Compiler, int, int)->StepPattern:::Read a LocationPath as a generalized match pattern
com.sun.org.apache.xpath.internal.axes.WalkerFactory#analyzePredicate(Compiler, int, int)->boolean:::Analyze a step and give information about it's predicates
com.sun.org.apache.xpath.internal.axes.WalkerFactory#getAnalysisString(int)->String::: walker factory get analysis string
com.sun.org.apache.xpath.internal.axes.WalkerFactory#hasPredicate(int)->boolean::: walker factory has predicate
com.sun.org.apache.xpath.internal.axes.WalkerFactory#isWild(int)->boolean::: walker factory is wild
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksAncestors(int)->boolean::: walker factory walks ancestors
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksAttributes(int)->boolean::: walker factory walks attributes
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksNamespaces(int)->boolean::: walker factory walks namespaces
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksChildren(int)->boolean::: walker factory walks children
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksDescendants(int)->boolean::: walker factory walks descendants
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksSubtree(int)->boolean::: walker factory walks subtree
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksSubtreeOnlyMaybeAbsolute(int)->boolean::: walker factory walks subtree only maybe absolute
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksSubtreeOnly(int)->boolean::: walker factory walks subtree only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksFilteredList(int)->boolean::: walker factory walks filtered list
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksSubtreeOnlyFromRootOrContext(int)->boolean::: walker factory walks subtree only from root or context
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksInDocOrder(int)->boolean::: walker factory walks in doc order
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksFollowingOnlyMaybeAbsolute(int)->boolean::: walker factory walks following only maybe absolute
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksUp(int)->boolean::: walker factory walks up
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksSideways(int)->boolean::: walker factory walks sideways
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksExtraNodes(int)->boolean::: walker factory walks extra nodes
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksExtraNodesOnly(int)->boolean::: walker factory walks extra nodes only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#isAbsolute(int)->boolean::: walker factory is absolute
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksChildrenOnly(int)->boolean::: walker factory walks children only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksChildrenAndExtraAndSelfOnly(int)->boolean::: walker factory walks children and extra and self only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksDescendantsAndExtraAndSelfOnly(int)->boolean::: walker factory walks descendants and extra and self only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksSelfOnly(int)->boolean::: walker factory walks self only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksUpOnly(int)->boolean::: walker factory walks up only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksDownOnly(int)->boolean::: walker factory walks down only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#walksDownExtraOnly(int)->boolean::: walker factory walks down extra only
com.sun.org.apache.xpath.internal.axes.WalkerFactory#canSkipSubtrees(int)->boolean::: walker factory can skip subtrees
com.sun.org.apache.xpath.internal.axes.WalkerFactory#canCrissCross(int)->boolean::: walker factory can criss cross
com.sun.org.apache.xpath.internal.axes.WalkerFactory#isNaturalDocOrder(int)->boolean:::Tell if the pattern can be 'walked' with the iteration steps in natural document order, without duplicates.
com.sun.org.apache.xpath.internal.axes.WalkerFactory#isOneStep(int)->boolean::: walker factory is one step
com.sun.org.apache.xpath.internal.axes.WalkerFactory#getStepCount(int)->int::: walker factory get step count
com.sun.org.apache.xpath.internal.axes.WalkingIterator#getAnalysisBits()->int:::Get the analysis bits for this walker, as defined in the WalkerFactory.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#clone()->Object:::Get a cloned WalkingIterator that holds the same position as this iterator.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#reset()->void:::Reset the iterator.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#setRoot(int, Object)->void:::Initialize the context values for this expression after it is cloned.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#nextNode()->int::: Returns the next node in the set and advances the position of the iterator in the set
com.sun.org.apache.xpath.internal.axes.WalkingIterator#getFirstWalker()->AxesWalker:::Get the head of the walker list.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#setFirstWalker(AxesWalker)->void:::Set the head of the walker list.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#setLastUsedWalker(AxesWalker)->void:::Set the last used walker.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#getLastUsedWalker()->AxesWalker:::Get the last used walker.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#detach()->void::: Detaches the iterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state
com.sun.org.apache.xpath.internal.axes.WalkingIterator#fixupVariables(List, int)->void:::This function is used to fixup variables from QNames to stack frame indexes at stylesheet build time.
com.sun.org.apache.xpath.internal.axes.WalkingIterator#callVisitors(ExpressionOwner, XPathVisitor)->void::: walking iterator call visitors
com.sun.org.apache.xpath.internal.axes.WalkingIterator#getExpression()->Expression::: walking iterator get expression
com.sun.org.apache.xpath.internal.axes.WalkingIterator#setExpression(Expression)->void::: walking iterator set expression
com.sun.org.apache.xpath.internal.axes.WalkingIterator#deepEquals(Expression)->boolean::: walking iterator deep equals
com.sun.org.apache.xpath.internal.axes.WalkingIteratorSorted#isDocOrdered()->boolean:::Returns true if all the nodes in the iteration well be returned in document order.
com.sun.org.apache.xpath.internal.axes.WalkingIteratorSorted#canBeWalkedInNaturalDocOrderStatic()->boolean:::Tell if the nodeset can be walked in doc order, via static analysis.
com.sun.org.apache.xpath.internal.axes.WalkingIteratorSorted#fixupVariables(List, int)->void:::This function is used to perform some extra analysis of the iterator.
