jdk.tools.jlink.plugin.Plugin#getType()->Category:::The type of this plugin.
jdk.tools.jlink.plugin.Plugin#getState()->Set:::The Plugin set of states.
jdk.tools.jlink.plugin.Plugin#getName()->String:::The plugin name.
jdk.tools.jlink.plugin.Plugin#getDescription()->String:::The plugin description.
jdk.tools.jlink.plugin.Plugin#getOption()->String:::The option that identifies this plugin
jdk.tools.jlink.plugin.Plugin#hasArguments()->boolean:::Has this plugin require one or more arguments? A plugin can have one or more optional arguments
jdk.tools.jlink.plugin.Plugin#hasRawArgument()->boolean::: plugin has raw argument
jdk.tools.jlink.plugin.Plugin#getArgumentsDescription()->String:::The plugin argument(s) description.
jdk.tools.jlink.plugin.Plugin#getStateDescription()->String:::Return a message indicating the status of the provider.
jdk.tools.jlink.plugin.Plugin#configure(Map)->void:::Configure the plugin based on the passed configuration
jdk.tools.jlink.plugin.Plugin#transform(ResourcePool, ResourcePoolBuilder)->ResourcePool:::Visit the content of the modules that are composing the image.
jdk.tools.jlink.plugin.ResourcePool#moduleView()->ResourcePoolModuleView:::Return the module view of this resource pool.
jdk.tools.jlink.plugin.ResourcePool#entries()->Stream:::Get all ResourcePoolEntry contained in this ResourcePool instance.
jdk.tools.jlink.plugin.ResourcePool#entryCount()->int:::Return the number of ResourcePoolEntry count in this ResourcePool.
jdk.tools.jlink.plugin.ResourcePool#findEntry(String)->Optional:::Get the ResourcePoolEntry for the passed path.
jdk.tools.jlink.plugin.ResourcePool#findEntryInContext(String, ResourcePoolEntry)->Optional:::Get the ModuleEntry for the passed path restricted to supplied context.
jdk.tools.jlink.plugin.ResourcePool#contains(ResourcePoolEntry)->boolean:::Check if the ResourcePool contains the given ResourcePoolEntry.
jdk.tools.jlink.plugin.ResourcePool#isEmpty()->boolean:::Check if the ResourcePool contains some content at all.
jdk.tools.jlink.plugin.ResourcePool#byteOrder()->ByteOrder:::The ByteOrder currently in use when generating the jimage file.
jdk.tools.jlink.plugin.ResourcePool#transformAndCopy(Function, ResourcePoolBuilder)->void:::Visit each ResourcePoolEntry in this ResourcePool to transform it and copy the transformed ResourcePoolEntry to the output ResourcePoolBuilder.
jdk.tools.jlink.plugin.ResourcePoolBuilder#add(ResourcePoolEntry)->void:::Add a ResourcePoolEntry.
jdk.tools.jlink.plugin.ResourcePoolBuilder#build()->ResourcePool:::Done with adding resource entries
jdk.tools.jlink.plugin.ResourcePoolEntry#moduleName()->String:::The module name of this ResourcePoolEntry.
jdk.tools.jlink.plugin.ResourcePoolEntry#path()->String:::The path of this ResourcePoolEntry.
jdk.tools.jlink.plugin.ResourcePoolEntry#type()->Type:::The ResourcePoolEntry's type.
jdk.tools.jlink.plugin.ResourcePoolEntry#contentLength()->long:::The ResourcePoolEntry content length.
jdk.tools.jlink.plugin.ResourcePoolEntry#content()->InputStream:::The ResourcePoolEntry content as an InputStream.
jdk.tools.jlink.plugin.ResourcePoolEntry#linkedTarget()->ResourcePoolEntry:::Returns a target linked with this entry.
jdk.tools.jlink.plugin.ResourcePoolEntry#contentBytes()->byte[]:::The ResourcePoolEntry content as an array of bytes.
jdk.tools.jlink.plugin.ResourcePoolEntry#write(OutputStream)->void:::Write the content of this ResourcePoolEntry to an OutputStream.
jdk.tools.jlink.plugin.ResourcePoolEntry#copyWithContent(byte[])->ResourcePoolEntry:::Create a ResourcePoolEntry with new content but other information copied from this ResourcePoolEntry.
jdk.tools.jlink.plugin.ResourcePoolEntry#copyWithContent(Path)->ResourcePoolEntry:::Create a ResourcePoolEntry with new content but other information copied from this ResourcePoolEntry.
jdk.tools.jlink.plugin.ResourcePoolEntry#create(String, ResourcePoolEntry.Type, byte[])->ResourcePoolEntry:::Create a ResourcePoolEntry for a resource of the given type.
jdk.tools.jlink.plugin.ResourcePoolEntry#create(String, byte[])->ResourcePoolEntry:::Create a ResourcePoolEntry for a resource of type Type#CLASS_OR_RESOURCE.
jdk.tools.jlink.plugin.ResourcePoolEntry#create(String, ResourcePoolEntry.Type, Path)->ResourcePoolEntry:::Create a ResourcePoolEntry for a resource of the given type.
jdk.tools.jlink.plugin.ResourcePoolEntry#create(String, Path)->ResourcePoolEntry:::Create a ResourcePoolEntry for a resource of type Type#CLASS_OR_RESOURCE.
jdk.tools.jlink.plugin.ResourcePoolEntry#createSymLink(String, ResourcePoolEntry.Type, ResourcePoolEntry)->ResourcePoolEntry:::Create a ResourcePoolEntry for a resource the given path and type
jdk.tools.jlink.plugin.ResourcePoolModule#name()->String:::The module name.
jdk.tools.jlink.plugin.ResourcePoolModule#findEntry(String)->Optional:::Retrieves a ResourcePoolEntry from the given path (e.g: /mymodule/com.foo.bar/MyClass.class)
jdk.tools.jlink.plugin.ResourcePoolModule#descriptor()->ModuleDescriptor:::The module descriptor of this module.
jdk.tools.jlink.plugin.ResourcePoolModule#targetPlatform()->String:::The target platform
jdk.tools.jlink.plugin.ResourcePoolModule#packages()->Set:::Retrieves all the packages located in this module.
jdk.tools.jlink.plugin.ResourcePoolModule#entries()->Stream:::Retrieves the stream of ResourcePoolEntry.
jdk.tools.jlink.plugin.ResourcePoolModule#entryCount()->int:::Return the number of ResourcePoolEntry count in this ResourcePoolModule.
jdk.tools.jlink.plugin.ResourcePoolModuleView#findModule(String)->Optional:::Find the module, if any, of the given name.
jdk.tools.jlink.plugin.ResourcePoolModuleView#findModule(ResourcePoolEntry)->Optional:::Find the module, if any, of the given ResourcePoolEntry
jdk.tools.jlink.plugin.ResourcePoolModuleView#modules()->Stream:::The stream of modules contained in this ResourcePool.
jdk.tools.jlink.plugin.ResourcePoolModuleView#moduleCount()->int:::Return the number of ResourcePoolModule count in this ResourcePool.
