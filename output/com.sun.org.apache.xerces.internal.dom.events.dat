com.sun.org.apache.xerces.internal.dom.events.EventImpl#initEvent(String, boolean, boolean)->void:::The DOM doesn't deal with constructors, so instead we have an         initializer call to set most of the read-only fields
com.sun.org.apache.xerces.internal.dom.events.EventImpl#getBubbles()->boolean::: event impl get bubbles
com.sun.org.apache.xerces.internal.dom.events.EventImpl#getCancelable()->boolean::: event impl get cancelable
com.sun.org.apache.xerces.internal.dom.events.EventImpl#getCurrentTarget()->EventTarget::: event impl get current target
com.sun.org.apache.xerces.internal.dom.events.EventImpl#getEventPhase()->short::: event impl get event phase
com.sun.org.apache.xerces.internal.dom.events.EventImpl#getTarget()->EventTarget::: event impl get target
com.sun.org.apache.xerces.internal.dom.events.EventImpl#getType()->String::: event impl get type
com.sun.org.apache.xerces.internal.dom.events.EventImpl#getTimeStamp()->long::: event impl get time stamp
com.sun.org.apache.xerces.internal.dom.events.EventImpl#stopPropagation()->void:::Causes exit from in-progress event dispatch before the next         currentTarget is selected
com.sun.org.apache.xerces.internal.dom.events.EventImpl#preventDefault()->void:::Prevents any default processing built into the target node from         occurring.
com.sun.org.apache.xerces.internal.dom.events.MutationEventImpl#getAttrName()->String::: mutation event impl get attr name
com.sun.org.apache.xerces.internal.dom.events.MutationEventImpl#getAttrChange()->short::: attrChange indicates the type of change which triggered the DOMAttrModified event
com.sun.org.apache.xerces.internal.dom.events.MutationEventImpl#getNewValue()->String::: mutation event impl get new value
com.sun.org.apache.xerces.internal.dom.events.MutationEventImpl#getPrevValue()->String::: mutation event impl get prev value
com.sun.org.apache.xerces.internal.dom.events.MutationEventImpl#getRelatedNode()->Node::: mutation event impl get related node
com.sun.org.apache.xerces.internal.dom.events.MutationEventImpl#initMutationEvent(String, boolean, boolean, Node, String, String, String, short)->void:::Initialize a mutation event, or overwrite the event's current         settings with new values of the parameters.
