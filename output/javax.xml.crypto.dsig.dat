javax.xml.crypto.dsig.CanonicalizationMethod#getParameterSpec()->AlgorithmParameterSpec:::Returns the algorithm-specific input parameters associated with this CanonicalizationMethod
javax.xml.crypto.dsig.DigestMethod#getParameterSpec()->AlgorithmParameterSpec:::Returns the algorithm-specific input parameters associated with this DigestMethod
javax.xml.crypto.dsig.Manifest#getId()->String:::Returns the Id of this Manifest.
javax.xml.crypto.dsig.Manifest#getReferences()->List:::Returns an java.util.Collections#unmodifiableList unmodifiable list of one or more References that are contained in this Manifest.
javax.xml.crypto.dsig.Reference#getTransforms()->List:::Returns an java.util.Collections#unmodifiableList unmodifiable list of Transforms that are contained in this Reference.
javax.xml.crypto.dsig.Reference#getDigestMethod()->DigestMethod:::Returns the digest method of this Reference.
javax.xml.crypto.dsig.Reference#getId()->String:::Returns the optional Id attribute of this Reference, which permits this reference to be referenced from elsewhere.
javax.xml.crypto.dsig.Reference#getDigestValue()->byte[]:::Returns the digest value of this Reference.
javax.xml.crypto.dsig.Reference#getCalculatedDigestValue()->byte[]:::Returns the calculated digest value of this Reference after a validation operation
javax.xml.crypto.dsig.Reference#validate(XMLValidateContext)->boolean:::Validates this reference
javax.xml.crypto.dsig.Reference#getDereferencedData()->Data:::Returns the dereferenced data, if reference caching is enabled
javax.xml.crypto.dsig.Reference#getDigestInputStream()->InputStream:::Returns the pre-digested input stream, if reference caching is enabled
javax.xml.crypto.dsig.SignatureMethod#getParameterSpec()->AlgorithmParameterSpec:::Returns the algorithm-specific input parameters of this SignatureMethod
javax.xml.crypto.dsig.SignatureProperties#getId()->String:::Returns the Id of this SignatureProperties.
javax.xml.crypto.dsig.SignatureProperties#getProperties()->List:::Returns an java.util.Collections#unmodifiableList unmodifiable list of one or more SignaturePropertys that are contained in this SignatureProperties.
javax.xml.crypto.dsig.SignatureProperty#getTarget()->String:::Returns the target URI of this SignatureProperty.
javax.xml.crypto.dsig.SignatureProperty#getId()->String:::Returns the Id of this SignatureProperty.
javax.xml.crypto.dsig.SignatureProperty#getContent()->List:::Returns an java.util.Collections#unmodifiableList unmodifiable list of one or more XMLStructures that are contained in this SignatureProperty
javax.xml.crypto.dsig.SignedInfo#getCanonicalizationMethod()->CanonicalizationMethod:::Returns the canonicalization method of this SignedInfo.
javax.xml.crypto.dsig.SignedInfo#getSignatureMethod()->SignatureMethod:::Returns the signature method of this SignedInfo.
javax.xml.crypto.dsig.SignedInfo#getReferences()->List:::Returns an java.util.Collections#unmodifiableList unmodifiable list of one or more References.
javax.xml.crypto.dsig.SignedInfo#getId()->String:::Returns the optional Id attribute of this SignedInfo.
javax.xml.crypto.dsig.SignedInfo#getCanonicalizedData()->InputStream:::Returns the canonicalized signed info bytes after a signing or validation operation
javax.xml.crypto.dsig.Transform#getParameterSpec()->AlgorithmParameterSpec:::Returns the algorithm-specific input parameters associated with this Transform
javax.xml.crypto.dsig.Transform#transform(Data, XMLCryptoContext)->Data:::Transforms the specified data using the underlying transform algorithm.
javax.xml.crypto.dsig.Transform#transform(Data, XMLCryptoContext, OutputStream)->Data:::Transforms the specified data using the underlying transform algorithm
javax.xml.crypto.dsig.TransformException#getCause()->Throwable:::Returns the cause of this TransformException or null if the cause is nonexistent or unknown
javax.xml.crypto.dsig.TransformException#printStackTrace()->void:::Prints this TransformException, its backtrace and the cause's backtrace to the standard error stream.
javax.xml.crypto.dsig.TransformException#printStackTrace(PrintStream)->void:::Prints this TransformException, its backtrace and the cause's backtrace to the specified print stream.
javax.xml.crypto.dsig.TransformException#printStackTrace(PrintWriter)->void:::Prints this TransformException, its backtrace and the cause's backtrace to the specified print writer.
javax.xml.crypto.dsig.TransformService#getInstance(String, String)->TransformService:::Returns a TransformService that supports the specified algorithm URI (ex: Transform#XPATH2) and mechanism type (ex: DOM)
javax.xml.crypto.dsig.TransformService#getInstance(String, String, Provider)->TransformService:::Returns a TransformService that supports the specified algorithm URI (ex: Transform#XPATH2) and mechanism type (ex: DOM) as supplied by the specified provider
javax.xml.crypto.dsig.TransformService#getInstance(String, String, String)->TransformService:::Returns a TransformService that supports the specified algorithm URI (ex: Transform#XPATH2) and mechanism type (ex: DOM) as supplied by the specified provider
javax.xml.crypto.dsig.TransformService#getMechanismType()->String:::Returns the mechanism type supported by this TransformService.
javax.xml.crypto.dsig.TransformService#getAlgorithm()->String:::Returns the URI of the algorithm supported by this TransformService.
javax.xml.crypto.dsig.TransformService#getProvider()->Provider:::Returns the provider of this TransformService.
javax.xml.crypto.dsig.TransformService#init(TransformParameterSpec)->void:::Initializes this TransformService with the specified parameters
javax.xml.crypto.dsig.TransformService#marshalParams(XMLStructure, XMLCryptoContext)->void:::Marshals the algorithm-specific parameters
javax.xml.crypto.dsig.TransformService#init(XMLStructure, XMLCryptoContext)->void:::Initializes this TransformService with the specified parameters and document context.
javax.xml.crypto.dsig.XMLObject#getContent()->List:::Returns an java.util.Collections#unmodifiableList unmodifiable list of XMLStructures contained in this XMLObject, which represent elements from any namespace
javax.xml.crypto.dsig.XMLObject#getId()->String:::Returns the Id of this XMLObject.
javax.xml.crypto.dsig.XMLObject#getMimeType()->String:::Returns the mime type of this XMLObject
javax.xml.crypto.dsig.XMLObject#getEncoding()->String:::Returns the encoding URI of this XMLObject
javax.xml.crypto.dsig.XMLSignature#validate(XMLValidateContext)->boolean:::Validates the signature according to the  core validation processing rules
javax.xml.crypto.dsig.XMLSignature#getKeyInfo()->KeyInfo:::Returns the key info of this XMLSignature.
javax.xml.crypto.dsig.XMLSignature#getSignedInfo()->SignedInfo:::Returns the signed info of this XMLSignature.
javax.xml.crypto.dsig.XMLSignature#getObjects()->List:::Returns an java.util.Collections#unmodifiableList unmodifiable list of XMLObjects contained in this XMLSignature.
javax.xml.crypto.dsig.XMLSignature#getId()->String:::Returns the optional Id of this XMLSignature.
javax.xml.crypto.dsig.XMLSignature#getSignatureValue()->SignatureValue:::Returns the signature value of this XMLSignature.
javax.xml.crypto.dsig.XMLSignature#sign(XMLSignContext)->void:::Signs this XMLSignature
javax.xml.crypto.dsig.XMLSignature#getKeySelectorResult()->KeySelectorResult:::Returns the result of the KeySelector, if specified, after this XMLSignature has been signed or validated.
javax.xml.crypto.dsig.XMLSignature.SignatureValue#getId()->String:::Returns the optional Id attribute of this SignatureValue, which permits this element to be referenced from elsewhere.
javax.xml.crypto.dsig.XMLSignature.SignatureValue#getValue()->byte[]:::Returns the signature value of this SignatureValue.
javax.xml.crypto.dsig.XMLSignature.SignatureValue#validate(XMLValidateContext)->boolean:::Validates the signature value
javax.xml.crypto.dsig.XMLSignatureException#getCause()->Throwable:::Returns the cause of this XMLSignatureException or null if the cause is nonexistent or unknown
javax.xml.crypto.dsig.XMLSignatureException#printStackTrace()->void:::Prints this XMLSignatureException, its backtrace and the cause's backtrace to the standard error stream.
javax.xml.crypto.dsig.XMLSignatureException#printStackTrace(PrintStream)->void:::Prints this XMLSignatureException, its backtrace and the cause's backtrace to the specified print stream.
javax.xml.crypto.dsig.XMLSignatureException#printStackTrace(PrintWriter)->void:::Prints this XMLSignatureException, its backtrace and the cause's backtrace to the specified print writer.
javax.xml.crypto.dsig.XMLSignatureFactory#getInstance(String)->XMLSignatureFactory:::Returns an XMLSignatureFactory that supports the specified XML processing mechanism and representation type (ex: "DOM")
javax.xml.crypto.dsig.XMLSignatureFactory#getInstance(String, Provider)->XMLSignatureFactory:::Returns an XMLSignatureFactory that supports the requested XML processing mechanism and representation type (ex: "DOM"), as supplied by the specified provider
javax.xml.crypto.dsig.XMLSignatureFactory#getInstance(String, String)->XMLSignatureFactory:::Returns an XMLSignatureFactory that supports the requested XML processing mechanism and representation type (ex: "DOM"), as supplied by the specified provider
javax.xml.crypto.dsig.XMLSignatureFactory#getInstance()->XMLSignatureFactory:::Returns an XMLSignatureFactory that supports the default XML processing mechanism and representation type ("DOM")
javax.xml.crypto.dsig.XMLSignatureFactory#getMechanismType()->String:::Returns the type of the XML processing mechanism and representation supported by this XMLSignatureFactory (ex: "DOM").
javax.xml.crypto.dsig.XMLSignatureFactory#getProvider()->Provider:::Returns the provider of this XMLSignatureFactory.
javax.xml.crypto.dsig.XMLSignatureFactory#newXMLSignature(SignedInfo, KeyInfo)->XMLSignature:::Creates an XMLSignature and initializes it with the contents of the specified SignedInfo and KeyInfo objects.
javax.xml.crypto.dsig.XMLSignatureFactory#newXMLSignature(SignedInfo, KeyInfo, List, String, String)->XMLSignature:::Creates an XMLSignature and initializes it with the specified parameters.
javax.xml.crypto.dsig.XMLSignatureFactory#newReference(String, DigestMethod)->Reference:::Creates a Reference with the specified URI and digest method.
javax.xml.crypto.dsig.XMLSignatureFactory#newReference(String, DigestMethod, List, String, String)->Reference:::Creates a Reference with the specified parameters.
javax.xml.crypto.dsig.XMLSignatureFactory#newReference(String, DigestMethod, List, String, String, byte[])->Reference:::Creates a Reference with the specified parameters and pre-calculated digest value
javax.xml.crypto.dsig.XMLSignatureFactory#newReference(String, DigestMethod, List, Data, List, String, String)->Reference:::Creates a Reference with the specified parameters
javax.xml.crypto.dsig.XMLSignatureFactory#newSignedInfo(CanonicalizationMethod, SignatureMethod, List)->SignedInfo:::Creates a SignedInfo with the specified canonicalization and signature methods, and list of one or more references.
javax.xml.crypto.dsig.XMLSignatureFactory#newSignedInfo(CanonicalizationMethod, SignatureMethod, List, String)->SignedInfo:::Creates a SignedInfo with the specified parameters.
javax.xml.crypto.dsig.XMLSignatureFactory#newXMLObject(List, String, String, String)->XMLObject:::Creates an XMLObject from the specified parameters.
javax.xml.crypto.dsig.XMLSignatureFactory#newManifest(List)->Manifest:::Creates a Manifest containing the specified list of References.
javax.xml.crypto.dsig.XMLSignatureFactory#newManifest(List, String)->Manifest:::Creates a Manifest containing the specified list of References and optional id.
javax.xml.crypto.dsig.XMLSignatureFactory#newSignatureProperty(List, String, String)->SignatureProperty:::Creates a SignatureProperty containing the specified list of XMLStructures, target URI and optional id.
javax.xml.crypto.dsig.XMLSignatureFactory#newSignatureProperties(List, String)->SignatureProperties:::Creates a SignatureProperties containing the specified list of SignaturePropertys and optional id.
javax.xml.crypto.dsig.XMLSignatureFactory#newDigestMethod(String, DigestMethodParameterSpec)->DigestMethod:::Creates a DigestMethod for the specified algorithm URI and parameters.
javax.xml.crypto.dsig.XMLSignatureFactory#newSignatureMethod(String, SignatureMethodParameterSpec)->SignatureMethod:::Creates a SignatureMethod for the specified algorithm URI and parameters.
javax.xml.crypto.dsig.XMLSignatureFactory#newTransform(String, TransformParameterSpec)->Transform:::Creates a Transform for the specified algorithm URI and parameters.
javax.xml.crypto.dsig.XMLSignatureFactory#newTransform(String, XMLStructure)->Transform:::Creates a Transform for the specified algorithm URI and parameters
javax.xml.crypto.dsig.XMLSignatureFactory#newCanonicalizationMethod(String, C14NMethodParameterSpec)->CanonicalizationMethod:::Creates a CanonicalizationMethod for the specified algorithm URI and parameters.
javax.xml.crypto.dsig.XMLSignatureFactory#newCanonicalizationMethod(String, XMLStructure)->CanonicalizationMethod:::Creates a CanonicalizationMethod for the specified algorithm URI and parameters
javax.xml.crypto.dsig.XMLSignatureFactory#getKeyInfoFactory()->KeyInfoFactory:::Returns a KeyInfoFactory that creates KeyInfo objects
javax.xml.crypto.dsig.XMLSignatureFactory#unmarshalXMLSignature(XMLValidateContext)->XMLSignature:::Unmarshals a new XMLSignature instance from a mechanism-specific XMLValidateContext instance.
javax.xml.crypto.dsig.XMLSignatureFactory#unmarshalXMLSignature(XMLStructure)->XMLSignature:::Unmarshals a new XMLSignature instance from a mechanism-specific XMLStructure instance
javax.xml.crypto.dsig.XMLSignatureFactory#isFeatureSupported(String)->boolean:::Indicates whether a specified feature is supported.
javax.xml.crypto.dsig.XMLSignatureFactory#getURIDereferencer()->URIDereferencer:::Returns a reference to the URIDereferencer that is used by default to dereference URIs in Reference objects.
