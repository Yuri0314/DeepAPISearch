com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#hexval(char)->int::: i_ code c_ char stream hexval
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#BeginToken()->char::: i_ code c_ char stream  begin token
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#readChar()->char::: i_ code c_ char stream read char
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#getColumn()->int::: i_ code c_ char stream get column
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#getLine()->int::: i_ code c_ char stream get line
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#getEndColumn()->int::: i_ code c_ char stream get end column
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#getEndLine()->int::: i_ code c_ char stream get end line
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#getBeginColumn()->int::: i_ code c_ char stream get begin column
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#getBeginLine()->int::: i_ code c_ char stream get begin line
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#backup(int)->void::: i_ code c_ char stream backup
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#ReInit(java.io.InputStream, int, int, int)->void::: i_ code c_ char stream  re init
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#ReInit(java.io.InputStream, int, int)->void::: i_ code c_ char stream  re init
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#GetImage()->String::: i_ code c_ char stream  get image
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#GetSuffix(int)->char[]::: i_ code c_ char stream  get suffix
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#Done()->void::: i_ code c_ char stream  done
com.sun.tools.example.debug.expr.ASCII_UCodeESC_CharStream#adjustBeginLineColumn(int, int)->void:::Method to adjust line and column numbers for the start of a token.<BR>
com.sun.tools.example.debug.expr.ExpressionParser#peek()->LValue::: expression parser peek
com.sun.tools.example.debug.expr.ExpressionParser#pop()->LValue::: expression parser pop
com.sun.tools.example.debug.expr.ExpressionParser#push(LValue)->void::: expression parser push
com.sun.tools.example.debug.expr.ExpressionParser#getMassagedValue()->Value::: expression parser get massaged value
com.sun.tools.example.debug.expr.ExpressionParser.GetFrame#get()->StackFrame::: get frame get
com.sun.tools.example.debug.expr.ExpressionParser#evaluate(String, VirtualMachine, GetFrame)->Value::: expression parser evaluate
com.sun.tools.example.debug.expr.ExpressionParser#main(String[])->void::: expression parser main
com.sun.tools.example.debug.expr.ExpressionParser#Type()->void::: expression parser  type
com.sun.tools.example.debug.expr.ExpressionParser#PrimitiveType()->void::: expression parser  primitive type
com.sun.tools.example.debug.expr.ExpressionParser#Name()->String::: expression parser  name
com.sun.tools.example.debug.expr.ExpressionParser#NameList()->void::: expression parser  name list
com.sun.tools.example.debug.expr.ExpressionParser#Expression()->void::: expression parser  expression
com.sun.tools.example.debug.expr.ExpressionParser#Assignment()->void::: expression parser  assignment
com.sun.tools.example.debug.expr.ExpressionParser#AssignmentOperator()->void::: expression parser  assignment operator
com.sun.tools.example.debug.expr.ExpressionParser#ConditionalExpression()->void::: expression parser  conditional expression
com.sun.tools.example.debug.expr.ExpressionParser#ConditionalOrExpression()->void::: expression parser  conditional or expression
com.sun.tools.example.debug.expr.ExpressionParser#ConditionalAndExpression()->void::: expression parser  conditional and expression
com.sun.tools.example.debug.expr.ExpressionParser#InclusiveOrExpression()->void::: expression parser  inclusive or expression
com.sun.tools.example.debug.expr.ExpressionParser#ExclusiveOrExpression()->void::: expression parser  exclusive or expression
com.sun.tools.example.debug.expr.ExpressionParser#AndExpression()->void::: expression parser  and expression
com.sun.tools.example.debug.expr.ExpressionParser#EqualityExpression()->void::: expression parser  equality expression
com.sun.tools.example.debug.expr.ExpressionParser#InstanceOfExpression()->void::: expression parser  instance of expression
com.sun.tools.example.debug.expr.ExpressionParser#RelationalExpression()->void::: expression parser  relational expression
com.sun.tools.example.debug.expr.ExpressionParser#ShiftExpression()->void::: expression parser  shift expression
com.sun.tools.example.debug.expr.ExpressionParser#AdditiveExpression()->void::: expression parser  additive expression
com.sun.tools.example.debug.expr.ExpressionParser#MultiplicativeExpression()->void::: expression parser  multiplicative expression
com.sun.tools.example.debug.expr.ExpressionParser#UnaryExpression()->void::: expression parser  unary expression
com.sun.tools.example.debug.expr.ExpressionParser#PreIncrementExpression()->void::: expression parser  pre increment expression
com.sun.tools.example.debug.expr.ExpressionParser#PreDecrementExpression()->void::: expression parser  pre decrement expression
com.sun.tools.example.debug.expr.ExpressionParser#UnaryExpressionNotPlusMinus()->void::: expression parser  unary expression not plus minus
com.sun.tools.example.debug.expr.ExpressionParser#CastLookahead()->void::: expression parser  cast lookahead
com.sun.tools.example.debug.expr.ExpressionParser#PostfixExpression()->void::: expression parser  postfix expression
com.sun.tools.example.debug.expr.ExpressionParser#CastExpression()->void::: expression parser  cast expression
com.sun.tools.example.debug.expr.ExpressionParser#PrimaryExpression()->void::: expression parser  primary expression
com.sun.tools.example.debug.expr.ExpressionParser#PrimaryPrefix()->void::: expression parser  primary prefix
com.sun.tools.example.debug.expr.ExpressionParser#PrimarySuffix()->void::: expression parser  primary suffix
com.sun.tools.example.debug.expr.ExpressionParser#Literal()->void::: expression parser  literal
com.sun.tools.example.debug.expr.ExpressionParser#BooleanLiteral()->void::: expression parser  boolean literal
com.sun.tools.example.debug.expr.ExpressionParser#NullLiteral()->void::: expression parser  null literal
com.sun.tools.example.debug.expr.ExpressionParser#Arguments()->List::: expression parser  arguments
com.sun.tools.example.debug.expr.ExpressionParser#ArgumentList(List)->void::: expression parser  argument list
com.sun.tools.example.debug.expr.ExpressionParser#AllocationExpression()->void::: expression parser  allocation expression
com.sun.tools.example.debug.expr.ExpressionParser#ArrayDimensions()->void::: expression parser  array dimensions
com.sun.tools.example.debug.expr.ExpressionParser#ReInit(java.io.InputStream)->void:::Reinitialise.
com.sun.tools.example.debug.expr.ExpressionParser#ReInit(java.io.InputStream, String)->void:::Reinitialise.
com.sun.tools.example.debug.expr.ExpressionParser#ReInit(java.io.Reader)->void:::Reinitialise.
com.sun.tools.example.debug.expr.ExpressionParser#ReInit(ExpressionParserTokenManager)->void:::Reinitialise.
com.sun.tools.example.debug.expr.ExpressionParser#getNextToken()->Token:::Get the next Token.
com.sun.tools.example.debug.expr.ExpressionParser#getToken(int)->Token:::Get the specific Token.
com.sun.tools.example.debug.expr.ExpressionParser#generateParseException()->ParseException:::Generate ParseException.
com.sun.tools.example.debug.expr.ExpressionParser#enable_tracing()->void:::Enable tracing.
com.sun.tools.example.debug.expr.ExpressionParser#disable_tracing()->void:::Disable tracing.
com.sun.tools.example.debug.expr.ExpressionParserTokenManager#setDebugStream(java.io.PrintStream)->void:::Set debug output.
com.sun.tools.example.debug.expr.ExpressionParserTokenManager#ReInit(JavaCharStream)->void:::Reinitialise parser.
com.sun.tools.example.debug.expr.ExpressionParserTokenManager#ReInit(JavaCharStream, int)->void:::Reinitialise parser.
com.sun.tools.example.debug.expr.ExpressionParserTokenManager#SwitchTo(int)->void:::Switch to specified lex state.
com.sun.tools.example.debug.expr.ExpressionParserTokenManager#jjFillToken()->Token::: expression parser token manager jj fill token
com.sun.tools.example.debug.expr.ExpressionParserTokenManager#getNextToken()->Token:::Get the next Token.
com.sun.tools.example.debug.expr.JavaCharStream#hexval(char)->int::: java char stream hexval
com.sun.tools.example.debug.expr.JavaCharStream#setTabSize(int)->void::: java char stream set tab size
com.sun.tools.example.debug.expr.JavaCharStream#getTabSize(int)->int::: java char stream get tab size
com.sun.tools.example.debug.expr.JavaCharStream#ExpandBuff(boolean)->void::: java char stream  expand buff
com.sun.tools.example.debug.expr.JavaCharStream#FillBuff()->void::: java char stream  fill buff
com.sun.tools.example.debug.expr.JavaCharStream#ReadByte()->char::: java char stream  read byte
com.sun.tools.example.debug.expr.JavaCharStream#BeginToken()->char::: java char stream  begin token
com.sun.tools.example.debug.expr.JavaCharStream#AdjustBuffSize()->void::: java char stream  adjust buff size
com.sun.tools.example.debug.expr.JavaCharStream#UpdateLineColumn(char)->void::: java char stream  update line column
com.sun.tools.example.debug.expr.JavaCharStream#readChar()->char:::Read a character.
com.sun.tools.example.debug.expr.JavaCharStream#getColumn()->int::: java char stream get column
com.sun.tools.example.debug.expr.JavaCharStream#getLine()->int::: java char stream get line
com.sun.tools.example.debug.expr.JavaCharStream#getEndColumn()->int:::Get end column.
com.sun.tools.example.debug.expr.JavaCharStream#getEndLine()->int:::Get end line.
com.sun.tools.example.debug.expr.JavaCharStream#getBeginColumn()->int::: java char stream get begin column
com.sun.tools.example.debug.expr.JavaCharStream#getBeginLine()->int::: java char stream get begin line
com.sun.tools.example.debug.expr.JavaCharStream#backup(int)->void:::Retreat.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.Reader, int, int, int)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.Reader, int, int)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.Reader)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.InputStream, String, int, int, int)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.InputStream, int, int, int)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.InputStream, String, int, int)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.InputStream, int, int)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.InputStream, String)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#ReInit(java.io.InputStream)->void:::Reinitialise.
com.sun.tools.example.debug.expr.JavaCharStream#GetImage()->String::: java char stream  get image
com.sun.tools.example.debug.expr.JavaCharStream#GetSuffix(int)->char[]::: java char stream  get suffix
com.sun.tools.example.debug.expr.JavaCharStream#Done()->void:::Set buffers back to null when finished.
com.sun.tools.example.debug.expr.JavaCharStream#adjustBeginLineColumn(int, int)->void:::Method to adjust line and column numbers for the start of a token.
com.sun.tools.example.debug.expr.LValue#getValue()->Value::: value get value
com.sun.tools.example.debug.expr.LValue#setValue0(Value)->void::: value set value0
com.sun.tools.example.debug.expr.LValue#invokeWith(List)->void::: value invoke with
com.sun.tools.example.debug.expr.LValue#setValue(Value)->void::: value set value
com.sun.tools.example.debug.expr.LValue#setValue(LValue)->void::: value set value
com.sun.tools.example.debug.expr.LValue#memberLValue(ExpressionParser.GetFrame, String)->LValue::: value member value
com.sun.tools.example.debug.expr.LValue#memberLValue(String, ThreadReference)->LValue::: value member value
com.sun.tools.example.debug.expr.LValue#getMassagedValue(ExpressionParser.GetFrame)->Value::: value get massaged value
com.sun.tools.example.debug.expr.LValue#interiorGetValue()->Value::: value interior get value
com.sun.tools.example.debug.expr.LValue#arrayElementLValue(LValue)->LValue::: value array element value
com.sun.tools.example.debug.expr.LValue#toString()->String::: value to string
com.sun.tools.example.debug.expr.LValue#fieldByName(ReferenceType, String, int)->Field::: value field by name
com.sun.tools.example.debug.expr.LValue#methodsByName(ReferenceType, String, int)->List::: value methods by name
com.sun.tools.example.debug.expr.LValue#argumentsMatch(List, List)->int::: value arguments match
com.sun.tools.example.debug.expr.LValue#isComponentAssignable(Type, Type)->boolean::: value is component assignable
com.sun.tools.example.debug.expr.LValue#isArrayAssignableTo(ArrayType, Type)->boolean::: value is array assignable to
com.sun.tools.example.debug.expr.LValue#isAssignableTo(Type, Type)->boolean::: value is assignable to
com.sun.tools.example.debug.expr.LValue#resolveOverload(List, List)->Method::: value resolve overload
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, boolean)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, byte)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, char)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, short)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, int)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, long)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, float)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, double)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#make(VirtualMachine, String)->LValue::: value make
com.sun.tools.example.debug.expr.LValue#makeBoolean(VirtualMachine, Token)->LValue::: value make boolean
com.sun.tools.example.debug.expr.LValue#makeCharacter(VirtualMachine, Token)->LValue::: value make character
com.sun.tools.example.debug.expr.LValue#makeFloat(VirtualMachine, Token)->LValue::: value make float
com.sun.tools.example.debug.expr.LValue#makeDouble(VirtualMachine, Token)->LValue::: value make double
com.sun.tools.example.debug.expr.LValue#makeInteger(VirtualMachine, Token)->LValue::: value make integer
com.sun.tools.example.debug.expr.LValue#makeShort(VirtualMachine, Token)->LValue::: value make short
com.sun.tools.example.debug.expr.LValue#makeLong(VirtualMachine, Token)->LValue::: value make long
com.sun.tools.example.debug.expr.LValue#makeByte(VirtualMachine, Token)->LValue::: value make byte
com.sun.tools.example.debug.expr.LValue#makeString(VirtualMachine, Token)->LValue::: value make string
com.sun.tools.example.debug.expr.LValue#makeNull(VirtualMachine, Token)->LValue::: value make null
com.sun.tools.example.debug.expr.LValue#makeThisObject(VirtualMachine, ExpressionParser.GetFrame, Token)->LValue::: value make this object
com.sun.tools.example.debug.expr.LValue#makeNewObject(VirtualMachine, ExpressionParser.GetFrame, String, List)->LValue::: value make new object
com.sun.tools.example.debug.expr.LValue#makeName(VirtualMachine, ExpressionParser.GetFrame, String)->LValue::: value make name
com.sun.tools.example.debug.expr.LValue#stringValue(LValue, ExpressionParser.GetFrame)->String::: value string value
com.sun.tools.example.debug.expr.LValue#booleanOperation(VirtualMachine, Token, LValue, LValue)->LValue::: value boolean operation
com.sun.tools.example.debug.expr.LValue#operation(VirtualMachine, Token, LValue, LValue, ExpressionParser.GetFrame)->LValue::: value operation
com.sun.tools.example.debug.expr.LValue#operation(VirtualMachine, Token, LValue, ExpressionParser.GetFrame)->LValue::: value operation
com.sun.tools.example.debug.expr.ParseException#add_escapes(String)->String:::Used to convert raw characters to their escaped version when these raw version cannot be used as part of an ASCII string literal.
com.sun.tools.example.debug.expr.Token#getValue()->Object:::An optional attribute value of the Token
com.sun.tools.example.debug.expr.Token#toString()->String:::Returns the image.
com.sun.tools.example.debug.expr.Token#newToken(int, String)->Token:::Returns a new Token object, by default
com.sun.tools.example.debug.expr.Token#newToken(int)->Token::: token new token
com.sun.tools.example.debug.expr.TokenMgrError#addEscapes(String)->String:::Replaces unprintable characters by their escaped (or unicode escaped) equivalents in the given string
com.sun.tools.example.debug.expr.TokenMgrError#LexicalError(boolean, int, int, int, String, char)->String:::Returns a detailed message for the Error when it is thrown by the token manager to indicate a lexical error
com.sun.tools.example.debug.expr.TokenMgrError#getMessage()->String:::You can also modify the body of this method to customize your error messages
