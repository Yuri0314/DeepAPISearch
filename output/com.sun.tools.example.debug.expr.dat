ASCII_UCodeESC_CharStream#adjustBeginLineColumn(int, int):::Method to adjust line and column numbers for the start of a token.<BR>:::start->len->if->else->i->j->k->nextColDiff->columnDiff->while->if->while->if->else
ExpressionParser#ReInit(java.io.InputStream):::Reinitialise.:::ReInit
ExpressionParser#ReInit(java.io.InputStream, String):::Reinitialise.:::try->jj_input_stream->ReInit->catch->throw->new->RuntimeException->finally->token_source->ReInit->new->Token->for->i->for->i
ExpressionParser#ReInit(java.io.Reader):::Reinitialise.:::jj_input_stream->ReInit->token_source->ReInit->new->Token->for->i->for->i
ExpressionParser#ReInit(ExpressionParserTokenManager):::Reinitialise.:::new->Token->for->i->for->i
ExpressionParser#getNextToken():::Get the next Token.:::if->else->token_source->getNextToken->return
ExpressionParser#getToken(int):::Get the specific Token.:::t->for->i->return
ExpressionParser#generateParseException():::Generate ParseException.:::jj_expentries->clear->la1tokens->new->booleanArr->if->for->i->for->i->jj_rescan_token->jj_add_error_token->exptokseq->jj_expentries->size->new->intArrs->for->i->jj_expentries->size->return->new->ParseException
ExpressionParser#enable_tracing():::Enable tracing.:::
ExpressionParser#disable_tracing():::Disable tracing.:::
ExpressionParserTokenManager#setDebugStream(java.io.PrintStream):::Set debug output.:::
ExpressionParserTokenManager#ReInit(JavaCharStream):::Reinitialise parser.:::ReInitRounds
ExpressionParserTokenManager#ReInit(JavaCharStream, int):::Reinitialise parser.:::ReInit->SwitchTo
ExpressionParserTokenManager#SwitchTo(int):::Switch to specified lex state.:::if->throw->new->TokenMgrError->else
ExpressionParserTokenManager#getNextToken():::Get the next Token.:::specialToken->matchedToken->curPos->for
JavaCharStream#readChar():::Read a character.:::if->if->return->c->if->AdjustBuffSize->if->ReadByte->UpdateLineColumn->backSlashCnt->for->try->while->ReadByte->hexval->ReadByte->hexval->ReadByte->hexval->ReadByte->hexval->catch->throw->new->Error->finally->if->return->else->backup->return->else->UpdateLineColumn->return
JavaCharStream#getEndColumn():::Get end column.:::return
JavaCharStream#getEndLine():::Get end line.:::return
JavaCharStream#backup(int):::Retreat.:::if
JavaCharStream#ReInit(java.io.Reader, int, int, int):::Reinitialise.:::if->new->charArr->new->intArr->new->intArr->new->charArr
JavaCharStream#ReInit(java.io.Reader, int, int):::Reinitialise.:::ReInit
JavaCharStream#ReInit(java.io.Reader):::Reinitialise.:::ReInit
JavaCharStream#ReInit(java.io.InputStream, String, int, int, int):::Reinitialise.:::new->java.io.InputStreamReader->new->java.io.InputStreamReader->ReInit
JavaCharStream#ReInit(java.io.InputStream, int, int, int):::Reinitialise.:::new->java.io.InputStreamReader->ReInit
JavaCharStream#ReInit(java.io.InputStream, String, int, int):::Reinitialise.:::ReInit
JavaCharStream#ReInit(java.io.InputStream, int, int):::Reinitialise.:::ReInit
JavaCharStream#ReInit(java.io.InputStream, String):::Reinitialise.:::ReInit
JavaCharStream#ReInit(java.io.InputStream):::Reinitialise.:::ReInit
JavaCharStream#Done():::Set buffers back to null when finished.:::
JavaCharStream#adjustBeginLineColumn(int, int):::Method to adjust line and column numbers for the start of a token.:::start->len->if->else->i->j->k->nextColDiff->columnDiff->while->if->while->if->else
ParseException#add_escapes(String):::Used to convert raw characters to their escaped version when these raw version cannot be used as part of an ASCII string literal.:::retval->new->StringBuilder->ch->for->i->str->length->return->retval->toString
Token#getValue():::An optional attribute value of the Token:::return
Token#toString():::Returns the image.:::return
Token#newToken(int, String):::Returns a new Token object, by default:::switch->return->new->Token
TokenMgrError#addEscapes(String):::Replaces unprintable characters by their escaped (or unicode escaped) equivalents in the given string:::retval->new->StringBuilder->ch->for->i->str->length->return->retval->toString
TokenMgrError#LexicalError(boolean, int, int, int, String, char):::Returns a detailed message for the Error when it is thrown by the token manager to indicate a lexical error:::return->String->valueOf->addEscapes->addEscapes
TokenMgrError#getMessage():::You can also modify the body of this method to customize your error messages:::return->super->getMessage
