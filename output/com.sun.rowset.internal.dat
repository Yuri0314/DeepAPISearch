BaseRow#getOrigRow():::Retrieves the values that this row contained immediately prior to its last modification.:::origRow->return->Arrays->copyOf
BaseRow#getColumnObject(int):::Retrieves the array element at the given index, which is the original value of column number idx in this row.:::
BaseRow#setColumnObject(int, Object):::Sets the element at the given index into this row's array of original values to the given value:::
CachedRowSetReader#readData(RowSetInternal):::Reads data from a data source and populates the given RowSet object with that data:::con->try->crs->if->crs->getPageSize->crs->size->crs->close->this->connect->if->crs->getCommand->throw->resBundle->handleGetObject->toString->new->SQLException->try->con->crs->getTransactionIsolation->setTransactionIsolation->catch->finally->pstmt->con->crs->getCommand->prepareStatement->caller->getParams->decodeParams->try->pstmt->crs->getMaxRows->setMaxRows->pstmt->crs->getMaxFieldSize->setMaxFieldSize->pstmt->crs->getEscapeProcessing->setEscapeProcessing->pstmt->crs->getQueryTimeout->setQueryTimeout->catch->throw->ex->getMessage->new->SQLException->finally->if->crs->getCommand->toLowerCase->indexOf->rs->pstmt->executeQuery->if->crs->getPageSize->crs->populate->else->con->crs->getCommand->prepareStatement->caller->getParams->decodeParams->try->pstmt->crs->getMaxRows->setMaxRows->pstmt->crs->getMaxFieldSize->setMaxFieldSize->pstmt->crs->getEscapeProcessing->setEscapeProcessing->pstmt->crs->getQueryTimeout->setQueryTimeout->catch->throw->ex->getMessage->new->SQLException->finally->pstmt->executeQuery->crs->populate->rs->close->else->pstmt->executeUpdate->pstmt->close->try->con->commit->catch->finally->if->getCloseConnection->con->close->catch->throw->finally->try->if->getCloseConnection->try->if->con->getAutoCommit->con->rollback->catch->finally->con->close->catch->finally
CachedRowSetReader#reset():::Checks to see if the writer associated with this reader needs to reset its state:::return
CachedRowSetReader#connect(RowSetInternal):::Establishes a connection with the data source for the given RowSet object:::if->caller->getConnection->return->caller->getConnection->else->if->getDataSourceName->try->ctx->new->InitialContext->ds->ctx->getDataSourceName->lookup->if->getUsername->return->ds->getUsername->getPassword->getConnection->else->return->ds->getConnection->catch->sqlEx->resBundle->handleGetObject->toString->new->SQLException->sqlEx->initCause->throw->finally->else->if->getUrl->return->DriverManager->getUrl->getUsername->getPassword->getConnection->else->return
CachedRowSetReader#decodeParams(Object[], PreparedStatement):::Sets the parameter placeholders in the rowset's command (the given PreparedStatement object) with the parameters in the given array:::arraySize->param->for->i
CachedRowSetReader#getCloseConnection():::Assists in determining whether the current connection was created by this CachedRowSet to ensure incorrect connections are not prematurely terminated.:::if->return->return
CachedRowSetReader#setStartPosition(int)::: This sets the start position in the ResultSet from where to begin:::
CachedRowSetReader#readObject(ObjectInputStream)::: cached row set reader read object:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
CachedRowSetWriter#writeData(RowSetInternal):::Propagates changes in the given RowSet object back to its underlying data source and returns true if successful:::conflicts->showDel->pstmtIns->crs->new->CachedRowSetImpl->reader->connect->if->throw->resBundle->handleGetObject->toString->new->SQLException->initSQLStatements->iColCount->rsmdWrite->crs->getMetaData->rsmdResolv->new->RowSetMetaDataImpl->rsmdWrite->getColumnCount->sz->crs->size->new->ArrayList<>->status->add->rsmdResolv->setColumnCount->for->i->setMetaData->if->if->reader->getCloseConnection->con->close->return->crs->getShowDeleted->crs->setShowDeleted->crs->beforeFirst->rows->while->crs->next->if->crs->rowDeleted->if->deleteOriginalRow->status->add->else->status->add->else->if->crs->rowInserted->con->prepareStatement->if->insertNewRow->status->add->else->status->add->else->if->crs->rowUpdated->if->updateOriginalRow->status->add->else->status->add->else->icolCount->crs->getMetaData->getColumnCount->status->add->moveToInsertRow->for->cols->insertRow->moveToCurrentRow->if->pstmtIns->close->crs->setShowDeleted->crs->beforeFirst->beforeFirst->if->spe->resBundle->handleGetObject->toString->new->SyncProviderException->syncResImpl->spe->getSyncResolver->syncResImpl->setCachedRowSet->syncResImpl->setCachedRowSetResolver->syncResImpl->setStatus->syncResImpl->setCachedRowSetWriter->throw->else->return
CachedRowSetWriter#updateOriginalRow(CachedRowSet):::Updates the given CachedRowSet object's underlying data source so that updates to the rowset are reflected in the original data source, and returns false if the update was successful:::pstmt->i->idx->origVals->crs->getOriginalRow->origVals->next->try->buildWhereClause->tempselectCmd->selectCmd->toLowerCase->idxWhere->tempselectCmd->indexOf->if->tempSelect->selectCmd->substring->con->prepareStatement->for->try->pstmt->crs->getMaxRows->setMaxRows->pstmt->crs->getMaxFieldSize->setMaxFieldSize->pstmt->crs->getEscapeProcessing->setEscapeProcessing->pstmt->crs->getQueryTimeout->setQueryTimeout->catch->finally->rs->pstmt->executeQuery->rsmd->rs->getMetaData->if->rs->next->if->rs->next->return->rs->first->colsNotChanged->cols->new->Vector<>->updateExec->orig->curr->rsval->boolNull->objVal->first->flag->moveToInsertRow->for->rs->close->pstmt->close->insertRow->moveToCurrentRow->if->cols->size->return->if->return->con->prepareStatement->for->cols->size->for->pstmt->executeUpdate->return->else->return->catch->ex->printStackTrace->moveToInsertRow->for->insertRow->moveToCurrentRow->return->finally
CachedRowSetWriter#insertNewRow(CachedRowSet, PreparedStatement, CachedRowSetImpl):::Inserts a row that has been inserted into the given CachedRowSet object into the data source from which the rowset is derived, returning false if the insertion was successful.:::returnVal->try->pstmtSel->con->prepareStatement->rs->pstmtSel->executeQuery->rs2->con->getMetaData->crs->getTableName->getPrimaryKeys->rsmd->crs->getMetaData->icolCount->rsmd->getColumnCount->primaryKeys->new->StringArr->k->while->rs2->next->rs2->getString->if->rs->next->foreach->if->isPKNameValid->continue->crsPK->crs->getObject->if->break->rsPK->rs->getObject->toString->if->crsPK->toString->equals->moveToInsertRow->for->i->insertRow->moveToCurrentRow->if->return->try->for->i->pstmt->executeUpdate->return->catch->moveToInsertRow->for->i->insertRow->moveToCurrentRow->return->finally->catch->finally
CachedRowSetWriter#deleteOriginalRow(CachedRowSet, CachedRowSetImpl):::Deletes the row in the underlying data source that corresponds to a row that has been deleted in the given CachedRowSet object and returns false if the deletion was successful:::pstmt->i->idx->strSelect->origVals->crs->getOriginalRow->origVals->next->buildWhereClause->con->prepareStatement->for->try->pstmt->crs->getMaxRows->setMaxRows->pstmt->crs->getMaxFieldSize->setMaxFieldSize->pstmt->crs->getEscapeProcessing->setEscapeProcessing->pstmt->crs->getQueryTimeout->setQueryTimeout->catch->finally->rs->pstmt->executeQuery->if->rs->next->if->rs->next->return->rs->first->boolChanged->crsRes->moveToInsertRow->for->crs->getMetaData->getColumnCount->crsRes->insertRow->crsRes->moveToCurrentRow->if->return->else->cmd->con->prepareStatement->for->if->pstmt->executeUpdate->return->pstmt->close->else->return->return
CachedRowSetWriter#setReader(CachedRowSetReader):::Sets the reader for this writer to the given reader.:::
CachedRowSetWriter#getReader():::Gets the reader for this writer.:::return
CachedRowSetWriter#initSQLStatements(CachedRowSet):::Composes a SELECT, UPDATE, INSERT, and DELETE statement that can be used by this writer to write data to the data source backing the given CachedRowSet object.:::i->caller->getMetaData->callerMd->getColumnCount->if->return->table->caller->getTableName->if->callerMd->getTableName->if->table->length->throw->resBundle->handleGetObject->toString->new->SQLException->catalog->callerMd->getCatalogName->schema->callerMd->getSchemaName->dbmd->con->getMetaData->for->buildTableName->buildTableName->tempupdCmd->updateCmd->toLowerCase->idxupWhere->tempupdCmd->indexOf->if->updateCmd->substring->buildTableName->for->for->buildTableName->buildKeyDesc
CachedRowSetWriter#buildTableName(DatabaseMetaData, String, String, String):::Returns a fully qualified table name built from the given catalog and table names:::cmd->catalog->trim->schema->trim->table->trim->if->dbmd->isCatalogAtStart->if->catalog->length->dbmd->getCatalogSeparator->if->schema->length->else->if->schema->length->if->catalog->length->dbmd->getCatalogSeparator->return
CachedRowSetWriter#buildKeyDesc(CachedRowSet):::Assigns to the given CachedRowSet object's params field an array whose length equals the number of columns needed to uniquely identify a row in the rowset:::crs->getKeyColumns->resultsetmd->crs->getMetaData->if->listKeys->new->ArrayList<Integer>->for->i->listKeys->size->new->intArr->for->i->listKeys->size->new->ObjectArr
CachedRowSetWriter#buildWhereClause(String, ResultSet):::Constructs an SQL WHERE clause using the given string as a starting point:::for->i->return
CachedRowSetWriter#updateResolvedConflictToDB(CachedRowSet, Connection)::: cached row set writer update resolved conflict to b:::pStmt->strWhere->strExec->strUpdate->icolCount->crs->getMetaData->getColumnCount->keyColumns->crs->getKeyColumns->param->strSet->buildWhereClause->if->new->intArr->for->i->new->ObjectArr->con->getMetaData->crs->getMetaData->getCatalogName->crs->getMetaData->getSchemaName->crs->getTableName->buildTableName->first->for->i->for->i->con->prepareStatement->idx->for->i->for->i->id->pStmt->executeUpdate
CachedRowSetWriter#commit()::: cached row set writer commit:::con->commit->if->reader->getCloseConnection->con->close
CachedRowSetWriter#commit(CachedRowSetImpl, boolean)::: cached row set writer commit:::con->commit->if->if->crs->getCommand->crs->execute->if->reader->getCloseConnection->con->close
CachedRowSetWriter#rollback()::: cached row set writer rollback:::con->rollback->if->reader->getCloseConnection->con->close
CachedRowSetWriter#rollback(Savepoint)::: cached row set writer rollback:::con->rollback->if->reader->getCloseConnection->con->close
CachedRowSetWriter#readObject(ObjectInputStream)::: cached row set writer read object:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
CachedRowSetWriter#isPKNameValid(String, ResultSetMetaData):::Validate whether the Primary Key is known to the CachedRowSet:::isValid->cols->rsmd->getColumnCount->for->i->return
InsertRow#markColInserted(int):::Sets the bit in this InsertRow object's internal BitSet object that corresponds to the specified column in this InsertRow object:::colsInserted->set
InsertRow#isCompleteRow(RowSetMetaData):::Indicates whether this InsertRow object has a value for every column that cannot be null.:::for->i->return
InsertRow#initInsertRow():::Clears all the bits in the internal BitSet object maintained by this InsertRow object:::for->i
InsertRow#getColumnObject(int):::Retrieves the value of the designated column in this InsertRow object:::if->colsInserted->get->throw->resBundle->handleGetObject->toString->new->SQLException->return
InsertRow#setColumnObject(int, Object):::Sets the element in this InsertRow object's internal array of original values that corresponds to the designated column with the given value:::markColInserted
InsertRow#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
Row#initColumnObject(int, Object):::This method is called internally by the CachedRowSet.populate methods.:::
Row#setColumnObject(int, Object):::This method is called internally by the CachedRowSet.updateXXX methods.:::setColUpdated
Row#getColumnObject(int):::Retrieves the column value stored in the designated column of this Row object.:::if->getColUpdated->return->else->return
Row#getColUpdated(int):::Indicates whether the designated column of this Row object has been changed.:::return->colsChanged->get
Row#setDeleted():::Sets this Row object's deleted field to true.:::
Row#getDeleted():::Retrieves the value of this Row object's deleted field, which will be true if one or more of its columns has been deleted.:::return
Row#clearDeleted():::Sets the deleted field for this Row object to false.:::
Row#setInserted():::Sets the value of this Row object's inserted field to true.:::
Row#getInserted():::Retrieves the value of this Row object's inserted field, which will be true if this row has been inserted.:::return
Row#clearInserted():::Sets the inserted field for this Row object to false.:::
Row#getUpdated():::Retrieves the value of this Row object's updated field.:::return
Row#setUpdated():::Sets the updated field for this Row object to true if one or more of its column values has been changed.:::for->i
Row#setColUpdated(int):::Sets the bit at the given index into this Row object's internal BitSet object, indicating that the corresponding column value (column idx + 1) has been changed.:::colsChanged->set
Row#clearUpdated():::Sets the updated field for this Row object to false, sets all the column values in this Row object's internal array of current values to null, and clears all of the bits in the BitSet object maintained by this Row object.:::for->i
Row#moveCurrentToOrig():::Sets the column values in this Row object's internal array of original values with the values in its internal array of current values, sets all the values in this Row object's internal array of current values to null, clears all the bits in this Row object's internal bitset, and sets its updated field to false:::for->i
Row#getCurrentRow():::Returns the row on which the cursor is positioned.:::return
SyncResolverImpl#getStatus():::Retrieves the conflict status of the current row of this SyncResolver, which indicates the operationthe RowSet object was attempting when the conflict occurred.:::return->stats->get->intValue
SyncResolverImpl#getConflictValue(int):::Retrieves the value in the designated column in the current row of this SyncResolver object, which is the value that caused a conflict.:::try->return->crsRes->getObject->catch->throw->sqle->getMessage->new->SQLException->finally
SyncResolverImpl#getConflictValue(String):::Retrieves the value in the designated column in the current row of this SyncResolver object, which is the value that caused a conflict.:::try->return->crsRes->getObject->catch->throw->sqle->getMessage->new->SQLException->finally
SyncResolverImpl#setResolvedValue(int, Object):::Sets obj as the value in column index in the current row of the RowSet object:::try->if->crsSync->getMetaData->getColumnCount->throw->resBundle->handleGetObject->toString->new->SQLException->if->crsRes->getObject->throw->resBundle->handleGetObject->toString->new->SQLException->catch->throw->sqle->getMessage->new->SQLException->finally->try->bool->if->crsSync->getObject->toString->obj->toString->equals->crsRes->getObject->toString->obj->toString->equals->crsRes->updateNull->crsRes->updateRow->if->row->size->buildCachedRow->row->updateObject->row->updateRow->for->j->crsRes->getMetaData->getColumnCount->if->try->writeData->catch->throw->resBundle->handleGetObject->toString->new->SQLException->finally->else->throw->resBundle->handleGetObject->toString->new->SQLException->catch->throw->sqle->getMessage->new->SQLException->finally
SyncResolverImpl#writeData(CachedRowSet):::This passes a CachedRowSet as a row to the CachedRowSetWriter after the values have been resolved, back to the datasource.:::crw->crw->getReader->connect->updateResolvedConflictToDB
SyncResolverImpl#buildCachedRow():::This function builds a row  as a CachedRowSet object which has been resolved and is ready to be synchrinized to the datasource:::iColCount->crsRow->new->CachedRowSetImpl->rsmd->new->RowSetMetaDataImpl->rsmdWrite->crsSync->getMetaData->rsmdRow->new->RowSetMetaDataImpl->rsmdWrite->getColumnCount->rsmdRow->setColumnCount->for->i->crsRow->setMetaData->crsRow->moveToInsertRow->for->col->crsSync->getMetaData->getColumnCount->crsRow->insertRow->crsRow->moveToCurrentRow->crsRow->absolute->crsRow->setOriginalRow->try->crsRow->crsSync->getUrl->setUrl->catch->finally->try->crsRow->crsSync->getCommand->setDataSourceName->catch->finally->try->if->crsSync->getTableName->crsRow->crsSync->getTableName->setTableName->catch->finally->try->if->crsSync->getCommand->crsRow->crsSync->getCommand->setCommand->catch->finally->try->crsRow->crsSync->getKeyColumns->setKeyColumns->catch->finally->return
SyncResolverImpl#setResolvedValue(String, Object):::Sets obj as the value in column columnName in the current row of the RowSet object:::
SyncResolverImpl#setCachedRowSet(CachedRowSet):::This function is package private, i.e:::
SyncResolverImpl#setCachedRowSetResolver(CachedRowSet):::This function is package private, i.e:::try->crsRes->afterLast->crsRes->size->catch->finally
SyncResolverImpl#setStatus(ArrayList):::This function is package private, i.e:::
SyncResolverImpl#setCachedRowSetWriter(CachedRowSetWriter):::This function is package private, i.e:::
SyncResolverImpl#nextConflict():::Moves the cursor down one row from its current position:::bool->crsSync->setShowDeleted->while->crsSync->next->crsRes->previous->if->stats->size->break->if->stats->get->intValue->else->break->crsSync->setShowDeleted->return
SyncResolverImpl#previousConflict():::Moves the cursor to the previous conflict row in this SyncResolver object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#setCommand(String):::Sets this CachedRowSetImpl object's command property to the given String object and clears the parameters, if any, that were set for the previous command:::throw->new->UnsupportedOperationException
SyncResolverImpl#populate(ResultSet):::Populates this CachedRowSetImpl object with data from the given ResultSet object:::throw->new->UnsupportedOperationException
SyncResolverImpl#execute(Connection):::Populates this CachedRowSetImpl object with data, using the given connection to produce the result set from which data will be read:::throw->new->UnsupportedOperationException
SyncResolverImpl#acceptChanges():::Propagates all row update, insert, and delete changes to the underlying data source backing this CachedRowSetImpl object:::throw->new->UnsupportedOperationException
SyncResolverImpl#acceptChanges(Connection):::Propagates all row update, insert, and delete changes to the data source backing this CachedRowSetImpl object using the given Connection object:::throw->new->UnsupportedOperationException
SyncResolverImpl#restoreOriginal():::Restores this CachedRowSetImpl object to its original state, that is, its state before the last set of changes:::throw->new->UnsupportedOperationException
SyncResolverImpl#release():::Releases the current contents of this CachedRowSetImpl object and sends a rowSetChanged event object to all registered listeners.:::throw->new->UnsupportedOperationException
SyncResolverImpl#undoDelete():::Cancels deletion of the current row and notifies listeners that a row has changed:::throw->new->UnsupportedOperationException
SyncResolverImpl#undoInsert():::Immediately removes the current row from this CachedRowSetImpl object if the row has been inserted, and also notifies listeners the a row has changed:::throw->new->UnsupportedOperationException
SyncResolverImpl#undoUpdate():::Immediately reverses the last update operation if the row has been modified:::throw->new->UnsupportedOperationException
SyncResolverImpl#createShared():::Returns a new RowSet object backed by the same data as that of this CachedRowSetImpl object and sharing a set of cursors with it:::throw->new->UnsupportedOperationException
SyncResolverImpl#clone():::Returns a new RowSet object containing by the same data as this CachedRowSetImpl object:::throw->new->UnsupportedOperationException
SyncResolverImpl#createCopy():::Creates a RowSet object that is a deep copy of this CachedRowSetImpl object's data, including constraints:::throw->new->UnsupportedOperationException
SyncResolverImpl#createCopySchema():::Creates a RowSet object that is a copy of this CachedRowSetImpl object's table structure and the constraints only:::throw->new->UnsupportedOperationException
SyncResolverImpl#createCopyNoConstraints():::Creates a CachedRowSet object that is a copy of this CachedRowSetImpl object's data only:::throw->new->UnsupportedOperationException
SyncResolverImpl#toCollection():::Converts this CachedRowSetImpl object to a collection of tables:::throw->new->UnsupportedOperationException
SyncResolverImpl#toCollection(int):::Returns the specified column of this CachedRowSetImpl object as a Collection object:::throw->new->UnsupportedOperationException
SyncResolverImpl#toCollection(String):::Returns the specified column of this CachedRowSetImpl object as a Collection object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getSyncProvider():::Returns the SyncProvider implementation being used with this CachedRowSetImpl implementation rowset.:::throw->new->UnsupportedOperationException
SyncResolverImpl#setSyncProvider(String):::Sets the active SyncProvider and attempts to load load the new provider using the SyncFactory SPI.:::throw->new->UnsupportedOperationException
SyncResolverImpl#execute():::Populates this CachedRowSetImpl object with data:::throw->new->UnsupportedOperationException
SyncResolverImpl#next():::Moves the cursor down one row from its current position and returns true if the new cursor position is a valid row:::throw->new->UnsupportedOperationException
SyncResolverImpl#internalNext():::Moves this CachedRowSetImpl object's cursor to the next row and returns true if the cursor is still in the rowset; returns false if the cursor has moved to the position after the last row:::throw->new->UnsupportedOperationException
SyncResolverImpl#close():::Closes this CachedRowSetImpl objecy and releases any resources it was using.:::throw->new->UnsupportedOperationException
SyncResolverImpl#wasNull():::Reports whether the last column read was SQL NULL:::throw->new->UnsupportedOperationException
SyncResolverImpl#getCurrentRow():::Returns the insert row or the current row of this CachedRowSetImplobject.:::throw->new->UnsupportedOperationException
SyncResolverImpl#removeCurrentRow():::Removes the row on which the cursor is positioned:::throw->new->UnsupportedOperationException
SyncResolverImpl#getString(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a String object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBoolean(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a boolean value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getByte(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a byte value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getShort(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a short value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getInt(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as an int value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getLong(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a long value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getFloat(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a float value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getDouble(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a double value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBigDecimal(int, int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.math.BigDecimal object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBytes(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a byte array value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getDate(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Date object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTime(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Time object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTimestamp(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Timestamp object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getAsciiStream(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.io.InputStream object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getUnicodeStream(int):::A column value can be retrieved as a stream of Unicode characters and then read in chunks from the stream:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBinaryStream(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.io.InputStream object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getString(String):::Retrieves the value stored in the designated column of the current row as a String object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBoolean(String):::Retrieves the value stored in the designated column of the current row as a boolean value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getByte(String):::Retrieves the value stored in the designated column of the current row as a byte value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getShort(String):::Retrieves the value stored in the designated column of the current row as a short value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getInt(String):::Retrieves the value stored in the designated column of the current row as an int value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getLong(String):::Retrieves the value stored in the designated column of the current row as a long value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getFloat(String):::Retrieves the value stored in the designated column of the current row as a float value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getDouble(String):::Retrieves the value stored in the designated column of the current row of this CachedRowSetImpl object as a double value.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBigDecimal(String, int):::Retrieves the value stored in the designated column of the current row as a java.math.BigDecimal object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBytes(String):::Retrieves the value stored in the designated column of the current row as a byte array:::throw->new->UnsupportedOperationException
SyncResolverImpl#getDate(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Date object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTime(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Time object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTimestamp(String):::Retrieves the value stored in the designated column of the current row as a java.sql.Timestamp object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getAsciiStream(String):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.io.InputStream object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getUnicodeStream(String):::A column value can be retrieved as a stream of Unicode characters and then read in chunks from the stream:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBinaryStream(String):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.io.InputStream object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getWarnings():::The first warning reported by calls on this CachedRowSetImpl object is returned:::throw->new->UnsupportedOperationException
SyncResolverImpl#clearWarnings():::Clears all the warnings reporeted for the CachedRowSetImpl object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getCursorName():::Retrieves the name of the SQL cursor used by this CachedRowSetImpl object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getMetaData():::Retrieves a ResultSetMetaData object instance that contains information about the CachedRowSet object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getObject(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as an Object value:::throw->new->UnsupportedOperationException
SyncResolverImpl#getObject(String):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as an Object value:::throw->new->UnsupportedOperationException
SyncResolverImpl#findColumn(String):::Maps the given column name for one of this CachedRowSetImpl object's columns to its column number.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getCharacterStream(int):::Retrieves the value stored in the designated column of the current row as a java.io.Reader object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getCharacterStream(String):::Retrieves the value stored in the designated column of the current row as a java.io.Reader object:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBigDecimal(int):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.math.BigDecimal object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBigDecimal(String):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.math.BigDecimal object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#size():::Returns the number of rows in this CachedRowSetImpl object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#isBeforeFirst():::Indicates whether the cursor is before the first row in this CachedRowSetImpl object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#isAfterLast():::Indicates whether the cursor is after the last row in this CachedRowSetImpl object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#isFirst():::Indicates whether the cursor is on the first row in this CachedRowSetImpl object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#isLast():::Indicates whether the cursor is on the last row in this CachedRowSetImpl object:::throw->new->UnsupportedOperationException
SyncResolverImpl#beforeFirst():::Moves this CachedRowSetImpl object's cursor to the front of the rowset, just before the first row:::throw->new->UnsupportedOperationException
SyncResolverImpl#afterLast():::Moves this CachedRowSetImpl object's cursor to the end of the rowset, just after the last row:::throw->new->UnsupportedOperationException
SyncResolverImpl#first():::Moves this CachedRowSetImpl object's cursor to the first row and returns true if the operation was successful:::throw->new->UnsupportedOperationException
SyncResolverImpl#internalFirst():::Moves this CachedRowSetImpl object's cursor to the first row and returns true if the operation is successful:::throw->new->UnsupportedOperationException
SyncResolverImpl#last():::Moves this CachedRowSetImpl object's cursor to the last row and returns true if the operation was successful:::throw->new->UnsupportedOperationException
SyncResolverImpl#internalLast():::Moves this CachedRowSetImpl object's cursor to the last row and returns true if the operation is successful:::throw->new->UnsupportedOperationException
SyncResolverImpl#getRow():::Returns the number of the current row in this CachedRowSetImpl object:::return->crsSync->getRow
SyncResolverImpl#absolute(int):::Moves this CachedRowSetImpl object's cursor to the row number specified:::throw->new->UnsupportedOperationException
SyncResolverImpl#relative(int):::Moves the cursor the specified number of rows from the current position, with a positive number moving it forward and a negative number moving it backward:::throw->new->UnsupportedOperationException
SyncResolverImpl#previous():::Moves this CachedRowSetImpl object's cursor to the previous row and returns true if the cursor is on a valid row or false if it is not:::throw->new->UnsupportedOperationException
SyncResolverImpl#internalPrevious():::Moves the cursor to the previous row in this CachedRowSetImpl object, skipping past deleted rows that are not visible; returns true if the cursor is on a row in this rowset and false when the cursor goes before the first row:::throw->new->UnsupportedOperationException
SyncResolverImpl#rowUpdated():::Indicates whether the current row of this CachedRowSetImpl object has been updated:::throw->new->UnsupportedOperationException
SyncResolverImpl#columnUpdated(int):::Indicates whether the designated column of the current row of this CachedRowSetImpl object has been updated:::throw->new->UnsupportedOperationException
SyncResolverImpl#columnUpdated(String):::Indicates whether the designated column of the current row of this CachedRowSetImpl object has been updated:::throw->new->UnsupportedOperationException
SyncResolverImpl#rowInserted():::Indicates whether the current row has been inserted:::throw->new->UnsupportedOperationException
SyncResolverImpl#rowDeleted():::Indicates whether the current row has been deleted:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateNull(int):::Sets the designated nullable column in the current row or the insert row of this CachedRowSetImpl object with null value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBoolean(int, boolean):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given boolean value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateByte(int, byte):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateShort(int, short):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given short value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateInt(int, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given int value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateLong(int, long):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given long value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateFloat(int, float):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given float value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateDouble(int, double):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBigDecimal(int, BigDecimal):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.math.BigDecimal object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateString(int, String):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given String object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBytes(int, byte[]):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte array:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateDate(int, java.sql.Date):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Date object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateTime(int, java.sql.Time):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Time object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateTimestamp(int, java.sql.Timestamp):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Timestamp object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateAsciiStream(int, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given ASCII stream value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBinaryStream(int, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.InputStream object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateCharacterStream(int, java.io.Reader, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.Reader object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateObject(int, Object, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateObject(int, Object):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateNull(String):::Sets the designated nullable column in the current row or the insert row of this CachedRowSetImpl object with null value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBoolean(String, boolean):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given boolean value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateByte(String, byte):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateShort(String, short):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given short value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateInt(String, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given int value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateLong(String, long):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given long value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateFloat(String, float):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given float value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateDouble(String, double):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBigDecimal(String, BigDecimal):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.math.BigDecimal object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateString(String, String):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given String object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBytes(String, byte[]):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given byte array:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateDate(String, java.sql.Date):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Date object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateTime(String, java.sql.Time):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Time object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateTimestamp(String, java.sql.Timestamp):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Timestamp object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateAsciiStream(String, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given ASCII stream value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBinaryStream(String, java.io.InputStream, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.InputStream object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateCharacterStream(String, java.io.Reader, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.io.Reader object:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateObject(String, Object, int):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateObject(String, Object):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given Object value:::throw->new->UnsupportedOperationException
SyncResolverImpl#insertRow():::Inserts the contents of this CachedRowSetImpl object's insert row into this rowset immediately following the current row:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateRow():::Marks the current row of this CachedRowSetImpl object as updated and notifies listeners registered with this rowset that the row has changed:::throw->new->UnsupportedOperationException
SyncResolverImpl#deleteRow():::Deletes the current row from this CachedRowSetImpl object and notifies listeners registered with this rowset that a row has changed:::throw->new->UnsupportedOperationException
SyncResolverImpl#refreshRow():::Sets the current row with its original value and marks the row as not updated, thus undoing any changes made to the row since the last call to the methods updateRow or deleteRow:::throw->new->UnsupportedOperationException
SyncResolverImpl#cancelRowUpdates():::Rolls back any updates made to the current row of this CachedRowSetImpl object and notifies listeners that a row has changed:::throw->new->UnsupportedOperationException
SyncResolverImpl#moveToInsertRow():::Moves the cursor for this CachedRowSetImpl object to the insert row:::throw->new->UnsupportedOperationException
SyncResolverImpl#moveToCurrentRow():::Moves the cursor for this CachedRowSetImpl object to the current row:::throw->new->UnsupportedOperationException
SyncResolverImpl#getStatement():::Returns null.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getObject(int, java.util.Map>):::Retrieves the value of the designated column in this CachedRowSetImpl object as an Object in the Java programming language, using the given java.util.Map object to custom map the value if appropriate.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getRef(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Ref object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBlob(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Blob object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getClob(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Clob object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getArray(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as an Array object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getObject(String, java.util.Map>):::Retrieves the value of the designated column in this CachedRowSetImpl object as an Object in the Java programming language, using the given java.util.Map object to custom map the value if appropriate.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getRef(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Ref object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getBlob(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Blob object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getClob(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as a Clob object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getArray(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as an Array object in the Java programming langugage.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getDate(int, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Date object, using the given Calendar object to construct an appropriate millisecond value for the date.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getDate(String, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Date object, using the given Calendar object to construct an appropriate millisecond value for the date.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTime(int, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Time object, using the given Calendar object to construct an appropriate millisecond value for the date.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTime(String, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Time object, using the given Calendar object to construct an appropriate millisecond value for the date.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTimestamp(int, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Timestamp object, using the given Calendar object to construct an appropriate millisecond value for the date.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTimestamp(String, Calendar):::Retrieves the value of the designated column in the current row of this CachedRowSetImpl object as a java.sql.Timestamp object, using the given Calendar object to construct an appropriate millisecond value for the date.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getConnection():::Retrieves the Connection object passed to this CachedRowSetImpl object:::throw->new->UnsupportedOperationException
SyncResolverImpl#setMetaData(RowSetMetaData):::Sets the metadata for this CachedRowSetImpl object with the given RowSetMetaData object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getOriginal():::Returns a result set containing the original value of the rowset:::throw->new->UnsupportedOperationException
SyncResolverImpl#getOriginalRow():::Returns a result set containing the original value of the current row only:::throw->new->UnsupportedOperationException
SyncResolverImpl#setOriginalRow():::Marks the current row in this rowset as being an original row.:::throw->new->UnsupportedOperationException
SyncResolverImpl#setOriginal():::Marks all rows in this rowset as being original rows:::throw->new->UnsupportedOperationException
SyncResolverImpl#getTableName():::Returns an identifier for the object (table) that was used to create this rowset.:::throw->new->UnsupportedOperationException
SyncResolverImpl#setTableName(String):::Sets the identifier for the table from which this rowset was derived to the given table name.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getKeyColumns():::Returns the columns that make a key to uniquely identify a row in this CachedRowSetImpl object.:::throw->new->UnsupportedOperationException
SyncResolverImpl#setKeyColumns(int[]):::Sets this CachedRowSetImpl object's keyCols field with the given array of column numbers, which forms a key for uniquely identifying a row in this rowset.:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateRef(int, java.sql.Ref):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateRef(String, java.sql.Ref):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateClob(int, Clob):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateClob(String, Clob):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given double value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBlob(int, Blob):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.sql.Blob value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateBlob(String, Blob):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.sql.Blob  value:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateArray(int, Array):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.sql.Array values:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateArray(String, Array):::Sets the designated column in either the current row or the insert row of this CachedRowSetImpl object with the given java.sql.Array value:::throw->new->UnsupportedOperationException
SyncResolverImpl#getURL(int):::Retrieves the value of the designated column in this CachedRowSetImpl object as a java.net.URL object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getURL(String):::Retrieves the value of the designated column in this CachedRowSetImpl object as a java.net.URL object in the Java programming language.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getRowSetWarnings():::The first warning reported by calls on this CachedRowSetImpl object is returned:::throw->new->UnsupportedOperationException
SyncResolverImpl#commit():::Commits all changes performed by the acceptChanges() methods:::throw->new->UnsupportedOperationException
SyncResolverImpl#rollback():::Rolls back all changes performed by the acceptChanges() methods:::throw->new->UnsupportedOperationException
SyncResolverImpl#rollback(Savepoint):::Rolls back all changes performed by the acceptChanges() to the last Savepoint transaction marker.:::throw->new->UnsupportedOperationException
SyncResolverImpl#unsetMatchColumn(int[]):::Unsets the designated parameter to the given int array:::throw->new->UnsupportedOperationException
SyncResolverImpl#unsetMatchColumn(String[]):::Unsets the designated parameter to the given String array:::throw->new->UnsupportedOperationException
SyncResolverImpl#getMatchColumnNames():::Retrieves the column name as String array that was set using setMatchColumn(String []) for this rowset.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getMatchColumnIndexes():::Retrieves the column id as int array that was set using setMatchColumn(int []) for this rowset.:::throw->new->UnsupportedOperationException
SyncResolverImpl#setMatchColumn(int[]):::Sets the designated parameter to the given int array:::throw->new->UnsupportedOperationException
SyncResolverImpl#setMatchColumn(String[]):::Sets the designated parameter to the given String array:::throw->new->UnsupportedOperationException
SyncResolverImpl#setMatchColumn(int):::Sets the designated parameter to the given int object:::throw->new->UnsupportedOperationException
SyncResolverImpl#setMatchColumn(String):::Sets the designated parameter to the given String object:::throw->new->UnsupportedOperationException
SyncResolverImpl#unsetMatchColumn(int):::Unsets the designated parameter to the given int object:::throw->new->UnsupportedOperationException
SyncResolverImpl#unsetMatchColumn(String):::Unsets the designated parameter to the given String object:::throw->new->UnsupportedOperationException
SyncResolverImpl#rowSetPopulated(RowSetEvent, int):::Notifies registered listeners that a RowSet object in the given RowSetEvent object has populated a number of additional rows:::throw->new->UnsupportedOperationException
SyncResolverImpl#populate(ResultSet, int):::Populates this CachedRowSet object with data from the given ResultSet object:::throw->new->UnsupportedOperationException
SyncResolverImpl#nextPage():::The nextPage gets the next page, that is a CachedRowSetImpl object containing the number of rows specified by page size.:::throw->new->UnsupportedOperationException
SyncResolverImpl#setPageSize(int):::This is the setter function for setting the size of the page, which specifies how many rows have to be retrived at a time.:::throw->new->UnsupportedOperationException
SyncResolverImpl#getPageSize():::This is the getter function for the size of the page.:::throw->new->UnsupportedOperationException
SyncResolverImpl#previousPage():::Retrieves the data present in the page prior to the page from where it is called.:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateNCharacterStream(int, java.io.Reader, int):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->new->UnsupportedOperationException
SyncResolverImpl#updateNCharacterStream(String, java.io.Reader, int):::Updates the designated column with a character stream value, which will have the specified number of bytes:::throw->new->UnsupportedOperationException
SyncResolverImpl#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
WebRowSetXmlReader#readXML(WebRowSet, java.io.Reader):::Parses the given WebRowSet object, getting its input from the given java.io.Reader object:::try->is->new->InputSource->dh->new->XmlErrorHandler->hndr->new->XmlReaderContentHandler->factory->SAXParserFactory->newInstance->factory->setNamespaceAware->factory->setValidating->parser->factory->newSAXParser->parser->setProperty->reader1->parser->getXMLReader->reader1->new->XmlResolver->setEntityResolver->reader1->setContentHandler->reader1->setErrorHandler->reader1->parse->catch->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->err->getMessage->err->getLineNumber->err->getSystemId->format->println->err->printStackTrace->throw->err->getMessage->new->SQLException->x->if->e->getException->e->getException->x->printStackTrace->throw->x->getMessage->new->SQLException->throw->resBundle->handleGetObject->toString->new->SQLException->throw->MessageFormat->resBundle->handleGetObject->toString->e->getMessage->format->new->SQLException->finally
WebRowSetXmlReader#readXML(WebRowSet, java.io.InputStream):::Parses the given WebRowSet object, getting its input from the given java.io.InputStream object:::try->is->new->InputSource->dh->new->XmlErrorHandler->hndr->new->XmlReaderContentHandler->factory->SAXParserFactory->newInstance->factory->setNamespaceAware->factory->setValidating->parser->factory->newSAXParser->parser->setProperty->reader1->parser->getXMLReader->reader1->new->XmlResolver->setEntityResolver->reader1->setContentHandler->reader1->setErrorHandler->reader1->parse->catch->MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->err->getLineNumber->err->getSystemId->format->println->err->getMessage->println->err->printStackTrace->throw->err->getMessage->new->SQLException->x->if->e->getException->e->getException->x->printStackTrace->throw->x->getMessage->new->SQLException->throw->resBundle->handleGetObject->toString->new->SQLException->throw->MessageFormat->resBundle->handleGetObject->toString->e->getMessage->format->new->SQLException->finally
WebRowSetXmlReader#readData(RowSetInternal)::: web row set xml reader read data:::
WebRowSetXmlReader#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
WebRowSetXmlWriter#writeXML(WebRowSet, java.io.Writer):::Writes the given WebRowSet  object as an XML document using the given java.io.Writer  object:::new->java.util.Stack<>->writeRowSet
WebRowSetXmlWriter#writeXML(WebRowSet, java.io.OutputStream):::Writes the given WebRowSet  object as an XML document using the given java.io.OutputStream  object:::new->java.util.Stack<>->new->OutputStreamWriter->writeRowSet
WebRowSetXmlWriter#writeRowSet(WebRowSet)::: web row set xml writer write row set:::try->startHeader->writeProperties->writeMetaData->writeData->endHeader->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SQLException->finally
WebRowSetXmlWriter#startHeader()::: web row set xml writer start header:::setTag->writer->write->writer->write->writer->write
WebRowSetXmlWriter#endHeader()::: web row set xml writer end header:::endTag
WebRowSetXmlWriter#writeProperties(WebRowSet)::: web row set xml writer write properties:::beginSection->try->caller->getCommand->processSpecialCharacters->propString->caller->getConcurrency->propInteger->caller->getDataSourceName->propString->caller->getEscapeProcessing->propBoolean->try->caller->getFetchDirection->propInteger->catch->finally->caller->getFetchSize->propInteger->caller->getTransactionIsolation->propInteger->beginSection->kc->caller->getKeyColumns->for->i->endSection->beginSection->typeMap->caller->getTypeMap->if->foreach->typeMap->entrySet->mm->getKey->propString->mm->getValue->getName->propString->endSection->caller->getMaxFieldSize->propInteger->caller->getMaxRows->propInteger->caller->getQueryTimeout->propInteger->caller->isReadOnly->propBoolean->itype->caller->getType->strType->if->else->if->else->if->propString->caller->getShowDeleted->propBoolean->caller->getTableName->propString->caller->getUrl->propString->beginSection->strProviderInstance->caller->getSyncProvider->toString->strProvider->strProviderInstance->caller->getSyncProvider->toString->indexOf->substring->propString->propString->propString->caller->getSyncProvider->getProviderGrade->propInteger->caller->getSyncProvider->getDataSourceLock->propInteger->endSection->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->java.io.IOException->finally->endSection
WebRowSetXmlWriter#writeMetaData(WebRowSet)::: web row set xml writer write meta data:::columnCount->beginSection->try->rsmd->caller->getMetaData->rsmd->getColumnCount->propInteger->for->colIndex->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->java.io.IOException->finally->endSection
WebRowSetXmlWriter#writeData(WebRowSet)::: web row set xml writer write data:::rs->try->rsmd->caller->getMetaData->columnCount->rsmd->getColumnCount->i->beginSection->caller->beforeFirst->caller->setShowDeleted->while->caller->next->if->caller->rowDeleted->caller->rowInserted->beginSection->else->if->caller->rowDeleted->beginSection->else->if->caller->rowInserted->beginSection->else->beginSection->for->endSection->endSection->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->java.io.IOException->finally
WebRowSetXmlWriter#writeValue(int, RowSet)::: web row set xml writer write value:::try->type->caller->getMetaData->getColumnType->switch->b->caller->getBoolean->if->caller->wasNull->writeNull->else->writeBoolean->break->s->caller->getShort->if->caller->wasNull->writeNull->else->writeShort->break->i->caller->getInt->if->caller->wasNull->writeNull->else->writeInteger->break->l->caller->getLong->if->caller->wasNull->writeNull->else->writeLong->break->f->caller->getFloat->if->caller->wasNull->writeNull->else->writeFloat->break->d->caller->getDouble->if->caller->wasNull->writeNull->else->writeDouble->break->caller->getBigDecimal->writeBigDecimal->break->break->date->caller->getDate->if->caller->wasNull->writeNull->else->date->getTime->writeLong->break->time->caller->getTime->if->caller->wasNull->writeNull->else->time->getTime->writeLong->break->ts->caller->getTimestamp->if->caller->wasNull->writeNull->else->ts->getTime->writeLong->break->caller->getString->writeStringData->break->resBundle->handleGetObject->toString->println->catch->throw->resBundle->handleGetObject->toString->ex->getMessage->new->java.io.IOException->finally
WebRowSetXmlWriter#beginSection(String)::: web row set xml writer begin section:::setTag->stack->size->writeIndent->writer->write
WebRowSetXmlWriter#endSection(String)::: web row set xml writer end section:::stack->size->writeIndent->beginTag->getTag->if->beginTag->indexOf->if->tag->equals->writer->write->else->writer->flush
WebRowSetXmlWriter#endSection()::: web row set xml writer end section:::stack->size->writeIndent->beginTag->getTag->writer->write->writer->flush
WebRowSetXmlWriter#beginTag(String)::: web row set xml writer begin tag:::setTag->stack->size->writeIndent->writer->write
WebRowSetXmlWriter#endTag(String)::: web row set xml writer end tag:::beginTag->getTag->if->tag->equals->writer->write->else->writer->flush
WebRowSetXmlWriter#emptyTag(String)::: web row set xml writer empty tag:::writer->write
WebRowSetXmlWriter#setTag(String)::: web row set xml writer set tag:::stack->push
WebRowSetXmlWriter#getTag()::: web row set xml writer get tag:::return->stack->pop
WebRowSetXmlWriter#writeNull()::: web row set xml writer write null:::emptyTag
WebRowSetXmlWriter#writeStringData(String)::: web row set xml writer write string data:::if->writeNull->else->if->s->equals->writeEmptyString->else->processSpecialCharacters->writer->write
WebRowSetXmlWriter#writeString(String)::: web row set xml writer write string:::if->writer->write->else->writeNull
WebRowSetXmlWriter#writeShort(short)::: web row set xml writer write short:::writer->Short->toString->write
WebRowSetXmlWriter#writeLong(long)::: web row set xml writer write long:::writer->Long->toString->write
WebRowSetXmlWriter#writeInteger(int)::: web row set xml writer write integer:::writer->Integer->toString->write
WebRowSetXmlWriter#writeBoolean(boolean)::: web row set xml writer write boolean:::writer->Boolean->valueOf->toString->write
WebRowSetXmlWriter#writeFloat(float)::: web row set xml writer write float:::writer->Float->toString->write
WebRowSetXmlWriter#writeDouble(double)::: web row set xml writer write double:::writer->Double->toString->write
WebRowSetXmlWriter#writeBigDecimal(java.math.BigDecimal)::: web row set xml writer write big decimal:::if->writer->bd->toString->write->else->emptyTag
WebRowSetXmlWriter#writeIndent(int)::: web row set xml writer write indent:::for->i
WebRowSetXmlWriter#propString(String, String)::: web row set xml writer prop string:::beginTag->writeString->endTag
WebRowSetXmlWriter#propInteger(String, int)::: web row set xml writer prop integer:::beginTag->writeInteger->endTag
WebRowSetXmlWriter#propBoolean(String, boolean)::: web row set xml writer prop boolean:::beginTag->writeBoolean->endTag
WebRowSetXmlWriter#writeEmptyString()::: web row set xml writer write empty string:::emptyTag
WebRowSetXmlWriter#writeData(RowSetInternal):::Purely for code coverage purposes..:::return
WebRowSetXmlWriter#processSpecialCharacters(String)::: web row set xml writer process special characters:::if->return->charStr->s->toCharArray->specialStr->for->i->return
WebRowSetXmlWriter#readObject(ObjectInputStream):::This method re populates the resBundle during the deserialization process:::ois->defaultReadObject->try->JdbcRowSetResourceBundle->getJdbcRowSetResourceBundle->catch->throw->new->RuntimeException->finally
XmlErrorHandler#error(SAXParseException)::: xml error handler error:::
XmlErrorHandler#fatalError(SAXParseException)::: xml error handler fatal error:::
XmlErrorHandler#warning(SAXParseException)::: xml error handler warning:::
XmlReaderContentHandler#initMaps():::Creates and initializes three new HashMap objects that map the strings returned by the SAX parser to Integer objects:::items->i->new->HashMap<>->for->new->HashMap<>->for->new->HashMap<>->for->new->HashMap<>
XmlReaderContentHandler#startDocument()::: xml reader content handler start document:::
XmlReaderContentHandler#endDocument()::: xml reader content handler end document:::
XmlReaderContentHandler#startElement(String, String, String, Attributes):::Sets this XmlReaderContentHandler object's tag field if the given name is the key for a tag and this object's state is not INITIAL:::tag->name->switch->getState->propMap->get->if->setNullValue->else->setTag->break->colDefMap->get->if->setNullValue->else->setTag->break->if->dataMap->get->else->if->dataMap->get->else->dataMap->get->if->setNullValue->else->if->setEmptyStringValue->else->setTag->if->try->rs->moveToInsertRow->catch->finally->break->setState
XmlReaderContentHandler#endElement(String, String, String):::Sets the value for the given element if name is one of the array elements in the fields properties, colDef, or data and this XmlReaderContentHandler object's state is not INITIAL:::tag->name->switch->getState->if->name->equals->break->try->propMap->get->switch->if->i->keyCols->size->new->intArr->for->j->rs->setKeyColumns->break->try->typeMap->forName->put->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->break->rs->setTypeMap->break->break->if->getNullValue->setPropertyValue->setNullValue->else->setPropertyValue->catch->throw->ex->getMessage->new->SAXException->finally->setTag->break->if->name->equals->try->rs->setMetaData->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->else->try->if->getNullValue->setMetaDataValue->setNullValue->else->setMetaDataValue->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->setTag->break->if->name->equals->return->if->dataMap->get->else->dataMap->get->switch->try->if->getNullValue->insertValue->setNullValue->else->insertValue->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->break->try->rs->insertRow->rs->moveToCurrentRow->rs->next->rs->setOriginalRow->applyUpdates->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->break->try->rs->insertRow->rs->moveToCurrentRow->rs->next->rs->setOriginalRow->applyUpdates->rs->deleteRow->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->break->try->rs->insertRow->rs->moveToCurrentRow->rs->next->applyUpdates->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->break->try->rs->insertRow->rs->moveToCurrentRow->rs->next->rs->setOriginalRow->applyUpdates->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->break->try->if->getNullValue->insertValue->setNullValue->else->if->getEmptyStringValue->insertValue->setEmptyStringValue->else->updates->add->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->break->break->break
XmlReaderContentHandler#applyUpdates()::: xml reader content handler apply updates:::if->updates->size->try->upd->i->updates->iterator->while->i->hasNext->i->next->intValue->if->lastval->equals->insertValue->rs->updateRow->catch->throw->MessageFormat->resBundle->handleGetObject->toString->ex->getMessage->format->new->SAXException->finally->updates->removeAllElements
XmlReaderContentHandler#characters(char[], int, int):::Sets a property, metadata, or data value with the characters in the given array of characters, starting with the array element indicated by start and continuing for length number of characters:::try->switch->getState->new->String->tempCommand->concat->if->else->if->break->if->break->new->String->break->setDataValue->break->catch->throw->resBundle->handleGetObject->toString->ex->getMessage->new->SAXException->finally
XmlReaderContentHandler#setState(String)::: xml reader content handler set state:::if->s->equals->else->if->s->equals->if->else->else->if->s->equals->if->else->else->if->s->equals->if->else
XmlReaderContentHandler#getState():::Retrieves the current state of this XmlReaderContentHandler object's rowset, which is stored in the document handler's state field.:::return
XmlReaderContentHandler#setTag(int)::: xml reader content handler set tag:::
XmlReaderContentHandler#getTag()::: xml reader content handler get tag:::return
XmlReaderContentHandler#setNullValue(boolean)::: xml reader content handler set null value:::
XmlReaderContentHandler#getNullValue()::: xml reader content handler get null value:::return
XmlReaderContentHandler#setEmptyStringValue(boolean)::: xml reader content handler set empty string value:::
XmlReaderContentHandler#getEmptyStringValue()::: xml reader content handler get empty string value:::return
XmlReaderContentHandler#getStringValue(String)::: xml reader content handler get string value:::return
XmlReaderContentHandler#getIntegerValue(String)::: xml reader content handler get integer value:::return->Integer->parseInt
XmlReaderContentHandler#getBooleanValue(String)::: xml reader content handler get boolean value:::return->Boolean->valueOf->booleanValue
XmlReaderContentHandler#getBigDecimalValue(String)::: xml reader content handler get big decimal value:::return->new->java.math.BigDecimal
XmlReaderContentHandler#getByteValue(String)::: xml reader content handler get byte value:::return->Byte->parseByte
XmlReaderContentHandler#getShortValue(String)::: xml reader content handler get short value:::return->Short->parseShort
XmlReaderContentHandler#getLongValue(String)::: xml reader content handler get long value:::return->Long->parseLong
XmlReaderContentHandler#getFloatValue(String)::: xml reader content handler get float value:::return->Float->parseFloat
XmlReaderContentHandler#getDoubleValue(String)::: xml reader content handler get double value:::return->Double->parseDouble
XmlReaderContentHandler#getBinaryValue(String)::: xml reader content handler get binary value:::return->s->getBytes
XmlReaderContentHandler#getDateValue(String)::: xml reader content handler get date value:::return->getLongValue->new->java.sql.Date
XmlReaderContentHandler#getTimeValue(String)::: xml reader content handler get time value:::return->getLongValue->new->java.sql.Time
XmlReaderContentHandler#getTimestampValue(String)::: xml reader content handler get timestamp value:::return->getLongValue->new->java.sql.Timestamp
XmlReaderContentHandler#setPropertyValue(String)::: xml reader content handler set property value:::nullValue->getNullValue->switch->getTag->if->else->rs->setCommand->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getIntegerValue->setConcurrency->break->if->rs->setDataSourceName->else->rs->setDataSourceName->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getBooleanValue->setEscapeProcessing->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getIntegerValue->setFetchDirection->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getIntegerValue->setFetchSize->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getIntegerValue->setTransactionIsolation->break->break->if->new->Vector<>->keyCols->add->break->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getIntegerValue->setMaxFieldSize->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getIntegerValue->setMaxRows->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getIntegerValue->setQueryTimeout->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getBooleanValue->setReadOnly->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->strType->getStringValue->iType->if->strType->trim->equals->else->if->strType->trim->equals->else->if->strType->trim->equals->rs->setType->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->rs->getBooleanValue->setShowDeleted->break->if->else->rs->setTableName->break->if->rs->setUrl->else->rs->setUrl->break->if->rs->setSyncProvider->else->str->s->s->indexOf->substring->rs->setSyncProvider->break->break->break->break->break->break
XmlReaderContentHandler#setMetaDataValue(String)::: xml reader content handler set meta data value:::nullValue->getNullValue->switch->getTag->new->RowSetMetaDataImpl->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getIntegerValue->setColumnCount->break->break->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getBooleanValue->setAutoIncrement->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getBooleanValue->setCaseSensitive->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getBooleanValue->setCurrency->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getIntegerValue->setNullable->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getBooleanValue->setSigned->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getBooleanValue->setSearchable->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getIntegerValue->setColumnDisplaySize->break->if->md->setColumnLabel->else->md->setColumnLabel->break->if->md->setColumnName->else->md->setColumnName->break->if->md->setSchemaName->else->md->setSchemaName->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getIntegerValue->setPrecision->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getIntegerValue->setScale->break->if->md->setTableName->else->md->setTableName->break->if->md->setCatalogName->else->md->setCatalogName->break->if->throw->resBundle->handleGetObject->toString->new->SQLException->else->md->getIntegerValue->setColumnType->break->if->md->setColumnTypeName->else->md->setColumnTypeName->break->break
XmlReaderContentHandler#setDataValue(char[], int, int)::: xml reader content handler set data value:::switch->getTag->new->String->tempStr->concat->break->new->ObjectArr->tempUpdate->new->String->concat->Integer->valueOf->break
XmlReaderContentHandler#insertValue(String)::: xml reader content handler insert value:::if->getNullValue->rs->updateNull->return->type->rs->getMetaData->getColumnType->switch->rs->getBooleanValue->updateBoolean->break->rs->getBooleanValue->updateBoolean->break->rs->getShortValue->updateShort->break->rs->getIntegerValue->updateInt->break->rs->getLongValue->updateLong->break->rs->getFloatValue->updateFloat->break->rs->getDoubleValue->updateDouble->break->rs->getBigDecimalValue->updateObject->break->rs->getBinaryValue->updateBytes->break->rs->getDateValue->updateDate->break->rs->getTimeValue->updateTime->break->rs->getTimestampValue->updateTimestamp->break->rs->getStringValue->updateString->break
XmlReaderContentHandler#error(SAXParseException):::Throws the given SAXParseException object:::throw
XmlReaderContentHandler#warning(SAXParseException):::Prints a warning message to System.out giving the line number and uri for what caused the warning plus a message explaining the reason for the warning:::MessageFormat->resBundle->handleGetObject->toString->new->ObjectArr->err->getMessage->err->getLineNumber->err->getSystemId->format->println
XmlReaderContentHandler#notationDecl(String, String, String)::: xml reader content handler notation decl:::
XmlReaderContentHandler#unparsedEntityDecl(String, String, String, String)::: xml reader content handler unparsed entity decl:::
XmlReaderContentHandler#getPresentRow(WebRowSetImpl):::Returns the current row of this Rowsetobject:::return
XmlResolver#resolveEntity(String, String)::: xml resolver resolve entity:::schemaName->systemId->systemId->lastIndexOf->substring->if->systemId->startsWith->return->this->getClass->getResourceAsStream->new->InputSource->else->return
