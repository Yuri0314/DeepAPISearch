javax.naming.directory.Attribute#getAll()->NamingEnumeration:::Retrieves an enumeration of the attribute's values
javax.naming.directory.Attribute#get()->Object:::Retrieves one of this attribute's values
javax.naming.directory.Attribute#size()->int:::Retrieves the number of values in this attribute.
javax.naming.directory.Attribute#getID()->String:::Retrieves the id of this attribute.
javax.naming.directory.Attribute#contains(Object)->boolean:::Determines whether a value is in the attribute
javax.naming.directory.Attribute#add(Object)->boolean:::Adds a new value to the attribute
javax.naming.directory.Attribute#remove(Object)->boolean:::Removes a specified value from the attribute
javax.naming.directory.Attribute#clear()->void:::Removes all values from this attribute.
javax.naming.directory.Attribute#getAttributeSyntaxDefinition()->DirContext::: attribute get attribute syntax definition
javax.naming.directory.Attribute#getAttributeDefinition()->DirContext:::Retrieves the attribute's schema definition
javax.naming.directory.Attribute#clone()->Object:::Makes a copy of the attribute
javax.naming.directory.Attribute#isOrdered()->boolean:::Determines whether this attribute's values are ordered
javax.naming.directory.Attribute#get(int)->Object:::Retrieves the attribute value from the ordered list of attribute values
javax.naming.directory.Attribute#remove(int)->Object:::Removes an attribute value from the ordered list of attribute values
javax.naming.directory.Attribute#add(int, Object)->void:::Adds an attribute value to the ordered list of attribute values
javax.naming.directory.Attribute#set(int, Object)->Object:::Sets an attribute value in the ordered list of attribute values
javax.naming.directory.AttributeModificationException#setUnexecutedModifications(ModificationItem[])->void:::Sets the unexecuted modification list to be e
javax.naming.directory.AttributeModificationException#getUnexecutedModifications()->ModificationItem[]:::Retrieves the unexecuted modification list
javax.naming.directory.AttributeModificationException#toString()->String:::The string representation of this exception consists of information about where the error occurred, and the first unexecuted modification
javax.naming.directory.Attributes#isCaseIgnored()->boolean:::Determines whether the attribute set ignores the case of attribute identifiers when retrieving or adding attributes.
javax.naming.directory.Attributes#size()->int:::Retrieves the number of attributes in the attribute set.
javax.naming.directory.Attributes#get(String)->Attribute:::Retrieves the attribute with the given attribute id from the attribute set.
javax.naming.directory.Attributes#getAll()->NamingEnumeration:::Retrieves an enumeration of the attributes in the attribute set
javax.naming.directory.Attributes#getIDs()->NamingEnumeration:::Retrieves an enumeration of the ids of the attributes in the attribute set
javax.naming.directory.Attributes#put(String, Object)->Attribute:::Adds a new attribute to the attribute set.
javax.naming.directory.Attributes#put(Attribute)->Attribute:::Adds a new attribute to the attribute set.
javax.naming.directory.Attributes#remove(String)->Attribute:::Removes the attribute with the attribute id 'attrID' from the attribute set
javax.naming.directory.Attributes#clone()->Object:::Makes a copy of the attribute set
javax.naming.directory.BasicAttribute#clone()->Object::: basic attribute clone
javax.naming.directory.BasicAttribute#equals(Object)->boolean:::Determines whether obj is equal to this attribute
javax.naming.directory.BasicAttribute#hashCode()->int:::Calculates the hash code of this attribute
javax.naming.directory.BasicAttribute#toString()->String:::Generates the string representation of this attribute
javax.naming.directory.BasicAttribute#getAll()->NamingEnumeration:::Retrieves an enumeration of this attribute's values
javax.naming.directory.BasicAttribute#get()->Object:::Retrieves one of this attribute's values
javax.naming.directory.BasicAttribute#size()->int::: basic attribute size
javax.naming.directory.BasicAttribute#getID()->String::: basic attribute get d
javax.naming.directory.BasicAttribute#contains(Object)->boolean:::Determines whether a value is in this attribute
javax.naming.directory.BasicAttribute#add(Object)->boolean:::Adds a new value to this attribute
javax.naming.directory.BasicAttribute#remove(Object)->boolean:::Removes a specified value from this attribute
javax.naming.directory.BasicAttribute#clear()->void::: basic attribute clear
javax.naming.directory.BasicAttribute#isOrdered()->boolean::: basic attribute is ordered
javax.naming.directory.BasicAttribute#get(int)->Object::: basic attribute get
javax.naming.directory.BasicAttribute#remove(int)->Object::: basic attribute remove
javax.naming.directory.BasicAttribute#add(int, Object)->void::: basic attribute add
javax.naming.directory.BasicAttribute#set(int, Object)->Object::: basic attribute set
javax.naming.directory.BasicAttribute#getAttributeSyntaxDefinition()->DirContext:::Retrieves the syntax definition associated with this attribute
javax.naming.directory.BasicAttribute#getAttributeDefinition()->DirContext:::Retrieves this attribute's schema definition
javax.naming.directory.BasicAttribute.ValuesEnumImpl#hasMoreElements()->boolean::: values enum impl has more elements
javax.naming.directory.BasicAttribute.ValuesEnumImpl#nextElement()->Object::: values enum impl next element
javax.naming.directory.BasicAttribute.ValuesEnumImpl#next()->Object::: values enum impl next
javax.naming.directory.BasicAttribute.ValuesEnumImpl#hasMore()->boolean::: values enum impl has more
javax.naming.directory.BasicAttribute.ValuesEnumImpl#close()->void::: values enum impl close
javax.naming.directory.BasicAttributes#clone()->Object::: basic attributes clone
javax.naming.directory.BasicAttributes#isCaseIgnored()->boolean::: basic attributes is case ignored
javax.naming.directory.BasicAttributes#size()->int::: basic attributes size
javax.naming.directory.BasicAttributes#get(String)->Attribute::: basic attributes get
javax.naming.directory.BasicAttributes#getAll()->NamingEnumeration::: basic attributes get all
javax.naming.directory.BasicAttributes#getIDs()->NamingEnumeration::: basic attributes get ds
javax.naming.directory.BasicAttributes#put(String, Object)->Attribute::: basic attributes put
javax.naming.directory.BasicAttributes#put(Attribute)->Attribute::: basic attributes put
javax.naming.directory.BasicAttributes#remove(String)->Attribute::: basic attributes remove
javax.naming.directory.BasicAttributes#toString()->String:::Generates the string representation of this attribute set
javax.naming.directory.BasicAttributes#equals(Object)->boolean:::Determines whether this BasicAttributes is equal to another Attributes Two Attributes are equal if they are both instances of Attributes, treat the case of attribute IDs the same way, and contain the same attributes
javax.naming.directory.BasicAttributes#hashCode()->int:::Calculates the hash code of this BasicAttributes
javax.naming.directory.BasicAttributes.AttrEnumImpl#hasMoreElements()->boolean::: attr enum impl has more elements
javax.naming.directory.BasicAttributes.AttrEnumImpl#nextElement()->Attribute::: attr enum impl next element
javax.naming.directory.BasicAttributes.AttrEnumImpl#hasMore()->boolean::: attr enum impl has more
javax.naming.directory.BasicAttributes.AttrEnumImpl#next()->Attribute::: attr enum impl next
javax.naming.directory.BasicAttributes.AttrEnumImpl#close()->void::: attr enum impl close
javax.naming.directory.BasicAttributes.IDEnumImpl#hasMoreElements()->boolean::: enum impl has more elements
javax.naming.directory.BasicAttributes.IDEnumImpl#nextElement()->String::: enum impl next element
javax.naming.directory.BasicAttributes.IDEnumImpl#hasMore()->boolean::: enum impl has more
javax.naming.directory.BasicAttributes.IDEnumImpl#next()->String::: enum impl next
javax.naming.directory.BasicAttributes.IDEnumImpl#close()->void::: enum impl close
javax.naming.directory.DirContext#getAttributes(Name)->Attributes:::Retrieves all of the attributes associated with a named object
javax.naming.directory.DirContext#getAttributes(String)->Attributes:::Retrieves all of the attributes associated with a named object
javax.naming.directory.DirContext#getAttributes(Name, String[])->Attributes:::Retrieves selected attributes associated with a named object
javax.naming.directory.DirContext#getAttributes(String, String[])->Attributes:::Retrieves selected attributes associated with a named object
javax.naming.directory.DirContext#modifyAttributes(Name, int, Attributes)->void:::Modifies the attributes associated with a named object
javax.naming.directory.DirContext#modifyAttributes(String, int, Attributes)->void:::Modifies the attributes associated with a named object
javax.naming.directory.DirContext#modifyAttributes(Name, ModificationItem[])->void:::Modifies the attributes associated with a named object using an ordered list of modifications
javax.naming.directory.DirContext#modifyAttributes(String, ModificationItem[])->void:::Modifies the attributes associated with a named object using an ordered list of modifications
javax.naming.directory.DirContext#bind(Name, Object, Attributes)->void:::Binds a name to an object, along with associated attributes
javax.naming.directory.DirContext#bind(String, Object, Attributes)->void:::Binds a name to an object, along with associated attributes
javax.naming.directory.DirContext#rebind(Name, Object, Attributes)->void:::Binds a name to an object, along with associated attributes, overwriting any existing binding
javax.naming.directory.DirContext#rebind(String, Object, Attributes)->void:::Binds a name to an object, along with associated attributes, overwriting any existing binding
javax.naming.directory.DirContext#createSubcontext(Name, Attributes)->DirContext:::Creates and binds a new context, along with associated attributes
javax.naming.directory.DirContext#createSubcontext(String, Attributes)->DirContext:::Creates and binds a new context, along with associated attributes
javax.naming.directory.DirContext#getSchema(Name)->DirContext:::Retrieves the schema associated with the named object
javax.naming.directory.DirContext#getSchema(String)->DirContext:::Retrieves the schema associated with the named object
javax.naming.directory.DirContext#getSchemaClassDefinition(Name)->DirContext:::Retrieves a context containing the schema objects of the named object's class definitions
javax.naming.directory.DirContext#getSchemaClassDefinition(String)->DirContext:::Retrieves a context containing the schema objects of the named object's class definitions
javax.naming.directory.DirContext#search(Name, Attributes, String[])->NamingEnumeration:::Searches in a single context for objects that contain a specified set of attributes, and retrieves selected attributes
javax.naming.directory.DirContext#search(String, Attributes, String[])->NamingEnumeration:::Searches in a single context for objects that contain a specified set of attributes, and retrieves selected attributes
javax.naming.directory.DirContext#search(Name, Attributes)->NamingEnumeration:::Searches in a single context for objects that contain a specified set of attributes
javax.naming.directory.DirContext#search(String, Attributes)->NamingEnumeration:::Searches in a single context for objects that contain a specified set of attributes
javax.naming.directory.DirContext#search(Name, String, SearchControls)->NamingEnumeration:::Searches in the named context or object for entries that satisfy the given search filter
javax.naming.directory.DirContext#search(String, String, SearchControls)->NamingEnumeration:::Searches in the named context or object for entries that satisfy the given search filter
javax.naming.directory.DirContext#search(Name, String, Object[], SearchControls)->NamingEnumeration:::Searches in the named context or object for entries that satisfy the given search filter
javax.naming.directory.DirContext#search(String, String, Object[], SearchControls)->NamingEnumeration:::Searches in the named context or object for entries that satisfy the given search filter
javax.naming.directory.InitialDirContext#getAttributes(String)->Attributes::: initial dir context get attributes
javax.naming.directory.InitialDirContext#getAttributes(String, String[])->Attributes::: initial dir context get attributes
javax.naming.directory.InitialDirContext#getAttributes(Name)->Attributes::: initial dir context get attributes
javax.naming.directory.InitialDirContext#getAttributes(Name, String[])->Attributes::: initial dir context get attributes
javax.naming.directory.InitialDirContext#modifyAttributes(String, int, Attributes)->void::: initial dir context modify attributes
javax.naming.directory.InitialDirContext#modifyAttributes(Name, int, Attributes)->void::: initial dir context modify attributes
javax.naming.directory.InitialDirContext#modifyAttributes(String, ModificationItem[])->void::: initial dir context modify attributes
javax.naming.directory.InitialDirContext#modifyAttributes(Name, ModificationItem[])->void::: initial dir context modify attributes
javax.naming.directory.InitialDirContext#bind(String, Object, Attributes)->void::: initial dir context bind
javax.naming.directory.InitialDirContext#bind(Name, Object, Attributes)->void::: initial dir context bind
javax.naming.directory.InitialDirContext#rebind(String, Object, Attributes)->void::: initial dir context rebind
javax.naming.directory.InitialDirContext#rebind(Name, Object, Attributes)->void::: initial dir context rebind
javax.naming.directory.InitialDirContext#createSubcontext(String, Attributes)->DirContext::: initial dir context create subcontext
javax.naming.directory.InitialDirContext#createSubcontext(Name, Attributes)->DirContext::: initial dir context create subcontext
javax.naming.directory.InitialDirContext#getSchema(String)->DirContext::: initial dir context get schema
javax.naming.directory.InitialDirContext#getSchema(Name)->DirContext::: initial dir context get schema
javax.naming.directory.InitialDirContext#getSchemaClassDefinition(String)->DirContext::: initial dir context get schema class definition
javax.naming.directory.InitialDirContext#getSchemaClassDefinition(Name)->DirContext::: initial dir context get schema class definition
javax.naming.directory.InitialDirContext#search(String, Attributes)->NamingEnumeration::: initial dir context search
javax.naming.directory.InitialDirContext#search(Name, Attributes)->NamingEnumeration::: initial dir context search
javax.naming.directory.InitialDirContext#search(String, Attributes, String[])->NamingEnumeration::: initial dir context search
javax.naming.directory.InitialDirContext#search(Name, Attributes, String[])->NamingEnumeration::: initial dir context search
javax.naming.directory.InitialDirContext#search(String, String, SearchControls)->NamingEnumeration::: initial dir context search
javax.naming.directory.InitialDirContext#search(Name, String, SearchControls)->NamingEnumeration::: initial dir context search
javax.naming.directory.InitialDirContext#search(String, String, Object[], SearchControls)->NamingEnumeration::: initial dir context search
javax.naming.directory.InitialDirContext#search(Name, String, Object[], SearchControls)->NamingEnumeration::: initial dir context search
javax.naming.directory.ModificationItem#getModificationOp()->int:::Retrieves the modification code of this modification item.
javax.naming.directory.ModificationItem#getAttribute()->Attribute:::Retrieves the attribute associated with this modification item.
javax.naming.directory.ModificationItem#toString()->String:::Generates the string representation of this modification item, which consists of the modification operation and its related attribute
javax.naming.directory.SearchControls#getSearchScope()->int:::Retrieves the search scope of these SearchControls
javax.naming.directory.SearchControls#getTimeLimit()->int:::Retrieves the time limit of these SearchControls in milliseconds
javax.naming.directory.SearchControls#getDerefLinkFlag()->boolean:::Determines whether links will be dereferenced during the search.
javax.naming.directory.SearchControls#getReturningObjFlag()->boolean:::Determines whether objects will be returned as part of the result.
javax.naming.directory.SearchControls#getCountLimit()->long:::Retrieves the maximum number of entries that will be returned as a result of the search
javax.naming.directory.SearchControls#getReturningAttributes()->String[]:::Retrieves the attributes that will be returned as part of the search
javax.naming.directory.SearchControls#setSearchScope(int)->void:::Sets the search scope to one of: OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE.
javax.naming.directory.SearchControls#setTimeLimit(int)->void:::Sets the time limit of these SearchControls in milliseconds
javax.naming.directory.SearchControls#setDerefLinkFlag(boolean)->void:::Enables/disables link dereferencing during the search.
javax.naming.directory.SearchControls#setReturningObjFlag(boolean)->void:::Enables/disables returning objects returned as part of the result
javax.naming.directory.SearchControls#setCountLimit(long)->void:::Sets the maximum number of entries to be returned as a result of the search
javax.naming.directory.SearchControls#setReturningAttributes(String[])->void:::Specifies the attributes that will be returned as part of the search
javax.naming.directory.SearchResult#getAttributes()->Attributes:::Retrieves the attributes in this search result.
javax.naming.directory.SearchResult#setAttributes(Attributes)->void:::Sets the attributes of this search result to attrs.
javax.naming.directory.SearchResult#toString()->String:::Generates the string representation of this SearchResult
