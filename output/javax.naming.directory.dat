Attribute#getAll():::Retrieves an enumeration of the attribute's values:::
Attribute#get():::Retrieves one of this attribute's values:::
Attribute#size():::Retrieves the number of values in this attribute.:::
Attribute#getID():::Retrieves the id of this attribute.:::
Attribute#contains(Object):::Determines whether a value is in the attribute:::
Attribute#add(Object):::Adds a new value to the attribute:::
Attribute#remove(Object):::Removes a specified value from the attribute:::
Attribute#clear():::Removes all values from this attribute.:::
Attribute#getAttributeSyntaxDefinition()::: attribute get attribute syntax definition:::
Attribute#getAttributeDefinition():::Retrieves the attribute's schema definition:::
Attribute#clone():::Makes a copy of the attribute:::
Attribute#isOrdered():::Determines whether this attribute's values are ordered:::
Attribute#get(int):::Retrieves the attribute value from the ordered list of attribute values:::
Attribute#remove(int):::Removes an attribute value from the ordered list of attribute values:::
Attribute#add(int, Object):::Adds an attribute value to the ordered list of attribute values:::
Attribute#set(int, Object):::Sets an attribute value in the ordered list of attribute values:::
AttributeModificationException#setUnexecutedModifications(ModificationItem[]):::Sets the unexecuted modification list to be e:::
AttributeModificationException#getUnexecutedModifications():::Retrieves the unexecuted modification list:::return
AttributeModificationException#toString():::The string representation of this exception consists of information about where the error occurred, and the first unexecuted modification:::orig->super->toString->if->toString->return
Attributes#isCaseIgnored():::Determines whether the attribute set ignores the case of attribute identifiers when retrieving or adding attributes.:::
Attributes#size():::Retrieves the number of attributes in the attribute set.:::
Attributes#get(String):::Retrieves the attribute with the given attribute id from the attribute set.:::
Attributes#getAll():::Retrieves an enumeration of the attributes in the attribute set:::
Attributes#getIDs():::Retrieves an enumeration of the ids of the attributes in the attribute set:::
Attributes#put(String, Object):::Adds a new attribute to the attribute set.:::
Attributes#put(Attribute):::Adds a new attribute to the attribute set.:::
Attributes#remove(String):::Removes the attribute with the attribute id 'attrID' from the attribute set:::
Attributes#clone():::Makes a copy of the attribute set:::
BasicAttribute#clone()::: basic attribute clone:::attr->try->super->clone->catch->new->BasicAttribute->finally->values->clone->return
BasicAttribute#equals(Object):::Determines whether obj is equal to this attribute:::if->target->if->isOrdered->target->isOrdered->return->len->if->attrID->target->getID->equals->size->target->size->try->if->isOrdered->for->i->else->theirs->target->getAll->while->theirs->hasMoreElements->if->theirs->nextElement->find->return->catch->return->finally->return->return
BasicAttribute#hashCode():::Calculates the hash code of this attribute:::hash->attrID->hashCode->num->values->size->val->for->i->return
BasicAttribute#toString():::Generates the string representation of this attribute:::answer->new->StringBuilder->if->values->size->answer->append->else->start->for->e->values->elements->e->hasMoreElements->return->answer->toString
BasicAttribute#getAll():::Retrieves an enumeration of this attribute's values:::return->new->ValuesEnumImpl
BasicAttribute#get():::Retrieves one of this attribute's values:::if->values->size->throw->getID->new->NoSuchElementException->else->return->values->elementAt
BasicAttribute#size()::: basic attribute size:::return->values->size
BasicAttribute#getID()::: basic attribute get d:::return
BasicAttribute#contains(Object):::Determines whether a value is in this attribute:::return->find
BasicAttribute#find(Object)::: basic attribute find:::cl->if->ct->values->size->for->i->else->if->target->getClass->isArray->ct->values->size->it->for->i->else->return->values->indexOf->return
BasicAttribute#valueEquals(Object, Object):::Determines whether two attribute values are equal:::if->return->if->return->if->obj1->getClass->isArray->obj2->getClass->isArray->return->arrayEquals->return->obj1->equals
BasicAttribute#arrayEquals(Object, Object):::Determines whether two arrays are equal by comparing each of their elements using Object.equals().:::len->if->Array->getLength->Array->getLength->return->for->j->return
BasicAttribute#add(Object):::Adds a new value to this attribute:::if->isOrdered->find->values->addElement->return->else->return
BasicAttribute#remove(Object):::Removes a specified value from this attribute:::i->find->if->values->removeElementAt->return->return
BasicAttribute#clear()::: basic attribute clear:::values->setSize
BasicAttribute#isOrdered()::: basic attribute is ordered:::return
BasicAttribute#get(int)::: basic attribute get:::return->values->elementAt
BasicAttribute#remove(int)::: basic attribute remove:::answer->values->elementAt->values->removeElementAt->return
BasicAttribute#add(int, Object)::: basic attribute add:::if->isOrdered->contains->throw->new->IllegalStateException->values->insertElementAt
BasicAttribute#set(int, Object)::: basic attribute set:::if->isOrdered->contains->throw->new->IllegalStateException->answer->values->elementAt->values->setElementAt->return
BasicAttribute#getAttributeSyntaxDefinition():::Retrieves the syntax definition associated with this attribute:::throw->new->OperationNotSupportedException
BasicAttribute#getAttributeDefinition():::Retrieves this attribute's schema definition:::throw->new->OperationNotSupportedException
BasicAttribute#writeObject(java.io.ObjectOutputStream):::Overridden to avoid exposing implementation details:::s->defaultWriteObject->s->values->size->writeInt->for->i->values->size
BasicAttribute#readObject(java.io.ObjectInputStream):::Overridden to avoid exposing implementation details.:::s->defaultReadObject->n->s->readInt->Math->min->new->Vector<>->while->values->s->readObject->addElement
BasicAttribute.ValuesEnumImpl#hasMoreElements()::: values enum impl has more elements:::return->list->hasMoreElements
BasicAttribute.ValuesEnumImpl#nextElement()::: values enum impl next element:::return->list->nextElement
BasicAttribute.ValuesEnumImpl#next()::: values enum impl next:::return->list->nextElement
BasicAttribute.ValuesEnumImpl#hasMore()::: values enum impl has more:::return->list->hasMoreElements
BasicAttribute.ValuesEnumImpl#close()::: values enum impl close:::
BasicAttributes#clone()::: basic attributes clone:::attrset->try->super->clone->catch->new->BasicAttributes->finally->attrs->clone->return
BasicAttributes#isCaseIgnored()::: basic attributes is case ignored:::return
BasicAttributes#size()::: basic attributes size:::return->attrs->size
BasicAttributes#get(String)::: basic attributes get:::attr->attrs->attrID->toLowerCase->get->return
BasicAttributes#getAll()::: basic attributes get all:::return->new->AttrEnumImpl
BasicAttributes#getIDs()::: basic attributes get ds:::return->new->IDEnumImpl
BasicAttributes#put(String, Object)::: basic attributes put:::return->this->new->BasicAttribute->put
BasicAttributes#put(Attribute)::: basic attributes put:::id->attr->getID->if->id->toLowerCase->return->attrs->put
BasicAttributes#remove(String)::: basic attributes remove:::id->attrID->toLowerCase->return->attrs->remove
BasicAttributes#toString():::Generates the string representation of this attribute set:::if->attrs->size->return->else->return->attrs->toString
BasicAttributes#equals(Object):::Determines whether this BasicAttributes is equal to another Attributes Two Attributes are equal if they are both instances of Attributes, treat the case of attribute IDs the same way, and contain the same attributes:::if->target->if->target->isCaseIgnored->return->if->size->target->size->their->mine->try->theirs->target->getAll->while->theirs->hasMore->theirs->next->their->getID->get->if->their->equals->return->catch->return->finally->return->return
BasicAttributes#hashCode():::Calculates the hash code of this BasicAttributes:::hash->try->all->getAll->while->all->hasMore->all->next->hashCode->catch->finally->return
BasicAttributes#writeObject(java.io.ObjectOutputStream):::Overridden to avoid exposing implementation details.:::s->defaultWriteObject->s->attrs->size->writeInt->attrEnum->attrs->elements->while->attrEnum->hasMoreElements->s->attrEnum->nextElement->writeObject
BasicAttributes#readObject(java.io.ObjectInputStream):::Overridden to avoid exposing implementation details.:::s->defaultReadObject->n->s->readInt->Math->min->new->Hashtable<>->new->Hashtable<>->while->s->readObject->put
BasicAttributes.AttrEnumImpl#hasMoreElements()::: attr enum impl has more elements:::return->elements->hasMoreElements
BasicAttributes.AttrEnumImpl#nextElement()::: attr enum impl next element:::return->elements->nextElement
BasicAttributes.AttrEnumImpl#hasMore()::: attr enum impl has more:::return->hasMoreElements
BasicAttributes.AttrEnumImpl#next()::: attr enum impl next:::return->nextElement
BasicAttributes.AttrEnumImpl#close()::: attr enum impl close:::
BasicAttributes.IDEnumImpl#hasMoreElements()::: enum impl has more elements:::return->elements->hasMoreElements
BasicAttributes.IDEnumImpl#nextElement()::: enum impl next element:::attr->elements->nextElement->return->attr->getID
BasicAttributes.IDEnumImpl#hasMore()::: enum impl has more:::return->hasMoreElements
BasicAttributes.IDEnumImpl#next()::: enum impl next:::return->nextElement
BasicAttributes.IDEnumImpl#close()::: enum impl close:::
DirContext#getAttributes(Name):::Retrieves all of the attributes associated with a named object:::
DirContext#getAttributes(String):::Retrieves all of the attributes associated with a named object:::
DirContext#getAttributes(Name, String[]):::Retrieves selected attributes associated with a named object:::
DirContext#getAttributes(String, String[]):::Retrieves selected attributes associated with a named object:::
DirContext#modifyAttributes(Name, int, Attributes):::Modifies the attributes associated with a named object:::
DirContext#modifyAttributes(String, int, Attributes):::Modifies the attributes associated with a named object:::
DirContext#modifyAttributes(Name, ModificationItem[]):::Modifies the attributes associated with a named object using an ordered list of modifications:::
DirContext#modifyAttributes(String, ModificationItem[]):::Modifies the attributes associated with a named object using an ordered list of modifications:::
DirContext#bind(Name, Object, Attributes):::Binds a name to an object, along with associated attributes:::
DirContext#bind(String, Object, Attributes):::Binds a name to an object, along with associated attributes:::
DirContext#rebind(Name, Object, Attributes):::Binds a name to an object, along with associated attributes, overwriting any existing binding:::
DirContext#rebind(String, Object, Attributes):::Binds a name to an object, along with associated attributes, overwriting any existing binding:::
DirContext#createSubcontext(Name, Attributes):::Creates and binds a new context, along with associated attributes:::
DirContext#createSubcontext(String, Attributes):::Creates and binds a new context, along with associated attributes:::
DirContext#getSchema(Name):::Retrieves the schema associated with the named object:::
DirContext#getSchema(String):::Retrieves the schema associated with the named object:::
DirContext#getSchemaClassDefinition(Name):::Retrieves a context containing the schema objects of the named object's class definitions:::
DirContext#getSchemaClassDefinition(String):::Retrieves a context containing the schema objects of the named object's class definitions:::
DirContext#search(Name, Attributes, String[]):::Searches in a single context for objects that contain a specified set of attributes, and retrieves selected attributes:::
DirContext#search(String, Attributes, String[]):::Searches in a single context for objects that contain a specified set of attributes, and retrieves selected attributes:::
DirContext#search(Name, Attributes):::Searches in a single context for objects that contain a specified set of attributes:::
DirContext#search(String, Attributes):::Searches in a single context for objects that contain a specified set of attributes:::
DirContext#search(Name, String, SearchControls):::Searches in the named context or object for entries that satisfy the given search filter:::
DirContext#search(String, String, SearchControls):::Searches in the named context or object for entries that satisfy the given search filter:::
DirContext#search(Name, String, Object[], SearchControls):::Searches in the named context or object for entries that satisfy the given search filter:::
DirContext#search(String, String, Object[], SearchControls):::Searches in the named context or object for entries that satisfy the given search filter:::
InitialDirContext#getURLOrDefaultInitDirCtx(String)::: initial dir context get or default init dir ctx:::answer->getURLOrDefaultInitCtx->if->if->throw->new->NoInitialContextException->else->throw->new->NotContextException->return
InitialDirContext#getURLOrDefaultInitDirCtx(Name)::: initial dir context get or default init dir ctx:::answer->getURLOrDefaultInitCtx->if->if->throw->new->NoInitialContextException->else->throw->new->NotContextException->return
InitialDirContext#getAttributes(String)::: initial dir context get attributes:::return->getAttributes
InitialDirContext#getAttributes(String, String[])::: initial dir context get attributes:::return->getURLOrDefaultInitDirCtx->getAttributes
InitialDirContext#getAttributes(Name)::: initial dir context get attributes:::return->getAttributes
InitialDirContext#getAttributes(Name, String[])::: initial dir context get attributes:::return->getURLOrDefaultInitDirCtx->getAttributes
InitialDirContext#modifyAttributes(String, int, Attributes)::: initial dir context modify attributes:::getURLOrDefaultInitDirCtx->modifyAttributes
InitialDirContext#modifyAttributes(Name, int, Attributes)::: initial dir context modify attributes:::getURLOrDefaultInitDirCtx->modifyAttributes
InitialDirContext#modifyAttributes(String, ModificationItem[])::: initial dir context modify attributes:::getURLOrDefaultInitDirCtx->modifyAttributes
InitialDirContext#modifyAttributes(Name, ModificationItem[])::: initial dir context modify attributes:::getURLOrDefaultInitDirCtx->modifyAttributes
InitialDirContext#bind(String, Object, Attributes)::: initial dir context bind:::getURLOrDefaultInitDirCtx->bind
InitialDirContext#bind(Name, Object, Attributes)::: initial dir context bind:::getURLOrDefaultInitDirCtx->bind
InitialDirContext#rebind(String, Object, Attributes)::: initial dir context rebind:::getURLOrDefaultInitDirCtx->rebind
InitialDirContext#rebind(Name, Object, Attributes)::: initial dir context rebind:::getURLOrDefaultInitDirCtx->rebind
InitialDirContext#createSubcontext(String, Attributes)::: initial dir context create subcontext:::return->getURLOrDefaultInitDirCtx->createSubcontext
InitialDirContext#createSubcontext(Name, Attributes)::: initial dir context create subcontext:::return->getURLOrDefaultInitDirCtx->createSubcontext
InitialDirContext#getSchema(String)::: initial dir context get schema:::return->getURLOrDefaultInitDirCtx->getSchema
InitialDirContext#getSchema(Name)::: initial dir context get schema:::return->getURLOrDefaultInitDirCtx->getSchema
InitialDirContext#getSchemaClassDefinition(String)::: initial dir context get schema class definition:::return->getURLOrDefaultInitDirCtx->getSchemaClassDefinition
InitialDirContext#getSchemaClassDefinition(Name)::: initial dir context get schema class definition:::return->getURLOrDefaultInitDirCtx->getSchemaClassDefinition
InitialDirContext#search(String, Attributes)::: initial dir context search:::return->getURLOrDefaultInitDirCtx->search
InitialDirContext#search(Name, Attributes)::: initial dir context search:::return->getURLOrDefaultInitDirCtx->search
InitialDirContext#search(String, Attributes, String[])::: initial dir context search:::return->getURLOrDefaultInitDirCtx->search
InitialDirContext#search(Name, Attributes, String[])::: initial dir context search:::return->getURLOrDefaultInitDirCtx->search
InitialDirContext#search(String, String, SearchControls)::: initial dir context search:::return->getURLOrDefaultInitDirCtx->search
InitialDirContext#search(Name, String, SearchControls)::: initial dir context search:::return->getURLOrDefaultInitDirCtx->search
InitialDirContext#search(String, String, Object[], SearchControls)::: initial dir context search:::return->getURLOrDefaultInitDirCtx->search
InitialDirContext#search(Name, String, Object[], SearchControls)::: initial dir context search:::return->getURLOrDefaultInitDirCtx->search
ModificationItem#getModificationOp():::Retrieves the modification code of this modification item.:::return
ModificationItem#getAttribute():::Retrieves the attribute associated with this modification item.:::return
ModificationItem#toString():::Generates the string representation of this modification item, which consists of the modification operation and its related attribute:::switch->return->attr->toString->return->attr->toString->return->attr->toString->return
SearchControls#getSearchScope():::Retrieves the search scope of these SearchControls:::return
SearchControls#getTimeLimit():::Retrieves the time limit of these SearchControls in milliseconds:::return
SearchControls#getDerefLinkFlag():::Determines whether links will be dereferenced during the search.:::return
SearchControls#getReturningObjFlag():::Determines whether objects will be returned as part of the result.:::return
SearchControls#getCountLimit():::Retrieves the maximum number of entries that will be returned as a result of the search:::return
SearchControls#getReturningAttributes():::Retrieves the attributes that will be returned as part of the search:::return
SearchControls#setSearchScope(int):::Sets the search scope to one of: OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE.:::
SearchControls#setTimeLimit(int):::Sets the time limit of these SearchControls in milliseconds:::
SearchControls#setDerefLinkFlag(boolean):::Enables/disables link dereferencing during the search.:::
SearchControls#setReturningObjFlag(boolean):::Enables/disables returning objects returned as part of the result:::
SearchControls#setCountLimit(long):::Sets the maximum number of entries to be returned as a result of the search:::
SearchControls#setReturningAttributes(String[]):::Specifies the attributes that will be returned as part of the search:::
SearchResult#getAttributes():::Retrieves the attributes in this search result.:::return
SearchResult#setAttributes(Attributes):::Sets the attributes of this search result to attrs.:::
SearchResult#toString():::Generates the string representation of this SearchResult:::return->super->toString->getAttributes
