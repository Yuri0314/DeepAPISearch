javax.management.loading.ClassLoaderRepository#loadClass(String)->Class:::Load the given class name through the list of class loaders
javax.management.loading.ClassLoaderRepository#loadClassWithout(ClassLoader, String)->Class:::Load the given class name through the list of class loaders, excluding the given one
javax.management.loading.ClassLoaderRepository#loadClassBefore(ClassLoader, String)->Class:::Load the given class name through the list of class loaders, stopping at the given one
javax.management.loading.DefaultLoaderRepository#loadClass(String)->Class:::Go through the list of class loaders and try to load the requested class
javax.management.loading.DefaultLoaderRepository#loadClassWithout(ClassLoader, String)->Class:::Go through the list of class loaders but exclude the given class loader, then try to load the requested class
javax.management.loading.MLet#addURL(URL)->void:::Appends the specified URL to the list of URLs to search for classes and resources.
javax.management.loading.MLet#addURL(String)->void:::Appends the specified URL to the list of URLs to search for classes and resources.
javax.management.loading.MLet#getURLs()->URL[]:::Returns the search path of URLs for loading classes and resources
javax.management.loading.MLet#getMBeansFromURL(URL)->Set:::Loads a text file containing MLET tags that define the MBeans to be added to the MBean server
javax.management.loading.MLet#getMBeansFromURL(String)->Set:::Loads a text file containing MLET tags that define the MBeans to be added to the MBean server
javax.management.loading.MLet#getLibraryDirectory()->String:::Gets the current directory used by the library loader for storing native libraries before they are loaded into memory.
javax.management.loading.MLet#setLibraryDirectory(String)->void:::Sets the directory used by the library loader for storing native libraries before they are loaded into memory.
javax.management.loading.MLet#preRegister(MBeanServer, ObjectName)->ObjectName:::Allows the m-let to perform any operations it needs before being registered in the MBean server
javax.management.loading.MLet#postRegister(Boolean)->void:::Allows the m-let to perform any operations needed after having been registered in the MBean server or after the registration has failed.
javax.management.loading.MLet#preDeregister()->void:::Allows the m-let to perform any operations it needs before being unregistered by the MBean server.
javax.management.loading.MLet#postDeregister()->void:::Allows the m-let to perform any operations needed after having been unregistered in the MBean server.
javax.management.loading.MLet#writeExternal(ObjectOutput)->void:::Save this MLet's contents to the given ObjectOutput
javax.management.loading.MLet#readExternal(ObjectInput)->void:::Restore this MLet's contents from the given ObjectInput
javax.management.loading.MLet#loadClass(String, ClassLoaderRepository)->Class:::Load a class, using the given ClassLoaderRepository if the class is not found in this MLet's URLs
javax.management.loading.MLet#findClass(String)->Class:::This is the main method for class loaders that is being redefined.
javax.management.loading.MLet#findClass(String, ClassLoaderRepository)->Class:::Called by MLet#findClass(java.lang.String).
javax.management.loading.MLet#findLibrary(String)->String:::Returns the absolute path name of a native library
javax.management.loading.MLet#check(String, URL, String, MLetContent)->URL:::This method is to be overridden when extending this service to support caching and versioning
javax.management.loading.MLetContent#getAttributes()->Map:::Gets the attributes of the <CODE>MLET</CODE> tag
javax.management.loading.MLetContent#getDocumentBase()->URL:::Gets the MLet text file's base URL.
javax.management.loading.MLetContent#getCodeBase()->URL:::Gets the code base URL.
javax.management.loading.MLetContent#getJarFiles()->String:::Gets the list of <CODE>.jar</CODE> files specified by the <CODE>ARCHIVE</CODE> attribute of the <CODE>MLET</CODE> tag.
javax.management.loading.MLetContent#getCode()->String:::Gets the value of the <CODE>CODE</CODE> attribute of the <CODE>MLET</CODE> tag.
javax.management.loading.MLetContent#getSerializedObject()->String:::Gets the value of the <CODE>OBJECT</CODE> attribute of the <CODE>MLET</CODE> tag.
javax.management.loading.MLetContent#getName()->String:::Gets the value of the <CODE>NAME</CODE> attribute of the <CODE>MLET</CODE> tag.
javax.management.loading.MLetContent#getVersion()->String:::Gets the value of the <CODE>VERSION</CODE> attribute of the <CODE>MLET</CODE> tag.
javax.management.loading.MLetContent#getParameterTypes()->List:::Gets the list of values of the TYPE attribute in each nested &lt;PARAM&gt; tag within the MLET tag.
javax.management.loading.MLetContent#getParameterValues()->List:::Gets the list of values of the VALUE attribute in each nested &lt;PARAM&gt; tag within the MLET tag.
javax.management.loading.MLetMBean#getMBeansFromURL(String)->Set:::Loads a text file containing MLET tags that define the MBeans to be added to the MBean server
javax.management.loading.MLetMBean#getMBeansFromURL(URL)->Set:::Loads a text file containing MLET tags that define the MBeans to be added to the MBean server
javax.management.loading.MLetMBean#addURL(URL)->void:::Appends the specified URL to the list of URLs to search for classes and resources.
javax.management.loading.MLetMBean#addURL(String)->void:::Appends the specified URL to the list of URLs to search for classes and resources.
javax.management.loading.MLetMBean#getURLs()->URL[]:::Returns the search path of URLs for loading classes and resources
javax.management.loading.MLetMBean#getResource(String)->URL:::Finds the resource with the given name
javax.management.loading.MLetMBean#getResourceAsStream(String)->InputStream:::Returns an input stream for reading the specified resource
javax.management.loading.MLetMBean#getResources(String)->Enumeration:::Finds all the resources with the given name
javax.management.loading.MLetMBean#getLibraryDirectory()->String:::Gets the current directory used by the library loader for storing native libraries before they are loaded into memory.
javax.management.loading.MLetMBean#setLibraryDirectory(String)->void:::Sets the directory used by the library loader for storing native libraries before they are loaded into memory.
javax.management.loading.MLetObjectInputStream#resolveClass(ObjectStreamClass)->Class:::Use the given ClassLoader rather than using the system class
javax.management.loading.MLetObjectInputStream#getClassLoader()->ClassLoader:::Returns the ClassLoader being used
javax.management.loading.MLetParser#skipSpace(Reader)->void:::Scan spaces.
javax.management.loading.MLetParser#scanIdentifier(Reader)->String:::Scan identifier
javax.management.loading.MLetParser#scanTag(Reader)->Map:::Scan tag
javax.management.loading.MLetParser#parse(URL)->List:::Scan an html file for <mlet> tags.
javax.management.loading.MLetParser#parseURL(String)->List:::Parse the document pointed by the URL urlname
