DefaultImageBuilder.DefaultExecutableImage#createArgs(Path)::: default executable image create args:::Objects->requireNonNull->binDir->home->resolve->java->Files->binDir->resolve->exists->return->List->binDir->resolve->toString->of
DefaultImageBuilder.DefaultExecutableImage#getHome()::: default executable image get home:::return
DefaultImageBuilder.DefaultExecutableImage#getModules()::: default executable image get modules:::return
DefaultImageBuilder.DefaultExecutableImage#getExecutionArgs()::: default executable image get execution args:::return
DefaultImageBuilder.DefaultExecutableImage#storeLaunchArgs(List)::: default executable image store launch args:::try->patchScripts->catch->throw->new->UncheckedIOException->finally
DefaultImageBuilder#storeFiles(ResourcePool)::: default image builder store files:::try->value->files->moduleView->findModule->ResourcePoolModule->targetPlatform->map->orElse->if->throw->new->PluginException->Platform->toPlatform->checkResourcePool->bin->root->resolve->files->entries->f->type->filter->try->accept->catch->throw->new->AssertionError->throw->new->UncheckedIOException->finally->forEach->files->moduleView->modules->if->m->packages->isEmpty->modules->m->name->add->forEach->if->root->getFileSystem->supportedFileAttributeViews->contains->if->Files->isDirectory->Files->return->attrs->isRegularFile->path->toString->endsWith->find->this->setExecutable->forEach->lib->root->resolve->if->Files->isDirectory->Files->return->path->getFileName->toString->equals->path->getFileName->toString->equals->find->this->setExecutable->forEach->legal->root->resolve->if->Files->isDirectory->Files->return->attrs->isRegularFile->find->this->setReadOnly->forEach->if->Files->isDirectory->prepareApplicationFiles->catch->throw->new->PluginException->finally
DefaultImageBuilder#checkResourcePool(ResourcePool)::: default image builder check resource pool:::checkDuplicateResources
DefaultImageBuilder#checkDuplicateResources(ResourcePool)::: default image builder check duplicate resources:::duplicates->new->HashMap<>->pool->entries->f->type->filter->this->entryToImagePath->ResourcePoolEntry->moduleName->toSet->mapping->groupingBy->collect->entrySet->stream->e->getValue->size->filter->duplicates->e->getKey->e->getValue->put->forEach->if->duplicates->isEmpty->throw->new->PluginException
DefaultImageBuilder#prepareApplicationFiles(ResourcePool):::Generates launcher scripts.:::foreach->launchers->entrySet->launcherEntry->entry->getValue->slashIdx->launcherEntry->indexOf->module->mainClassName->if->else->launcherEntry->substring->launcherEntry->substring->if->path->res->imageContent->findEntry->if->res->isPresent->throw->new->IOException->stream->res->get->contentBytes->new->ByteArrayInputStream->mainClass->ModuleDescriptor->read->mainClass->if->mainClass->isPresent->mainClass->get->if->if->imageContent->mainClassName->replace->findEntry->isPresent->throw->new->IllegalArgumentException->launcherFile->entry->getKey->cmd->root->resolve->resolve->sb->new->StringBuilder->sb->append->append->sb->append->append->sb->append->append->sb->append->append->append->append->append->try->writer->Files->newBufferedWriter->writer->sb->toString->write->catch->finally->if->root->resolve->getFileSystem->supportedFileAttributeViews->contains->setExecutable->if->isWindows->bat->root->resolve->resolve->new->StringBuilder->sb->append->append->sb->append->append->sb->append->append->sb->append->append->append->append->append->try->writer->Files->newBufferedWriter->writer->sb->toString->write->catch->finally->else->throw->new->IllegalArgumentException
DefaultImageBuilder#getJImageOutputStream()::: default image builder get image output stream:::try->jimageFile->mdir->resolve->fos->Files->newOutputStream->bos->new->BufferedOutputStream->return->new->DataOutputStream->catch->throw->new->UncheckedIOException->finally
DefaultImageBuilder#entryToFileName(ResourcePoolEntry):::Returns the file name of this entry:::if->entry->type->throw->new->IllegalArgumentException->module->entry->moduleName->filename->entry->path->module->length->substring->return->filename->filename->indexOf->substring
DefaultImageBuilder#entryToImagePath(ResourcePoolEntry):::Returns the path of the given entry to be written in the image:::switch->entry->type->filename->entryToFileName->return->Paths->nativeDir->get->return->Paths->entryToFileName->get->return->Paths->entryToFileName->get->return->Paths->entryToFileName->get->return->Paths->entryToFileName->get->return->Paths->entryToFileName->get->return->Paths->entryToFileName->get->throw->new->IllegalArgumentException
DefaultImageBuilder#accept(ResourcePoolEntry)::: default image builder accept:::if->file->linkedTarget->file->type->throw->new->UnsupportedOperationException->try->in->file->content->switch->file->type->dest->root->entryToImagePath->resolve->writeEntry->break->p->root->entryToImagePath->resolve->writeEntry->p->toFile->setExecutable->break->root->entryToImagePath->resolve->writeEntry->break->source->entryToImagePath->if->file->linkedTarget->root->resolve->writeEntry->else->target->file->linkedTarget->entryToImagePath->relPath->source->getParent->relativize->root->resolve->writeSymLinkEntry->break->if->file->moduleName->equals->root->entryToImagePath->resolve->writeEntry->else->throw->file->path->new->InternalError->break->throw->file->path->new->InternalError->catch->finally
DefaultImageBuilder#writeEntry(InputStream, Path)::: default image builder write entry:::Objects->requireNonNull->Objects->requireNonNull->Files->Objects->dstFile->getParent->requireNonNull->createDirectories->Files->copy
DefaultImageBuilder#writeSymEntry(Path, Path)::: default image builder write sym entry:::Objects->requireNonNull->Objects->requireNonNull->Files->Objects->dstFile->getParent->requireNonNull->createDirectories->Files->createLink
DefaultImageBuilder#writeSymLinkEntry(Path, Path)::: default image builder write sym link entry:::Objects->requireNonNull->Objects->requireNonNull->Files->Objects->dstFile->getParent->requireNonNull->createDirectories->if->isWindows->root->getFileSystem->supportedFileAttributeViews->contains->Files->createSymbolicLink->else->try->writer->Files->newBufferedWriter->writer->String->target->toString->format->write->catch->finally
DefaultImageBuilder#nativeDir(String)::: default image builder native dir:::if->isWindows->if->filename->endsWith->filename->endsWith->filename->endsWith->filename->endsWith->return->else->return->else->return
DefaultImageBuilder#isWindows()::: default image builder is windows:::return
DefaultImageBuilder#setExecutable(Path):::chmod ugo+x file:::try->perms->Files->getPosixFilePermissions->perms->add->perms->add->perms->add->Files->setPosixFilePermissions->catch->throw->new->UncheckedIOException->finally
DefaultImageBuilder#setReadOnly(Path):::chmod ugo-w file:::try->perms->Files->getPosixFilePermissions->perms->remove->perms->remove->perms->remove->Files->setPosixFilePermissions->catch->throw->new->UncheckedIOException->finally
DefaultImageBuilder#createUtf8File(File, String)::: default image builder create utf8 file:::try->fout->new->FileOutputStream->output->new->OutputStreamWriter->output->write->catch->finally
DefaultImageBuilder#getExecutableImage()::: default image builder get executable image:::return->new->DefaultExecutableImage
DefaultImageBuilder#patchScripts(ExecutableImage, List)::: default image builder patch scripts:::Objects->requireNonNull->if->args->isEmpty->Files->img->getHome->resolve->return->img->getModules->path->getFileName->toString->contains->find->try->pattern->content->Files->readAllBytes->str->new->String->index->str->indexOf->builder->new->StringBuilder->if->builder->str->substring->append->append->foreach->builder->append->append->remain->str->pattern->length->substring->builder->append->builder->toString->try->writer->Files->newBufferedWriter->writer->write->catch->finally->catch->throw->new->RuntimeException->finally->forEach
DefaultImageBuilder#getExecutableImage(Path)::: default image builder get executable image:::binDir->root->resolve->if->Files->binDir->resolve->exists->Files->binDir->resolve->exists->return->retrieveModules->new->DefaultExecutableImage->return
DefaultImageBuilder#retrieveModules(Path)::: default image builder retrieve modules:::releaseFile->root->resolve->modules->new->HashSet<>->if->Files->exists->release->new->Properties->try->fi->releaseFile->toFile->new->FileInputStream->release->load->catch->println->finally->mods->release->getProperty->if->arr->mods->mods->length->substring->split->foreach->modules->m->trim->add->return
ImageBuilder#storeFiles(ResourcePool, Properties):::Store the external files.:::storeFiles
ImageBuilder#storeFiles(ResourcePool):::Store the external files.:::throw->new->UnsupportedOperationException
ImageBuilder#getJImageOutputStream():::The OutputStream to store the jimage file.:::
ImageBuilder#getExecutableImage():::Gets the executable image that is generated.:::
