Attribute#getCategory():::Get the printing attribute class which is to be used as the "category" for this printing attribute value when it is added to an attribute set.:::
Attribute#getName():::Get the name of the category of which this attribute value is an instance:::
AttributeSet#get(Class):::Returns the attribute value which this attribute set contains in the given attribute category:::
AttributeSet#add(Attribute):::Adds the specified attribute to this attribute set if it is not already present, first removing any existing value in the same attribute category as the specified attribute value.:::
AttributeSet#remove(Class):::Removes any attribute for this category from this attribute set if present:::
AttributeSet#remove(Attribute):::Removes the specified attribute from this attribute set if present:::
AttributeSet#containsKey(Class):::Returns true if this attribute set contains an attribute for the specified category.:::
AttributeSet#containsValue(Attribute):::Returns true if this attribute set contains the given attribute value.:::
AttributeSet#addAll(AttributeSet):::Adds all of the elements in the specified set to this attribute:::
AttributeSet#size():::Returns the number of attributes in this attribute set:::
AttributeSet#toArray():::Returns an array of the attributes contained in this set.:::
AttributeSet#clear():::Removes all attributes from this attribute set.:::
AttributeSet#isEmpty():::Returns true if this attribute set contains no attributes.:::
AttributeSet#equals(Object):::Compares the specified object with this attribute set for equality:::
AttributeSet#hashCode():::Returns the hash code value for this attribute set:::
AttributeSetUtilities#unmodifiableView(AttributeSet):::Creates an unmodifiable view of the given attribute set.:::if->throw->new->NullPointerException->return->new->UnmodifiableAttributeSet
AttributeSetUtilities#unmodifiableView(DocAttributeSet):::Creates an unmodifiable view of the given doc attribute set.:::if->throw->new->NullPointerException->return->new->UnmodifiableDocAttributeSet
AttributeSetUtilities#unmodifiableView(PrintRequestAttributeSet):::Creates an unmodifiable view of the given print request attribute set.:::if->throw->new->NullPointerException->return->new->UnmodifiablePrintRequestAttributeSet
AttributeSetUtilities#unmodifiableView(PrintJobAttributeSet):::Creates an unmodifiable view of the given print job attribute set.:::if->throw->new->NullPointerException->return->new->UnmodifiablePrintJobAttributeSet
AttributeSetUtilities#unmodifiableView(PrintServiceAttributeSet):::Creates an unmodifiable view of the given print service attribute set.:::if->throw->new->NullPointerException->return->new->UnmodifiablePrintServiceAttributeSet
AttributeSetUtilities#synchronizedView(AttributeSet):::Creates a synchronized view of the given attribute set.:::if->throw->new->NullPointerException->return->new->SynchronizedAttributeSet
AttributeSetUtilities#synchronizedView(DocAttributeSet):::Creates a synchronized view of the given doc attribute set.:::if->throw->new->NullPointerException->return->new->SynchronizedDocAttributeSet
AttributeSetUtilities#synchronizedView(PrintRequestAttributeSet):::Creates a synchronized view of the given print request attribute set.:::if->throw->new->NullPointerException->return->new->SynchronizedPrintRequestAttributeSet
AttributeSetUtilities#synchronizedView(PrintJobAttributeSet):::Creates a synchronized view of the given print job attribute set.:::if->throw->new->NullPointerException->return->new->SynchronizedPrintJobAttributeSet
AttributeSetUtilities#synchronizedView(PrintServiceAttributeSet):::Creates a synchronized view of the given print service attribute set.:::if->throw->new->NullPointerException->return->new->SynchronizedPrintServiceAttributeSet
AttributeSetUtilities#verifyAttributeCategory(Object, Class):::Verify that the given object is a Class Class that implements the given interface, which is assumed to be interface Attribute Attribute or a subinterface thereof.:::result->if->interfaceName->isAssignableFrom->return->else->throw->new->ClassCastException
AttributeSetUtilities#verifyAttributeValue(Object, Class):::Verify that the given object is an instance of the given interface, which is assumed to be interface Attribute Attribute or a subinterface thereof.:::if->throw->new->NullPointerException->else->if->interfaceName->isInstance->return->else->throw->new->ClassCastException
AttributeSetUtilities#verifyCategoryForValue(Class, Attribute):::Verify that the given attribute category object is equal to the category of the given attribute value object:::if->category->attribute->getCategory->equals->throw->new->IllegalArgumentException
DateTimeSyntax#getValue():::Returns this date-time attribute's java.util.Date value.:::return->value->getTime->new->Date
DateTimeSyntax#equals(Object):::Returns whether this date-time attribute is equivalent to the passed in object:::return->value->equals
DateTimeSyntax#hashCode():::Returns a hash code value for this date-time attribute:::return->value->hashCode
DateTimeSyntax#toString():::Returns a string value corresponding to this date-time attribute:::return
DocAttributeSet#add(Attribute):::Adds the specified attribute value to this attribute set if it is not already present, first removing any existing value in the same attribute category as the specified attribute value (optional operation).:::
DocAttributeSet#addAll(AttributeSet):::Adds all of the elements in the specified set to this attribute:::
EnumSyntax#getValue():::Returns this enumeration value's integer value.:::return
EnumSyntax#clone():::Returns a clone of this enumeration value, which to preserve the semantics of enumeration values is the same object as this enumeration value.:::return
EnumSyntax#hashCode():::Returns a hash code value for this enumeration value:::return
EnumSyntax#toString():::Returns a string value corresponding to this enumeration value.:::theTable->getStringTable->theIndex->getOffset->return->Integer->toString
EnumSyntax#readResolve():::During object input, convert this deserialized enumeration instance to the proper enumeration value defined in the enumeration attribute class.:::theTable->getEnumValueTable->if->throw->getClass->new->InvalidObjectException->theOffset->getOffset->theIndex->if->throw->getClass->new->InvalidObjectException->result->if->throw->getClass->new->InvalidObjectException->return
EnumSyntax#getStringTable():::Returns the string table for this enumeration value's enumeration class:::return
EnumSyntax#getEnumValueTable():::Returns the enumeration value table for this enumeration value's enumeration class:::return
EnumSyntax#getOffset():::Returns the lowest integer value used by this enumeration value's enumeration class:::return
HashAttributeSet#get(Class):::Returns the attribute value which this attribute set contains in the given attribute category:::return->attrMap->AttributeSetUtilities->verifyAttributeCategory->get
HashAttributeSet#add(Attribute):::Adds the specified attribute to this attribute set if it is not already present, first removing any existing in the same attribute category as the specified attribute value.:::oldAttribute->attrMap->attribute->getCategory->AttributeSetUtilities->verifyAttributeValue->put->return->attribute->equals
HashAttributeSet#remove(Class):::Removes any attribute for this category from this attribute set if present:::return->AttributeSetUtilities->verifyAttributeCategory->attrMap->remove
HashAttributeSet#remove(Attribute):::Removes the specified attribute from this attribute set if present:::return->attrMap->attribute->getCategory->remove
HashAttributeSet#containsKey(Class):::Returns true if this attribute set contains an attribute for the specified category.:::return->AttributeSetUtilities->verifyAttributeCategory->attrMap->get
HashAttributeSet#containsValue(Attribute):::Returns true if this attribute set contains the given attribute.:::return->attribute->attrMap->attribute->getCategory->get->equals
HashAttributeSet#addAll(AttributeSet):::Adds all of the elements in the specified set to this attribute:::attrs->attributes->toArray->result->for->i->return
HashAttributeSet#size():::Returns the number of attributes in this attribute set:::return->attrMap->size
HashAttributeSet#toArray():::Returns an array of the attributes contained in this set.:::attrs->size->new->AttributeArr->attrMap->values->toArray->return
HashAttributeSet#clear():::Removes all attributes from this attribute set.:::attrMap->clear
HashAttributeSet#isEmpty():::Returns true if this attribute set contains no attributes.:::return->attrMap->isEmpty
HashAttributeSet#equals(Object):::Compares the specified object with this attribute set for equality:::if->return->aset->if->aset->size->size->return->attrs->toArray->for->i->return
HashAttributeSet#hashCode():::Returns the hash code value for this attribute set:::hcode->attrs->toArray->for->i->return
IntegerSyntax#getValue():::Returns this integer attribute's integer value.:::return
IntegerSyntax#equals(Object):::Returns whether this integer attribute is equivalent to the passed in object:::return
IntegerSyntax#hashCode():::Returns a hash code value for this integer attribute:::return
IntegerSyntax#toString():::Returns a string value corresponding to this integer attribute:::return
PrintJobAttributeSet#add(Attribute):::Adds the specified attribute value to this attribute set if it is not already present, first removing any existing value in the same attribute category as the specified attribute value (optional operation).:::
PrintJobAttributeSet#addAll(AttributeSet):::Adds all of the elements in the specified set to this attribute:::
PrintRequestAttributeSet#add(Attribute):::Adds the specified attribute value to this attribute set if it is not already present, first removing any existing value in the same attribute category as the specified attribute value (optional operation).:::
PrintRequestAttributeSet#addAll(AttributeSet):::Adds all of the elements in the specified set to this attribute:::
PrintServiceAttributeSet#add(Attribute):::Adds the specified attribute value to this attribute set if it is not already present, first removing any existing value in the same attribute category as the specified attribute value (optional operation).:::
PrintServiceAttributeSet#addAll(AttributeSet):::Adds all of the elements in the specified set to this attribute:::
ResolutionSyntax#getResolution(int):::Get this resolution attribute's resolution values in the given units:::return->new->intArr->getCrossFeedResolution->getFeedResolution
ResolutionSyntax#getCrossFeedResolution(int):::Returns this resolution attribute's cross feed direction resolution in the given units:::return->convertFromDphi
ResolutionSyntax#getFeedResolution(int):::Returns this resolution attribute's feed direction resolution in the given units:::return->convertFromDphi
ResolutionSyntax#toString(int, String):::Returns a string version of this resolution attribute in the given units:::result->new->StringBuilder->result->getCrossFeedResolution->append->result->append->result->getFeedResolution->append->if->result->append->result->append->return->result->toString
ResolutionSyntax#lessThanOrEquals(ResolutionSyntax):::Determine whether this resolution attribute's value is less than or equal to the given resolution attribute's value:::return
ResolutionSyntax#equals(Object):::Returns whether this resolution attribute is equivalent to the passed in object:::return
ResolutionSyntax#hashCode():::Returns a hash code value for this resolution attribute.:::return
ResolutionSyntax#toString():::Returns a string version of this resolution attribute:::result->new->StringBuilder->result->append->result->append->result->append->result->append->return->result->toString
ResolutionSyntax#getCrossFeedResolutionDphi():::Returns this resolution attribute's cross feed direction resolution in units of dphi:::return
ResolutionSyntax#getFeedResolutionDphi():::Returns this resolution attribute's feed direction resolution in units of dphi:::return
SetOfIntegerSyntax#getMembers():::Obtain this set-of-integer attribute's members in canonical array form:::n->result->new->intArrs->for->i->return
SetOfIntegerSyntax#contains(int):::Determine if this set-of-integer attribute contains the given value.:::n->for->i->return
SetOfIntegerSyntax#contains(IntegerSyntax):::Determine if this set-of-integer attribute contains the given integer attribute's value.:::return->attribute->getValue->contains
SetOfIntegerSyntax#next(int):::Determine the smallest integer in this set-of-integer attribute that is greater than the given value:::n->for->i->return
SetOfIntegerSyntax#equals(Object):::Returns whether this set-of-integer attribute is equivalent to the passed in object:::if->myMembers->otherMembers->m->n->if->for->i->return->else->return->else->return
SetOfIntegerSyntax#hashCode():::Returns a hash code value for this set-of-integer attribute:::result->n->for->i->return
SetOfIntegerSyntax#toString():::Returns a string value corresponding to this set-of-integer attribute:::result->new->StringBuilder->n->for->i->return->result->toString
Size2DSyntax#getSize(int):::Get this two-dimensional size attribute's dimensions in the given units as floating-point values.:::return->new->floatArr->getX->getY
Size2DSyntax#getX(int):::Returns this two-dimensional size attribute's X dimension in the given units as a floating-point value.:::return->convertFromMicrometers
Size2DSyntax#getY(int):::Returns this two-dimensional size attribute's Y dimension in the given units as a floating-point value.:::return->convertFromMicrometers
Size2DSyntax#toString(int, String):::Returns a string version of this two-dimensional size attribute in the given units:::result->new->StringBuilder->result->getX->append->result->append->result->getY->append->if->result->append->result->append->return->result->toString
Size2DSyntax#equals(Object):::Returns whether this two-dimensional size attribute is equivalent to the passed in object:::return
Size2DSyntax#hashCode():::Returns a hash code value for this two-dimensional size attribute.:::return
Size2DSyntax#toString():::Returns a string version of this two-dimensional size attribute:::result->new->StringBuilder->result->append->result->append->result->append->result->append->return->result->toString
Size2DSyntax#getXMicrometers():::Returns this two-dimensional size attribute's X dimension in units of micrometers (&#181;m):::return
Size2DSyntax#getYMicrometers():::Returns this two-dimensional size attribute's Y dimension in units of micrometers (&#181;m):::return
TextSyntax#getValue():::Returns this text attribute's text string.:::return
TextSyntax#getLocale():::Returns this text attribute's text string's natural language (locale).:::return
TextSyntax#hashCode():::Returns a hashcode for this text attribute.:::return->value->hashCode->locale->hashCode
TextSyntax#equals(Object):::Returns whether this text attribute is equivalent to the passed in object:::return->equals->equals
TextSyntax#toString():::Returns a String identifying this text attribute:::return
URISyntax#getURI():::Returns this URI attribute's URI value.:::return
URISyntax#hashCode():::Returns a hashcode for this URI attribute.:::return->uri->hashCode
URISyntax#equals(Object):::Returns whether this URI attribute is equivalent to the passed in object:::return->equals
URISyntax#toString():::Returns a String identifying this URI attribute:::return->uri->toString
