NamespaceContext#getNamespaceURI(String):::Get Namespace URI bound to a prefix in the current scope:::
NamespaceContext#getPrefix(String):::Get prefix bound to Namespace URI in the current scope:::
NamespaceContext#getPrefixes(String):::Get all prefixes bound to a Namespace URI in the current scope:::
QName#getNamespaceURI():::Get the Namespace URI of this QName.:::return
QName#getLocalPart():::Get the local part of this QName.:::return
QName#getPrefix():::Get the prefix of this QName.  The prefix assigned to a QName might NOT be valid in a different context:::return
QName#equals(Object):::Test this QName for equality with another Object.  If the Object to be tested is not a QName or is null, then this method returns false.  Two QNames are considered equal if and only if both the Namespace URI and local part are equal:::if->return->if->return->qName->return->localPart->equals->namespaceURI->equals
QName#hashCode():::Generate the hash code for this QName.  The hash code is calculated using both the Namespace URI and the local part of the QName:::return->namespaceURI->hashCode->localPart->hashCode
QName#toString():::String representation of this QName.  The commonly accepted way of representing a QName as a String was defined by James Clark:::if->namespaceURI->equals->return->else->return
QName#valueOf(String):::QName derived from parsing the formatted String.  If the String is null or does not conform to #toString() QName.toString() formatting, an IllegalArgumentException is thrown.  The String MUST be in the form returned by #toString() QName.toString().  The commonly accepted way of representing a QName as a String was defined by James Clark:::if->throw->new->IllegalArgumentException->if->qNameAsString->length->return->new->QName->if->qNameAsString->charAt->return->new->QName->if->qNameAsString->startsWith->throw->qNameAsString->length->substring->new->IllegalArgumentException->endOfNamespaceURI->qNameAsString->indexOf->if->throw->new->IllegalArgumentException->return->qNameAsString->substring->qNameAsString->substring->new->QName
