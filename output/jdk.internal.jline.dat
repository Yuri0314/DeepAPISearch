Terminal#wrapOutIfNeeded(OutputStream):::When ANSI is not natively handled, the output will have to be wrapped.:::
Terminal#wrapInIfNeeded(InputStream):::When using native support, return the InputStream to use for reading characters else return the input stream passed as a parameter.:::
Terminal#hasWeirdWrap():::For terminals that don't wrap when character is written in last column, only when the next character is written:::
TerminalSupport#wrapOutIfNeeded(OutputStream):::Subclass to change behavior if needed.:::return
TerminalSupport#hasWeirdWrap():::Defaults to true which was the behaviour before this method was added.:::return
UnixTerminal#init():::Remove line-buffered input by invoking "stty -icanon min 1" against the current terminal.:::super->init->setAnsiSupported->if->Configuration->getOsName->contains->settings->set->else->settings->set->settings->undef->setEchoEnabled->parseInfoCmp
UnixTerminal#restore():::Restore the original terminal configuration, which can be used when shutting down the console reader:::settings->restore->super->restore
UnixTerminal#getWidth():::Returns the value of <tt>stty columns</tt> param.:::w->settings->getProperty->return
UnixTerminal#getHeight():::Returns the value of <tt>stty rows>/tt> param.:::h->settings->getProperty->return
WindowsTerminal#restore():::Restore the original terminal configuration, which can be used when shutting down the console reader:::setConsoleMode->super->restore
WindowsTerminal#setDirectConsole(boolean):::Whether or not to allow the use of the JNI console interaction.:::Log->debug
WindowsTerminal#getDirectConsole():::Whether or not to allow the use of the JNI console interaction.:::return
