sun.jvm.hotspot.ui.AnnotatedMemoryPanel#paintComponent(Graphics)->void::: annotated memory panel paint component
sun.jvm.hotspot.ui.AnnotatedMemoryPanel#addAnnotation(Annotation)->void:::Add an annotation covering the address range [annotation.lowAddress,       annotation.highAddress); that is, it includes the low address and does not       include the high address.
sun.jvm.hotspot.ui.AnnotatedMemoryPanel#makeVisible(Address)->void:::Makes the given address visible somewhere in the window
sun.jvm.hotspot.ui.AnnotatedMemoryPanel#print()->void::: annotated memory panel print
sun.jvm.hotspot.ui.AnnotatedMemoryPanel#printOn(PrintStream)->void::: annotated memory panel print on
sun.jvm.hotspot.ui.AnnotatedMemoryPanel#main(String[])->void::: annotated memory panel main
sun.jvm.hotspot.ui.Annotation#getInterval()->Interval::: annotation get interval
sun.jvm.hotspot.ui.Annotation#getLowAddress()->Address::: annotation get low address
sun.jvm.hotspot.ui.Annotation#getHighAddress()->Address::: annotation get high address
sun.jvm.hotspot.ui.Annotation#draw(Graphics)->void:::Draw the annotation at its current (x, y) position with its       current color
sun.jvm.hotspot.ui.Annotation#setColor(Color)->void:::Sets the base color of this annotation
sun.jvm.hotspot.ui.Annotation#getColor()->Color:::Returns the base color of this annotation.
sun.jvm.hotspot.ui.Annotation#computeWidthAndHeight(Graphics)->void:::Computes width and height for this Annotation
sun.jvm.hotspot.ui.Annotation#getWidth()->int::: annotation get width
sun.jvm.hotspot.ui.Annotation#getHeight()->int::: annotation get height
sun.jvm.hotspot.ui.Annotation#setXAndY(int, int)->void:::Set the x and y position of this annotation
sun.jvm.hotspot.ui.Annotation#setX(int)->void::: annotation set x
sun.jvm.hotspot.ui.Annotation#getX()->int::: annotation get x
sun.jvm.hotspot.ui.Annotation#setY(int)->void::: annotation set y
sun.jvm.hotspot.ui.Annotation#getY()->int::: annotation get y
sun.jvm.hotspot.ui.Annotation#getBounds()->Rectangle::: annotation get bounds
sun.jvm.hotspot.ui.Annotation#toString()->String::: annotation to string
sun.jvm.hotspot.ui.CommandProcessorPanel#requestFocus()->void::: command processor panel request focus
sun.jvm.hotspot.ui.CommandProcessorPanel#clear()->void::: command processor panel clear
sun.jvm.hotspot.ui.CommandProcessorPanel#setMark()->void::: command processor panel set mark
sun.jvm.hotspot.ui.CommandProcessorPanel#getMarkedText()->String::: command processor panel get marked text
sun.jvm.hotspot.ui.CommandProcessorPanel#main(String[])->void::: command processor panel main
sun.jvm.hotspot.ui.DebuggerConsolePanel#requestFocus()->void::: debugger console panel request focus
sun.jvm.hotspot.ui.DebuggerConsolePanel#clear()->void::: debugger console panel clear
sun.jvm.hotspot.ui.DebuggerConsolePanel#setMark()->void::: debugger console panel set mark
sun.jvm.hotspot.ui.DebuggerConsolePanel#getMarkedText()->String::: debugger console panel get marked text
sun.jvm.hotspot.ui.DebuggerConsolePanel#main(String[])->void::: debugger console panel main
sun.jvm.hotspot.ui.EditableAtEndDocument#insertString(int, String, AttributeSet)->void::: editable at end document insert string
sun.jvm.hotspot.ui.EditableAtEndDocument#remove(int, int)->void::: editable at end document remove
sun.jvm.hotspot.ui.EditableAtEndDocument#setMark()->void::: editable at end document set mark
sun.jvm.hotspot.ui.EditableAtEndDocument#getMarkedText()->String::: editable at end document get marked text
sun.jvm.hotspot.ui.EditableAtEndDocument#clear()->void:::Used to reset the contents of this document
sun.jvm.hotspot.ui.Editor#getSourceFileName()->String:::Get name of source file being displayed
sun.jvm.hotspot.ui.Editor#getCurrentLineNumber()->int:::Get (one-based) line number on which cursor is currently placed
sun.jvm.hotspot.ui.Editor#showLineNumber(int)->void:::Make a particular line number visible on the screen
sun.jvm.hotspot.ui.Editor#highlightLineNumber(int)->void:::Highlight a particular line number
sun.jvm.hotspot.ui.Editor#showBreakpointAtLine(int)->void:::Show a breakpoint indicator on the current (one-based) line.
sun.jvm.hotspot.ui.Editor#hasBreakpointAtLine(int)->boolean:::Indicates whether a breakpoint indicator is visible on the       current (one-based) line.
sun.jvm.hotspot.ui.Editor#clearBreakpointAtLine(int)->void:::Clear a breakpoint indicator on the current (one-based) line.
sun.jvm.hotspot.ui.Editor#clearBreakpoints()->void:::Clear all breakpoint indicators.
sun.jvm.hotspot.ui.Editor#setUserData(Object)->void:::Set optional object of user data
sun.jvm.hotspot.ui.Editor#getUserData()->Object:::Get optional object of user data
sun.jvm.hotspot.ui.Editor#toFront()->void:::Bring the given Editor to the front of all other Editors
sun.jvm.hotspot.ui.EditorCommands#windowClosed(Editor)->void:::Notifies the debugger that the editing window has been closed.
sun.jvm.hotspot.ui.EditorCommands#toggleBreakpointAtLine(Editor, int)->void:::Toggles a breakpoint at the given (one-based) line
sun.jvm.hotspot.ui.EditorFactory#openFile(String, EditorCommands)->Editor:::Opens the given file in a new window
sun.jvm.hotspot.ui.EditorFactory#getCurrentEditor()->Editor:::Retrieves the current topmost file of all of the Editors this       EditorFactory has opened
sun.jvm.hotspot.ui.FindInCodeCachePanel.Visitor#prologue(Address, Address)->void::: visitor prologue
sun.jvm.hotspot.ui.FindInCodeCachePanel.Visitor#visit(CodeBlob)->void::: visitor visit
sun.jvm.hotspot.ui.FindInCodeCachePanel.Visitor#epilogue()->void::: visitor epilogue
sun.jvm.hotspot.ui.FindInCodeCachePanel.Visitor#cleanup()->void::: visitor cleanup
sun.jvm.hotspot.ui.FrameWrapper#getComponent()->Component:::The JInternalFrame or JFrame this wraps
sun.jvm.hotspot.ui.FrameWrapper#getContentPane()->Container::: frame wrapper get content pane
sun.jvm.hotspot.ui.FrameWrapper#setVisible(boolean)->void::: frame wrapper set visible
sun.jvm.hotspot.ui.FrameWrapper#setSize(int, int)->void::: frame wrapper set size
sun.jvm.hotspot.ui.FrameWrapper#pack()->void::: frame wrapper pack
sun.jvm.hotspot.ui.FrameWrapper#dispose()->void::: frame wrapper dispose
sun.jvm.hotspot.ui.FrameWrapper#setBackground(Color)->void::: frame wrapper set background
sun.jvm.hotspot.ui.FrameWrapper#setResizable(boolean)->void::: frame wrapper set resizable
sun.jvm.hotspot.ui.FrameWrapper#setClosable(boolean)->void:::Largely for use with JInternalFrames but also affects, for       example, the default close operation for JFrames
sun.jvm.hotspot.ui.FrameWrapper#setClosingActionListener(ActionListener)->void:::Set an ActionListener to be invoked when the underlying window       is closing ("windowClosing" event of a WindowListener)
sun.jvm.hotspot.ui.FrameWrapper#setActivatedActionListener(ActionListener)->void:::Set an ActionListener to be invoked when the underlying window       is activated ("windowActivated" event of a       WindowListener)
sun.jvm.hotspot.ui.FrameWrapper#toFront()->void:::Move this frame to the front
sun.jvm.hotspot.ui.GraphicsUtilities#lookupFont(String)->Font:::Returns a plain-styled 12-point version of the given font, or       null if the font could not be found
sun.jvm.hotspot.ui.GraphicsUtilities#getStringBounds(String, Graphics)->Rectangle2D:::Compute the width and height of given string given the current       font context in the Graphics object
sun.jvm.hotspot.ui.GraphicsUtilities#getStringWidth(String, FontMetrics)->int:::Compute just the width of the given string with the given       FontMetrics
sun.jvm.hotspot.ui.GraphicsUtilities#reshapeToAspectRatio(Component, float, float, Dimension)->void::: graphics utilities reshape to aspect ratio
sun.jvm.hotspot.ui.GraphicsUtilities#constrainToSize(Component, Dimension)->void::: graphics utilities constrain to size
sun.jvm.hotspot.ui.GraphicsUtilities#centerInContainer(Component)->void::: graphics utilities center in container
sun.jvm.hotspot.ui.GraphicsUtilities#centerInContainer(Component, Dimension)->void::: graphics utilities center in container
sun.jvm.hotspot.ui.GraphicsUtilities#moveToInContainer(Component, float, float, int, int)->void::: graphics utilities move to in container
sun.jvm.hotspot.ui.GraphicsUtilities#randomLocation(Component)->void::: graphics utilities random location
sun.jvm.hotspot.ui.GraphicsUtilities#randomLocation(Component, Dimension)->void::: graphics utilities random location
sun.jvm.hotspot.ui.GraphicsUtilities#newBorder(int)->Border::: graphics utilities new border
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#getValueHP()->BigInteger::: high precision scroll bar get value p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#setValueHP(BigInteger)->void::: high precision scroll bar set value p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#getMinimumHP()->BigInteger::: high precision scroll bar get minimum p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#setMinimumHP(BigInteger)->void::: high precision scroll bar set minimum p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#getMaximumHP()->BigInteger::: high precision scroll bar get maximum p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#setMaximumHP(BigInteger)->void::: high precision scroll bar set maximum p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#getVisibleAmountHP()->BigInteger::: high precision scroll bar get visible amount p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#setVisibleAmountHP(BigInteger)->void::: high precision scroll bar set visible amount p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#getBlockIncrementHP()->BigInteger::: high precision scroll bar get block increment p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#setBlockIncrementHP(BigInteger)->void::: high precision scroll bar set block increment p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#getUnitIncrementHP()->BigInteger::: high precision scroll bar get unit increment p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#setUnitIncrementHP(BigInteger)->void::: high precision scroll bar set unit increment p
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#addChangeListener(ChangeListener)->void::: high precision scroll bar add change listener
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#removeChangeListener(ChangeListener)->void::: high precision scroll bar remove change listener
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#scrollUpOrLeft()->void::: high precision scroll bar scroll up or left
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#scrollDownOrRight()->void::: high precision scroll bar scroll down or right
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#pageUpOrLeft()->void::: high precision scroll bar page up or left
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#pageDownOrRight()->void::: high precision scroll bar page down or right
sun.jvm.hotspot.ui.HighPrecisionJScrollBar#main(String[])->void::: high precision scroll bar main
sun.jvm.hotspot.ui.HistoryComboBox#getText()->String::: history combo box get text
sun.jvm.hotspot.ui.HistoryComboBox#setText(String)->void::: history combo box set text
sun.jvm.hotspot.ui.JavaStackTracePanel#setJavaThread(JavaThread)->void::: java stack trace panel set java thread
sun.jvm.hotspot.ui.JavaThreadsPanel#actionPerformed(ActionEvent)->void::: java threads panel action performed
sun.jvm.hotspot.ui.JavaThreadsPanel#registerActions()->void::: java threads panel register actions
sun.jvm.hotspot.ui.JFrameWrapper#getComponent()->Component::: frame wrapper get component
sun.jvm.hotspot.ui.JFrameWrapper#getContentPane()->Container::: frame wrapper get content pane
sun.jvm.hotspot.ui.JFrameWrapper#setVisible(boolean)->void::: frame wrapper set visible
sun.jvm.hotspot.ui.JFrameWrapper#setSize(int, int)->void::: frame wrapper set size
sun.jvm.hotspot.ui.JFrameWrapper#pack()->void::: frame wrapper pack
sun.jvm.hotspot.ui.JFrameWrapper#show()->void::: frame wrapper show
sun.jvm.hotspot.ui.JFrameWrapper#dispose()->void::: frame wrapper dispose
sun.jvm.hotspot.ui.JFrameWrapper#setBackground(Color)->void::: frame wrapper set background
sun.jvm.hotspot.ui.JFrameWrapper#setResizable(boolean)->void::: frame wrapper set resizable
sun.jvm.hotspot.ui.JFrameWrapper#setClosable(boolean)->void::: frame wrapper set closable
sun.jvm.hotspot.ui.JFrameWrapper#setClosingActionListener(ActionListener)->void::: frame wrapper set closing action listener
sun.jvm.hotspot.ui.JFrameWrapper#setActivatedActionListener(ActionListener)->void::: frame wrapper set activated action listener
sun.jvm.hotspot.ui.JFrameWrapper#toFront()->void::: frame wrapper to front
sun.jvm.hotspot.ui.JInternalFrameWrapper#getComponent()->Component::: internal frame wrapper get component
sun.jvm.hotspot.ui.JInternalFrameWrapper#getContentPane()->Container::: internal frame wrapper get content pane
sun.jvm.hotspot.ui.JInternalFrameWrapper#setVisible(boolean)->void::: internal frame wrapper set visible
sun.jvm.hotspot.ui.JInternalFrameWrapper#setSize(int, int)->void::: internal frame wrapper set size
sun.jvm.hotspot.ui.JInternalFrameWrapper#pack()->void::: internal frame wrapper pack
sun.jvm.hotspot.ui.JInternalFrameWrapper#show()->void::: internal frame wrapper show
sun.jvm.hotspot.ui.JInternalFrameWrapper#dispose()->void::: internal frame wrapper dispose
sun.jvm.hotspot.ui.JInternalFrameWrapper#setBackground(Color)->void::: internal frame wrapper set background
sun.jvm.hotspot.ui.JInternalFrameWrapper#setResizable(boolean)->void::: internal frame wrapper set resizable
sun.jvm.hotspot.ui.JInternalFrameWrapper#setClosable(boolean)->void::: internal frame wrapper set closable
sun.jvm.hotspot.ui.JInternalFrameWrapper#setClosingActionListener(ActionListener)->void::: internal frame wrapper set closing action listener
sun.jvm.hotspot.ui.JInternalFrameWrapper#setActivatedActionListener(ActionListener)->void::: internal frame wrapper set activated action listener
sun.jvm.hotspot.ui.JInternalFrameWrapper#toFront()->void::: internal frame wrapper to front
sun.jvm.hotspot.ui.MemoryPanel.ActionWrapper#setParent(Action)->void::: action wrapper set parent
sun.jvm.hotspot.ui.MemoryPanel.ActionWrapper#getParent()->Action::: action wrapper get parent
sun.jvm.hotspot.ui.MemoryPanel.ActionWrapper#actionPerformed(ActionEvent)->void::: action wrapper action performed
sun.jvm.hotspot.ui.MemoryPanel#makeVisible(Address)->void:::Makes the given address visible somewhere in the window
sun.jvm.hotspot.ui.ObjectHistogramPanel#actionPerformed(ActionEvent)->void::: object histogram panel action performed
sun.jvm.hotspot.ui.ObjectHistogramPanel#registerActions()->void::: object histogram panel register actions
sun.jvm.hotspot.ui.ObjectHistogramPanel.Listener#showObjectsOfType(Klass)->void::: listener show objects of type
sun.jvm.hotspot.ui.ObjectHistogramPanel#addPanelListener(Listener)->void::: object histogram panel add panel listener
sun.jvm.hotspot.ui.ObjectHistogramPanel#removePanelListener(Listener)->void::: object histogram panel remove panel listener
sun.jvm.hotspot.ui.ObjectHistogramPanel#main(String[])->void::: object histogram panel main
sun.jvm.hotspot.ui.ProcessListPanel#setAutoUpdateInterval(int)->void::: process list panel set auto update interval
sun.jvm.hotspot.ui.ProcessListPanel#start()->void:::Start auto updating of the panel
sun.jvm.hotspot.ui.ProcessListPanel#stop()->void:::Stop auto updating of the panel
sun.jvm.hotspot.ui.ProcessListPanel#update()->void:::Call this to update the panel's notion of the process list
sun.jvm.hotspot.ui.ProcessListPanel#getSelectedProcess()->ProcessInfo:::Call this to get the selected ProcessInfo, or null if none selected
sun.jvm.hotspot.ui.ProgressBarPanel#setText(String)->void::: progress bar panel set text
sun.jvm.hotspot.ui.ProgressBarPanel#setValue(double)->void::: progress bar panel set value
sun.jvm.hotspot.ui.ProgressBarPanel#setIndeterminate(boolean)->void::: progress bar panel set indeterminate
sun.jvm.hotspot.ui.SAEditorPane#getSelectedText()->String::: editor pane get selected text
sun.jvm.hotspot.ui.SAEditorPane#setText(String)->void::: editor pane set text
sun.jvm.hotspot.ui.SAListener#showThreadOopInspector(JavaThread)->void::: listener show thread oop inspector
sun.jvm.hotspot.ui.SAListener#showInspector(SimpleTreeNode)->void::: listener show inspector
sun.jvm.hotspot.ui.SAListener#showThreadStackMemory(JavaThread)->void::: listener show thread stack memory
sun.jvm.hotspot.ui.SAListener#showThreadInfo(JavaThread)->void::: listener show thread info
sun.jvm.hotspot.ui.SAListener#showJavaStackTrace(JavaThread)->void::: listener show java stack trace
sun.jvm.hotspot.ui.SAListener#showCodeViewer(Address)->void::: listener show code viewer
sun.jvm.hotspot.ui.SAListener#showLiveness(Oop, LivenessPathList)->void::: listener show liveness
sun.jvm.hotspot.ui.SAPanel#addPanelListener(SAListener)->void::: panel add panel listener
sun.jvm.hotspot.ui.SAPanel#removePanelListener(SAListener)->void::: panel remove panel listener
sun.jvm.hotspot.ui.SAPanel#showThreadOopInspector(JavaThread)->void::: panel show thread oop inspector
sun.jvm.hotspot.ui.SAPanel#showInspector(Oop)->void::: panel show inspector
sun.jvm.hotspot.ui.SAPanel#showInspector(SimpleTreeNode)->void::: panel show inspector
sun.jvm.hotspot.ui.SAPanel#showThreadStackMemory(JavaThread)->void::: panel show thread stack memory
sun.jvm.hotspot.ui.SAPanel#showJavaStackTrace(JavaThread)->void::: panel show java stack trace
sun.jvm.hotspot.ui.SAPanel#showThreadInfo(JavaThread)->void::: panel show thread info
sun.jvm.hotspot.ui.SAPanel#showCodeViewer(Address)->void::: panel show code viewer
sun.jvm.hotspot.ui.SourceCodePanel.RowHeader#paint(Graphics)->void::: row header paint
sun.jvm.hotspot.ui.SourceCodePanel.RowHeader#getShowLineNumbers()->boolean::: row header get show line numbers
sun.jvm.hotspot.ui.SourceCodePanel.RowHeader#setShowLineNumbers(boolean)->void::: row header set show line numbers
sun.jvm.hotspot.ui.SourceCodePanel.RowHeader#setFont(Font)->void::: row header set font
sun.jvm.hotspot.ui.SourceCodePanel.RowHeader#setViewport(JViewport)->void::: row header set viewport
sun.jvm.hotspot.ui.SourceCodePanel.RowHeader#recomputeSize()->void::: row header recompute size
sun.jvm.hotspot.ui.SourceCodePanel#setFont(Font)->void::: source code panel set font
sun.jvm.hotspot.ui.SourceCodePanel#getShowLineNumbers()->boolean::: source code panel get show line numbers
sun.jvm.hotspot.ui.SourceCodePanel#setShowLineNumbers(boolean)->void::: source code panel set show line numbers
sun.jvm.hotspot.ui.SourceCodePanel#openFile(String)->boolean::: source code panel open file
sun.jvm.hotspot.ui.SourceCodePanel#getSourceFileName()->String::: source code panel get source file name
sun.jvm.hotspot.ui.SourceCodePanel#getCurrentLineNumber()->int:::Line number is one-based
sun.jvm.hotspot.ui.SourceCodePanel#showLineNumber(int)->void:::Line number is one-based
sun.jvm.hotspot.ui.SourceCodePanel#highlightLineNumber(int)->void:::Line number is one-based
sun.jvm.hotspot.ui.SourceCodePanel#showBreakpointAtLine(int)->void::: source code panel show breakpoint at line
sun.jvm.hotspot.ui.SourceCodePanel#hasBreakpointAtLine(int)->boolean::: source code panel has breakpoint at line
sun.jvm.hotspot.ui.SourceCodePanel#clearBreakpointAtLine(int)->void::: source code panel clear breakpoint at line
sun.jvm.hotspot.ui.SourceCodePanel#clearBreakpoints()->void::: source code panel clear breakpoints
sun.jvm.hotspot.ui.SourceCodePanel#setEditorCommands(EditorCommands, Editor)->void::: source code panel set editor commands
sun.jvm.hotspot.ui.SourceCodePanel#requestFocus()->void::: source code panel request focus
sun.jvm.hotspot.ui.StringTransferable#getTransferDataFlavors()->DataFlavor[]::: string transferable get transfer data flavors
sun.jvm.hotspot.ui.StringTransferable#isDataFlavorSupported(DataFlavor)->boolean::: string transferable is data flavor supported
sun.jvm.hotspot.ui.StringTransferable#getTransferData(DataFlavor)->Object::: string transferable get transfer data
sun.jvm.hotspot.ui.ThreadInfoPanel#setJavaThread(JavaThread)->void::: thread info panel set java thread
