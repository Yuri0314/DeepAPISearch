AnnotatedMemoryPanel#paintComponent(Graphics)::: annotated memory panel paint component:::super->paintComponent->g->create->g->setFont->g->setColor->rect->new->Rectangle->getBounds->firstAddressString->lineHeight->addrWidth->bounds->GraphicsUtilities->getStringBounds->bounds->getHeight->bounds->getWidth->addrX->dataX->lineStartX->annoStartX->numLines->startVal->scrollBar->getValueHP->perLine->Integer->toString->new->BigInteger->lineCount->Integer->toString->new->BigInteger->maxLines->scrollBar->getMaximumHP->scrollBar->getMinimumHP->subtract->divide->if->lineCount->compareTo->offsetVal->lineCount->multiply->endVal->startVal->add->if->endVal->scrollBar->getMaximumHP->compareTo->scrollBar->getMaximumHP->subtract->scrollBar->getMaximumHP->scrollBar->setValueHP->scrollBar->offsetVal->add->setVisibleAmountHP->scrollBar->setBlockIncrementHP->startAddr->bigIntToAddress->endAddr->bigIntToAddress->scrollOffset->if->lastStartAddr->minus->else->if->startAddr->minus->scrollAnnotations->curY->curAddr->for->i->va->annotations->startAddr->addOffsetTo->endAddr->addOffsetTo->new->Interval->findAllNodesIntersecting->curLineX->curTextX->curColorIdx->if->stroke->new->BasicStroke->setStroke->drawStack->new->Stack->layoutAnnotations->for->iter->visibleAnnotations->iterator->iter->hasNext
AnnotatedMemoryPanel#addAnnotation(Annotation):::Add an annotation covering the address range [annotation.lowAddress,       annotation.highAddress); that is, it includes the low address and does not       include the high address.:::annotations->annotation->getInterval->insert
AnnotatedMemoryPanel#makeVisible(Address):::Makes the given address visible somewhere in the window:::bi->addressToBigInt->scrollBar->setValueHP
AnnotatedMemoryPanel#print()::: annotated memory panel print:::printOn
AnnotatedMemoryPanel#printOn(PrintStream)::: annotated memory panel print on:::annotations->printOn
AnnotatedMemoryPanel#init(Debugger, boolean, BigInteger, BigInteger, BigInteger)::: annotated memory panel init:::if->else->new->BorderLayout->setLayout->setupScrollBar->add->new->ArrayList->setBackground->new->HierarchyBoundsListener->addHierarchyBoundsListener->if->GraphicsUtilities->lookupFont->if->throw->new->RuntimeException->getInputMap->KeyStroke->getKeyStroke->put->getActionMap->new->AbstractAction->put->getInputMap->KeyStroke->getKeyStroke->put->getActionMap->new->AbstractAction->put->getInputMap->KeyStroke->getKeyStroke->put->getActionMap->new->AbstractAction->put->getInputMap->KeyStroke->getKeyStroke->put->getActionMap->new->AbstractAction->put->setEnabled
AnnotatedMemoryPanel#setupScrollBar(BigInteger, BigInteger, BigInteger)::: annotated memory panel setup scroll bar:::new->HighPrecisionJScrollBar->if->scrollBar->new->byteArr->new->BigInteger->setUnitIncrementHP->scrollBar->new->byteArr->new->BigInteger->setBlockIncrementHP->else->scrollBar->new->byteArr->new->BigInteger->setUnitIncrementHP->scrollBar->new->byteArr->new->BigInteger->setBlockIncrementHP->scrollBar->new->ChangeListener->addChangeListener
AnnotatedMemoryPanel#defaultMemoryLocation(boolean)::: annotated memory panel default memory location:::if->return->new->byteArr->new->BigInteger->else->return->new->byteArr->new->BigInteger
AnnotatedMemoryPanel#defaultMemoryLow(boolean)::: annotated memory panel default memory low:::if->return->new->byteArr->new->BigInteger->else->return->new->byteArr->new->BigInteger
AnnotatedMemoryPanel#defaultMemoryHigh(boolean)::: annotated memory panel default memory high:::if->return->new->byteArr->new->BigInteger->else->return->new->byteArr->new->BigInteger
AnnotatedMemoryPanel#setupScrollBar()::: annotated memory panel setup scroll bar:::defaultMemoryLocation->defaultMemoryLow->defaultMemoryHigh->setupScrollBar
AnnotatedMemoryPanel#bigIntToHexString(BigInteger)::: annotated memory panel big int to hex string:::buf->new->StringBuffer->buf->append->val->bi->toString->for->i->val->length->buf->append->return->buf->toString
AnnotatedMemoryPanel#bigIntToAddress(BigInteger)::: annotated memory panel big int to address:::s->bigIntToHexString->return->debugger->parseAddress
AnnotatedMemoryPanel#addressToBigInt(Address)::: annotated memory panel address to big int:::s->addressToString->if->s->startsWith->throw->new->NumberFormatException->return->s->substring->new->BigInteger
AnnotatedMemoryPanel#addressToString(Address)::: annotated memory panel address to string:::if->if->return->else->return->return->a->toString
AnnotatedMemoryPanel#scrollAnnotations(int):::Scrolls the visible annotations by the given Y amount:::for->iter->visibleAnnotations->iterator->iter->hasNext
AnnotatedMemoryPanel#layoutAnnotations(java.util.List, Graphics, int, Address, int):::Takes the list of currently-visible annotations (in the form of       a List<IntervalNode>) and lays them out given the current       visible position and the already-visible annotations:::if->va->size->visibleAnnotations->clear->return->deferredIndex->constraintAnnotation->firstConstraintAnnotation->searchIndex->newAnnos->new->ArrayList->for->iter->va->iterator->iter->hasNext->if->for->i->else->if->Assert->that->for->iter->newAnnos->iterator->iter->hasNext
AnnotatedMemoryPanel#layoutBefore(Annotation, Annotation, Graphics, int, Address, int):::Lays out the given annotation before the optional constraint       annotation, obeying constraints imposed by that annotation if it       is specified.:::anno->computeWidthAndHeight->if->anno->constraintAnno->getColor->prevColor->setColor->else->anno->setColor->anno->setX->anno->anno->getInterval->getLowEndpoint->minus->setY->if->anno->getY->anno->getHeight->constraintAnno->getY->anno->constraintAnno->getY->anno->getHeight->setY
AnnotatedMemoryPanel#layoutAfter(Annotation, Annotation, Graphics, int, Address, int):::Lays out the given annotation after the optional constraint       annotation, obeying constraints imposed by that annotation if it       is specified.:::anno->computeWidthAndHeight->if->anno->constraintAnno->getColor->nextColor->setColor->else->anno->setColor->anno->setX->anno->anno->getInterval->getLowEndpoint->minus->setY->if->anno->getY->constraintAnno->getY->constraintAnno->getHeight->anno->constraintAnno->getY->constraintAnno->getHeight->setY
AnnotatedMemoryPanel#prevColor(Color):::Returns previous color in our color palette:::i->findColorIndex->if->return->else->return
AnnotatedMemoryPanel#nextColor(Color):::Returns next color in our color palette:::return->findColorIndex
AnnotatedMemoryPanel#findColorIndex(Color)::: annotated memory panel find color index:::for->i->throw->new->IllegalArgumentException
AnnotatedMemoryPanel#main(String[])::: annotated memory panel main:::frame->new->JFrame->debugger->new->MachineDescriptionIntelX86->new->DummyDebugger->anno->new->AnnotatedMemoryPanel->frame->getContentPane->add->anno->debugger->parseAddress->debugger->parseAddress->new->Annotation->addAnnotation->anno->debugger->parseAddress->debugger->parseAddress->new->Annotation->addAnnotation->anno->debugger->parseAddress->debugger->parseAddress->new->Annotation->addAnnotation->frame->setSize->frame->new->WindowAdapter->addWindowListener->frame->setVisible
Annotation#getInterval()::: annotation get interval:::return
Annotation#getLowAddress()::: annotation get low address:::return->getInterval->getLowEndpoint
Annotation#getHighAddress()::: annotation get high address:::return->getInterval->getHighEndpoint
Annotation#draw(Graphics):::Draw the annotation at its current (x, y) position with its       current color:::g->setColor->tmpY->for->i->strings->size
Annotation#setColor(Color):::Sets the base color of this annotation:::
Annotation#getColor():::Returns the base color of this annotation.:::return
Annotation#computeWidthAndHeight(Graphics):::Computes width and height for this Annotation:::heights->clear->for->iter->strings->iterator->iter->hasNext
Annotation#getWidth()::: annotation get width:::return
Annotation#getHeight()::: annotation get height:::return
Annotation#setXAndY(int, int):::Set the x and y position of this annotation:::
Annotation#setX(int)::: annotation set x:::
Annotation#getX()::: annotation get x:::return
Annotation#setY(int)::: annotation set y:::
Annotation#getY()::: annotation get y:::return
Annotation#getBounds()::: annotation get bounds:::return->new->Rectangle
Annotation#toString()::: annotation to string:::result->getLowAddress->getHighAddress->strings->size->for->i->strings->size->return
CommandProcessorPanel#requestFocus()::: command processor panel request focus:::editor->requestFocus
CommandProcessorPanel#clear()::: command processor panel clear:::d->editor->getDocument->d->clear->commands->executeCommand->setMark->editor->requestFocus
CommandProcessorPanel#setMark()::: command processor panel set mark:::editor->getDocument->setMark
CommandProcessorPanel#getMarkedText()::: command processor panel get marked text:::try->s->editor->getDocument->getMarkedText->i->s->length->while->s->charAt->return->s->substring->catch->e->printStackTrace->return->finally
CommandProcessorPanel#beginUpdate()::: command processor panel begin update:::
CommandProcessorPanel#endUpdate()::: command processor panel end update:::
CommandProcessorPanel#insertContains(DocumentEvent, char)::: command processor panel insert contains:::s->try->editor->e->getOffset->e->getLength->getText->for->i->e->getLength->catch->ex->printStackTrace->finally->return
CommandProcessorPanel#trimContinuations(String)::: command processor panel trim continuations:::i->while->text->indexOf->text->substring->text->text->length->substring->return
CommandProcessorPanel#main(String[])::: command processor panel main:::frame->new->JFrame->frame->getContentPane->new->BorderLayout->setLayout->panel->new->CommandProcessorPanel->frame->getContentPane->add->frame->new->WindowAdapter->addWindowListener->frame->setSize->frame->setVisible->panel->requestFocus
DeadlockDetectionPanel#printDeadlocks(PrintStream)::: deadlock detection panel print deadlocks:::DeadlockDetector->print
DebuggerConsolePanel#requestFocus()::: debugger console panel request focus:::editor->requestFocus
DebuggerConsolePanel#clear()::: debugger console panel clear:::d->editor->getDocument->d->clear->printPrompt->setMark->editor->requestFocus
DebuggerConsolePanel#setMark()::: debugger console panel set mark:::editor->getDocument->setMark
DebuggerConsolePanel#getMarkedText()::: debugger console panel get marked text:::try->s->editor->getDocument->getMarkedText->i->s->length->while->s->charAt->return->s->substring->catch->e->printStackTrace->return->finally
DebuggerConsolePanel#beginUpdate()::: debugger console panel begin update:::
DebuggerConsolePanel#endUpdate()::: debugger console panel end update:::
DebuggerConsolePanel#print(String)::: debugger console panel print:::d->editor->getDocument->try->d->d->getLength->insertString->catch->e->printStackTrace->finally
DebuggerConsolePanel#printPrompt()::: debugger console panel print prompt:::if->print->else->debugger->getConsolePrompt->print
DebuggerConsolePanel#insertContains(DocumentEvent, char)::: debugger console panel insert contains:::s->try->editor->e->getOffset->e->getLength->getText->for->i->e->getLength->catch->ex->printStackTrace->finally->return
DebuggerConsolePanel#trimContinuations(String)::: debugger console panel trim continuations:::i->while->text->indexOf->text->substring->text->text->length->substring->return
DebuggerConsolePanel#main(String[])::: debugger console panel main:::frame->new->JFrame->frame->getContentPane->new->BorderLayout->setLayout->panel->new->DebuggerConsolePanel->frame->getContentPane->add->frame->new->WindowAdapter->addWindowListener->frame->setSize->frame->setVisible->panel->requestFocus
EditableAtEndDocument#insertString(int, String, AttributeSet)::: editable at end document insert string:::len->getLength->super->insertString
EditableAtEndDocument#remove(int, int)::: editable at end document remove:::start->end->markStart->markEnd->getLength->if->return->cutStart->Math->max->cutEnd->Math->min->super->remove
EditableAtEndDocument#setMark()::: editable at end document set mark:::getLength
EditableAtEndDocument#getMarkedText()::: editable at end document get marked text:::return->getLength->getText
EditableAtEndDocument#clear():::Used to reset the contents of this document:::try->super->getLength->remove->setMark->catch->finally
Editor#getSourceFileName():::Get name of source file being displayed:::
Editor#getCurrentLineNumber():::Get (one-based) line number on which cursor is currently placed:::
Editor#showLineNumber(int):::Make a particular line number visible on the screen:::
Editor#highlightLineNumber(int):::Highlight a particular line number:::
Editor#showBreakpointAtLine(int):::Show a breakpoint indicator on the current (one-based) line.:::
Editor#hasBreakpointAtLine(int):::Indicates whether a breakpoint indicator is visible on the       current (one-based) line.:::
Editor#clearBreakpointAtLine(int):::Clear a breakpoint indicator on the current (one-based) line.:::
Editor#clearBreakpoints():::Clear all breakpoint indicators.:::
Editor#setUserData(Object):::Set optional object of user data:::
Editor#getUserData():::Get optional object of user data:::
Editor#toFront():::Bring the given Editor to the front of all other Editors:::
EditorCommands#windowClosed(Editor):::Notifies the debugger that the editing window has been closed.:::
EditorCommands#toggleBreakpointAtLine(Editor, int):::Toggles a breakpoint at the given (one-based) line:::
EditorFactory#openFile(String, EditorCommands):::Opens the given file in a new window:::
EditorFactory#getCurrentEditor():::Retrieves the current topmost file of all of the Editors this       EditorFactory has opened:::
FindInCodeCachePanel.Visitor#prologue(Address, Address)::: visitor prologue:::end->minus->new->StringBuffer->clearResultWindow
FindInCodeCachePanel.Visitor#visit(CodeBlob)::: visitor visit:::begin->blob->headerBegin->end->begin->blob->getSize->addOffsetTo->addressSize->VM->getVM->getAddressSize->found->while->begin->lessThan->val->begin->getAddressAt->if->AddressOps->equal->reportResult->begin->addOffsetTo->end->minus->updateProgressBar
FindInCodeCachePanel.Visitor#epilogue()::: visitor epilogue:::
FindInCodeCachePanel.Visitor#cleanup()::: visitor cleanup:::updateProgressBar
FindInCodeCachePanel.Visitor#search()::: visitor search:::val->try->VM->getVM->getDebugger->addressField->getText->parseAddress->catch->contentEditor->setText->return->finally->synchronized->if->value->equals->return->contentEditor->setText->findButton->setEnabled->println->t->new->Runnable->new->java.lang.Thread->t->start
FindInCodeCachePanel#reportResult(StringBuffer, CodeBlob)::: find in code cache panel report result:::result->append->result->blob->contentBegin->toString->append->result->append->result->blob->getName->append->result->append->result->blob->contentBegin->append->result->append
FindInCodeCachePanel#clearResultWindow()::: find in code cache panel clear result window:::SwingUtilities->new->Runnable->invokeLater
FindInCodeCachePanel#updateProgressBar(StringBuffer)::: find in code cache panel update progress bar:::SwingUtilities->new->Runnable->invokeLater
FindInHeapPanel#reportResult(Address)::: find in heap panel report result:::synchronized->try->updates->add->if->SwingUtilities->new->Runnable->invokeLater->catch->t->printStackTrace->return->finally->return
FindInHeapPanel#clearResultWindow()::: find in heap panel clear result window:::SwingUtilities->new->Runnable->invokeLater
FindInHeapPanel#updateResultWindow()::: find in heap panel update result window:::if->updates->size->i->updates->iterator->while->i->hasNext->textArea->i->next->append->new->ArrayList
FindInHeapPanel#invokeInDispatchThread(Runnable)::: find in heap panel invoke in dispatch thread:::if->EventQueue->isDispatchThread->runnable->run->else->SwingUtilities->invokeLater
FindInHeapPanel#updateProgressBar()::: find in heap panel update progress bar:::frac->if->if->println->SwingUtilities->new->Runnable->invokeLater
FindPanel#clear()::: find panel clear:::doc->textArea->getDocument->if->doc->getLength->try->doc->doc->getLength->remove->catch->finally
FrameWrapper#getComponent():::The JInternalFrame or JFrame this wraps:::
FrameWrapper#getContentPane()::: frame wrapper get content pane:::
FrameWrapper#setVisible(boolean)::: frame wrapper set visible:::
FrameWrapper#setSize(int, int)::: frame wrapper set size:::
FrameWrapper#pack()::: frame wrapper pack:::
FrameWrapper#dispose()::: frame wrapper dispose:::
FrameWrapper#setBackground(Color)::: frame wrapper set background:::
FrameWrapper#setResizable(boolean)::: frame wrapper set resizable:::
FrameWrapper#setClosable(boolean):::Largely for use with JInternalFrames but also affects, for       example, the default close operation for JFrames:::
FrameWrapper#setClosingActionListener(ActionListener):::Set an ActionListener to be invoked when the underlying window       is closing ("windowClosing" event of a WindowListener):::
FrameWrapper#setActivatedActionListener(ActionListener):::Set an ActionListener to be invoked when the underlying window       is activated ("windowActivated" event of a       WindowListener):::
FrameWrapper#toFront():::Move this frame to the front:::
GraphicsUtilities#lookupFont(String):::Returns a plain-styled 12-point version of the given font, or       null if the font could not be found:::allFonts->GraphicsEnvironment->getLocalGraphicsEnvironment->getAllFonts->font->for->i->if->return->return->font->deriveFont
GraphicsUtilities#getStringBounds(String, Graphics):::Compute the width and height of given string given the current       font context in the Graphics object:::fm->g->getFontMetrics->return->fm->s->length->getStringBounds
GraphicsUtilities#getStringWidth(String, FontMetrics):::Compute just the width of the given string with the given       FontMetrics:::return->fm->stringWidth
GraphicsUtilities#reshapeToAspectRatio(Component, float, float, Dimension)::: graphics utilities reshape to aspect ratio:::x->y->desiredX->desiredY->if->else->component->setSize
GraphicsUtilities#constrainToSize(Component, Dimension)::: graphics utilities constrain to size:::d->component->getSize->x->y->changed->if->if->if->component->setSize
GraphicsUtilities#centerInContainer(Component)::: graphics utilities center in container:::c->getParent->getSize->centerInContainer
GraphicsUtilities#centerInContainer(Component, Dimension)::: graphics utilities center in container:::sz->component->getSize->x->y->component->setLocation
GraphicsUtilities#moveToInContainer(Component, float, float, int, int)::: graphics utilities move to in container:::d->component->getParent->getSize->sz->component->getSize->xPos->Math->min->yPos->Math->min->Math->max->Math->max->component->setLocation
GraphicsUtilities#randomLocation(Component)::: graphics utilities random location:::c->getParent->getSize->randomLocation
GraphicsUtilities#randomLocation(Component, Dimension)::: graphics utilities random location:::sz->component->getSize->x->random->nextFloat->y->random->nextFloat->component->setLocation
GraphicsUtilities#newBorder(int)::: graphics utilities new border:::return->BorderFactory->createEmptyBorder
HighPrecisionJScrollBar#getValueHP()::: high precision scroll bar get value p:::return
HighPrecisionJScrollBar#setValueHP(BigInteger)::: high precision scroll bar set value p:::if->value->getMaximumHP->compareTo->getMaximumHP->else->if->value->getMinimumHP->compareTo->getMinimumHP->value->value->mod->subtract->lpValue->toUnderlyingRange->if->getValueHP->getVisibleAmountHP->add->getMaximumHP->compareTo->getVisibleAmount->setValue->fireStateChanged
HighPrecisionJScrollBar#getMinimumHP()::: high precision scroll bar get minimum p:::return
HighPrecisionJScrollBar#setMinimumHP(BigInteger)::: high precision scroll bar set minimum p:::setRange->updateScrollBarValues
HighPrecisionJScrollBar#getMaximumHP()::: high precision scroll bar get maximum p:::return
HighPrecisionJScrollBar#setMaximumHP(BigInteger)::: high precision scroll bar set maximum p:::setRange->updateScrollBarValues
HighPrecisionJScrollBar#getVisibleAmountHP()::: high precision scroll bar get visible amount p:::return
HighPrecisionJScrollBar#setVisibleAmountHP(BigInteger)::: high precision scroll bar set visible amount p:::lpVisAmt->if->visibleAmount->compareTo->scaleToUnderlying->if->setVisible->else->setVisible->setVisibleAmount
HighPrecisionJScrollBar#getBlockIncrementHP()::: high precision scroll bar get block increment p:::return
HighPrecisionJScrollBar#setBlockIncrementHP(BigInteger)::: high precision scroll bar set block increment p:::
HighPrecisionJScrollBar#getUnitIncrementHP()::: high precision scroll bar get unit increment p:::return
HighPrecisionJScrollBar#setUnitIncrementHP(BigInteger)::: high precision scroll bar set unit increment p:::
HighPrecisionJScrollBar#addChangeListener(ChangeListener)::: high precision scroll bar add change listener:::changeListeners->add
HighPrecisionJScrollBar#removeChangeListener(ChangeListener)::: high precision scroll bar remove change listener:::changeListeners->remove
HighPrecisionJScrollBar#scrollUpOrLeft()::: high precision scroll bar scroll up or left:::if->return->beginUpdate->getValueHP->getUnitIncrementHP->subtract->setValueHP->endUpdate
HighPrecisionJScrollBar#scrollDownOrRight()::: high precision scroll bar scroll down or right:::if->return->beginUpdate->getValueHP->getUnitIncrementHP->add->setValueHP->endUpdate
HighPrecisionJScrollBar#pageUpOrLeft()::: high precision scroll bar page up or left:::if->return->beginUpdate->getValueHP->getBlockIncrementHP->subtract->setValueHP->endUpdate
HighPrecisionJScrollBar#pageDownOrRight()::: high precision scroll bar page down or right:::if->return->beginUpdate->getValueHP->getBlockIncrementHP->add->setValueHP->endUpdate
HighPrecisionJScrollBar#beginUpdate()::: high precision scroll bar begin update:::
HighPrecisionJScrollBar#endUpdate()::: high precision scroll bar end update:::
HighPrecisionJScrollBar#initialize(BigInteger, BigInteger, BigInteger)::: high precision scroll bar initialize:::setMinimum->setMaximum->setValue->setVisibleAmount->setUnitIncrement->setBlockIncrement->Integer->getUnitIncrement->toString->new->BigInteger->setUnitIncrementHP->Integer->getBlockIncrement->toString->new->BigInteger->setBlockIncrementHP->setRange->Integer->getVisibleAmount->toString->new->BigInteger->setVisibleAmountHP->setValueHP
HighPrecisionJScrollBar#initialize()::: high precision scroll bar initialize:::min->Integer->getMinimum->toString->new->BigInteger->max->Integer->getMaximum->toString->new->BigInteger->initialize
HighPrecisionJScrollBar#setRange(BigInteger, BigInteger)::: high precision scroll bar set range:::if->minimum->compareTo->throw->new->RuntimeException->maximum->subtract->add->range2->Integer->toString->new->BigInteger->if->rangeHP->compareTo->new->BigDecimal->new->BigDecimal->divide->new->BigDecimal->max->else->new->BigDecimal->new->BigDecimal->divide->new->BigDecimal->max
HighPrecisionJScrollBar#updateScrollBarValues()::: high precision scroll bar update scroll bar values:::getValueHP->setValueHP->getVisibleAmountHP->setVisibleAmountHP->getBlockIncrementHP->setBlockIncrementHP->getUnitIncrementHP->setUnitIncrementHP
HighPrecisionJScrollBar#getScaleFactor()::: high precision scroll bar get scale factor:::return
HighPrecisionJScrollBar#scaleToHP(int)::: high precision scroll bar scale to p:::ib->Integer->toString->new->BigDecimal->if->return->ib->getScaleFactor->multiply->toBigInteger->else->return->ib->getScaleFactor->divide->toBigInteger
HighPrecisionJScrollBar#scaleToUnderlying(BigInteger)::: high precision scroll bar scale to underlying:::d->new->BigDecimal->if->return->d->getScaleFactor->divide->intValue->else->return->d->getScaleFactor->multiply->intValue
HighPrecisionJScrollBar#toHPRange(int)::: high precision scroll bar to range:::return->scaleToHP->add
HighPrecisionJScrollBar#toUnderlyingRange(BigInteger)::: high precision scroll bar to underlying range:::return->i->subtract->scaleToUnderlying
HighPrecisionJScrollBar#installListener()::: high precision scroll bar install listener:::super->new->AdjustmentListener->addAdjustmentListener
HighPrecisionJScrollBar#fireStateChanged()::: high precision scroll bar fire state changed:::e->for->iter->changeListeners->iterator->iter->hasNext
HighPrecisionJScrollBar#main(String[])::: high precision scroll bar main:::frame->new->JFrame->frame->setSize->hpsb->new->byteArr->new->BigInteger->new->byteArr->new->BigInteger->new->byteArr->new->BigInteger->new->HighPrecisionJScrollBar->hpsb->new->byteArr->new->BigInteger->setUnitIncrementHP->hpsb->new->byteArr->new->BigInteger->setBlockIncrementHP->hpsb->new->ChangeListener->addChangeListener->frame->getContentPane->add->frame->setVisible
HistoryComboBox#getText()::: history combo box get text:::text->getSelectedItem->if->return->return
HistoryComboBox#setText(String)::: history combo box set text:::removeItem->insertItemAt->setSelectedItem->length->getModel->getSize->while->removeItemAt
Inspector#setRoot(SimpleTreeNode)::: inspector set root:::model->setRoot
Inspector#fireComputeLiveness()::: inspector fire compute liveness:::cutoverButtonRunnable->new->Runnable->if->VM->getVM->getRevPtrs->cutoverButtonRunnable->run->else->worker->new->WorkerThread->worker->new->Runnable->invokeLater
Inspector#fireShowLiveness()::: inspector fire show liveness:::if->return->for->iter->listeners->iterator->iter->hasNext
JavaStackTracePanel#initUI()::: java stack trace panel init i:::new->BorderLayout->setLayout->hyperListener->new->HyperlinkListener->new->SAEditorPane->stackTraceEditor->addHyperlinkListener->new->SAEditorPane->contentEditor->addHyperlinkListener->topPanel->new->JPanel->topPanel->new->BorderLayout->setLayout->topPanel->new->JScrollPane->add->bottomPanel->new->JPanel->bottomPanel->new->BorderLayout->setLayout->bottomPanel->new->JScrollPane->add->new->JSplitPane->splitPane->setDividerLocation->new->BorderLayout->setLayout->add
JavaStackTracePanel#setJavaThread(JavaThread)::: java stack trace panel set java thread:::htmlGen->genHTMLForJavaStackTrace->setStackTraceText
JavaStackTracePanel#setStackTraceText(String)::: java stack trace panel set stack trace text:::stackTraceEditor->setText
JavaStackTracePanel#setContentText(String)::: java stack trace panel set content text:::contentEditor->setText
JavaThreadsPanel#initialize(TypeDataBase)::: java threads panel initialize:::db->lookupType->getAddressField
JavaThreadsPanel.ThreadPanel#isInfoVisible():::Returns a flag to indicate if the thread info is visible:::return->splitPane->getBottomComponent
JavaThreadsPanel.ThreadPanel#showOutputPane()::: thread panel show output pane:::if->splitPane->getBottomComponent->splitPane->setBottomComponent->if->pSize->this->getSize->splitPane->setDividerSize->splitPane->setDividerLocation->showCurrentThreadInfo
JavaThreadsPanel.ThreadPanel#hideOutputPane()::: thread panel hide output pane:::splitPane->getDividerLocation->splitPane->remove->splitPane->setDividerSize
JavaThreadsPanel.ThreadPanel#showCurrentThreadInfo()::: thread panel show current thread info:::row->threadTable->getSelectedRow->if->threadInfo->dataModel->getJavaThread->setJavaThread
JavaThreadsPanel.ThreadPanel#setActionsEnabled(boolean)::: thread panel set actions enabled:::if->manager->ActionManager->getInstance->manager->setActionEnabled->manager->setActionEnabled->manager->setActionEnabled
JavaThreadsPanel.JavaThreadsToolBar#addComponents()::: java threads tool bar add components:::manager->getAction->addButton->manager->getAction->addButton->manager->getAction->addButton->manager->getStateChangeAction->addToggleButton->manager->getAction->addButton
JavaThreadsPanel.JavaThreadsTableModel#getColumnCount()::: java threads table model get column count:::return
JavaThreadsPanel.JavaThreadsTableModel#getRowCount()::: java threads table model get row count:::return->elements->size
JavaThreadsPanel.JavaThreadsTableModel#getColumnName(int)::: java threads table model get column name:::return
JavaThreadsPanel.JavaThreadsTableModel#getValueAt(int, int)::: java threads table model get value at:::thread->getRow->switch->return->thread->getThreadID->return->thread->getThreadName->throw->new->RuntimeException
JavaThreadsPanel.JavaThreadsTableModel#getJavaThread(int):::Returns the selected Java Thread indexed by the row or null.:::return->getRow->getThread
JavaThreadsPanel.JavaThreadsTableModel#getRow(int)::: java threads table model get row:::return->elements->get
JavaThreadsPanel.JavaThreadsTableModel#threadIDAt(int)::: java threads table model thread at:::return->cachedThreads->get->getThreadID
JavaThreadsPanel.JavaThreadsTableModel#threadNameAt(int)::: java threads table model thread name at:::try->return->cachedThreads->get->getThreadName->catch->return->return->finally
JavaThreadsPanel#actionPerformed(ActionEvent)::: java threads panel action performed:::command->evt->getActionCommand->if->command->equals->fireShowThreadOopInspector->else->if->command->equals->fireShowThreadStackMemory->else->if->command->equals->fireShowThreadInfo->else->if->command->equals->if->fireShowThreadCrashes->statusBar->setMessage->else->statusBar->setMessage->else->if->command->equals->fireShowJavaStackTrace
JavaThreadsPanel.CachedThread#getThread()::: cached thread get thread:::return
JavaThreadsPanel.CachedThread#getThreadID()::: cached thread get thread d:::if->compute->return
JavaThreadsPanel.CachedThread#getThreadName()::: cached thread get thread name:::if->compute->return
JavaThreadsPanel.CachedThread#compute()::: cached thread compute:::bos->new->ByteArrayOutputStream->thread->new->PrintStream->printThreadIDOn->bos->toString->thread->getThreadName
JavaThreadsPanel#registerActions()::: java threads panel register actions:::registerAction->registerAction->registerAction->registerAction->manager->ActionManager->getInstance->manager->setActionEnabled->manager->setActionEnabled->manager->setActionEnabled
JavaThreadsPanel#registerAction(String)::: java threads panel register action:::manager->ActionManager->getInstance->action->manager->getDelegateAction->action->addActionListener
JavaThreadsPanel#fireShowThreadOopInspector()::: java threads panel fire show thread oop inspector:::i->threadTable->getSelectedRow->if->return->t->dataModel->getJavaThread->showThreadOopInspector
JavaThreadsPanel#fireShowThreadStackMemory()::: java threads panel fire show thread stack memory:::i->threadTable->getSelectedRow->if->return->dataModel->getJavaThread->showThreadStackMemory
JavaThreadsPanel#fireShowJavaStackTrace()::: java threads panel fire show java stack trace:::i->threadTable->getSelectedRow->if->return->dataModel->getJavaThread->showJavaStackTrace
JavaThreadsPanel#fireShowThreadInfo()::: java threads panel fire show thread info:::i->threadTable->getSelectedRow->if->return->dataModel->getJavaThread->showThreadInfo
JavaThreadsPanel#fireShowThreadCrashes():::Shows stack memory for threads which have crashed (defined as having taken a signal above a Java frame):::crashed->cachedThreads->stream->t->getThread->map->t->getAddress->crashThread->getValue->equals->filter->findAny->crashed->this->showThreadStackMemory->ifPresent->return->crashed->isPresent
JavaThreadsPanel#cache()::: java threads panel cache:::threads->VM->getVM->getThreads->for->t->threads->first->t->next
JavaThreadsPanel#decache()::: java threads panel decache:::cachedThreads->clear
JFrameWrapper#getComponent()::: frame wrapper get component:::return
JFrameWrapper#getContentPane()::: frame wrapper get content pane:::return->frame->getContentPane
JFrameWrapper#setVisible(boolean)::: frame wrapper set visible:::frame->setVisible
JFrameWrapper#setSize(int, int)::: frame wrapper set size:::frame->setSize
JFrameWrapper#pack()::: frame wrapper pack:::frame->pack
JFrameWrapper#show()::: frame wrapper show:::frame->setVisible
JFrameWrapper#dispose()::: frame wrapper dispose:::frame->dispose
JFrameWrapper#setBackground(Color)::: frame wrapper set background:::frame->setBackground
JFrameWrapper#setResizable(boolean)::: frame wrapper set resizable:::frame->setResizable
JFrameWrapper#setClosable(boolean)::: frame wrapper set closable:::if->frame->setDefaultCloseOperation->else->frame->setDefaultCloseOperation
JFrameWrapper#setClosingActionListener(ActionListener)::: frame wrapper set closing action listener:::maybeInstallWindowListener
JFrameWrapper#setActivatedActionListener(ActionListener)::: frame wrapper set activated action listener:::maybeInstallWindowListener
JFrameWrapper#toFront()::: frame wrapper to front:::frame->toFront->frame->requestFocus
JFrameWrapper#maybeInstallWindowListener()::: frame wrapper maybe install window listener:::if->frame->new->WindowAdapter->addWindowListener
JInternalFrameWrapper#getComponent()::: internal frame wrapper get component:::return
JInternalFrameWrapper#getContentPane()::: internal frame wrapper get content pane:::return->frame->getContentPane
JInternalFrameWrapper#setVisible(boolean)::: internal frame wrapper set visible:::frame->setVisible
JInternalFrameWrapper#setSize(int, int)::: internal frame wrapper set size:::frame->setSize
JInternalFrameWrapper#pack()::: internal frame wrapper pack:::frame->pack
JInternalFrameWrapper#show()::: internal frame wrapper show:::frame->show
JInternalFrameWrapper#dispose()::: internal frame wrapper dispose:::frame->dispose
JInternalFrameWrapper#setBackground(Color)::: internal frame wrapper set background:::frame->setBackground
JInternalFrameWrapper#setResizable(boolean)::: internal frame wrapper set resizable:::frame->setResizable
JInternalFrameWrapper#setClosable(boolean)::: internal frame wrapper set closable:::frame->setClosable
JInternalFrameWrapper#setClosingActionListener(ActionListener)::: internal frame wrapper set closing action listener:::maybeInstallWindowListener
JInternalFrameWrapper#setActivatedActionListener(ActionListener)::: internal frame wrapper set activated action listener:::maybeInstallWindowListener
JInternalFrameWrapper#toFront()::: internal frame wrapper to front:::frame->toFront->try->frame->setSelected->catch->finally
JInternalFrameWrapper#maybeInstallWindowListener()::: internal frame wrapper maybe install window listener:::if->frame->new->InternalFrameAdapter->addInternalFrameListener
MemoryPanel.ActionWrapper#setParent(Action)::: action wrapper set parent:::
MemoryPanel.ActionWrapper#getParent()::: action wrapper get parent:::return
MemoryPanel.ActionWrapper#actionPerformed(ActionEvent)::: action wrapper action performed:::if->getParent->getParent->actionPerformed
MemoryPanel#makeVisible(Address):::Makes the given address visible somewhere in the window:::bi->addressToBigInt->scrollBar->setValueHP
MemoryPanel#setupScrollBar()::: memory panel setup scroll bar:::if->new->byteArr->new->BigInteger->new->byteArr->new->BigInteger->new->byteArr->new->BigInteger->new->HighPrecisionJScrollBar->scrollBar->new->byteArr->new->BigInteger->setUnitIncrementHP->scrollBar->new->byteArr->new->BigInteger->setBlockIncrementHP->else->new->byteArr->new->BigInteger->new->byteArr->new->BigInteger->new->byteArr->new->BigInteger->new->HighPrecisionJScrollBar->scrollBar->new->byteArr->new->BigInteger->setUnitIncrementHP->scrollBar->new->byteArr->new->BigInteger->setBlockIncrementHP->scrollBar->new->ChangeListener->addChangeListener
MemoryPanel#updateFromScrollBar()::: memory panel update from scroll bar:::beginUpdate->oldStartVal->scrollBar->getValueHP->constrain->model->fireTableDataChanged->if->oldStartVal->subtract->intValue->modifySelection->endUpdate
MemoryPanel#constrain()::: memory panel constrain:::offset->Integer->toString->new->BigInteger->endVal->startVal->add->if->endVal->scrollBar->getMaximumHP->compareTo->scrollBar->getMaximumHP->subtract->scrollBar->getMaximumHP->scrollBar->setValueHP->model->fireTableDataChanged
MemoryPanel#recomputeNumVisibleRows()::: memory panel recompute num visible rows:::rect->new->Rectangle->getBounds->h->table->getRowHeight->scrollBar->Integer->toString->new->BigInteger->setBlockIncrementHP->model->fireTableDataChanged
MemoryPanel#bigIntToHexString(BigInteger)::: memory panel big int to hex string:::buf->new->StringBuffer->buf->append->val->bi->toString->for->i->val->length->buf->append->return->buf->toString
MemoryPanel#bigIntToAddress(BigInteger)::: memory panel big int to address:::s->bigIntToHexString->return->debugger->parseAddress
MemoryPanel#addressToBigInt(Address)::: memory panel address to big int:::s->addressToString->if->s->startsWith->throw->new->NumberFormatException->return->s->substring->new->BigInteger
MemoryPanel#addressToString(Address)::: memory panel address to string:::if->if->return->else->return->return->a->toString
MemoryPanel#installActionWrapper(ActionMap, String, ActionWrapper)::: memory panel install action wrapper:::wrapper->map->get->setParent->map->put
MemoryPanel#shouldIgnore(MouseEvent)::: memory panel should ignore:::return->e->isConsumed->SwingUtilities->isLeftMouseButton->table->isEnabled
MemoryPanel#clearSelection()::: memory panel clear selection:::
MemoryPanel#updating()::: memory panel updating:::return
MemoryPanel#beginUpdate()::: memory panel begin update:::
MemoryPanel#endUpdate()::: memory panel end update:::
MemoryPanel#haveAnchor()::: memory panel have anchor:::return
MemoryPanel#haveLead()::: memory panel have lead:::return
MemoryPanel#haveSelection()::: memory panel have selection:::return->haveAnchor->haveLead
MemoryPanel#getRowAnchor()::: memory panel get row anchor:::return
MemoryPanel#getColAnchor()::: memory panel get col anchor:::return
MemoryPanel#getRowLead()::: memory panel get row lead:::return
MemoryPanel#getColLead()::: memory panel get col lead:::return
MemoryPanel#setAnchorFromTable()::: memory panel set anchor from table:::table->getSelectionModel->getAnchorSelectionIndex->table->getColumnModel->getSelectionModel->getAnchorSelectionIndex->setAnchor
MemoryPanel#setLeadFromTable()::: memory panel set lead from table:::table->getSelectionModel->getAnchorSelectionIndex->table->getColumnModel->getSelectionModel->getAnchorSelectionIndex->setLead
MemoryPanel#setAnchor(int, int)::: memory panel set anchor:::
MemoryPanel#setLead(int, int)::: memory panel set lead:::
MemoryPanel#clamp(int, int, int)::: memory panel clamp:::return->Math->Math->min->max
MemoryPanel#maybeGrabSelection()::: memory panel maybe grab selection:::if->table->getSelectedRow->rowSel->table->getSelectionModel->colSel->table->getColumnModel->getSelectionModel->if->haveAnchor->rowSel->getAnchorSelectionIndex->rowSel->getLeadSelectionIndex->colSel->getAnchorSelectionIndex->colSel->getLeadSelectionIndex->setSelection->else->getRowAnchor->rowSel->getLeadSelectionIndex->getColAnchor->colSel->getLeadSelectionIndex->setSelection
MemoryPanel#setSelection(int, int, int, int)::: memory panel set selection:::setAnchor->setLead->table->clamp->clamp->setRowSelectionInterval->table->setColumnSelectionInterval
MemoryPanel#modifySelection(int)::: memory panel modify selection:::if->haveSelection->getRowAnchor->getRowLead->getColAnchor->getColLead->setSelection
MemoryPanel#printSelection()::: memory panel print selection:::model->getRowAnchor->getColAnchor->getValueAt->model->getRowLead->getColLead->getValueAt->getRowAnchor->getColAnchor->getRowLead->getColLead->println
MonitorCacheDumpPanel#dumpMonitor(PrintStream, ObjectMonitor, boolean)::: monitor cache dump panel dump monitor:::tty->mon->getAddress->print->if->tty->print->tty->println->tty->Long->mon->header->value->toHexString->println->obj->mon->object->oop->heap->newOop->tty->oop->getKlass->getName->asString->println->owner->mon->owner->tty->println->if->thread->threads->owningThreadFromMonitor->if->tty->thread->getThreadName->println->if->thread->getAddress->equals->if->thread->isLockOwned->tty->println->tty->mon->count->println->tty->mon->waiters->println->tty->mon->recursions->println
MonitorCacheDumpPanel#dumpOn(PrintStream)::: monitor cache dump panel dump on:::i->ObjectSynchronizer->objectMonitorIterator->if->tty->println->tty->println->return->mon->while->i->hasNext->i->next->if->mon->count->mon->waiters->mon->owner->object->mon->object->if->dumpMonitor->else->dumpMonitor
ObjectHistogramPanel.ObjectHistogramToolBar#addComponents()::: object histogram tool bar add components:::new->JTextField->searchTF->setToolTipText->im->searchTF->getInputMap->im->KeyStroke->getKeyStroke->put->am->searchTF->getActionMap->am->manager->getAction->put->add->manager->getAction->addButton->manager->getAction->addButton
ObjectHistogramPanel.ObjectHistogramToolBar#getFindText()::: object histogram tool bar get find text:::return->searchTF->getText
ObjectHistogramPanel.ObjectHistogramTableModel#getColumnCount()::: object histogram table model get column count:::return
ObjectHistogramPanel.ObjectHistogramTableModel#getRowCount()::: object histogram table model get row count:::return->elements->size
ObjectHistogramPanel.ObjectHistogramTableModel#getColumnName(int)::: object histogram table model get column name:::return
ObjectHistogramPanel.ObjectHistogramTableModel#getColumnClass(int)::: object histogram table model get column class:::return
ObjectHistogramPanel.ObjectHistogramTableModel#getValueAt(int, int)::: object histogram table model get value at:::return->getElement->getValueForColumn
ObjectHistogramPanel.ObjectHistogramTableModel#getValueForColumn(Object, int)::: object histogram table model get value for column:::el->switch->return->el->getSize->new->Long->return->el->getCount->new->Long->return->el->getDescription->throw->new->RuntimeException
ObjectHistogramPanel.ObjectHistogramTableModel#getElement(int)::: object histogram table model get element:::return->elements->get
ObjectHistogramPanel.ObjectHistogramTableModel.ObjectHistogramComparator#getValueForColumn(Object, int):::Returns the value for the comparing object for the column.:::omodel->return->omodel->getValueForColumn
ObjectHistogramPanel#actionPerformed(ActionEvent)::: object histogram panel action performed:::command->evt->getActionCommand->if->command->equals->fireShowObjectsOfType->else->if->command->equals->findObject
ObjectHistogramPanel#registerActions()::: object histogram panel register actions:::registerAction->registerAction
ObjectHistogramPanel#registerAction(String)::: object histogram panel register action:::manager->ActionManager->getInstance->action->manager->getDelegateAction->action->addActionListener
ObjectHistogramPanel.Listener#showObjectsOfType(Klass)::: listener show objects of type:::
ObjectHistogramPanel#addPanelListener(Listener)::: object histogram panel add panel listener:::if->new->ArrayList->listeners->add
ObjectHistogramPanel#removePanelListener(Listener)::: object histogram panel remove panel listener:::if->listeners->remove
ObjectHistogramPanel#findObject():::Find and select the row that contains the text in the find field starting from the current selected row:::findText->toolbar->getFindText->if->findText->equals->return->model->table->getModel->row->table->getSelectedRow->if->model->getRowCount->else->value->for->i->model->getRowCount->for->i
ObjectHistogramPanel#fireShowObjectsOfType()::: object histogram panel fire show objects of type:::i->table->getSelectedRow->if->return->el->dataModel->getElement->for->iter->listeners->iterator->iter->hasNext
ObjectHistogramPanel#main(String[])::: object histogram panel main:::
ObjectListPanel.AddressWrapper#toString()::: address wrapper to string:::return->address->toString
ObjectListPanel.AddressWrapper#compareTo(Object)::: address wrapper compare to:::wrapper->addr->if->AddressOps->lessThan->return->if->AddressOps->greaterThan->return->return
ObjectListPanel.ObjectListTableModel#getColumnCount()::: object list table model get column count:::return
ObjectListPanel.ObjectListTableModel#getRowCount()::: object list table model get row count:::return->elements->size
ObjectListPanel.ObjectListTableModel#getColumnName(int)::: object list table model get column name:::switch->return->return->if->return->else->return->if->return->else->if->VM->getVM->getRevPtrs->return->if->VM->getVM->getRevPtrs->return->throw->new->RuntimeException
ObjectListPanel.ObjectListTableModel#getValueAt(int, int)::: object list table model get value at:::oop->elements->get->return->getValueForColumn
ObjectListPanel.ObjectListTableModel#getValueForColumn(Oop, int)::: object list table model get value for column:::bos->new->ByteArrayOutputStream->switch->return->oop->getHandle->new->AddressWrapper->oop->new->PrintStream->printValueOn->break->if->if->return->getLength->new->Long->return->else->oop->getKlass->new->PrintStream->printValueOn->break->if->oop->getKlass->new->PrintStream->printValueOn->break->else->if->VM->getVM->getRevPtrs->if->VM->getVM->getRevPtrs->get->return->else->return->if->if->VM->getVM->getRevPtrs->if->VM->getVM->getRevPtrs->get->return->else->return->throw->new->RuntimeException->return->bos->toString
ObjectListPanel.ObjectListTableModel.ObjectListComparator#getValueForColumn(Object, int):::Returns the value for the comparing object for the column.:::omodel->return->omodel->getValueForColumn
ObjectListPanel#fireShowInspector()::: object list panel fire show inspector:::i->table->getSelectedRow->if->return->oop->elements->get->for->iter->listeners->iterator->iter->hasNext
ObjectListPanel#fireComputeLiveness()::: object list panel fire compute liveness:::cutoverButtonRunnable->new->Runnable->if->VM->getVM->getRevPtrs->cutoverButtonRunnable->run->else->worker->new->WorkerThread->worker->new->Runnable->invokeLater
ObjectListPanel#fireShowLiveness()::: object list panel fire show liveness:::if->VM->getVM->getRevPtrs->return->i->table->getSelectedRow->if->return->oop->elements->get->list->LivenessAnalysis->computeAllLivenessPaths->if->return->for->iter->listeners->iterator->iter->hasNext
ObjectListPanel#checkForArrays()::: object list panel check for arrays:::if->return->for->iter->elements->iterator->iter->hasNext
ObjectListPanel#computeNumColumns()::: object list panel compute num columns:::checkForArrays->if->if->VM->getVM->getRevPtrs
ProcessListPanel#setAutoUpdateInterval(int)::: process list panel set auto update interval:::getTimer->setDelay
ProcessListPanel#start():::Start auto updating of the panel:::getTimer->start
ProcessListPanel#stop():::Stop auto updating of the panel:::getTimer->stop
ProcessListPanel#update():::Call this to update the panel's notion of the process list:::if->dbg->hasProcessList->throw->new->RuntimeException->newEls->dbg->getProcessList->sort->if->i->table->getSelectedRow->pid->getPid->findPid->dataModel->fireTableDataChanged->if->els->size->if->table->setRowSelectionInterval->else->table->setRowSelectionInterval->else
ProcessListPanel#getSelectedProcess():::Call this to get the selected ProcessInfo, or null if none selected:::i->table->getSelectedRow->if->return->return->els->get
ProcessListPanel#sort(java.util.List)::: process list panel sort:::c->if->new->Comparator->else->new->Comparator->Collections->sort
ProcessListPanel#getTimer()::: process list panel get timer:::if->new->ActionListener->new->javax.swing.Timer->return
ProcessListPanel#getPid(java.util.List, int)::: process list panel get pid:::return->els->get->getPid
ProcessListPanel#findPid(java.util.List, int)::: process list panel find pid:::for->i->els->size->return
ProgressBarPanel#setText(String)::: progress bar panel set text:::setText
ProgressBarPanel#setValue(double)::: progress bar panel set value:::realVal->bar->setValue
ProgressBarPanel#setIndeterminate(boolean)::: progress bar panel set indeterminate:::bar->setIndeterminate
SAEditorPane#getSelectedText()::: editor pane get selected text:::result->new->StringBuffer->doc->getDocument->start->getSelectionStart->end->getSelectionEnd->try->it->doc->getDefaultRootElement->new->ElementIterator->e->separator->System->getProperty->while->it->next->if->e->isLeaf->rangeStart->e->getStartOffset->rangeEnd->e->getEndOffset->if->continue->if->if->try->line->getText->if->e->getName->equals->result->append->else->result->append->catch->finally->catch->e->printStackTrace->finally->return->result->toString
SAEditorPane#setText(String)::: editor pane set text:::super->setText->setCaretPosition
SAListener#showThreadOopInspector(JavaThread)::: listener show thread oop inspector:::
SAListener#showInspector(SimpleTreeNode)::: listener show inspector:::
SAListener#showThreadStackMemory(JavaThread)::: listener show thread stack memory:::
SAListener#showThreadInfo(JavaThread)::: listener show thread info:::
SAListener#showJavaStackTrace(JavaThread)::: listener show java stack trace:::
SAListener#showCodeViewer(Address)::: listener show code viewer:::
SAListener#showLiveness(Oop, LivenessPathList)::: listener show liveness:::
SAPanel#addPanelListener(SAListener)::: panel add panel listener:::listeners->add
SAPanel#removePanelListener(SAListener)::: panel remove panel listener:::listeners->remove
SAPanel#showThreadOopInspector(JavaThread)::: panel show thread oop inspector:::for->iter->listeners->iterator->iter->hasNext
SAPanel#showInspector(Oop)::: panel show inspector:::new->OopTreeNodeAdapter->showInspector
SAPanel#showInspector(SimpleTreeNode)::: panel show inspector:::for->iter->listeners->iterator->iter->hasNext
SAPanel#showThreadStackMemory(JavaThread)::: panel show thread stack memory:::for->iter->listeners->iterator->iter->hasNext
SAPanel#showJavaStackTrace(JavaThread)::: panel show java stack trace:::for->iter->listeners->iterator->iter->hasNext
SAPanel#showThreadInfo(JavaThread)::: panel show thread info:::for->iter->listeners->iterator->iter->hasNext
SAPanel#showCodeViewer(Address)::: panel show code viewer:::for->iter->listeners->iterator->iter->hasNext
SourceCodePanel.RowHeader#paint(Graphics)::: row header paint:::super->paint->if->getShowLineNumbers->clip->g->getClipBounds->start->end->fm->getFont->getFontMetrics->ascent->fm->getMaxAscent->for->i
SourceCodePanel.RowHeader#getShowLineNumbers()::: row header get show line numbers:::return
SourceCodePanel.RowHeader#setShowLineNumbers(boolean)::: row header set show line numbers:::if->recomputeSize->invalidate->validate
SourceCodePanel.RowHeader#setFont(Font)::: row header set font:::super->setFont->getFontMetrics->getHeight->recomputeSize
SourceCodePanel.RowHeader#setViewport(JViewport)::: row header set viewport:::
SourceCodePanel.RowHeader#recomputeSize()::: row header recompute size:::if->return->if->return->try->numLines->source->source->getDocument->getEndPosition->getOffset->getLineOfOffset->str->Integer->toString->if->getShowLineNumbers->GraphicsUtilities->getFont->getFontMetrics->getStringWidth->d->getFont->getFontMetrics->getHeight->new->Dimension->setSize->setPreferredSize->catch->e->printStackTrace->finally
SourceCodePanel#setFont(Font)::: source code panel set font:::super->setFont->if->source->setFont->if->header->setFont
SourceCodePanel#getShowLineNumbers()::: source code panel get show line numbers:::return->header->getShowLineNumbers
SourceCodePanel#setShowLineNumbers(boolean)::: source code panel set show line numbers:::header->setShowLineNumbers
SourceCodePanel#openFile(String)::: source code panel open file:::try->file->new->File->len->file->length->buf->new->StringBuffer->tmp->new->charArr->in->new->FileReader->res->do->in->read->if->buf->append->while->in->close->text->buf->toString->source->setText->header->recomputeSize->return->catch->return->finally
SourceCodePanel#getSourceFileName()::: source code panel get source file name:::return
SourceCodePanel#getCurrentLineNumber():::Line number is one-based:::try->return->source->source->getCaretPosition->getLineOfOffset->catch->return->finally
SourceCodePanel#showLineNumber(int):::Line number is one-based:::try->offset->source->getLineStartOffset->rect->source->modelToView->if->return->source->scrollRectToVisible->catch->e->printStackTrace->finally
SourceCodePanel#highlightLineNumber(int):::Line number is one-based:::
SourceCodePanel#showBreakpointAtLine(int)::: source code panel show breakpoint at line:::breakpoints->new->Integer->add->repaint
SourceCodePanel#hasBreakpointAtLine(int)::: source code panel has breakpoint at line:::return->breakpoints->new->Integer->contains
SourceCodePanel#clearBreakpointAtLine(int)::: source code panel clear breakpoint at line:::breakpoints->new->Integer->remove->repaint
SourceCodePanel#clearBreakpoints()::: source code panel clear breakpoints:::breakpoints->clear->repaint
SourceCodePanel#setEditorCommands(EditorCommands, Editor)::: source code panel set editor commands:::
SourceCodePanel#requestFocus()::: source code panel request focus:::source->requestFocus
SourceCodePanel#maybeLoadIcons()::: source code panel maybe load icons:::if->loadIcon->loadIcon->loadIcon
SourceCodePanel#loadIcon(String)::: source code panel load icon:::url->getClass->getResource->return->new->ImageIcon
StringTransferable#getTransferDataFlavors()::: string transferable get transfer data flavors:::return
StringTransferable#isDataFlavorSupported(DataFlavor)::: string transferable is data flavor supported:::return->equals
StringTransferable#getTransferData(DataFlavor)::: string transferable get transfer data:::if->isDataFlavorSupported->throw->new->UnsupportedFlavorException->return
SysPropsPanel#initUI()::: sys props panel init i:::new->BorderLayout->setLayout->new->SAEditorPane->flagsPane->getFlags->setText->new->JScrollPane->add
SysPropsPanel#getFlags()::: sys props panel get flags:::buf->new->StringBuffer->buf->append->buf->append->sysProps->VM->getVM->getSystemProperties->if->keys->sysProps->keys->while->keys->hasMoreElements->key->keys->nextElement->buf->append->buf->key->toString->append->buf->append->buf->sysProps->get->toString->append->buf->append->else->buf->append->buf->append->buf->append->return->buf->toString
ThreadInfoPanel#initUI()::: thread info panel init i:::new->BorderLayout->setLayout->scroller->new->JScrollPane->new->JTextArea->textArea->setEditable->textArea->setLineWrap->textArea->setWrapStyleWord->scroller->getViewport->add->add
ThreadInfoPanel#setJavaThread(JavaThread)::: thread info panel set java thread:::bos->new->ByteArrayOutputStream->tty->new->PrintStream->tty->thread->getThreadName->println->thread->printInfoOn->textArea->bos->toString->setText
VMFlagsPanel#initUI()::: flags panel init i:::new->BorderLayout->setLayout->new->JEditorPane->flagsPane->setContentType->flagsPane->setEditable->flagsPane->getFlags->setText->new->JScrollPane->add
VMFlagsPanel#getFlags()::: flags panel get flags:::flags->VM->getVM->getCommandLineFlags->buf->new->StringBuffer->buf->append->if->buf->append->else->buf->append->for->f->buf->append->buf->append->return->buf->toString
VMVersionInfoPanel#initUI()::: version info panel init i:::new->BorderLayout->setLayout->new->JEditorPane->versionPane->setContentType->versionPane->setEditable->versionPane->getVersionInfo->setText->add
VMVersionInfoPanel#getVersionInfo()::: version info panel get version info:::vm->VM->getVM->buf->new->StringBuffer->buf->append->buf->append->buf->append->buf->append->if->vm->isCore->buf->append->else->if->vm->isClientCompiler->buf->append->else->if->vm->isServerCompiler->buf->append->else->buf->append->buf->append->release->vm->getVMRelease->if->buf->append->buf->append->buf->append->internalInfo->vm->getVMInternalInfo->if->buf->append->buf->append->buf->append->buf->append->return->buf->toString
