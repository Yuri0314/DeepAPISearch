Canonicalizer11_OmitComments#engineGetURI()::: canonicalizer11_ omit comments engine get i:::return
Canonicalizer11_OmitComments#engineGetIncludeComments()::: canonicalizer11_ omit comments engine get include comments:::return
Canonicalizer11_WithComments#engineGetURI()::: canonicalizer11_ with comments engine get i:::return
Canonicalizer11_WithComments#engineGetIncludeComments()::: canonicalizer11_ with comments engine get include comments:::return
Canonicalizer20010315#engineCanonicalizeXPathNodeSet(Set, String):::Always throws a CanonicalizationException because this is inclusive c14n.:::throw->new->CanonicalizationException
Canonicalizer20010315#engineCanonicalizeSubTree(Node, String):::Always throws a CanonicalizationException because this is inclusive c14n.:::throw->new->CanonicalizationException
Canonicalizer20010315#engineCanonicalizeSubTree(Node, String, boolean):::Always throws a CanonicalizationException because this is inclusive c14n.:::throw->new->CanonicalizationException
Canonicalizer20010315#outputAttributesSubtree(Element, NameSpaceSymbTable, Map):::Output the Attr[]s for the given element:::if->element->hasAttributes->return->result->new->TreeSet<Attr>->if->element->hasAttributes->attrs->element->getAttributes->attrsLength->attrs->getLength->for->i->if->ns->getUnrenderedNodes->xmlattrStack->getXmlnsAttr->writer->getWriter->foreach->attr->getNodeName->attr->getNodeValue->outputAttrToWriter
Canonicalizer20010315#outputAttributes(Element, NameSpaceSymbTable, Map):::Output the Attr[]s for the given element:::xmlattrStack->ns->getLevel->push->isRealVisible->ns->getLevel->isVisibleDO->result->new->TreeSet<Attr>->if->element->hasAttributes->attrs->element->getAttributes->attrsLength->attrs->getLength->for->i->if->xmlns->element->getAttributeNodeNS->n->if->ns->getMapping->else->if->isVisible->ns->xmlns->getOwnerDocument->getNullNode->addMappingAndRender->if->result->add->xmlattrStack->getXmlnsAttr->ns->getUnrenderedNodes->writer->getWriter->foreach->attr->getNodeName->attr->getNodeValue->outputAttrToWriter
Canonicalizer20010315#circumventBugIfNeeded(XMLSignatureInput)::: canonicalizer20010315 circumvent bug if needed:::if->input->isNeedsToBeExpanded->return->doc->if->input->getSubNode->XMLUtils->input->getSubNode->getOwnerDocument->else->XMLUtils->input->getNodeSet->getOwnerDocument->XMLUtils->circumventBug2650
Canonicalizer20010315#handleParent(Element, NameSpaceSymbTable)::: canonicalizer20010315 handle parent:::if->e->hasAttributes->e->getNamespaceURI->return->xmlattrStack->push->attrs->e->getAttributes->attrsLength->attrs->getLength->for->i->if->e->getNamespaceURI->NName->e->getPrefix->NValue->e->getNamespaceURI->Name->if->NName->equals->else->n->e->getOwnerDocument->createAttributeNS->n->setValue->ns->addMapping
Canonicalizer20010315Excl#engineCanonicalizeSubTree(Node):::Method engineCanonicalizeSubTree :::return->engineCanonicalizeSubTree
Canonicalizer20010315Excl#engineCanonicalizeSubTree(Node, String):::Method engineCanonicalizeSubTree  :::return->engineCanonicalizeSubTree
Canonicalizer20010315Excl#engineCanonicalizeSubTree(Node, String, boolean):::Method engineCanonicalizeSubTree  :::return->engineCanonicalizeSubTree
Canonicalizer20010315Excl#engineCanonicalizeSubTree(Node, String, Node):::Method engineCanonicalizeSubTree:::InclusiveNamespaces->prefixStr2Set->return->super->engineCanonicalizeSubTree
Canonicalizer20010315Excl#engineCanonicalize(XMLSignatureInput, String)::: canonicalizer20010315 excl engine canonicalize:::InclusiveNamespaces->prefixStr2Set->return->super->engineCanonicalize
Canonicalizer20010315Excl#engineCanonicalizeXPathNodeSet(Set, String):::Method engineCanonicalizeXPathNodeSet :::InclusiveNamespaces->prefixStr2Set->return->super->engineCanonicalizeXPathNodeSet
Canonicalizer20010315Excl#outputAttributesSubtree(Element, NameSpaceSymbTable, Map)::: canonicalizer20010315 excl output attributes subtree:::result->new->TreeSet<Attr>->visiblyUtilized->new->TreeSet<String>->if->inclusiveNSSet->isEmpty->visiblyUtilized->addAll->if->element->hasAttributes->attrs->element->getAttributes->attrsLength->attrs->getLength->for->i->if->ns->getLevel->inclusiveNSSet->contains->ns->getMappingWithoutRendered->ns->removeMapping->ns->element->getOwnerDocument->getNullNode->addMapping->prefix->if->element->getNamespaceURI->element->getPrefix->element->getPrefix->length->element->getPrefix->else->visiblyUtilized->add->foreach->key->ns->getMapping->if->result->add->writer->getWriter->foreach->attr->getNodeName->attr->getNodeValue->outputAttrToWriter
Canonicalizer20010315Excl#outputAttributes(Element, NameSpaceSymbTable, Map)::: canonicalizer20010315 excl output attributes:::result->new->TreeSet<Attr>->visiblyUtilized->isOutputElement->ns->getLevel->isVisibleDO->if->new->TreeSet<String>->if->inclusiveNSSet->isEmpty->visiblyUtilized->addAll->if->element->hasAttributes->attrs->element->getAttributes->attrsLength->attrs->getLength->for->i->if->xmlns->element->getAttributeNodeNS->if->isVisible->ns->xmlns->getOwnerDocument->getNullNode->addMapping->prefix->if->element->getNamespaceURI->element->getPrefix->element->getPrefix->length->element->getPrefix->else->visiblyUtilized->add->foreach->key->ns->getMapping->if->result->add->writer->getWriter->foreach->attr->getNodeName->attr->getNodeValue->outputAttrToWriter
Canonicalizer20010315Excl#circumventBugIfNeeded(XMLSignatureInput)::: canonicalizer20010315 excl circumvent bug if needed:::if->input->isNeedsToBeExpanded->inclusiveNSSet->isEmpty->return->doc->if->input->getSubNode->XMLUtils->input->getSubNode->getOwnerDocument->else->XMLUtils->input->getNodeSet->getOwnerDocument->XMLUtils->circumventBug2650
Canonicalizer20010315ExclOmitComments#engineGetURI()::: canonicalizer20010315 excl omit comments engine get i:::return
Canonicalizer20010315ExclOmitComments#engineGetIncludeComments()::: canonicalizer20010315 excl omit comments engine get include comments:::return
Canonicalizer20010315ExclWithComments#engineGetURI()::: canonicalizer20010315 excl with comments engine get i:::return
Canonicalizer20010315ExclWithComments#engineGetIncludeComments()::: canonicalizer20010315 excl with comments engine get include comments:::return
Canonicalizer20010315OmitComments#engineGetURI()::: canonicalizer20010315 omit comments engine get i:::return
Canonicalizer20010315OmitComments#engineGetIncludeComments()::: canonicalizer20010315 omit comments engine get include comments:::return
Canonicalizer20010315WithComments#engineGetURI()::: canonicalizer20010315 with comments engine get i:::return
Canonicalizer20010315WithComments#engineGetIncludeComments()::: canonicalizer20010315 with comments engine get include comments:::return
CanonicalizerBase#engineCanonicalizeSubTree(Node):::Method engineCanonicalizeSubTree :::return->engineCanonicalizeSubTree
CanonicalizerBase#engineCanonicalizeXPathNodeSet(Set):::Method engineCanonicalizeXPathNodeSet :::return->XMLUtils->getOwnerDocument->engineCanonicalizeXPathNodeSetInternal
CanonicalizerBase#engineCanonicalize(XMLSignatureInput):::Canonicalizes a Subtree node.:::try->if->input->isExcludeComments->if->input->isOctetStream->return->input->getBytes->engineCanonicalize->if->input->isElement->return->input->getSubNode->input->getExcludeNode->engineCanonicalizeSubTree->else->if->input->isNodeSet->input->getNodeFilters->circumventBugIfNeeded->if->input->getSubNode->return->input->getSubNode->engineCanonicalizeXPathNodeSetInternal->else->return->input->getNodeSet->engineCanonicalizeXPathNodeSet->return->catch->throw->new->CanonicalizationException->throw->new->CanonicalizationException->throw->new->CanonicalizationException->finally
CanonicalizerBase#setWriter(OutputStream)::: canonicalizer base set writer:::
CanonicalizerBase#getWriter()::: canonicalizer base get writer:::return
CanonicalizerBase#engineCanonicalizeSubTree(Node, Node):::Canonicalizes a Subtree node.:::try->ns->new->NameSpaceSymbTable->nodeLevel->if->rootNode->getNodeType->getParentNameSpaces->this->canonicalizeSubTree->flush->if->result->toByteArray->if->reset->else->close->return->else->if->result->toByteArray->if->reset->else->close->return->else->close->return->catch->throw->new->CanonicalizationException->throw->new->CanonicalizationException->finally
CanonicalizerBase#canonicalizeSubTree(Node, NameSpaceSymbTable, Node, int):::Method canonicalizeSubTree, this function is a recursive one.:::if->isVisibleInt->return->sibling->parentNode->writer->excludeNode->includeComments->cache->new->HashMap<>->do->switch->currentNode->getNodeType->throw->new->ObjectArr->new->CanonicalizationException->ns->outputNodePush->currentNode->getFirstChild->break->if->outputCommentToWriter->break->outputPItoWriter->break->currentNode->getNodeValue->outputTextToWriter->break->if->break->currentElement->ns->outputNodePush->writer->write->name->currentElement->getTagName->UtfHelpper->writeByte->outputAttributesSubtree->writer->write->currentNode->getFirstChild->if->writer->END_TAG->clone->write->UtfHelpper->writeStringToUtf8->writer->write->ns->outputNodePop->if->currentNode->getNextSibling->else->break->break->while->writer->END_TAG->clone->write->UtfHelpper->getTagName->writeByte->writer->write->ns->outputNodePop->if->return->parentNode->getNextSibling->parentNode->getParentNode->if->parentNode->getNodeType->if->return->currentNode->getNextSibling->while
CanonicalizerBase#engineCanonicalizeXPathNodeSetInternal(Node)::: canonicalizer base engine canonicalize path node set internal:::try->this->canonicalizeXPathNodeSet->flush->if->sol->toByteArray->if->reset->else->close->return->else->if->result->toByteArray->if->reset->else->close->return->else->close->return->catch->throw->new->CanonicalizationException->throw->new->CanonicalizationException->finally
CanonicalizerBase#canonicalizeXPathNodeSet(Node, Node):::Canonicalizes all the nodes included in the currentNode and contained in the xpathNodeSet field.:::if->isVisibleInt->return->currentNodeIsVisible->ns->new->NameSpaceSymbTable->if->currentNode->getNodeType->getParentNameSpaces->if->return->sibling->parentNode->documentLevel->cache->new->HashMap<>->do->switch->currentNode->getNodeType->throw->new->ObjectArr->new->CanonicalizationException->ns->outputNodePush->currentNode->getFirstChild->break->if->ns->getLevel->isVisibleDO->outputCommentToWriter->break->if->isVisible->outputPItoWriter->break->if->isVisible->currentNode->getNodeValue->outputTextToWriter->for->nextSibling->currentNode->getNextSibling->nextSibling->getNodeType->nextSibling->getNodeType->nextSibling->getNextSibling->break->currentElement->name->i->ns->getLevel->isVisibleDO->if->currentNode->getNextSibling->break->if->ns->outputNodePush->writer->write->currentElement->getTagName->UtfHelpper->writeByte->else->ns->push->outputAttributes->if->writer->write->currentNode->getFirstChild->if->if->writer->END_TAG->clone->write->UtfHelpper->writeByte->writer->write->ns->outputNodePop->else->ns->pop->if->currentNode->getNextSibling->else->break->break->while->if->isVisible->writer->END_TAG->clone->write->UtfHelpper->getTagName->writeByte->writer->write->ns->outputNodePop->else->ns->pop->if->return->parentNode->getNextSibling->parentNode->getParentNode->if->parentNode->getNodeType->if->return->currentNode->getNextSibling->while
CanonicalizerBase#isVisibleDO(Node, int)::: canonicalizer base is visible o:::if->it->nodeFilter->iterator->while->it->hasNext->i->it->next->isNodeIncludeDO->if->return->if->contains->return->return
CanonicalizerBase#isVisibleInt(Node)::: canonicalizer base is visible int:::if->it->nodeFilter->iterator->while->it->hasNext->i->it->next->isNodeInclude->if->return->if->contains->return->return
CanonicalizerBase#isVisible(Node)::: canonicalizer base is visible:::if->it->nodeFilter->iterator->while->it->hasNext->if->it->next->isNodeInclude->return->if->contains->return->return
CanonicalizerBase#handleParent(Element, NameSpaceSymbTable)::: canonicalizer base handle parent:::if->e->hasAttributes->e->getNamespaceURI->return->attrs->e->getAttributes->attrsLength->attrs->getLength->for->i->if->e->getNamespaceURI->NName->e->getPrefix->NValue->e->getNamespaceURI->Name->if->NName->equals->else->n->e->getOwnerDocument->createAttributeNS->n->setValue->ns->addMapping
CanonicalizerBase#getParentNameSpaces(Element, NameSpaceSymbTable):::Adds to ns the definitions from the parent elements of el:::n1->el->getParentNode->if->n1->getNodeType->return->parents->new->ArrayList<>->parent->while->parent->getNodeType->parents->add->parent->getParentNode->it->parents->parents->size->listIterator->while->it->hasPrevious->ele->it->previous->handleParent->parents->clear->nsprefix->ns->getMappingWithoutRendered->if->nsprefix->getValue->equals->ns->nsprefix->getOwnerDocument->getNullNode->addMappingAndRender
CanonicalizerBase#outputAttributes(Element, NameSpaceSymbTable, Map):::Output the attributes for this node in XPathNodeSet c14n.:::
CanonicalizerBase#outputAttributesSubtree(Element, NameSpaceSymbTable, Map):::Output the attributes for this node in a Subtree c14n.:::
CanonicalizerBase#circumventBugIfNeeded(XMLSignatureInput)::: canonicalizer base circumvent bug if needed:::
CanonicalizerBase#outputAttrToWriter(String, String, OutputStream, Map):::Outputs an Attribute to the internal Writer:::writer->write->UtfHelpper->writeByte->writer->EQUALS_STR->clone->write->toWrite->length->value->length->i->while->c->value->codePointAt->Character->charCount->switch->AMP->clone->break->LT->clone->break->QUOT->clone->break->X9->clone->break->XA->clone->break->XD->clone->break->if->writer->write->else->UtfHelpper->writeCodePointToUtf8->continue->writer->write->writer->write
CanonicalizerBase#outputPItoWriter(ProcessingInstruction, OutputStream, int):::Outputs a PI to the internal Writer.:::if->writer->write->writer->BEGIN_PI->clone->write->target->currentPI->getTarget->length->target->length->for->i->data->currentPI->getData->data->length->if->writer->write->for->i->writer->END_PI->clone->write->if->writer->write
CanonicalizerBase#outputCommentToWriter(Comment, OutputStream, int):::Method outputCommentToWriter:::if->writer->write->writer->BEGIN_COMM->clone->write->data->currentComment->getData->length->data->length->for->i->writer->END_COMM->clone->write->if->writer->write
CanonicalizerBase#outputTextToWriter(String, OutputStream):::Outputs a Text of CDATA section to the internal Writer.:::length->text->length->toWrite->for->i
CanonicalizerBase#getNullNode(Document)::: canonicalizer base get null node:::if->try->ownerDocument->createAttributeNS->nullNode->setValue->catch->throw->new->RuntimeException->finally->return
CanonicalizerPhysical#engineCanonicalizeXPathNodeSet(Set, String):::Always throws a CanonicalizationException.:::throw->new->CanonicalizationException
CanonicalizerPhysical#engineCanonicalizeSubTree(Node, String):::Always throws a CanonicalizationException.:::throw->new->CanonicalizationException
CanonicalizerPhysical#engineCanonicalizeSubTree(Node, String, boolean):::Always throws a CanonicalizationException.:::throw->new->CanonicalizationException
CanonicalizerPhysical#outputAttributesSubtree(Element, NameSpaceSymbTable, Map):::Output the Attr[]s for the given element:::if->element->hasAttributes->result->new->TreeSet<Attr>->attrs->element->getAttributes->attrsLength->attrs->getLength->for->i->writer->getWriter->foreach->attr->getNodeName->attr->getNodeValue->outputAttrToWriter
CanonicalizerPhysical#outputAttributes(Element, NameSpaceSymbTable, Map)::: canonicalizer physical output attributes:::throw->new->CanonicalizationException
CanonicalizerPhysical#circumventBugIfNeeded(XMLSignatureInput)::: canonicalizer physical circumvent bug if needed:::
CanonicalizerPhysical#handleParent(Element, NameSpaceSymbTable)::: canonicalizer physical handle parent:::
CanonicalizerPhysical#engineGetURI()::: canonicalizer physical engine get i:::return
CanonicalizerPhysical#engineGetIncludeComments()::: canonicalizer physical engine get include comments:::return
CanonicalizerPhysical#outputPItoWriter(ProcessingInstruction, OutputStream, int)::: canonicalizer physical output ito writer:::super->outputPItoWriter
CanonicalizerPhysical#outputCommentToWriter(Comment, OutputStream, int)::: canonicalizer physical output comment to writer:::super->outputCommentToWriter
NameSpaceSymbTable#getUnrenderedNodes(Collection):::Get all the unrendered nodes in the name space:::it->symb->entrySet->iterator->while->it->hasNext->n->it->next->if->n->clone->needsClone->symb->put->result->add
NameSpaceSymbTable#outputNodePush():::Push a frame for visible namespace:::push
NameSpaceSymbTable#outputNodePop():::Pop a frame for visible namespace.:::pop
NameSpaceSymbTable#push():::Push a frame for a node:::level->add
NameSpaceSymbTable#pop():::Pop a frame:::size->level->size->ob->level->remove->if->if->else->level->get->else
NameSpaceSymbTable#needsClone()::: name space symb table needs clone:::if->level->level->size->set->symb->clone
NameSpaceSymbTable#getMapping(String):::Gets the attribute node that defines the binding for the prefix.:::entry->symb->get->if->return->if->return->entry->clone->needsClone->symb->put->return
NameSpaceSymbTable#getMappingWithoutRendered(String):::Gets a definition without mark it as render:::entry->symb->get->if->return->if->return->return
NameSpaceSymbTable#addMapping(String, String, Attr):::Adds the mapping for a prefix.:::ob->symb->get->if->uri->equals->return->ne->new->NameSpaceSymbEntry->needsClone->symb->put->if->if->equals->return
NameSpaceSymbTable#addMappingAndRender(String, String, Attr):::Adds a definition and mark it as render:::ob->symb->get->if->uri->equals->if->ob->clone->needsClone->symb->put->return->return->ne->new->NameSpaceSymbEntry->needsClone->symb->put->if->equals->return->return
NameSpaceSymbTable#getLevel()::: name space symb table get level:::return->level->size
NameSpaceSymbTable#removeMapping(String)::: name space symb table remove mapping:::ob->symb->get->if->needsClone->symb->put
NameSpaceSymbTable#removeMappingIfNotRender(String)::: name space symb table remove mapping if not render:::ob->symb->get->if->needsClone->symb->put
NameSpaceSymbTable#removeMappingIfRender(String)::: name space symb table remove mapping if render:::ob->symb->get->if->needsClone->symb->put->return
NameSpaceSymbEntry#clone()::: name space symb entry clone:::try->return->super->clone->catch->return->finally
SymbMap#put(String, NameSpaceSymbEntry)::: symb map put:::index->index->oldKey->if->oldKey->equals->newCapacity->rehash
SymbMap#entrySet()::: symb map entry set:::a->new->ArrayList<>->for->i->return
SymbMap#index(Object)::: symb map index:::set->length->index->obj->hashCode->cur->if->cur->equals->return->do->while->cur->equals->return
SymbMap#rehash(int):::rehashes the map to the new capacity.:::oldCapacity->oldKeys->oldVals->new->StringArr->new->NameSpaceSymbEntryArr->for->i
SymbMap#get(String)::: symb map get:::return->index
SymbMap#clone()::: symb map clone:::try->copy->super->clone->new->NameSpaceSymbEntryArr->System->arraycopy->new->StringArr->System->arraycopy->return->catch->e->printStackTrace->finally->return
UtfHelpper#writeByte(String, OutputStream, Map)::: utf helpper write byte:::result->cache->get->if->getStringInUtf8->cache->put->out->write
UtfHelpper#writeCodePointToUtf8(int, OutputStream)::: utf helpper write code point to utf8:::if->Character->isValidCodePoint->out->write->return->if->out->write->out->write->return->if->out->write->return->extraByte->if->else->if->else->if->else->if->else->if->else->out->write->return->write->shift->out->write->for->i
UtfHelpper#writeCharToUtf8(char, OutputStream)::: utf helpper write char to utf8:::if->out->write->return->if->out->write->return->bias->write->ch->if->if->out->write->else->if->out->write->out->write
UtfHelpper#writeStringToUtf8(String, OutputStream)::: utf helpper write string to utf8:::length->str->length->i->c->while->str->codePointAt->Character->charCount->if->Character->isValidCodePoint->out->write->continue->if->out->write->out->write->continue->if->out->write->continue->extraByte->if->else->if->else->if->else->if->else->if->else->out->write->continue->write->shift->out->write->for->j
UtfHelpper#getStringInUtf8(String)::: utf helpper get string in utf8:::length->str->length->expanded->result->new->byteArr->i->out->c->while->str->codePointAt->Character->charCount->if->Character->isValidCodePoint->continue->if->continue->if->continue->if->newResult->new->byteArr->System->arraycopy->extraByte->if->else->if->else->if->else->if->else->if->else->continue->write->shift->for->j->if->newResult->new->byteArr->System->arraycopy->return
XmlAttrStack#push(int)::: xml attr stack push:::if->return->while->levels->levels->size->remove->newSize->levels->size->if->return->levels->get
XmlAttrStack#addXmlnsAttr(Attr)::: xml attr stack add xmlns attr:::if->new->XmlsStackElement->levels->add->add
XmlAttrStack#getXmlnsAttr(Collection)::: xml attr stack get xmlns attr:::size->levels->size->if->new->XmlsStackElement->levels->add->parentRendered->e->if->else->levels->get->if->if->col->addAll->return->loa->new->HashMap<>->if->baseAttrs->new->ArrayList<>->successiveOmitted->for->if->baseAttrs->isEmpty->it->col->iterator->base->baseAttr->while->it->hasNext->n->it->next->if->n->getLocalName->equals->n->getValue->break->baseAttrs->iterator->while->it->hasNext->n->it->next->if->n->getValue->else->try->n->getValue->joinURI->catch->LOG->ue->getMessage->debug->finally->if->base->length->baseAttr->setValue->col->add->else->for->col->loa->values->addAll
XmlAttrStack#joinURI(String, String)::: xml attr stack join i:::bscheme->bauthority->bpath->bquery->if->if->baseURI->endsWith->base->new->URI->base->getScheme->base->getAuthority->base->getPath->base->getQuery->r->new->URI->rscheme->r->getScheme->rauthority->r->getAuthority->rpath->r->getPath->rquery->r->getQuery->tscheme->tauthority->tpath->tquery->if->rscheme->equals->if->removeDotSegments->else->if->removeDotSegments->else->if->rpath->length->if->else->else->if->rpath->startsWith->removeDotSegments->else->if->bpath->length->else->last->bpath->lastIndexOf->if->else->bpath->substring->removeDotSegments->return->new->URI->toString
XmlAttrStack#removeDotSegments(String)::: xml attr stack remove dot segments:::LOG->debug->input->while->input->indexOf->input->replaceAll->output->new->StringBuilder->if->input->charAt->output->append->input->substring->output->toString->printStep->while->input->length->if->input->startsWith->input->substring->output->toString->printStep->else->if->input->startsWith->input->substring->if->output->toString->equals->output->append->output->toString->printStep->else->if->input->startsWith->input->substring->output->toString->printStep->else->if->input->equals->input->replaceFirst->output->toString->printStep->else->if->input->startsWith->input->substring->if->output->length->output->append->else->if->output->toString->endsWith->output->append->else->if->output->toString->endsWith->output->append->else->index->output->lastIndexOf->if->new->StringBuilder->if->input->charAt->input->substring->else->output->output->length->delete->output->toString->printStep->else->if->input->equals->input->replaceFirst->if->output->length->output->append->else->if->output->toString->endsWith->output->append->else->if->output->toString->endsWith->output->append->else->index->output->lastIndexOf->if->new->StringBuilder->if->input->charAt->input->substring->else->output->output->length->delete->output->toString->printStep->else->if->input->equals->output->toString->printStep->else->if->input->equals->if->output->toString->equals->output->append->output->toString->printStep->else->end->begin->input->indexOf->if->input->indexOf->else->segment->if->input->substring->else->input->substring->input->substring->output->append->output->toString->printStep->if->output->toString->endsWith->output->append->output->toString->printStep->return->output->toString
XmlAttrStack#printStep(String, String, String)::: xml attr stack print step:::if->LOG->isDebugEnabled->LOG->debug->if->output->length->LOG->debug->else->LOG->debug
