DTMXRTreeFrag#destruct()::: tree frag destruct:::
DTMXRTreeFrag#getDTM()::: tree frag get m:::return
DTMXRTreeFrag#getDTMIdentity()::: tree frag get identity:::return
DTMXRTreeFrag#getXPathContext()::: tree frag get path context:::return
DTMXRTreeFrag#hashCode()::: tree frag hash code:::return
DTMXRTreeFrag#equals(Object)::: tree frag equals:::if->return->getDTMIdentity->return
XBoolean#getType():::Tell that this is a CLASS_BOOLEAN.:::return
XBoolean#getTypeString():::Given a request type, return the equivalent string:::return
XBoolean#num():::Cast result object to a number.:::return
XBoolean#boolean bool():::Cast result object to a boolean.:::return
XBoolean#str():::Cast result object to a string.:::return
XBoolean#object():::Return a java object that's closest to the representation that should be handed to an extension.:::if->setObject->return
XBoolean#equals(XObject):::Tell if two objects are functionally equal.:::if->obj2->getType->return->obj2->equals->try->return->obj2->bool->catch->throw->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException->finally
XBooleanStatic#equals(XObject):::Tell if two objects are functionally equal.:::try->return->obj2->bool->catch->throw->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException->finally
XMLStringFactoryImpl#getFactory():::Get the XMLStringFactory to pass to DTM construction.:::return
XMLStringFactoryImpl#newstr(String):::Create a new XMLString from a Java string.:::return->new->XString
XMLStringFactoryImpl#newstr(FastStringBuffer, int, int):::Create a XMLString from a FastStringBuffer.:::return->new->XStringForFSB
XMLStringFactoryImpl#newstr(char[], int, int):::Create a XMLString from a FastStringBuffer.:::return->new->XStringForChars
XMLStringFactoryImpl#emptystr():::Get a cheap representation of an empty string.:::return
XNodeSet#getType():::Tell that this is a CLASS_NODESET.:::return
XNodeSet#getTypeString():::Given a request type, return the equivalent string:::return
XNodeSet#getNumberFromNode(int):::Get numeric value of the string conversion from a single node.:::xstr->m_dtmMgr->getDTM->getStringValue->return->xstr->toDouble
XNodeSet#num():::Cast result object to a number.:::node->item->return->getNumberFromNode
XNodeSet#numWithSideEffects():::Cast result object to a number, but allow side effects, such as the incrementing of an iterator.:::node->nextNode->return->getNumberFromNode
XNodeSet#boolean bool():::Cast result object to a boolean.:::return->item
XNodeSet#boolWithSideEffects():::Cast result object to a boolean, but allow side effects, such as the incrementing of an iterator.:::return->nextNode
XNodeSet#getStringFromNode(int):::Get the string conversion from a single node.:::if->return->m_dtmMgr->getDTM->getStringValue->else->return
XNodeSet#dispatchCharactersEvents(org.xml.sax.ContentHandler):::Directly call the characters method on the passed ContentHandler for the string-value:::node->item->if->m_dtmMgr->getDTM->dispatchCharactersEvents
XNodeSet#xstr():::Cast result object to an XMLString.:::node->item->return->getStringFromNode
XNodeSet#appendToFsb(com.sun.org.apache.xml.internal.utils.FastStringBuffer):::Cast result object to a string.:::xstring->xstr->xstring->appendToFsb
XNodeSet#str():::Cast result object to a string.:::node->item->return->getStringFromNode->toString
XNodeSet#object():::Return a java object that's closest to the representation that should be handed to an extension.:::if->return->else->return
XNodeSet#nodeset():::Cast result object to a nodelist.:::return->iter->new->com.sun.org.apache.xml.internal.dtm.ref.DTMNodeIterator
XNodeSet#nodelist():::Cast result object to a nodelist.:::nodelist->new->com.sun.org.apache.xml.internal.dtm.ref.DTMNodeList->clone->nodelist->getDTMIterator->clone->getVector->SetVector->return
XNodeSet#iterRaw():::Return the iterator without cloning, etc.:::return
XNodeSet#release(DTMIterator)::: node set release:::
XNodeSet#iter():::Cast result object to a nodelist.:::try->if->hasCache->return->cloneWithReset->else->return->catch->throw->cnse->getMessage->new->RuntimeException->finally
XNodeSet#getFresh():::Get a fresh copy of the object:::try->if->hasCache->return->cloneWithReset->else->return->catch->throw->cnse->getMessage->new->RuntimeException->finally
XNodeSet#mutableNodeset():::Cast result object to a mutableNodeset.:::mnl->if->else->iter->new->NodeSetDTM->setObject->setCurrentPos->return
XNodeSet#compare(XObject, Comparator):::Tell if one object is less than the other.:::result->type->obj2->getType->if->list1->iterRaw->list2->iterRaw->node1->node2Strings->while->list1->nextNode->s1->getStringFromNode->if->node2->while->list2->nextNode->s2->getStringFromNode->if->comparator->compareStrings->break->if->new->ArrayList<>->node2Strings->add->else->n->node2Strings->size->for->i->list1->reset->list2->reset->else->if->num1->bool->num2->obj2->num->comparator->compareNumbers->else->if->list1->iterRaw->num2->obj2->num->node->while->list1->nextNode->num1->getNumberFromNode->if->comparator->compareNumbers->break->list1->reset->else->if->s2->obj2->xstr->list1->iterRaw->node->while->list1->nextNode->s1->getStringFromNode->if->comparator->compareStrings->break->list1->reset->else->if->s2->obj2->xstr->list1->iterRaw->node->while->list1->nextNode->s1->getStringFromNode->if->comparator->compareStrings->break->list1->reset->else->comparator->this->num->obj2->num->compareNumbers->return
XNodeSet#lessThan(XObject):::Tell if one object is less than the other.:::return->compare
XNodeSet#lessThanOrEqual(XObject):::Tell if one object is less than or equal to the other.:::return->compare
XNodeSet#greaterThan(XObject):::Tell if one object is less than the other.:::return->compare
XNodeSet#greaterThanOrEqual(XObject):::Tell if one object is less than the other.:::return->compare
XNodeSet#equals(XObject):::Tell if two objects are functionally equal.:::try->return->compare->catch->throw->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException->finally
XNodeSet#notEquals(XObject):::Tell if two objects are functionally not equal.:::return->compare
Comparator#compareStrings(XMLString, XMLString):::Compare two strings:::
Comparator#compareNumbers(double, double):::Compare two numbers:::
LessThanComparator#compareStrings(XMLString, XMLString):::Compare two strings for less than.:::return->s1->toDouble->s2->toDouble
LessThanComparator#compareNumbers(double, double):::Compare two numbers for less than.:::return
LessThanOrEqualComparator#compareStrings(XMLString, XMLString):::Compare two strings for less than or equal.:::return->s1->toDouble->s2->toDouble
LessThanOrEqualComparator#compareNumbers(double, double):::Compare two numbers for less than or equal.:::return
GreaterThanComparator#compareStrings(XMLString, XMLString):::Compare two strings for greater than.:::return->s1->toDouble->s2->toDouble
GreaterThanComparator#compareNumbers(double, double):::Compare two numbers for greater than.:::return
GreaterThanOrEqualComparator#compareStrings(XMLString, XMLString):::Compare two strings for greater than or equal.:::return->s1->toDouble->s2->toDouble
GreaterThanOrEqualComparator#compareNumbers(double, double):::Compare two numbers for greater than or equal.:::return
EqualComparator#compareStrings(XMLString, XMLString):::Compare two strings for equality.:::return->s1->equals
EqualComparator#compareNumbers(double, double):::Compare two numbers for equality.:::return
NotEqualComparator#compareStrings(XMLString, XMLString):::Compare two strings for non-equality.:::return->s1->equals
NotEqualComparator#compareNumbers(double, double):::Compare two numbers for non-equality.:::return
XNodeSetForDOM#object():::Return the original DOM object that the user passed in:::return
XNodeSetForDOM#nodeset():::Cast result object to a nodelist:::return->super->nodeset
XNodeSetForDOM#nodelist():::Cast result object to a nodelist:::return->super->nodelist
XNull#getType():::Tell what kind of class this is.:::return
XNull#getTypeString():::Given a request type, return the equivalent string:::return
XNull#num()::: null num:::return
XNull#boolean bool():::Cast result object to a boolean.:::return
XNull#str():::Cast result object to a string.:::return
XNull#rtf(XPathContext):::Cast result object to a result tree fragment.:::return
XNull#equals(XObject):::Tell if two objects are functionally equal.:::return->obj2->getType
XNumber#getType():::Tell that this is a CLASS_NUMBER.:::return
XNumber#getTypeString():::Given a request type, return the equivalent string:::return
XNumber#num():::Cast result object to a number.:::return
XNumber#num(XPathContext):::Evaluate expression to a number.:::return
XNumber#boolean bool():::Cast result object to a boolean.:::return->Double->isNaN
XNumber#str():::Cast result object to a string.:::if->Double->isNaN->return->else->if->Double->isInfinite->if->return->else->return->num->s->Double->toString->len->s->length->if->s->charAt->s->charAt->s->substring->if->s->equals->return->return->e->s->indexOf->if->if->s->charAt->return->s->substring->else->return->exp->Integer->s->substring->parseInt->sign->if->s->charAt->s->substring->else->nDigits->if->return->s->substring->s->substring->zeros->while->s->charAt->if->return->s->substring->s->substring->s->substring->return->zeros->s->substring->s->substring
XNumber#zeros(int):::Return a string of '0' of the given length:::if->return->buf->new->charArr->for->i->return->new->String
XNumber#object():::Return a java object that's closest to the representation that should be handed to an extension.:::if->setObject->return
XNumber#equals(XObject):::Tell if two objects are functionally equal.:::t->obj2->getType->try->if->return->obj2->equals->else->if->return->obj2->bool->bool->else->return->obj2->num->catch->throw->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException->finally
XNumber#isStableNumber():::Tell if this expression returns a stable number that will not change during iterations within the expression:::return
XNumber#callVisitors(ExpressionOwner, XPathVisitor)::: number call visitors:::visitor->visitNumberLiteral
XObject#setObject(Object)::: object set object:::
XObject#execute(XPathContext):::For support of literal objects in xpaths.:::return
XObject#allowDetachToRelease(boolean):::Specify if it's OK for detach to release the iterator for reuse:::
XObject#detach():::Detaches the DTMIterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state:::
XObject#destruct():::Forces the object to release it's resources:::if->allowDetachToRelease->detach->setObject
XObject#reset():::Reset for fresh reuse.:::
XObject#dispatchCharactersEvents(org.xml.sax.ContentHandler):::Directly call the characters method on the passed ContentHandler for the string-value:::xstr->dispatchCharactersEvents
XObject#create(Object):::Create the right XObject based on the type of the object passed:::return->XObjectFactory->create
XObject#create(Object, XPathContext):::Create the right XObject based on the type of the object passed:::return->XObjectFactory->create
XObject#getType():::Tell what kind of class this is.:::return
XObject#getTypeString():::Given a request type, return the equivalent string:::return->object->getClass->getName
XObject#num():::Cast result object to a number:::new->ObjectArr->getTypeString->error->return
XObject#numWithSideEffects():::Cast result object to a number, but allow side effects, such as the incrementing of an iterator.:::return->num
XObject#boolean bool():::Cast result object to a boolean:::new->ObjectArr->getTypeString->error->return
XObject#boolWithSideEffects():::Cast result object to a boolean, but allow side effects, such as the incrementing of an iterator.:::return->bool
XObject#xstr():::Cast result object to a string.:::return->XMLStringFactoryImpl->getFactory->str->newstr
XObject#str():::Cast result object to a string.:::return->m_obj->toString
XObject#toString():::Return the string representation of the object:::return->str
XObject#rtf(XPathContext):::Cast result object to a result tree fragment.:::result->rtf->if->frag->support->createDocumentFragment->frag->str->appendTextChild->frag->getDocument->return
XObject#rtree(XPathContext):::Cast result object to a result tree fragment.:::docFrag->result->rtf->if->frag->support->createDocumentFragment->frag->str->appendTextChild->frag->frag->getDocument->getNode->else->frag->support->getDTM->frag->frag->getDocument->getNode->return
XObject#rtree():::For functions to override.:::return
XObject#rtf():::For functions to override.:::return
XObject#object():::Return a java object that's closest to the representation that should be handed to an extension.:::return
XObject#iter():::Cast result object to a nodelist:::new->ObjectArr->getTypeString->error->return
XObject#getFresh():::Get a fresh copy of the object:::return
XObject#nodeset():::Cast result object to a nodelist:::new->ObjectArr->getTypeString->error->return
XObject#nodelist():::Cast result object to a nodelist:::new->ObjectArr->getTypeString->error->return
XObject#mutableNodeset():::Cast result object to a nodelist:::new->ObjectArr->getTypeString->error->return
XObject#castToType(int, XPathContext):::Cast object to type t.:::result->switch->str->break->num->break->iter->break->bool->break->break->new->ObjectArr->getTypeString->Integer->toString->error->return
XObject#lessThan(XObject):::Tell if one object is less than the other.:::if->obj2->getType->return->obj2->greaterThan->return->this->num->obj2->num
XObject#lessThanOrEqual(XObject):::Tell if one object is less than or equal to the other.:::if->obj2->getType->return->obj2->greaterThanOrEqual->return->this->num->obj2->num
XObject#greaterThan(XObject):::Tell if one object is greater than the other.:::if->obj2->getType->return->obj2->lessThan->return->this->num->obj2->num
XObject#greaterThanOrEqual(XObject):::Tell if one object is greater than or equal to the other.:::if->obj2->getType->return->obj2->lessThanOrEqual->return->this->num->obj2->num
XObject#equals(XObject):::Tell if two objects are functionally equal.:::if->obj2->getType->return->obj2->equals->if->return->m_obj->equals->else->return
XObject#notEquals(XObject):::Tell if two objects are functionally not equal.:::if->obj2->getType->return->obj2->notEquals->return->equals
XObject#error(String):::Tell the user of an error, and probably throw an exception.:::error
XObject#error(String, Object[]):::Tell the user of an error, and probably throw an exception.:::fmsg->XSLMessages->createXPATHMessage->throw->new->XPathException
XObject#fixupVariables(List, int):::XObjects should not normally need to fix up variables.:::
XObject#appendToFsb(com.sun.org.apache.xml.internal.utils.FastStringBuffer):::Cast result object to a string:::fsb->str->append
XObject#callVisitors(ExpressionOwner, XPathVisitor)::: object call visitors:::assertion
XObject#deepEquals(Expression)::: object deep equals:::if->isSameClass->return->if->this->equals->return->return
XObjectFactory#create(Object):::Create the right XObject based on the type of the object passed:::result->if->else->if->new->XString->else->if->new->XBoolean->else->if->new->XNumber->else->new->XObject->return
XObjectFactory#create(Object, XPathContext):::Create the right XObject based on the type of the object passed:::result->if->else->if->new->XString->else->if->new->XBoolean->else->if->new->XNumber->else->if->dtm->try->dtmRoot->dtm->getDocument->iter->dtm->getAxisIterator->iter->setStartNode->iterator->new->OneStepIterator->iterator->setRoot->new->XNodeSet->catch->throw->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException->finally->else->if->iter->try->iterator->new->OneStepIterator->iterator->iter->getStartNode->setRoot->new->XNodeSet->catch->throw->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException->finally->else->if->new->XNodeSet->else->if->new->XNodeSetForDOM->else->if->new->XNodeSetForDOM->else->if->new->XNodeSetForDOM->else->new->XObject->return
XRTreeFrag#initDTM(int, XPathContext)::: tree frag init m:::dtm->xctxt->getDTM->if->xctxt->xctxt->getDTMIdentity->getDTMXRTreeFrag
XRTreeFrag#object():::Return a java object that's closest to the representation that should be handed to an extension.:::if->m_DTMXRTreeFrag->getXPathContext->return->m_DTMXRTreeFrag->getXPathContext->getDTMManager->new->com.sun.org.apache.xpath.internal.NodeSetDTM->new->com.sun.org.apache.xml.internal.dtm.ref.DTMNodeIterator->else->return->super->object
XRTreeFrag#allowDetachToRelease(boolean):::Specify if it's OK for detach to release the iterator for reuse.:::
XRTreeFrag#detach():::Detaches the DTMIterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state:::if->m_DTMXRTreeFrag->destruct->setObject
XRTreeFrag#getType():::Tell what kind of class this is.:::return
XRTreeFrag#getTypeString():::Given a request type, return the equivalent string:::return
XRTreeFrag#num():::Cast result object to a number.:::s->xstr->return->s->toDouble
XRTreeFrag#boolean bool():::Cast result object to a boolean:::return
XRTreeFrag#xstr():::Cast result object to an XMLString.:::if->m_DTMXRTreeFrag->getDTM->getStringValue->return
XRTreeFrag#appendToFsb(com.sun.org.apache.xml.internal.utils.FastStringBuffer):::Cast result object to a string.:::xstring->xstr->xstring->appendToFsb
XRTreeFrag#str():::Cast result object to a string.:::str->m_DTMXRTreeFrag->getDTM->getStringValue->toString->return
XRTreeFrag#rtf():::Cast result object to a result tree fragment.:::return
XRTreeFrag#asNodeIterator():::Cast result object to a DTMIterator:::return->m_DTMXRTreeFrag->getXPathContext->getDTMManager->new->RTFIterator
XRTreeFrag#convertToNodeset():::Cast result object to a nodelist:::if->return->else->return->asNodeIterator->new->com.sun.org.apache.xml.internal.dtm.ref.DTMNodeList
XRTreeFrag#equals(XObject):::Tell if two objects are functionally equal.:::try->if->obj2->getType->return->obj2->equals->else->if->obj2->getType->return->bool->obj2->bool->else->if->obj2->getType->return->num->obj2->num->else->if->obj2->getType->return->xstr->obj2->xstr->equals->else->if->obj2->getType->return->xstr->obj2->xstr->equals->else->if->obj2->getType->return->xstr->obj2->xstr->equals->else->return->super->equals->catch->throw->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException->finally
XRTreeFragSelectWrapper#fixupVariables(List, int):::This function is used to fixup variables from QNames to stack frame indexes at stylesheet build time.:::fixupVariables
XRTreeFragSelectWrapper#execute(XPathContext):::For support of literal objects in xpaths.:::m_selected->execute->m_selected->allowDetachToRelease->if->m_selected->getType->return->else->return->m_selected->str->new->XString
XRTreeFragSelectWrapper#detach():::Detaches the DTMIterator from the set which it iterated over, releasing any computational resources and placing the iterator in the INVALID state:::throw->XSLMessages->createXPATHMessage->new->RuntimeException
XRTreeFragSelectWrapper#num():::Cast result object to a number.:::throw->XSLMessages->createXPATHMessage->new->RuntimeException
XRTreeFragSelectWrapper#xstr():::Cast result object to an XMLString.:::throw->XSLMessages->createXPATHMessage->new->RuntimeException
XRTreeFragSelectWrapper#str():::Cast result object to a string.:::throw->XSLMessages->createXPATHMessage->new->RuntimeException
XRTreeFragSelectWrapper#getType():::Tell what kind of class this is.:::return
XRTreeFragSelectWrapper#rtf():::Cast result object to a result tree fragment.:::throw->XSLMessages->createXPATHMessage->new->RuntimeException
XRTreeFragSelectWrapper#asNodeIterator():::Cast result object to a DTMIterator.:::throw->XSLMessages->createXPATHMessage->new->RuntimeException
XString#getType():::Tell that this is a CLASS_STRING.:::return
XString#getTypeString():::Given a request type, return the equivalent string:::return
XString#hasString():::Tell if this object contains a java String object.:::return
XString#num():::Cast result object to a number.:::return->toDouble
XString#toDouble():::Convert a string to a double -- Allowed input is in fixed notation ddd.fff.:::s->trim->result->for->i->s->length->try->Double->s->toString->parseDouble->catch->finally->return
XString#boolean bool():::Cast result object to a boolean.:::return->str->length
XString#xstr():::Cast result object to a string.:::return
XString#str():::Cast result object to a string.:::return
XString#rtf(XPathContext):::Cast result object to a result tree fragment.:::frag->support->createDocumentFragment->frag->str->appendTextChild->return->frag->getDocument
XString#dispatchCharactersEvents(org.xml.sax.ContentHandler):::Directly call the characters method on the passed ContentHandler for the string-value:::str->str->ch->str->toCharArray->str->length->characters
XString#dispatchAsComment(org.xml.sax.ext.LexicalHandler):::Directly call the comment method on the passed LexicalHandler for the string-value.:::str->str->lh->str->toCharArray->str->length->comment
XString#length():::Returns the length of this string.:::return->str->length
XString#charAt(int):::Returns the character at the specified index:::return->str->charAt
XString#getChars(int, int, char[], int):::Copies characters from this string into the destination character array.:::str->getChars
XString#equals(XObject):::Tell if two objects are functionally equal.:::t->obj2->getType->try->if->return->obj2->equals->else->if->return->obj2->bool->bool->else->if->return->obj2->num->num->catch->throw->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException->finally->return->xstr->obj2->xstr->equals
XString#equals(String):::Compares this string to the specified String:::return->str->equals
XString#equals(XMLString):::Compares this string to the specified object:::if->if->obj2->hasString->return->obj2->str->equals->else->return->str->obj2->toString->equals->return
XString#equals(Object):::Compares this string to the specified object:::if->return->else->if->return->obj2->equals->else->if->return->obj2->equals->else->return->str->obj2->toString->equals
XString#equalsIgnoreCase(String):::Compares this String to another String, ignoring case considerations:::return->str->equalsIgnoreCase
XString#compareTo(XMLString):::Compares two strings lexicographically.:::len1->this->length->len2->xstr->length->n->Math->min->i->j->while->c1->this->charAt->c2->xstr->charAt->if->return->return
XString#compareToIgnoreCase(XMLString):::Compares two strings lexicographically, ignoring case considerations:::throw->new->java.lang.NoSuchMethodException->new->com.sun.org.apache.xml.internal.utils.WrappedRuntimeException
XString#startsWith(String, int):::Tests if this string starts with the specified prefix beginning a specified index.:::return->str->startsWith
XString#startsWith(String):::Tests if this string starts with the specified prefix.:::return->startsWith
XString#startsWith(XMLString, int):::Tests if this string starts with the specified prefix beginning a specified index.:::to->tlim->this->length->po->pc->prefix->length->if->return->while->if->this->charAt->prefix->charAt->return->return
XString#startsWith(XMLString):::Tests if this string starts with the specified prefix.:::return->startsWith
XString#endsWith(String):::Tests if this string ends with the specified suffix.:::return->str->endsWith
XString#hashCode():::Returns a hashcode for this string:::return->str->hashCode
XString#indexOf(int):::Returns the index within this string of the first occurrence of the specified character:::return->str->indexOf
XString#indexOf(int, int):::Returns the index within this string of the first occurrence of the specified character, starting the search at the specified index:::return->str->indexOf
XString#lastIndexOf(int):::Returns the index within this string of the last occurrence of the specified character:::return->str->lastIndexOf
XString#lastIndexOf(int, int):::Returns the index within this string of the last occurrence of the specified character, searching backward starting at the specified index:::return->str->lastIndexOf
XString#indexOf(String):::Returns the index within this string of the first occurrence of the specified substring:::return->str->indexOf
XString#indexOf(XMLString):::Returns the index within this string of the first occurrence of the specified substring:::return->str->str->toString->indexOf
XString#indexOf(String, int):::Returns the index within this string of the first occurrence of the specified substring, starting at the specified index:::return->str->indexOf
XString#lastIndexOf(String):::Returns the index within this string of the rightmost occurrence of the specified substring:::return->str->lastIndexOf
XString#lastIndexOf(String, int):::Returns the index within this string of the last occurrence of the specified substring.:::return->str->lastIndexOf
XString#substring(int):::Returns a new string that is a substring of this string:::return->str->substring->new->XString
XString#substring(int, int):::Returns a new string that is a substring of this string:::return->str->substring->new->XString
XString#concat(String):::Concatenates the specified string to the end of this string.:::return->str->concat->new->XString
XString#toLowerCase(Locale):::Converts all of the characters in this String to lower case using the rules of the given Locale.:::return->str->toLowerCase->new->XString
XString#toLowerCase():::Converts all of the characters in this String to lower case using the rules of the default locale, which is returned by Locale.getDefault:::return->str->toLowerCase->new->XString
XString#toUpperCase(Locale):::Converts all of the characters in this String to upper case using the rules of the given locale.:::return->str->toUpperCase->new->XString
XString#toUpperCase():::Converts all of the characters in this String to upper case using the rules of the default locale, which is returned by Locale.getDefault:::return->str->toUpperCase->new->XString
XString#trim():::Removes white space from both ends of this string.:::return->str->trim->new->XString
XString#isSpace(char):::Returns whether the specified <var>ch</var> conforms to the XML 1.0 definition of whitespace:::return->XMLCharacterRecognizer->isWhiteSpace
XString#fixWhiteSpace(boolean, boolean, boolean):::Conditionally trim all leading and trailing whitespace in the specified String:::len->this->length->buf->new->charArr->this->getChars->edit->s->for->d->pres->for->if->start->if->xsf->XMLStringFactoryImpl->getFactory->return->xsf->new->String->newstr
XString#callVisitors(ExpressionOwner, XPathVisitor)::: string call visitors:::visitor->visitStringLiteral
XStringForChars#fsb():::Cast result object to a string.:::throw->XSLMessages->createXPATHMessage->new->RuntimeException
XStringForChars#appendToFsb(com.sun.org.apache.xml.internal.utils.FastStringBuffer):::Cast result object to a string.:::fsb->append
XStringForChars#hasString():::Tell if this object contains a java String object.:::return
XStringForChars#str():::Cast result object to a string.:::if->new->String->return
XStringForChars#object():::Since this object is incomplete without the length and the offset, we have to convert to a string when this function is called.:::return->str
XStringForChars#dispatchCharactersEvents(org.xml.sax.ContentHandler):::Directly call the characters method on the passed ContentHandler for the string-value:::ch->characters
XStringForChars#dispatchAsComment(org.xml.sax.ext.LexicalHandler):::Directly call the comment method on the passed LexicalHandler for the string-value.:::lh->comment
XStringForChars#length():::Returns the length of this string.:::return
XStringForChars#charAt(int):::Returns the character at the specified index:::return
XStringForChars#getChars(int, int, char[], int):::Copies characters from this string into the destination character array.:::System->arraycopy
XStringForFSB#fsb():::Cast result object to a string.:::return
XStringForFSB#appendToFsb(com.sun.org.apache.xml.internal.utils.FastStringBuffer):::Cast result object to a string.:::fsb->str->append
XStringForFSB#hasString():::Tell if this object contains a java String object.:::return
XStringForFSB#object():::Since this object is incomplete without the length and the offset, we have to convert to a string when this function is called.:::return->str
XStringForFSB#str():::Cast result object to a string.:::if->fsb->getString->return
XStringForFSB#dispatchCharactersEvents(org.xml.sax.ContentHandler):::Directly call the characters method on the passed ContentHandler for the string-value:::fsb->sendSAXcharacters
XStringForFSB#dispatchAsComment(org.xml.sax.ext.LexicalHandler):::Directly call the comment method on the passed LexicalHandler for the string-value.:::fsb->sendSAXComment
XStringForFSB#length():::Returns the length of this string.:::return
XStringForFSB#charAt(int):::Returns the character at the specified index:::return->fsb->charAt
XStringForFSB#getChars(int, int, char[], int):::Copies characters from this string into the destination character array.:::n->if->if->end->d->fsb->fsb->for->i
XStringForFSB#equals(XMLString):::Compares this string to the specified object:::if->return->n->if->obj2->length->fsb->fsb->i->j->while->if->fsb->charAt->obj2->charAt->return->return->return
XStringForFSB#equals(XObject):::Tell if two objects are functionally equal.:::if->return->if->obj2->getType->return->obj2->equals->str->obj2->str->n->if->str->length->fsb->fsb->i->j->while->if->fsb->charAt->str->charAt->return->return->return
XStringForFSB#equals(String):::Tell if two objects are functionally equal.:::n->if->anotherString->length->fsb->fsb->i->j->while->if->fsb->charAt->anotherString->charAt->return->return->return
XStringForFSB#equals(Object):::Compares this string to the specified object:::if->return->if->return->obj2->equals->else->if->return->obj2->equals->else->if->return->equals->else->return->obj2->toString->equals
XStringForFSB#equalsIgnoreCase(String):::Compares this String to another String, ignoring case considerations:::return->anotherString->length->str->equalsIgnoreCase
XStringForFSB#compareTo(XMLString):::Compares two strings lexicographically.:::len1->len2->xstr->length->n->Math->min->fsb->fsb->i->j->while->c1->fsb->charAt->c2->xstr->charAt->if->return->return
XStringForFSB#compareToIgnoreCase(XMLString):::Compares two strings lexicographically, ignoring case considerations:::len1->len2->xstr->length->n->Math->min->fsb->fsb->i->j->while->c1->Character->fsb->charAt->toLowerCase->c2->Character->xstr->charAt->toLowerCase->if->return->return
XStringForFSB#hashCode():::Returns a hashcode for this string:::return->super->hashCode
XStringForFSB#startsWith(XMLString, int):::Tests if this string starts with the specified prefix beginning a specified index.:::fsb->fsb->to->tlim->po->pc->prefix->length->if->return->while->if->fsb->charAt->prefix->charAt->return->return
XStringForFSB#startsWith(XMLString):::Tests if this string starts with the specified prefix.:::return->startsWith
XStringForFSB#indexOf(int):::Returns the index within this string of the first occurrence of the specified character:::return->indexOf
XStringForFSB#indexOf(int, int):::Returns the index within this string of the first occurrence of the specified character, starting the search at the specified index:::max->fsb->fsb->if->else->if->return->for->i->return
XStringForFSB#substring(int):::Returns a new string that is a substring of this string:::len->if->return->else->start->return->fsb->new->XStringForFSB
XStringForFSB#substring(int, int):::Returns a new string that is a substring of this string:::len->if->if->return->else->start->return->fsb->new->XStringForFSB
XStringForFSB#concat(String):::Concatenates the specified string to the end of this string.:::return->str->concat->new->XString
XStringForFSB#trim():::Removes white space from both ends of this string.:::return->fixWhiteSpace
XStringForFSB#isSpace(char):::Returns whether the specified <var>ch</var> conforms to the XML 1.0 definition of whitespace:::return->XMLCharacterRecognizer->isWhiteSpace
XStringForFSB#fixWhiteSpace(boolean, boolean, boolean):::Conditionally trim all leading and trailing whitespace in the specified String:::end->buf->new->charArr->fsb->fsb->edit->d->pres->for->s->if->start->if->xsf->XMLStringFactoryImpl->getFactory->return->xsf->newstr
XStringForFSB#toDouble():::Convert a string to a double -- Allowed input is in fixed notation ddd.fff:::if->return->i->c->valueString->fsb->getString->for->if->return->if->valueString->charAt->for->for->if->return->try->return->Double->parseDouble->catch->return->finally
