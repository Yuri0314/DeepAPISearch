AbstractXMLSchema#getFeature(String):::Returns the initial value of a feature for validators created using this grammar pool container or null if the validators should use the default value.:::return->fFeatures->get
AbstractXMLSchema#getProperty(String):::Returns the initial value of a property for validators created using this grammar pool container or null if the validators should use the default value.:::return->fProperties->get
DOMDocumentHandler#setDOMResult(DOMResult):::Sets the DOMResult object which receives the constructed DOM nodes.:::
DOMDocumentHandler#doctypeDecl(DocumentType):::A document type declaration.:::
DOMDocumentHandler#comment(Comment):::A comment.:::
DOMDocumentHandler#processingInstruction(ProcessingInstruction):::A processing instruction:::
DraconianErrorHandler#getInstance():::Returns the one and only instance of this error handler.:::return
DraconianErrorHandler#warning(SAXParseException):::Warning: Ignore.:::
DraconianErrorHandler#error(SAXParseException):::Error: Throws back SAXParseException.:::throw
DraconianErrorHandler#fatalError(SAXParseException):::Fatal Error: Throws back SAXParseException.:::throw
ErrorHandlerAdaptor#hadError():::returns if there was an error since the last invocation of the resetError method.:::return
ErrorHandlerAdaptor#reset():::resets the error flag.:::
ErrorHandlerAdaptor#getErrorHandler():::Implemented by the derived class to return the actual ErrorHandler to which errors are sent.:::
JAXPValidationMessageFormatter#formatMessage(Locale, String, Object[]):::Formats a message with the specified arguments using the given locale information.:::resourceBundle->if->SecuritySupport->getResourceBundle->else->SecuritySupport->getResourceBundle->msg->try->resourceBundle->getString->if->try->format->catch->resourceBundle->getString->resourceBundle->getString->finally->catch->resourceBundle->getString->throw->new->MissingResourceException->finally->if->if->str->new->StringBuffer->str->append->for->i->return
SoftReferenceGrammarPool#putGrammar(Grammar):::Puts the specified grammar into the grammar pool and associates it to its root element name or its target namespace.:::if->synchronized->clean->desc->grammar->getGrammarDescription->hash->hashCode->index->for->entry->entry->new->Entry
SoftReferenceGrammarPool#getGrammar(XMLGrammarDescription):::Returns the grammar associated to the specified grammar description:::synchronized->clean->hash->hashCode->index->for->entry->return
SoftReferenceGrammarPool#removeGrammar(XMLGrammarDescription):::Removes the grammar associated to the specified grammar description from the grammar pool and returns the removed grammar:::synchronized->clean->hash->hashCode->index->for->entry->return
SoftReferenceGrammarPool#containsGrammar(XMLGrammarDescription):::Returns true if the grammar pool contains a grammar associated to the specified grammar description:::synchronized->clean->hash->hashCode->index->for->entry->return
SoftReferenceGrammarPool#equals(XMLGrammarDescription, XMLGrammarDescription):::This method checks whether two grammars are the same:::if->if->return->sd1->sd2->targetNamespace->sd1->getTargetNamespace->if->if->targetNamespace->sd2->getTargetNamespace->equals->return->else->if->sd2->getTargetNamespace->return->expandedSystemId->sd1->getExpandedSystemId->if->if->expandedSystemId->sd2->getExpandedSystemId->equals->return->else->if->sd2->getExpandedSystemId->return->return->return->desc1->equals
SoftReferenceGrammarPool#hashCode(XMLGrammarDescription):::Returns the hash code value for the given grammar description.:::if->sd->targetNamespace->sd->getTargetNamespace->expandedSystemId->sd->getExpandedSystemId->hash->targetNamespace->hashCode->expandedSystemId->hashCode->return->return->desc->hashCode
Util#toXMLInputSource(StreamSource):::Creates a proper XMLInputSource from a StreamSource.:::if->in->getReader->return->in->getPublicId->in->getSystemId->in->getSystemId->in->getReader->new->XMLInputSource->if->in->getInputStream->return->in->getPublicId->in->getSystemId->in->getSystemId->in->getInputStream->new->XMLInputSource->return->in->getPublicId->in->getSystemId->in->getSystemId->new->XMLInputSource
Util#toSAXException(XNIException):::Reconstructs SAXException from XNIException.:::if->return->toSAXParseException->if->e->getException->return->e->getException->return->e->getMessage->e->getException->new->SAXException
ValidatorHandlerImpl.ResolutionForwarder#setEntityResolver(LSResourceResolver):::Sets the DOM entity resolver.:::
ValidatorHandlerImpl.ResolutionForwarder#getEntityResolver():::Returns the DOM entity resolver.:::return
ValidatorHandlerImpl.ResolutionForwarder#getExternalSubset(String, String):::Always returns null:::return
ValidatorHandlerImpl.ResolutionForwarder#resolveEntity(String, String, String, String):::Resolves the given resource and adapts the LSInput returned into an InputSource.:::if->lsInput->fEntityResolver->resolveResource->if->pubId->lsInput->getPublicId->sysId->lsInput->getSystemId->baseSystemId->lsInput->getBaseURI->charStream->lsInput->getCharacterStream->byteStream->lsInput->getByteStream->data->lsInput->getStringData->encoding->lsInput->getEncoding->inputSource->new->InputSource->inputSource->setPublicId->inputSource->resolveSystemId->setSystemId->if->inputSource->setCharacterStream->else->if->inputSource->setByteStream->else->if->data->length->inputSource->new->StringReader->setCharacterStream->inputSource->setEncoding->return->return
ValidatorHandlerImpl.ResolutionForwarder#resolveEntity(String, String):::Delegates to EntityResolver2.resolveEntity(String, String, String, String).:::return->resolveEntity
XMLSchema#getGrammarPool():::Returns the grammar pool contained inside the container.:::return
XMLSchema#isFullyComposed():::Returns whether the schema components contained in this object can be considered to be a fully composed schema and should be used to exclusion of other schema components which may be present elsewhere.:::return
XMLSchemaFactory#isSchemaLanguageSupported(String):::Is specified schema supported by this SchemaFactory?:::if->throw->JAXPValidationMessageFormatter->fXMLSchemaLoader->getLocale->formatMessage->new->NullPointerException->if->schemaLanguage->length->throw->JAXPValidationMessageFormatter->fXMLSchemaLoader->getLocale->formatMessage->new->IllegalArgumentException->return->schemaLanguage->equals->schemaLanguage->equals
XMLSchemaFactory.XMLGrammarPoolImplExtension#getGrammarCount():::Returns the number of grammars contained in this pool.:::return
XMLSchemaValidatorComponentManager#getFeatureState(String):::Returns the state of a feature.:::if->PARSER_SETTINGS->equals->return->FeatureState->is->else->if->VALIDATION->equals->SCHEMA_VALIDATION->equals->return->FeatureState->is->else->if->USE_GRAMMAR_POOL_ONLY->equals->return->FeatureState->is->else->if->equals->return->FeatureState->fInitSecurityManager->isSecureProcessing->is->else->if->SCHEMA_ELEMENT_DEFAULT->equals->return->FeatureState->is->return->super->getFeatureState
XMLSchemaValidatorComponentManager#setFeature(String, boolean):::Set the state of a feature.:::if->PARSER_SETTINGS->equals->throw->new->XMLConfigurationException->else->if->VALIDATION->equals->SCHEMA_VALIDATION->equals->throw->new->XMLConfigurationException->else->if->USE_GRAMMAR_POOL_ONLY->equals->throw->new->XMLConfigurationException->if->equals->if->throw->new->XMLConfigurationException->fInitSecurityManager->setSecureProcessing->setProperty->if->fSecurityPropertyMgr->setValue->fSecurityPropertyMgr->setValue->setProperty->return->fEntityManager->setFeature->fErrorReporter->setFeature->fSchemaValidator->setFeature->if->fInitFeatures->containsKey->current->super->getFeature->fInitFeatures->put->super->setFeature
XMLSchemaValidatorComponentManager#getPropertyState(String):::Returns the value of a property.:::if->LOCALE->equals->return->PropertyState->getLocale->is->component->fComponents->get->if->return->PropertyState->is->else->if->fComponents->containsKey->return->PropertyState->is->return->super->getPropertyState
XMLSchemaValidatorComponentManager#setProperty(String, Object):::Sets the state of a property.:::if->ENTITY_MANAGER->equals->ERROR_REPORTER->equals->NAMESPACE_CONTEXT->equals->SCHEMA_VALIDATOR->equals->SYMBOL_TABLE->equals->VALIDATION_MANAGER->equals->XMLGRAMMAR_POOL->equals->throw->new->XMLConfigurationException->fEntityManager->setProperty->fErrorReporter->setProperty->fSchemaValidator->setProperty->if->ENTITY_RESOLVER->equals->ERROR_HANDLER->equals->SECURITY_MANAGER->equals->fComponents->put->return->else->if->LOCALE->equals->setLocale->fComponents->put->return->if->fInitSecurityManager->setLimit->if->fSecurityPropertyMgr->setValue->if->fInitProperties->containsKey->fInitProperties->super->getProperty->put->super->setProperty
XMLSchemaValidatorComponentManager#addRecognizedParamsAndSetDefaults(XMLComponent, XSGrammarPoolContainer):::Adds all of the component's recognized features and properties to the list of default recognized features and properties, and sets default values on the configuration for features and properties which were previously absent from the configuration.:::recognizedFeatures->component->getRecognizedFeatures->addRecognizedFeatures->recognizedProperties->component->getRecognizedProperties->addRecognizedProperties->setFeatureDefaults->setPropertyDefaults
XMLSchemaValidatorComponentManager#reset():::Calls reset on each of the components owned by this component manager:::fNamespaceContext->reset->fValidationManager->reset->fEntityManager->reset->fErrorReporter->reset->fSchemaValidator->reset
XMLSchemaValidatorComponentManager#restoreInitialState():::Cleans out configuration, restoring it to its initial state.:::fComponents->put->fComponents->put->setLocale->fComponents->put->fInitSecurityManager->setSecureProcessing->fComponents->put->setLocale->fComponents->put->if->fInitFeatures->isEmpty->foreach->fInitFeatures->entrySet->name->entry->getKey->value->entry->getValue->super->setFeature->fInitFeatures->clear->if->fInitProperties->isEmpty->foreach->fInitProperties->entrySet->name->entry->getKey->value->entry->getValue->super->setProperty->fInitProperties->clear
XSGrammarPoolContainer#getGrammarPool():::Returns the grammar pool contained inside the container.:::
XSGrammarPoolContainer#isFullyComposed():::Returns whether the schema components contained in this object can be considered to be a fully composed schema and should be used to the exclusion of other schema components which may be present elsewhere.:::
XSGrammarPoolContainer#getFeature(String):::Returns the initial value of a feature for validators created using this grammar pool container or null if the validators should use the default value.:::
XSGrammarPoolContainer#getProperty(String):::Returns the initial value of a property for validators created using this grammar pool container or null if the validators should use the default value.:::
