sun.applet.AppletClassLoader#disableRecursiveDirectoryRead()->void::: applet class loader disable recursive directory read
sun.applet.AppletClassLoader#setCodebaseLookup(boolean)->void:::Set the codebase lookup flag.
sun.applet.AppletClassLoader#getBaseURL()->URL::: applet class loader get base l
sun.applet.AppletClassLoader#getURLs()->URL[]::: applet class loader get ls
sun.applet.AppletClassLoader#addJar(String)->void::: applet class loader add jar
sun.applet.AppletClassLoader#loadClass(String, boolean)->Class::: applet class loader load class
sun.applet.AppletClassLoader#findClass(String)->Class::: applet class loader find class
sun.applet.AppletClassLoader#getPermissions(CodeSource)->PermissionCollection:::Returns the permissions for the given codesource object
sun.applet.AppletClassLoader#getResourceAsStream(String)->InputStream:::Returns an input stream for reading the specified resource
sun.applet.AppletClassLoader#getResourceAsStreamFromJar(String)->InputStream:::Returns an input stream for reading the specified resource from the the loaded jar files
sun.applet.AppletClassLoader#findResource(String)->URL::: applet class loader find resource
sun.applet.AppletClassLoader#findResources(String)->Enumeration::: applet class loader find resources
sun.applet.AppletClassLoader#loadCode(String)->Class::: applet class loader load code
sun.applet.AppletClassLoader#getThreadGroup()->ThreadGroup::: applet class loader get thread group
sun.applet.AppletClassLoader#getAppContext()->AppContext::: applet class loader get app context
sun.applet.AppletClassLoader#grab()->void:::Grab this AppletClassLoader and its ThreadGroup/AppContext, so they won't be destroyed.
sun.applet.AppletClassLoader#setExceptionStatus()->void::: applet class loader set exception status
sun.applet.AppletClassLoader#getExceptionStatus()->boolean::: applet class loader get exception status
sun.applet.AppletClassLoader#release()->void:::Release this AppletClassLoader and its ThreadGroup/AppContext
sun.applet.AppletClassLoader#resetAppContext()->AppContext::: applet class loader reset app context
sun.applet.AppletClassLoader#setJDK11Target(Class, boolean)->void:::Set applet target level as JDK 1.1.
sun.applet.AppletClassLoader#setJDK12Target(Class, boolean)->void:::Set applet target level as JDK 1.2.
sun.applet.AppletClassLoader#isJDK11Target(Class)->Boolean:::Determine if applet is targeted for JDK 1.1.
sun.applet.AppletClassLoader#isJDK12Target(Class)->Boolean:::Determine if applet is targeted for JDK 1.2.
sun.applet.AppContextCreator#run()->void::: app context creator run
sun.applet.AppletSecurity#reset()->void:::Reset from Properties
sun.applet.AppletSecurity#inThreadGroup(ThreadGroup)->boolean:::Returns true if this threadgroup is in the applet's own thread group
sun.applet.AppletSecurity#inThreadGroup(Thread)->boolean:::Returns true of the threadgroup of thread is in the applet's own threadgroup.
sun.applet.AppletSecurity#checkAccess(Thread)->void:::Applets are not allowed to manipulate threads outside applet thread groups
sun.applet.AppletSecurity#checkAccess(ThreadGroup)->void:::Applets are not allowed to manipulate thread groups outside applet thread groups.
sun.applet.AppletSecurity#checkPackageAccess(String)->void:::Throws a SecurityException if the calling thread is not allowed to access the package specified by the argument
sun.applet.AppletSecurity#getThreadGroup()->ThreadGroup:::Returns the thread group of the applet
sun.applet.AppletSecurity#getAppContext()->AppContext:::Get the AppContext corresponding to the current context
