org.w3c.dom.Attr#getName()->String:::Returns the name of this attribute
org.w3c.dom.Attr#getSpecified()->boolean::: True if this attribute was explicitly given a value in the instance document, false otherwise
org.w3c.dom.Attr#getValue()->String:::On retrieval, the value of the attribute is returned as a string
org.w3c.dom.Attr#setValue(String)->void:::On retrieval, the value of the attribute is returned as a string
org.w3c.dom.Attr#getOwnerElement()->Element:::The Element node this attribute is attached to or null if this attribute is not in use.
org.w3c.dom.Attr#getSchemaTypeInfo()->TypeInfo::: The type information associated with this attribute
org.w3c.dom.Attr#isId()->boolean::: Returns whether this attribute is known to be of type ID (i.e
org.w3c.dom.CharacterData#getData()->String:::The character data of the node that implements this interface
org.w3c.dom.CharacterData#setData(String)->void:::The character data of the node that implements this interface
org.w3c.dom.CharacterData#getLength()->int:::The number of 16-bit units that are available through data and the substringData method below
org.w3c.dom.CharacterData#substringData(int, int)->String:::Extracts a range of data from the node.
org.w3c.dom.CharacterData#appendData(String)->void:::Append the string to the end of the character data of the node
org.w3c.dom.CharacterData#insertData(int, String)->void:::Insert a string at the specified 16-bit unit offset.
org.w3c.dom.CharacterData#deleteData(int, int)->void:::Remove a range of 16-bit units from the node
org.w3c.dom.CharacterData#replaceData(int, int, String)->void:::Replace the characters starting at the specified 16-bit unit offset with the specified string.
org.w3c.dom.Document#getDoctype()->DocumentType:::The Document Type Declaration (see DocumentType) associated with this document
org.w3c.dom.Document#getImplementation()->DOMImplementation:::The DOMImplementation object that handles this document
org.w3c.dom.Document#getDocumentElement()->Element:::This is a convenience attribute that allows direct access to the child node that is the document element of the document.
org.w3c.dom.Document#createElement(String)->Element:::Creates an element of the type specified
org.w3c.dom.Document#createDocumentFragment()->DocumentFragment:::Creates an empty DocumentFragment object.
org.w3c.dom.Document#createTextNode(String)->Text:::Creates a Text node given the specified string.
org.w3c.dom.Document#createComment(String)->Comment:::Creates a Comment node given the specified string.
org.w3c.dom.Document#createCDATASection(String)->CDATASection:::Creates a CDATASection node whose value is the specified string.
org.w3c.dom.Document#createProcessingInstruction(String, String)->ProcessingInstruction:::Creates a ProcessingInstruction node given the specified name and data strings.
org.w3c.dom.Document#createAttribute(String)->Attr:::Creates an Attr of the given name
org.w3c.dom.Document#createEntityReference(String)->EntityReference:::Creates an EntityReference object
org.w3c.dom.Document#getElementsByTagName(String)->NodeList:::Returns a NodeList of all the Elements in document order with a given tag name and are contained in the document.
org.w3c.dom.Document#importNode(Node, boolean)->Node:::Imports a node from another document to this document, without altering or removing the source node from the original document; this method creates a new copy of the source node
org.w3c.dom.Document#createElementNS(String, String)->Element:::Creates an element of the given qualified name and namespace URI
org.w3c.dom.Document#createAttributeNS(String, String)->Attr:::Creates an attribute of the given qualified name and namespace URI
org.w3c.dom.Document#getElementsByTagNameNS(String, String)->NodeList:::Returns a NodeList of all the Elements with a given local name and namespace URI in document order.
org.w3c.dom.Document#getElementById(String)->Element:::Returns the Element that has an ID attribute with the given value
org.w3c.dom.Document#getInputEncoding()->String:::An attribute specifying the encoding used for this document at the time of the parsing
org.w3c.dom.Document#getXmlEncoding()->String:::An attribute specifying, as part of the XML declaration, the encoding of this document
org.w3c.dom.Document#getXmlStandalone()->boolean:::An attribute specifying, as part of the XML declaration, whether this document is standalone
org.w3c.dom.Document#setXmlStandalone(boolean)->void:::An attribute specifying, as part of the XML declaration, whether this document is standalone
org.w3c.dom.Document#getXmlVersion()->String::: An attribute specifying, as part of the XML declaration, the version number of this document
org.w3c.dom.Document#setXmlVersion(String)->void::: An attribute specifying, as part of the XML declaration, the version number of this document
org.w3c.dom.Document#getStrictErrorChecking()->boolean:::An attribute specifying whether error checking is enforced or not
org.w3c.dom.Document#setStrictErrorChecking(boolean)->void:::An attribute specifying whether error checking is enforced or not
org.w3c.dom.Document#getDocumentURI()->String::: The location of the document or null if undefined or if the Document was created using DOMImplementation.createDocument
org.w3c.dom.Document#setDocumentURI(String)->void::: The location of the document or null if undefined or if the Document was created using DOMImplementation.createDocument
org.w3c.dom.Document#adoptNode(Node)->Node::: Attempts to adopt a node from another document to this document
org.w3c.dom.Document#getDomConfig()->DOMConfiguration::: The configuration used when Document.normalizeDocument() is invoked.
org.w3c.dom.Document#normalizeDocument()->void::: This method acts as if the document was going through a save and load cycle, putting the document in a "normal" form
org.w3c.dom.Document#renameNode(Node, String, String)->Node:::Rename an existing node of type ELEMENT_NODE or ATTRIBUTE_NODE
org.w3c.dom.DocumentType#getName()->String:::The name of DTD; i.e., the name immediately following the DOCTYPE keyword.
org.w3c.dom.DocumentType#getEntities()->NamedNodeMap:::A NamedNodeMap containing the general entities, both external and internal, declared in the DTD
org.w3c.dom.DocumentType#getNotations()->NamedNodeMap:::A NamedNodeMap containing the notations declared in the DTD
org.w3c.dom.DocumentType#getPublicId()->String:::The public identifier of the external subset.
org.w3c.dom.DocumentType#getSystemId()->String:::The system identifier of the external subset
org.w3c.dom.DocumentType#getInternalSubset()->String:::The internal subset as a string, or null if there is none
org.w3c.dom.DOMConfiguration#setParameter(String, Object)->void:::Set the value of a parameter.
org.w3c.dom.DOMConfiguration#getParameter(String)->Object::: Return the value of a parameter if known.
org.w3c.dom.DOMConfiguration#canSetParameter(String, Object)->boolean:::Check if setting a parameter to a specific value is supported.
org.w3c.dom.DOMConfiguration#getParameterNames()->DOMStringList::: The list of the parameters supported by this DOMConfiguration object and for which at least one value can be set by the application
org.w3c.dom.DOMError#getSeverity()->short:::The severity of the error, either SEVERITY_WARNING, SEVERITY_ERROR, or SEVERITY_FATAL_ERROR.
org.w3c.dom.DOMError#getMessage()->String:::An implementation specific string describing the error that occurred.
org.w3c.dom.DOMError#getType()->String::: A DOMString indicating which related data is expected in relatedData
org.w3c.dom.DOMError#getRelatedException()->Object:::The related platform dependent exception if any.
org.w3c.dom.DOMError#getRelatedData()->Object::: The related DOMError.type dependent data if any.
org.w3c.dom.DOMError#getLocation()->DOMLocator:::The location of the error.
org.w3c.dom.DOMErrorHandler#handleError(DOMError)->boolean:::This method is called on the error handler when an error occurs
org.w3c.dom.DOMImplementation#hasFeature(String, String)->boolean:::Test if the DOM implementation implements a specific feature and version, as specified in DOM Features.
org.w3c.dom.DOMImplementation#createDocumentType(String, String, String)->DocumentType:::Creates an empty DocumentType node
org.w3c.dom.DOMImplementation#createDocument(String, String, DocumentType)->Document:::Creates a DOM Document object of the specified type with its document element
org.w3c.dom.DOMImplementation#getFeature(String, String)->Object::: This method returns a specialized object which implements the specialized APIs of the specified feature and version, as specified in DOM Features
org.w3c.dom.DOMImplementationList#item(int)->DOMImplementation::: Returns the indexth item in the collection
org.w3c.dom.DOMImplementationList#getLength()->int::: The number of DOMImplementations in the list
org.w3c.dom.DOMImplementationSource#getDOMImplementation(String)->DOMImplementation::: A method to request the first DOM implementation that supports the specified features.
org.w3c.dom.DOMImplementationSource#getDOMImplementationList(String)->DOMImplementationList:::A method to request a list of DOM implementations that support the specified features and versions, as specified in .
org.w3c.dom.DOMLocator#getLineNumber()->int:::The line number this locator is pointing to, or -1 if there is no column number available.
org.w3c.dom.DOMLocator#getColumnNumber()->int:::The column number this locator is pointing to, or -1 if there is no column number available.
org.w3c.dom.DOMLocator#getByteOffset()->int:::The byte offset into the input source this locator is pointing to or -1 if there is no byte offset available.
org.w3c.dom.DOMLocator#getUtf16Offset()->int:::The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], offset into the input source this locator is pointing to or -1 if there is no UTF-16 offset available.
org.w3c.dom.DOMLocator#getRelatedNode()->Node:::The node this locator is pointing to, or null if no node is available.
org.w3c.dom.DOMLocator#getUri()->String:::The URI this locator is pointing to, or null if no URI is available.
org.w3c.dom.DOMStringList#item(int)->String::: Returns the indexth item in the collection
org.w3c.dom.DOMStringList#getLength()->int:::The number of DOMStrings in the list
org.w3c.dom.DOMStringList#contains(String)->boolean::: Test if a string is part of this DOMStringList.
org.w3c.dom.Element#getTagName()->String:::The name of the element
org.w3c.dom.Element#getAttribute(String)->String:::Retrieves an attribute value by name.
org.w3c.dom.Element#setAttribute(String, String)->void:::Adds a new attribute
org.w3c.dom.Element#removeAttribute(String)->void:::Removes an attribute by name
org.w3c.dom.Element#getAttributeNode(String)->Attr:::Retrieves an attribute node by name
org.w3c.dom.Element#setAttributeNode(Attr)->Attr:::Adds a new attribute node
org.w3c.dom.Element#removeAttributeNode(Attr)->Attr:::Removes the specified attribute node
org.w3c.dom.Element#getElementsByTagName(String)->NodeList:::Returns a NodeList of all descendant Elements with a given tag name, in document order.
org.w3c.dom.Element#getAttributeNS(String, String)->String:::Retrieves an attribute value by local name and namespace URI
org.w3c.dom.Element#setAttributeNS(String, String, String)->void:::Adds a new attribute
org.w3c.dom.Element#removeAttributeNS(String, String)->void:::Removes an attribute by local name and namespace URI
org.w3c.dom.Element#getAttributeNodeNS(String, String)->Attr:::Retrieves an Attr node by local name and namespace URI
org.w3c.dom.Element#setAttributeNodeNS(Attr)->Attr:::Adds a new attribute
org.w3c.dom.Element#getElementsByTagNameNS(String, String)->NodeList:::Returns a NodeList of all the descendant Elements with a given local name and namespace URI in document order.
org.w3c.dom.Element#hasAttribute(String)->boolean:::Returns true when an attribute with a given name is specified on this element or has a default value, false otherwise.
org.w3c.dom.Element#hasAttributeNS(String, String)->boolean:::Returns true when an attribute with a given local name and namespace URI is specified on this element or has a default value, false otherwise
org.w3c.dom.Element#getSchemaTypeInfo()->TypeInfo::: The type information associated with this element.
org.w3c.dom.Element#setIdAttribute(String, boolean)->void::: If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute 
org.w3c.dom.Element#setIdAttributeNS(String, String, boolean)->void::: If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute 
org.w3c.dom.Element#setIdAttributeNode(Attr, boolean)->void::: If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute 
org.w3c.dom.ElementTraversal#getFirstElementChild()->Element:::Returns a reference to the first child node of the element which is of the Element type.
org.w3c.dom.ElementTraversal#getLastElementChild()->Element:::Returns a reference to the last child node of the element which is of the Element type.
org.w3c.dom.ElementTraversal#getPreviousElementSibling()->Element:::Returns a reference to the sibling node of the element which most immediately precedes the element in document order, and which is of the Element type.
org.w3c.dom.ElementTraversal#getNextElementSibling()->Element:::Returns a reference to the sibling node of the element which most immediately follows the element in document order, and which is of the Element type.
org.w3c.dom.ElementTraversal#getChildElementCount()->int:::Returns the current number of child nodes of the element which are of the Element type.
org.w3c.dom.Entity#getPublicId()->String:::The public identifier associated with the entity if specified, and null otherwise.
org.w3c.dom.Entity#getSystemId()->String:::The system identifier associated with the entity if specified, and null otherwise
org.w3c.dom.Entity#getNotationName()->String:::For unparsed entities, the name of the notation for the entity
org.w3c.dom.Entity#getInputEncoding()->String:::An attribute specifying the encoding used for this entity at the time of parsing, when it is an external parsed entity
org.w3c.dom.Entity#getXmlEncoding()->String:::An attribute specifying, as part of the text declaration, the encoding of this entity, when it is an external parsed entity
org.w3c.dom.Entity#getXmlVersion()->String:::An attribute specifying, as part of the text declaration, the version number of this entity, when it is an external parsed entity
org.w3c.dom.NamedNodeMap#getNamedItem(String)->Node:::Retrieves a node specified by name.
org.w3c.dom.NamedNodeMap#setNamedItem(Node)->Node:::Adds a node using its nodeName attribute
org.w3c.dom.NamedNodeMap#removeNamedItem(String)->Node:::Removes a node specified by name
org.w3c.dom.NamedNodeMap#item(int)->Node:::Returns the indexth item in the map
org.w3c.dom.NamedNodeMap#getLength()->int:::The number of nodes in this map
org.w3c.dom.NamedNodeMap#getNamedItemNS(String, String)->Node:::Retrieves a node specified by local name and namespace URI
org.w3c.dom.NamedNodeMap#setNamedItemNS(Node)->Node:::Adds a node using its namespaceURI and localName
org.w3c.dom.NamedNodeMap#removeNamedItemNS(String, String)->Node:::Removes a node specified by local name and namespace URI
org.w3c.dom.NameList#getName(int)->String::: Returns the indexth name item in the collection.
org.w3c.dom.NameList#getNamespaceURI(int)->String::: Returns the indexth namespaceURI item in the collection.
org.w3c.dom.NameList#getLength()->int::: The number of pairs (name and namespaceURI) in the list
org.w3c.dom.NameList#contains(String)->boolean::: Test if a name is part of this NameList.
org.w3c.dom.NameList#containsNS(String, String)->boolean::: Test if the pair namespaceURI/name is part of this NameList.
org.w3c.dom.Node#getNodeName()->String:::The name of this node, depending on its type; see the table above.
org.w3c.dom.Node#getNodeValue()->String:::The value of this node, depending on its type; see the table above
org.w3c.dom.Node#setNodeValue(String)->void:::The value of this node, depending on its type; see the table above
org.w3c.dom.Node#getNodeType()->short:::A code representing the type of the underlying object, as defined above.
org.w3c.dom.Node#getParentNode()->Node:::The parent of this node
org.w3c.dom.Node#getChildNodes()->NodeList:::A NodeList that contains all children of this node
org.w3c.dom.Node#getFirstChild()->Node:::The first child of this node
org.w3c.dom.Node#getLastChild()->Node:::The last child of this node
org.w3c.dom.Node#getPreviousSibling()->Node:::The node immediately preceding this node
org.w3c.dom.Node#getNextSibling()->Node:::The node immediately following this node
org.w3c.dom.Node#getAttributes()->NamedNodeMap:::A NamedNodeMap containing the attributes of this node (if it is an Element) or null otherwise.
org.w3c.dom.Node#getOwnerDocument()->Document:::The Document object associated with this node
org.w3c.dom.Node#insertBefore(Node, Node)->Node:::Inserts the node newChild before the existing child node refChild
org.w3c.dom.Node#replaceChild(Node, Node)->Node:::Replaces the child node oldChild with newChild  in the list of children, and returns the oldChild node
org.w3c.dom.Node#removeChild(Node)->Node:::Removes the child node indicated by oldChild from the list of children, and returns it.
org.w3c.dom.Node#appendChild(Node)->Node:::Adds the node newChild to the end of the list of children of this node
org.w3c.dom.Node#hasChildNodes()->boolean:::Returns whether this node has any children.
org.w3c.dom.Node#cloneNode(boolean)->Node:::Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes
org.w3c.dom.Node#normalize()->void::: Puts all Text nodes in the full depth of the sub-tree underneath this Node, including attribute nodes, into a "normal" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates Text nodes, i.e., there are neither adjacent Text nodes nor empty Text nodes
org.w3c.dom.Node#isSupported(String, String)->boolean::: Tests whether the DOM implementation implements a specific feature and that feature is supported by this node, as specified in .
org.w3c.dom.Node#getNamespaceURI()->String:::The namespace URI of this node, or null if it is unspecified (see )
org.w3c.dom.Node#getPrefix()->String:::The namespace prefix of this node, or null if it is unspecified
org.w3c.dom.Node#setPrefix(String)->void:::The namespace prefix of this node, or null if it is unspecified
org.w3c.dom.Node#getLocalName()->String:::Returns the local part of the qualified name of this node
org.w3c.dom.Node#hasAttributes()->boolean:::Returns whether this node (if it is an element) has any attributes.
org.w3c.dom.Node#getBaseURI()->String:::The absolute base URI of this node or null if the implementation wasn't able to obtain an absolute URI
org.w3c.dom.Node#compareDocumentPosition(Node)->short:::Compares the reference node, i.e
org.w3c.dom.Node#getTextContent()->String:::This attribute returns the text content of this node and its descendants
org.w3c.dom.Node#setTextContent(String)->void:::This attribute returns the text content of this node and its descendants
org.w3c.dom.Node#isSameNode(Node)->boolean:::Returns whether this node is the same node as the given one
org.w3c.dom.Node#lookupPrefix(String)->String:::Look up the prefix associated to the given namespace URI, starting from this node
org.w3c.dom.Node#isDefaultNamespace(String)->boolean::: This method checks if the specified namespaceURI is the default namespace or not.
org.w3c.dom.Node#lookupNamespaceURI(String)->String:::Look up the namespace URI associated to the given prefix, starting from this node
org.w3c.dom.Node#isEqualNode(Node)->boolean:::Tests whether two nodes are equal
org.w3c.dom.Node#getFeature(String, String)->Object::: This method returns a specialized object which implements the specialized APIs of the specified feature and version, as specified in 
org.w3c.dom.Node#setUserData(String, Object, UserDataHandler)->Object:::Associate an object to a key on this node
org.w3c.dom.Node#getUserData(String)->Object:::Retrieves the object associated to a key on a this node
org.w3c.dom.NodeList#item(int)->Node:::Returns the indexth item in the collection
org.w3c.dom.NodeList#getLength()->int:::The number of nodes in the list
org.w3c.dom.Notation#getPublicId()->String:::The public identifier of this notation
org.w3c.dom.Notation#getSystemId()->String:::The system identifier of this notation
org.w3c.dom.ProcessingInstruction#getTarget()->String:::The target of this processing instruction
org.w3c.dom.ProcessingInstruction#getData()->String:::The content of this processing instruction
org.w3c.dom.ProcessingInstruction#setData(String)->void:::The content of this processing instruction
org.w3c.dom.Text#splitText(int)->Text:::Breaks this node into two nodes at the specified offset, keeping both in the tree as siblings
org.w3c.dom.Text#isElementContentWhitespace()->boolean:::Returns whether this text node contains  element content whitespace, often abusively called "ignorable whitespace"
org.w3c.dom.Text#getWholeText()->String:::Returns all text of Text nodes logically-adjacent text nodes to this node, concatenated in document order
org.w3c.dom.Text#replaceWholeText(String)->Text:::Replaces the text of the current node and all logically-adjacent text nodes with the specified text
org.w3c.dom.TypeInfo#getTypeName()->String::: The name of a type declared for the associated element or attribute, or null if unknown.
org.w3c.dom.TypeInfo#getTypeNamespace()->String::: The namespace of the type declared for the associated element or attribute or null if the element does not have declaration or if no namespace information is available.
org.w3c.dom.TypeInfo#isDerivedFrom(String, String, int)->boolean::: This method returns if there is a derivation between the reference type definition, i.e
org.w3c.dom.UserDataHandler#handle(short, String, Object, Node, Node)->void:::This method is called whenever the node for which this handler is registered is imported or cloned
