sun.jvm.hotspot.gc.parallel.ImmutableSpace#bottom()->Address::: immutable space bottom
sun.jvm.hotspot.gc.parallel.ImmutableSpace#end()->Address::: immutable space end
sun.jvm.hotspot.gc.parallel.ImmutableSpace#usedRegion()->MemRegion:::Returns a subregion of the space containing all the objects in       the space.
sun.jvm.hotspot.gc.parallel.ImmutableSpace#bottomAsOopHandle()->OopHandle:::Support for iteration over heap -- not sure how this will       interact with GC in reflective system, but necessary for the       debugging mechanism
sun.jvm.hotspot.gc.parallel.ImmutableSpace#getLiveRegions()->List:::returns all MemRegions where live objects are
sun.jvm.hotspot.gc.parallel.ImmutableSpace#capacity()->long:::Returned value is in bytes
sun.jvm.hotspot.gc.parallel.ImmutableSpace#used()->long::: immutable space used
sun.jvm.hotspot.gc.parallel.ImmutableSpace#contains(Address)->boolean:::Testers
sun.jvm.hotspot.gc.parallel.ImmutableSpace#print()->void::: immutable space print
sun.jvm.hotspot.gc.parallel.ImmutableSpace#printOn(PrintStream)->void::: immutable space print on
sun.jvm.hotspot.gc.parallel.MutableSpace#top()->Address::: mutable space top
sun.jvm.hotspot.gc.parallel.MutableSpace#used()->long:::In bytes
sun.jvm.hotspot.gc.parallel.MutableSpace#getLiveRegions()->List:::returns all MemRegions where live objects are
sun.jvm.hotspot.gc.parallel.MutableSpace#printOn(PrintStream)->void::: mutable space print on
sun.jvm.hotspot.gc.parallel.ParallelScavengeHeap#youngGen()->PSYoungGen::: parallel scavenge heap young gen
sun.jvm.hotspot.gc.parallel.ParallelScavengeHeap#oldGen()->PSOldGen::: parallel scavenge heap old gen
sun.jvm.hotspot.gc.parallel.ParallelScavengeHeap#capacity()->long::: parallel scavenge heap capacity
sun.jvm.hotspot.gc.parallel.ParallelScavengeHeap#used()->long::: parallel scavenge heap used
sun.jvm.hotspot.gc.parallel.ParallelScavengeHeap#isIn(Address)->boolean::: parallel scavenge heap is in
sun.jvm.hotspot.gc.parallel.ParallelScavengeHeap#kind()->CollectedHeapName::: parallel scavenge heap kind
sun.jvm.hotspot.gc.parallel.ParallelScavengeHeap#printOn(PrintStream)->void::: parallel scavenge heap print on
sun.jvm.hotspot.gc.parallel.PSOldGen#objectSpace()->MutableSpace::: old gen object space
sun.jvm.hotspot.gc.parallel.PSOldGen#capacity()->long::: old gen capacity
sun.jvm.hotspot.gc.parallel.PSOldGen#used()->long::: old gen used
sun.jvm.hotspot.gc.parallel.PSOldGen#isIn(Address)->boolean::: old gen is in
sun.jvm.hotspot.gc.parallel.PSOldGen#printOn(PrintStream)->void::: old gen print on
sun.jvm.hotspot.gc.parallel.PSYoungGen#edenSpace()->MutableSpace::: young gen eden space
sun.jvm.hotspot.gc.parallel.PSYoungGen#fromSpace()->MutableSpace::: young gen from space
sun.jvm.hotspot.gc.parallel.PSYoungGen#toSpace()->MutableSpace::: young gen to space
sun.jvm.hotspot.gc.parallel.PSYoungGen#capacity()->long::: young gen capacity
sun.jvm.hotspot.gc.parallel.PSYoungGen#used()->long::: young gen used
sun.jvm.hotspot.gc.parallel.PSYoungGen#isIn(Address)->boolean::: young gen is in
sun.jvm.hotspot.gc.parallel.PSYoungGen#printOn(PrintStream)->void::: young gen print on
