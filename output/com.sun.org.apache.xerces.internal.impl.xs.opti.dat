AttrImpl#getSchemaTypeInfo():::Method getSchemaTypeInfo.:::return
AttrImpl#toString():::NON-DOM method for debugging convenience:::return->getName->getValue
DefaultDocument#getXmlStandalone():::An attribute specifying, as part of the XML declaration, whether this document is standalone:::throw->new->DOMException
DefaultDocument#setXmlStandalone(boolean):::An attribute specifying, as part of the XML declaration, whether this document is standalone:::throw->new->DOMException
DefaultDocument#getXmlVersion():::An attribute specifying, as part of the XML declaration, the version number of this document:::return
DefaultDocument#setXmlVersion(String):::An attribute specifying, as part of the XML declaration, the version number of this document:::throw->new->DOMException
DefaultDocument#getStrictErrorChecking():::An attribute specifying whether errors checking is enforced or not:::return
DefaultDocument#setStrictErrorChecking(boolean):::An attribute specifying whether errors checking is enforced or not:::throw->new->DOMException
DefaultDocument#getDocumentURI():::The location of the document or null if undefined:::return
DefaultDocument#setDocumentURI(String):::The location of the document or null if undefined:::
DefaultDocument#adoptNode(Node):::DOM Level 3:::throw->new->DOMException
DefaultDocument#normalizeDocument():::DOM Level 3:::throw->new->DOMException
DefaultDocument#getDomConfig()::: The configuration used when Document.normalizeDocument is invoked.:::throw->new->DOMException
DefaultDocument#renameNode(Node, String, String):::DOM Level 3:::throw->new->DOMException
DefaultNode#getBaseURI():::DOM Level 3:::return
DefaultText#getData():::The character data of the node that implements this interface:::return
DefaultText#setData(String):::The character data of the node that implements this interface:::throw->new->DOMException
DefaultText#getLength():::The number of 16-bit units that are available through data and the substringData method below:::return
DefaultText#substringData(int, int):::Extracts a range of data from the node.:::throw->new->DOMException
DefaultText#appendData(String):::Append the string to the end of the character data of the node:::throw->new->DOMException
DefaultText#insertData(int, String):::Insert a string at the specified 16-bit unit offset.:::throw->new->DOMException
DefaultText#deleteData(int, int):::Remove a range of 16-bit units from the node:::throw->new->DOMException
DefaultText#replaceData(int, int, String):::Replace the characters starting at the specified 16-bit unit offset with the specified string.:::throw->new->DOMException
DefaultText#splitText(int):::Breaks this node into two nodes at the specified offset, keeping both in the tree as siblings:::throw->new->DOMException
DefaultText#isElementContentWhitespace():::DOM Level 3 CR:::throw->new->DOMException
DefaultXMLDocumentHandler#startDocument(XMLLocator, String, NamespaceContext, Augmentations):::The start of the document.:::
DefaultXMLDocumentHandler#xmlDecl(String, String, String, Augmentations):::Notifies of the presence of an XMLDecl line in the document:::
DefaultXMLDocumentHandler#doctypeDecl(String, String, String, Augmentations):::Notifies of the presence of the DOCTYPE line in the document.:::
DefaultXMLDocumentHandler#comment(XMLString, Augmentations):::A comment.:::
DefaultXMLDocumentHandler#processingInstruction(String, XMLString, Augmentations):::A processing instruction:::
DefaultXMLDocumentHandler#startPrefixMapping(String, String, Augmentations):::The start of a namespace prefix mapping:::
DefaultXMLDocumentHandler#startElement(QName, XMLAttributes, Augmentations):::The start of an element.:::
DefaultXMLDocumentHandler#emptyElement(QName, XMLAttributes, Augmentations):::An empty element.:::
DefaultXMLDocumentHandler#startGeneralEntity(String, XMLResourceIdentifier, String, Augmentations):::This method notifies the start of a general entity:::
DefaultXMLDocumentHandler#textDecl(String, String, Augmentations):::Notifies of the presence of a TextDecl line in an entity:::
DefaultXMLDocumentHandler#endGeneralEntity(String, Augmentations):::This method notifies the end of a general entity:::
DefaultXMLDocumentHandler#characters(XMLString, Augmentations):::Character content.:::
DefaultXMLDocumentHandler#ignorableWhitespace(XMLString, Augmentations):::Ignorable whitespace:::
DefaultXMLDocumentHandler#endElement(QName, Augmentations):::The end of an element.:::
DefaultXMLDocumentHandler#endPrefixMapping(String, Augmentations):::The end of a namespace prefix mapping:::
DefaultXMLDocumentHandler#startCDATA(Augmentations):::The start of a CDATA section.:::
DefaultXMLDocumentHandler#endCDATA(Augmentations):::The end of a CDATA section.:::
DefaultXMLDocumentHandler#endDocument(Augmentations):::The end of the document.:::
DefaultXMLDocumentHandler#startDTD(XMLLocator, Augmentations):::The start of the DTD.:::
DefaultXMLDocumentHandler#startParameterEntity(String, XMLResourceIdentifier, String, Augmentations):::This method notifies of the start of a parameter entity:::
DefaultXMLDocumentHandler#endParameterEntity(String, Augmentations):::This method notifies the end of a parameter entity:::
DefaultXMLDocumentHandler#startExternalSubset(XMLResourceIdentifier, Augmentations):::The start of the DTD external subset.:::
DefaultXMLDocumentHandler#endExternalSubset(Augmentations):::The end of the DTD external subset.:::
DefaultXMLDocumentHandler#elementDecl(String, String, Augmentations):::An element declaration.:::
DefaultXMLDocumentHandler#startAttlist(String, Augmentations):::The start of an attribute list.:::
DefaultXMLDocumentHandler#attributeDecl(String, String, String, String[], String, XMLString, XMLString, Augmentations):::An attribute declaration.:::
DefaultXMLDocumentHandler#endAttlist(Augmentations):::The end of an attribute list.:::
DefaultXMLDocumentHandler#internalEntityDecl(String, XMLString, XMLString, Augmentations):::An internal entity declaration.:::
DefaultXMLDocumentHandler#externalEntityDecl(String, XMLResourceIdentifier, Augmentations):::An external entity declaration.:::
DefaultXMLDocumentHandler#unparsedEntityDecl(String, XMLResourceIdentifier, String, Augmentations):::An unparsed entity declaration.:::
DefaultXMLDocumentHandler#notationDecl(String, XMLResourceIdentifier, Augmentations):::A notation declaration:::
DefaultXMLDocumentHandler#startConditional(short, Augmentations):::The start of a conditional section.:::
DefaultXMLDocumentHandler#ignoredCharacters(XMLString, Augmentations):::Characters within an IGNORE conditional section.:::
DefaultXMLDocumentHandler#endConditional(Augmentations):::The end of a conditional section.:::
DefaultXMLDocumentHandler#endDTD(Augmentations):::The end of the DTD.:::
DefaultXMLDocumentHandler#startContentModel(String, Augmentations):::The start of a content model:::
DefaultXMLDocumentHandler#any(Augmentations):::A content model of ANY.:::
DefaultXMLDocumentHandler#empty(Augmentations):::A content model of EMPTY.:::
DefaultXMLDocumentHandler#startGroup(Augmentations):::A start of either a mixed or children content model:::
DefaultXMLDocumentHandler#pcdata(Augmentations):::The appearance of "#PCDATA" within a group signifying a mixed content model:::
DefaultXMLDocumentHandler#element(String, Augmentations):::A referenced element in a mixed or children content model.:::
DefaultXMLDocumentHandler#separator(short, Augmentations):::The separator between choices or sequences of a mixed or children content model.:::
DefaultXMLDocumentHandler#occurrence(short, Augmentations):::The occurrence count for a child in a children content model or for the mixed content model group.:::
DefaultXMLDocumentHandler#endGroup(Augmentations):::The end of a group for mixed or children content models.:::
DefaultXMLDocumentHandler#endContentModel(Augmentations):::The end of a content model.:::
DefaultXMLDocumentHandler#setDocumentSource(XMLDocumentSource):::Sets the document source.:::
DefaultXMLDocumentHandler#getDocumentSource():::Returns the document source.:::return
ElementImpl#getLineNumber():::Returns the line number.:::return
ElementImpl#getColumnNumber():::Returns the column number.:::return
ElementImpl#getCharacterOffset():::Returns the character offset.:::return
SchemaDOMImplementation#getDOMImplementation():::NON-DOM: Obtain and return the single shared object:::return
SchemaDOMParser#endDocument(Augmentations):::The end of the document.:::
SchemaDOMParser#comment(XMLString, Augmentations):::A comment.:::if->schemaDOM->comment
SchemaDOMParser#processingInstruction(String, XMLString, Augmentations):::A processing instruction:::if->schemaDOM->processingInstruction
SchemaDOMParser#characters(XMLString, Augmentations):::Character content.:::if->for->i->else->schemaDOM->characters
SchemaDOMParser#startElement(QName, XMLAttributes, Augmentations):::The start of an element.:::if->if->if->if->fSawAnnotation->size->fSawAnnotation->pop->fSawAnnotation->push->schemaDOM->startAnnotation->schemaDOM->fLocator->getLineNumber->fLocator->getColumnNumber->fLocator->getCharacterOffset->startElement->return->else->if->fSawAnnotation->push->fHasNonSchemaAttributes->hasNonSchemaAttributes->push->else->if->schemaDOM->startAnnotationElement->else->schemaDOM->startAnnotationElement->return->schemaDOM->fLocator->getLineNumber->fLocator->getColumnNumber->fLocator->getCharacterOffset->startElement
SchemaDOMParser#emptyElement(QName, XMLAttributes, Augmentations):::An empty element.:::if->hasNonSchemaAttributes->schemaDOM->fLocator->getLineNumber->fLocator->getColumnNumber->fLocator->getCharacterOffset->startElement->attributes->removeAllAttributes->schemaPrefix->fNamespaceContext->getPrefix->annRawName->schemaPrefix->length->schemaDOM->startAnnotation->elemRawName->schemaPrefix->length->schemaDOM->startAnnotationElement->schemaDOM->charactersRaw->schemaDOM->endSyntheticAnnotationElement->schemaDOM->endSyntheticAnnotationElement->schemaDOM->endElement->return->if->if->schemaDOM->startAnnotation->else->schemaDOM->startAnnotationElement->newElem->schemaDOM->fLocator->getLineNumber->fLocator->getColumnNumber->fLocator->getCharacterOffset->emptyElement->if->if->schemaDOM->endAnnotation->else->schemaDOM->endAnnotationElement
SchemaDOMParser#endElement(QName, Augmentations):::The end of an element.:::if->if->schemaDOM->endAnnotationElement->schemaDOM->endElement->else->if->schemaDOM->endAnnotation->schemaDOM->endElement->else->schemaDOM->endAnnotationElement->else->if->value->fHasNonSchemaAttributes->pop->sawann->fSawAnnotation->pop->if->schemaPrefix->fNamespaceContext->getPrefix->annRawName->schemaPrefix->length->schemaDOM->startAnnotation->elemRawName->schemaPrefix->length->schemaDOM->startAnnotationElement->schemaDOM->charactersRaw->schemaDOM->endSyntheticAnnotationElement->schemaDOM->endSyntheticAnnotationElement->schemaDOM->endElement
SchemaDOMParser#ignorableWhitespace(XMLString, Augmentations):::Ignorable whitespace:::if->schemaDOM->characters
SchemaDOMParser#startCDATA(Augmentations):::The start of a CDATA section.:::if->schemaDOM->startAnnotationCDATA
SchemaDOMParser#endCDATA(Augmentations):::The end of a CDATA section.:::if->schemaDOM->endAnnotationCDATA
SchemaDOMParser#getDocument():::Returns the DOM document object.:::return
SchemaDOMParser#setFeature(String, boolean):::Delegates to SchemaParsingConfig.setFeature:::config->setFeature
SchemaDOMParser#getFeature(String):::Delegates to SchemaParsingConfig.getFeature:::return->config->getFeature
SchemaDOMParser#setProperty(String, Object):::Delegates to SchemaParsingConfig.setProperty.:::config->setProperty
SchemaDOMParser#getProperty(String):::Delegates to SchemaParsingConfig.getProperty.:::return->config->getProperty
SchemaDOMParser#setEntityResolver(XMLEntityResolver):::Delegates to SchemaParsingConfig.setEntityResolver.:::config->setEntityResolver
SchemaDOMParser#parse(XMLInputSource):::Delegates parsing to SchemaParsingConfig:::config->parse
SchemaDOMParser#reset():::Reset SchemaParsingConfig:::reset
SchemaDOMParser#resetNodePool():::ResetNodePool on SchemaParsingConfig:::resetNodePool
SchemaParsingConfig#getFeatureState(String):::Returns the state of a feature.:::if->featureId->equals->return->FeatureState->is->return->super->getFeatureState
SchemaParsingConfig#setFeature(String, boolean):::Set the state of a feature:::fNamespaceScanner->setFeature->fDTDScanner->setFeature->if->try->fXML11DTDScanner->setFeature->catch->finally->try->fXML11NSDocScanner->setFeature->catch->finally->super->setFeature
SchemaParsingConfig#getPropertyState(String):::Returns the value of a property.:::if->LOCALE->equals->return->PropertyState->getLocale->is->return->super->getPropertyState
SchemaParsingConfig#setProperty(String, Object):::setProperty:::if->LOCALE->equals->setLocale->fNamespaceScanner->setProperty->fDTDScanner->setProperty->if->try->fXML11DTDScanner->setProperty->catch->finally->try->fXML11NSDocScanner->setProperty->catch->finally->super->setProperty
SchemaParsingConfig#setLocale(Locale):::Set the locale to use for messages.:::super->setLocale->fErrorReporter->setLocale
SchemaParsingConfig#setInputSource(XMLInputSource):::Sets the input source for the document to parse.:::
SchemaParsingConfig#parse(boolean):::Parses the document in a pull parsing fashion.:::if->try->fValidationManager->reset->fVersionDetector->reset->reset->version->fVersionDetector->determineDocVersion->if->configurePipeline->resetXML10->else->if->initXML11Components->configureXML11Pipeline->resetXML11->else->return->fVersionDetector->startDocumentParsing->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->try->return->fCurrentScanner->scanDocument->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally
SchemaParsingConfig#cleanup():::If the application decides to terminate parsing before the xml document is fully parsed, the application should call this method to free any resource allocated during parsing:::fEntityManager->closeReaders
SchemaParsingConfig#parse(XMLInputSource):::Parses the specified input source.:::if->throw->new->XNIException->try->setInputSource->parse->catch->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->if->ex->printStackTrace->throw->new->XNIException->finally->this->cleanup
SchemaParsingConfig#reset():::Reset all components before parsing.:::super->reset
SchemaParsingConfig#configurePipeline():::Configures the XML 1.0 pipeline.:::if->setProperty->if->setProperty->fNamespaceScanner->setDocumentHandler->if->fDocumentHandler->setDocumentSource->if->setProperty->fDTDScanner->setDTDHandler->if->fDTDHandler->setDTDSource->fDTDScanner->setDTDContentModelHandler->if->fDTDContentModelHandler->setDTDContentModelSource
SchemaParsingConfig#configureXML11Pipeline():::Configures the XML 1.1 pipeline.:::if->setProperty->if->setProperty->fXML11NSDocScanner->setDocumentHandler->if->fDocumentHandler->setDocumentSource->if->setProperty->fXML11DTDScanner->setDTDHandler->if->fDTDHandler->setDTDSource->fXML11DTDScanner->setDTDContentModelHandler->if->fDTDContentModelHandler->setDTDContentModelSource
SchemaParsingConfig#checkFeature(String):::Check a feature:::if->featureId->startsWith->suffixLength->featureId->length->length->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->if->length->featureId->endsWith->return->return->super->checkFeature
SchemaParsingConfig#checkProperty(String):::Check a property:::if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->if->propertyId->startsWith->suffixLength->propertyId->length->length->if->length->propertyId->endsWith->return->return->super->checkProperty
SchemaParsingConfig#resetXML10():::Reset all XML 1.0 components before parsing:::fNamespaceScanner->reset->fDTDScanner->reset
SchemaParsingConfig#resetXML11():::Reset all XML 1.1 components before parsing:::fXML11NSDocScanner->reset->fXML11DTDScanner->reset
TextImpl#getData():::The character data of the node that implements this interface:::return
TextImpl#getLength():::The number of 16-bit units that are available through data and the substringData method below:::if->return->return->fData->length
TextImpl#substringData(int, int):::Extracts a range of data from the node.:::if->return->if->fData->length->throw->new->DOMException->if->fData->length->return->fData->substring->return->fData->substring
